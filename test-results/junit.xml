<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="27" failures="1" errors="0" time="0.634">
  <testsuite name="AuthService" errors="0" failures="1" skipped="26" timestamp="2025-06-20T21:24:03" time="0.31" tests="27">
    <testcase classname="AuthService › parseTimeStringToSeconds" name="should parse seconds correctly" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › parseTimeStringToSeconds" name="should parse minutes correctly" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › parseTimeStringToSeconds" name="should parse hours correctly" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › parseTimeStringToSeconds" name="should parse days correctly" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › parseTimeStringToSeconds" name="should return 0 for invalid input" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › parseTimeStringToSeconds" name="should handle edge cases" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › authenticateUser" name="should authenticate valid user credentials" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › authenticateUser" name="should reject invalid email" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › authenticateUser" name="should reject invalid password" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › authenticateUser" name="should reject inactive user" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › authenticateUser" name="should handle database errors gracefully" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › authenticateUser" name="should handle bcrypt errors gracefully" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › generateToken" name="should generate JWT token" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › verifyToken" name="should verify valid token from cache" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › verifyToken" name="should verify valid token and cache result" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › verifyToken" name="should throw error for invalid token" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › verifyToken" name="should throw error for expired token" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › getUserFromDecodedPayload" name="should return user from cache" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › getUserFromDecodedPayload" name="should return user from database and cache it" time="0.064">
      <failure>Error: getUserFromDecodedPayload returned null. Mock calls: 0, Prisma mock calls: 0, Error: none
    at Object.&lt;anonymous&gt; (/Users/sachin/Documents/md-sports-/tests/unit/authService.test.ts:477:15)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="AuthService › getUserFromDecodedPayload" name="should return null for null payload" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › getUserFromDecodedPayload" name="should return null for invalid payload" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › getUserFromDecodedPayload" name="should return null when user not found" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › getUserFromToken" name="should return user from valid token" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › getUserFromToken" name="should throw error for invalid token" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › Error Handling" name="should handle missing JWT_SECRET" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › Error Handling" name="should handle malformed tokens gracefully" time="0">
      <skipped/>
    </testcase>
    <testcase classname="AuthService › Error Handling" name="should handle empty token" time="0">
      <skipped/>
    </testcase>
  </testsuite>
</testsuites>