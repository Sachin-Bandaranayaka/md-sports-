<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="525" failures="36" errors="0" time="3.268">
  <testsuite name="Service Layer Tests" errors="0" failures="20" skipped="0" timestamp="2025-06-19T17:44:11" time="0.711" tests="27">
    <testcase classname="Service Layer Tests › ProductService › getAllProducts" name="should fetch all active products successfully" time="0.007">
      <failure>Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)

Expected: {&quot;where&quot;: {&quot;isActive&quot;: true}}

Number of calls: 0
    at Object.toHaveBeenCalledWith (/Users/sachin/Documents/md-sports-/tests/unit/services.test.ts:66:37)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Service Layer Tests › ProductService › getAllProducts" name="should handle database errors gracefully" time="0.001">
      <failure>Error: expect(received).rejects.toThrow()

Received promise resolved instead of rejected
Resolved to value: undefined
    at expect (/Users/sachin/Documents/md-sports-/node_modules/expect/build/index.js:113:15)
    at Object.expect (/Users/sachin/Documents/md-sports-/tests/unit/services.test.ts:77:15)
    at Promise.then.completed (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Service Layer Tests › ProductService › getAllProducts" name="should return empty array when no products found" time="0.002">
      <failure>Error: expect(received).toEqual(expected) // deep equality

Expected: []
Received: undefined
    at Object.toEqual (/Users/sachin/Documents/md-sports-/tests/unit/services.test.ts:86:24)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Service Layer Tests › ProductService › getProductById" name="should fetch product by id successfully" time="0.001">
      <failure>TypeError: _models.Product.findOne is not a function
    at Object.findOne [as getProductById] (/Users/sachin/Documents/md-sports-/src/services/productService.ts:23:34)
    at Object.getProductById (/Users/sachin/Documents/md-sports-/tests/unit/services.test.ts:95:45)
    at Promise.then.completed (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Service Layer Tests › ProductService › getProductById" name="should return null for non-existent product" time="0.002">
      <failure>TypeError: _models.Product.findOne is not a function
    at Object.findOne [as getProductById] (/Users/sachin/Documents/md-sports-/src/services/productService.ts:23:34)
    at Object.getProductById (/Users/sachin/Documents/md-sports-/tests/unit/services.test.ts:106:45)
    at Promise.then.completed (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Service Layer Tests › ProductService › getProductById" name="should handle database errors" time="0.045">
      <failure>Error: expect(received).rejects.toThrow(expected)

Expected substring: &quot;Product not found&quot;
Received message:   &quot;_models.Product.findOne is not a function&quot;

      21 |     getProductById: async (id: number) =&gt; {
      22 |         try {
    &gt; 23 |             return await Product.findOne({
         |                                  ^
      24 |                 where: { id, isActive: true }
      25 |             });
      26 |         } catch (error) {

      at Object.findOne [as getProductById] (src/services/productService.ts:23:34)
      at Object.getProductById (tests/unit/services.test.ts:115:37)
    at Object.toThrow (/Users/sachin/Documents/md-sports-/node_modules/expect/build/index.js:218:22)
    at Object.toThrow (/Users/sachin/Documents/md-sports-/tests/unit/services.test.ts:115:64)
    at Promise.then.completed (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Service Layer Tests › ProductService › createProduct" name="should create a new product successfully" time="0.002">
      <failure>Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)

Expected: {&quot;costPrice&quot;: 75, &quot;description&quot;: &quot;New Description&quot;, &quot;name&quot;: &quot;New Product&quot;, &quot;price&quot;: 149.99, &quot;sku&quot;: &quot;NEW-001&quot;}

Number of calls: 0
    at Object.toHaveBeenCalledWith (/Users/sachin/Documents/md-sports-/tests/unit/services.test.ts:134:36)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Service Layer Tests › ProductService › createProduct" name="should handle validation errors" time="0">
      <failure>Error: expect(received).rejects.toThrow()

Received promise resolved instead of rejected
Resolved to value: undefined
    at expect (/Users/sachin/Documents/md-sports-/node_modules/expect/build/index.js:113:15)
    at Object.expect (/Users/sachin/Documents/md-sports-/tests/unit/services.test.ts:142:15)
    at Promise.then.completed (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Service Layer Tests › ProductService › createProduct" name="should handle duplicate SKU errors" time="0.001">
      <failure>Error: expect(received).rejects.toThrow()

Received promise resolved instead of rejected
Resolved to value: undefined
    at expect (/Users/sachin/Documents/md-sports-/node_modules/expect/build/index.js:113:15)
    at Object.expect (/Users/sachin/Documents/md-sports-/tests/unit/services.test.ts:151:15)
    at Promise.then.completed (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Service Layer Tests › ProductService › updateProduct" name="should update product successfully" time="0.001">
      <failure>Error: Product with ID 1 not found
    at Object.updateProduct (/Users/sachin/Documents/md-sports-/src/services/productService.ts:52:23)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at Object.&lt;anonymous&gt; (/Users/sachin/Documents/md-sports-/tests/unit/services.test.ts:164:24)</failure>
    </testcase>
    <testcase classname="Service Layer Tests › ProductService › updateProduct" name="should throw error for non-existent product" time="0.001">
    </testcase>
    <testcase classname="Service Layer Tests › ProductService › updateProduct" name="should handle database update errors" time="0.003">
      <failure>Error: expect(received).rejects.toThrow(expected)

Expected substring: &quot;Update failed&quot;
Received message:   &quot;Product with ID 1 not found&quot;

      50 |
      51 |             if (!product) {
    &gt; 52 |                 throw new Error(`Product with ID ${id} not found`);
         |                       ^
      53 |             }
      54 |
      55 |             return await product.update(productData);

      at Object.updateProduct (src/services/productService.ts:52:23)
      at Object.&lt;anonymous&gt; (tests/unit/services.test.ts:189:9)
    at Object.toThrow (/Users/sachin/Documents/md-sports-/node_modules/expect/build/index.js:218:22)
    at Object.toThrow (/Users/sachin/Documents/md-sports-/tests/unit/services.test.ts:189:84)
    at Promise.then.completed (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Service Layer Tests › ProductService › deleteProduct" name="should soft delete product successfully" time="0">
      <failure>Error: Product with ID 1 not found
    at Object.deleteProduct (/Users/sachin/Documents/md-sports-/src/services/productService.ts:70:23)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at Object.&lt;anonymous&gt; (/Users/sachin/Documents/md-sports-/tests/unit/services.test.ts:201:24)</failure>
    </testcase>
    <testcase classname="Service Layer Tests › ProductService › deleteProduct" name="should throw error for non-existent product" time="0">
    </testcase>
    <testcase classname="Service Layer Tests › AuditService › logAction" name="should log audit action successfully" time="0.001">
    </testcase>
    <testcase classname="Service Layer Tests › AuditService › logAction" name="should handle audit logging errors gracefully" time="0.001">
    </testcase>
    <testcase classname="Service Layer Tests › RefreshTokenService › generateRefreshToken" name="should generate refresh token successfully" time="0.007">
      <failure>Error: Failed to generate refresh token
    at Object.generateRefreshToken (/Users/sachin/Documents/md-sports-/src/services/refreshTokenService.ts:72:15)
    at Object.generateRefreshToken (/Users/sachin/Documents/md-sports-/tests/unit/services.test.ts:298:50)
    at Promise.then.completed (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Service Layer Tests › RefreshTokenService › generateRefreshToken" name="should handle creation errors" time="0.004">
      <failure>Error: expect(received).rejects.toThrow(expected)

Expected substring: &quot;Token creation failed&quot;
Received message:   &quot;Failed to generate refresh token&quot;

      70 |             console.error(&apos;Error stack:&apos;, error.stack);
      71 |         }
    &gt; 72 |         throw new Error(&apos;Failed to generate refresh token&apos;);
         |               ^
      73 |     }
      74 | };
      75 |

      at Object.generateRefreshToken (src/services/refreshTokenService.ts:72:15)
      at Object.generateRefreshToken (tests/unit/services.test.ts:314:42)
    at Object.toThrow (/Users/sachin/Documents/md-sports-/node_modules/expect/build/index.js:218:22)
    at Object.toThrow (/Users/sachin/Documents/md-sports-/tests/unit/services.test.ts:314:75)
    at Promise.then.completed (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Service Layer Tests › RefreshTokenService › verifyRefreshToken" name="should verify valid refresh token" time="0.001">
      <failure>Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)

Expected: {&quot;where&quot;: {&quot;token&quot;: &quot;refresh-token-123&quot;}}

Number of calls: 0
    at Object.toHaveBeenCalledWith (/Users/sachin/Documents/md-sports-/tests/unit/services.test.ts:324:52)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Service Layer Tests › RefreshTokenService › verifyRefreshToken" name="should return null for invalid token" time="0">
    </testcase>
    <testcase classname="Service Layer Tests › RefreshTokenService › verifyRefreshToken" name="should return null for expired token" time="0">
    </testcase>
    <testcase classname="Service Layer Tests › RefreshTokenService › revokeRefreshToken" name="should revoke refresh token successfully" time="0.001">
      <failure>Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)

Expected: {&quot;data&quot;: {&quot;isRevoked&quot;: true}, &quot;where&quot;: {&quot;token&quot;: &quot;refresh-token-123&quot;}}

Number of calls: 0
    at Object.toHaveBeenCalledWith (/Users/sachin/Documents/md-sports-/tests/unit/services.test.ts:358:52)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Service Layer Tests › RefreshTokenService › revokeRefreshToken" name="should handle errors gracefully" time="0.001">
    </testcase>
    <testcase classname="Service Layer Tests › RefreshTokenService › revokeAllUserRefreshTokens" name="should revoke all tokens for user" time="0.002">
      <failure>Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)

Expected: {&quot;data&quot;: {&quot;isRevoked&quot;: true}, &quot;where&quot;: {&quot;userId&quot;: 1}}

Number of calls: 0
    at Object.toHaveBeenCalledWith (/Users/sachin/Documents/md-sports-/tests/unit/services.test.ts:380:52)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Service Layer Tests › RefreshTokenService › cleanupRefreshTokens" name="should cleanup expired tokens" time="0.001">
      <failure>Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)

Expected: {&quot;where&quot;: {&quot;OR&quot;: [{&quot;expiresAt&quot;: {&quot;lt&quot;: Any&lt;Date&gt;}}, {&quot;isRevoked&quot;: true}]}}

Number of calls: 0
    at Object.toHaveBeenCalledWith (/Users/sachin/Documents/md-sports-/tests/unit/services.test.ts:394:52)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Service Layer Tests › Service Integration Tests" name="should handle service dependencies correctly" time="0">
      <failure>TypeError: Cannot read properties of undefined (reading &apos;id&apos;)
    at Object.id (/Users/sachin/Documents/md-sports-/tests/unit/services.test.ts:440:27)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Service Layer Tests › Service Integration Tests" name="should handle service error propagation" time="0.001">
      <failure>Error: expect(received).rejects.toThrow()

Received promise resolved instead of rejected
Resolved to value: undefined
    at expect (/Users/sachin/Documents/md-sports-/node_modules/expect/build/index.js:113:15)
    at Object.expect (/Users/sachin/Documents/md-sports-/tests/unit/services.test.ts:454:13)
    at Promise.then.completed (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
  </testsuite>
  <testsuite name="AuthService" errors="0" failures="16" skipped="0" timestamp="2025-06-19T17:44:11" time="0.787" tests="27">
    <testcase classname="AuthService › parseTimeStringToSeconds" name="should parse seconds correctly" time="0.006">
    </testcase>
    <testcase classname="AuthService › parseTimeStringToSeconds" name="should parse minutes correctly" time="0">
    </testcase>
    <testcase classname="AuthService › parseTimeStringToSeconds" name="should parse hours correctly" time="0.002">
    </testcase>
    <testcase classname="AuthService › parseTimeStringToSeconds" name="should parse days correctly" time="0.001">
    </testcase>
    <testcase classname="AuthService › parseTimeStringToSeconds" name="should return 0 for invalid input" time="0.002">
    </testcase>
    <testcase classname="AuthService › parseTimeStringToSeconds" name="should handle edge cases" time="0.001">
    </testcase>
    <testcase classname="AuthService › authenticateUser" name="should authenticate valid user credentials" time="0.075">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: true
Received: false
    at Object.toBe (/Users/sachin/Documents/md-sports-/tests/unit/authService.test.ts:148:30)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="AuthService › authenticateUser" name="should reject invalid email" time="0.007">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: &quot;Invalid email or password&quot;
Received: &quot;Authentication failed&quot;
    at Object.toBe (/Users/sachin/Documents/md-sports-/tests/unit/authService.test.ts:183:30)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="AuthService › authenticateUser" name="should reject invalid password" time="0.002">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: &quot;Invalid email or password&quot;
Received: &quot;Authentication failed&quot;
    at Object.toBe (/Users/sachin/Documents/md-sports-/tests/unit/authService.test.ts:193:30)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="AuthService › authenticateUser" name="should reject inactive user" time="0.002">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: &quot;Invalid email or password&quot;
Received: &quot;Authentication failed&quot;
    at Object.toBe (/Users/sachin/Documents/md-sports-/tests/unit/authService.test.ts:202:30)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="AuthService › authenticateUser" name="should handle database errors gracefully" time="0.001">
    </testcase>
    <testcase classname="AuthService › authenticateUser" name="should handle bcrypt errors gracefully" time="0.001">
    </testcase>
    <testcase classname="AuthService › generateToken" name="should generate JWT token" time="0.012">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: &quot;mock-jwt-token&quot;
Received: &quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsInVzZXJuYW1lIjoidGVzdHVzZXIiLCJlbWFpbCI6InRlc3RAZXhhbXBsZS5jb20iLCJyb2xlSWQiOjEsInNob3BJZCI6MSwicGVybWlzc2lvbnMiOlsicmVhZF9wcm9kdWN0cyIsIndyaXRlX3Byb2R1Y3RzIl0sImlhdCI6MTc1MDM1NTA1MiwiZXhwIjoxNzUwMzk4MjUyfQ.NqkX7-swWsJGloaHd8SyBj1VLWrKyXRdozAl0wqAG9Y&quot;
    at Object.toBe (/Users/sachin/Documents/md-sports-/tests/unit/authService.test.ts:241:22)
    at Promise.then.completed (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="AuthService › verifyToken" name="should verify valid token from cache" time="0.001">
      <failure>TypeError: Cannot read properties of undefined (reading &apos;generateKey&apos;)
    at generateKey (/Users/sachin/Documents/md-sports-/src/services/authService.ts:161:35)
    at Object.&lt;anonymous&gt; (/Users/sachin/Documents/md-sports-/tests/unit/authService.test.ts:263:39)
    at Promise.then.completed (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="AuthService › verifyToken" name="should verify valid token and cache result" time="0.001">
      <failure>TypeError: Cannot read properties of undefined (reading &apos;generateKey&apos;)
    at generateKey (/Users/sachin/Documents/md-sports-/src/services/authService.ts:161:35)
    at Object.&lt;anonymous&gt; (/Users/sachin/Documents/md-sports-/tests/unit/authService.test.ts:282:39)
    at Promise.then.completed (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="AuthService › verifyToken" name="should throw error for invalid token" time="0.045">
      <failure>Error: expect(received).rejects.toThrow(expected)

Expected substring: &quot;Invalid token&quot;
Received message:   &quot;Cannot read properties of undefined (reading &apos;generateKey&apos;)&quot;

      159 |  */
      160 | export const verifyToken = async (token: string) =&gt; {
    &gt; 161 |     const tokenKey = cacheService.generateKey(CACHE_CONFIG.KEYS.TOKEN_VALIDATION, { token: token.substring(0, 20) });
          |                                   ^
      162 |
      163 |     try {
      164 |         // Check cache first for token validation result

      at generateKey (src/services/authService.ts:161:35)
      at Object.&lt;anonymous&gt; (tests/unit/authService.test.ts:295:31)
    at Object.toThrow (/Users/sachin/Documents/md-sports-/node_modules/expect/build/index.js:218:22)
    at Object.toThrow (/Users/sachin/Documents/md-sports-/tests/unit/authService.test.ts:295:58)
    at Promise.then.completed (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="AuthService › verifyToken" name="should throw error for expired token" time="0.012">
      <failure>Error: expect(received).rejects.toThrow(expected)

Expected substring: &quot;Token expired&quot;
Received message:   &quot;Cannot read properties of undefined (reading &apos;generateKey&apos;)&quot;

      159 |  */
      160 | export const verifyToken = async (token: string) =&gt; {
    &gt; 161 |     const tokenKey = cacheService.generateKey(CACHE_CONFIG.KEYS.TOKEN_VALIDATION, { token: token.substring(0, 20) });
          |                                   ^
      162 |
      163 |     try {
      164 |         // Check cache first for token validation result

      at generateKey (src/services/authService.ts:161:35)
      at Object.&lt;anonymous&gt; (tests/unit/authService.test.ts:307:31)
    at Object.toThrow (/Users/sachin/Documents/md-sports-/node_modules/expect/build/index.js:218:22)
    at Object.toThrow (/Users/sachin/Documents/md-sports-/tests/unit/authService.test.ts:307:58)
    at Promise.then.completed (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="AuthService › getUserFromDecodedPayload" name="should return user from cache" time="0.001">
      <failure>TypeError: Cannot read properties of undefined (reading &apos;generateKey&apos;)
    at generateKey (/Users/sachin/Documents/md-sports-/src/services/authService.ts:255:35)
    at Object.&lt;anonymous&gt; (/Users/sachin/Documents/md-sports-/tests/unit/authService.test.ts:345:53)
    at Promise.then.completed (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="AuthService › getUserFromDecodedPayload" name="should return user from database and cache it" time="0">
      <failure>TypeError: Cannot read properties of undefined (reading &apos;generateKey&apos;)
    at generateKey (/Users/sachin/Documents/md-sports-/src/services/authService.ts:255:35)
    at Object.&lt;anonymous&gt; (/Users/sachin/Documents/md-sports-/tests/unit/authService.test.ts:362:53)
    at Promise.then.completed (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="AuthService › getUserFromDecodedPayload" name="should return null for null payload" time="0.001">
    </testcase>
    <testcase classname="AuthService › getUserFromDecodedPayload" name="should return null for invalid payload" time="0.001">
    </testcase>
    <testcase classname="AuthService › getUserFromDecodedPayload" name="should return null when user not found" time="0.001">
      <failure>TypeError: Cannot read properties of undefined (reading &apos;generateKey&apos;)
    at generateKey (/Users/sachin/Documents/md-sports-/src/services/authService.ts:255:35)
    at Object.&lt;anonymous&gt; (/Users/sachin/Documents/md-sports-/tests/unit/authService.test.ts:393:53)
    at Promise.then.completed (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="AuthService › getUserFromToken" name="should return user from valid token" time="0">
      <failure>TypeError: Cannot read properties of undefined (reading &apos;generateKey&apos;)
    at generateKey (/Users/sachin/Documents/md-sports-/src/services/authService.ts:161:35)
    at verifyToken (/Users/sachin/Documents/md-sports-/src/services/authService.ts:311:27)
    at Object.&lt;anonymous&gt; (/Users/sachin/Documents/md-sports-/tests/unit/authService.test.ts:428:44)
    at Promise.then.completed (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="AuthService › getUserFromToken" name="should throw error for invalid token" time="0.005">
      <failure>Error: expect(received).rejects.toThrow(expected)

Expected substring: &quot;Invalid token&quot;
Received message:   &quot;Cannot read properties of undefined (reading &apos;generateKey&apos;)&quot;

      159 |  */
      160 | export const verifyToken = async (token: string) =&gt; {
    &gt; 161 |     const tokenKey = cacheService.generateKey(CACHE_CONFIG.KEYS.TOKEN_VALIDATION, { token: token.substring(0, 20) });
          |                                   ^
      162 |
      163 |     try {
      164 |         // Check cache first for token validation result

      at generateKey (src/services/authService.ts:161:35)
      at verifyToken (src/services/authService.ts:311:27)
      at Object.&lt;anonymous&gt; (tests/unit/authService.test.ts:443:36)
    at Object.toThrow (/Users/sachin/Documents/md-sports-/node_modules/expect/build/index.js:218:22)
    at Object.toThrow (/Users/sachin/Documents/md-sports-/tests/unit/authService.test.ts:443:63)
    at Promise.then.completed (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="AuthService › Error Handling" name="should handle missing JWT_SECRET" time="0.001">
    </testcase>
    <testcase classname="AuthService › Error Handling" name="should handle malformed tokens gracefully" time="0.002">
      <failure>Error: expect(received).rejects.toThrow(expected)

Expected substring: &quot;jwt malformed&quot;
Received message:   &quot;Cannot read properties of undefined (reading &apos;generateKey&apos;)&quot;

      159 |  */
      160 | export const verifyToken = async (token: string) =&gt; {
    &gt; 161 |     const tokenKey = cacheService.generateKey(CACHE_CONFIG.KEYS.TOKEN_VALIDATION, { token: token.substring(0, 20) });
          |                                   ^
      162 |
      163 |     try {
      164 |         // Check cache first for token validation result

      at generateKey (src/services/authService.ts:161:35)
      at Object.&lt;anonymous&gt; (tests/unit/authService.test.ts:469:31)
    at Object.toThrow (/Users/sachin/Documents/md-sports-/node_modules/expect/build/index.js:218:22)
    at Object.toThrow (/Users/sachin/Documents/md-sports-/tests/unit/authService.test.ts:469:66)
    at Promise.then.completed (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="AuthService › Error Handling" name="should handle empty token" time="0.011">
      <failure>Error: expect(received).rejects.toThrow(expected)

Expected substring: &quot;jwt must be provided&quot;
Received message:   &quot;Cannot read properties of undefined (reading &apos;generateKey&apos;)&quot;

      159 |  */
      160 | export const verifyToken = async (token: string) =&gt; {
    &gt; 161 |     const tokenKey = cacheService.generateKey(CACHE_CONFIG.KEYS.TOKEN_VALIDATION, { token: token.substring(0, 20) });
          |                                   ^
      162 |
      163 |     try {
      164 |         // Check cache first for token validation result

      at generateKey (src/services/authService.ts:161:35)
      at Object.&lt;anonymous&gt; (tests/unit/authService.test.ts:478:31)
    at Object.toThrow (/Users/sachin/Documents/md-sports-/node_modules/expect/build/index.js:218:22)
    at Object.toThrow (/Users/sachin/Documents/md-sports-/tests/unit/authService.test.ts:478:45)
    at Promise.then.completed (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/sachin/Documents/md-sports-/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/sachin/Documents/md-sports-/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
  </testsuite>
  <testsuite name="Purchase Invoices Integration Tests" errors="0" failures="0" skipped="0" timestamp="2025-06-19T17:44:12" time="0.123" tests="22">
    <testcase classname="Purchase Invoices Integration Tests › Purchase Invoice Creation" name="should create a purchase invoice successfully" time="0.001">
    </testcase>
    <testcase classname="Purchase Invoices Integration Tests › Purchase Invoice Creation" name="should create purchase invoice with items" time="0">
    </testcase>
    <testcase classname="Purchase Invoices Integration Tests › Purchase Invoice Creation" name="should validate required fields" time="0.014">
    </testcase>
    <testcase classname="Purchase Invoices Integration Tests › Purchase Invoice Creation" name="should prevent duplicate invoice numbers" time="0.001">
    </testcase>
    <testcase classname="Purchase Invoices Integration Tests › Purchase Invoice Retrieval" name="should retrieve purchase invoice by ID" time="0">
    </testcase>
    <testcase classname="Purchase Invoices Integration Tests › Purchase Invoice Retrieval" name="should retrieve purchase invoice with supplier details" time="0.01">
    </testcase>
    <testcase classname="Purchase Invoices Integration Tests › Purchase Invoice Retrieval" name="should return null for non-existent invoice" time="0.001">
    </testcase>
    <testcase classname="Purchase Invoices Integration Tests › Purchase Invoice Retrieval" name="should retrieve all purchase invoices with pagination" time="0">
    </testcase>
    <testcase classname="Purchase Invoices Integration Tests › Purchase Invoice Updates" name="should update purchase invoice status" time="0.001">
    </testcase>
    <testcase classname="Purchase Invoices Integration Tests › Purchase Invoice Updates" name="should update purchase invoice details" time="0">
    </testcase>
    <testcase classname="Purchase Invoices Integration Tests › Purchase Invoice Updates" name="should prevent updating approved invoices" time="0.001">
    </testcase>
    <testcase classname="Purchase Invoices Integration Tests › Purchase Invoice Deletion" name="should soft delete purchase invoice" time="0">
    </testcase>
    <testcase classname="Purchase Invoices Integration Tests › Purchase Invoice Deletion" name="should prevent deletion of approved invoices" time="0">
    </testcase>
    <testcase classname="Purchase Invoices Integration Tests › Purchase Invoice Search and Filtering" name="should search invoices by invoice number" time="0.001">
    </testcase>
    <testcase classname="Purchase Invoices Integration Tests › Purchase Invoice Search and Filtering" name="should filter invoices by status" time="0">
    </testcase>
    <testcase classname="Purchase Invoices Integration Tests › Purchase Invoice Search and Filtering" name="should filter invoices by date range" time="0">
    </testcase>
    <testcase classname="Purchase Invoices Integration Tests › Purchase Invoice Search and Filtering" name="should filter invoices by supplier" time="0">
    </testcase>
    <testcase classname="Purchase Invoices Integration Tests › Purchase Invoice Business Logic" name="should calculate totals correctly" time="0.001">
    </testcase>
    <testcase classname="Purchase Invoices Integration Tests › Purchase Invoice Business Logic" name="should update inventory when invoice is approved" time="0">
    </testcase>
    <testcase classname="Purchase Invoices Integration Tests › Error Handling and Edge Cases" name="should handle concurrent invoice creation" time="0.001">
    </testcase>
    <testcase classname="Purchase Invoices Integration Tests › Error Handling and Edge Cases" name="should handle invalid product references" time="0">
    </testcase>
    <testcase classname="Purchase Invoices Integration Tests › Error Handling and Edge Cases" name="should handle database transaction failures" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Security Tests" errors="0" failures="0" skipped="0" timestamp="2025-06-19T17:44:11" time="1.097" tests="18">
    <testcase classname="Security Tests › SQL Injection Protection" name="should prevent SQL injection in search queries" time="0.024">
    </testcase>
    <testcase classname="Security Tests › SQL Injection Protection" name="should use parameterized queries" time="0.009">
    </testcase>
    <testcase classname="Security Tests › XSS Protection" name="should sanitize XSS payloads in input" time="0.008">
    </testcase>
    <testcase classname="Security Tests › XSS Protection" name="should reject suspicious input patterns" time="0.001">
    </testcase>
    <testcase classname="Security Tests › Authentication Security" name="should reject invalid JWT tokens" time="0.055">
    </testcase>
    <testcase classname="Security Tests › Authentication Security" name="should reject expired tokens" time="0.012">
    </testcase>
    <testcase classname="Security Tests › Authentication Security" name="should use secure password hashing" time="0.24">
    </testcase>
    <testcase classname="Security Tests › Authentication Security" name="should prevent timing attacks in authentication" time="0.107">
    </testcase>
    <testcase classname="Security Tests › Input Validation" name="should reject oversized inputs" time="0.001">
    </testcase>
    <testcase classname="Security Tests › Input Validation" name="should validate email format" time="0.001">
    </testcase>
    <testcase classname="Security Tests › Input Validation" name="should handle null bytes and special characters" time="0">
    </testcase>
    <testcase classname="Security Tests › Command Injection Protection" name="should prevent command injection in file operations" time="0.002">
    </testcase>
    <testcase classname="Security Tests › JWT Security" name="should use secure JWT configuration" time="0.003">
    </testcase>
    <testcase classname="Security Tests › JWT Security" name="should not accept tokens with none algorithm" time="0.001">
    </testcase>
    <testcase classname="Security Tests › JWT Security" name="should validate token signature" time="0.001">
    </testcase>
    <testcase classname="Security Tests › Rate Limiting Simulation" name="should handle rapid successive requests" time="0.01">
    </testcase>
    <testcase classname="Security Tests › Error Handling Security" name="should not expose sensitive information in error messages" time="0.001">
    </testcase>
    <testcase classname="Security Tests › Error Handling Security" name="should use generic error messages for authentication failures" time="0.102">
    </testcase>
  </testsuite>
  <testsuite name="Utility Functions Testing" errors="0" failures="0" skipped="0" timestamp="2025-06-19T17:44:12" time="0.414" tests="34">
    <testcase classname="Utility Functions Testing › Currency Formatting" name="should format currency correctly" time="0.021">
    </testcase>
    <testcase classname="Utility Functions Testing › Currency Formatting" name="should handle different currencies" time="0">
    </testcase>
    <testcase classname="Utility Functions Testing › Currency Formatting" name="should handle negative amounts" time="0">
    </testcase>
    <testcase classname="Utility Functions Testing › Date Formatting" name="should format dates in different formats" time="0.01">
    </testcase>
    <testcase classname="Utility Functions Testing › Date Formatting" name="should handle string dates" time="0.001">
    </testcase>
    <testcase classname="Utility Functions Testing › Date Formatting" name="should default to short format" time="0">
    </testcase>
    <testcase classname="Utility Functions Testing › Validation Functions › Email Validation" name="should validate correct email addresses" time="0">
    </testcase>
    <testcase classname="Utility Functions Testing › Validation Functions › Email Validation" name="should reject invalid email addresses" time="0.001">
    </testcase>
    <testcase classname="Utility Functions Testing › Validation Functions › Phone Validation" name="should validate correct phone numbers" time="0.002">
    </testcase>
    <testcase classname="Utility Functions Testing › Validation Functions › Phone Validation" name="should reject invalid phone numbers" time="0">
    </testcase>
    <testcase classname="Utility Functions Testing › Business Logic Functions" name="should generate invoice numbers correctly" time="0.001">
    </testcase>
    <testcase classname="Utility Functions Testing › Business Logic Functions" name="should calculate tax correctly" time="0">
    </testcase>
    <testcase classname="Utility Functions Testing › Business Logic Functions" name="should calculate discount correctly" time="0.001">
    </testcase>
    <testcase classname="Utility Functions Testing › Business Logic Functions" name="should calculate total correctly" time="0">
    </testcase>
    <testcase classname="Utility Functions Testing › Performance Utilities" name="should debounce function calls" time="0.153">
    </testcase>
    <testcase classname="Utility Functions Testing › Performance Utilities" name="should throttle function calls" time="0.153">
    </testcase>
    <testcase classname="Utility Functions Testing › Object Utilities" name="should deep clone objects correctly" time="0">
    </testcase>
    <testcase classname="Utility Functions Testing › Object Utilities" name="should handle primitive values in deep clone" time="0">
    </testcase>
    <testcase classname="Utility Functions Testing › String Utilities" name="should generate random IDs" time="0">
    </testcase>
    <testcase classname="Utility Functions Testing › String Utilities" name="should slugify text correctly" time="0.001">
    </testcase>
    <testcase classname="Utility Functions Testing › String Utilities" name="should capitalize text correctly" time="0">
    </testcase>
    <testcase classname="Utility Functions Testing › String Utilities" name="should truncate text correctly" time="0">
    </testcase>
    <testcase classname="Utility Functions Testing › String Utilities" name="should mask sensitive data" time="0.005">
    </testcase>
    <testcase classname="Utility Functions Testing › URL and Query Utilities" name="should parse query parameters correctly" time="0.001">
    </testcase>
    <testcase classname="Utility Functions Testing › URL and Query Utilities" name="should build query string correctly" time="0.001">
    </testcase>
    <testcase classname="Utility Functions Testing › JSON Utilities" name="should validate JSON correctly" time="0.001">
    </testcase>
    <testcase classname="Utility Functions Testing › Array Utilities" name="should sort array correctly" time="0">
    </testcase>
    <testcase classname="Utility Functions Testing › Array Utilities" name="should group array correctly" time="0.001">
    </testcase>
    <testcase classname="Utility Functions Testing › Math Utilities" name="should calculate percentage correctly" time="0">
    </testcase>
    <testcase classname="Utility Functions Testing › Math Utilities" name="should format file size correctly" time="0">
    </testcase>
    <testcase classname="Utility Functions Testing › Date Business Logic" name="should identify business days correctly" time="0">
    </testcase>
    <testcase classname="Utility Functions Testing › Date Business Logic" name="should add business days correctly" time="0.001">
    </testcase>
    <testcase classname="Utility Functions Testing › Error Handling" name="should handle invalid inputs gracefully" time="0">
    </testcase>
    <testcase classname="Utility Functions Testing › Error Handling" name="should handle edge cases" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Utility Functions Tests" errors="0" failures="0" skipped="0" timestamp="2025-06-19T17:44:12" time="0.44" tests="42">
    <testcase classname="Utility Functions Tests › Formatting Functions › formatCurrency" name="should format currency with default settings" time="0.018">
    </testcase>
    <testcase classname="Utility Functions Tests › Formatting Functions › formatCurrency" name="should format currency with different currencies" time="0.001">
    </testcase>
    <testcase classname="Utility Functions Tests › Formatting Functions › formatCurrency" name="should handle edge cases" time="0">
    </testcase>
    <testcase classname="Utility Functions Tests › Formatting Functions › formatDate" name="should format dates with default settings" time="0.001">
    </testcase>
    <testcase classname="Utility Functions Tests › Formatting Functions › formatDate" name="should format dates with different formats" time="0.005">
    </testcase>
    <testcase classname="Utility Functions Tests › Formatting Functions › formatDate" name="should handle invalid dates" time="0">
    </testcase>
    <testcase classname="Utility Functions Tests › Formatting Functions › formatPhoneNumber" name="should format US phone numbers" time="0.001">
    </testcase>
    <testcase classname="Utility Functions Tests › Formatting Functions › formatPhoneNumber" name="should handle international phone numbers" time="0">
    </testcase>
    <testcase classname="Utility Functions Tests › Formatting Functions › formatPhoneNumber" name="should handle invalid phone numbers" time="0">
    </testcase>
    <testcase classname="Utility Functions Tests › Validation Functions › validateEmail" name="should validate correct email addresses" time="0.001">
    </testcase>
    <testcase classname="Utility Functions Tests › Validation Functions › validateEmail" name="should reject invalid email addresses" time="0">
    </testcase>
    <testcase classname="Utility Functions Tests › Validation Functions › validatePassword" name="should validate strong passwords" time="0">
    </testcase>
    <testcase classname="Utility Functions Tests › Validation Functions › validatePassword" name="should reject weak passwords" time="0.001">
    </testcase>
    <testcase classname="Utility Functions Tests › Validation Functions › validatePhoneNumber" name="should validate US phone numbers" time="0">
    </testcase>
    <testcase classname="Utility Functions Tests › Validation Functions › validatePhoneNumber" name="should reject invalid phone numbers" time="0">
    </testcase>
    <testcase classname="Utility Functions Tests › Validation Functions › validateRequired" name="should validate required fields" time="0">
    </testcase>
    <testcase classname="Utility Functions Tests › Validation Functions › validateRequired" name="should reject empty or null values" time="0">
    </testcase>
    <testcase classname="Utility Functions Tests › Utility Helper Functions › generateId" name="should generate unique IDs" time="0">
    </testcase>
    <testcase classname="Utility Functions Tests › Utility Helper Functions › generateId" name="should generate IDs with custom prefix and length" time="0">
    </testcase>
    <testcase classname="Utility Functions Tests › Utility Helper Functions › slugify" name="should create URL-friendly slugs" time="0.001">
    </testcase>
    <testcase classname="Utility Functions Tests › Utility Helper Functions › slugify" name="should handle edge cases" time="0">
    </testcase>
    <testcase classname="Utility Functions Tests › Utility Helper Functions › truncateText" name="should truncate long text" time="0.003">
    </testcase>
    <testcase classname="Utility Functions Tests › Utility Helper Functions › truncateText" name="should handle custom suffix" time="0">
    </testcase>
    <testcase classname="Utility Functions Tests › Utility Helper Functions › debounce" name="should debounce function calls" time="0.152">
    </testcase>
    <testcase classname="Utility Functions Tests › Utility Helper Functions › throttle" name="should throttle function calls" time="0.151">
    </testcase>
    <testcase classname="Utility Functions Tests › Calculation Functions › calculateTax" name="should calculate tax correctly" time="0">
    </testcase>
    <testcase classname="Utility Functions Tests › Calculation Functions › calculateTax" name="should handle edge cases" time="0">
    </testcase>
    <testcase classname="Utility Functions Tests › Calculation Functions › calculateDiscount" name="should calculate percentage discount" time="0">
    </testcase>
    <testcase classname="Utility Functions Tests › Calculation Functions › calculateDiscount" name="should calculate fixed discount" time="0.001">
    </testcase>
    <testcase classname="Utility Functions Tests › Calculation Functions › calculateTotal" name="should calculate total with tax and discount" time="0">
    </testcase>
    <testcase classname="Utility Functions Tests › Calculation Functions › calculateTotal" name="should handle negative results" time="0">
    </testcase>
    <testcase classname="Utility Functions Tests › Sanitization Functions › sanitizeInput" name="should sanitize user input" time="0.001">
    </testcase>
    <testcase classname="Utility Functions Tests › Sanitization Functions › sanitizeInput" name="should handle malicious input" time="0.001">
    </testcase>
    <testcase classname="Utility Functions Tests › Sanitization Functions › escapeHtml" name="should escape HTML entities" time="0">
    </testcase>
    <testcase classname="Utility Functions Tests › Sanitization Functions › parseQueryParams" name="should parse URL query parameters" time="0.002">
    </testcase>
    <testcase classname="Utility Functions Tests › Sanitization Functions › parseQueryParams" name="should handle empty or malformed query strings" time="0.003">
    </testcase>
    <testcase classname="Utility Functions Tests › Sanitization Functions › parseQueryParams" name="should handle URL encoding" time="0.003">
    </testcase>
    <testcase classname="Utility Functions Tests › Error Handling in Utilities" name="should handle errors in formatting functions" time="0">
    </testcase>
    <testcase classname="Utility Functions Tests › Error Handling in Utilities" name="should handle errors in validation functions" time="0">
    </testcase>
    <testcase classname="Utility Functions Tests › Error Handling in Utilities" name="should handle errors in utility functions" time="0">
    </testcase>
    <testcase classname="Utility Functions Tests › Performance Tests for Utilities" name="should handle large datasets efficiently" time="0.002">
    </testcase>
    <testcase classname="Utility Functions Tests › Performance Tests for Utilities" name="should handle concurrent utility operations" time="0.012">
    </testcase>
  </testsuite>
  <testsuite name="Component Testing" errors="0" failures="0" skipped="0" timestamp="2025-06-19T17:44:11" time="1.416" tests="23">
    <testcase classname="Component Testing › LoginForm Component" name="should render login form correctly" time="0.053">
    </testcase>
    <testcase classname="Component Testing › LoginForm Component" name="should handle form submission with valid data" time="0.263">
    </testcase>
    <testcase classname="Component Testing › LoginForm Component" name="should show loading state" time="0.007">
    </testcase>
    <testcase classname="Component Testing › LoginForm Component" name="should require email and password fields" time="0.013">
    </testcase>
    <testcase classname="Component Testing › InvoiceForm Component" name="should render invoice form correctly" time="0.014">
    </testcase>
    <testcase classname="Component Testing › InvoiceForm Component" name="should handle adding new items" time="0.018">
    </testcase>
    <testcase classname="Component Testing › InvoiceForm Component" name="should handle form submission with complete data" time="0.139">
    </testcase>
    <testcase classname="Component Testing › InvoiceForm Component" name="should populate form with initial data" time="0.004">
    </testcase>
    <testcase classname="Component Testing › DataTable Component" name="should render table with data correctly" time="0.004">
    </testcase>
    <testcase classname="Component Testing › DataTable Component" name="should handle edit and delete actions" time="0.029">
    </testcase>
    <testcase classname="Component Testing › DataTable Component" name="should show loading state" time="0.001">
    </testcase>
    <testcase classname="Component Testing › DataTable Component" name="should render empty table when no data" time="0.003">
    </testcase>
    <testcase classname="Component Testing › DashboardCard Component" name="should render card with basic data" time="0.003">
    </testcase>
    <testcase classname="Component Testing › DashboardCard Component" name="should render card with change indicator" time="0.002">
    </testcase>
    <testcase classname="Component Testing › DashboardCard Component" name="should render card with decrease indicator" time="0.001">
    </testcase>
    <testcase classname="Component Testing › DashboardCard Component" name="should show loading state" time="0.001">
    </testcase>
    <testcase classname="Component Testing › SearchFilter Component" name="should render search and filter controls" time="0.002">
    </testcase>
    <testcase classname="Component Testing › SearchFilter Component" name="should handle search submission" time="0.042">
    </testcase>
    <testcase classname="Component Testing › SearchFilter Component" name="should handle filter changes" time="0.032">
    </testcase>
    <testcase classname="Component Testing › SearchFilter Component" name="should initialize with provided filters" time="0.002">
    </testcase>
    <testcase classname="Component Testing › Permission-based Component Rendering" name="should render components when user has permissions" time="0.001">
    </testcase>
    <testcase classname="Component Testing › Permission-based Component Rendering" name="should hide components when user lacks permissions" time="0">
    </testcase>
    <testcase classname="Component Testing › Error Boundary and Error Handling" name="should handle component errors gracefully" time="0.079">
    </testcase>
  </testsuite>
  <testsuite name="API Routes Integration Tests" errors="0" failures="0" skipped="0" timestamp="2025-06-19T17:44:12" time="0.091" tests="17">
    <testcase classname="API Routes Integration Tests › POST /api/auth/login" name="should successfully login with valid credentials" time="0.001">
    </testcase>
    <testcase classname="API Routes Integration Tests › POST /api/auth/login" name="should return 400 for missing credentials" time="0.006">
    </testcase>
    <testcase classname="API Routes Integration Tests › POST /api/auth/login" name="should return 401 for invalid credentials" time="0">
    </testcase>
    <testcase classname="API Routes Integration Tests › POST /api/auth/login" name="should return 401 for wrong password" time="0.001">
    </testcase>
    <testcase classname="API Routes Integration Tests › GET /api/products" name="should return products for valid shop ID" time="0.001">
    </testcase>
    <testcase classname="API Routes Integration Tests › GET /api/products" name="should return 400 for missing shop ID" time="0.001">
    </testcase>
    <testcase classname="API Routes Integration Tests › GET /api/products" name="should handle search functionality" time="0.002">
    </testcase>
    <testcase classname="API Routes Integration Tests › POST /api/products" name="should create product with valid data and auth" time="0.001">
    </testcase>
    <testcase classname="API Routes Integration Tests › POST /api/products" name="should return 401 for missing authorization" time="0.001">
    </testcase>
    <testcase classname="API Routes Integration Tests › POST /api/products" name="should return 400 for invalid price" time="0.001">
    </testcase>
    <testcase classname="API Routes Integration Tests › POST /api/products" name="should return 409 for duplicate SKU" time="0">
    </testcase>
    <testcase classname="API Routes Integration Tests › GET /api/user" name="should return user data for valid token" time="0.001">
    </testcase>
    <testcase classname="API Routes Integration Tests › GET /api/user" name="should return 401 for invalid token" time="0">
    </testcase>
    <testcase classname="API Routes Integration Tests › GET /api/user" name="should return 404 for non-existent user" time="0">
    </testcase>
    <testcase classname="API Routes Integration Tests › Error Handling" name="should handle database connection errors" time="0.011">
    </testcase>
    <testcase classname="API Routes Integration Tests › Error Handling" name="should handle malformed JSON requests" time="0.001">
    </testcase>
    <testcase classname="API Routes Integration Tests › Rate Limiting Simulation" name="should handle multiple concurrent requests" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="System Integration Tests" errors="0" failures="0" skipped="0" timestamp="2025-06-19T17:44:12" time="0.38" tests="12">
    <testcase classname="System Integration Tests › End-to-End Invoice Workflow" name="should complete full invoice creation and payment workflow" time="0.001">
    </testcase>
    <testcase classname="System Integration Tests › End-to-End Invoice Workflow" name="should handle inventory shortage during invoice creation" time="0.004">
    </testcase>
    <testcase classname="System Integration Tests › Real-time Updates Integration" name="should handle real-time inventory updates via WebSocket" time="0.152">
    </testcase>
    <testcase classname="System Integration Tests › Real-time Updates Integration" name="should handle real-time invoice status updates" time="0.152">
    </testcase>
    <testcase classname="System Integration Tests › Authentication and Authorization Flow" name="should handle complete authentication flow" time="0.001">
    </testcase>
    <testcase classname="System Integration Tests › Authentication and Authorization Flow" name="should handle permission-based access control" time="0.001">
    </testcase>
    <testcase classname="System Integration Tests › Data Consistency and Validation" name="should maintain data consistency across operations" time="0">
    </testcase>
    <testcase classname="System Integration Tests › Data Consistency and Validation" name="should validate business rules across modules" time="0.001">
    </testcase>
    <testcase classname="System Integration Tests › Error Handling and Recovery" name="should handle network failures gracefully" time="0">
    </testcase>
    <testcase classname="System Integration Tests › Error Handling and Recovery" name="should handle partial failures in batch operations" time="0">
    </testcase>
    <testcase classname="System Integration Tests › Performance and Caching" name="should implement proper caching strategies" time="0">
    </testcase>
    <testcase classname="System Integration Tests › Performance and Caching" name="should handle pagination efficiently" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Audit Trail Integration Tests" errors="0" failures="0" skipped="0" timestamp="2025-06-19T17:44:12" time="0.18" tests="18">
    <testcase classname="Audit Trail Integration Tests › API Route Tests › GET /api/audit-trail" name="should fetch recycle bin items successfully" time="0.002">
    </testcase>
    <testcase classname="Audit Trail Integration Tests › API Route Tests › GET /api/audit-trail" name="should fetch audit history successfully" time="0">
    </testcase>
    <testcase classname="Audit Trail Integration Tests › API Route Tests › GET /api/audit-trail" name="should handle fetch error" time="0">
    </testcase>
    <testcase classname="Audit Trail Integration Tests › API Route Tests › GET /api/audit-trail" name="should handle non-ok response" time="0.001">
    </testcase>
    <testcase classname="Audit Trail Integration Tests › API Route Tests › POST /api/audit-trail/recover" name="should recover item successfully" time="0">
    </testcase>
    <testcase classname="Audit Trail Integration Tests › API Route Tests › POST /api/audit-trail/recover" name="should handle authentication error" time="0">
    </testcase>
    <testcase classname="Audit Trail Integration Tests › API Route Tests › POST /api/audit-trail/recover" name="should handle service error" time="0">
    </testcase>
    <testcase classname="Audit Trail Integration Tests › API Route Tests › POST /api/audit-trail/recover" name="should handle missing auditLogId" time="0">
    </testcase>
    <testcase classname="Audit Trail Integration Tests › Service Integration Tests" name="should call auditService.getRecycleBinItems with correct parameters" time="0.001">
    </testcase>
    <testcase classname="Audit Trail Integration Tests › Service Integration Tests" name="should call auditService.recoverItem with correct parameters" time="0">
    </testcase>
    <testcase classname="Audit Trail Integration Tests › Service Integration Tests" name="should handle service errors gracefully" time="0">
    </testcase>
    <testcase classname="Audit Trail Integration Tests › Authentication Integration Tests" name="should handle unauthenticated user" time="0.001">
    </testcase>
    <testcase classname="Audit Trail Integration Tests › Authentication Integration Tests" name="should handle authenticated user" time="0">
    </testcase>
    <testcase classname="Audit Trail Integration Tests › Authentication Integration Tests" name="should handle token verification" time="0.003">
    </testcase>
    <testcase classname="Audit Trail Integration Tests › Authentication Integration Tests" name="should handle invalid token" time="0.001">
    </testcase>
    <testcase classname="Audit Trail Integration Tests › Error Handling Tests" name="should handle network errors" time="0">
    </testcase>
    <testcase classname="Audit Trail Integration Tests › Error Handling Tests" name="should handle malformed JSON response" time="0">
    </testcase>
    <testcase classname="Audit Trail Integration Tests › Error Handling Tests" name="should handle timeout errors" time="0.101">
    </testcase>
  </testsuite>
  <testsuite name="API Routes Testing" errors="0" failures="0" skipped="0" timestamp="2025-06-19T17:44:12" time="0.082" tests="20">
    <testcase classname="API Routes Testing › Authentication API Routes" name="should handle POST /api/auth/login" time="0.001">
    </testcase>
    <testcase classname="API Routes Testing › Authentication API Routes" name="should handle POST /api/auth/logout" time="0">
    </testcase>
    <testcase classname="API Routes Testing › Authentication API Routes" name="should handle POST /api/auth/refresh" time="0.001">
    </testcase>
    <testcase classname="API Routes Testing › Authentication API Routes" name="should handle authentication errors" time="0">
    </testcase>
    <testcase classname="API Routes Testing › Sales Invoice API Routes" name="should handle GET /api/sales/invoices" time="0.001">
    </testcase>
    <testcase classname="API Routes Testing › Sales Invoice API Routes" name="should handle POST /api/sales/invoices" time="0.001">
    </testcase>
    <testcase classname="API Routes Testing › Sales Invoice API Routes" name="should handle PUT /api/sales/invoices/[id]" time="0">
    </testcase>
    <testcase classname="API Routes Testing › Sales Invoice API Routes" name="should handle DELETE /api/sales/invoices/[id]" time="0">
    </testcase>
    <testcase classname="API Routes Testing › Inventory API Routes" name="should handle GET /api/inventory/products" time="0.001">
    </testcase>
    <testcase classname="API Routes Testing › Inventory API Routes" name="should handle POST /api/inventory/products" time="0">
    </testcase>
    <testcase classname="API Routes Testing › Inventory API Routes" name="should handle PUT /api/inventory/stock/[id]" time="0">
    </testcase>
    <testcase classname="API Routes Testing › Customer API Routes" name="should handle GET /api/customers" time="0">
    </testcase>
    <testcase classname="API Routes Testing › Customer API Routes" name="should handle POST /api/customers" time="0">
    </testcase>
    <testcase classname="API Routes Testing › Customer API Routes" name="should handle GET /api/customers/[id]/transactions" time="0.001">
    </testcase>
    <testcase classname="API Routes Testing › Dashboard API Routes" name="should handle GET /api/dashboard" time="0.002">
    </testcase>
    <testcase classname="API Routes Testing › Dashboard API Routes" name="should handle GET /api/analytics/charts/[type]" time="0.001">
    </testcase>
    <testcase classname="API Routes Testing › Error Handling" name="should handle 404 errors" time="0.001">
    </testcase>
    <testcase classname="API Routes Testing › Error Handling" name="should handle validation errors" time="0">
    </testcase>
    <testcase classname="API Routes Testing › Error Handling" name="should handle server errors" time="0">
    </testcase>
    <testcase classname="API Routes Testing › Error Handling" name="should handle rate limiting" time="0">
    </testcase>
  </testsuite>
  <testsuite name="User Creation and Permission-Based Access" errors="0" failures="0" skipped="0" timestamp="2025-06-19T17:44:12" time="0.076" tests="9">
    <testcase classname="User Creation and Permission-Based Access › Permission System Core Logic" name="should check permissions correctly" time="0.001">
    </testcase>
    <testcase classname="User Creation and Permission-Based Access › Permission System Core Logic" name="should filter dashboard metrics based on permissions" time="0">
    </testcase>
    <testcase classname="User Creation and Permission-Based Access › Permission System Core Logic" name="should determine accessible modules correctly" time="0.001">
    </testcase>
    <testcase classname="User Creation and Permission-Based Access › Role Template System" name="should define role templates correctly" time="0.006">
    </testcase>
    <testcase classname="User Creation and Permission-Based Access › Role Template System" name="should apply role template permissions correctly" time="0.002">
    </testcase>
    <testcase classname="User Creation and Permission-Based Access › Permission Descriptions" name="should provide permission descriptions" time="0">
    </testcase>
    <testcase classname="User Creation and Permission-Based Access › Form Validation Logic" name="should validate required fields" time="0">
    </testcase>
    <testcase classname="User Creation and Permission-Based Access › Form Validation Logic" name="should validate password confirmation" time="0.002">
    </testcase>
    <testcase classname="User Creation and Permission-Based Access › Permission Search and Filtering" name="should filter permissions based on search query" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Prisma Utilities" errors="0" failures="0" skipped="0" timestamp="2025-06-19T17:44:12" time="0.093" tests="15">
    <testcase classname="Prisma Utilities › PrismaClient Configuration" name="should export prisma client instance" time="0.001">
    </testcase>
    <testcase classname="Prisma Utilities › safeQuery function (isolated implementation)" name="should return result for successful operation" time="0.001">
    </testcase>
    <testcase classname="Prisma Utilities › safeQuery function (isolated implementation)" name="should return fallback and log error for failed operation" time="0">
    </testcase>
    <testcase classname="Prisma Utilities › safeQuery function (isolated implementation)" name="should handle database errors with fallback" time="0">
    </testcase>
    <testcase classname="Prisma Utilities › safeQuery function (isolated implementation)" name="should use default log message when none provided" time="0.001">
    </testcase>
    <testcase classname="Prisma Utilities › safeQuery function (isolated implementation)" name="should handle different fallback types" time="0.001">
    </testcase>
    <testcase classname="Prisma Utilities › safeQuery function (isolated implementation)" name="should handle async operations correctly" time="0.013">
    </testcase>
    <testcase classname="Prisma Utilities › safeQuery function (isolated implementation)" name="should preserve error objects in logs" time="0">
    </testcase>
    <testcase classname="Prisma Utilities › Database Operations with safeQuery" name="should safely execute user findMany operation" time="0">
    </testcase>
    <testcase classname="Prisma Utilities › Database Operations with safeQuery" name="should safely execute user create operation" time="0.001">
    </testcase>
    <testcase classname="Prisma Utilities › Database Operations with safeQuery" name="should safely execute shop operations" time="0.001">
    </testcase>
    <testcase classname="Prisma Utilities › Database Operations with safeQuery" name="should return fallback when operation fails" time="0">
    </testcase>
    <testcase classname="Prisma Utilities › Prisma Client Lifecycle" name="should handle connection operations" time="0">
    </testcase>
    <testcase classname="Prisma Utilities › Prisma Client Lifecycle" name="should handle disconnection operations" time="0">
    </testcase>
    <testcase classname="Prisma Utilities › Prisma Client Lifecycle" name="should handle connection errors" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="Authentication and Authorization System" errors="0" failures="0" skipped="0" timestamp="2025-06-19T17:44:12" time="0.088" tests="18">
    <testcase classname="Authentication and Authorization System › User Authentication" name="should validate login credentials" time="0.001">
    </testcase>
    <testcase classname="Authentication and Authorization System › User Authentication" name="should handle successful login" time="0.001">
    </testcase>
    <testcase classname="Authentication and Authorization System › User Authentication" name="should handle login failure" time="0.001">
    </testcase>
    <testcase classname="Authentication and Authorization System › User Authentication" name="should handle logout" time="0">
    </testcase>
    <testcase classname="Authentication and Authorization System › Token Management" name="should validate JWT token format" time="0">
    </testcase>
    <testcase classname="Authentication and Authorization System › Token Management" name="should check token expiration" time="0.003">
    </testcase>
    <testcase classname="Authentication and Authorization System › Token Management" name="should refresh token when near expiration" time="0.001">
    </testcase>
    <testcase classname="Authentication and Authorization System › Token Management" name="should store and retrieve tokens securely" time="0">
    </testcase>
    <testcase classname="Authentication and Authorization System › Permission System" name="should check user permissions correctly" time="0">
    </testcase>
    <testcase classname="Authentication and Authorization System › Permission System" name="should check multiple permissions (AND logic)" time="0.001">
    </testcase>
    <testcase classname="Authentication and Authorization System › Permission System" name="should check any permission (OR logic)" time="0">
    </testcase>
    <testcase classname="Authentication and Authorization System › Permission System" name="should validate role-based permissions" time="0">
    </testcase>
    <testcase classname="Authentication and Authorization System › Session Management" name="should track user session activity" time="0">
    </testcase>
    <testcase classname="Authentication and Authorization System › Session Management" name="should handle concurrent sessions" time="0.001">
    </testcase>
    <testcase classname="Authentication and Authorization System › Password Security" name="should validate password strength" time="0.01">
    </testcase>
    <testcase classname="Authentication and Authorization System › Password Security" name="should handle password reset flow" time="0">
    </testcase>
    <testcase classname="Authentication and Authorization System › Two-Factor Authentication" name="should generate and validate TOTP codes" time="0.001">
    </testcase>
    <testcase classname="Authentication and Authorization System › Two-Factor Authentication" name="should handle 2FA setup and verification" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Database Operations - Prisma Models" errors="0" failures="0" skipped="0" timestamp="2025-06-19T17:44:12" time="0.086" tests="18">
    <testcase classname="Database Operations - Prisma Models › User Model Operations › findMany" name="should fetch all active users" time="0.001">
    </testcase>
    <testcase classname="Database Operations - Prisma Models › User Model Operations › findMany" name="should fetch users with pagination" time="0.001">
    </testcase>
    <testcase classname="Database Operations - Prisma Models › User Model Operations › findUnique" name="should find user by id" time="0">
    </testcase>
    <testcase classname="Database Operations - Prisma Models › User Model Operations › findUnique" name="should return null for non-existent user" time="0">
    </testcase>
    <testcase classname="Database Operations - Prisma Models › User Model Operations › create" name="should create a new user" time="0">
    </testcase>
    <testcase classname="Database Operations - Prisma Models › User Model Operations › update" name="should update user data" time="0">
    </testcase>
    <testcase classname="Database Operations - Prisma Models › User Model Operations › delete" name="should delete a user" time="0">
    </testcase>
    <testcase classname="Database Operations - Prisma Models › Product Model Operations › findMany" name="should fetch all products" time="0.001">
    </testcase>
    <testcase classname="Database Operations - Prisma Models › Product Model Operations › findMany" name="should fetch products with filters" time="0">
    </testcase>
    <testcase classname="Database Operations - Prisma Models › Product Model Operations › create" name="should create a new product" time="0">
    </testcase>
    <testcase classname="Database Operations - Prisma Models › Transaction Operations" name="should execute transaction successfully" time="0.001">
    </testcase>
    <testcase classname="Database Operations - Prisma Models › Transaction Operations" name="should handle transaction rollback" time="0.01">
    </testcase>
    <testcase classname="Database Operations - Prisma Models › Batch Operations" name="should perform batch user creation" time="0">
    </testcase>
    <testcase classname="Database Operations - Prisma Models › Batch Operations" name="should perform batch updates" time="0.001">
    </testcase>
    <testcase classname="Database Operations - Prisma Models › Aggregation Operations" name="should count total users" time="0">
    </testcase>
    <testcase classname="Database Operations - Prisma Models › Aggregation Operations" name="should aggregate product prices" time="0">
    </testcase>
    <testcase classname="Database Operations - Prisma Models › Error Handling" name="should handle unique constraint violations" time="0">
    </testcase>
    <testcase classname="Database Operations - Prisma Models › Error Handling" name="should handle foreign key constraint violations" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Dashboard and Analytics System" errors="0" failures="0" skipped="0" timestamp="2025-06-19T17:44:12" time="0.119" tests="14">
    <testcase classname="Dashboard and Analytics System › Sales Analytics" name="should calculate sales metrics correctly" time="0.003">
    </testcase>
    <testcase classname="Dashboard and Analytics System › Sales Analytics" name="should calculate growth rates" time="0">
    </testcase>
    <testcase classname="Dashboard and Analytics System › Sales Analytics" name="should generate sales by category data" time="0.001">
    </testcase>
    <testcase classname="Dashboard and Analytics System › Inventory Analytics" name="should calculate inventory turnover" time="0">
    </testcase>
    <testcase classname="Dashboard and Analytics System › Inventory Analytics" name="should identify slow-moving inventory" time="0.001">
    </testcase>
    <testcase classname="Dashboard and Analytics System › Inventory Analytics" name="should calculate stock level alerts" time="0">
    </testcase>
    <testcase classname="Dashboard and Analytics System › Financial Analytics" name="should calculate profit margins" time="0">
    </testcase>
    <testcase classname="Dashboard and Analytics System › Financial Analytics" name="should calculate cash flow projections" time="0.001">
    </testcase>
    <testcase classname="Dashboard and Analytics System › Customer Analytics" name="should calculate customer lifetime value" time="0">
    </testcase>
    <testcase classname="Dashboard and Analytics System › Customer Analytics" name="should identify customer churn risk" time="0.001">
    </testcase>
    <testcase classname="Dashboard and Analytics System › Dashboard API Integration" name="should fetch dashboard data" time="0.006">
    </testcase>
    <testcase classname="Dashboard and Analytics System › Dashboard API Integration" name="should fetch chart data for different periods" time="0.002">
    </testcase>
    <testcase classname="Dashboard and Analytics System › Real-time Updates" name="should handle real-time dashboard updates" time="0">
    </testcase>
    <testcase classname="Dashboard and Analytics System › Real-time Updates" name="should throttle frequent updates" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Sales Invoice API Integration" errors="0" failures="0" skipped="0" timestamp="2025-06-19T17:44:12" time="0.094" tests="12">
    <testcase classname="Sales Invoice API Integration › Invoice Creation API" name="should create invoice via API call" time="0.001">
    </testcase>
    <testcase classname="Sales Invoice API Integration › Invoice Creation API" name="should handle API errors during creation" time="0.007">
    </testcase>
    <testcase classname="Sales Invoice API Integration › Invoice Update API" name="should update invoice via API call" time="0.001">
    </testcase>
    <testcase classname="Sales Invoice API Integration › Invoice Update API" name="should handle update permission errors" time="0">
    </testcase>
    <testcase classname="Sales Invoice API Integration › Invoice Deletion API" name="should delete invoice via API call" time="0">
    </testcase>
    <testcase classname="Sales Invoice API Integration › Invoice Deletion API" name="should handle deletion restrictions" time="0.001">
    </testcase>
    <testcase classname="Sales Invoice API Integration › Payment Processing API" name="should process payment via API call" time="0.002">
    </testcase>
    <testcase classname="Sales Invoice API Integration › Payment Processing API" name="should handle payment validation errors" time="0">
    </testcase>
    <testcase classname="Sales Invoice API Integration › Invoice Retrieval API" name="should fetch invoice list via API call" time="0.001">
    </testcase>
    <testcase classname="Sales Invoice API Integration › Invoice Retrieval API" name="should fetch single invoice via API call" time="0.001">
    </testcase>
    <testcase classname="Sales Invoice API Integration › Invoice Status Updates API" name="should update invoice status via API call" time="0">
    </testcase>
    <testcase classname="Sales Invoice API Integration › Invoice Status Updates API" name="should handle invalid status transitions" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Cache Management Tests" errors="0" failures="0" skipped="0" timestamp="2025-06-19T17:44:13" time="0.089" tests="34">
    <testcase classname="Cache Management Tests › Basic Cache Operations › Memory Cache" name="should store and retrieve data from memory cache" time="0.001">
    </testcase>
    <testcase classname="Cache Management Tests › Basic Cache Operations › Memory Cache" name="should handle cache expiration" time="0">
    </testcase>
    <testcase classname="Cache Management Tests › Basic Cache Operations › Memory Cache" name="should handle cache miss gracefully" time="0">
    </testcase>
    <testcase classname="Cache Management Tests › Basic Cache Operations › Redis Cache" name="should store data in Redis when available" time="0.001">
    </testcase>
    <testcase classname="Cache Management Tests › Basic Cache Operations › Redis Cache" name="should retrieve data from Redis" time="0">
    </testcase>
    <testcase classname="Cache Management Tests › Basic Cache Operations › Redis Cache" name="should handle Redis connection errors gracefully" time="0">
    </testcase>
    <testcase classname="Cache Management Tests › Basic Cache Operations › Redis Cache" name="should handle Redis get errors gracefully" time="0">
    </testcase>
    <testcase classname="Cache Management Tests › Basic Cache Operations › Cache Invalidation" name="should delete specific cache keys" time="0">
    </testcase>
    <testcase classname="Cache Management Tests › Basic Cache Operations › Cache Invalidation" name="should delete multiple cache keys by pattern" time="0.001">
    </testcase>
    <testcase classname="Cache Management Tests › Basic Cache Operations › Cache Invalidation" name="should handle pattern deletion with no matches" time="0">
    </testcase>
    <testcase classname="Cache Management Tests › Basic Cache Operations › Cache Invalidation" name="should clear all cache data" time="0.001">
    </testcase>
    <testcase classname="Cache Management Tests › Inventory Cache Service › Cache Key Generation" name="should generate consistent cache keys" time="0">
    </testcase>
    <testcase classname="Cache Management Tests › Inventory Cache Service › Cache Key Generation" name="should handle filters with special characters" time="0">
    </testcase>
    <testcase classname="Cache Management Tests › Inventory Cache Service › Cache Storage and Retrieval" name="should store inventory data with TTL" time="0">
    </testcase>
    <testcase classname="Cache Management Tests › Inventory Cache Service › Cache Storage and Retrieval" name="should retrieve cached inventory data" time="0.001">
    </testcase>
    <testcase classname="Cache Management Tests › Inventory Cache Service › Cache Storage and Retrieval" name="should return null for cache miss" time="0">
    </testcase>
    <testcase classname="Cache Management Tests › Inventory Cache Service › Cache Invalidation Strategies" name="should invalidate inventory data by product" time="0">
    </testcase>
    <testcase classname="Cache Management Tests › Inventory Cache Service › Cache Invalidation Strategies" name="should invalidate inventory data by shop" time="0">
    </testcase>
    <testcase classname="Cache Management Tests › Inventory Cache Service › Cache Invalidation Strategies" name="should invalidate inventory data by category" time="0">
    </testcase>
    <testcase classname="Cache Management Tests › Inventory Cache Service › Cache Invalidation Strategies" name="should invalidate all inventory data" time="0.001">
    </testcase>
    <testcase classname="Cache Management Tests › Inventory Cache Service › Cache Warming" name="should warm popular inventory data" time="0">
    </testcase>
    <testcase classname="Cache Management Tests › Inventory Cache Service › Cache Warming" name="should track filter usage for warming strategy" time="0">
    </testcase>
    <testcase classname="Cache Management Tests › Inventory Cache Service › Cache Metrics" name="should collect cache performance metrics" time="0">
    </testcase>
    <testcase classname="Cache Management Tests › Inventory Cache Service › Cache Metrics" name="should track cache performance over time" time="0.001">
    </testcase>
    <testcase classname="Cache Management Tests › Cache Error Handling" name="should handle cache service initialization errors" time="0.01">
    </testcase>
    <testcase classname="Cache Management Tests › Cache Error Handling" name="should handle serialization errors" time="0.001">
    </testcase>
    <testcase classname="Cache Management Tests › Cache Error Handling" name="should handle deserialization errors" time="0">
    </testcase>
    <testcase classname="Cache Management Tests › Cache Error Handling" name="should handle network timeouts gracefully" time="0">
    </testcase>
    <testcase classname="Cache Management Tests › Cache Performance Tests" name="should handle high-frequency cache operations" time="0.001">
    </testcase>
    <testcase classname="Cache Management Tests › Cache Performance Tests" name="should handle concurrent cache access" time="0">
    </testcase>
    <testcase classname="Cache Management Tests › Cache Performance Tests" name="should maintain cache consistency under load" time="0.001">
    </testcase>
    <testcase classname="Cache Management Tests › Cache Configuration" name="should respect TTL settings" time="0">
    </testcase>
    <testcase classname="Cache Management Tests › Cache Configuration" name="should use default TTL when not specified" time="0">
    </testcase>
    <testcase classname="Cache Management Tests › Cache Configuration" name="should handle cache size limits" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Validators" errors="0" failures="0" skipped="0" timestamp="2025-06-19T17:44:13" time="0.139" tests="27">
    <testcase classname="Validators › loginSchema" name="should validate valid login data" time="0.002">
    </testcase>
    <testcase classname="Validators › loginSchema" name="should reject invalid email" time="0.002">
    </testcase>
    <testcase classname="Validators › loginSchema" name="should reject missing password" time="0.001">
    </testcase>
    <testcase classname="Validators › registerSchema" name="should validate valid registration data" time="0.001">
    </testcase>
    <testcase classname="Validators › registerSchema" name="should reject invalid email format" time="0">
    </testcase>
    <testcase classname="Validators › registerSchema" name="should reject short password" time="0.001">
    </testcase>
    <testcase classname="Validators › productSchema" name="should validate valid product data" time="0.002">
    </testcase>
    <testcase classname="Validators › productSchema" name="should reject negative price" time="0">
    </testcase>
    <testcase classname="Validators › productSchema" name="should reject missing required fields" time="0">
    </testcase>
    <testcase classname="Validators › categorySchema" name="should validate valid category data" time="0">
    </testcase>
    <testcase classname="Validators › categorySchema" name="should reject empty name" time="0.001">
    </testcase>
    <testcase classname="Validators › inventorySchema" name="should validate valid inventory data" time="0">
    </testcase>
    <testcase classname="Validators › inventorySchema" name="should reject invalid data" time="0.001">
    </testcase>
    <testcase classname="Validators › shopSchema" name="should validate valid shop data" time="0">
    </testcase>
    <testcase classname="Validators › shopSchema" name="should reject invalid email" time="0.001">
    </testcase>
    <testcase classname="Validators › customerSchema" name="should validate valid customer data" time="0">
    </testcase>
    <testcase classname="Validators › customerSchema" name="should reject invalid email" time="0">
    </testcase>
    <testcase classname="Validators › supplierSchema" name="should validate valid supplier data" time="0">
    </testcase>
    <testcase classname="Validators › supplierSchema" name="should reject invalid data" time="0">
    </testcase>
    <testcase classname="Validators › paginationSchema" name="should validate valid pagination data" time="0">
    </testcase>
    <testcase classname="Validators › paginationSchema" name="should reject negative page number" time="0.001">
    </testcase>
    <testcase classname="Validators › searchSchema" name="should validate valid search data" time="0">
    </testcase>
    <testcase classname="Validators › searchSchema" name="should handle empty query" time="0">
    </testcase>
    <testcase classname="Validators › idSchema" name="should validate valid ID" time="0">
    </testcase>
    <testcase classname="Validators › idSchema" name="should reject negative ID" time="0">
    </testcase>
    <testcase classname="Validators › validateInput utility" name="should validate input using provided schema" time="0">
    </testcase>
    <testcase classname="Validators › validateInput utility" name="should return error for invalid input" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Database Library" errors="0" failures="0" skipped="0" timestamp="2025-06-19T17:44:13" time="0.209" tests="22">
    <testcase classname="Database Library › exports" name="should export db" time="0.001">
    </testcase>
    <testcase classname="Database Library › exports" name="should export prisma" time="0">
    </testcase>
    <testcase classname="Database Library › exports" name="should have db and prisma reference the same instance" time="0">
    </testcase>
    <testcase classname="Database Library › database operations" name="should have $connect method" time="0">
    </testcase>
    <testcase classname="Database Library › database operations" name="should have $disconnect method" time="0">
    </testcase>
    <testcase classname="Database Library › database operations" name="should have $transaction method" time="0">
    </testcase>
    <testcase classname="Database Library › database operations" name="should have user model" time="0">
    </testcase>
    <testcase classname="Database Library › database operations" name="should have product model" time="0.001">
    </testcase>
    <testcase classname="Database Library › database operations" name="should have category model" time="0.002">
    </testcase>
    <testcase classname="Database Library › database operations" name="should have order model" time="0.001">
    </testcase>
    <testcase classname="Database Library › database operations" name="should have cart model" time="0">
    </testcase>
    <testcase classname="Database Library › database operations" name="should have review model" time="0.001">
    </testcase>
    <testcase classname="Database Library › database operations" name="should have payment model" time="0">
    </testcase>
    <testcase classname="Database Library › database operations" name="should have shipping model" time="0">
    </testcase>
    <testcase classname="Database Library › database operations" name="should have address model" time="0">
    </testcase>
    <testcase classname="Database Library › database operations" name="should have wishlist model" time="0.008">
    </testcase>
    <testcase classname="Database Library › database operations" name="should have notification model" time="0">
    </testcase>
    <testcase classname="Database Library › database operations" name="should have auditLog model" time="0.002">
    </testcase>
    <testcase classname="Database Library › database operations" name="should have session model" time="0.011">
    </testcase>
    <testcase classname="Database Library › error handling" name="should handle connection errors" time="0.005">
    </testcase>
    <testcase classname="Database Library › error handling" name="should handle query errors" time="0.001">
    </testcase>
    <testcase classname="Database Library › error handling" name="should propagate transaction errors" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Sales Invoice Management" errors="0" failures="0" skipped="0" timestamp="2025-06-19T17:44:13" time="0.21" tests="12">
    <testcase classname="Sales Invoice Management › Invoice Creation Logic" name="should validate invoice creation data" time="0.014">
    </testcase>
    <testcase classname="Sales Invoice Management › Invoice Creation Logic" name="should calculate invoice totals correctly" time="0.002">
    </testcase>
    <testcase classname="Sales Invoice Management › Invoice Creation Logic" name="should handle discount calculations" time="0.002">
    </testcase>
    <testcase classname="Sales Invoice Management › Invoice Update Logic" name="should validate invoice update permissions" time="0.004">
    </testcase>
    <testcase classname="Sales Invoice Management › Invoice Update Logic" name="should track invoice changes" time="0.002">
    </testcase>
    <testcase classname="Sales Invoice Management › Invoice Deletion Logic" name="should validate invoice deletion permissions" time="0">
    </testcase>
    <testcase classname="Sales Invoice Management › Invoice Deletion Logic" name="should handle soft delete vs hard delete" time="0.001">
    </testcase>
    <testcase classname="Sales Invoice Management › Payment Processing Logic" name="should validate payment data" time="0">
    </testcase>
    <testcase classname="Sales Invoice Management › Payment Processing Logic" name="should calculate payment status correctly" time="0">
    </testcase>
    <testcase classname="Sales Invoice Management › Payment Processing Logic" name="should handle multiple payment methods" time="0.017">
    </testcase>
    <testcase classname="Sales Invoice Management › Invoice Status Workflow" name="should handle invoice status transitions" time="0">
    </testcase>
    <testcase classname="Sales Invoice Management › Invoice Status Workflow" name="should auto-update status based on payments" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Inventory Management System" errors="0" failures="0" skipped="0" timestamp="2025-06-19T17:44:13" time="0.203" tests="13">
    <testcase classname="Inventory Management System › Product Creation and Management" name="should validate product data correctly" time="0.003">
    </testcase>
    <testcase classname="Inventory Management System › Product Creation and Management" name="should calculate weighted average cost correctly" time="0.001">
    </testcase>
    <testcase classname="Inventory Management System › Product Creation and Management" name="should handle barcode uniqueness validation" time="0.002">
    </testcase>
    <testcase classname="Inventory Management System › Stock Level Management" name="should track stock levels correctly" time="0.001">
    </testcase>
    <testcase classname="Inventory Management System › Stock Level Management" name="should calculate stock alerts correctly" time="0.001">
    </testcase>
    <testcase classname="Inventory Management System › Stock Level Management" name="should handle stock distribution across shops" time="0.021">
    </testcase>
    <testcase classname="Inventory Management System › Inventory Transfers" name="should validate transfer data" time="0.001">
    </testcase>
    <testcase classname="Inventory Management System › Inventory Transfers" name="should process transfer correctly" time="0.001">
    </testcase>
    <testcase classname="Inventory Management System › Category Management" name="should validate category data" time="0.001">
    </testcase>
    <testcase classname="Inventory Management System › Category Management" name="should handle category hierarchy" time="0.001">
    </testcase>
    <testcase classname="Inventory Management System › Inventory Value Calculations" name="should calculate total inventory value" time="0">
    </testcase>
    <testcase classname="Inventory Management System › Inventory Value Calculations" name="should calculate profit margins" time="0">
    </testcase>
    <testcase classname="Inventory Management System › Permission-based Access" name="should restrict access based on permissions" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Customer Management System" errors="0" failures="0" skipped="0" timestamp="2025-06-19T17:44:13" time="0.173" tests="16">
    <testcase classname="Customer Management System › Customer Creation and Validation" name="should validate customer data correctly" time="0.002">
    </testcase>
    <testcase classname="Customer Management System › Customer Creation and Validation" name="should handle customer creation API call" time="0.001">
    </testcase>
    <testcase classname="Customer Management System › Credit Limit Management" name="should calculate available credit correctly" time="0">
    </testcase>
    <testcase classname="Customer Management System › Credit Limit Management" name="should validate credit limit changes" time="0.001">
    </testcase>
    <testcase classname="Customer Management System › Credit Limit Management" name="should check credit availability for new sales" time="0">
    </testcase>
    <testcase classname="Customer Management System › Payment Terms and Due Dates" name="should calculate due dates correctly" time="0.002">
    </testcase>
    <testcase classname="Customer Management System › Payment Terms and Due Dates" name="should identify overdue invoices" time="0.001">
    </testcase>
    <testcase classname="Customer Management System › Payment Terms and Due Dates" name="should calculate aging buckets" time="0">
    </testcase>
    <testcase classname="Customer Management System › Customer Transaction History" name="should calculate customer balance correctly" time="0">
    </testcase>
    <testcase classname="Customer Management System › Customer Transaction History" name="should filter transactions by date range" time="0">
    </testcase>
    <testcase classname="Customer Management System › Customer Transaction History" name="should generate customer statement" time="0">
    </testcase>
    <testcase classname="Customer Management System › Customer Search and Filtering" name="should search customers by name" time="0">
    </testcase>
    <testcase classname="Customer Management System › Customer Search and Filtering" name="should filter customers by credit status" time="0.001">
    </testcase>
    <testcase classname="Customer Management System › Customer API Integration" name="should fetch customer list with pagination" time="0.001">
    </testcase>
    <testcase classname="Customer Management System › Customer API Integration" name="should update customer information" time="0">
    </testcase>
    <testcase classname="Customer Management System › Permission-based Access Control" name="should restrict customer operations based on permissions" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Auth Utility Functions (Isolated)" errors="0" failures="0" skipped="0" timestamp="2025-06-19T17:44:13" time="0.091" tests="23">
    <testcase classname="Auth Utility Functions (Isolated) › extractToken (isolated implementation)" name="should extract token from valid authorization header" time="0.001">
    </testcase>
    <testcase classname="Auth Utility Functions (Isolated) › extractToken (isolated implementation)" name="should return null for missing authorization header" time="0">
    </testcase>
    <testcase classname="Auth Utility Functions (Isolated) › extractToken (isolated implementation)" name="should return null for invalid authorization header format" time="0">
    </testcase>
    <testcase classname="Auth Utility Functions (Isolated) › extractToken (isolated implementation)" name="should return null for empty authorization header" time="0">
    </testcase>
    <testcase classname="Auth Utility Functions (Isolated) › extractToken (isolated implementation)" name="should handle authorization header without Bearer prefix" time="0.001">
    </testcase>
    <testcase classname="Auth Utility Functions (Isolated) › getUserIdFromToken (isolated implementation)" name="should return null for missing token" time="0">
    </testcase>
    <testcase classname="Auth Utility Functions (Isolated) › getUserIdFromToken (isolated implementation)" name="should return 1 for dev-token" time="0">
    </testcase>
    <testcase classname="Auth Utility Functions (Isolated) › getUserIdFromToken (isolated implementation)" name="should return user ID from valid token" time="0">
    </testcase>
    <testcase classname="Auth Utility Functions (Isolated) › getUserIdFromToken (isolated implementation)" name="should return null for invalid token payload" time="0">
    </testcase>
    <testcase classname="Auth Utility Functions (Isolated) › getUserIdFromToken (isolated implementation)" name="should return null for token without sub claim" time="0">
    </testcase>
    <testcase classname="Auth Utility Functions (Isolated) › getUserIdFromToken (isolated implementation)" name="should handle verification errors" time="0">
    </testcase>
    <testcase classname="Auth Utility Functions (Isolated) › getShopIdFromToken (isolated implementation)" name="should return null for missing token" time="0">
    </testcase>
    <testcase classname="Auth Utility Functions (Isolated) › getShopIdFromToken (isolated implementation)" name="should return default shop ID for dev-token" time="0.001">
    </testcase>
    <testcase classname="Auth Utility Functions (Isolated) › getShopIdFromToken (isolated implementation)" name="should return shop ID from valid token" time="0">
    </testcase>
    <testcase classname="Auth Utility Functions (Isolated) › getShopIdFromToken (isolated implementation)" name="should return null for token without shopId" time="0">
    </testcase>
    <testcase classname="Auth Utility Functions (Isolated) › getShopIdFromToken (isolated implementation)" name="should convert numeric shopId to string" time="0">
    </testcase>
    <testcase classname="Auth Utility Functions (Isolated) › getShopIdFromToken (isolated implementation)" name="should handle verification errors" time="0">
    </testcase>
    <testcase classname="Auth Utility Functions (Isolated) › validateTokenPermission (isolated implementation)" name="should return invalid for missing token" time="0">
    </testcase>
    <testcase classname="Auth Utility Functions (Isolated) › validateTokenPermission (isolated implementation)" name="should grant permission for dev-token" time="0.001">
    </testcase>
    <testcase classname="Auth Utility Functions (Isolated) › validateTokenPermission (isolated implementation)" name="should grant permission from token payload" time="0">
    </testcase>
    <testcase classname="Auth Utility Functions (Isolated) › validateTokenPermission (isolated implementation)" name="should fallback to database when permission not in token" time="0">
    </testcase>
    <testcase classname="Auth Utility Functions (Isolated) › validateTokenPermission (isolated implementation)" name="should return invalid for user not found" time="0">
    </testcase>
    <testcase classname="Auth Utility Functions (Isolated) › validateTokenPermission (isolated implementation)" name="should handle database errors" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Accessibility Tests" errors="0" failures="0" skipped="0" timestamp="2025-06-19T17:44:11" time="2.235" tests="32">
    <testcase classname="Accessibility Tests › WCAG 2.1 AA Compliance" name="should meet WCAG 2.1 AA standards on Login Page" time="0.004">
    </testcase>
    <testcase classname="Accessibility Tests › WCAG 2.1 AA Compliance" name="should meet WCAG 2.1 AA standards on Dashboard" time="0.001">
    </testcase>
    <testcase classname="Accessibility Tests › WCAG 2.1 AA Compliance" name="should meet WCAG 2.1 AA standards on Products" time="0">
    </testcase>
    <testcase classname="Accessibility Tests › WCAG 2.1 AA Compliance" name="should meet WCAG 2.1 AA standards on Inventory" time="0.001">
    </testcase>
    <testcase classname="Accessibility Tests › WCAG 2.1 AA Compliance" name="should meet WCAG 2.1 AA standards on Sales" time="0.001">
    </testcase>
    <testcase classname="Accessibility Tests › WCAG 2.1 AA Compliance" name="should meet WCAG 2.1 AA standards on Reports" time="0">
    </testcase>
    <testcase classname="Accessibility Tests › WCAG 2.1 AA Compliance" name="should meet WCAG 2.1 AA standards on Settings" time="0">
    </testcase>
    <testcase classname="Accessibility Tests › WCAG 2.1 AA Compliance" name="should have proper color contrast ratios" time="0">
    </testcase>
    <testcase classname="Accessibility Tests › WCAG 2.1 AA Compliance" name="should have proper heading hierarchy" time="0.001">
    </testcase>
    <testcase classname="Accessibility Tests › Keyboard Navigation" name="should support full keyboard navigation" time="0">
    </testcase>
    <testcase classname="Accessibility Tests › Keyboard Navigation" name="should have visible focus indicators" time="0">
    </testcase>
    <testcase classname="Accessibility Tests › Keyboard Navigation" name="should support escape key to close modals" time="0">
    </testcase>
    <testcase classname="Accessibility Tests › Keyboard Navigation" name="should trap focus within modals" time="0">
    </testcase>
    <testcase classname="Accessibility Tests › Screen Reader Support" name="should have proper ARIA labels for interactive elements" time="0">
    </testcase>
    <testcase classname="Accessibility Tests › Screen Reader Support" name="should have proper form labels" time="0.001">
    </testcase>
    <testcase classname="Accessibility Tests › Screen Reader Support" name="should announce dynamic content changes" time="0">
    </testcase>
    <testcase classname="Accessibility Tests › Screen Reader Support" name="should have descriptive link text" time="0.004">
    </testcase>
    <testcase classname="Accessibility Tests › Image Accessibility" name="should have alt text for all informative images" time="0.003">
    </testcase>
    <testcase classname="Accessibility Tests › Image Accessibility" name="should not use images of text for essential information" time="0">
    </testcase>
    <testcase classname="Accessibility Tests › Form Accessibility" name="should have proper error message association" time="0.002">
    </testcase>
    <testcase classname="Accessibility Tests › Form Accessibility" name="should have proper fieldset and legend for grouped fields" time="0.002">
    </testcase>
    <testcase classname="Accessibility Tests › Form Accessibility" name="should provide clear instructions for required fields" time="0.002">
    </testcase>
    <testcase classname="Accessibility Tests › Mobile Accessibility" name="should have adequate touch target sizes" time="0.001">
    </testcase>
    <testcase classname="Accessibility Tests › Mobile Accessibility" name="should support zoom up to 200% without horizontal scrolling" time="0">
    </testcase>
    <testcase classname="Accessibility Tests › Mobile Accessibility" name="should work with device orientation changes" time="0">
    </testcase>
    <testcase classname="Accessibility Tests › Motion and Animation" name="should respect prefers-reduced-motion" time="0">
    </testcase>
    <testcase classname="Accessibility Tests › Motion and Animation" name="should not have content that flashes more than 3 times per second" time="0.001">
    </testcase>
    <testcase classname="Accessibility Tests › Motion and Animation" name="should provide pause controls for auto-playing content" time="0">
    </testcase>
    <testcase classname="Accessibility Tests › Data Tables" name="should have proper table headers" time="0.001">
    </testcase>
    <testcase classname="Accessibility Tests › Data Tables" name="should associate data cells with headers" time="0">
    </testcase>
    <testcase classname="Accessibility Tests › Language and Reading" name="should have proper language attributes" time="0">
    </testcase>
    <testcase classname="Accessibility Tests › Language and Reading" name="should have readable text size and line height" time="0.001">
    </testcase>
  </testsuite>
</testsuites>