f606950b7ae635f21872917043d9b9ae
"use strict";

/* istanbul ignore next */
function cov_2yv2s2kvc() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/admin/clear-cache/route.ts";
  var hash = "27e5827fc56fbca1aab5eb9e018b6fd8cd611dda";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/admin/clear-cache/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 14
        },
        end: {
          line: 12,
          column: 45
        }
      },
      "5": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 47
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "7": {
        start: {
          line: 17,
          column: 27
        },
        end: {
          line: 17,
          column: 89
        }
      },
      "8": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "9": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 23,
          column: 15
        }
      },
      "10": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 55
        }
      },
      "11": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 42
        }
      },
      "12": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 60
        }
      },
      "13": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 34,
          column: 11
        }
      },
      "14": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 56
        }
      },
      "15": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 42,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "POST",
        decl: {
          start: {
            line: 14,
            column: 15
          },
          end: {
            line: 14,
            column: 19
          }
        },
        loc: {
          start: {
            line: 14,
            column: 29
          },
          end: {
            line: 44,
            column: 1
          }
        },
        line: 14
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 39,
            column: 21
          },
          end: {
            line: 39,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 46
          },
          end: {
            line: 39,
            column: 59
          }
        }, {
          start: {
            line: 39,
            column: 62
          },
          end: {
            line: 39,
            column: 77
          }
        }],
        line: 39
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/admin/clear-cache/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { validateTokenPermission } from '@/lib/auth';\nimport { cacheService } from '@/lib/cache';\n\nexport async function POST(request: NextRequest) {\n    try {\n        // Validate admin permissions\n        const authResult = await validateTokenPermission(request, 'admin:all');\n        if (!authResult.isValid) {\n            return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n        }\n\n        // Clear invoice cache\n        await cacheService.invalidateInvoices();\n        \n        // Also clear general cache patterns\n        await cacheService.clear();\n        \n        console.log('\u2705 Cache cleared successfully via API');\n        \n        return NextResponse.json({ \n            success: true, \n            message: 'Cache cleared successfully',\n            timestamp: new Date().toISOString()\n        });\n    } catch (error) {\n        console.error('\u274C Error clearing cache:', error);\n        return NextResponse.json({ \n            error: 'Failed to clear cache',\n            details: error instanceof Error ? error.message : 'Unknown error'\n        }, { status: 500 });\n    }\n}"],
      names: ["POST", "request", "authResult", "validateTokenPermission", "isValid", "NextResponse", "json", "error", "status", "cacheService", "invalidateInvoices", "clear", "console", "log", "success", "message", "timestamp", "Date", "toISOString", "details", "Error"],
      mappings: ";;;;+BAIsBA;;;eAAAA;;;wBAJoB;sBACF;uBACX;AAEtB,eAAeA,KAAKC,OAAoB;IAC3C,IAAI;QACA,6BAA6B;QAC7B,MAAMC,aAAa,MAAMC,IAAAA,6BAAuB,EAACF,SAAS;QAC1D,IAAI,CAACC,WAAWE,OAAO,EAAE;YACrB,OAAOC,oBAAY,CAACC,IAAI,CAAC;gBAAEC,OAAO;YAAe,GAAG;gBAAEC,QAAQ;YAAI;QACtE;QAEA,sBAAsB;QACtB,MAAMC,mBAAY,CAACC,kBAAkB;QAErC,oCAAoC;QACpC,MAAMD,mBAAY,CAACE,KAAK;QAExBC,QAAQC,GAAG,CAAC;QAEZ,OAAOR,oBAAY,CAACC,IAAI,CAAC;YACrBQ,SAAS;YACTC,SAAS;YACTC,WAAW,IAAIC,OAAOC,WAAW;QACrC;IACJ,EAAE,OAAOX,OAAO;QACZK,QAAQL,KAAK,CAAC,2BAA2BA;QACzC,OAAOF,oBAAY,CAACC,IAAI,CAAC;YACrBC,OAAO;YACPY,SAASZ,iBAAiBa,QAAQb,MAAMQ,OAAO,GAAG;QACtD,GAAG;YAAEP,QAAQ;QAAI;IACrB;AACJ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "27e5827fc56fbca1aab5eb9e018b6fd8cd611dda"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2yv2s2kvc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2yv2s2kvc();
cov_2yv2s2kvc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2yv2s2kvc().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2yv2s2kvc().f[0]++;
    cov_2yv2s2kvc().s[2]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_2yv2s2kvc().s[3]++, require("next/server"));
const _auth =
/* istanbul ignore next */
(cov_2yv2s2kvc().s[4]++, require("../../../../lib/auth"));
const _cache =
/* istanbul ignore next */
(cov_2yv2s2kvc().s[5]++, require("../../../../lib/cache"));
async function POST(request) {
  /* istanbul ignore next */
  cov_2yv2s2kvc().f[1]++;
  cov_2yv2s2kvc().s[6]++;
  try {
    // Validate admin permissions
    const authResult =
    /* istanbul ignore next */
    (cov_2yv2s2kvc().s[7]++, await (0, _auth.validateTokenPermission)(request, "admin:all"));
    /* istanbul ignore next */
    cov_2yv2s2kvc().s[8]++;
    if (!authResult.isValid) {
      /* istanbul ignore next */
      cov_2yv2s2kvc().b[0][0]++;
      cov_2yv2s2kvc().s[9]++;
      return _server.NextResponse.json({
        error: "Unauthorized"
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2yv2s2kvc().b[0][1]++;
    }
    // Clear invoice cache
    cov_2yv2s2kvc().s[10]++;
    await _cache.cacheService.invalidateInvoices();
    // Also clear general cache patterns
    /* istanbul ignore next */
    cov_2yv2s2kvc().s[11]++;
    await _cache.cacheService.clear();
    /* istanbul ignore next */
    cov_2yv2s2kvc().s[12]++;
    console.log("✅ Cache cleared successfully via API");
    /* istanbul ignore next */
    cov_2yv2s2kvc().s[13]++;
    return _server.NextResponse.json({
      success: true,
      message: "Cache cleared successfully",
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2yv2s2kvc().s[14]++;
    console.error("❌ Error clearing cache:", error);
    /* istanbul ignore next */
    cov_2yv2s2kvc().s[15]++;
    return _server.NextResponse.json({
      error: "Failed to clear cache",
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2yv2s2kvc().b[1][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2yv2s2kvc().b[1][1]++, "Unknown error")
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMnl2MnMya3ZjIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiUE9TVCIsInJlcXVlc3QiLCJmIiwiYXV0aFJlc3VsdCIsIl9hdXRoIiwidmFsaWRhdGVUb2tlblBlcm1pc3Npb24iLCJpc1ZhbGlkIiwiYiIsIl9zZXJ2ZXIiLCJOZXh0UmVzcG9uc2UiLCJqc29uIiwiZXJyb3IiLCJzdGF0dXMiLCJfY2FjaGUiLCJjYWNoZVNlcnZpY2UiLCJpbnZhbGlkYXRlSW52b2ljZXMiLCJjbGVhciIsImNvbnNvbGUiLCJsb2ciLCJzdWNjZXNzIiwibWVzc2FnZSIsInRpbWVzdGFtcCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImRldGFpbHMiLCJFcnJvciJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWNoaW4vRG9jdW1lbnRzL21kLXNwb3J0cy0vc3JjL2FwcC9hcGkvYWRtaW4vY2xlYXItY2FjaGUvcm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcbmltcG9ydCB7IHZhbGlkYXRlVG9rZW5QZXJtaXNzaW9uIH0gZnJvbSAnQC9saWIvYXV0aCc7XG5pbXBvcnQgeyBjYWNoZVNlcnZpY2UgfSBmcm9tICdAL2xpYi9jYWNoZSc7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gVmFsaWRhdGUgYWRtaW4gcGVybWlzc2lvbnNcbiAgICAgICAgY29uc3QgYXV0aFJlc3VsdCA9IGF3YWl0IHZhbGlkYXRlVG9rZW5QZXJtaXNzaW9uKHJlcXVlc3QsICdhZG1pbjphbGwnKTtcbiAgICAgICAgaWYgKCFhdXRoUmVzdWx0LmlzVmFsaWQpIHtcbiAgICAgICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiAnVW5hdXRob3JpemVkJyB9LCB7IHN0YXR1czogNDAxIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQ2xlYXIgaW52b2ljZSBjYWNoZVxuICAgICAgICBhd2FpdCBjYWNoZVNlcnZpY2UuaW52YWxpZGF0ZUludm9pY2VzKCk7XG4gICAgICAgIFxuICAgICAgICAvLyBBbHNvIGNsZWFyIGdlbmVyYWwgY2FjaGUgcGF0dGVybnNcbiAgICAgICAgYXdhaXQgY2FjaGVTZXJ2aWNlLmNsZWFyKCk7XG4gICAgICAgIFxuICAgICAgICBjb25zb2xlLmxvZygn4pyFIENhY2hlIGNsZWFyZWQgc3VjY2Vzc2Z1bGx5IHZpYSBBUEknKTtcbiAgICAgICAgXG4gICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IFxuICAgICAgICAgICAgc3VjY2VzczogdHJ1ZSwgXG4gICAgICAgICAgICBtZXNzYWdlOiAnQ2FjaGUgY2xlYXJlZCBzdWNjZXNzZnVsbHknLFxuICAgICAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcign4p2MIEVycm9yIGNsZWFyaW5nIGNhY2hlOicsIGVycm9yKTtcbiAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgXG4gICAgICAgICAgICBlcnJvcjogJ0ZhaWxlZCB0byBjbGVhciBjYWNoZScsXG4gICAgICAgICAgICBkZXRhaWxzOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJ1xuICAgICAgICB9LCB7IHN0YXR1czogNTAwIH0pO1xuICAgIH1cbn0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBTVE7SUFBQUEsYUFBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsYUFBQTtBQUFBQSxhQUFBLEdBQUFFLENBQUE7Ozs7OzsrQkFGYzs7Ozs7O1dBQUFDLElBQUE7Ozs7O2lDQUpvQjs7O2lDQUNGOzs7aUNBQ1g7QUFFdEIsZUFBZUEsS0FBS0MsT0FBb0I7RUFBQTtFQUFBSixhQUFBLEdBQUFLLENBQUE7RUFBQUwsYUFBQSxHQUFBRSxDQUFBO0VBQzNDLElBQUk7SUFDQTtJQUNBLE1BQU1JLFVBQUE7SUFBQTtJQUFBLENBQUFOLGFBQUEsR0FBQUUsQ0FBQSxPQUFhLE1BQU0sSUFBQUssS0FBQSxDQUFBQyx1QkFBdUIsRUFBQ0osT0FBQSxFQUFTO0lBQUE7SUFBQUosYUFBQSxHQUFBRSxDQUFBO0lBQzFELElBQUksQ0FBQ0ksVUFBQSxDQUFXRyxPQUFPLEVBQUU7TUFBQTtNQUFBVCxhQUFBLEdBQUFVLENBQUE7TUFBQVYsYUFBQSxHQUFBRSxDQUFBO01BQ3JCLE9BQU9TLE9BQUEsQ0FBQUMsWUFBWSxDQUFDQyxJQUFJLENBQUM7UUFBRUMsS0FBQSxFQUFPO01BQWUsR0FBRztRQUFFQyxNQUFBLEVBQVE7TUFBSTtJQUN0RTtJQUFBO0lBQUE7TUFBQWYsYUFBQSxHQUFBVSxDQUFBO0lBQUE7SUFFQTtJQUFBVixhQUFBLEdBQUFFLENBQUE7SUFDQSxNQUFNYyxNQUFBLENBQUFDLFlBQVksQ0FBQ0Msa0JBQWtCO0lBRXJDO0lBQUE7SUFBQWxCLGFBQUEsR0FBQUUsQ0FBQTtJQUNBLE1BQU1jLE1BQUEsQ0FBQUMsWUFBWSxDQUFDRSxLQUFLO0lBQUE7SUFBQW5CLGFBQUEsR0FBQUUsQ0FBQTtJQUV4QmtCLE9BQUEsQ0FBUUMsR0FBRyxDQUFDO0lBQUE7SUFBQXJCLGFBQUEsR0FBQUUsQ0FBQTtJQUVaLE9BQU9TLE9BQUEsQ0FBQUMsWUFBWSxDQUFDQyxJQUFJLENBQUM7TUFDckJTLE9BQUEsRUFBUztNQUNUQyxPQUFBLEVBQVM7TUFDVEMsU0FBQSxFQUFXLElBQUlDLElBQUEsR0FBT0MsV0FBVztJQUNyQztFQUNKLEVBQUUsT0FBT1osS0FBQSxFQUFPO0lBQUE7SUFBQWQsYUFBQSxHQUFBRSxDQUFBO0lBQ1prQixPQUFBLENBQVFOLEtBQUssQ0FBQywyQkFBMkJBLEtBQUE7SUFBQTtJQUFBZCxhQUFBLEdBQUFFLENBQUE7SUFDekMsT0FBT1MsT0FBQSxDQUFBQyxZQUFZLENBQUNDLElBQUksQ0FBQztNQUNyQkMsS0FBQSxFQUFPO01BQ1BhLE9BQUEsRUFBU2IsS0FBQSxZQUFpQmMsS0FBQTtNQUFBO01BQUEsQ0FBQTVCLGFBQUEsR0FBQVUsQ0FBQSxVQUFRSSxLQUFBLENBQU1TLE9BQU87TUFBQTtNQUFBLENBQUF2QixhQUFBLEdBQUFVLENBQUEsVUFBRztJQUN0RCxHQUFHO01BQUVLLE1BQUEsRUFBUTtJQUFJO0VBQ3JCO0FBQ0oiLCJpZ25vcmVMaXN0IjpbXX0=