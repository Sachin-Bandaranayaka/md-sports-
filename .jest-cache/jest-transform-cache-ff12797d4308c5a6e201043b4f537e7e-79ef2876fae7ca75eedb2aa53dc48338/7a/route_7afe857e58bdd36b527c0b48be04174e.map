{"version":3,"names":["POST","request","cov_1y6f2k2uti","f","s","shopId","productId","adjustmentAmount","notes","json","b","undefined","_server","NextResponse","success","message","status","shopResult","_db","default","query","rows","length","productResult","client","getClient","inventoryResult","inventoryId","oldQuantity","newQuantity","id","parseInt","quantity","Error","result","console","log","data","err","release","error","String"],"sources":["/Users/sachin/Documents/md-sports-/src/app/api/inventory/adjust/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport db from '@/utils/db';\n\n// POST: Adjust inventory quantity\nexport async function POST(request: Request) {\n    try {\n        const { shopId, productId, adjustmentAmount, notes } = await request.json();\n\n        // Validate required fields\n        if (!shopId || !productId || adjustmentAmount === undefined) {\n            return NextResponse.json({\n                success: false,\n                message: 'Shop ID, product ID, and adjustment amount are required'\n            }, { status: 400 });\n        }\n\n        // Validate shop and product\n        const shopResult = await db.query(`\n            SELECT id FROM shops WHERE id = $1 AND is_active = true\n        `, [shopId]);\n\n        if (shopResult.rows.length === 0) {\n            return NextResponse.json({\n                success: false,\n                message: `Shop with ID ${shopId} not found`\n            }, { status: 404 });\n        }\n\n        const productResult = await db.query(`\n            SELECT id FROM products WHERE id = $1 AND is_active = true\n        `, [productId]);\n\n        if (productResult.rows.length === 0) {\n            return NextResponse.json({\n                success: false,\n                message: `Product with ID ${productId} not found`\n            }, { status: 404 });\n        }\n\n        // Begin a transaction\n        const client = await db.getClient();\n        try {\n            await client.query('BEGIN');\n\n            // Check if the inventory item exists\n            const inventoryResult = await client.query(`\n                SELECT id, quantity FROM inventory_items \n                WHERE shop_id = $1 AND product_id = $2\n                FOR UPDATE\n            `, [shopId, productId]);\n\n            let inventoryId;\n            let oldQuantity = 0;\n            let newQuantity;\n\n            if (inventoryResult.rows.length > 0) {\n                // Update existing inventory item\n                inventoryId = inventoryResult.rows[0].id;\n                oldQuantity = parseInt(inventoryResult.rows[0].quantity);\n                newQuantity = oldQuantity + adjustmentAmount;\n\n                // Check if the resulting quantity would be negative\n                if (newQuantity < 0) {\n                    throw new Error(`Cannot adjust quantity to ${newQuantity}. Current quantity is ${oldQuantity}.`);\n                }\n\n                await client.query(`\n                    UPDATE inventory_items \n                    SET \n                        quantity = $1, \n                        last_updated = CURRENT_TIMESTAMP\n                    WHERE \n                        id = $2\n                `, [newQuantity, inventoryId]);\n            } else {\n                // Create new inventory item if adjustment is positive\n                if (adjustmentAmount < 0) {\n                    throw new Error(`Cannot adjust non-existent inventory by negative amount (${adjustmentAmount}).`);\n                }\n\n                newQuantity = adjustmentAmount;\n\n                const result = await client.query(`\n                    INSERT INTO inventory_items (\n                        shop_id, \n                        product_id, \n                        quantity, \n                        reorder_level\n                    ) VALUES ($1, $2, $3, 0)\n                    RETURNING id\n                `, [shopId, productId, newQuantity]);\n\n                inventoryId = result.rows[0].id;\n            }\n\n            // Record the adjustment in an audit log (if we had one)\n            // For now, we'll just log it to console\n            console.log(`Inventory adjustment: Shop ${shopId}, Product ${productId}, Amount ${adjustmentAmount}, Notes: ${notes || 'None'}`);\n\n            await client.query('COMMIT');\n\n            return NextResponse.json({\n                success: true,\n                message: 'Inventory adjusted successfully',\n                data: {\n                    inventoryId,\n                    shopId,\n                    productId,\n                    oldQuantity,\n                    newQuantity,\n                    adjustmentAmount\n                }\n            });\n        } catch (err) {\n            await client.query('ROLLBACK');\n            throw err;\n        } finally {\n            client.release();\n        }\n    } catch (error) {\n        console.error('Error adjusting inventory:', error);\n        return NextResponse.json({\n            success: false,\n            message: 'Error adjusting inventory',\n            error: error instanceof Error ? error.message : String(error)\n        }, { status: 500 });\n    }\n} "],"mappingssB;;;;;;WAAAA,IAAA;;;;;kCAJO;;;wEACd;;;;;;;;;;;;;;;AAGR,eAAeA,KAAKC,OAAgB;EAAA;EAAAC,cAAA,GAAAC,CAAA;EAAAD,cAAA,GAAAE,CAAA;EACvC,IAAI;IACA,MAAM;MAAEC,MAAM;MAAEC,SAAS;MAAEC,gBAAgB;MAAEC;IAAK,CAAE;IAAA;IAAA,CAAAN,cAAA,GAAAE,CAAA,OAAG,MAAMH,OAAA,CAAQQ,IAAI;IAEzE;IAAA;IAAAP,cAAA,GAAAE,CAAA;IACA;IAAI;IAAA,CAAAF,cAAA,GAAAQ,CAAA,WAACL,MAAA;IAAA;IAAA,CAAAH,cAAA,GAAAQ,CAAA,UAAU,CAACJ,SAAA;IAAA;IAAA,CAAAJ,cAAA,GAAAQ,CAAA,UAAaH,gBAAA,KAAqBI,SAAA,GAAW;MAAA;MAAAT,cAAA,GAAAQ,CAAA;MAAAR,cAAA,GAAAE,CAAA;MACzD,OAAOQ,OAAA,CAAAC,YAAY,CAACJ,IAAI,CAAC;QACrBK,OAAA,EAAS;QACTC,OAAA,EAAS;MACb,GAAG;QAAEC,MAAA,EAAQ;MAAI;IACrB;IAAA;IAAA;MAAAd,cAAA,GAAAQ,CAAA;IAAA;IAEA;IACA,MAAMO,UAAA;IAAA;IAAA,CAAAf,cAAA,GAAAE,CAAA,QAAa,MAAMc,GAAA,CAAAC,OAAE,CAACC,KAAK,CAAC;;SAEjC,EAAE,CAACf,MAAA,CAAO;IAAA;IAAAH,cAAA,GAAAE,CAAA;IAEX,IAAIa,UAAA,CAAWI,IAAI,CAACC,MAAM,KAAK,GAAG;MAAA;MAAApB,cAAA,GAAAQ,CAAA;MAAAR,cAAA,GAAAE,CAAA;MAC9B,OAAOQ,OAAA,CAAAC,YAAY,CAACJ,IAAI,CAAC;QACrBK,OAAA,EAAS;QACTC,OAAA,EAAS,gBAAgBV,MAAA;MAC7B,GAAG;QAAEW,MAAA,EAAQ;MAAI;IACrB;IAAA;IAAA;MAAAd,cAAA,GAAAQ,CAAA;IAAA;IAEA,MAAMa,aAAA;IAAA;IAAA,CAAArB,cAAA,GAAAE,CAAA,QAAgB,MAAMc,GAAA,CAAAC,OAAE,CAACC,KAAK,CAAC;;SAEpC,EAAE,CAACd,SAAA,CAAU;IAAA;IAAAJ,cAAA,GAAAE,CAAA;IAEd,IAAImB,aAAA,CAAcF,IAAI,CAACC,MAAM,KAAK,GAAG;MAAA;MAAApB,cAAA,GAAAQ,CAAA;MAAAR,cAAA,GAAAE,CAAA;MACjC,OAAOQ,OAAA,CAAAC,YAAY,CAACJ,IAAI,CAAC;QACrBK,OAAA,EAAS;QACTC,OAAA,EAAS,mBAAmBT,SAAA;MAChC,GAAG;QAAEU,MAAA,EAAQ;MAAI;IACrB;IAAA;IAAA;MAAAd,cAAA,GAAAQ,CAAA;IAAA;IAEA;IACA,MAAMc,MAAA;IAAA;IAAA,CAAAtB,cAAA,GAAAE,CAAA,QAAS,MAAMc,GAAA,CAAAC,OAAE,CAACM,SAAS;IAAA;IAAAvB,cAAA,GAAAE,CAAA;IACjC,IAAI;MAAA;MAAAF,cAAA,GAAAE,CAAA;MACA,MAAMoB,MAAA,CAAOJ,KAAK,CAAC;MAEnB;MACA,MAAMM,eAAA;MAAA;MAAA,CAAAxB,cAAA,GAAAE,CAAA,QAAkB,MAAMoB,MAAA,CAAOJ,KAAK,CAAC;;;;aAI1C,EAAE,CAACf,MAAA,EAAQC,SAAA,CAAU;MAEtB,IAAIqB,WAAA;MACJ,IAAIC,WAAA;MAAA;MAAA,CAAA1B,cAAA,GAAAE,CAAA,QAAc;MAClB,IAAIyB,WAAA;MAAA;MAAA3B,cAAA,GAAAE,CAAA;MAEJ,IAAIsB,eAAA,CAAgBL,IAAI,CAACC,MAAM,GAAG,GAAG;QAAA;QAAApB,cAAA,GAAAQ,CAAA;QAAAR,cAAA,GAAAE,CAAA;QACjC;QACAuB,WAAA,GAAcD,eAAA,CAAgBL,IAAI,CAAC,EAAE,CAACS,EAAE;QAAA;QAAA5B,cAAA,GAAAE,CAAA;QACxCwB,WAAA,GAAcG,QAAA,CAASL,eAAA,CAAgBL,IAAI,CAAC,EAAE,CAACW,QAAQ;QAAA;QAAA9B,cAAA,GAAAE,CAAA;QACvDyB,WAAA,GAAcD,WAAA,GAAcrB,gBAAA;QAE5B;QAAA;QAAAL,cAAA,GAAAE,CAAA;QACA,IAAIyB,WAAA,GAAc,GAAG;UAAA;UAAA3B,cAAA,GAAAQ,CAAA;UAAAR,cAAA,GAAAE,CAAA;UACjB,MAAM,IAAI6B,KAAA,CAAM,6BAA6BJ,WAAA,yBAAoCD,WAAA,GAAc;QACnG;QAAA;QAAA;UAAA1B,cAAA,GAAAQ,CAAA;QAAA;QAAAR,cAAA,GAAAE,CAAA;QAEA,MAAMoB,MAAA,CAAOJ,KAAK,CAAC;;;;;;;iBAOlB,EAAE,CAACS,WAAA,EAAaF,WAAA,CAAY;MACjC,OAAO;QAAA;QAAAzB,cAAA,GAAAQ,CAAA;QAAAR,cAAA,GAAAE,CAAA;QACH;QACA,IAAIG,gBAAA,GAAmB,GAAG;UAAA;UAAAL,cAAA,GAAAQ,CAAA;UAAAR,cAAA,GAAAE,CAAA;UACtB,MAAM,IAAI6B,KAAA,CAAM,4DAA4D1B,gBAAA,IAAoB;QACpG;QAAA;QAAA;UAAAL,cAAA,GAAAQ,CAAA;QAAA;QAAAR,cAAA,GAAAE,CAAA;QAEAyB,WAAA,GAActB,gBAAA;QAEd,MAAM2B,MAAA;QAAA;QAAA,CAAAhC,cAAA,GAAAE,CAAA,QAAS,MAAMoB,MAAA,CAAOJ,KAAK,CAAC;;;;;;;;iBAQjC,EAAE,CAACf,MAAA,EAAQC,SAAA,EAAWuB,WAAA,CAAY;QAAA;QAAA3B,cAAA,GAAAE,CAAA;QAEnCuB,WAAA,GAAcO,MAAA,CAAOb,IAAI,CAAC,EAAE,CAACS,EAAE;MACnC;MAEA;MACA;MAAA;MAAA5B,cAAA,GAAAE,CAAA;MACA+B,OAAA,CAAQC,GAAG,CAAC,8BAA8B/B,MAAA,aAAmBC,SAAA,YAAqBC,gBAAA;MAA4B;MAAA,CAAAL,cAAA,GAAAQ,CAAA,UAAAF,KAAA;MAAA;MAAA,CAAAN,cAAA,GAAAQ,CAAA,UAAS,SAAQ;MAAA;MAAAR,cAAA,GAAAE,CAAA;MAE/H,MAAMoB,MAAA,CAAOJ,KAAK,CAAC;MAAA;MAAAlB,cAAA,GAAAE,CAAA;MAEnB,OAAOQ,OAAA,CAAAC,YAAY,CAACJ,IAAI,CAAC;QACrBK,OAAA,EAAS;QACTC,OAAA,EAAS;QACTsB,IAAA,EAAM;UACFV,WAAA;UACAtB,MAAA;UACAC,SAAA;UACAsB,WAAA;UACAC,WAAA;UACAtB;QACJ;MACJ;IACJ,EAAE,OAAO+B,GAAA,EAAK;MAAA;MAAApC,cAAA,GAAAE,CAAA;MACV,MAAMoB,MAAA,CAAOJ,KAAK,CAAC;MAAA;MAAAlB,cAAA,GAAAE,CAAA;MACnB,MAAMkC,GAAA;IACV,UAAU;MAAA;MAAApC,cAAA,GAAAE,CAAA;MACNoB,MAAA,CAAOe,OAAO;IAClB;EACJ,EAAE,OAAOC,KAAA,EAAO;IAAA;IAAAtC,cAAA,GAAAE,CAAA;IACZ+B,OAAA,CAAQK,KAAK,CAAC,8BAA8BA,KAAA;IAAA;IAAAtC,cAAA,GAAAE,CAAA;IAC5C,OAAOQ,OAAA,CAAAC,YAAY,CAACJ,IAAI,CAAC;MACrBK,OAAA,EAAS;MACTC,OAAA,EAAS;MACTyB,KAAA,EAAOA,KAAA,YAAiBP,KAAA;MAAA;MAAA,CAAA/B,cAAA,GAAAQ,CAAA,WAAQ8B,KAAA,CAAMzB,OAAO;MAAA;MAAA,CAAAb,cAAA,GAAAQ,CAAA,WAAG+B,MAAA,CAAOD,KAAA;IAC3D,GAAG;MAAExB,MAAA,EAAQ;IAAI;EACrB;AACJ","ignoreList":[]}