{"version":3,"names":["_default","Quotation","_sequelize","Model","cov_nctbjirld","s","init","id","type","DataTypes","STRING","primaryKey","defaultValue","f","Math","floor","random","toString","padStart","quotationNumber","allowNull","unique","customerId","references","model","key","date","DATEONLY","expiryDate","subtotal","FLOAT","tax","discount","total","notes","TEXT","createdAt","DATE","NOW","updatedAt","sequelize","_db","default","modelName","tableName","timestamps","underscored","belongsTo","_Customer","foreignKey","as","hasMany"],"sources":["/Users/sachin/Documents/md-sports-/src/lib/models/Quotation.ts"],"sourcesContent":["import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../db';\nimport Customer from './Customer';\n\ninterface QuotationAttributes {\n    id: string;\n    quotationNumber: string;\n    customerId: string;\n    date: Date;\n    expiryDate: Date;\n    subtotal: number;\n    tax: number;\n    discount: number;\n    total: number;\n    notes?: string;\n    createdAt: Date;\n    updatedAt: Date;\n}\n\ninterface QuotationCreationAttributes extends Optional<QuotationAttributes, 'id' | 'createdAt' | 'updatedAt'> { }\n\nclass Quotation extends Model<QuotationAttributes, QuotationCreationAttributes> implements QuotationAttributes {\n    public id!: string;\n    public quotationNumber!: string;\n    public customerId!: string;\n    public date!: Date;\n    public expiryDate!: Date;\n    public subtotal!: number;\n    public tax!: number;\n    public discount!: number;\n    public total!: number;\n    public notes!: string;\n    public createdAt!: Date;\n    public updatedAt!: Date;\n}\n\nQuotation.init({\n    id: {\n        type: DataTypes.STRING,\n        primaryKey: true,\n        defaultValue: () => `QUO${Math.floor(Math.random() * 10000).toString().padStart(4, '0')}`\n    },\n    quotationNumber: {\n        type: DataTypes.STRING,\n        allowNull: false,\n        unique: true\n    },\n    customerId: {\n        type: DataTypes.STRING,\n        allowNull: false,\n        references: {\n            model: 'customers',\n            key: 'id'\n        }\n    },\n    date: {\n        type: DataTypes.DATEONLY,\n        allowNull: false\n    },\n    expiryDate: {\n        type: DataTypes.DATEONLY,\n        allowNull: false\n    },\n    subtotal: {\n        type: DataTypes.FLOAT,\n        allowNull: false,\n        defaultValue: 0\n    },\n    tax: {\n        type: DataTypes.FLOAT,\n        allowNull: false,\n        defaultValue: 0\n    },\n    discount: {\n        type: DataTypes.FLOAT,\n        allowNull: false,\n        defaultValue: 0\n    },\n    total: {\n        type: DataTypes.FLOAT,\n        allowNull: false,\n        defaultValue: 0\n    },\n    notes: {\n        type: DataTypes.TEXT,\n        allowNull: true\n    },\n\n    createdAt: {\n        type: DataTypes.DATE,\n        allowNull: false,\n        defaultValue: DataTypes.NOW\n    },\n    updatedAt: {\n        type: DataTypes.DATE,\n        allowNull: false,\n        defaultValue: DataTypes.NOW\n    }\n}, {\n    sequelize,\n    modelName: 'Quotation',\n    tableName: 'quotations',\n    timestamps: true,\n    underscored: true\n});\n\n// Define association with Customer\nQuotation.belongsTo(Customer, { foreignKey: 'customer_id', as: 'customer' });\nCustomer.hasMany(Quotation, { foreignKey: 'customer_id', as: 'quotations' });\n\nexport default Quotation;"],"mappings":"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","ignoreList":[]}