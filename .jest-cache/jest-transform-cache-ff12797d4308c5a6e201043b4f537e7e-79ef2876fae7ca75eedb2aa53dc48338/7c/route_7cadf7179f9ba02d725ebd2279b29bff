b2ab439274df42d70d897518aebb71ce
"use strict";

/* istanbul ignore next */
function cov_1qx002u8k3() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/sms/send-reminders/route.ts";
  var hash = "c27fc72d7d32c67579db4c8d3b8764e6ed7e1a3c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/sms/send-reminders/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 63
        }
      },
      "5": {
        start: {
          line: 13,
          column: 22
        },
        end: {
          line: 13,
          column: 63
        }
      },
      "6": {
        start: {
          line: 16,
          column: 28
        },
        end: {
          line: 16,
          column: 92
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 5
        }
      },
      "8": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 31
        }
      },
      "9": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "10": {
        start: {
          line: 21,
          column: 23
        },
        end: {
          line: 21,
          column: 77
        }
      },
      "11": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "12": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 30,
          column: 15
        }
      },
      "13": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 37,
          column: 15
        }
      },
      "14": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 65
        }
      },
      "15": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 46,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "POST",
        decl: {
          start: {
            line: 14,
            column: 15
          },
          end: {
            line: 14,
            column: 19
          }
        },
        loc: {
          start: {
            line: 14,
            column: 25
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 14
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 38,
            column: 9
          }
        }],
        line: 22
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/sms/send-reminders/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { requirePermission } from '@/lib/utils/middleware';\nimport { sendOverduePaymentReminders } from '@/utils/invoiceUtils';\n\n// POST: Send payment reminders for all overdue invoices\nexport async function POST(req: NextRequest) {\n    // Check for 'settings:manage' permission\n    const permissionError = await requirePermission('settings:manage')(req);\n    if (permissionError) {\n        return permissionError;\n    }\n\n    try {\n        const result = await sendOverduePaymentReminders();\n\n        if (result.success) {\n            return NextResponse.json({\n                success: true,\n                message: result.message,\n                data: {\n                    successCount: result.successCount,\n                    failedCount: result.failedCount\n                }\n            });\n        } else {\n            return NextResponse.json(\n                {\n                    success: false,\n                    message: result.message\n                },\n                { status: 400 }\n            );\n        }\n    } catch (error) {\n        console.error('Error sending payment reminders:', error);\n        return NextResponse.json(\n            { success: false, message: 'Failed to send payment reminders' },\n            { status: 500 }\n        );\n    }\n} "],
      names: ["POST", "req", "permissionError", "requirePermission", "result", "sendOverduePaymentReminders", "success", "NextResponse", "json", "message", "data", "successCount", "failedCount", "status", "error", "console"],
      mappings: ";;;;+BAKsBA;;;eAAAA;;;wBALoB;4BACR;8BACU;AAGrC,eAAeA,KAAKC,GAAgB;IACvC,yCAAyC;IACzC,MAAMC,kBAAkB,MAAMC,IAAAA,6BAAiB,EAAC,mBAAmBF;IACnE,IAAIC,iBAAiB;QACjB,OAAOA;IACX;IAEA,IAAI;QACA,MAAME,SAAS,MAAMC,IAAAA,yCAA2B;QAEhD,IAAID,OAAOE,OAAO,EAAE;YAChB,OAAOC,oBAAY,CAACC,IAAI,CAAC;gBACrBF,SAAS;gBACTG,SAASL,OAAOK,OAAO;gBACvBC,MAAM;oBACFC,cAAcP,OAAOO,YAAY;oBACjCC,aAAaR,OAAOQ,WAAW;gBACnC;YACJ;QACJ,OAAO;YACH,OAAOL,oBAAY,CAACC,IAAI,CACpB;gBACIF,SAAS;gBACTG,SAASL,OAAOK,OAAO;YAC3B,GACA;gBAAEI,QAAQ;YAAI;QAEtB;IACJ,EAAE,OAAOC,OAAO;QACZC,QAAQD,KAAK,CAAC,oCAAoCA;QAClD,OAAOP,oBAAY,CAACC,IAAI,CACpB;YAAEF,SAAS;YAAOG,SAAS;QAAmC,GAC9D;YAAEI,QAAQ;QAAI;IAEtB;AACJ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c27fc72d7d32c67579db4c8d3b8764e6ed7e1a3c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1qx002u8k3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1qx002u8k3();
cov_1qx002u8k3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1qx002u8k3().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1qx002u8k3().f[0]++;
    cov_1qx002u8k3().s[2]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_1qx002u8k3().s[3]++, require("next/server"));
const _middleware =
/* istanbul ignore next */
(cov_1qx002u8k3().s[4]++, require("../../../../lib/utils/middleware"));
const _invoiceUtils =
/* istanbul ignore next */
(cov_1qx002u8k3().s[5]++, require("../../../../utils/invoiceUtils"));
async function POST(req) {
  /* istanbul ignore next */
  cov_1qx002u8k3().f[1]++;
  // Check for 'settings:manage' permission
  const permissionError =
  /* istanbul ignore next */
  (cov_1qx002u8k3().s[6]++, await (0, _middleware.requirePermission)("settings:manage")(req));
  /* istanbul ignore next */
  cov_1qx002u8k3().s[7]++;
  if (permissionError) {
    /* istanbul ignore next */
    cov_1qx002u8k3().b[0][0]++;
    cov_1qx002u8k3().s[8]++;
    return permissionError;
  } else
  /* istanbul ignore next */
  {
    cov_1qx002u8k3().b[0][1]++;
  }
  cov_1qx002u8k3().s[9]++;
  try {
    const result =
    /* istanbul ignore next */
    (cov_1qx002u8k3().s[10]++, await (0, _invoiceUtils.sendOverduePaymentReminders)());
    /* istanbul ignore next */
    cov_1qx002u8k3().s[11]++;
    if (result.success) {
      /* istanbul ignore next */
      cov_1qx002u8k3().b[1][0]++;
      cov_1qx002u8k3().s[12]++;
      return _server.NextResponse.json({
        success: true,
        message: result.message,
        data: {
          successCount: result.successCount,
          failedCount: result.failedCount
        }
      });
    } else {
      /* istanbul ignore next */
      cov_1qx002u8k3().b[1][1]++;
      cov_1qx002u8k3().s[13]++;
      return _server.NextResponse.json({
        success: false,
        message: result.message
      }, {
        status: 400
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_1qx002u8k3().s[14]++;
    console.error("Error sending payment reminders:", error);
    /* istanbul ignore next */
    cov_1qx002u8k3().s[15]++;
    return _server.NextResponse.json({
      success: false,
      message: "Failed to send payment reminders"
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXF4MDAydThrMyIsImFjdHVhbENvdmVyYWdlIiwicyIsIlBPU1QiLCJyZXEiLCJmIiwicGVybWlzc2lvbkVycm9yIiwiX21pZGRsZXdhcmUiLCJyZXF1aXJlUGVybWlzc2lvbiIsImIiLCJyZXN1bHQiLCJfaW52b2ljZVV0aWxzIiwic2VuZE92ZXJkdWVQYXltZW50UmVtaW5kZXJzIiwic3VjY2VzcyIsIl9zZXJ2ZXIiLCJOZXh0UmVzcG9uc2UiLCJqc29uIiwibWVzc2FnZSIsImRhdGEiLCJzdWNjZXNzQ291bnQiLCJmYWlsZWRDb3VudCIsInN0YXR1cyIsImVycm9yIiwiY29uc29sZSJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWNoaW4vRG9jdW1lbnRzL21kLXNwb3J0cy0vc3JjL2FwcC9hcGkvc21zL3NlbmQtcmVtaW5kZXJzL3JvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XG5pbXBvcnQgeyByZXF1aXJlUGVybWlzc2lvbiB9IGZyb20gJ0AvbGliL3V0aWxzL21pZGRsZXdhcmUnO1xuaW1wb3J0IHsgc2VuZE92ZXJkdWVQYXltZW50UmVtaW5kZXJzIH0gZnJvbSAnQC91dGlscy9pbnZvaWNlVXRpbHMnO1xuXG4vLyBQT1NUOiBTZW5kIHBheW1lbnQgcmVtaW5kZXJzIGZvciBhbGwgb3ZlcmR1ZSBpbnZvaWNlc1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxOiBOZXh0UmVxdWVzdCkge1xuICAgIC8vIENoZWNrIGZvciAnc2V0dGluZ3M6bWFuYWdlJyBwZXJtaXNzaW9uXG4gICAgY29uc3QgcGVybWlzc2lvbkVycm9yID0gYXdhaXQgcmVxdWlyZVBlcm1pc3Npb24oJ3NldHRpbmdzOm1hbmFnZScpKHJlcSk7XG4gICAgaWYgKHBlcm1pc3Npb25FcnJvcikge1xuICAgICAgICByZXR1cm4gcGVybWlzc2lvbkVycm9yO1xuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHNlbmRPdmVyZHVlUGF5bWVudFJlbWluZGVycygpO1xuXG4gICAgICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IHJlc3VsdC5tZXNzYWdlLFxuICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgc3VjY2Vzc0NvdW50OiByZXN1bHQuc3VjY2Vzc0NvdW50LFxuICAgICAgICAgICAgICAgICAgICBmYWlsZWRDb3VudDogcmVzdWx0LmZhaWxlZENvdW50XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogcmVzdWx0Lm1lc3NhZ2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgc3RhdHVzOiA0MDAgfVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHNlbmRpbmcgcGF5bWVudCByZW1pbmRlcnM6JywgZXJyb3IpO1xuICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgICAgICB7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiAnRmFpbGVkIHRvIHNlbmQgcGF5bWVudCByZW1pbmRlcnMnIH0sXG4gICAgICAgICAgICB7IHN0YXR1czogNTAwIH1cbiAgICAgICAgKTtcbiAgICB9XG59ICJdLCJtYXBwaW5ncyI6Ijs7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