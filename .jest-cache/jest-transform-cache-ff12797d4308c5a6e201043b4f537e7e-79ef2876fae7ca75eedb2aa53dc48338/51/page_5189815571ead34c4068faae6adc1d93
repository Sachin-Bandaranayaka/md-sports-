aac3500d98729b3f8262a66d56b697c4
"use strict";

/* istanbul ignore next */
function cov_10zcyiy1hz() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/invoices/page.tsx";
  var hash = "6708e5d99cafa0a50f36080bcc0e6ff60e12523c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/invoices/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 28
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 23
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 26
        }
      },
      "7": {
        start: {
          line: 22,
          column: 20
        },
        end: {
          line: 22,
          column: 48
        }
      },
      "8": {
        start: {
          line: 23,
          column: 34
        },
        end: {
          line: 23,
          column: 105
        }
      },
      "9": {
        start: {
          line: 24,
          column: 15
        },
        end: {
          line: 24,
          column: 31
        }
      },
      "10": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 43
        }
      },
      "11": {
        start: {
          line: 26,
          column: 44
        },
        end: {
          line: 26,
          column: 114
        }
      },
      "12": {
        start: {
          line: 27,
          column: 18
        },
        end: {
          line: 27,
          column: 57
        }
      },
      "13": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 31,
          column: 6
        }
      },
      "14": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 121,
          column: 7
        }
      },
      "15": {
        start: {
          line: 91,
          column: 53
        },
        end: {
          line: 93,
          column: 33
        }
      },
      "16": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 31
        }
      },
      "17": {
        start: {
          line: 124,
          column: 19
        },
        end: {
          line: 124,
          column: 20
        }
      },
      "18": {
        start: {
          line: 125,
          column: 23
        },
        end: {
          line: 125,
          column: 25
        }
      },
      "19": {
        start: {
          line: 128,
          column: 17
        },
        end: {
          line: 128,
          column: 84
        }
      },
      "20": {
        start: {
          line: 129,
          column: 17
        },
        end: {
          line: 129,
          column: 44
        }
      },
      "21": {
        start: {
          line: 130,
          column: 17
        },
        end: {
          line: 130,
          column: 31
        }
      },
      "22": {
        start: {
          line: 132,
          column: 24
        },
        end: {
          line: 160,
          column: 5
        }
      },
      "23": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 188,
          column: 5
        }
      },
      "24": {
        start: {
          line: 163,
          column: 20
        },
        end: {
          line: 163,
          column: 30
        }
      },
      "25": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 184,
          column: 9
        }
      },
      "26": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 167,
          column: 87
        }
      },
      "27": {
        start: {
          line: 168,
          column: 16
        },
        end: {
          line: 168,
          column: 22
        }
      },
      "28": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 170,
          column: 78
        }
      },
      "29": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 171,
          column: 22
        }
      },
      "30": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 173,
          column: 75
        }
      },
      "31": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 174,
          column: 22
        }
      },
      "32": {
        start: {
          line: 176,
          column: 37
        },
        end: {
          line: 176,
          column: 71
        }
      },
      "33": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 177,
          column: 73
        }
      },
      "34": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 178,
          column: 22
        }
      },
      "35": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 180,
          column: 62
        }
      },
      "36": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 181,
          column: 22
        }
      },
      "37": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 183,
          column: 40
        }
      },
      "38": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 187,
          column: 10
        }
      },
      "39": {
        start: {
          line: 190,
          column: 18
        },
        end: {
          line: 192,
          column: 5
        }
      },
      "40": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 234,
          column: 5
        }
      },
      "41": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 233,
          column: 9
        }
      },
      "42": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 198,
          column: 18
        }
      },
      "43": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 199,
          column: 22
        }
      },
      "44": {
        start: {
          line: 201,
          column: 16
        },
        end: {
          line: 203,
          column: 18
        }
      },
      "45": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 204,
          column: 22
        }
      },
      "46": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 208,
          column: 18
        }
      },
      "47": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 209,
          column: 22
        }
      },
      "48": {
        start: {
          line: 211,
          column: 16
        },
        end: {
          line: 215,
          column: 18
        }
      },
      "49": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 216,
          column: 22
        }
      },
      "50": {
        start: {
          line: 218,
          column: 16
        },
        end: {
          line: 220,
          column: 18
        }
      },
      "51": {
        start: {
          line: 221,
          column: 16
        },
        end: {
          line: 221,
          column: 22
        }
      },
      "52": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 225,
          column: 18
        }
      },
      "53": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 226,
          column: 22
        }
      },
      "54": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 231,
          column: 18
        }
      },
      "55": {
        start: {
          line: 232,
          column: 16
        },
        end: {
          line: 232,
          column: 22
        }
      },
      "56": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 405,
          column: 5
        }
      },
      "57": {
        start: {
          line: 237,
          column: 159
        },
        end: {
          line: 348,
          column: 10
        }
      },
      "58": {
        start: {
          line: 349,
          column: 34
        },
        end: {
          line: 375,
          column: 10
        }
      },
      "59": {
        start: {
          line: 350,
          column: 32
        },
        end: {
          line: 350,
          column: 55
        }
      },
      "60": {
        start: {
          line: 354,
          column: 33
        },
        end: {
          line: 354,
          column: 101
        }
      },
      "61": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 359,
          column: 13
        }
      },
      "62": {
        start: {
          line: 356,
          column: 36
        },
        end: {
          line: 356,
          column: 54
        }
      },
      "63": {
        start: {
          line: 357,
          column: 16
        },
        end: {
          line: 357,
          column: 64
        }
      },
      "64": {
        start: {
          line: 358,
          column: 16
        },
        end: {
          line: 358,
          column: 73
        }
      },
      "65": {
        start: {
          line: 361,
          column: 30
        },
        end: {
          line: 361,
          column: 96
        }
      },
      "66": {
        start: {
          line: 361,
          column: 67
        },
        end: {
          line: 361,
          column: 87
        }
      },
      "67": {
        start: {
          line: 362,
          column: 30
        },
        end: {
          line: 362,
          column: 64
        }
      },
      "68": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 374,
          column: 14
        }
      },
      "69": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 388,
          column: 10
        }
      },
      "70": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 390,
          column: 62
        }
      },
      "71": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 404,
          column: 10
        }
      },
      "72": {
        start: {
          line: 408,
          column: 22
        },
        end: {
          line: 408,
          column: 97
        }
      },
      "73": {
        start: {
          line: 409,
          column: 30
        },
        end: {
          line: 409,
          column: 111
        }
      },
      "74": {
        start: {
          line: 410,
          column: 37
        },
        end: {
          line: 410,
          column: 139
        }
      },
      "75": {
        start: {
          line: 411,
          column: 29
        },
        end: {
          line: 411,
          column: 110
        }
      },
      "76": {
        start: {
          line: 412,
          column: 28
        },
        end: {
          line: 412,
          column: 121
        }
      },
      "77": {
        start: {
          line: 413,
          column: 24
        },
        end: {
          line: 413,
          column: 105
        }
      },
      "78": {
        start: {
          line: 414,
          column: 24
        },
        end: {
          line: 414,
          column: 105
        }
      },
      "79": {
        start: {
          line: 415,
          column: 78
        },
        end: {
          line: 432,
          column: 6
        }
      },
      "80": {
        start: {
          line: 433,
          column: 4
        },
        end: {
          line: 446,
          column: 5
        }
      },
      "81": {
        start: {
          line: 434,
          column: 8
        },
        end: {
          line: 445,
          column: 11
        }
      },
      "82": {
        start: {
          line: 447,
          column: 4
        },
        end: {
          line: 464,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 13
          },
          end: {
            line: 12,
            column: 14
          }
        },
        loc: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 13
          },
          end: {
            line: 15,
            column: 14
          }
        },
        loc: {
          start: {
            line: 15,
            column: 24
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 16
          },
          end: {
            line: 18,
            column: 17
          }
        },
        loc: {
          start: {
            line: 18,
            column: 27
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 28,
            column: 9
          },
          end: {
            line: 28,
            column: 33
          }
        },
        loc: {
          start: {
            line: 28,
            column: 39
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 28
      },
      "5": {
        name: "InvoicePageSkeleton",
        decl: {
          start: {
            line: 34,
            column: 9
          },
          end: {
            line: 34,
            column: 28
          }
        },
        loc: {
          start: {
            line: 34,
            column: 31
          },
          end: {
            line: 122,
            column: 1
          }
        },
        line: 34
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 91,
            column: 31
          },
          end: {
            line: 91,
            column: 32
          }
        },
        loc: {
          start: {
            line: 91,
            column: 53
          },
          end: {
            line: 93,
            column: 33
          }
        },
        line: 91
      },
      "7": {
        name: "fetchInvoicesData",
        decl: {
          start: {
            line: 127,
            column: 15
          },
          end: {
            line: 127,
            column: 32
          }
        },
        loc: {
          start: {
            line: 127,
            column: 126
          },
          end: {
            line: 406,
            column: 1
          }
        },
        line: 127
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 349,
            column: 53
          },
          end: {
            line: 349,
            column: 54
          }
        },
        loc: {
          start: {
            line: 349,
            column: 60
          },
          end: {
            line: 375,
            column: 9
          }
        },
        line: 349
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 361,
            column: 51
          },
          end: {
            line: 361,
            column: 52
          }
        },
        loc: {
          start: {
            line: 361,
            column: 67
          },
          end: {
            line: 361,
            column: 87
          }
        },
        line: 361
      },
      "10": {
        name: "InvoicesPage",
        decl: {
          start: {
            line: 407,
            column: 15
          },
          end: {
            line: 407,
            column: 27
          }
        },
        loc: {
          start: {
            line: 407,
            column: 46
          },
          end: {
            line: 465,
            column: 1
          }
        },
        line: 407
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 11
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 35
          },
          end: {
            line: 29,
            column: 38
          }
        }, {
          start: {
            line: 29,
            column: 41
          },
          end: {
            line: 31,
            column: 5
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 11
          },
          end: {
            line: 29,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 11
          },
          end: {
            line: 29,
            column: 14
          }
        }, {
          start: {
            line: 29,
            column: 18
          },
          end: {
            line: 29,
            column: 32
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 127,
            column: 35
          },
          end: {
            line: 127,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 127,
            column: 47
          },
          end: {
            line: 127,
            column: 48
          }
        }],
        line: 127
      },
      "3": {
        loc: {
          start: {
            line: 128,
            column: 17
          },
          end: {
            line: 128,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 128,
            column: 49
          },
          end: {
            line: 128,
            column: 72
          }
        }, {
          start: {
            line: 128,
            column: 75
          },
          end: {
            line: 128,
            column: 84
          }
        }],
        line: 128
      },
      "4": {
        loc: {
          start: {
            line: 133,
            column: 11
          },
          end: {
            line: 135,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 11
          },
          end: {
            line: 133,
            column: 17
          }
        }, {
          start: {
            line: 133,
            column: 21
          },
          end: {
            line: 133,
            column: 37
          }
        }, {
          start: {
            line: 133,
            column: 41
          },
          end: {
            line: 135,
            column: 9
          }
        }],
        line: 133
      },
      "5": {
        loc: {
          start: {
            line: 136,
            column: 11
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 11
          },
          end: {
            line: 136,
            column: 24
          }
        }, {
          start: {
            line: 136,
            column: 28
          },
          end: {
            line: 136,
            column: 51
          }
        }, {
          start: {
            line: 136,
            column: 55
          },
          end: {
            line: 138,
            column: 9
          }
        }],
        line: 136
      },
      "6": {
        loc: {
          start: {
            line: 139,
            column: 11
          },
          end: {
            line: 141,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 11
          },
          end: {
            line: 139,
            column: 17
          }
        }, {
          start: {
            line: 139,
            column: 21
          },
          end: {
            line: 139,
            column: 37
          }
        }, {
          start: {
            line: 139,
            column: 41
          },
          end: {
            line: 141,
            column: 9
          }
        }],
        line: 139
      },
      "7": {
        loc: {
          start: {
            line: 142,
            column: 11
          },
          end: {
            line: 159,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 11
          },
          end: {
            line: 142,
            column: 27
          }
        }, {
          start: {
            line: 142,
            column: 31
          },
          end: {
            line: 159,
            column: 9
          }
        }],
        line: 142
      },
      "8": {
        loc: {
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 188,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 188,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "9": {
        loc: {
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 162,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 162,
            column: 18
          }
        }, {
          start: {
            line: 162,
            column: 22
          },
          end: {
            line: 162,
            column: 42
          }
        }],
        line: 162
      },
      "10": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 166,
            column: 12
          },
          end: {
            line: 168,
            column: 22
          }
        }, {
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 171,
            column: 22
          }
        }, {
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 174,
            column: 22
          }
        }, {
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 178,
            column: 22
          }
        }, {
          start: {
            line: 179,
            column: 12
          },
          end: {
            line: 181,
            column: 22
          }
        }, {
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 183,
            column: 40
          }
        }],
        line: 165
      },
      "11": {
        loc: {
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 234,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 234,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "12": {
        loc: {
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 199,
            column: 22
          }
        }, {
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 204,
            column: 22
          }
        }, {
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 209,
            column: 22
          }
        }, {
          start: {
            line: 210,
            column: 12
          },
          end: {
            line: 216,
            column: 22
          }
        }, {
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 221,
            column: 22
          }
        }, {
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 226,
            column: 22
          }
        }, {
          start: {
            line: 227,
            column: 12
          },
          end: {
            line: 227,
            column: 26
          }
        }, {
          start: {
            line: 228,
            column: 12
          },
          end: {
            line: 232,
            column: 22
          }
        }],
        line: 194
      },
      "13": {
        loc: {
          start: {
            line: 354,
            column: 33
          },
          end: {
            line: 354,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 354,
            column: 47
          },
          end: {
            line: 354,
            column: 96
          }
        }, {
          start: {
            line: 354,
            column: 99
          },
          end: {
            line: 354,
            column: 101
          }
        }],
        line: 354
      },
      "14": {
        loc: {
          start: {
            line: 355,
            column: 12
          },
          end: {
            line: 359,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 355,
            column: 12
          },
          end: {
            line: 359,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 355
      },
      "15": {
        loc: {
          start: {
            line: 355,
            column: 16
          },
          end: {
            line: 355,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 355,
            column: 16
          },
          end: {
            line: 355,
            column: 31
          }
        }, {
          start: {
            line: 355,
            column: 35
          },
          end: {
            line: 355,
            column: 43
          }
        }],
        line: 355
      },
      "16": {
        loc: {
          start: {
            line: 361,
            column: 30
          },
          end: {
            line: 361,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 361,
            column: 30
          },
          end: {
            line: 361,
            column: 91
          }
        }, {
          start: {
            line: 361,
            column: 95
          },
          end: {
            line: 361,
            column: 96
          }
        }],
        line: 361
      },
      "17": {
        loc: {
          start: {
            line: 366,
            column: 30
          },
          end: {
            line: 366,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 366,
            column: 30
          },
          end: {
            line: 366,
            column: 48
          }
        }, {
          start: {
            line: 366,
            column: 52
          },
          end: {
            line: 366,
            column: 70
          }
        }],
        line: 366
      },
      "18": {
        loc: {
          start: {
            line: 367,
            column: 27
          },
          end: {
            line: 367,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 367,
            column: 27
          },
          end: {
            line: 367,
            column: 44
          }
        }, {
          start: {
            line: 367,
            column: 48
          },
          end: {
            line: 367,
            column: 49
          }
        }],
        line: 367
      },
      "19": {
        loc: {
          start: {
            line: 370,
            column: 29
          },
          end: {
            line: 370,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 370,
            column: 29
          },
          end: {
            line: 370,
            column: 44
          }
        }, {
          start: {
            line: 370,
            column: 48
          },
          end: {
            line: 370,
            column: 49
          }
        }],
        line: 370
      },
      "20": {
        loc: {
          start: {
            line: 371,
            column: 30
          },
          end: {
            line: 371,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 371,
            column: 30
          },
          end: {
            line: 371,
            column: 46
          }
        }, {
          start: {
            line: 371,
            column: 50
          },
          end: {
            line: 371,
            column: 51
          }
        }],
        line: 371
      },
      "21": {
        loc: {
          start: {
            line: 381,
            column: 34
          },
          end: {
            line: 381,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 381,
            column: 34
          },
          end: {
            line: 381,
            column: 67
          }
        }, {
          start: {
            line: 381,
            column: 71
          },
          end: {
            line: 381,
            column: 72
          }
        }],
        line: 381
      },
      "22": {
        loc: {
          start: {
            line: 382,
            column: 31
          },
          end: {
            line: 382,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 382,
            column: 31
          },
          end: {
            line: 382,
            column: 61
          }
        }, {
          start: {
            line: 382,
            column: 65
          },
          end: {
            line: 382,
            column: 66
          }
        }],
        line: 382
      },
      "23": {
        loc: {
          start: {
            line: 384,
            column: 29
          },
          end: {
            line: 384,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 384,
            column: 29
          },
          end: {
            line: 384,
            column: 57
          }
        }, {
          start: {
            line: 384,
            column: 61
          },
          end: {
            line: 384,
            column: 62
          }
        }],
        line: 384
      },
      "24": {
        loc: {
          start: {
            line: 385,
            column: 32
          },
          end: {
            line: 385,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 385,
            column: 32
          },
          end: {
            line: 385,
            column: 63
          }
        }, {
          start: {
            line: 385,
            column: 67
          },
          end: {
            line: 385,
            column: 68
          }
        }],
        line: 385
      },
      "25": {
        loc: {
          start: {
            line: 408,
            column: 22
          },
          end: {
            line: 408,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 408,
            column: 57
          },
          end: {
            line: 408,
            column: 77
          }
        }, {
          start: {
            line: 408,
            column: 80
          },
          end: {
            line: 408,
            column: 97
          }
        }],
        line: 408
      },
      "26": {
        loc: {
          start: {
            line: 409,
            column: 30
          },
          end: {
            line: 409,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 409,
            column: 67
          },
          end: {
            line: 409,
            column: 89
          }
        }, {
          start: {
            line: 409,
            column: 92
          },
          end: {
            line: 409,
            column: 111
          }
        }],
        line: 409
      },
      "27": {
        loc: {
          start: {
            line: 410,
            column: 37
          },
          end: {
            line: 410,
            column: 139
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 410,
            column: 81
          },
          end: {
            line: 410,
            column: 110
          }
        }, {
          start: {
            line: 410,
            column: 113
          },
          end: {
            line: 410,
            column: 139
          }
        }],
        line: 410
      },
      "28": {
        loc: {
          start: {
            line: 411,
            column: 29
          },
          end: {
            line: 411,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 411,
            column: 66
          },
          end: {
            line: 411,
            column: 88
          }
        }, {
          start: {
            line: 411,
            column: 91
          },
          end: {
            line: 411,
            column: 110
          }
        }],
        line: 411
      },
      "29": {
        loc: {
          start: {
            line: 412,
            column: 28
          },
          end: {
            line: 412,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 412,
            column: 69
          },
          end: {
            line: 412,
            column: 95
          }
        }, {
          start: {
            line: 412,
            column: 98
          },
          end: {
            line: 412,
            column: 121
          }
        }],
        line: 412
      },
      "30": {
        loc: {
          start: {
            line: 413,
            column: 24
          },
          end: {
            line: 413,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 413,
            column: 61
          },
          end: {
            line: 413,
            column: 83
          }
        }, {
          start: {
            line: 413,
            column: 86
          },
          end: {
            line: 413,
            column: 105
          }
        }],
        line: 413
      },
      "31": {
        loc: {
          start: {
            line: 414,
            column: 24
          },
          end: {
            line: 414,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 414,
            column: 61
          },
          end: {
            line: 414,
            column: 83
          }
        }, {
          start: {
            line: 414,
            column: 86
          },
          end: {
            line: 414,
            column: 105
          }
        }],
        line: 414
      },
      "32": {
        loc: {
          start: {
            line: 417,
            column: 23
          },
          end: {
            line: 417,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 417,
            column: 35
          },
          end: {
            line: 417,
            column: 58
          }
        }, {
          start: {
            line: 417,
            column: 61
          },
          end: {
            line: 417,
            column: 62
          }
        }],
        line: 417
      },
      "33": {
        loc: {
          start: {
            line: 433,
            column: 4
          },
          end: {
            line: 446,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 433,
            column: 4
          },
          end: {
            line: 446,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 433
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0, 0],
      "6": [0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0, 0, 0, 0],
      "11": [0, 0],
      "12": [0, 0, 0, 0, 0, 0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/invoices/page.tsx"],
      sourcesContent: ["import MainLayout from '@/components/layout/MainLayout';\nimport { Suspense } from 'react';\nimport { Prisma } from '@prisma/client';\nimport { prisma } from '@/lib/prisma';\nimport InvoiceClientWrapper from './components/InvoiceClientWrapper';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { unstable_cache } from 'next/cache';\nimport { Loader2 } from 'lucide-react';\n\n// Invoice Page Skeleton Component\nfunction InvoicePageSkeleton() {\n    return (\n        <div className=\"container mx-auto px-4 py-8\">\n            {/* Header Skeleton */}\n            <div className=\"mb-8\">\n                <Skeleton className=\"h-8 w-48 mb-4\" />\n                <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n                    <Skeleton className=\"h-24 w-full\" />\n                    <Skeleton className=\"h-24 w-full\" />\n                    <Skeleton className=\"h-24 w-full\" />\n                    <Skeleton className=\"h-24 w-full\" />\n                </div>\n            </div>\n            \n            {/* Filters Skeleton */}\n            <div className=\"mb-6\">\n                <div className=\"flex flex-wrap gap-4 mb-4\">\n                    <Skeleton className=\"h-10 w-32\" />\n                    <Skeleton className=\"h-10 w-32\" />\n                    <Skeleton className=\"h-10 w-32\" />\n                    <Skeleton className=\"h-10 w-24\" />\n                </div>\n            </div>\n            \n            {/* Table Skeleton */}\n            <div className=\"bg-white rounded-lg shadow\">\n                <div className=\"p-4\">\n                    <div className=\"space-y-4\">\n                        {Array.from({ length: 10 }).map((_, i) => (\n                            <Skeleton key={i} className=\"h-16 w-full\" />\n                        ))}\n                    </div>\n                </div>\n            </div>\n            \n            {/* Pagination Skeleton */}\n            <div className=\"mt-6 flex justify-center\">\n                <div className=\"flex gap-2\">\n                    <Skeleton className=\"h-10 w-20\" />\n                    <Skeleton className=\"h-10 w-10\" />\n                    <Skeleton className=\"h-10 w-10\" />\n                    <Skeleton className=\"h-10 w-10\" />\n                    <Skeleton className=\"h-10 w-20\" />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport const dynamic = 'force-dynamic';\nexport const revalidate = 0; // Disable caching for real-time data\n\n// Interface for Invoice - ensure this matches the shape expected by InvoiceClientWrapper\ninterface Invoice {\n    id: string | number;\n    invoiceNumber: string;\n    customerId: number;\n    customerName?: string;\n    total: number;\n    totalProfit?: number;\n    profitMargin?: number;\n    status: string;\n    paymentMethod: string;\n    createdAt: Date | string;\n    updatedAt: Date | string;\n    date?: string; // Formatted for display\n    dueDate?: string; // Formatted for display\n    notes?: string;\n    totalPaid?: number; // Total amount paid\n    dueAmount?: number; // Amount still due\n}\n\nconst ITEMS_PER_PAGE = 15;\n\n// Optimized function to fetch invoices data with filters and pagination\nasync function fetchInvoicesData({\n    pageParam = 1,\n    status,\n    paymentMethod,\n    timePeriod,\n    searchQueryParam,\n    sortByParam,\n    shopId\n}: {\n    pageParam?: number;\n    status?: string;\n    paymentMethod?: string;\n    timePeriod?: string;\n    searchQueryParam?: string;\n    sortByParam?: string;\n    shopId?: string;\n}) {\n    const page = typeof pageParam === 'string' ? parseInt(pageParam, 10) : pageParam;\n    const skip = (page - 1) * ITEMS_PER_PAGE;\n    const take = ITEMS_PER_PAGE;\n\n    // Build where clause based on filters\n    const whereClause: Prisma.InvoiceWhereInput = {\n        ...(status && status !== 'all' && { status }),\n        ...(paymentMethod && paymentMethod !== 'all' && { paymentMethod }),\n        ...(shopId && shopId !== 'all' && { shopId }),\n        ...(searchQueryParam && {\n            OR: [\n                { invoiceNumber: { contains: searchQueryParam, mode: 'insensitive' } },\n                { customer: { name: { contains: searchQueryParam, mode: 'insensitive' } } },\n            ],\n        }),\n    };\n\n    // Add time period filter\n    if (timePeriod && timePeriod !== 'all') {\n        const now = new Date();\n        let startDate: Date;\n\n        switch (timePeriod) {\n            case 'today':\n                startDate = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n                break;\n            case 'week':\n                startDate = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n                break;\n            case 'month':\n                startDate = new Date(now.getFullYear(), now.getMonth(), 1);\n                break;\n            case 'quarter':\n                const quarterStart = Math.floor(now.getMonth() / 3) * 3;\n                startDate = new Date(now.getFullYear(), quarterStart, 1);\n                break;\n            case 'year':\n                startDate = new Date(now.getFullYear(), 0, 1);\n                break;\n            default:\n                startDate = new Date(0);\n        }\n\n        whereClause.createdAt = {\n            gte: startDate,\n        };\n    }\n\n    // Build order by clause\n    let orderBy: Prisma.InvoiceOrderByWithRelationInput = { createdAt: 'desc' };\n    if (sortByParam) {\n        switch (sortByParam) {\n            case 'oldest':\n                orderBy = { createdAt: 'asc' };\n                break;\n            case 'amount-high':\n                orderBy = { total: 'desc' };\n                break;\n            case 'amount-low':\n                orderBy = { total: 'asc' };\n                break;\n            case 'customer':\n                orderBy = { customer: { name: 'asc' } };\n                break;\n            case 'due-date':\n                orderBy = { dueDate: 'asc' };\n                break;\n            case 'due-date-desc':\n                orderBy = { dueDate: 'desc' };\n                break;\n            case 'newest':\n            default:\n                orderBy = { createdAt: 'desc' };\n                break;\n        }\n    }\n\n    try {\n        // Use Promise.all for parallel execution to improve performance\n        const [invoicesFromDB, totalInvoicesCount, totalOutstandingResult, paidThisMonthResult, overdueCountResult, creditSalesResult, nonCreditSalesResult] = await Promise.all([\n            // Get invoices with pagination - optimized with minimal includes\n            prisma.invoice.findMany({\n                where: whereClause,\n                select: {\n                    id: true,\n                    invoiceNumber: true,\n                    customerId: true,\n                    total: true,\n                    totalProfit: true,\n                    profitMargin: true,\n                    status: true,\n                    paymentMethod: true,\n                    createdAt: true,\n                    updatedAt: true,\n                    invoiceDate: true,\n                    dueDate: true,\n                    notes: true,\n                    shopId: true,\n                    customer: true,\n                    shop: {\n                        select: {\n                            id: true,\n                            name: true,\n                            location: true\n                        }\n                    },\n                    payments: {\n                        where: {\n                            receipt: {\n                                isNot: null\n                            }\n                        },\n                        select: {\n                            amount: true\n                        }\n                    },\n                    _count: {\n                        select: { items: true },\n                    },\n                },\n                orderBy: orderBy,\n                skip: (page - 1) * ITEMS_PER_PAGE,\n                take: ITEMS_PER_PAGE,\n            }),\n            \n            // Get total count for pagination\n            prisma.invoice.count({ where: whereClause }),\n            \n            // Calculate total outstanding\n            prisma.invoice.aggregate({\n                _sum: { total: true },\n                where: {\n                    ...whereClause,\n                    status: { notIn: ['paid', 'cancelled', 'void'] },\n                }\n            }),\n            \n            // Get paid this month\n            prisma.invoice.aggregate({\n                _sum: { total: true },\n                where: {\n                    ...whereClause,\n                    status: 'paid',\n                    updatedAt: { gte: new Date(new Date().getFullYear(), new Date().getMonth(), 1) },\n                }\n            }),\n            \n            // Get overdue count\n            prisma.invoice.count({\n                where: {\n                    ...whereClause,\n                    status: 'overdue',\n                }\n            }),\n            \n            // Credit sales (wholesale customers)\n            prisma.invoice.aggregate({\n                _sum: { total: true },\n                where: {\n                    ...whereClause,\n                    customer: {\n                        customerType: 'wholesale'\n                    }\n                }\n            }),\n            \n            // Non-credit sales (retail customers)\n            prisma.invoice.aggregate({\n                _sum: { total: true },\n                where: {\n                    ...whereClause,\n                    customer: {\n                        customerType: 'retail'\n                    }\n                }\n            }),\n        ]);\n\n\n        const formattedInvoices: Invoice[] = invoicesFromDB.map(inv => {\n            const createdDate = new Date(inv.createdAt);\n            // const dueDate = new Date(createdDate);\n            // dueDate.setDate(dueDate.getDate() + 30); // Assuming due date is always 30 days from creation\n            // It's better if dueDate is stored or calculated based on actual terms\n            let displayDueDate = inv.dueDate ? new Date(inv.dueDate).toISOString().split('T')[0] : '';\n            if (!displayDueDate && inv.date) { // Fallback if specific dueDate field doesn't exist on model but a general 'date' might imply it\n                const tempDueDate = new Date(inv.date);\n                tempDueDate.setDate(tempDueDate.getDate() + 30); // Example: 30 days after invoice date\n                displayDueDate = tempDueDate.toISOString().split('T')[0];\n            }\n\n            // Calculate total paid and due amount\n            const totalPaid = inv.payments?.reduce((sum, payment) => sum + payment.amount, 0) || 0;\n            const dueAmount = Math.max(0, inv.total - totalPaid);\n\n            return {\n                ...inv,\n                id: inv.id.toString(), // Ensure ID is string\n                customerName: inv.customer?.name || 'Unknown Customer',\n                itemCount: inv._count?.items || 0,\n                date: createdDate.toISOString().split('T')[0],\n                dueDate: displayDueDate, // Use the calculated or existing due date\n                totalProfit: inv.totalProfit || 0,\n                profitMargin: inv.profitMargin || 0,\n                totalPaid,\n                dueAmount\n            };\n        });\n\n        return {\n            invoices: formattedInvoices,\n            totalPages: Math.ceil(totalInvoicesCount / ITEMS_PER_PAGE),\n            currentPage: page,\n            statistics: {\n                totalOutstanding: totalOutstandingResult._sum.total || 0,\n                paidThisMonth: paidThisMonthResult._sum.total || 0,\n                overdueCount: overdueCountResult,\n                creditSales: creditSalesResult._sum.total || 0,\n                nonCreditSales: nonCreditSalesResult._sum.total || 0,\n            },\n            error: null,\n        };\n\n    } catch (error) {\n        console.error('Error fetching invoices data:', error);\n        // It's good practice to return a consistent shape even on error\n        return {\n            invoices: [],\n            totalPages: 0,\n            currentPage: 1,\n            statistics: {\n                totalOutstanding: 0,\n                paidThisMonth: 0,\n                overdueCount: 0,\n                creditSales: 0,\n                nonCreditSales: 0,\n            },\n            error: 'Failed to fetch invoices',\n        };\n    }\n}\n\nexport default async function InvoicesPage({\n    searchParams,\n}: {\n    searchParams: { [key: string]: string | string[] | undefined };\n}) {\n    const pageParam = Array.isArray(searchParams.page) ? searchParams.page[0] : searchParams.page;\n    const statusFilterParam = Array.isArray(searchParams.status) ? searchParams.status[0] : searchParams.status;\n    const paymentMethodFilterParam = Array.isArray(searchParams.paymentMethod) ? searchParams.paymentMethod[0] : searchParams.paymentMethod;\n    const searchQueryParam = Array.isArray(searchParams.search) ? searchParams.search[0] : searchParams.search;\n    const timePeriodParam = Array.isArray(searchParams.timePeriod) ? searchParams.timePeriod[0] : searchParams.timePeriod;\n    const sortByParam = Array.isArray(searchParams.sortBy) ? searchParams.sortBy[0] : searchParams.sortBy;\n    const shopIdParam = Array.isArray(searchParams.shopId) ? searchParams.shopId[0] : searchParams.shopId;\n\n    const [{ invoices, totalPages, currentPage, statistics, error }, shops] = await Promise.all([\n        fetchInvoicesData({\n            pageParam: pageParam ? parseInt(pageParam, 10) : 1,\n            status: statusFilterParam,\n            paymentMethod: paymentMethodFilterParam,\n            searchQueryParam,\n            timePeriod: timePeriodParam,\n            sortByParam,\n            shopId: shopIdParam\n        }),\n        prisma.shop.findMany({\n            select: {\n                id: true,\n                name: true,\n                location: true\n            }\n        })\n    ]);\n\n    if (error) {\n        return (\n            <MainLayout>\n                <div className=\"container mx-auto px-4 py-8\">\n                    <p className=\"text-red-500 text-center\">{error}. Please try refreshing the page.</p>\n                </div>\n            </MainLayout>\n        );\n    }\n\n    return (\n        <MainLayout>\n            <Suspense fallback={<InvoicePageSkeleton />}>\n                <InvoiceClientWrapper\n                    initialInvoices={invoices}\n                    initialTotalPages={totalPages}\n                    initialCurrentPage={currentPage}\n                    initialStatistics={{\n                        totalOutstanding: statistics.totalOutstanding,\n                        paidThisMonth: statistics.paidThisMonth,\n                        overdueCount: statistics.overdueCount,\n                        totalCreditSales: statistics.creditSales,\n                        totalNonCreditSales: statistics.nonCreditSales\n                    }}\n                    shops={shops}\n                />\n            </Suspense>\n        </MainLayout>\n    );\n}"],
      names: ["InvoicesPage", "dynamic", "revalidate", "InvoicePageSkeleton", "div", "className", "Skeleton", "Array", "from", "length", "map", "_", "i", "ITEMS_PER_PAGE", "fetchInvoicesData", "pageParam", "status", "paymentMethod", "timePeriod", "searchQueryParam", "sortByParam", "shopId", "page", "parseInt", "skip", "take", "whereClause", "OR", "invoiceNumber", "contains", "mode", "customer", "name", "now", "Date", "startDate", "getFullYear", "getMonth", "getDate", "getTime", "quarterStart", "Math", "floor", "createdAt", "gte", "orderBy", "total", "dueDate", "invoicesFromDB", "totalInvoicesCount", "totalOutstandingResult", "paidThisMonthResult", "overdueCountResult", "creditSalesResult", "nonCreditSalesResult", "Promise", "all", "prisma", "invoice", "findMany", "where", "select", "id", "customerId", "totalProfit", "profitMargin", "updatedAt", "invoiceDate", "notes", "shop", "location", "payments", "receipt", "isNot", "amount", "_count", "items", "count", "aggregate", "_sum", "notIn", "customerType", "formattedInvoices", "inv", "createdDate", "displayDueDate", "toISOString", "split", "date", "tempDueDate", "setDate", "totalPaid", "reduce", "sum", "payment", "dueAmount", "max", "toString", "customerName", "itemCount", "invoices", "totalPages", "ceil", "currentPage", "statistics", "totalOutstanding", "paidThisMonth", "overdueCount", "creditSales", "nonCreditSales", "error", "console", "searchParams", "isArray", "statusFilterParam", "paymentMethodFilterParam", "search", "timePeriodParam", "sortBy", "shopIdParam", "shops", "MainLayout", "p", "Suspense", "fallback", "InvoiceClientWrapper", "initialInvoices", "initialTotalPages", "initialCurrentPage", "initialStatistics", "totalCreditSales", "totalNonCreditSales"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6708e5d99cafa0a50f36080bcc0e6ff60e12523c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_10zcyiy1hz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_10zcyiy1hz();
cov_10zcyiy1hz().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_10zcyiy1hz().f[0]++;
  cov_10zcyiy1hz().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_10zcyiy1hz().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_10zcyiy1hz().s[3]++;
_export(exports, {
  default: function () {
    /* istanbul ignore next */
    cov_10zcyiy1hz().f[1]++;
    cov_10zcyiy1hz().s[4]++;
    return InvoicesPage;
  },
  dynamic: function () {
    /* istanbul ignore next */
    cov_10zcyiy1hz().f[2]++;
    cov_10zcyiy1hz().s[5]++;
    return dynamic;
  },
  revalidate: function () {
    /* istanbul ignore next */
    cov_10zcyiy1hz().f[3]++;
    cov_10zcyiy1hz().s[6]++;
    return revalidate;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_10zcyiy1hz().s[7]++, require("react/jsx-runtime"));
const _MainLayout =
/* istanbul ignore next */
(/*#__PURE__*/cov_10zcyiy1hz().s[8]++, _interop_require_default(require("../../components/layout/MainLayout")));
const _react =
/* istanbul ignore next */
(cov_10zcyiy1hz().s[9]++, require("react"));
const _prisma =
/* istanbul ignore next */
(cov_10zcyiy1hz().s[10]++, require("../../lib/prisma"));
const _InvoiceClientWrapper =
/* istanbul ignore next */
(/*#__PURE__*/cov_10zcyiy1hz().s[11]++, _interop_require_default(require("./components/InvoiceClientWrapper")));
const _skeleton =
/* istanbul ignore next */
(cov_10zcyiy1hz().s[12]++, require("../../components/ui/skeleton"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_10zcyiy1hz().f[4]++;
  cov_10zcyiy1hz().s[13]++;
  return /* istanbul ignore next */(cov_10zcyiy1hz().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_10zcyiy1hz().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_10zcyiy1hz().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_10zcyiy1hz().b[0][1]++, {
    default: obj
  });
}
// Invoice Page Skeleton Component
function InvoicePageSkeleton() {
  /* istanbul ignore next */
  cov_10zcyiy1hz().f[5]++;
  cov_10zcyiy1hz().s[14]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "container mx-auto px-4 py-8",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "mb-8",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
        className: "h-8 w-48 mb-4"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "grid grid-cols-1 md:grid-cols-4 gap-4 mb-6",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
          className: "h-24 w-full"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
          className: "h-24 w-full"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
          className: "h-24 w-full"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
          className: "h-24 w-full"
        })]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "mb-6",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex flex-wrap gap-4 mb-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
          className: "h-10 w-32"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
          className: "h-10 w-32"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
          className: "h-10 w-32"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
          className: "h-10 w-24"
        })]
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "bg-white rounded-lg shadow",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "p-4",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "space-y-4",
          children: Array.from({
            length: 10
          }).map((_, i) => {
            /* istanbul ignore next */
            cov_10zcyiy1hz().f[6]++;
            cov_10zcyiy1hz().s[15]++;
            return /*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
              className: "h-16 w-full"
            }, i);
          })
        })
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "mt-6 flex justify-center",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex gap-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
          className: "h-10 w-20"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
          className: "h-10 w-10"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
          className: "h-10 w-10"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
          className: "h-10 w-10"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
          className: "h-10 w-20"
        })]
      })
    })]
  });
}
const dynamic =
/* istanbul ignore next */
(cov_10zcyiy1hz().s[16]++, "force-dynamic");
const revalidate =
/* istanbul ignore next */
(cov_10zcyiy1hz().s[17]++, 0); // Disable caching for real-time data
const ITEMS_PER_PAGE =
/* istanbul ignore next */
(cov_10zcyiy1hz().s[18]++, 15);
// Optimized function to fetch invoices data with filters and pagination
async function fetchInvoicesData({
  pageParam =
  /* istanbul ignore next */
  (cov_10zcyiy1hz().b[2][0]++, 1),
  status,
  paymentMethod,
  timePeriod,
  searchQueryParam,
  sortByParam,
  shopId
}) {
  /* istanbul ignore next */
  cov_10zcyiy1hz().f[7]++;
  const page =
  /* istanbul ignore next */
  (cov_10zcyiy1hz().s[19]++, typeof pageParam === "string" ?
  /* istanbul ignore next */
  (cov_10zcyiy1hz().b[3][0]++, parseInt(pageParam, 10)) :
  /* istanbul ignore next */
  (cov_10zcyiy1hz().b[3][1]++, pageParam));
  const skip =
  /* istanbul ignore next */
  (cov_10zcyiy1hz().s[20]++, (page - 1) * ITEMS_PER_PAGE);
  const take =
  /* istanbul ignore next */
  (cov_10zcyiy1hz().s[21]++, ITEMS_PER_PAGE);
  // Build where clause based on filters
  const whereClause =
  /* istanbul ignore next */
  (cov_10zcyiy1hz().s[22]++, {
    ...(
    /* istanbul ignore next */
    (cov_10zcyiy1hz().b[4][0]++, status) &&
    /* istanbul ignore next */
    (cov_10zcyiy1hz().b[4][1]++, status !== "all") &&
    /* istanbul ignore next */
    (cov_10zcyiy1hz().b[4][2]++, {
      status
    })),
    ...(
    /* istanbul ignore next */
    (cov_10zcyiy1hz().b[5][0]++, paymentMethod) &&
    /* istanbul ignore next */
    (cov_10zcyiy1hz().b[5][1]++, paymentMethod !== "all") &&
    /* istanbul ignore next */
    (cov_10zcyiy1hz().b[5][2]++, {
      paymentMethod
    })),
    ...(
    /* istanbul ignore next */
    (cov_10zcyiy1hz().b[6][0]++, shopId) &&
    /* istanbul ignore next */
    (cov_10zcyiy1hz().b[6][1]++, shopId !== "all") &&
    /* istanbul ignore next */
    (cov_10zcyiy1hz().b[6][2]++, {
      shopId
    })),
    ...(
    /* istanbul ignore next */
    (cov_10zcyiy1hz().b[7][0]++, searchQueryParam) &&
    /* istanbul ignore next */
    (cov_10zcyiy1hz().b[7][1]++, {
      OR: [{
        invoiceNumber: {
          contains: searchQueryParam,
          mode: "insensitive"
        }
      }, {
        customer: {
          name: {
            contains: searchQueryParam,
            mode: "insensitive"
          }
        }
      }]
    }))
  });
  // Add time period filter
  /* istanbul ignore next */
  cov_10zcyiy1hz().s[23]++;
  if (
  /* istanbul ignore next */
  (cov_10zcyiy1hz().b[9][0]++, timePeriod) &&
  /* istanbul ignore next */
  (cov_10zcyiy1hz().b[9][1]++, timePeriod !== "all")) {
    /* istanbul ignore next */
    cov_10zcyiy1hz().b[8][0]++;
    const now =
    /* istanbul ignore next */
    (cov_10zcyiy1hz().s[24]++, new Date());
    let startDate;
    /* istanbul ignore next */
    cov_10zcyiy1hz().s[25]++;
    switch (timePeriod) {
      case "today":
        /* istanbul ignore next */
        cov_10zcyiy1hz().b[10][0]++;
        cov_10zcyiy1hz().s[26]++;
        startDate = new Date(now.getFullYear(), now.getMonth(), now.getDate());
        /* istanbul ignore next */
        cov_10zcyiy1hz().s[27]++;
        break;
      case "week":
        /* istanbul ignore next */
        cov_10zcyiy1hz().b[10][1]++;
        cov_10zcyiy1hz().s[28]++;
        startDate = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);
        /* istanbul ignore next */
        cov_10zcyiy1hz().s[29]++;
        break;
      case "month":
        /* istanbul ignore next */
        cov_10zcyiy1hz().b[10][2]++;
        cov_10zcyiy1hz().s[30]++;
        startDate = new Date(now.getFullYear(), now.getMonth(), 1);
        /* istanbul ignore next */
        cov_10zcyiy1hz().s[31]++;
        break;
      case "quarter":
        /* istanbul ignore next */
        cov_10zcyiy1hz().b[10][3]++;
        const quarterStart =
        /* istanbul ignore next */
        (cov_10zcyiy1hz().s[32]++, Math.floor(now.getMonth() / 3) * 3);
        /* istanbul ignore next */
        cov_10zcyiy1hz().s[33]++;
        startDate = new Date(now.getFullYear(), quarterStart, 1);
        /* istanbul ignore next */
        cov_10zcyiy1hz().s[34]++;
        break;
      case "year":
        /* istanbul ignore next */
        cov_10zcyiy1hz().b[10][4]++;
        cov_10zcyiy1hz().s[35]++;
        startDate = new Date(now.getFullYear(), 0, 1);
        /* istanbul ignore next */
        cov_10zcyiy1hz().s[36]++;
        break;
      default:
        /* istanbul ignore next */
        cov_10zcyiy1hz().b[10][5]++;
        cov_10zcyiy1hz().s[37]++;
        startDate = new Date(0);
    }
    /* istanbul ignore next */
    cov_10zcyiy1hz().s[38]++;
    whereClause.createdAt = {
      gte: startDate
    };
  } else
  /* istanbul ignore next */
  {
    cov_10zcyiy1hz().b[8][1]++;
  }
  // Build order by clause
  let orderBy =
  /* istanbul ignore next */
  (cov_10zcyiy1hz().s[39]++, {
    createdAt: "desc"
  });
  /* istanbul ignore next */
  cov_10zcyiy1hz().s[40]++;
  if (sortByParam) {
    /* istanbul ignore next */
    cov_10zcyiy1hz().b[11][0]++;
    cov_10zcyiy1hz().s[41]++;
    switch (sortByParam) {
      case "oldest":
        /* istanbul ignore next */
        cov_10zcyiy1hz().b[12][0]++;
        cov_10zcyiy1hz().s[42]++;
        orderBy = {
          createdAt: "asc"
        };
        /* istanbul ignore next */
        cov_10zcyiy1hz().s[43]++;
        break;
      case "amount-high":
        /* istanbul ignore next */
        cov_10zcyiy1hz().b[12][1]++;
        cov_10zcyiy1hz().s[44]++;
        orderBy = {
          total: "desc"
        };
        /* istanbul ignore next */
        cov_10zcyiy1hz().s[45]++;
        break;
      case "amount-low":
        /* istanbul ignore next */
        cov_10zcyiy1hz().b[12][2]++;
        cov_10zcyiy1hz().s[46]++;
        orderBy = {
          total: "asc"
        };
        /* istanbul ignore next */
        cov_10zcyiy1hz().s[47]++;
        break;
      case "customer":
        /* istanbul ignore next */
        cov_10zcyiy1hz().b[12][3]++;
        cov_10zcyiy1hz().s[48]++;
        orderBy = {
          customer: {
            name: "asc"
          }
        };
        /* istanbul ignore next */
        cov_10zcyiy1hz().s[49]++;
        break;
      case "due-date":
        /* istanbul ignore next */
        cov_10zcyiy1hz().b[12][4]++;
        cov_10zcyiy1hz().s[50]++;
        orderBy = {
          dueDate: "asc"
        };
        /* istanbul ignore next */
        cov_10zcyiy1hz().s[51]++;
        break;
      case "due-date-desc":
        /* istanbul ignore next */
        cov_10zcyiy1hz().b[12][5]++;
        cov_10zcyiy1hz().s[52]++;
        orderBy = {
          dueDate: "desc"
        };
        /* istanbul ignore next */
        cov_10zcyiy1hz().s[53]++;
        break;
      case "newest":
        /* istanbul ignore next */
        cov_10zcyiy1hz().b[12][6]++;
      default:
        /* istanbul ignore next */
        cov_10zcyiy1hz().b[12][7]++;
        cov_10zcyiy1hz().s[54]++;
        orderBy = {
          createdAt: "desc"
        };
        /* istanbul ignore next */
        cov_10zcyiy1hz().s[55]++;
        break;
    }
  } else
  /* istanbul ignore next */
  {
    cov_10zcyiy1hz().b[11][1]++;
  }
  cov_10zcyiy1hz().s[56]++;
  try {
    // Use Promise.all for parallel execution to improve performance
    const [invoicesFromDB, totalInvoicesCount, totalOutstandingResult, paidThisMonthResult, overdueCountResult, creditSalesResult, nonCreditSalesResult] =
    /* istanbul ignore next */
    (cov_10zcyiy1hz().s[57]++, await Promise.all([
    // Get invoices with pagination - optimized with minimal includes
    _prisma.prisma.invoice.findMany({
      where: whereClause,
      select: {
        id: true,
        invoiceNumber: true,
        customerId: true,
        total: true,
        totalProfit: true,
        profitMargin: true,
        status: true,
        paymentMethod: true,
        createdAt: true,
        updatedAt: true,
        invoiceDate: true,
        dueDate: true,
        notes: true,
        shopId: true,
        customer: true,
        shop: {
          select: {
            id: true,
            name: true,
            location: true
          }
        },
        payments: {
          where: {
            receipt: {
              isNot: null
            }
          },
          select: {
            amount: true
          }
        },
        _count: {
          select: {
            items: true
          }
        }
      },
      orderBy: orderBy,
      skip: (page - 1) * ITEMS_PER_PAGE,
      take: ITEMS_PER_PAGE
    }),
    // Get total count for pagination
    _prisma.prisma.invoice.count({
      where: whereClause
    }),
    // Calculate total outstanding
    _prisma.prisma.invoice.aggregate({
      _sum: {
        total: true
      },
      where: {
        ...whereClause,
        status: {
          notIn: ["paid", "cancelled", "void"]
        }
      }
    }),
    // Get paid this month
    _prisma.prisma.invoice.aggregate({
      _sum: {
        total: true
      },
      where: {
        ...whereClause,
        status: "paid",
        updatedAt: {
          gte: new Date(new Date().getFullYear(), new Date().getMonth(), 1)
        }
      }
    }),
    // Get overdue count
    _prisma.prisma.invoice.count({
      where: {
        ...whereClause,
        status: "overdue"
      }
    }),
    // Credit sales (wholesale customers)
    _prisma.prisma.invoice.aggregate({
      _sum: {
        total: true
      },
      where: {
        ...whereClause,
        customer: {
          customerType: "wholesale"
        }
      }
    }),
    // Non-credit sales (retail customers)
    _prisma.prisma.invoice.aggregate({
      _sum: {
        total: true
      },
      where: {
        ...whereClause,
        customer: {
          customerType: "retail"
        }
      }
    })]));
    const formattedInvoices =
    /* istanbul ignore next */
    (cov_10zcyiy1hz().s[58]++, invoicesFromDB.map(inv => {
      /* istanbul ignore next */
      cov_10zcyiy1hz().f[8]++;
      const createdDate =
      /* istanbul ignore next */
      (cov_10zcyiy1hz().s[59]++, new Date(inv.createdAt));
      // const dueDate = new Date(createdDate);
      // dueDate.setDate(dueDate.getDate() + 30); // Assuming due date is always 30 days from creation
      // It's better if dueDate is stored or calculated based on actual terms
      let displayDueDate =
      /* istanbul ignore next */
      (cov_10zcyiy1hz().s[60]++, inv.dueDate ?
      /* istanbul ignore next */
      (cov_10zcyiy1hz().b[13][0]++, new Date(inv.dueDate).toISOString().split("T")[0]) :
      /* istanbul ignore next */
      (cov_10zcyiy1hz().b[13][1]++, ""));
      /* istanbul ignore next */
      cov_10zcyiy1hz().s[61]++;
      if (
      /* istanbul ignore next */
      (cov_10zcyiy1hz().b[15][0]++, !displayDueDate) &&
      /* istanbul ignore next */
      (cov_10zcyiy1hz().b[15][1]++, inv.date)) {
        /* istanbul ignore next */
        cov_10zcyiy1hz().b[14][0]++;
        const tempDueDate =
        /* istanbul ignore next */
        (cov_10zcyiy1hz().s[62]++, new Date(inv.date));
        /* istanbul ignore next */
        cov_10zcyiy1hz().s[63]++;
        tempDueDate.setDate(tempDueDate.getDate() + 30); // Example: 30 days after invoice date
        /* istanbul ignore next */
        cov_10zcyiy1hz().s[64]++;
        displayDueDate = tempDueDate.toISOString().split("T")[0];
      } else
      /* istanbul ignore next */
      {
        cov_10zcyiy1hz().b[14][1]++;
      }
      // Calculate total paid and due amount
      const totalPaid =
      /* istanbul ignore next */
      (cov_10zcyiy1hz().s[65]++,
      /* istanbul ignore next */
      (cov_10zcyiy1hz().b[16][0]++, inv.payments?.reduce((sum, payment) => {
        /* istanbul ignore next */
        cov_10zcyiy1hz().f[9]++;
        cov_10zcyiy1hz().s[66]++;
        return sum + payment.amount;
      }, 0)) ||
      /* istanbul ignore next */
      (cov_10zcyiy1hz().b[16][1]++, 0));
      const dueAmount =
      /* istanbul ignore next */
      (cov_10zcyiy1hz().s[67]++, Math.max(0, inv.total - totalPaid));
      /* istanbul ignore next */
      cov_10zcyiy1hz().s[68]++;
      return {
        ...inv,
        id: inv.id.toString(),
        customerName:
        /* istanbul ignore next */
        (cov_10zcyiy1hz().b[17][0]++, inv.customer?.name) ||
        /* istanbul ignore next */
        (cov_10zcyiy1hz().b[17][1]++, "Unknown Customer"),
        itemCount:
        /* istanbul ignore next */
        (cov_10zcyiy1hz().b[18][0]++, inv._count?.items) ||
        /* istanbul ignore next */
        (cov_10zcyiy1hz().b[18][1]++, 0),
        date: createdDate.toISOString().split("T")[0],
        dueDate: displayDueDate,
        totalProfit:
        /* istanbul ignore next */
        (cov_10zcyiy1hz().b[19][0]++, inv.totalProfit) ||
        /* istanbul ignore next */
        (cov_10zcyiy1hz().b[19][1]++, 0),
        profitMargin:
        /* istanbul ignore next */
        (cov_10zcyiy1hz().b[20][0]++, inv.profitMargin) ||
        /* istanbul ignore next */
        (cov_10zcyiy1hz().b[20][1]++, 0),
        totalPaid,
        dueAmount
      };
    }));
    /* istanbul ignore next */
    cov_10zcyiy1hz().s[69]++;
    return {
      invoices: formattedInvoices,
      totalPages: Math.ceil(totalInvoicesCount / ITEMS_PER_PAGE),
      currentPage: page,
      statistics: {
        totalOutstanding:
        /* istanbul ignore next */
        (cov_10zcyiy1hz().b[21][0]++, totalOutstandingResult._sum.total) ||
        /* istanbul ignore next */
        (cov_10zcyiy1hz().b[21][1]++, 0),
        paidThisMonth:
        /* istanbul ignore next */
        (cov_10zcyiy1hz().b[22][0]++, paidThisMonthResult._sum.total) ||
        /* istanbul ignore next */
        (cov_10zcyiy1hz().b[22][1]++, 0),
        overdueCount: overdueCountResult,
        creditSales:
        /* istanbul ignore next */
        (cov_10zcyiy1hz().b[23][0]++, creditSalesResult._sum.total) ||
        /* istanbul ignore next */
        (cov_10zcyiy1hz().b[23][1]++, 0),
        nonCreditSales:
        /* istanbul ignore next */
        (cov_10zcyiy1hz().b[24][0]++, nonCreditSalesResult._sum.total) ||
        /* istanbul ignore next */
        (cov_10zcyiy1hz().b[24][1]++, 0)
      },
      error: null
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_10zcyiy1hz().s[70]++;
    console.error("Error fetching invoices data:", error);
    // It's good practice to return a consistent shape even on error
    /* istanbul ignore next */
    cov_10zcyiy1hz().s[71]++;
    return {
      invoices: [],
      totalPages: 0,
      currentPage: 1,
      statistics: {
        totalOutstanding: 0,
        paidThisMonth: 0,
        overdueCount: 0,
        creditSales: 0,
        nonCreditSales: 0
      },
      error: "Failed to fetch invoices"
    };
  }
}
async function InvoicesPage({
  searchParams
}) {
  /* istanbul ignore next */
  cov_10zcyiy1hz().f[10]++;
  const pageParam =
  /* istanbul ignore next */
  (cov_10zcyiy1hz().s[72]++, Array.isArray(searchParams.page) ?
  /* istanbul ignore next */
  (cov_10zcyiy1hz().b[25][0]++, searchParams.page[0]) :
  /* istanbul ignore next */
  (cov_10zcyiy1hz().b[25][1]++, searchParams.page));
  const statusFilterParam =
  /* istanbul ignore next */
  (cov_10zcyiy1hz().s[73]++, Array.isArray(searchParams.status) ?
  /* istanbul ignore next */
  (cov_10zcyiy1hz().b[26][0]++, searchParams.status[0]) :
  /* istanbul ignore next */
  (cov_10zcyiy1hz().b[26][1]++, searchParams.status));
  const paymentMethodFilterParam =
  /* istanbul ignore next */
  (cov_10zcyiy1hz().s[74]++, Array.isArray(searchParams.paymentMethod) ?
  /* istanbul ignore next */
  (cov_10zcyiy1hz().b[27][0]++, searchParams.paymentMethod[0]) :
  /* istanbul ignore next */
  (cov_10zcyiy1hz().b[27][1]++, searchParams.paymentMethod));
  const searchQueryParam =
  /* istanbul ignore next */
  (cov_10zcyiy1hz().s[75]++, Array.isArray(searchParams.search) ?
  /* istanbul ignore next */
  (cov_10zcyiy1hz().b[28][0]++, searchParams.search[0]) :
  /* istanbul ignore next */
  (cov_10zcyiy1hz().b[28][1]++, searchParams.search));
  const timePeriodParam =
  /* istanbul ignore next */
  (cov_10zcyiy1hz().s[76]++, Array.isArray(searchParams.timePeriod) ?
  /* istanbul ignore next */
  (cov_10zcyiy1hz().b[29][0]++, searchParams.timePeriod[0]) :
  /* istanbul ignore next */
  (cov_10zcyiy1hz().b[29][1]++, searchParams.timePeriod));
  const sortByParam =
  /* istanbul ignore next */
  (cov_10zcyiy1hz().s[77]++, Array.isArray(searchParams.sortBy) ?
  /* istanbul ignore next */
  (cov_10zcyiy1hz().b[30][0]++, searchParams.sortBy[0]) :
  /* istanbul ignore next */
  (cov_10zcyiy1hz().b[30][1]++, searchParams.sortBy));
  const shopIdParam =
  /* istanbul ignore next */
  (cov_10zcyiy1hz().s[78]++, Array.isArray(searchParams.shopId) ?
  /* istanbul ignore next */
  (cov_10zcyiy1hz().b[31][0]++, searchParams.shopId[0]) :
  /* istanbul ignore next */
  (cov_10zcyiy1hz().b[31][1]++, searchParams.shopId));
  const [{
    invoices,
    totalPages,
    currentPage,
    statistics,
    error
  }, shops] =
  /* istanbul ignore next */
  (cov_10zcyiy1hz().s[79]++, await Promise.all([fetchInvoicesData({
    pageParam: pageParam ?
    /* istanbul ignore next */
    (cov_10zcyiy1hz().b[32][0]++, parseInt(pageParam, 10)) :
    /* istanbul ignore next */
    (cov_10zcyiy1hz().b[32][1]++, 1),
    status: statusFilterParam,
    paymentMethod: paymentMethodFilterParam,
    searchQueryParam,
    timePeriod: timePeriodParam,
    sortByParam,
    shopId: shopIdParam
  }), _prisma.prisma.shop.findMany({
    select: {
      id: true,
      name: true,
      location: true
    }
  })]));
  /* istanbul ignore next */
  cov_10zcyiy1hz().s[80]++;
  if (error) {
    /* istanbul ignore next */
    cov_10zcyiy1hz().b[33][0]++;
    cov_10zcyiy1hz().s[81]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_MainLayout.default, {
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "container mx-auto px-4 py-8",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
          className: "text-red-500 text-center",
          children: [error, ". Please try refreshing the page."]
        })
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_10zcyiy1hz().b[33][1]++;
  }
  cov_10zcyiy1hz().s[82]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_MainLayout.default, {
    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_react.Suspense, {
      fallback: /*#__PURE__*/(0, _jsxruntime.jsx)(InvoicePageSkeleton, {}),
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_InvoiceClientWrapper.default, {
        initialInvoices: invoices,
        initialTotalPages: totalPages,
        initialCurrentPage: currentPage,
        initialStatistics: {
          totalOutstanding: statistics.totalOutstanding,
          paidThisMonth: statistics.paidThisMonth,
          overdueCount: statistics.overdueCount,
          totalCreditSales: statistics.creditSales,
          totalNonCreditSales: statistics.nonCreditSales
        },
        shops: shops
      })
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,