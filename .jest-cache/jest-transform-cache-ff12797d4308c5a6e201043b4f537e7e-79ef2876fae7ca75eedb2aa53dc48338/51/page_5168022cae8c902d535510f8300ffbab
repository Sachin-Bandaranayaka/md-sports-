0b1bfffb49fc3b58e657f7eac0fbdb92
// @ts-nocheck
"use strict";

/* istanbul ignore next */
function cov_1ihmajautw() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/customers/page.tsx";
  var hash = "1fdab70bc8a9aa86c7e661e4f72e9cff8c9cb697";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/customers/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 26
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 34
        },
        end: {
          line: 21,
          column: 105
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 43
        }
      },
      "9": {
        start: {
          line: 23,
          column: 45
        },
        end: {
          line: 23,
          column: 116
        }
      },
      "10": {
        start: {
          line: 24,
          column: 15
        },
        end: {
          line: 24,
          column: 31
        }
      },
      "11": {
        start: {
          line: 25,
          column: 21
        },
        end: {
          line: 25,
          column: 44
        }
      },
      "12": {
        start: {
          line: 26,
          column: 22
        },
        end: {
          line: 26,
          column: 60
        }
      },
      "13": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 6
        }
      },
      "14": {
        start: {
          line: 32,
          column: 19
        },
        end: {
          line: 32,
          column: 21
        }
      },
      "15": {
        start: {
          line: 33,
          column: 23
        },
        end: {
          line: 33,
          column: 25
        }
      },
      "16": {
        start: {
          line: 35,
          column: 17
        },
        end: {
          line: 35,
          column: 47
        }
      },
      "17": {
        start: {
          line: 36,
          column: 23
        },
        end: {
          line: 36,
          column: 44
        }
      },
      "18": {
        start: {
          line: 37,
          column: 25
        },
        end: {
          line: 37,
          column: 48
        }
      },
      "19": {
        start: {
          line: 38,
          column: 27
        },
        end: {
          line: 38,
          column: 52
        }
      },
      "20": {
        start: {
          line: 39,
          column: 23
        },
        end: {
          line: 39,
          column: 50
        }
      },
      "21": {
        start: {
          line: 40,
          column: 23
        },
        end: {
          line: 40,
          column: 50
        }
      },
      "22": {
        start: {
          line: 41,
          column: 29
        },
        end: {
          line: 41,
          column: 56
        }
      },
      "23": {
        start: {
          line: 42,
          column: 27
        },
        end: {
          line: 42,
          column: 52
        }
      },
      "24": {
        start: {
          line: 43,
          column: 22
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "25": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "26": {
        start: {
          line: 60,
          column: 26
        },
        end: {
          line: 60,
          column: 63
        }
      },
      "27": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "28": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 72,
          column: 13
        }
      },
      "29": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 65,
          column: 19
        }
      },
      "30": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 71,
          column: 18
        }
      },
      "31": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 221,
          column: 5
        }
      },
      "32": {
        start: {
          line: 77,
          column: 29
        },
        end: {
          line: 77,
          column: 69
        }
      },
      "33": {
        start: {
          line: 78,
          column: 35
        },
        end: {
          line: 78,
          column: 85
        }
      },
      "34": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "35": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 83,
          column: 14
        }
      },
      "36": {
        start: {
          line: 85,
          column: 32
        },
        end: {
          line: 104,
          column: 10
        }
      },
      "37": {
        start: {
          line: 105,
          column: 31
        },
        end: {
          line: 107,
          column: 10
        }
      },
      "38": {
        start: {
          line: 109,
          column: 28
        },
        end: {
          line: 109,
          column: 58
        }
      },
      "39": {
        start: {
          line: 109,
          column: 53
        },
        end: {
          line: 109,
          column: 57
        }
      },
      "40": {
        start: {
          line: 110,
          column: 37
        },
        end: {
          line: 132,
          column: 10
        }
      },
      "41": {
        start: {
          line: 133,
          column: 23
        },
        end: {
          line: 133,
          column: 25
        }
      },
      "42": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 139,
          column: 11
        }
      },
      "43": {
        start: {
          line: 135,
          column: 24
        },
        end: {
          line: 135,
          column: 38
        }
      },
      "44": {
        start: {
          line: 136,
          column: 25
        },
        end: {
          line: 136,
          column: 80
        }
      },
      "45": {
        start: {
          line: 136,
          column: 55
        },
        end: {
          line: 136,
          column: 76
        }
      },
      "46": {
        start: {
          line: 137,
          column: 24
        },
        end: {
          line: 137,
          column: 47
        }
      },
      "47": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 51
        }
      },
      "48": {
        start: {
          line: 140,
          column: 35
        },
        end: {
          line: 184,
          column: 10
        }
      },
      "49": {
        start: {
          line: 141,
          column: 33
        },
        end: {
          line: 141,
          column: 38
        }
      },
      "50": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 163,
          column: 13
        }
      },
      "51": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 162,
          column: 17
        }
      },
      "52": {
        start: {
          line: 144,
          column: 42
        },
        end: {
          line: 144,
          column: 70
        }
      },
      "53": {
        start: {
          line: 146,
          column: 20
        },
        end: {
          line: 158,
          column: 21
        }
      },
      "54": {
        start: {
          line: 147,
          column: 24
        },
        end: {
          line: 147,
          column: 67
        }
      },
      "55": {
        start: {
          line: 148,
          column: 24
        },
        end: {
          line: 150,
          column: 25
        }
      },
      "56": {
        start: {
          line: 149,
          column: 28
        },
        end: {
          line: 149,
          column: 72
        }
      },
      "57": {
        start: {
          line: 151,
          column: 27
        },
        end: {
          line: 158,
          column: 21
        }
      },
      "58": {
        start: {
          line: 153,
          column: 24
        },
        end: {
          line: 153,
          column: 55
        }
      },
      "59": {
        start: {
          line: 157,
          column: 24
        },
        end: {
          line: 157,
          column: 171
        }
      },
      "60": {
        start: {
          line: 161,
          column: 20
        },
        end: {
          line: 161,
          column: 54
        }
      },
      "61": {
        start: {
          line: 164,
          column: 34
        },
        end: {
          line: 164,
          column: 75
        }
      },
      "62": {
        start: {
          line: 165,
          column: 31
        },
        end: {
          line: 182,
          column: 13
        }
      },
      "63": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 30
        }
      },
      "64": {
        start: {
          line: 185,
          column: 36
        },
        end: {
          line: 185,
          column: 54
        }
      },
      "65": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "66": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 131
        }
      },
      "67": {
        start: {
          line: 187,
          column: 70
        },
        end: {
          line: 187,
          column: 129
        }
      },
      "68": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "69": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 194,
          column: 13
        }
      },
      "70": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 152
        }
      },
      "71": {
        start: {
          line: 191,
          column: 74
        },
        end: {
          line: 191,
          column: 150
        }
      },
      "72": {
        start: {
          line: 192,
          column: 19
        },
        end: {
          line: 194,
          column: 13
        }
      },
      "73": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 120
        }
      },
      "74": {
        start: {
          line: 193,
          column: 74
        },
        end: {
          line: 193,
          column: 118
        }
      },
      "75": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "76": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 136
        }
      },
      "77": {
        start: {
          line: 197,
          column: 70
        },
        end: {
          line: 197,
          column: 134
        }
      },
      "78": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "79": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 136
        }
      },
      "80": {
        start: {
          line: 200,
          column: 70
        },
        end: {
          line: 200,
          column: 134
        }
      },
      "81": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "82": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 152
        }
      },
      "83": {
        start: {
          line: 203,
          column: 70
        },
        end: {
          line: 203,
          column: 150
        }
      },
      "84": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "85": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 150
        }
      },
      "86": {
        start: {
          line: 206,
          column: 70
        },
        end: {
          line: 206,
          column: 148
        }
      },
      "87": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 212,
          column: 10
        }
      },
      "88": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 58
        }
      },
      "89": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 220,
          column: 10
        }
      },
      "90": {
        start: {
          line: 224,
          column: 17
        },
        end: {
          line: 224,
          column: 35
        }
      },
      "91": {
        start: {
          line: 225,
          column: 19
        },
        end: {
          line: 225,
          column: 39
        }
      },
      "92": {
        start: {
          line: 226,
          column: 25
        },
        end: {
          line: 226,
          column: 43
        }
      },
      "93": {
        start: {
          line: 227,
          column: 19
        },
        end: {
          line: 227,
          column: 39
        }
      },
      "94": {
        start: {
          line: 228,
          column: 23
        },
        end: {
          line: 228,
          column: 47
        }
      },
      "95": {
        start: {
          line: 229,
          column: 23
        },
        end: {
          line: 229,
          column: 47
        }
      },
      "96": {
        start: {
          line: 230,
          column: 29
        },
        end: {
          line: 230,
          column: 59
        }
      },
      "97": {
        start: {
          line: 231,
          column: 27
        },
        end: {
          line: 231,
          column: 55
        }
      },
      "98": {
        start: {
          line: 232,
          column: 58
        },
        end: {
          line: 232,
          column: 176
        }
      },
      "99": {
        start: {
          line: 233,
          column: 4
        },
        end: {
          line: 243,
          column: 5
        }
      },
      "100": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 242,
          column: 11
        }
      },
      "101": {
        start: {
          line: 244,
          column: 4
        },
        end: {
          line: 268,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 13
          },
          end: {
            line: 13,
            column: 14
          }
        },
        loc: {
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 16,
            column: 17
          }
        },
        loc: {
          start: {
            line: 16,
            column: 27
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 33
          }
        },
        loc: {
          start: {
            line: 27,
            column: 39
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 27
      },
      "4": {
        name: "fetchCustomersData",
        decl: {
          start: {
            line: 34,
            column: 15
          },
          end: {
            line: 34,
            column: 33
          }
        },
        loc: {
          start: {
            line: 34,
            column: 180
          },
          end: {
            line: 222,
            column: 1
          }
        },
        line: 34
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 109,
            column: 48
          },
          end: {
            line: 109,
            column: 49
          }
        },
        loc: {
          start: {
            line: 109,
            column: 53
          },
          end: {
            line: 109,
            column: 57
          }
        },
        line: 109
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 134,
            column: 37
          },
          end: {
            line: 134,
            column: 38
          }
        },
        loc: {
          start: {
            line: 134,
            column: 44
          },
          end: {
            line: 139,
            column: 9
          }
        },
        line: 134
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 136,
            column: 45
          },
          end: {
            line: 136,
            column: 46
          }
        },
        loc: {
          start: {
            line: 136,
            column: 55
          },
          end: {
            line: 136,
            column: 76
          }
        },
        line: 136
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 140,
            column: 55
          },
          end: {
            line: 140,
            column: 56
          }
        },
        loc: {
          start: {
            line: 140,
            column: 67
          },
          end: {
            line: 184,
            column: 9
          }
        },
        line: 140
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 187,
            column: 65
          },
          end: {
            line: 187,
            column: 66
          }
        },
        loc: {
          start: {
            line: 187,
            column: 70
          },
          end: {
            line: 187,
            column: 129
          }
        },
        line: 187
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 191,
            column: 69
          },
          end: {
            line: 191,
            column: 70
          }
        },
        loc: {
          start: {
            line: 191,
            column: 74
          },
          end: {
            line: 191,
            column: 150
          }
        },
        line: 191
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 193,
            column: 69
          },
          end: {
            line: 193,
            column: 70
          }
        },
        loc: {
          start: {
            line: 193,
            column: 74
          },
          end: {
            line: 193,
            column: 118
          }
        },
        line: 193
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 197,
            column: 65
          },
          end: {
            line: 197,
            column: 66
          }
        },
        loc: {
          start: {
            line: 197,
            column: 70
          },
          end: {
            line: 197,
            column: 134
          }
        },
        line: 197
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 200,
            column: 65
          },
          end: {
            line: 200,
            column: 66
          }
        },
        loc: {
          start: {
            line: 200,
            column: 70
          },
          end: {
            line: 200,
            column: 134
          }
        },
        line: 200
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 203,
            column: 65
          },
          end: {
            line: 203,
            column: 66
          }
        },
        loc: {
          start: {
            line: 203,
            column: 70
          },
          end: {
            line: 203,
            column: 150
          }
        },
        line: 203
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 206,
            column: 65
          },
          end: {
            line: 206,
            column: 66
          }
        },
        loc: {
          start: {
            line: 206,
            column: 70
          },
          end: {
            line: 206,
            column: 148
          }
        },
        line: 206
      },
      "16": {
        name: "CustomersPage",
        decl: {
          start: {
            line: 223,
            column: 15
          },
          end: {
            line: 223,
            column: 28
          }
        },
        loc: {
          start: {
            line: 223,
            column: 47
          },
          end: {
            line: 269,
            column: 1
          }
        },
        line: 223
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 35
          },
          end: {
            line: 28,
            column: 38
          }
        }, {
          start: {
            line: 28,
            column: 41
          },
          end: {
            line: 30,
            column: 5
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 28,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 28,
            column: 14
          }
        }, {
          start: {
            line: 28,
            column: 18
          },
          end: {
            line: 28,
            column: 32
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 26
          },
          end: {
            line: 35,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 26
          },
          end: {
            line: 35,
            column: 35
          }
        }, {
          start: {
            line: 35,
            column: 39
          },
          end: {
            line: 35,
            column: 42
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 23
          },
          end: {
            line: 36,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 23
          },
          end: {
            line: 36,
            column: 38
          }
        }, {
          start: {
            line: 36,
            column: 42
          },
          end: {
            line: 36,
            column: 44
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 37,
            column: 25
          },
          end: {
            line: 37,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 25
          },
          end: {
            line: 37,
            column: 42
          }
        }, {
          start: {
            line: 37,
            column: 46
          },
          end: {
            line: 37,
            column: 48
          }
        }],
        line: 37
      },
      "5": {
        loc: {
          start: {
            line: 38,
            column: 27
          },
          end: {
            line: 38,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 27
          },
          end: {
            line: 38,
            column: 46
          }
        }, {
          start: {
            line: 38,
            column: 50
          },
          end: {
            line: 38,
            column: 52
          }
        }],
        line: 38
      },
      "6": {
        loc: {
          start: {
            line: 41,
            column: 29
          },
          end: {
            line: 41,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 29
          },
          end: {
            line: 41,
            column: 50
          }
        }, {
          start: {
            line: 41,
            column: 54
          },
          end: {
            line: 41,
            column: 56
          }
        }],
        line: 41
      },
      "7": {
        loc: {
          start: {
            line: 42,
            column: 27
          },
          end: {
            line: 42,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 27
          },
          end: {
            line: 42,
            column: 46
          }
        }, {
          start: {
            line: 42,
            column: 50
          },
          end: {
            line: 42,
            column: 52
          }
        }],
        line: 42
      },
      "8": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 57,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 44,
            column: 25
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 57,
            column: 21
          }
        }],
        line: 44
      },
      "9": {
        loc: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "10": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 59,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 59,
            column: 18
          }
        }, {
          start: {
            line: 59,
            column: 22
          },
          end: {
            line: 59,
            column: 65
          }
        }],
        line: 59
      },
      "11": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "12": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        }, {
          start: {
            line: 66,
            column: 19
          },
          end: {
            line: 72,
            column: 13
          }
        }],
        line: 62
      },
      "13": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "14": {
        loc: {
          start: {
            line: 136,
            column: 62
          },
          end: {
            line: 136,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 62
          },
          end: {
            line: 136,
            column: 70
          }
        }, {
          start: {
            line: 136,
            column: 74
          },
          end: {
            line: 136,
            column: 75
          }
        }],
        line: 136
      },
      "15": {
        loc: {
          start: {
            line: 137,
            column: 25
          },
          end: {
            line: 137,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 25
          },
          end: {
            line: 137,
            column: 34
          }
        }, {
          start: {
            line: 137,
            column: 38
          },
          end: {
            line: 137,
            column: 39
          }
        }],
        line: 137
      },
      "16": {
        loc: {
          start: {
            line: 138,
            column: 27
          },
          end: {
            line: 138,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 27
          },
          end: {
            line: 138,
            column: 38
          }
        }, {
          start: {
            line: 138,
            column: 42
          },
          end: {
            line: 138,
            column: 43
          }
        }],
        line: 138
      },
      "17": {
        loc: {
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 163,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 163,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "18": {
        loc: {
          start: {
            line: 146,
            column: 20
          },
          end: {
            line: 158,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 20
          },
          end: {
            line: 158,
            column: 21
          }
        }, {
          start: {
            line: 151,
            column: 27
          },
          end: {
            line: 158,
            column: 21
          }
        }],
        line: 146
      },
      "19": {
        loc: {
          start: {
            line: 146,
            column: 24
          },
          end: {
            line: 146,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 24
          },
          end: {
            line: 146,
            column: 37
          }
        }, {
          start: {
            line: 146,
            column: 41
          },
          end: {
            line: 146,
            column: 74
          }
        }, {
          start: {
            line: 146,
            column: 78
          },
          end: {
            line: 146,
            column: 103
          }
        }],
        line: 146
      },
      "20": {
        loc: {
          start: {
            line: 148,
            column: 24
          },
          end: {
            line: 150,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 24
          },
          end: {
            line: 150,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "21": {
        loc: {
          start: {
            line: 151,
            column: 27
          },
          end: {
            line: 158,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 27
          },
          end: {
            line: 158,
            column: 21
          }
        }, {
          start: {
            line: 154,
            column: 27
          },
          end: {
            line: 158,
            column: 21
          }
        }],
        line: 151
      },
      "22": {
        loc: {
          start: {
            line: 157,
            column: 41
          },
          end: {
            line: 157,
            column: 170
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 157,
            column: 124
          },
          end: {
            line: 157,
            column: 151
          }
        }, {
          start: {
            line: 157,
            column: 154
          },
          end: {
            line: 157,
            column: 170
          }
        }],
        line: 157
      },
      "23": {
        loc: {
          start: {
            line: 157,
            column: 41
          },
          end: {
            line: 157,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 41
          },
          end: {
            line: 157,
            column: 80
          }
        }, {
          start: {
            line: 157,
            column: 84
          },
          end: {
            line: 157,
            column: 121
          }
        }],
        line: 157
      },
      "24": {
        loc: {
          start: {
            line: 164,
            column: 34
          },
          end: {
            line: 164,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 34
          },
          end: {
            line: 164,
            column: 51
          }
        }, {
          start: {
            line: 164,
            column: 55
          },
          end: {
            line: 164,
            column: 75
          }
        }],
        line: 164
      },
      "25": {
        loc: {
          start: {
            line: 177,
            column: 34
          },
          end: {
            line: 177,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 177,
            column: 50
          },
          end: {
            line: 177,
            column: 73
          }
        }, {
          start: {
            line: 177,
            column: 76
          },
          end: {
            line: 177,
            column: 80
          }
        }],
        line: 177
      },
      "26": {
        loc: {
          start: {
            line: 178,
            column: 44
          },
          end: {
            line: 178,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 178,
            column: 60
          },
          end: {
            line: 178,
            column: 80
          }
        }, {
          start: {
            line: 178,
            column: 83
          },
          end: {
            line: 178,
            column: 87
          }
        }],
        line: 178
      },
      "27": {
        loc: {
          start: {
            line: 179,
            column: 25
          },
          end: {
            line: 179,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 179,
            column: 65
          },
          end: {
            line: 179,
            column: 90
          }
        }, {
          start: {
            line: 179,
            column: 93
          },
          end: {
            line: 179,
            column: 102
          }
        }],
        line: 179
      },
      "28": {
        loc: {
          start: {
            line: 179,
            column: 65
          },
          end: {
            line: 179,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 65
          },
          end: {
            line: 179,
            column: 85
          }
        }, {
          start: {
            line: 179,
            column: 89
          },
          end: {
            line: 179,
            column: 90
          }
        }],
        line: 179
      },
      "29": {
        loc: {
          start: {
            line: 181,
            column: 21
          },
          end: {
            line: 181,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 21
          },
          end: {
            line: 181,
            column: 40
          }
        }, {
          start: {
            line: 181,
            column: 44
          },
          end: {
            line: 181,
            column: 45
          }
        }],
        line: 181
      },
      "30": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "31": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "32": {
        loc: {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 194,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 194,
            column: 13
          }
        }, {
          start: {
            line: 192,
            column: 19
          },
          end: {
            line: 194,
            column: 13
          }
        }],
        line: 190
      },
      "33": {
        loc: {
          start: {
            line: 190,
            column: 16
          },
          end: {
            line: 190,
            column: 192
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 16
          },
          end: {
            line: 190,
            column: 55
          }
        }, {
          start: {
            line: 190,
            column: 59
          },
          end: {
            line: 190,
            column: 100
          }
        }, {
          start: {
            line: 190,
            column: 104
          },
          end: {
            line: 190,
            column: 146
          }
        }, {
          start: {
            line: 190,
            column: 150
          },
          end: {
            line: 190,
            column: 192
          }
        }],
        line: 190
      },
      "34": {
        loc: {
          start: {
            line: 192,
            column: 19
          },
          end: {
            line: 194,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 19
          },
          end: {
            line: 194,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "35": {
        loc: {
          start: {
            line: 192,
            column: 23
          },
          end: {
            line: 192,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 23
          },
          end: {
            line: 192,
            column: 50
          }
        }, {
          start: {
            line: 192,
            column: 54
          },
          end: {
            line: 192,
            column: 83
          }
        }],
        line: 192
      },
      "36": {
        loc: {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "37": {
        loc: {
          start: {
            line: 197,
            column: 70
          },
          end: {
            line: 197,
            column: 134
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 70
          },
          end: {
            line: 197,
            column: 100
          }
        }, {
          start: {
            line: 197,
            column: 104
          },
          end: {
            line: 197,
            column: 134
          }
        }],
        line: 197
      },
      "38": {
        loc: {
          start: {
            line: 197,
            column: 105
          },
          end: {
            line: 197,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 105
          },
          end: {
            line: 197,
            column: 114
          }
        }, {
          start: {
            line: 197,
            column: 118
          },
          end: {
            line: 197,
            column: 119
          }
        }],
        line: 197
      },
      "39": {
        loc: {
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "40": {
        loc: {
          start: {
            line: 200,
            column: 70
          },
          end: {
            line: 200,
            column: 134
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 70
          },
          end: {
            line: 200,
            column: 100
          }
        }, {
          start: {
            line: 200,
            column: 104
          },
          end: {
            line: 200,
            column: 134
          }
        }],
        line: 200
      },
      "41": {
        loc: {
          start: {
            line: 200,
            column: 105
          },
          end: {
            line: 200,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 105
          },
          end: {
            line: 200,
            column: 114
          }
        }, {
          start: {
            line: 200,
            column: 118
          },
          end: {
            line: 200,
            column: 119
          }
        }],
        line: 200
      },
      "42": {
        loc: {
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "43": {
        loc: {
          start: {
            line: 203,
            column: 70
          },
          end: {
            line: 203,
            column: 150
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 203,
            column: 70
          },
          end: {
            line: 203,
            column: 88
          }
        }, {
          start: {
            line: 203,
            column: 92
          },
          end: {
            line: 203,
            column: 150
          }
        }],
        line: 203
      },
      "44": {
        loc: {
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "45": {
        loc: {
          start: {
            line: 206,
            column: 70
          },
          end: {
            line: 206,
            column: 148
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 70
          },
          end: {
            line: 206,
            column: 88
          }
        }, {
          start: {
            line: 206,
            column: 92
          },
          end: {
            line: 206,
            column: 148
          }
        }],
        line: 206
      },
      "46": {
        loc: {
          start: {
            line: 233,
            column: 4
          },
          end: {
            line: 243,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 4
          },
          end: {
            line: 243,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0, 0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/customers/page.tsx"],
      sourcesContent: ["// @ts-nocheck\nimport MainLayout from '@/components/layout/MainLayout';\nimport { prisma } from '@/lib/prisma';\nimport CustomerClientWrapper from './components/CustomerClientWrapper';\nimport { Suspense } from 'react';\nimport { Loader2 } from 'lucide-react';\nimport { AuditService } from '@/services/auditService';\n\n// Add revalidation - cache customers page for 60 seconds\nexport const revalidate = 60;\n\n// Interface for Customer (can be shared or defined in a common types file)\ninterface Customer {\n    id: number;\n    name: string;\n    email?: string | null;\n    phone?: string | null;\n    address?: string | null;\n    due?: number;\n    customerType: 'wholesale' | 'retail';\n    creditLimit?: number | null;\n    creditPeriod?: number | null;\n    isActive: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n    lastPurchaseDate?: Date | null;\n    latestInvoicePaymentStatus?: string | null;\n    balance?: number;\n    contactPerson?: string;\n}\n\nconst ITEMS_PER_PAGE = 15;\n\nasync function fetchCustomersData(\n    pageParam: string | undefined,\n    searchTermParam: string | undefined,\n    customerTypeParam: string | undefined,\n    customerStatusParam: string | undefined,\n    balanceMinParam: string | undefined,\n    balanceMaxParam: string | undefined,\n    lastPurchaseFromParam: string | undefined,\n    lastPurchaseToParam: string | undefined\n) {\n    const page = parseInt(pageParam || '1', 10);\n    const searchTerm = searchTermParam || '';\n    const customerType = customerTypeParam || '';\n    const customerStatus = customerStatusParam || '';\n    const balanceMin = parseFloat(balanceMinParam as string); // parseFloat handles undefined/empty as NaN\n    const balanceMax = parseFloat(balanceMaxParam as string);\n    const lastPurchaseFrom = lastPurchaseFromParam || '';\n    const lastPurchaseTo = lastPurchaseToParam || '';\n\n    let whereClause: any = {\n        OR: searchTerm ? [\n            { name: { contains: searchTerm, mode: 'insensitive' } },\n            { phone: { contains: searchTerm, mode: 'insensitive' } },\n        ] : undefined,\n    };\n\n    if (searchTerm && searchTerm.toLowerCase().startsWith('cus-')) {\n        const numericId = parseInt(searchTerm.substring(4), 10);\n        if (!isNaN(numericId)) {\n            if (whereClause.OR) {\n                whereClause.OR.push({ id: numericId });\n            } else {\n                whereClause.OR = [{ id: numericId }];\n            }\n        }\n    }\n\n    try {\n        // Get IDs of soft-deleted customers\n        const auditService = AuditService.getInstance();\n        const deletedCustomerIds = await auditService.getDeletedEntityIds('Customer');\n\n        // Add soft delete filter to where clause\n        if (deletedCustomerIds.length > 0) {\n            whereClause.id = {\n                notIn: deletedCustomerIds\n            };\n        }\n\n        const customersFromDB = await prisma.customer.findMany({\n            where: whereClause,\n            include: {\n                invoices: {\n                    orderBy: {\n                        createdAt: 'desc'\n                    },\n                    take: 1,\n                    select: {\n                        createdAt: true,\n                        status: true\n                    }\n                }\n            },\n            orderBy: { createdAt: 'desc' },\n            skip: (page - 1) * ITEMS_PER_PAGE,\n            take: ITEMS_PER_PAGE,\n        });\n\n        const totalCustomers = await prisma.customer.count({ where: whereClause });\n\n        // Calculate due amounts per customer\n        const customerIds = customersFromDB.map(c => c.id);\n\n        const invoicesWithPayments = await prisma.invoice.findMany({\n            where: {\n                customerId: { in: customerIds },\n                status: { in: ['unpaid', 'partial', 'pending'] }\n            },\n            select: {\n                customerId: true,\n                total: true,\n                payments: {\n                    select: {\n                        amount: true\n                    }\n                }\n            }\n        });\n\n        const dueMap: Record<number, number> = {};\n        invoicesWithPayments.forEach(inv => {\n            const cid = inv.customerId as number;\n            const paid = inv.payments.reduce((sum, p) => sum + (p.amount || 0), 0);\n            const due = (inv.total || 0) - paid;\n            dueMap[cid] = (dueMap[cid] || 0) + due;\n        });\n\n        const formattedCustomers = customersFromDB.map(customer => {\n            let displayAddress = 'N/A';\n            if (customer.address) {\n                try {\n                    const parsedAddress = JSON.parse(customer.address);\n                    // Check if it's the old structure with mainAddress\n                    if (parsedAddress && typeof parsedAddress === 'object' && parsedAddress.mainAddress) {\n                        displayAddress = parsedAddress.mainAddress;\n                        if (parsedAddress.city) {\n                            displayAddress += `, ${parsedAddress.city}`;\n                        }\n                    } else if (typeof parsedAddress === 'string') {\n                        // If parsing results in a string, use that (e.g. if db stores \"'Some Address String'\" including quotes)\n                        displayAddress = parsedAddress;\n                    } else {\n                        // It was parsable JSON but not the expected old structure, and not a simple string post-parsing.\n                        // Fallback to the raw string if it doesn't look like typical JSON, otherwise mark as needing review or use a generic placeholder.\n                        displayAddress = customer.address.trim().startsWith('{') && customer.address.trim().endsWith('}') ? 'Address data needs review' : customer.address;\n                    }\n                } catch (e) {\n                    // Parsing failed, assume it's a plain text address (new records or already migrated)\n                    displayAddress = customer.address;\n                }\n            }\n\n            const latestInvoice = customer.invoices && customer.invoices[0];\n\n            const uiCustomer: Customer = {\n                id: customer.id,\n                name: customer.name,\n                email: customer.email,\n                phone: customer.phone,\n                address: displayAddress,\n                customerType: customer.customerType as 'wholesale' | 'retail',\n                creditLimit: customer.creditLimit,\n                creditPeriod: customer.creditPeriod,\n                isActive: customer.isActive,\n                createdAt: customer.createdAt,\n                updatedAt: customer.updatedAt,\n                lastPurchaseDate: latestInvoice ? latestInvoice.createdAt : null,\n                latestInvoicePaymentStatus: latestInvoice ? latestInvoice.status : null,\n                balance: customer.customerType === 'wholesale' ? customer.creditLimit || 0 : undefined,\n                contactPerson: customer.name,\n                due: dueMap[customer.id] || 0,\n            };\n            return uiCustomer;\n        });\n\n        let postFilteredCustomers = formattedCustomers;\n        if (customerType) {\n            postFilteredCustomers = postFilteredCustomers.filter(c => c.customerType.toLowerCase() === customerType.toLowerCase());\n        }\n        if (customerStatus) {\n            if (customerStatus.toLowerCase() === 'paid' || customerStatus.toLowerCase() === 'unpaid' || customerStatus.toLowerCase() === 'pending' || customerStatus.toLowerCase() === 'partial') {\n                postFilteredCustomers = postFilteredCustomers.filter(c => c.latestInvoicePaymentStatus?.toLowerCase() === customerStatus.toLowerCase());\n            } else if (customerStatus === 'Active' || customerStatus === 'Inactive') {\n                postFilteredCustomers = postFilteredCustomers.filter(c => c.isActive === (customerStatus === 'Active'));\n            }\n        }\n        if (!isNaN(balanceMin)) {\n            postFilteredCustomers = postFilteredCustomers.filter(c => c.customerType === 'wholesale' && (c.balance || 0) >= balanceMin);\n        }\n        if (!isNaN(balanceMax)) {\n            postFilteredCustomers = postFilteredCustomers.filter(c => c.customerType === 'wholesale' && (c.balance || 0) <= balanceMax);\n        }\n        if (lastPurchaseFrom) {\n            postFilteredCustomers = postFilteredCustomers.filter(c => c.lastPurchaseDate && new Date(c.lastPurchaseDate) >= new Date(lastPurchaseFrom));\n        }\n        if (lastPurchaseTo) {\n            postFilteredCustomers = postFilteredCustomers.filter(c => c.lastPurchaseDate && new Date(c.lastPurchaseDate) <= new Date(lastPurchaseTo));\n        }\n\n        return {\n            customers: postFilteredCustomers,\n            totalPages: Math.ceil(totalCustomers / ITEMS_PER_PAGE),\n            currentPage: page,\n        };\n\n    } catch (error) {\n        console.error('Error fetching customers:', error);\n        return {\n            customers: [],\n            totalPages: 0,\n            currentPage: 1,\n            error: 'Failed to fetch customers'\n        };\n    }\n}\n\nexport default async function CustomersPage({ searchParams }: { searchParams?: { [key: string]: string | string[] | undefined } }) {\n    const page = searchParams?.page as string | undefined;\n    const search = searchParams?.search as string | undefined;\n    const customerType = searchParams?.type as string | undefined;\n    const status = searchParams?.status as string | undefined;\n    const balanceMin = searchParams?.balanceMin as string | undefined;\n    const balanceMax = searchParams?.balanceMax as string | undefined;\n    const lastPurchaseFrom = searchParams?.lastPurchaseFrom as string | undefined;\n    const lastPurchaseTo = searchParams?.lastPurchaseTo as string | undefined;\n\n    const { customers, totalPages, currentPage, error } = await fetchCustomersData(\n        page,\n        search,\n        customerType,\n        status,\n        balanceMin,\n        balanceMax,\n        lastPurchaseFrom,\n        lastPurchaseTo\n    );\n\n    if (error) {\n        return (\n            <MainLayout>\n                <div className=\"container mx-auto px-4 py-8\">\n                    <p className=\"text-red-500\">{error}</p>\n                </div>\n            </MainLayout>\n        );\n    }\n\n    return (\n        <MainLayout>\n            <div className=\"container mx-auto px-4 py-8\">\n                <Suspense fallback={\n                    <div className=\"flex justify-center items-center h-64\">\n                        <Loader2 className=\"animate-spin text-indigo-600\" size={48} />\n                        <p className=\"ml-3 text-lg text-gray-600\">Loading customers...</p>\n                    </div>\n                }>\n                    <CustomerClientWrapper\n                        initialCustomers={customers}\n                        initialTotalPages={totalPages}\n                        initialCurrentPage={currentPage}\n                    />\n                </Suspense>\n            </div>\n        </MainLayout>\n    );\n}"],
      names: ["CustomersPage", "revalidate", "ITEMS_PER_PAGE", "fetchCustomersData", "pageParam", "searchTermParam", "customerTypeParam", "customerStatusParam", "balanceMinParam", "balanceMaxParam", "lastPurchaseFromParam", "lastPurchaseToParam", "page", "parseInt", "searchTerm", "customerType", "customerStatus", "balanceMin", "parseFloat", "balanceMax", "lastPurchaseFrom", "lastPurchaseTo", "whereClause", "OR", "name", "contains", "mode", "phone", "undefined", "toLowerCase", "startsWith", "numericId", "substring", "isNaN", "push", "id", "auditService", "AuditService", "getInstance", "deletedCustomerIds", "getDeletedEntityIds", "length", "notIn", "customersFromDB", "prisma", "customer", "findMany", "where", "include", "invoices", "orderBy", "createdAt", "take", "select", "status", "skip", "totalCustomers", "count", "customerIds", "map", "c", "invoicesWithPayments", "invoice", "customerId", "in", "total", "payments", "amount", "dueMap", "forEach", "inv", "cid", "paid", "reduce", "sum", "p", "due", "formattedCustomers", "displayAddress", "address", "parsedAddress", "JSON", "parse", "mainAddress", "city", "trim", "endsWith", "e", "latestInvoice", "uiCustomer", "email", "creditLimit", "creditPeriod", "isActive", "updatedAt", "lastPurchaseDate", "latestInvoicePaymentStatus", "balance", "contactPerson", "postFilteredCustomers", "filter", "Date", "customers", "totalPages", "Math", "ceil", "currentPage", "error", "console", "searchParams", "search", "type", "MainLayout", "div", "className", "Suspense", "fallback", "Loader2", "size", "CustomerClientWrapper", "initialCustomers", "initialTotalPages", "initialCurrentPage"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1fdab70bc8a9aa86c7e661e4f72e9cff8c9cb697"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ihmajautw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ihmajautw();
cov_1ihmajautw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1ihmajautw().f[0]++;
  cov_1ihmajautw().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1ihmajautw().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1ihmajautw().s[3]++;
_export(exports, {
  default: function () {
    /* istanbul ignore next */
    cov_1ihmajautw().f[1]++;
    cov_1ihmajautw().s[4]++;
    return CustomersPage;
  },
  revalidate: function () {
    /* istanbul ignore next */
    cov_1ihmajautw().f[2]++;
    cov_1ihmajautw().s[5]++;
    return revalidate;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1ihmajautw().s[6]++, require("react/jsx-runtime"));
const _MainLayout =
/* istanbul ignore next */
(/*#__PURE__*/cov_1ihmajautw().s[7]++, _interop_require_default(require("../../components/layout/MainLayout")));
const _prisma =
/* istanbul ignore next */
(cov_1ihmajautw().s[8]++, require("../../lib/prisma"));
const _CustomerClientWrapper =
/* istanbul ignore next */
(/*#__PURE__*/cov_1ihmajautw().s[9]++, _interop_require_default(require("./components/CustomerClientWrapper")));
const _react =
/* istanbul ignore next */
(cov_1ihmajautw().s[10]++, require("react"));
const _lucidereact =
/* istanbul ignore next */
(cov_1ihmajautw().s[11]++, require("lucide-react"));
const _auditService =
/* istanbul ignore next */
(cov_1ihmajautw().s[12]++, require("../../services/auditService"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1ihmajautw().f[3]++;
  cov_1ihmajautw().s[13]++;
  return /* istanbul ignore next */(cov_1ihmajautw().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1ihmajautw().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1ihmajautw().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1ihmajautw().b[0][1]++, {
    default: obj
  });
}
const revalidate =
/* istanbul ignore next */
(cov_1ihmajautw().s[14]++, 60);
const ITEMS_PER_PAGE =
/* istanbul ignore next */
(cov_1ihmajautw().s[15]++, 15);
async function fetchCustomersData(pageParam, searchTermParam, customerTypeParam, customerStatusParam, balanceMinParam, balanceMaxParam, lastPurchaseFromParam, lastPurchaseToParam) {
  /* istanbul ignore next */
  cov_1ihmajautw().f[4]++;
  const page =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[16]++, parseInt(
  /* istanbul ignore next */
  (cov_1ihmajautw().b[2][0]++, pageParam) ||
  /* istanbul ignore next */
  (cov_1ihmajautw().b[2][1]++, "1"), 10));
  const searchTerm =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[17]++,
  /* istanbul ignore next */
  (cov_1ihmajautw().b[3][0]++, searchTermParam) ||
  /* istanbul ignore next */
  (cov_1ihmajautw().b[3][1]++, ""));
  const customerType =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[18]++,
  /* istanbul ignore next */
  (cov_1ihmajautw().b[4][0]++, customerTypeParam) ||
  /* istanbul ignore next */
  (cov_1ihmajautw().b[4][1]++, ""));
  const customerStatus =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[19]++,
  /* istanbul ignore next */
  (cov_1ihmajautw().b[5][0]++, customerStatusParam) ||
  /* istanbul ignore next */
  (cov_1ihmajautw().b[5][1]++, ""));
  const balanceMin =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[20]++, parseFloat(balanceMinParam)); // parseFloat handles undefined/empty as NaN
  const balanceMax =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[21]++, parseFloat(balanceMaxParam));
  const lastPurchaseFrom =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[22]++,
  /* istanbul ignore next */
  (cov_1ihmajautw().b[6][0]++, lastPurchaseFromParam) ||
  /* istanbul ignore next */
  (cov_1ihmajautw().b[6][1]++, ""));
  const lastPurchaseTo =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[23]++,
  /* istanbul ignore next */
  (cov_1ihmajautw().b[7][0]++, lastPurchaseToParam) ||
  /* istanbul ignore next */
  (cov_1ihmajautw().b[7][1]++, ""));
  let whereClause =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[24]++, {
    OR: searchTerm ?
    /* istanbul ignore next */
    (cov_1ihmajautw().b[8][0]++, [{
      name: {
        contains: searchTerm,
        mode: "insensitive"
      }
    }, {
      phone: {
        contains: searchTerm,
        mode: "insensitive"
      }
    }]) :
    /* istanbul ignore next */
    (cov_1ihmajautw().b[8][1]++, undefined)
  });
  /* istanbul ignore next */
  cov_1ihmajautw().s[25]++;
  if (
  /* istanbul ignore next */
  (cov_1ihmajautw().b[10][0]++, searchTerm) &&
  /* istanbul ignore next */
  (cov_1ihmajautw().b[10][1]++, searchTerm.toLowerCase().startsWith("cus-"))) {
    /* istanbul ignore next */
    cov_1ihmajautw().b[9][0]++;
    const numericId =
    /* istanbul ignore next */
    (cov_1ihmajautw().s[26]++, parseInt(searchTerm.substring(4), 10));
    /* istanbul ignore next */
    cov_1ihmajautw().s[27]++;
    if (!isNaN(numericId)) {
      /* istanbul ignore next */
      cov_1ihmajautw().b[11][0]++;
      cov_1ihmajautw().s[28]++;
      if (whereClause.OR) {
        /* istanbul ignore next */
        cov_1ihmajautw().b[12][0]++;
        cov_1ihmajautw().s[29]++;
        whereClause.OR.push({
          id: numericId
        });
      } else {
        /* istanbul ignore next */
        cov_1ihmajautw().b[12][1]++;
        cov_1ihmajautw().s[30]++;
        whereClause.OR = [{
          id: numericId
        }];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ihmajautw().b[11][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1ihmajautw().b[9][1]++;
  }
  cov_1ihmajautw().s[31]++;
  try {
    // Get IDs of soft-deleted customers
    const auditService =
    /* istanbul ignore next */
    (cov_1ihmajautw().s[32]++, _auditService.AuditService.getInstance());
    const deletedCustomerIds =
    /* istanbul ignore next */
    (cov_1ihmajautw().s[33]++, await auditService.getDeletedEntityIds("Customer"));
    // Add soft delete filter to where clause
    /* istanbul ignore next */
    cov_1ihmajautw().s[34]++;
    if (deletedCustomerIds.length > 0) {
      /* istanbul ignore next */
      cov_1ihmajautw().b[13][0]++;
      cov_1ihmajautw().s[35]++;
      whereClause.id = {
        notIn: deletedCustomerIds
      };
    } else
    /* istanbul ignore next */
    {
      cov_1ihmajautw().b[13][1]++;
    }
    const customersFromDB =
    /* istanbul ignore next */
    (cov_1ihmajautw().s[36]++, await _prisma.prisma.customer.findMany({
      where: whereClause,
      include: {
        invoices: {
          orderBy: {
            createdAt: "desc"
          },
          take: 1,
          select: {
            createdAt: true,
            status: true
          }
        }
      },
      orderBy: {
        createdAt: "desc"
      },
      skip: (page - 1) * ITEMS_PER_PAGE,
      take: ITEMS_PER_PAGE
    }));
    const totalCustomers =
    /* istanbul ignore next */
    (cov_1ihmajautw().s[37]++, await _prisma.prisma.customer.count({
      where: whereClause
    }));
    // Calculate due amounts per customer
    const customerIds =
    /* istanbul ignore next */
    (cov_1ihmajautw().s[38]++, customersFromDB.map(c => {
      /* istanbul ignore next */
      cov_1ihmajautw().f[5]++;
      cov_1ihmajautw().s[39]++;
      return c.id;
    }));
    const invoicesWithPayments =
    /* istanbul ignore next */
    (cov_1ihmajautw().s[40]++, await _prisma.prisma.invoice.findMany({
      where: {
        customerId: {
          in: customerIds
        },
        status: {
          in: ["unpaid", "partial", "pending"]
        }
      },
      select: {
        customerId: true,
        total: true,
        payments: {
          select: {
            amount: true
          }
        }
      }
    }));
    const dueMap =
    /* istanbul ignore next */
    (cov_1ihmajautw().s[41]++, {});
    /* istanbul ignore next */
    cov_1ihmajautw().s[42]++;
    invoicesWithPayments.forEach(inv => {
      /* istanbul ignore next */
      cov_1ihmajautw().f[6]++;
      const cid =
      /* istanbul ignore next */
      (cov_1ihmajautw().s[43]++, inv.customerId);
      const paid =
      /* istanbul ignore next */
      (cov_1ihmajautw().s[44]++, inv.payments.reduce((sum, p) => {
        /* istanbul ignore next */
        cov_1ihmajautw().f[7]++;
        cov_1ihmajautw().s[45]++;
        return sum + (
        /* istanbul ignore next */
        (cov_1ihmajautw().b[14][0]++, p.amount) ||
        /* istanbul ignore next */
        (cov_1ihmajautw().b[14][1]++, 0));
      }, 0));
      const due =
      /* istanbul ignore next */
      (cov_1ihmajautw().s[46]++, (
      /* istanbul ignore next */
      (cov_1ihmajautw().b[15][0]++, inv.total) ||
      /* istanbul ignore next */
      (cov_1ihmajautw().b[15][1]++, 0)) - paid);
      /* istanbul ignore next */
      cov_1ihmajautw().s[47]++;
      dueMap[cid] = (
      /* istanbul ignore next */
      (cov_1ihmajautw().b[16][0]++, dueMap[cid]) ||
      /* istanbul ignore next */
      (cov_1ihmajautw().b[16][1]++, 0)) + due;
    });
    const formattedCustomers =
    /* istanbul ignore next */
    (cov_1ihmajautw().s[48]++, customersFromDB.map(customer => {
      /* istanbul ignore next */
      cov_1ihmajautw().f[8]++;
      let displayAddress =
      /* istanbul ignore next */
      (cov_1ihmajautw().s[49]++, "N/A");
      /* istanbul ignore next */
      cov_1ihmajautw().s[50]++;
      if (customer.address) {
        /* istanbul ignore next */
        cov_1ihmajautw().b[17][0]++;
        cov_1ihmajautw().s[51]++;
        try {
          const parsedAddress =
          /* istanbul ignore next */
          (cov_1ihmajautw().s[52]++, JSON.parse(customer.address));
          // Check if it's the old structure with mainAddress
          /* istanbul ignore next */
          cov_1ihmajautw().s[53]++;
          if (
          /* istanbul ignore next */
          (cov_1ihmajautw().b[19][0]++, parsedAddress) &&
          /* istanbul ignore next */
          (cov_1ihmajautw().b[19][1]++, typeof parsedAddress === "object") &&
          /* istanbul ignore next */
          (cov_1ihmajautw().b[19][2]++, parsedAddress.mainAddress)) {
            /* istanbul ignore next */
            cov_1ihmajautw().b[18][0]++;
            cov_1ihmajautw().s[54]++;
            displayAddress = parsedAddress.mainAddress;
            /* istanbul ignore next */
            cov_1ihmajautw().s[55]++;
            if (parsedAddress.city) {
              /* istanbul ignore next */
              cov_1ihmajautw().b[20][0]++;
              cov_1ihmajautw().s[56]++;
              displayAddress += `, ${parsedAddress.city}`;
            } else
            /* istanbul ignore next */
            {
              cov_1ihmajautw().b[20][1]++;
            }
          } else {
            /* istanbul ignore next */
            cov_1ihmajautw().b[18][1]++;
            cov_1ihmajautw().s[57]++;
            if (typeof parsedAddress === "string") {
              /* istanbul ignore next */
              cov_1ihmajautw().b[21][0]++;
              cov_1ihmajautw().s[58]++;
              // If parsing results in a string, use that (e.g. if db stores "'Some Address String'" including quotes)
              displayAddress = parsedAddress;
            } else {
              /* istanbul ignore next */
              cov_1ihmajautw().b[21][1]++;
              cov_1ihmajautw().s[59]++;
              // It was parsable JSON but not the expected old structure, and not a simple string post-parsing.
              // Fallback to the raw string if it doesn't look like typical JSON, otherwise mark as needing review or use a generic placeholder.
              displayAddress =
              /* istanbul ignore next */
              (cov_1ihmajautw().b[23][0]++, customer.address.trim().startsWith("{")) &&
              /* istanbul ignore next */
              (cov_1ihmajautw().b[23][1]++, customer.address.trim().endsWith("}")) ?
              /* istanbul ignore next */
              (cov_1ihmajautw().b[22][0]++, "Address data needs review") :
              /* istanbul ignore next */
              (cov_1ihmajautw().b[22][1]++, customer.address);
            }
          }
        } catch (e) {
          /* istanbul ignore next */
          cov_1ihmajautw().s[60]++;
          // Parsing failed, assume it's a plain text address (new records or already migrated)
          displayAddress = customer.address;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1ihmajautw().b[17][1]++;
      }
      const latestInvoice =
      /* istanbul ignore next */
      (cov_1ihmajautw().s[61]++,
      /* istanbul ignore next */
      (cov_1ihmajautw().b[24][0]++, customer.invoices) &&
      /* istanbul ignore next */
      (cov_1ihmajautw().b[24][1]++, customer.invoices[0]));
      const uiCustomer =
      /* istanbul ignore next */
      (cov_1ihmajautw().s[62]++, {
        id: customer.id,
        name: customer.name,
        email: customer.email,
        phone: customer.phone,
        address: displayAddress,
        customerType: customer.customerType,
        creditLimit: customer.creditLimit,
        creditPeriod: customer.creditPeriod,
        isActive: customer.isActive,
        createdAt: customer.createdAt,
        updatedAt: customer.updatedAt,
        lastPurchaseDate: latestInvoice ?
        /* istanbul ignore next */
        (cov_1ihmajautw().b[25][0]++, latestInvoice.createdAt) :
        /* istanbul ignore next */
        (cov_1ihmajautw().b[25][1]++, null),
        latestInvoicePaymentStatus: latestInvoice ?
        /* istanbul ignore next */
        (cov_1ihmajautw().b[26][0]++, latestInvoice.status) :
        /* istanbul ignore next */
        (cov_1ihmajautw().b[26][1]++, null),
        balance: customer.customerType === "wholesale" ?
        /* istanbul ignore next */
        (cov_1ihmajautw().b[27][0]++,
        /* istanbul ignore next */
        (cov_1ihmajautw().b[28][0]++, customer.creditLimit) ||
        /* istanbul ignore next */
        (cov_1ihmajautw().b[28][1]++, 0)) :
        /* istanbul ignore next */
        (cov_1ihmajautw().b[27][1]++, undefined),
        contactPerson: customer.name,
        due:
        /* istanbul ignore next */
        (cov_1ihmajautw().b[29][0]++, dueMap[customer.id]) ||
        /* istanbul ignore next */
        (cov_1ihmajautw().b[29][1]++, 0)
      });
      /* istanbul ignore next */
      cov_1ihmajautw().s[63]++;
      return uiCustomer;
    }));
    let postFilteredCustomers =
    /* istanbul ignore next */
    (cov_1ihmajautw().s[64]++, formattedCustomers);
    /* istanbul ignore next */
    cov_1ihmajautw().s[65]++;
    if (customerType) {
      /* istanbul ignore next */
      cov_1ihmajautw().b[30][0]++;
      cov_1ihmajautw().s[66]++;
      postFilteredCustomers = postFilteredCustomers.filter(c => {
        /* istanbul ignore next */
        cov_1ihmajautw().f[9]++;
        cov_1ihmajautw().s[67]++;
        return c.customerType.toLowerCase() === customerType.toLowerCase();
      });
    } else
    /* istanbul ignore next */
    {
      cov_1ihmajautw().b[30][1]++;
    }
    cov_1ihmajautw().s[68]++;
    if (customerStatus) {
      /* istanbul ignore next */
      cov_1ihmajautw().b[31][0]++;
      cov_1ihmajautw().s[69]++;
      if (
      /* istanbul ignore next */
      (cov_1ihmajautw().b[33][0]++, customerStatus.toLowerCase() === "paid") ||
      /* istanbul ignore next */
      (cov_1ihmajautw().b[33][1]++, customerStatus.toLowerCase() === "unpaid") ||
      /* istanbul ignore next */
      (cov_1ihmajautw().b[33][2]++, customerStatus.toLowerCase() === "pending") ||
      /* istanbul ignore next */
      (cov_1ihmajautw().b[33][3]++, customerStatus.toLowerCase() === "partial")) {
        /* istanbul ignore next */
        cov_1ihmajautw().b[32][0]++;
        cov_1ihmajautw().s[70]++;
        postFilteredCustomers = postFilteredCustomers.filter(c => {
          /* istanbul ignore next */
          cov_1ihmajautw().f[10]++;
          cov_1ihmajautw().s[71]++;
          return c.latestInvoicePaymentStatus?.toLowerCase() === customerStatus.toLowerCase();
        });
      } else {
        /* istanbul ignore next */
        cov_1ihmajautw().b[32][1]++;
        cov_1ihmajautw().s[72]++;
        if (
        /* istanbul ignore next */
        (cov_1ihmajautw().b[35][0]++, customerStatus === "Active") ||
        /* istanbul ignore next */
        (cov_1ihmajautw().b[35][1]++, customerStatus === "Inactive")) {
          /* istanbul ignore next */
          cov_1ihmajautw().b[34][0]++;
          cov_1ihmajautw().s[73]++;
          postFilteredCustomers = postFilteredCustomers.filter(c => {
            /* istanbul ignore next */
            cov_1ihmajautw().f[11]++;
            cov_1ihmajautw().s[74]++;
            return c.isActive === (customerStatus === "Active");
          });
        } else
        /* istanbul ignore next */
        {
          cov_1ihmajautw().b[34][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ihmajautw().b[31][1]++;
    }
    cov_1ihmajautw().s[75]++;
    if (!isNaN(balanceMin)) {
      /* istanbul ignore next */
      cov_1ihmajautw().b[36][0]++;
      cov_1ihmajautw().s[76]++;
      postFilteredCustomers = postFilteredCustomers.filter(c => {
        /* istanbul ignore next */
        cov_1ihmajautw().f[12]++;
        cov_1ihmajautw().s[77]++;
        return /* istanbul ignore next */(cov_1ihmajautw().b[37][0]++, c.customerType === "wholesale") &&
        /* istanbul ignore next */
        (cov_1ihmajautw().b[37][1]++, (
        /* istanbul ignore next */
        (cov_1ihmajautw().b[38][0]++, c.balance) ||
        /* istanbul ignore next */
        (cov_1ihmajautw().b[38][1]++, 0)) >= balanceMin);
      });
    } else
    /* istanbul ignore next */
    {
      cov_1ihmajautw().b[36][1]++;
    }
    cov_1ihmajautw().s[78]++;
    if (!isNaN(balanceMax)) {
      /* istanbul ignore next */
      cov_1ihmajautw().b[39][0]++;
      cov_1ihmajautw().s[79]++;
      postFilteredCustomers = postFilteredCustomers.filter(c => {
        /* istanbul ignore next */
        cov_1ihmajautw().f[13]++;
        cov_1ihmajautw().s[80]++;
        return /* istanbul ignore next */(cov_1ihmajautw().b[40][0]++, c.customerType === "wholesale") &&
        /* istanbul ignore next */
        (cov_1ihmajautw().b[40][1]++, (
        /* istanbul ignore next */
        (cov_1ihmajautw().b[41][0]++, c.balance) ||
        /* istanbul ignore next */
        (cov_1ihmajautw().b[41][1]++, 0)) <= balanceMax);
      });
    } else
    /* istanbul ignore next */
    {
      cov_1ihmajautw().b[39][1]++;
    }
    cov_1ihmajautw().s[81]++;
    if (lastPurchaseFrom) {
      /* istanbul ignore next */
      cov_1ihmajautw().b[42][0]++;
      cov_1ihmajautw().s[82]++;
      postFilteredCustomers = postFilteredCustomers.filter(c => {
        /* istanbul ignore next */
        cov_1ihmajautw().f[14]++;
        cov_1ihmajautw().s[83]++;
        return /* istanbul ignore next */(cov_1ihmajautw().b[43][0]++, c.lastPurchaseDate) &&
        /* istanbul ignore next */
        (cov_1ihmajautw().b[43][1]++, new Date(c.lastPurchaseDate) >= new Date(lastPurchaseFrom));
      });
    } else
    /* istanbul ignore next */
    {
      cov_1ihmajautw().b[42][1]++;
    }
    cov_1ihmajautw().s[84]++;
    if (lastPurchaseTo) {
      /* istanbul ignore next */
      cov_1ihmajautw().b[44][0]++;
      cov_1ihmajautw().s[85]++;
      postFilteredCustomers = postFilteredCustomers.filter(c => {
        /* istanbul ignore next */
        cov_1ihmajautw().f[15]++;
        cov_1ihmajautw().s[86]++;
        return /* istanbul ignore next */(cov_1ihmajautw().b[45][0]++, c.lastPurchaseDate) &&
        /* istanbul ignore next */
        (cov_1ihmajautw().b[45][1]++, new Date(c.lastPurchaseDate) <= new Date(lastPurchaseTo));
      });
    } else
    /* istanbul ignore next */
    {
      cov_1ihmajautw().b[44][1]++;
    }
    cov_1ihmajautw().s[87]++;
    return {
      customers: postFilteredCustomers,
      totalPages: Math.ceil(totalCustomers / ITEMS_PER_PAGE),
      currentPage: page
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1ihmajautw().s[88]++;
    console.error("Error fetching customers:", error);
    /* istanbul ignore next */
    cov_1ihmajautw().s[89]++;
    return {
      customers: [],
      totalPages: 0,
      currentPage: 1,
      error: "Failed to fetch customers"
    };
  }
}
async function CustomersPage({
  searchParams
}) {
  /* istanbul ignore next */
  cov_1ihmajautw().f[16]++;
  const page =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[90]++, searchParams?.page);
  const search =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[91]++, searchParams?.search);
  const customerType =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[92]++, searchParams?.type);
  const status =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[93]++, searchParams?.status);
  const balanceMin =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[94]++, searchParams?.balanceMin);
  const balanceMax =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[95]++, searchParams?.balanceMax);
  const lastPurchaseFrom =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[96]++, searchParams?.lastPurchaseFrom);
  const lastPurchaseTo =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[97]++, searchParams?.lastPurchaseTo);
  const {
    customers,
    totalPages,
    currentPage,
    error
  } =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[98]++, await fetchCustomersData(page, search, customerType, status, balanceMin, balanceMax, lastPurchaseFrom, lastPurchaseTo));
  /* istanbul ignore next */
  cov_1ihmajautw().s[99]++;
  if (error) {
    /* istanbul ignore next */
    cov_1ihmajautw().b[46][0]++;
    cov_1ihmajautw().s[100]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_MainLayout.default, {
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "container mx-auto px-4 py-8",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-red-500",
          children: error
        })
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_1ihmajautw().b[46][1]++;
  }
  cov_1ihmajautw().s[101]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_MainLayout.default, {
    children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "container mx-auto px-4 py-8",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_react.Suspense, {
        fallback: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex justify-center items-center h-64",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Loader2, {
            className: "animate-spin text-indigo-600",
            size: 48
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "ml-3 text-lg text-gray-600",
            children: "Loading customers..."
          })]
        }),
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_CustomerClientWrapper.default, {
          initialCustomers: customers,
          initialTotalPages: totalPages,
          initialCurrentPage: currentPage
        })
      })
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,