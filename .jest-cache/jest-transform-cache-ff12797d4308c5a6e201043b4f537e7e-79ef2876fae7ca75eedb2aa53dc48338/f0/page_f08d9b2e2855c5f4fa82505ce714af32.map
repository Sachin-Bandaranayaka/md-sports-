{"version":3,"names":["default","cov_txngypnvy","f","s","NewPurchaseInvoicePage","dynamic","fetchSuppliers","baseUrl","response","fetch","next","revalidate","tags","cache","ok","b","console","error","status","text","data","json","Array","isArray","success","fetchProducts","products","fetchCategories","fetchShops","headersList","_headers","headers","host","get","protocol","process","env","NODE_ENV","suppliers","categories","shops","Promise","all","_jsxruntime","jsx","_MainLayout","jsxs","className","_react","Suspense","fallback","_lucidereact","Loader2","_NewPurchaseInvoiceForm","initialSuppliers","initialProducts","initialCategories","initialShops"],"sources":["/Users/sachin/Documents/md-sports-/src/app/purchases/new/page.tsx"],"sourcesContent":["import { Suspense } from 'react';\nimport { headers } from 'next/headers';\nimport MainLayout from '@/components/layout/MainLayout';\nimport NewPurchaseInvoiceForm from '@/components/purchases/NewPurchaseInvoiceForm';\nimport { Supplier, Product, Category, Shop } from '@/types'; // Ensure types are available\nimport { Loader2, ArrowLeft } from 'lucide-react'; // Added ArrowLeft for potential use\n\n// Preload data for faster rendering\nexport const dynamic = 'force-dynamic';\n\nasync function fetchSuppliers(baseUrl: string): Promise<Supplier[]> {\n    try {\n        const response = await fetch(`${baseUrl}/api/suppliers`, {\n            next: { revalidate: 60, tags: ['suppliers'] },  // Cache for 1 minute with tags\n            cache: 'force-cache'         // Use cache when available\n        });\n        if (!response.ok) {\n            console.error(`Failed to fetch suppliers: ${response.status} ${await response.text()}`);\n            return [];\n        }\n        const data = await response.json();\n        return Array.isArray(data) ? data : (data.success && Array.isArray(data.data) ? data.data : []);\n    } catch (error) {\n        console.error('Error fetching suppliers:', error);\n        return [];\n    }\n}\n\nasync function fetchProducts(baseUrl: string): Promise<Product[]> {\n    try {\n        // Use incremental static regeneration for products with a 30-second cache\n        const response = await fetch(`${baseUrl}/api/products`, {\n            next: { revalidate: 30 }  // Cache for 30 seconds\n        });\n        if (!response.ok) {\n            console.error(`Failed to fetch products: ${response.status} ${await response.text()}`);\n            return [];\n        }\n        const data = await response.json();\n        // Adjust based on actual API response structure for products\n        return Array.isArray(data) ? data :\n            (data.success && Array.isArray(data.data)) ? data.data :\n                (Array.isArray(data.products)) ? data.products : // Common pattern { products: [] }\n                    [];\n    } catch (error) {\n        console.error('Error fetching products:', error);\n        return [];\n    }\n}\n\nasync function fetchCategories(baseUrl: string): Promise<Category[]> {\n    try {\n        const response = await fetch(`${baseUrl}/api/products/categories`, {\n            next: { revalidate: 3600 },  // Cache for 1 hour\n            cache: 'force-cache'         // Use cache when available\n        });\n        if (!response.ok) {\n            console.error(`Failed to fetch categories: ${response.status} ${await response.text()}`);\n            return [];\n        }\n        const data = await response.json();\n        return Array.isArray(data) ? data : (data.success && Array.isArray(data.data) ? data.data : []);\n    } catch (error) {\n        console.error('Error fetching categories:', error);\n        return [];\n    }\n}\n\nasync function fetchShops(baseUrl: string): Promise<Shop[]> {\n    try {\n        const response = await fetch(`${baseUrl}/api/shops`, {\n            next: { revalidate: 3600 },  // Cache for 1 hour\n            cache: 'force-cache'         // Use cache when available\n        });\n        if (!response.ok) {\n            console.error(`Failed to fetch shops: ${response.status} ${await response.text()}`);\n            return [];\n        }\n        const data = await response.json();\n        return Array.isArray(data) ? data : (data.success && Array.isArray(data.data) ? data.data : []);\n    } catch (error) {\n        console.error('Error fetching shops:', error);\n        return [];\n    }\n}\n\nexport default async function NewPurchaseInvoicePage() {\n    const headersList = await headers();\n    const host = headersList.get('host') || 'localhost:3000';\n    const protocol = process.env.NODE_ENV === 'development' ? 'http' : 'https';\n    const baseUrl = `${protocol}://${host}`;\n\n    const [suppliers, products, categories, shops] = await Promise.all([\n        fetchSuppliers(baseUrl),\n        fetchProducts(baseUrl),\n        fetchCategories(baseUrl),\n        fetchShops(baseUrl)\n    ]);\n\n    return (\n        <MainLayout>\n            <div className=\"container mx-auto px-4 py-8 max-w-5xl\">\n                <div className=\"flex items-center gap-3 mb-6 border-b pb-4\">\n                    {/* A client component would be needed for router.back() or use a Link component */}\n                    {/* <Link href=\"/purchases\" className=\"p-2 rounded-md hover:bg-gray-100\">\n                        <ArrowLeft className=\"w-5 h-5 text-gray-600\" />\n                    </Link> */}\n                    <h1 className=\"text-2xl font-bold text-gray-800\">Create New Purchase Invoice</h1>\n                </div>\n                <Suspense fallback={\n                    <div className=\"flex flex-col justify-center items-center h-64\">\n                        <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n                        <p className=\"mt-4 text-gray-600\">Loading form essentials...</p>\n                    </div>\n                }>\n                    <NewPurchaseInvoiceForm\n                        initialSuppliers={suppliers}\n                        initialProducts={products}\n                        initialCategories={categories}\n                        initialShops={shops}\n                    />\n                </Suspense>\n            </div>\n        </MainLayout>\n    );\n}"],"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","ignoreList":[]}