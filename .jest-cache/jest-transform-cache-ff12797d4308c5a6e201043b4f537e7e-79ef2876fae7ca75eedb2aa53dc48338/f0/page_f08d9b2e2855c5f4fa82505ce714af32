02dcc24a8b38326414f2f24b6f18f156
"use strict";

/* istanbul ignore next */
function cov_txngypnvy() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/purchases/new/page.tsx";
  var hash = "2b43b0661f81a4dabb2fd3dfeb828ac7e951a0ee";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/purchases/new/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 38
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 23
        }
      },
      "6": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 48
        }
      },
      "7": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "8": {
        start: {
          line: 21,
          column: 17
        },
        end: {
          line: 21,
          column: 40
        }
      },
      "9": {
        start: {
          line: 22,
          column: 34
        },
        end: {
          line: 22,
          column: 108
        }
      },
      "10": {
        start: {
          line: 23,
          column: 46
        },
        end: {
          line: 23,
          column: 135
        }
      },
      "11": {
        start: {
          line: 24,
          column: 21
        },
        end: {
          line: 24,
          column: 44
        }
      },
      "12": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 28,
          column: 6
        }
      },
      "13": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 31
        }
      },
      "14": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "15": {
        start: {
          line: 33,
          column: 25
        },
        end: {
          line: 41,
          column: 10
        }
      },
      "16": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "17": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 100
        }
      },
      "18": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 22
        }
      },
      "19": {
        start: {
          line: 46,
          column: 21
        },
        end: {
          line: 46,
          column: 42
        }
      },
      "20": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 102
        }
      },
      "21": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 58
        }
      },
      "22": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 18
        }
      },
      "23": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "24": {
        start: {
          line: 56,
          column: 25
        },
        end: {
          line: 60,
          column: 10
        }
      },
      "25": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "26": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 99
        }
      },
      "27": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 22
        }
      },
      "28": {
        start: {
          line: 65,
          column: 21
        },
        end: {
          line: 65,
          column: 42
        }
      },
      "29": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 149
        }
      },
      "30": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 57
        }
      },
      "31": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 18
        }
      },
      "32": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "33": {
        start: {
          line: 75,
          column: 25
        },
        end: {
          line: 80,
          column: 10
        }
      },
      "34": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "35": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 101
        }
      },
      "36": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 22
        }
      },
      "37": {
        start: {
          line: 85,
          column: 21
        },
        end: {
          line: 85,
          column: 42
        }
      },
      "38": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 102
        }
      },
      "39": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 59
        }
      },
      "40": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 18
        }
      },
      "41": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 109,
          column: 5
        }
      },
      "42": {
        start: {
          line: 94,
          column: 25
        },
        end: {
          line: 99,
          column: 10
        }
      },
      "43": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "44": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 96
        }
      },
      "45": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 22
        }
      },
      "46": {
        start: {
          line: 104,
          column: 21
        },
        end: {
          line: 104,
          column: 42
        }
      },
      "47": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 102
        }
      },
      "48": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 54
        }
      },
      "49": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 18
        }
      },
      "50": {
        start: {
          line: 112,
          column: 24
        },
        end: {
          line: 112,
          column: 53
        }
      },
      "51": {
        start: {
          line: 113,
          column: 17
        },
        end: {
          line: 113,
          column: 60
        }
      },
      "52": {
        start: {
          line: 114,
          column: 21
        },
        end: {
          line: 114,
          column: 78
        }
      },
      "53": {
        start: {
          line: 115,
          column: 20
        },
        end: {
          line: 115,
          column: 43
        }
      },
      "54": {
        start: {
          line: 116,
          column: 53
        },
        end: {
          line: 121,
          column: 6
        }
      },
      "55": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 155,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 13
          },
          end: {
            line: 12,
            column: 14
          }
        },
        loc: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 13
          },
          end: {
            line: 15,
            column: 14
          }
        },
        loc: {
          start: {
            line: 15,
            column: 24
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 33
          }
        },
        loc: {
          start: {
            line: 25,
            column: 39
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 25
      },
      "4": {
        name: "fetchSuppliers",
        decl: {
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 29
          }
        },
        loc: {
          start: {
            line: 31,
            column: 39
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 31
      },
      "5": {
        name: "fetchProducts",
        decl: {
          start: {
            line: 53,
            column: 15
          },
          end: {
            line: 53,
            column: 28
          }
        },
        loc: {
          start: {
            line: 53,
            column: 38
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 53
      },
      "6": {
        name: "fetchCategories",
        decl: {
          start: {
            line: 73,
            column: 15
          },
          end: {
            line: 73,
            column: 30
          }
        },
        loc: {
          start: {
            line: 73,
            column: 40
          },
          end: {
            line: 91,
            column: 1
          }
        },
        line: 73
      },
      "7": {
        name: "fetchShops",
        decl: {
          start: {
            line: 92,
            column: 15
          },
          end: {
            line: 92,
            column: 25
          }
        },
        loc: {
          start: {
            line: 92,
            column: 35
          },
          end: {
            line: 110,
            column: 1
          }
        },
        line: 92
      },
      "8": {
        name: "NewPurchaseInvoicePage",
        decl: {
          start: {
            line: 111,
            column: 15
          },
          end: {
            line: 111,
            column: 37
          }
        },
        loc: {
          start: {
            line: 111,
            column: 40
          },
          end: {
            line: 156,
            column: 1
          }
        },
        line: 111
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 35
          },
          end: {
            line: 26,
            column: 38
          }
        }, {
          start: {
            line: 26,
            column: 41
          },
          end: {
            line: 28,
            column: 5
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 26,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 26,
            column: 14
          }
        }, {
          start: {
            line: 26,
            column: 18
          },
          end: {
            line: 26,
            column: 32
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 15
          },
          end: {
            line: 47,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 37
          },
          end: {
            line: 47,
            column: 41
          }
        }, {
          start: {
            line: 47,
            column: 44
          },
          end: {
            line: 47,
            column: 101
          }
        }],
        line: 47
      },
      "4": {
        loc: {
          start: {
            line: 47,
            column: 44
          },
          end: {
            line: 47,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 87
          },
          end: {
            line: 47,
            column: 96
          }
        }, {
          start: {
            line: 47,
            column: 99
          },
          end: {
            line: 47,
            column: 101
          }
        }],
        line: 47
      },
      "5": {
        loc: {
          start: {
            line: 47,
            column: 44
          },
          end: {
            line: 47,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 44
          },
          end: {
            line: 47,
            column: 56
          }
        }, {
          start: {
            line: 47,
            column: 60
          },
          end: {
            line: 47,
            column: 84
          }
        }],
        line: 47
      },
      "6": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "7": {
        loc: {
          start: {
            line: 67,
            column: 15
          },
          end: {
            line: 67,
            column: 148
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 67,
            column: 37
          },
          end: {
            line: 67,
            column: 41
          }
        }, {
          start: {
            line: 67,
            column: 44
          },
          end: {
            line: 67,
            column: 148
          }
        }],
        line: 67
      },
      "8": {
        loc: {
          start: {
            line: 67,
            column: 44
          },
          end: {
            line: 67,
            column: 148
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 67,
            column: 87
          },
          end: {
            line: 67,
            column: 96
          }
        }, {
          start: {
            line: 67,
            column: 99
          },
          end: {
            line: 67,
            column: 148
          }
        }],
        line: 67
      },
      "9": {
        loc: {
          start: {
            line: 67,
            column: 44
          },
          end: {
            line: 67,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 44
          },
          end: {
            line: 67,
            column: 56
          }
        }, {
          start: {
            line: 67,
            column: 60
          },
          end: {
            line: 67,
            column: 84
          }
        }],
        line: 67
      },
      "10": {
        loc: {
          start: {
            line: 67,
            column: 99
          },
          end: {
            line: 67,
            column: 148
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 67,
            column: 130
          },
          end: {
            line: 67,
            column: 143
          }
        }, {
          start: {
            line: 67,
            column: 146
          },
          end: {
            line: 67,
            column: 148
          }
        }],
        line: 67
      },
      "11": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "12": {
        loc: {
          start: {
            line: 86,
            column: 15
          },
          end: {
            line: 86,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 86,
            column: 37
          },
          end: {
            line: 86,
            column: 41
          }
        }, {
          start: {
            line: 86,
            column: 44
          },
          end: {
            line: 86,
            column: 101
          }
        }],
        line: 86
      },
      "13": {
        loc: {
          start: {
            line: 86,
            column: 44
          },
          end: {
            line: 86,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 86,
            column: 87
          },
          end: {
            line: 86,
            column: 96
          }
        }, {
          start: {
            line: 86,
            column: 99
          },
          end: {
            line: 86,
            column: 101
          }
        }],
        line: 86
      },
      "14": {
        loc: {
          start: {
            line: 86,
            column: 44
          },
          end: {
            line: 86,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 44
          },
          end: {
            line: 86,
            column: 56
          }
        }, {
          start: {
            line: 86,
            column: 60
          },
          end: {
            line: 86,
            column: 84
          }
        }],
        line: 86
      },
      "15": {
        loc: {
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "16": {
        loc: {
          start: {
            line: 105,
            column: 15
          },
          end: {
            line: 105,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 105,
            column: 37
          },
          end: {
            line: 105,
            column: 41
          }
        }, {
          start: {
            line: 105,
            column: 44
          },
          end: {
            line: 105,
            column: 101
          }
        }],
        line: 105
      },
      "17": {
        loc: {
          start: {
            line: 105,
            column: 44
          },
          end: {
            line: 105,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 105,
            column: 87
          },
          end: {
            line: 105,
            column: 96
          }
        }, {
          start: {
            line: 105,
            column: 99
          },
          end: {
            line: 105,
            column: 101
          }
        }],
        line: 105
      },
      "18": {
        loc: {
          start: {
            line: 105,
            column: 44
          },
          end: {
            line: 105,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 44
          },
          end: {
            line: 105,
            column: 56
          }
        }, {
          start: {
            line: 105,
            column: 60
          },
          end: {
            line: 105,
            column: 84
          }
        }],
        line: 105
      },
      "19": {
        loc: {
          start: {
            line: 113,
            column: 17
          },
          end: {
            line: 113,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 17
          },
          end: {
            line: 113,
            column: 40
          }
        }, {
          start: {
            line: 113,
            column: 44
          },
          end: {
            line: 113,
            column: 60
          }
        }],
        line: 113
      },
      "20": {
        loc: {
          start: {
            line: 114,
            column: 21
          },
          end: {
            line: 114,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 114,
            column: 62
          },
          end: {
            line: 114,
            column: 68
          }
        }, {
          start: {
            line: 114,
            column: 71
          },
          end: {
            line: 114,
            column: 78
          }
        }],
        line: 114
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/purchases/new/page.tsx"],
      sourcesContent: ["import { Suspense } from 'react';\nimport { headers } from 'next/headers';\nimport MainLayout from '@/components/layout/MainLayout';\nimport NewPurchaseInvoiceForm from '@/components/purchases/NewPurchaseInvoiceForm';\nimport { Supplier, Product, Category, Shop } from '@/types'; // Ensure types are available\nimport { Loader2, ArrowLeft } from 'lucide-react'; // Added ArrowLeft for potential use\n\n// Preload data for faster rendering\nexport const dynamic = 'force-dynamic';\n\nasync function fetchSuppliers(baseUrl: string): Promise<Supplier[]> {\n    try {\n        const response = await fetch(`${baseUrl}/api/suppliers`, {\n            next: { revalidate: 60, tags: ['suppliers'] },  // Cache for 1 minute with tags\n            cache: 'force-cache'         // Use cache when available\n        });\n        if (!response.ok) {\n            console.error(`Failed to fetch suppliers: ${response.status} ${await response.text()}`);\n            return [];\n        }\n        const data = await response.json();\n        return Array.isArray(data) ? data : (data.success && Array.isArray(data.data) ? data.data : []);\n    } catch (error) {\n        console.error('Error fetching suppliers:', error);\n        return [];\n    }\n}\n\nasync function fetchProducts(baseUrl: string): Promise<Product[]> {\n    try {\n        // Use incremental static regeneration for products with a 30-second cache\n        const response = await fetch(`${baseUrl}/api/products`, {\n            next: { revalidate: 30 }  // Cache for 30 seconds\n        });\n        if (!response.ok) {\n            console.error(`Failed to fetch products: ${response.status} ${await response.text()}`);\n            return [];\n        }\n        const data = await response.json();\n        // Adjust based on actual API response structure for products\n        return Array.isArray(data) ? data :\n            (data.success && Array.isArray(data.data)) ? data.data :\n                (Array.isArray(data.products)) ? data.products : // Common pattern { products: [] }\n                    [];\n    } catch (error) {\n        console.error('Error fetching products:', error);\n        return [];\n    }\n}\n\nasync function fetchCategories(baseUrl: string): Promise<Category[]> {\n    try {\n        const response = await fetch(`${baseUrl}/api/products/categories`, {\n            next: { revalidate: 3600 },  // Cache for 1 hour\n            cache: 'force-cache'         // Use cache when available\n        });\n        if (!response.ok) {\n            console.error(`Failed to fetch categories: ${response.status} ${await response.text()}`);\n            return [];\n        }\n        const data = await response.json();\n        return Array.isArray(data) ? data : (data.success && Array.isArray(data.data) ? data.data : []);\n    } catch (error) {\n        console.error('Error fetching categories:', error);\n        return [];\n    }\n}\n\nasync function fetchShops(baseUrl: string): Promise<Shop[]> {\n    try {\n        const response = await fetch(`${baseUrl}/api/shops`, {\n            next: { revalidate: 3600 },  // Cache for 1 hour\n            cache: 'force-cache'         // Use cache when available\n        });\n        if (!response.ok) {\n            console.error(`Failed to fetch shops: ${response.status} ${await response.text()}`);\n            return [];\n        }\n        const data = await response.json();\n        return Array.isArray(data) ? data : (data.success && Array.isArray(data.data) ? data.data : []);\n    } catch (error) {\n        console.error('Error fetching shops:', error);\n        return [];\n    }\n}\n\nexport default async function NewPurchaseInvoicePage() {\n    const headersList = await headers();\n    const host = headersList.get('host') || 'localhost:3000';\n    const protocol = process.env.NODE_ENV === 'development' ? 'http' : 'https';\n    const baseUrl = `${protocol}://${host}`;\n\n    const [suppliers, products, categories, shops] = await Promise.all([\n        fetchSuppliers(baseUrl),\n        fetchProducts(baseUrl),\n        fetchCategories(baseUrl),\n        fetchShops(baseUrl)\n    ]);\n\n    return (\n        <MainLayout>\n            <div className=\"container mx-auto px-4 py-8 max-w-5xl\">\n                <div className=\"flex items-center gap-3 mb-6 border-b pb-4\">\n                    {/* A client component would be needed for router.back() or use a Link component */}\n                    {/* <Link href=\"/purchases\" className=\"p-2 rounded-md hover:bg-gray-100\">\n                        <ArrowLeft className=\"w-5 h-5 text-gray-600\" />\n                    </Link> */}\n                    <h1 className=\"text-2xl font-bold text-gray-800\">Create New Purchase Invoice</h1>\n                </div>\n                <Suspense fallback={\n                    <div className=\"flex flex-col justify-center items-center h-64\">\n                        <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n                        <p className=\"mt-4 text-gray-600\">Loading form essentials...</p>\n                    </div>\n                }>\n                    <NewPurchaseInvoiceForm\n                        initialSuppliers={suppliers}\n                        initialProducts={products}\n                        initialCategories={categories}\n                        initialShops={shops}\n                    />\n                </Suspense>\n            </div>\n        </MainLayout>\n    );\n}"],
      names: ["NewPurchaseInvoicePage", "dynamic", "fetchSuppliers", "baseUrl", "response", "fetch", "next", "revalidate", "tags", "cache", "ok", "console", "error", "status", "text", "data", "json", "Array", "isArray", "success", "fetchProducts", "products", "fetchCategories", "fetchShops", "headersList", "headers", "host", "get", "protocol", "process", "env", "NODE_ENV", "suppliers", "categories", "shops", "Promise", "all", "MainLayout", "div", "className", "h1", "Suspense", "fallback", "Loader2", "p", "NewPurchaseInvoiceForm", "initialSuppliers", "initialProducts", "initialCategories", "initialShops"],
      mappings: ";;;;;;;;;;;IAsFA,OAuCC;eAvC6BA;;IA9EjBC,OAAO;eAAPA;;;;uBARY;yBACD;mEACD;+EACY;6BAEA;;;;;;AAG5B,MAAMA,UAAU;AAEvB,eAAeC,eAAeC,OAAe;IACzC,IAAI;QACA,MAAMC,WAAW,MAAMC,MAAM,CAAC,EAAEF,QAAQ,cAAc,CAAC,EAAE;YACrDG,MAAM;gBAAEC,YAAY;gBAAIC,MAAM;oBAAC;iBAAY;YAAC;YAC5CC,OAAO,cAAsB,2BAA2B;QAC5D;QACA,IAAI,CAACL,SAASM,EAAE,EAAE;YACdC,QAAQC,KAAK,CAAC,CAAC,2BAA2B,EAAER,SAASS,MAAM,CAAC,CAAC,EAAE,MAAMT,SAASU,IAAI,GAAG,CAAC;YACtF,OAAO,EAAE;QACb;QACA,MAAMC,OAAO,MAAMX,SAASY,IAAI;QAChC,OAAOC,MAAMC,OAAO,CAACH,QAAQA,OAAQA,KAAKI,OAAO,IAAIF,MAAMC,OAAO,CAACH,KAAKA,IAAI,IAAIA,KAAKA,IAAI,GAAG,EAAE;IAClG,EAAE,OAAOH,OAAO;QACZD,QAAQC,KAAK,CAAC,6BAA6BA;QAC3C,OAAO,EAAE;IACb;AACJ;AAEA,eAAeQ,cAAcjB,OAAe;IACxC,IAAI;QACA,0EAA0E;QAC1E,MAAMC,WAAW,MAAMC,MAAM,CAAC,EAAEF,QAAQ,aAAa,CAAC,EAAE;YACpDG,MAAM;gBAAEC,YAAY;YAAG,EAAG,uBAAuB;QACrD;QACA,IAAI,CAACH,SAASM,EAAE,EAAE;YACdC,QAAQC,KAAK,CAAC,CAAC,0BAA0B,EAAER,SAASS,MAAM,CAAC,CAAC,EAAE,MAAMT,SAASU,IAAI,GAAG,CAAC;YACrF,OAAO,EAAE;QACb;QACA,MAAMC,OAAO,MAAMX,SAASY,IAAI;QAChC,6DAA6D;QAC7D,OAAOC,MAAMC,OAAO,CAACH,QAAQA,OACzB,AAACA,KAAKI,OAAO,IAAIF,MAAMC,OAAO,CAACH,KAAKA,IAAI,IAAKA,KAAKA,IAAI,GAClD,AAACE,MAAMC,OAAO,CAACH,KAAKM,QAAQ,IAAKN,KAAKM,QAAQ,GAC1C,EAAE;IAClB,EAAE,OAAOT,OAAO;QACZD,QAAQC,KAAK,CAAC,4BAA4BA;QAC1C,OAAO,EAAE;IACb;AACJ;AAEA,eAAeU,gBAAgBnB,OAAe;IAC1C,IAAI;QACA,MAAMC,WAAW,MAAMC,MAAM,CAAC,EAAEF,QAAQ,wBAAwB,CAAC,EAAE;YAC/DG,MAAM;gBAAEC,YAAY;YAAK;YACzBE,OAAO,cAAsB,2BAA2B;QAC5D;QACA,IAAI,CAACL,SAASM,EAAE,EAAE;YACdC,QAAQC,KAAK,CAAC,CAAC,4BAA4B,EAAER,SAASS,MAAM,CAAC,CAAC,EAAE,MAAMT,SAASU,IAAI,GAAG,CAAC;YACvF,OAAO,EAAE;QACb;QACA,MAAMC,OAAO,MAAMX,SAASY,IAAI;QAChC,OAAOC,MAAMC,OAAO,CAACH,QAAQA,OAAQA,KAAKI,OAAO,IAAIF,MAAMC,OAAO,CAACH,KAAKA,IAAI,IAAIA,KAAKA,IAAI,GAAG,EAAE;IAClG,EAAE,OAAOH,OAAO;QACZD,QAAQC,KAAK,CAAC,8BAA8BA;QAC5C,OAAO,EAAE;IACb;AACJ;AAEA,eAAeW,WAAWpB,OAAe;IACrC,IAAI;QACA,MAAMC,WAAW,MAAMC,MAAM,CAAC,EAAEF,QAAQ,UAAU,CAAC,EAAE;YACjDG,MAAM;gBAAEC,YAAY;YAAK;YACzBE,OAAO,cAAsB,2BAA2B;QAC5D;QACA,IAAI,CAACL,SAASM,EAAE,EAAE;YACdC,QAAQC,KAAK,CAAC,CAAC,uBAAuB,EAAER,SAASS,MAAM,CAAC,CAAC,EAAE,MAAMT,SAASU,IAAI,GAAG,CAAC;YAClF,OAAO,EAAE;QACb;QACA,MAAMC,OAAO,MAAMX,SAASY,IAAI;QAChC,OAAOC,MAAMC,OAAO,CAACH,QAAQA,OAAQA,KAAKI,OAAO,IAAIF,MAAMC,OAAO,CAACH,KAAKA,IAAI,IAAIA,KAAKA,IAAI,GAAG,EAAE;IAClG,EAAE,OAAOH,OAAO;QACZD,QAAQC,KAAK,CAAC,yBAAyBA;QACvC,OAAO,EAAE;IACb;AACJ;AAEe,eAAeZ;IAC1B,MAAMwB,cAAc,MAAMC,IAAAA,gBAAO;IACjC,MAAMC,OAAOF,YAAYG,GAAG,CAAC,WAAW;IACxC,MAAMC,WAAWC,QAAQC,GAAG,CAACC,QAAQ,KAAK,gBAAgB,SAAS;IACnE,MAAM5B,UAAU,CAAC,EAAEyB,SAAS,GAAG,EAAEF,KAAK,CAAC;IAEvC,MAAM,CAACM,WAAWX,UAAUY,YAAYC,MAAM,GAAG,MAAMC,QAAQC,GAAG,CAAC;QAC/DlC,eAAeC;QACfiB,cAAcjB;QACdmB,gBAAgBnB;QAChBoB,WAAWpB;KACd;IAED,qBACI,qBAACkC,mBAAU;kBACP,cAAA,sBAACC;YAAIC,WAAU;;8BACX,qBAACD;oBAAIC,WAAU;8BAKX,cAAA,qBAACC;wBAAGD,WAAU;kCAAmC;;;8BAErD,qBAACE,eAAQ;oBAACC,wBACN,sBAACJ;wBAAIC,WAAU;;0CACX,qBAACI,oBAAO;gCAACJ,WAAU;;0CACnB,qBAACK;gCAAEL,WAAU;0CAAqB;;;;8BAGtC,cAAA,qBAACM,+BAAsB;wBACnBC,kBAAkBd;wBAClBe,iBAAiB1B;wBACjB2B,mBAAmBf;wBACnBgB,cAAcf;;;;;;AAMtC"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2b43b0661f81a4dabb2fd3dfeb828ac7e951a0ee"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_txngypnvy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_txngypnvy();
cov_txngypnvy().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_txngypnvy().f[0]++;
  cov_txngypnvy().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_txngypnvy().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_txngypnvy().s[3]++;
_export(exports, {
  default: function () {
    /* istanbul ignore next */
    cov_txngypnvy().f[1]++;
    cov_txngypnvy().s[4]++;
    return NewPurchaseInvoicePage;
  },
  dynamic: function () {
    /* istanbul ignore next */
    cov_txngypnvy().f[2]++;
    cov_txngypnvy().s[5]++;
    return dynamic;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_txngypnvy().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_txngypnvy().s[7]++, require("react"));
const _headers =
/* istanbul ignore next */
(cov_txngypnvy().s[8]++, require("next/headers"));
const _MainLayout =
/* istanbul ignore next */
(/*#__PURE__*/cov_txngypnvy().s[9]++, _interop_require_default(require("../../../components/layout/MainLayout")));
const _NewPurchaseInvoiceForm =
/* istanbul ignore next */
(/*#__PURE__*/cov_txngypnvy().s[10]++, _interop_require_default(require("../../../components/purchases/NewPurchaseInvoiceForm")));
const _lucidereact =
/* istanbul ignore next */
(cov_txngypnvy().s[11]++, require("lucide-react"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_txngypnvy().f[3]++;
  cov_txngypnvy().s[12]++;
  return /* istanbul ignore next */(cov_txngypnvy().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_txngypnvy().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_txngypnvy().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_txngypnvy().b[0][1]++, {
    default: obj
  });
}
const dynamic =
/* istanbul ignore next */
(cov_txngypnvy().s[13]++, "force-dynamic");
async function fetchSuppliers(baseUrl) {
  /* istanbul ignore next */
  cov_txngypnvy().f[4]++;
  cov_txngypnvy().s[14]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_txngypnvy().s[15]++, await fetch(`${baseUrl}/api/suppliers`, {
      next: {
        revalidate: 60,
        tags: ["suppliers"]
      },
      cache: "force-cache" // Use cache when available
    }));
    /* istanbul ignore next */
    cov_txngypnvy().s[16]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_txngypnvy().b[2][0]++;
      cov_txngypnvy().s[17]++;
      console.error(`Failed to fetch suppliers: ${response.status} ${await response.text()}`);
      /* istanbul ignore next */
      cov_txngypnvy().s[18]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_txngypnvy().b[2][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_txngypnvy().s[19]++, await response.json());
    /* istanbul ignore next */
    cov_txngypnvy().s[20]++;
    return Array.isArray(data) ?
    /* istanbul ignore next */
    (cov_txngypnvy().b[3][0]++, data) :
    /* istanbul ignore next */
    (cov_txngypnvy().b[3][1]++,
    /* istanbul ignore next */
    (cov_txngypnvy().b[5][0]++, data.success) &&
    /* istanbul ignore next */
    (cov_txngypnvy().b[5][1]++, Array.isArray(data.data)) ?
    /* istanbul ignore next */
    (cov_txngypnvy().b[4][0]++, data.data) :
    /* istanbul ignore next */
    (cov_txngypnvy().b[4][1]++, []));
  } catch (error) {
    /* istanbul ignore next */
    cov_txngypnvy().s[21]++;
    console.error("Error fetching suppliers:", error);
    /* istanbul ignore next */
    cov_txngypnvy().s[22]++;
    return [];
  }
}
async function fetchProducts(baseUrl) {
  /* istanbul ignore next */
  cov_txngypnvy().f[5]++;
  cov_txngypnvy().s[23]++;
  try {
    // Use incremental static regeneration for products with a 30-second cache
    const response =
    /* istanbul ignore next */
    (cov_txngypnvy().s[24]++, await fetch(`${baseUrl}/api/products`, {
      next: {
        revalidate: 30
      } // Cache for 30 seconds
    }));
    /* istanbul ignore next */
    cov_txngypnvy().s[25]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_txngypnvy().b[6][0]++;
      cov_txngypnvy().s[26]++;
      console.error(`Failed to fetch products: ${response.status} ${await response.text()}`);
      /* istanbul ignore next */
      cov_txngypnvy().s[27]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_txngypnvy().b[6][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_txngypnvy().s[28]++, await response.json());
    // Adjust based on actual API response structure for products
    /* istanbul ignore next */
    cov_txngypnvy().s[29]++;
    return Array.isArray(data) ?
    /* istanbul ignore next */
    (cov_txngypnvy().b[7][0]++, data) :
    /* istanbul ignore next */
    (cov_txngypnvy().b[7][1]++,
    /* istanbul ignore next */
    (cov_txngypnvy().b[9][0]++, data.success) &&
    /* istanbul ignore next */
    (cov_txngypnvy().b[9][1]++, Array.isArray(data.data)) ?
    /* istanbul ignore next */
    (cov_txngypnvy().b[8][0]++, data.data) :
    /* istanbul ignore next */
    (cov_txngypnvy().b[8][1]++, Array.isArray(data.products) ?
    /* istanbul ignore next */
    (cov_txngypnvy().b[10][0]++, data.products) :
    /* istanbul ignore next */
    (cov_txngypnvy().b[10][1]++, [])));
  } catch (error) {
    /* istanbul ignore next */
    cov_txngypnvy().s[30]++;
    console.error("Error fetching products:", error);
    /* istanbul ignore next */
    cov_txngypnvy().s[31]++;
    return [];
  }
}
async function fetchCategories(baseUrl) {
  /* istanbul ignore next */
  cov_txngypnvy().f[6]++;
  cov_txngypnvy().s[32]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_txngypnvy().s[33]++, await fetch(`${baseUrl}/api/products/categories`, {
      next: {
        revalidate: 3600
      },
      cache: "force-cache" // Use cache when available
    }));
    /* istanbul ignore next */
    cov_txngypnvy().s[34]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_txngypnvy().b[11][0]++;
      cov_txngypnvy().s[35]++;
      console.error(`Failed to fetch categories: ${response.status} ${await response.text()}`);
      /* istanbul ignore next */
      cov_txngypnvy().s[36]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_txngypnvy().b[11][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_txngypnvy().s[37]++, await response.json());
    /* istanbul ignore next */
    cov_txngypnvy().s[38]++;
    return Array.isArray(data) ?
    /* istanbul ignore next */
    (cov_txngypnvy().b[12][0]++, data) :
    /* istanbul ignore next */
    (cov_txngypnvy().b[12][1]++,
    /* istanbul ignore next */
    (cov_txngypnvy().b[14][0]++, data.success) &&
    /* istanbul ignore next */
    (cov_txngypnvy().b[14][1]++, Array.isArray(data.data)) ?
    /* istanbul ignore next */
    (cov_txngypnvy().b[13][0]++, data.data) :
    /* istanbul ignore next */
    (cov_txngypnvy().b[13][1]++, []));
  } catch (error) {
    /* istanbul ignore next */
    cov_txngypnvy().s[39]++;
    console.error("Error fetching categories:", error);
    /* istanbul ignore next */
    cov_txngypnvy().s[40]++;
    return [];
  }
}
async function fetchShops(baseUrl) {
  /* istanbul ignore next */
  cov_txngypnvy().f[7]++;
  cov_txngypnvy().s[41]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_txngypnvy().s[42]++, await fetch(`${baseUrl}/api/shops`, {
      next: {
        revalidate: 3600
      },
      cache: "force-cache" // Use cache when available
    }));
    /* istanbul ignore next */
    cov_txngypnvy().s[43]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_txngypnvy().b[15][0]++;
      cov_txngypnvy().s[44]++;
      console.error(`Failed to fetch shops: ${response.status} ${await response.text()}`);
      /* istanbul ignore next */
      cov_txngypnvy().s[45]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_txngypnvy().b[15][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_txngypnvy().s[46]++, await response.json());
    /* istanbul ignore next */
    cov_txngypnvy().s[47]++;
    return Array.isArray(data) ?
    /* istanbul ignore next */
    (cov_txngypnvy().b[16][0]++, data) :
    /* istanbul ignore next */
    (cov_txngypnvy().b[16][1]++,
    /* istanbul ignore next */
    (cov_txngypnvy().b[18][0]++, data.success) &&
    /* istanbul ignore next */
    (cov_txngypnvy().b[18][1]++, Array.isArray(data.data)) ?
    /* istanbul ignore next */
    (cov_txngypnvy().b[17][0]++, data.data) :
    /* istanbul ignore next */
    (cov_txngypnvy().b[17][1]++, []));
  } catch (error) {
    /* istanbul ignore next */
    cov_txngypnvy().s[48]++;
    console.error("Error fetching shops:", error);
    /* istanbul ignore next */
    cov_txngypnvy().s[49]++;
    return [];
  }
}
async function NewPurchaseInvoicePage() {
  /* istanbul ignore next */
  cov_txngypnvy().f[8]++;
  const headersList =
  /* istanbul ignore next */
  (cov_txngypnvy().s[50]++, await (0, _headers.headers)());
  const host =
  /* istanbul ignore next */
  (cov_txngypnvy().s[51]++,
  /* istanbul ignore next */
  (cov_txngypnvy().b[19][0]++, headersList.get("host")) ||
  /* istanbul ignore next */
  (cov_txngypnvy().b[19][1]++, "localhost:3000"));
  const protocol =
  /* istanbul ignore next */
  (cov_txngypnvy().s[52]++, process.env.NODE_ENV === "development" ?
  /* istanbul ignore next */
  (cov_txngypnvy().b[20][0]++, "http") :
  /* istanbul ignore next */
  (cov_txngypnvy().b[20][1]++, "https"));
  const baseUrl =
  /* istanbul ignore next */
  (cov_txngypnvy().s[53]++, `${protocol}://${host}`);
  const [suppliers, products, categories, shops] =
  /* istanbul ignore next */
  (cov_txngypnvy().s[54]++, await Promise.all([fetchSuppliers(baseUrl), fetchProducts(baseUrl), fetchCategories(baseUrl), fetchShops(baseUrl)]));
  /* istanbul ignore next */
  cov_txngypnvy().s[55]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_MainLayout.default, {
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "container mx-auto px-4 py-8 max-w-5xl",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "flex items-center gap-3 mb-6 border-b pb-4",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
          className: "text-2xl font-bold text-gray-800",
          children: "Create New Purchase Invoice"
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_react.Suspense, {
        fallback: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex flex-col justify-center items-center h-64",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Loader2, {
            className: "h-12 w-12 animate-spin text-primary"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "mt-4 text-gray-600",
            children: "Loading form essentials..."
          })]
        }),
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_NewPurchaseInvoiceForm.default, {
          initialSuppliers: suppliers,
          initialProducts: products,
          initialCategories: categories,
          initialShops: shops
        })
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,