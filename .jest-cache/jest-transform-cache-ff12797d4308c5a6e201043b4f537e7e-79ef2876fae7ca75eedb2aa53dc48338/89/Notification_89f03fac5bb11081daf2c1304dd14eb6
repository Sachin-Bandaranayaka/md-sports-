e588b72d2ad140a30c1740a2331e889f
"use strict";

/* istanbul ignore next */
function cov_6ug5w8ylq() {
  var path = "/Users/sachin/Documents/md-sports-/src/lib/models/Notification.ts";
  var hash = "50ef9ff2fd0132b8fbd1394500ba379d2c012b06";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/lib/models/Notification.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 19
        },
        end: {
          line: 11,
          column: 39
        }
      },
      "4": {
        start: {
          line: 12,
          column: 26
        },
        end: {
          line: 12,
          column: 68
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "6": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 23,
          column: 11
        }
      },
      "7": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 62,
          column: 3
        }
      },
      "8": {
        start: {
          line: 63,
          column: 17
        },
        end: {
          line: 63,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 23
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 20
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 35
          },
          end: {
            line: 14,
            column: 38
          }
        }, {
          start: {
            line: 14,
            column: 41
          },
          end: {
            line: 16,
            column: 5
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 14
          }
        }, {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 14,
            column: 32
          }
        }],
        line: 14
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/lib/models/Notification.ts"],
      sourcesContent: ["import { Model, DataTypes } from 'sequelize';\nimport sequelize from '../db';\n\nclass Notification extends Model {\n    public id!: number;\n    public type!: string;\n    public message!: string;\n    public targetUserId!: string;\n    public isRead!: boolean;\n    public link!: string;\n    public readonly createdAt!: Date;\n\n    // Custom instance methods\n    public async markAsRead(): Promise<void> {\n        await this.update({ isRead: true });\n    }\n}\n\nNotification.init({\n    id: {\n        type: DataTypes.INTEGER,\n        autoIncrement: true,\n        primaryKey: true\n    },\n    type: {\n        type: DataTypes.STRING(50),\n        allowNull: false,\n        comment: 'Type of notification (e.g., inventory, invoice, system)'\n    },\n    message: {\n        type: DataTypes.TEXT,\n        allowNull: false\n    },\n    targetUserId: {\n        type: DataTypes.STRING,\n        allowNull: false,\n        comment: 'User who should receive this notification'\n    },\n    isRead: {\n        type: DataTypes.BOOLEAN,\n        allowNull: false,\n        defaultValue: false\n    },\n    link: {\n        type: DataTypes.STRING(255),\n        allowNull: true,\n        comment: 'Optional URL link related to the notification'\n    }\n}, {\n    sequelize,\n    modelName: 'notification',\n    tableName: 'notifications',\n    timestamps: true,\n    updatedAt: false\n});\n\nexport default Notification;"],
      names: ["Notification", "Model", "markAsRead", "update", "isRead", "init", "id", "type", "DataTypes", "INTEGER", "autoIncrement", "primaryKey", "STRING", "allowNull", "comment", "message", "TEXT", "targetUserId", "BOOLEAN", "defaultValue", "link", "sequelize", "modelName", "tableName", "timestamps", "updatedAt"],
      mappings: ";;;;+BAwDA;;;eAAA;;;2BAxDiC;2DACX;;;;;;AAEtB,MAAMA,qBAAqBC,gBAAK;IAS5B,0BAA0B;IAC1B,MAAaC,aAA4B;QACrC,MAAM,IAAI,CAACC,MAAM,CAAC;YAAEC,QAAQ;QAAK;IACrC;AACJ;AAEAJ,aAAaK,IAAI,CAAC;IACdC,IAAI;QACAC,MAAMC,oBAAS,CAACC,OAAO;QACvBC,eAAe;QACfC,YAAY;IAChB;IACAJ,MAAM;QACFA,MAAMC,oBAAS,CAACI,MAAM,CAAC;QACvBC,WAAW;QACXC,SAAS;IACb;IACAC,SAAS;QACLR,MAAMC,oBAAS,CAACQ,IAAI;QACpBH,WAAW;IACf;IACAI,cAAc;QACVV,MAAMC,oBAAS,CAACI,MAAM;QACtBC,WAAW;QACXC,SAAS;IACb;IACAV,QAAQ;QACJG,MAAMC,oBAAS,CAACU,OAAO;QACvBL,WAAW;QACXM,cAAc;IAClB;IACAC,MAAM;QACFb,MAAMC,oBAAS,CAACI,MAAM,CAAC;QACvBC,WAAW;QACXC,SAAS;IACb;AACJ,GAAG;IACCO,WAAAA,WAAS;IACTC,WAAW;IACXC,WAAW;IACXC,YAAY;IACZC,WAAW;AACf;MAEA,WAAezB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "50ef9ff2fd0132b8fbd1394500ba379d2c012b06"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_6ug5w8ylq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_6ug5w8ylq();
cov_6ug5w8ylq().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_6ug5w8ylq().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_6ug5w8ylq().f[0]++;
    cov_6ug5w8ylq().s[2]++;
    return _default;
  }
});
const _sequelize =
/* istanbul ignore next */
(cov_6ug5w8ylq().s[3]++, require("sequelize"));
const _db =
/* istanbul ignore next */
(/*#__PURE__*/cov_6ug5w8ylq().s[4]++, _interop_require_default(require("../db")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_6ug5w8ylq().f[1]++;
  cov_6ug5w8ylq().s[5]++;
  return /* istanbul ignore next */(cov_6ug5w8ylq().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_6ug5w8ylq().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_6ug5w8ylq().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_6ug5w8ylq().b[0][1]++, {
    default: obj
  });
}
class Notification extends
/* istanbul ignore next */
(_sequelize.Model) {
  // Custom instance methods
  async markAsRead() {
    /* istanbul ignore next */
    cov_6ug5w8ylq().f[2]++;
    cov_6ug5w8ylq().s[6]++;
    await this.update({
      isRead: true
    });
  }
}
/* istanbul ignore next */
cov_6ug5w8ylq().s[7]++;
Notification.init({
  id: {
    type: _sequelize.DataTypes.INTEGER,
    autoIncrement: true,
    primaryKey: true
  },
  type: {
    type: _sequelize.DataTypes.STRING(50),
    allowNull: false,
    comment: "Type of notification (e.g., inventory, invoice, system)"
  },
  message: {
    type: _sequelize.DataTypes.TEXT,
    allowNull: false
  },
  targetUserId: {
    type: _sequelize.DataTypes.STRING,
    allowNull: false,
    comment: "User who should receive this notification"
  },
  isRead: {
    type: _sequelize.DataTypes.BOOLEAN,
    allowNull: false,
    defaultValue: false
  },
  link: {
    type: _sequelize.DataTypes.STRING(255),
    allowNull: true,
    comment: "Optional URL link related to the notification"
  }
}, {
  sequelize: _db.default,
  modelName: "notification",
  tableName: "notifications",
  timestamps: true,
  updatedAt: false
});
const _default =
/* istanbul ignore next */
(cov_6ug5w8ylq().s[8]++, Notification);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGVmYXVsdCIsIk5vdGlmaWNhdGlvbiIsIl9zZXF1ZWxpemUiLCJNb2RlbCIsIm1hcmtBc1JlYWQiLCJjb3ZfNnVnNXc4eWxxIiwiZiIsInMiLCJ1cGRhdGUiLCJpc1JlYWQiLCJpbml0IiwiaWQiLCJ0eXBlIiwiRGF0YVR5cGVzIiwiSU5URUdFUiIsImF1dG9JbmNyZW1lbnQiLCJwcmltYXJ5S2V5IiwiU1RSSU5HIiwiYWxsb3dOdWxsIiwiY29tbWVudCIsIm1lc3NhZ2UiLCJURVhUIiwidGFyZ2V0VXNlcklkIiwiQk9PTEVBTiIsImRlZmF1bHRWYWx1ZSIsImxpbmsiLCJzZXF1ZWxpemUiLCJfZGIiLCJkZWZhdWx0IiwibW9kZWxOYW1lIiwidGFibGVOYW1lIiwidGltZXN0YW1wcyIsInVwZGF0ZWRBdCJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWNoaW4vRG9jdW1lbnRzL21kLXNwb3J0cy0vc3JjL2xpYi9tb2RlbHMvTm90aWZpY2F0aW9uLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZGVsLCBEYXRhVHlwZXMgfSBmcm9tICdzZXF1ZWxpemUnO1xuaW1wb3J0IHNlcXVlbGl6ZSBmcm9tICcuLi9kYic7XG5cbmNsYXNzIE5vdGlmaWNhdGlvbiBleHRlbmRzIE1vZGVsIHtcbiAgICBwdWJsaWMgaWQhOiBudW1iZXI7XG4gICAgcHVibGljIHR5cGUhOiBzdHJpbmc7XG4gICAgcHVibGljIG1lc3NhZ2UhOiBzdHJpbmc7XG4gICAgcHVibGljIHRhcmdldFVzZXJJZCE6IHN0cmluZztcbiAgICBwdWJsaWMgaXNSZWFkITogYm9vbGVhbjtcbiAgICBwdWJsaWMgbGluayE6IHN0cmluZztcbiAgICBwdWJsaWMgcmVhZG9ubHkgY3JlYXRlZEF0ITogRGF0ZTtcblxuICAgIC8vIEN1c3RvbSBpbnN0YW5jZSBtZXRob2RzXG4gICAgcHVibGljIGFzeW5jIG1hcmtBc1JlYWQoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgICAgIGF3YWl0IHRoaXMudXBkYXRlKHsgaXNSZWFkOiB0cnVlIH0pO1xuICAgIH1cbn1cblxuTm90aWZpY2F0aW9uLmluaXQoe1xuICAgIGlkOiB7XG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSLFxuICAgICAgICBhdXRvSW5jcmVtZW50OiB0cnVlLFxuICAgICAgICBwcmltYXJ5S2V5OiB0cnVlXG4gICAgfSxcbiAgICB0eXBlOiB7XG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcoNTApLFxuICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgICBjb21tZW50OiAnVHlwZSBvZiBub3RpZmljYXRpb24gKGUuZy4sIGludmVudG9yeSwgaW52b2ljZSwgc3lzdGVtKSdcbiAgICB9LFxuICAgIG1lc3NhZ2U6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLlRFWFQsXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2VcbiAgICB9LFxuICAgIHRhcmdldFVzZXJJZDoge1xuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgICBjb21tZW50OiAnVXNlciB3aG8gc2hvdWxkIHJlY2VpdmUgdGhpcyBub3RpZmljYXRpb24nXG4gICAgfSxcbiAgICBpc1JlYWQ6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLkJPT0xFQU4sXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogZmFsc2VcbiAgICB9LFxuICAgIGxpbms6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORygyNTUpLFxuICAgICAgICBhbGxvd051bGw6IHRydWUsXG4gICAgICAgIGNvbW1lbnQ6ICdPcHRpb25hbCBVUkwgbGluayByZWxhdGVkIHRvIHRoZSBub3RpZmljYXRpb24nXG4gICAgfVxufSwge1xuICAgIHNlcXVlbGl6ZSxcbiAgICBtb2RlbE5hbWU6ICdub3RpZmljYXRpb24nLFxuICAgIHRhYmxlTmFtZTogJ25vdGlmaWNhdGlvbnMnLFxuICAgIHRpbWVzdGFtcHM6IHRydWUsXG4gICAgdXBkYXRlZEF0OiBmYWxzZVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IE5vdGlmaWNhdGlvbjsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrQkF3REE7Ozs7OztXQUFBQSxRQUFBOzs7OztpQ0F4RGlDOzs7dUVBQ1g7Ozs7Ozs7Ozs7Ozs7OztBQUV0QixNQUFNQyxZQUFBO0FBQUE7QUFBQSxDQUFxQkMsVUFBQSxDQUFBQyxLQUFLO0VBUzVCO0VBQ0EsTUFBYUMsV0FBQSxFQUE0QjtJQUFBO0lBQUFDLGFBQUEsR0FBQUMsQ0FBQTtJQUFBRCxhQUFBLEdBQUFFLENBQUE7SUFDckMsTUFBTSxJQUFJLENBQUNDLE1BQU0sQ0FBQztNQUFFQyxNQUFBLEVBQVE7SUFBSztFQUNyQztBQUNKO0FBQUE7QUFBQUosYUFBQSxHQUFBRSxDQUFBO0FBRUFOLFlBQUEsQ0FBYVMsSUFBSSxDQUFDO0VBQ2RDLEVBQUEsRUFBSTtJQUNBQyxJQUFBLEVBQU1WLFVBQUEsQ0FBQVcsU0FBUyxDQUFDQyxPQUFPO0lBQ3ZCQyxhQUFBLEVBQWU7SUFDZkMsVUFBQSxFQUFZO0VBQ2hCO0VBQ0FKLElBQUEsRUFBTTtJQUNGQSxJQUFBLEVBQU1WLFVBQUEsQ0FBQVcsU0FBUyxDQUFDSSxNQUFNLENBQUM7SUFDdkJDLFNBQUEsRUFBVztJQUNYQyxPQUFBLEVBQVM7RUFDYjtFQUNBQyxPQUFBLEVBQVM7SUFDTFIsSUFBQSxFQUFNVixVQUFBLENBQUFXLFNBQVMsQ0FBQ1EsSUFBSTtJQUNwQkgsU0FBQSxFQUFXO0VBQ2Y7RUFDQUksWUFBQSxFQUFjO0lBQ1ZWLElBQUEsRUFBTVYsVUFBQSxDQUFBVyxTQUFTLENBQUNJLE1BQU07SUFDdEJDLFNBQUEsRUFBVztJQUNYQyxPQUFBLEVBQVM7RUFDYjtFQUNBVixNQUFBLEVBQVE7SUFDSkcsSUFBQSxFQUFNVixVQUFBLENBQUFXLFNBQVMsQ0FBQ1UsT0FBTztJQUN2QkwsU0FBQSxFQUFXO0lBQ1hNLFlBQUEsRUFBYztFQUNsQjtFQUNBQyxJQUFBLEVBQU07SUFDRmIsSUFBQSxFQUFNVixVQUFBLENBQUFXLFNBQVMsQ0FBQ0ksTUFBTSxDQUFDO0lBQ3ZCQyxTQUFBLEVBQVc7SUFDWEMsT0FBQSxFQUFTO0VBQ2I7QUFDSixHQUFHO0VBQ0NPLFNBQUEsRUFBQUMsR0FBQSxDQUFBQyxPQUFTO0VBQ1RDLFNBQUEsRUFBVztFQUNYQyxTQUFBLEVBQVc7RUFDWEMsVUFBQSxFQUFZO0VBQ1pDLFNBQUEsRUFBVztBQUNmO01BRUFoQyxRQUFBO0FBQUE7QUFBQSxDQUFBSyxhQUFBLEdBQUFFLENBQUEsT0FBZU4sWUFBQSIsImlnbm9yZUxpc3QiOltdfQ==