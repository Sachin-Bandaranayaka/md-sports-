{"version":3,"sources":["/Users/sachin/Documents/md-sports-/jest.setup.js"],"sourcesContent":["// jest-dom adds custom jest matchers for asserting on DOM nodes.\nimport '@testing-library/jest-dom';\nimport { cleanupCache } from './src/lib/cache';\n\n// Set up environment variables for testing\nprocess.env.JWT_SECRET = 'test-secret-key';\nprocess.env.JWT_ACCESS_TOKEN_EXPIRES_IN = '12h';\nprocess.env.NEXTAUTH_SECRET = 'test-nextauth-secret';\nprocess.env.NODE_ENV = 'test';\nprocess.env.DATABASE_URL = 'postgresql://test:test@localhost:5432/test';\n\n// Mock Prisma client for testing\njest.mock('@/lib/prisma', () => ({\n  prisma: {\n    user: {\n      findMany: jest.fn(),\n      findUnique: jest.fn(),\n      create: jest.fn(),\n      update: jest.fn(),\n      delete: jest.fn()\n    },\n    product: {\n      findMany: jest.fn(),\n      findUnique: jest.fn(),\n      create: jest.fn(),\n      update: jest.fn(),\n      delete: jest.fn()\n    },\n    auditLog: {\n      findMany: jest.fn(),\n      findUnique: jest.fn(),\n      create: jest.fn(),\n      update: jest.fn(),\n      delete: jest.fn()\n    },\n    refreshToken: {\n      findMany: jest.fn(),\n      findUnique: jest.fn(),\n      create: jest.fn(),\n      update: jest.fn(),\n      delete: jest.fn()\n    }\n  }\n}));\n\n// Mock Sequelize models for testing\njest.mock('@/lib/models', () => ({\n  Product: {\n    findAll: jest.fn(),\n    findByPk: jest.fn(),\n    create: jest.fn(),\n    update: jest.fn(),\n    destroy: jest.fn()\n  },\n  User: {\n    findAll: jest.fn(),\n    findByPk: jest.fn(),\n    create: jest.fn(),\n    update: jest.fn(),\n    destroy: jest.fn()\n  },\n  Customer: {\n    findAll: jest.fn(),\n    findByPk: jest.fn(),\n    create: jest.fn(),\n    update: jest.fn(),\n    destroy: jest.fn()\n  },\n  Invoice: {\n    findAll: jest.fn(),\n    findByPk: jest.fn(),\n    create: jest.fn(),\n    update: jest.fn(),\n    destroy: jest.fn()\n  },\n  AuditLog: {\n    findAll: jest.fn(),\n    findByPk: jest.fn(),\n    create: jest.fn(),\n    update: jest.fn(),\n    destroy: jest.fn()\n  }\n}));\n\n// Mock IntersectionObserver\nglobal.IntersectionObserver = class IntersectionObserver {\n  constructor() {}\n  disconnect() {}\n  observe() {}\n  unobserve() {}\n};\n\n// Mock ResizeObserver\nglobal.ResizeObserver = class ResizeObserver {\n  constructor() {}\n  disconnect() {}\n  observe() {}\n  unobserve() {}\n};\n\n// Mock window.matchMedia\nif (typeof window !== 'undefined') {\n  Object.defineProperty(window, 'matchMedia', {\n    writable: true,\n    value: jest.fn().mockImplementation(query => ({\n      matches: false,\n      media: query,\n      onchange: null,\n      addListener: jest.fn(), // deprecated\n      removeListener: jest.fn(), // deprecated\n      addEventListener: jest.fn(),\n      removeEventListener: jest.fn(),\n      dispatchEvent: jest.fn(),\n    })),\n  });\n}\n\n// Clean up cache after all tests\nafterAll(() => {\n  cleanupCache();\n});"],"names":["jest","mock","prisma","user","findMany","fn","findUnique","create","update","delete","product","auditLog","refreshToken","Product","findAll","findByPk","destroy","User","Customer","Invoice","AuditLog","process","env","JWT_SECRET","JWT_ACCESS_TOKEN_EXPIRES_IN","NEXTAUTH_SECRET","NODE_ENV","DATABASE_URL","global","IntersectionObserver","constructor","disconnect","observe","unobserve","ResizeObserver","window","Object","defineProperty","writable","value","mockImplementation","query","matches","media","onchange","addListener","removeListener","addEventListener","removeEventListener","dispatchEvent","afterAll","cleanupCache"],"mappings":"AAAA,iEAAiE;;AAWjE,iCAAiC;AACjCA,KAAKC,IAAI,CAAC,gBAAgB,IAAO,CAAA;QAC/BC,QAAQ;YACNC,MAAM;gBACJC,UAAUJ,KAAKK,EAAE;gBACjBC,YAAYN,KAAKK,EAAE;gBACnBE,QAAQP,KAAKK,EAAE;gBACfG,QAAQR,KAAKK,EAAE;gBACfI,QAAQT,KAAKK,EAAE;YACjB;YACAK,SAAS;gBACPN,UAAUJ,KAAKK,EAAE;gBACjBC,YAAYN,KAAKK,EAAE;gBACnBE,QAAQP,KAAKK,EAAE;gBACfG,QAAQR,KAAKK,EAAE;gBACfI,QAAQT,KAAKK,EAAE;YACjB;YACAM,UAAU;gBACRP,UAAUJ,KAAKK,EAAE;gBACjBC,YAAYN,KAAKK,EAAE;gBACnBE,QAAQP,KAAKK,EAAE;gBACfG,QAAQR,KAAKK,EAAE;gBACfI,QAAQT,KAAKK,EAAE;YACjB;YACAO,cAAc;gBACZR,UAAUJ,KAAKK,EAAE;gBACjBC,YAAYN,KAAKK,EAAE;gBACnBE,QAAQP,KAAKK,EAAE;gBACfG,QAAQR,KAAKK,EAAE;gBACfI,QAAQT,KAAKK,EAAE;YACjB;QACF;IACF,CAAA;AAEA,oCAAoC;AACpCL,KAAKC,IAAI,CAAC,gBAAgB,IAAO,CAAA;QAC/BY,SAAS;YACPC,SAASd,KAAKK,EAAE;YAChBU,UAAUf,KAAKK,EAAE;YACjBE,QAAQP,KAAKK,EAAE;YACfG,QAAQR,KAAKK,EAAE;YACfW,SAAShB,KAAKK,EAAE;QAClB;QACAY,MAAM;YACJH,SAASd,KAAKK,EAAE;YAChBU,UAAUf,KAAKK,EAAE;YACjBE,QAAQP,KAAKK,EAAE;YACfG,QAAQR,KAAKK,EAAE;YACfW,SAAShB,KAAKK,EAAE;QAClB;QACAa,UAAU;YACRJ,SAASd,KAAKK,EAAE;YAChBU,UAAUf,KAAKK,EAAE;YACjBE,QAAQP,KAAKK,EAAE;YACfG,QAAQR,KAAKK,EAAE;YACfW,SAAShB,KAAKK,EAAE;QAClB;QACAc,SAAS;YACPL,SAASd,KAAKK,EAAE;YAChBU,UAAUf,KAAKK,EAAE;YACjBE,QAAQP,KAAKK,EAAE;YACfG,QAAQR,KAAKK,EAAE;YACfW,SAAShB,KAAKK,EAAE;QAClB;QACAe,UAAU;YACRN,SAASd,KAAKK,EAAE;YAChBU,UAAUf,KAAKK,EAAE;YACjBE,QAAQP,KAAKK,EAAE;YACfG,QAAQR,KAAKK,EAAE;YACfW,SAAShB,KAAKK,EAAE;QAClB;IACF,CAAA;;;;QAjFO;uBACsB;AAE7B,2CAA2C;AAC3CgB,QAAQC,GAAG,CAACC,UAAU,GAAG;AACzBF,QAAQC,GAAG,CAACE,2BAA2B,GAAG;AAC1CH,QAAQC,GAAG,CAACG,eAAe,GAAG;AAC9BJ,QAAQC,GAAG,CAACI,QAAQ,GAAG;AACvBL,QAAQC,GAAG,CAACK,YAAY,GAAG;AA2E3B,4BAA4B;AAC5BC,OAAOC,oBAAoB,GAAG,MAAMA;IAClCC,aAAc,CAAC;IACfC,aAAa,CAAC;IACdC,UAAU,CAAC;IACXC,YAAY,CAAC;AACf;AAEA,sBAAsB;AACtBL,OAAOM,cAAc,GAAG,MAAMA;IAC5BJ,aAAc,CAAC;IACfC,aAAa,CAAC;IACdC,UAAU,CAAC;IACXC,YAAY,CAAC;AACf;AAEA,yBAAyB;AACzB,IAAI,OAAOE,WAAW,aAAa;IACjCC,OAAOC,cAAc,CAACF,QAAQ,cAAc;QAC1CG,UAAU;QACVC,OAAOvC,KAAKK,EAAE,GAAGmC,kBAAkB,CAACC,CAAAA,QAAU,CAAA;gBAC5CC,SAAS;gBACTC,OAAOF;gBACPG,UAAU;gBACVC,aAAa7C,KAAKK,EAAE;gBACpByC,gBAAgB9C,KAAKK,EAAE;gBACvB0C,kBAAkB/C,KAAKK,EAAE;gBACzB2C,qBAAqBhD,KAAKK,EAAE;gBAC5B4C,eAAejD,KAAKK,EAAE;YACxB,CAAA;IACF;AACF;AAEA,iCAAiC;AACjC6C,SAAS;IACPC,IAAAA,mBAAY;AACd"}