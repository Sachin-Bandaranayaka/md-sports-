83a0525702f77e7c83731e42cc8508fe
/**
 * Real-time updates API for Vercel serverless deployment
 * Replaces Socket.IO with polling-based approach
 */"use strict";

/* istanbul ignore next */
function cov_200eng09pa() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/realtime/route.ts";
  var hash = "fb5c10949773772ebe7d5c2659a988197e68fc1b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/realtime/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 30,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 19
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 20
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 23
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 27
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 23
        }
      },
      "9": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 38
        }
      },
      "10": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 46
        }
      },
      "11": {
        start: {
          line: 33,
          column: 21
        },
        end: {
          line: 33,
          column: 57
        }
      },
      "12": {
        start: {
          line: 34,
          column: 14
        },
        end: {
          line: 34,
          column: 42
        }
      },
      "13": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 24
        }
      },
      "14": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 31
        }
      },
      "15": {
        start: {
          line: 37,
          column: 20
        },
        end: {
          line: 37,
          column: 22
        }
      },
      "16": {
        start: {
          line: 39,
          column: 28
        },
        end: {
          line: 43,
          column: 1
        }
      },
      "17": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 157,
          column: 5
        }
      },
      "18": {
        start: {
          line: 47,
          column: 23
        },
        end: {
          line: 47,
          column: 67
        }
      },
      "19": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "20": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 53,
          column: 15
        }
      },
      "21": {
        start: {
          line: 56,
          column: 20
        },
        end: {
          line: 56,
          column: 40
        }
      },
      "22": {
        start: {
          line: 57,
          column: 22
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "23": {
        start: {
          line: 65,
          column: 31
        },
        end: {
          line: 65,
          column: 36
        }
      },
      "24": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "25": {
        start: {
          line: 67,
          column: 37
        },
        end: {
          line: 67,
          column: 39
        }
      },
      "26": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "27": {
        start: {
          line: 70,
          column: 20
        },
        end: {
          line: 70,
          column: 58
        }
      },
      "28": {
        start: {
          line: 71,
          column: 20
        },
        end: {
          line: 71,
          column: 26
        }
      },
      "29": {
        start: {
          line: 74,
          column: 20
        },
        end: {
          line: 74,
          column: 54
        }
      },
      "30": {
        start: {
          line: 75,
          column: 20
        },
        end: {
          line: 75,
          column: 26
        }
      },
      "31": {
        start: {
          line: 77,
          column: 20
        },
        end: {
          line: 77,
          column: 58
        }
      },
      "32": {
        start: {
          line: 78,
          column: 20
        },
        end: {
          line: 78,
          column: 26
        }
      },
      "33": {
        start: {
          line: 80,
          column: 20
        },
        end: {
          line: 80,
          column: 58
        }
      },
      "34": {
        start: {
          line: 81,
          column: 20
        },
        end: {
          line: 81,
          column: 26
        }
      },
      "35": {
        start: {
          line: 83,
          column: 20
        },
        end: {
          line: 83,
          column: 58
        }
      },
      "36": {
        start: {
          line: 84,
          column: 20
        },
        end: {
          line: 84,
          column: 26
        }
      },
      "37": {
        start: {
          line: 86,
          column: 20
        },
        end: {
          line: 86,
          column: 58
        }
      },
      "38": {
        start: {
          line: 87,
          column: 20
        },
        end: {
          line: 87,
          column: 26
        }
      },
      "39": {
        start: {
          line: 89,
          column: 20
        },
        end: {
          line: 89,
          column: 29
        }
      },
      "40": {
        start: {
          line: 91,
          column: 34
        },
        end: {
          line: 91,
          column: 103
        }
      },
      "41": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 95,
          column: 13
        }
      },
      "42": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 40
        }
      },
      "43": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 22
        }
      },
      "44": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "45": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 102,
          column: 15
        }
      },
      "46": {
        start: {
          line: 104,
          column: 23
        },
        end: {
          line: 104,
          column: 67
        }
      },
      "47": {
        start: {
          line: 105,
          column: 25
        },
        end: {
          line: 105,
          column: 57
        }
      },
      "48": {
        start: {
          line: 106,
          column: 22
        },
        end: {
          line: 106,
          column: 72
        }
      },
      "49": {
        start: {
          line: 107,
          column: 24
        },
        end: {
          line: 107,
          column: 26
        }
      },
      "50": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "51": {
        start: {
          line: 110,
          column: 37
        },
        end: {
          line: 110,
          column: 77
        }
      },
      "52": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 46
        }
      },
      "53": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "54": {
        start: {
          line: 115,
          column: 35
        },
        end: {
          line: 115,
          column: 73
        }
      },
      "55": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 44
        }
      },
      "56": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "57": {
        start: {
          line: 120,
          column: 36
        },
        end: {
          line: 120,
          column: 82
        }
      },
      "58": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 45
        }
      },
      "59": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "60": {
        start: {
          line: 125,
          column: 36
        },
        end: {
          line: 125,
          column: 75
        }
      },
      "61": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 45
        }
      },
      "62": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "63": {
        start: {
          line: 130,
          column: 34
        },
        end: {
          line: 130,
          column: 71
        }
      },
      "64": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 43
        }
      },
      "65": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "66": {
        start: {
          line: 135,
          column: 36
        },
        end: {
          line: 135,
          column: 67
        }
      },
      "67": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 45
        }
      },
      "68": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 56
        }
      },
      "69": {
        start: {
          line: 139,
          column: 29
        },
        end: {
          line: 139,
          column: 54
        }
      },
      "70": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 149,
          column: 11
        }
      },
      "71": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 52
        }
      },
      "72": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 156,
          column: 11
        }
      },
      "73": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 196,
          column: 5
        }
      },
      "74": {
        start: {
          line: 161,
          column: 30
        },
        end: {
          line: 161,
          column: 88
        }
      },
      "75": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "76": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 167,
          column: 15
        }
      },
      "77": {
        start: {
          line: 169,
          column: 21
        },
        end: {
          line: 169,
          column: 41
        }
      },
      "78": {
        start: {
          line: 170,
          column: 39
        },
        end: {
          line: 170,
          column: 43
        }
      },
      "79": {
        start: {
          line: 171,
          column: 23
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "80": {
        start: {
          line: 178,
          column: 25
        },
        end: {
          line: 178,
          column: 79
        }
      },
      "81": {
        start: {
          line: 179,
          column: 32
        },
        end: {
          line: 179,
          column: 76
        }
      },
      "82": {
        start: {
          line: 181,
          column: 28
        },
        end: {
          line: 184,
          column: 23
        }
      },
      "83": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 65
        }
      },
      "84": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 188,
          column: 11
        }
      },
      "85": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 56
        }
      },
      "86": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 195,
          column: 11
        }
      },
      "87": {
        start: {
          line: 200,
          column: 4
        },
        end: {
          line: 238,
          column: 5
        }
      },
      "88": {
        start: {
          line: 201,
          column: 28
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "89": {
        start: {
          line: 209,
          column: 25
        },
        end: {
          line: 223,
          column: 10
        }
      },
      "90": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 234,
          column: 16
        }
      },
      "91": {
        start: {
          line: 224,
          column: 40
        },
        end: {
          line: 234,
          column: 13
        }
      },
      "92": {
        start: {
          line: 229,
          column: 75
        },
        end: {
          line: 229,
          column: 96
        }
      },
      "93": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 66
        }
      },
      "94": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 18
        }
      },
      "95": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 277,
          column: 5
        }
      },
      "96": {
        start: {
          line: 242,
          column: 28
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "97": {
        start: {
          line: 250,
          column: 25
        },
        end: {
          line: 261,
          column: 10
        }
      },
      "98": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 273,
          column: 16
        }
      },
      "99": {
        start: {
          line: 262,
          column: 40
        },
        end: {
          line: 273,
          column: 13
        }
      },
      "100": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 275,
          column: 64
        }
      },
      "101": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 18
        }
      },
      "102": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 322,
          column: 5
        }
      },
      "103": {
        start: {
          line: 281,
          column: 28
        },
        end: {
          line: 295,
          column: 9
        }
      },
      "104": {
        start: {
          line: 296,
          column: 26
        },
        end: {
          line: 306,
          column: 10
        }
      },
      "105": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 318,
          column: 16
        }
      },
      "106": {
        start: {
          line: 307,
          column: 42
        },
        end: {
          line: 318,
          column: 13
        }
      },
      "107": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 320,
          column: 65
        }
      },
      "108": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 321,
          column: 18
        }
      },
      "109": {
        start: {
          line: 325,
          column: 4
        },
        end: {
          line: 380,
          column: 5
        }
      },
      "110": {
        start: {
          line: 326,
          column: 28
        },
        end: {
          line: 342,
          column: 9
        }
      },
      "111": {
        start: {
          line: 343,
          column: 33
        },
        end: {
          line: 363,
          column: 10
        }
      },
      "112": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 376,
          column: 16
        }
      },
      "113": {
        start: {
          line: 364,
          column: 48
        },
        end: {
          line: 376,
          column: 13
        }
      },
      "114": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 378,
          column: 73
        }
      },
      "115": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 379,
          column: 18
        }
      },
      "116": {
        start: {
          line: 383,
          column: 4
        },
        end: {
          line: 416,
          column: 5
        }
      },
      "117": {
        start: {
          line: 384,
          column: 30
        },
        end: {
          line: 400,
          column: 10
        }
      },
      "118": {
        start: {
          line: 401,
          column: 8
        },
        end: {
          line: 412,
          column: 16
        }
      },
      "119": {
        start: {
          line: 401,
          column: 50
        },
        end: {
          line: 412,
          column: 13
        }
      },
      "120": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 414,
          column: 62
        }
      },
      "121": {
        start: {
          line: 415,
          column: 8
        },
        end: {
          line: 415,
          column: 18
        }
      },
      "122": {
        start: {
          line: 419,
          column: 4
        },
        end: {
          line: 462,
          column: 5
        }
      },
      "123": {
        start: {
          line: 420,
          column: 26
        },
        end: {
          line: 447,
          column: 10
        }
      },
      "124": {
        start: {
          line: 448,
          column: 8
        },
        end: {
          line: 458,
          column: 16
        }
      },
      "125": {
        start: {
          line: 448,
          column: 42
        },
        end: {
          line: 458,
          column: 13
        }
      },
      "126": {
        start: {
          line: 460,
          column: 8
        },
        end: {
          line: 460,
          column: 62
        }
      },
      "127": {
        start: {
          line: 461,
          column: 8
        },
        end: {
          line: 461,
          column: 18
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 10
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 10
          },
          end: {
            line: 18,
            column: 11
          }
        },
        loc: {
          start: {
            line: 18,
            column: 21
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 13
          },
          end: {
            line: 21,
            column: 14
          }
        },
        loc: {
          start: {
            line: 21,
            column: 24
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 17
          },
          end: {
            line: 24,
            column: 18
          }
        },
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 13
          },
          end: {
            line: 27,
            column: 14
          }
        },
        loc: {
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "6": {
        name: "GET",
        decl: {
          start: {
            line: 44,
            column: 15
          },
          end: {
            line: 44,
            column: 18
          }
        },
        loc: {
          start: {
            line: 44,
            column: 28
          },
          end: {
            line: 158,
            column: 1
          }
        },
        line: 44
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 139,
            column: 21
          },
          end: {
            line: 139,
            column: 22
          }
        },
        loc: {
          start: {
            line: 139,
            column: 29
          },
          end: {
            line: 139,
            column: 54
          }
        },
        line: 139
      },
      "8": {
        name: "POST",
        decl: {
          start: {
            line: 159,
            column: 15
          },
          end: {
            line: 159,
            column: 19
          }
        },
        loc: {
          start: {
            line: 159,
            column: 29
          },
          end: {
            line: 197,
            column: 1
          }
        },
        line: 159
      },
      "9": {
        name: "getInventoryUpdates",
        decl: {
          start: {
            line: 199,
            column: 15
          },
          end: {
            line: 199,
            column: 34
          }
        },
        loc: {
          start: {
            line: 199,
            column: 50
          },
          end: {
            line: 239,
            column: 1
          }
        },
        line: 199
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 224,
            column: 28
          },
          end: {
            line: 224,
            column: 29
          }
        },
        loc: {
          start: {
            line: 224,
            column: 40
          },
          end: {
            line: 234,
            column: 13
          }
        },
        line: 224
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 229,
            column: 60
          },
          end: {
            line: 229,
            column: 61
          }
        },
        loc: {
          start: {
            line: 229,
            column: 75
          },
          end: {
            line: 229,
            column: 96
          }
        },
        line: 229
      },
      "12": {
        name: "getInvoiceUpdates",
        decl: {
          start: {
            line: 240,
            column: 15
          },
          end: {
            line: 240,
            column: 32
          }
        },
        loc: {
          start: {
            line: 240,
            column: 48
          },
          end: {
            line: 278,
            column: 1
          }
        },
        line: 240
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 262,
            column: 28
          },
          end: {
            line: 262,
            column: 29
          }
        },
        loc: {
          start: {
            line: 262,
            column: 40
          },
          end: {
            line: 273,
            column: 13
          }
        },
        line: 262
      },
      "14": {
        name: "getTransferUpdates",
        decl: {
          start: {
            line: 279,
            column: 15
          },
          end: {
            line: 279,
            column: 33
          }
        },
        loc: {
          start: {
            line: 279,
            column: 49
          },
          end: {
            line: 323,
            column: 1
          }
        },
        line: 279
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 307,
            column: 29
          },
          end: {
            line: 307,
            column: 30
          }
        },
        loc: {
          start: {
            line: 307,
            column: 42
          },
          end: {
            line: 318,
            column: 13
          }
        },
        line: 307
      },
      "16": {
        name: "getPurchaseInvoiceUpdates",
        decl: {
          start: {
            line: 324,
            column: 15
          },
          end: {
            line: 324,
            column: 40
          }
        },
        loc: {
          start: {
            line: 324,
            column: 56
          },
          end: {
            line: 381,
            column: 1
          }
        },
        line: 324
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 364,
            column: 36
          },
          end: {
            line: 364,
            column: 37
          }
        },
        loc: {
          start: {
            line: 364,
            column: 48
          },
          end: {
            line: 376,
            column: 13
          }
        },
        line: 364
      },
      "18": {
        name: "getNotifications",
        decl: {
          start: {
            line: 382,
            column: 15
          },
          end: {
            line: 382,
            column: 31
          }
        },
        loc: {
          start: {
            line: 382,
            column: 47
          },
          end: {
            line: 417,
            column: 1
          }
        },
        line: 382
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 401,
            column: 33
          },
          end: {
            line: 401,
            column: 34
          }
        },
        loc: {
          start: {
            line: 401,
            column: 50
          },
          end: {
            line: 412,
            column: 13
          }
        },
        line: 401
      },
      "20": {
        name: "getSupplierUpdates",
        decl: {
          start: {
            line: 418,
            column: 15
          },
          end: {
            line: 418,
            column: 33
          }
        },
        loc: {
          start: {
            line: 418,
            column: 41
          },
          end: {
            line: 463,
            column: 1
          }
        },
        line: 418
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 448,
            column: 29
          },
          end: {
            line: 448,
            column: 30
          }
        },
        loc: {
          start: {
            line: 448,
            column: 42
          },
          end: {
            line: 458,
            column: 13
          }
        },
        line: 448
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "1": {
        loc: {
          start: {
            line: 57,
            column: 22
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 22
          },
          end: {
            line: 57,
            column: 63
          }
        }, {
          start: {
            line: 57,
            column: 67
          },
          end: {
            line: 63,
            column: 9
          }
        }],
        line: 57
      },
      "2": {
        loc: {
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 71,
            column: 26
          }
        }, {
          start: {
            line: 72,
            column: 16
          },
          end: {
            line: 72,
            column: 31
          }
        }, {
          start: {
            line: 73,
            column: 16
          },
          end: {
            line: 75,
            column: 26
          }
        }, {
          start: {
            line: 76,
            column: 16
          },
          end: {
            line: 78,
            column: 26
          }
        }, {
          start: {
            line: 79,
            column: 16
          },
          end: {
            line: 81,
            column: 26
          }
        }, {
          start: {
            line: 82,
            column: 16
          },
          end: {
            line: 84,
            column: 26
          }
        }, {
          start: {
            line: 85,
            column: 16
          },
          end: {
            line: 87,
            column: 26
          }
        }, {
          start: {
            line: 88,
            column: 16
          },
          end: {
            line: 89,
            column: 29
          }
        }],
        line: 68
      },
      "3": {
        loc: {
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "4": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "5": {
        loc: {
          start: {
            line: 106,
            column: 22
          },
          end: {
            line: 106,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 106,
            column: 33
          },
          end: {
            line: 106,
            column: 51
          }
        }, {
          start: {
            line: 106,
            column: 54
          },
          end: {
            line: 106,
            column: 72
          }
        }],
        line: 106
      },
      "6": {
        loc: {
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "7": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "8": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "9": {
        loc: {
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 119,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 119,
            column: 38
          }
        }, {
          start: {
            line: 119,
            column: 42
          },
          end: {
            line: 119,
            column: 67
          }
        }],
        line: 119
      },
      "10": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "11": {
        loc: {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "12": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "13": {
        loc: {
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "14": {
        loc: {
          start: {
            line: 178,
            column: 59
          },
          end: {
            line: 178,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 59
          },
          end: {
            line: 178,
            column: 65
          }
        }, {
          start: {
            line: 178,
            column: 69
          },
          end: {
            line: 178,
            column: 77
          }
        }],
        line: 178
      },
      "15": {
        loc: {
          start: {
            line: 179,
            column: 32
          },
          end: {
            line: 179,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 32
          },
          end: {
            line: 179,
            column: 70
          }
        }, {
          start: {
            line: 179,
            column: 74
          },
          end: {
            line: 179,
            column: 76
          }
        }],
        line: 179
      },
      "16": {
        loc: {
          start: {
            line: 205,
            column: 15
          },
          end: {
            line: 207,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 205,
            column: 15
          },
          end: {
            line: 205,
            column: 21
          }
        }, {
          start: {
            line: 205,
            column: 25
          },
          end: {
            line: 207,
            column: 13
          }
        }],
        line: 205
      },
      "17": {
        loc: {
          start: {
            line: 233,
            column: 24
          },
          end: {
            line: 233,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 233,
            column: 24
          },
          end: {
            line: 233,
            column: 38
          }
        }, {
          start: {
            line: 233,
            column: 42
          },
          end: {
            line: 233,
            column: 51
          }
        }],
        line: 233
      },
      "18": {
        loc: {
          start: {
            line: 246,
            column: 15
          },
          end: {
            line: 248,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 246,
            column: 15
          },
          end: {
            line: 246,
            column: 21
          }
        }, {
          start: {
            line: 246,
            column: 25
          },
          end: {
            line: 248,
            column: 13
          }
        }],
        line: 246
      },
      "19": {
        loc: {
          start: {
            line: 272,
            column: 24
          },
          end: {
            line: 272,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 272,
            column: 24
          },
          end: {
            line: 272,
            column: 38
          }
        }, {
          start: {
            line: 272,
            column: 42
          },
          end: {
            line: 272,
            column: 51
          }
        }],
        line: 272
      },
      "20": {
        loc: {
          start: {
            line: 285,
            column: 15
          },
          end: {
            line: 294,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 285,
            column: 15
          },
          end: {
            line: 285,
            column: 21
          }
        }, {
          start: {
            line: 285,
            column: 25
          },
          end: {
            line: 294,
            column: 13
          }
        }],
        line: 285
      },
      "21": {
        loc: {
          start: {
            line: 317,
            column: 24
          },
          end: {
            line: 317,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 317,
            column: 24
          },
          end: {
            line: 317,
            column: 30
          }
        }, {
          start: {
            line: 317,
            column: 34
          },
          end: {
            line: 317,
            column: 43
          }
        }],
        line: 317
      },
      "22": {
        loc: {
          start: {
            line: 339,
            column: 15
          },
          end: {
            line: 341,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 339,
            column: 15
          },
          end: {
            line: 339,
            column: 21
          }
        }, {
          start: {
            line: 339,
            column: 25
          },
          end: {
            line: 341,
            column: 13
          }
        }],
        line: 339
      },
      "23": {
        loc: {
          start: {
            line: 372,
            column: 28
          },
          end: {
            line: 372,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 372,
            column: 67
          },
          end: {
            line: 372,
            column: 76
          }
        }, {
          start: {
            line: 372,
            column: 79
          },
          end: {
            line: 372,
            column: 88
          }
        }],
        line: 372
      },
      "24": {
        loc: {
          start: {
            line: 375,
            column: 24
          },
          end: {
            line: 375,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 375,
            column: 24
          },
          end: {
            line: 375,
            column: 38
          }
        }, {
          start: {
            line: 375,
            column: 42
          },
          end: {
            line: 375,
            column: 51
          }
        }],
        line: 375
      },
      "25": {
        loc: {
          start: {
            line: 455,
            column: 28
          },
          end: {
            line: 455,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 455,
            column: 68
          },
          end: {
            line: 455,
            column: 77
          }
        }, {
          start: {
            line: 455,
            column: 80
          },
          end: {
            line: 455,
            column: 89
          }
        }],
        line: 455
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0, 0, 0, 0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/realtime/route.ts"],
      sourcesContent: ["/**\n * Real-time updates API for Vercel serverless deployment\n * Replaces Socket.IO with polling-based approach\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { prisma } from '@/lib/prisma';\nimport { cache } from '@/lib/cache-vercel';\nimport { validateTokenPermission, getUserIdFromToken, getShopIdFromToken } from '@/lib/auth';\n\n// Vercel serverless optimizations\nexport const runtime = 'nodejs';\nexport const dynamic = 'force-dynamic';\nexport const maxDuration = 10;\n\n// Real-time data types\ninterface RealtimeUpdate {\n  type: 'inventory' | 'invoice' | 'transfer' | 'notification' | 'purchase' | 'supplier';\n  data: any;\n  timestamp: number;\n  shopId?: string;\n}\n\n// Cache keys for real-time updates\nconst REALTIME_CACHE_KEYS = {\n  UPDATES: 'realtime:updates',\n  LAST_POLL: 'realtime:last_poll',\n  NOTIFICATIONS: 'realtime:notifications'\n};\n\n// Get latest updates since last poll\nexport async function GET(request: NextRequest) {\n  try {\n    // Validate authentication - check for any view permission since realtime provides updates for multiple modules\n    const userId = await getUserIdFromToken(request);\n    if (!userId) {\n      return NextResponse.json(\n        { error: 'Unauthorized' },\n        { status: 401 }\n      );\n    }\n    \n    // Check if user has any view permissions for the requested data types\n    const url = new URL(request.url);\n    const types = url.searchParams.get('types')?.split(',') || ['inventory', 'invoice', 'transfer', 'notification', 'supplier'];\n    \n    // Check permissions based on requested types\n    let hasAnyPermission = false;\n    for (const type of types) {\n      let requiredPermission = '';\n      switch (type) {\n        case 'inventory':\n          requiredPermission = 'inventory:view';\n          break;\n        case 'invoice':\n        case 'sales':\n          requiredPermission = 'sales:view';\n          break;\n        case 'purchase':\n          requiredPermission = 'purchases:view';\n          break;\n        case 'transfer':\n          requiredPermission = 'inventory:view'; // transfers are part of inventory\n          break;\n        case 'notification':\n          requiredPermission = 'view_dashboard'; // notifications are general\n          break;\n        case 'supplier':\n          requiredPermission = 'purchases:view'; // suppliers are part of purchases\n          break;\n        default:\n          continue;\n      }\n      \n      const hasPermission = await validateTokenPermission(request, requiredPermission);\n      if (hasPermission.isValid) {\n        hasAnyPermission = true;\n        break;\n      }\n    }\n    \n    if (!hasAnyPermission) {\n      return NextResponse.json(\n        { error: 'Unauthorized - No view permissions for requested data types' },\n        { status: 401 }\n      );\n    }\n\n    const shopId = await getShopIdFromToken(request);\n    const lastPoll = url.searchParams.get('lastPoll');\n\n    const since = lastPoll ? parseInt(lastPoll) : Date.now() - 60000; // Default to last minute\n    const updates: RealtimeUpdate[] = [];\n\n    // Get inventory updates\n    if (types.includes('inventory')) {\n      const inventoryUpdates = await getInventoryUpdates(shopId, since);\n      updates.push(...inventoryUpdates);\n    }\n\n    // Get invoice updates\n    if (types.includes('invoice')) {\n      const invoiceUpdates = await getInvoiceUpdates(shopId, since);\n      updates.push(...invoiceUpdates);\n    }\n\n    // Get purchase invoice updates\n    if (types.includes('purchase') || types.includes('invoice')) {\n      const purchaseUpdates = await getPurchaseInvoiceUpdates(shopId, since);\n      updates.push(...purchaseUpdates);\n    }\n\n    // Get transfer updates\n    if (types.includes('transfer')) {\n      const transferUpdates = await getTransferUpdates(shopId, since);\n      updates.push(...transferUpdates);\n    }\n\n    // Get notifications\n    if (types.includes('notification')) {\n      const notifications = await getNotifications(userId, since);\n      updates.push(...notifications);\n    }\n\n    // Get supplier updates\n    if (types.includes('supplier')) {\n      const supplierUpdates = await getSupplierUpdates(since);\n      updates.push(...supplierUpdates);\n    }\n\n    // Sort by timestamp\n    updates.sort((a, b) => b.timestamp - a.timestamp);\n\n    return NextResponse.json({\n      updates,\n      timestamp: Date.now(),\n      hasMore: updates.length > 0\n    }, {\n      headers: {\n        'Cache-Control': 'no-cache, no-store, must-revalidate',\n        'Content-Type': 'application/json'\n      }\n    });\n\n  } catch (error) {\n    console.error('Realtime API error:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}\n\n// Publish an update (called by other API routes)\nexport async function POST(request: NextRequest) {\n  try {\n    const hasPermission = await validateTokenPermission(request, 'write');\n    if (!hasPermission) {\n      return NextResponse.json(\n        { error: 'Unauthorized' },\n        { status: 401 }\n      );\n    }\n\n    const body = await request.json();\n    const { type, data, shopId } = body;\n\n    const update: RealtimeUpdate = {\n      type,\n      data,\n      timestamp: Date.now(),\n      shopId\n    };\n\n    // Store update in cache for polling clients\n    const cacheKey = `${REALTIME_CACHE_KEYS.UPDATES}:${shopId || 'global'}`;\n    const existingUpdates = await cache.get<RealtimeUpdate[]>(cacheKey) || [];\n    \n    // Keep only last 100 updates\n    const updatedList = [update, ...existingUpdates].slice(0, 100);\n    await cache.set(cacheKey, updatedList, 300); // 5 minutes TTL\n\n    return NextResponse.json({ success: true });\n\n  } catch (error) {\n    console.error('Realtime publish error:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}\n\n// Helper functions to get updates from different sources\nasync function getInventoryUpdates(shopId: string | null, since: number): Promise<RealtimeUpdate[]> {\n  try {\n    const whereClause = {\n      updatedAt: {\n        gte: new Date(since)\n      },\n      ...(shopId && { shopId })\n    };\n\n    const products = await prisma.product.findMany({\n      where: whereClause,\n      select: {\n        id: true,\n        name: true,\n        updatedAt: true,\n        shopId: true,\n        inventoryItems: {\n          select: {\n            quantity: true\n          }\n        }\n      },\n      take: 20\n    });\n\n    return products.map(product => ({\n      type: 'inventory' as const,\n      data: {\n        productId: product.id,\n        name: product.name,\n        quantity: product.inventoryItems.reduce((total, item) => total + item.quantity, 0),\n        action: 'updated'\n      },\n      timestamp: product.updatedAt.getTime(),\n      shopId: product.shopId || undefined\n    }));\n  } catch (error) {\n    console.error('Error fetching inventory updates:', error);\n    return [];\n  }\n}\n\nasync function getInvoiceUpdates(shopId: string | null, since: number): Promise<RealtimeUpdate[]> {\n  try {\n    const whereClause = {\n      createdAt: {\n        gte: new Date(since)\n      },\n      ...(shopId && { shopId })\n    };\n\n    const invoices = await prisma.invoice.findMany({\n      where: whereClause,\n      select: {\n        id: true,\n        invoiceNumber: true,\n        totalAmount: true,\n        status: true,\n        createdAt: true,\n        shopId: true\n      },\n      take: 10\n    });\n\n    return invoices.map(invoice => ({\n      type: 'invoice' as const,\n      data: {\n        invoiceId: invoice.id,\n        invoiceNumber: invoice.invoiceNumber,\n        totalAmount: invoice.totalAmount,\n        status: invoice.status,\n        action: 'created'\n      },\n      timestamp: invoice.createdAt.getTime(),\n      shopId: invoice.shopId || undefined\n    }));\n  } catch (error) {\n    console.error('Error fetching invoice updates:', error);\n    return [];\n  }\n}\n\nasync function getTransferUpdates(shopId: string | null, since: number): Promise<RealtimeUpdate[]> {\n  try {\n    const whereClause = {\n      updatedAt: {\n        gte: new Date(since)\n      },\n      ...(shopId && {\n        OR: [\n          { fromShopId: shopId },\n          { toShopId: shopId }\n        ]\n      })\n    };\n\n    const transfers = await prisma.inventoryTransfer.findMany({\n      where: whereClause,\n      select: {\n        id: true,\n        status: true,\n        fromShopId: true,\n        toShopId: true,\n        updatedAt: true\n      },\n      take: 10\n    });\n\n    return transfers.map(transfer => ({\n      type: 'transfer' as const,\n      data: {\n        transferId: transfer.id,\n        status: transfer.status,\n        fromShopId: transfer.fromShopId,\n        toShopId: transfer.toShopId,\n        action: 'updated'\n      },\n      timestamp: transfer.updatedAt.getTime(),\n      shopId: shopId || undefined\n    }));\n  } catch (error) {\n    console.error('Error fetching transfer updates:', error);\n    return [];\n  }\n}\n\nasync function getPurchaseInvoiceUpdates(shopId: string | null, since: number): Promise<RealtimeUpdate[]> {\n  try {\n    const whereClause = {\n      OR: [\n        {\n          createdAt: {\n            gte: new Date(since)\n          }\n        },\n        {\n          updatedAt: {\n            gte: new Date(since)\n          }\n        }\n      ],\n      ...(shopId && { shopId })\n    };\n\n    const purchaseInvoices = await prisma.purchaseInvoice.findMany({\n      where: whereClause,\n      select: {\n        id: true,\n        invoiceNumber: true,\n        total: true,\n        status: true,\n        createdAt: true,\n        updatedAt: true,\n        shopId: true,\n        supplier: {\n          select: {\n            name: true\n          }\n        }\n      },\n      orderBy: {\n        updatedAt: 'desc'\n      },\n      take: 10\n    });\n\n    return purchaseInvoices.map(invoice => ({\n      type: 'purchase' as const,\n      data: {\n        invoiceId: invoice.id,\n        invoiceNumber: invoice.invoiceNumber,\n        total: invoice.total,\n        status: invoice.status,\n        supplierName: invoice.supplier?.name,\n        action: invoice.createdAt.getTime() >= since ? 'created' : 'updated'\n      },\n      timestamp: Math.max(invoice.createdAt.getTime(), invoice.updatedAt.getTime()),\n      shopId: invoice.shopId || undefined\n    }));\n  } catch (error) {\n    console.error('Error fetching purchase invoice updates:', error);\n    return [];\n  }\n}\n\nasync function getNotifications(userId: number, since: number): Promise<RealtimeUpdate[]> {\n  try {\n    const notifications = await prisma.notification.findMany({\n      where: {\n        userId,\n        createdAt: {\n          gte: new Date(since)\n        }\n      },\n      select: {\n        id: true,\n        title: true,\n        message: true,\n        type: true,\n        isRead: true,\n        createdAt: true\n      },\n      take: 10\n    });\n\n    return notifications.map(notification => ({\n      type: 'notification' as const,\n      data: {\n        notificationId: notification.id,\n        title: notification.title,\n        message: notification.message,\n        notificationType: notification.type,\n        isRead: notification.isRead,\n        action: 'created'\n      },\n      timestamp: notification.createdAt.getTime()\n    }));\n  } catch (error) {\n    console.error('Error fetching notifications:', error);\n    return [];\n  }\n}\n\nasync function getSupplierUpdates(since: number): Promise<RealtimeUpdate[]> {\n  try {\n    const suppliers = await prisma.supplier.findMany({\n      where: {\n        OR: [\n          {\n            createdAt: {\n              gte: new Date(since)\n            }\n          },\n          {\n            updatedAt: {\n              gte: new Date(since)\n            }\n          }\n        ]\n      },\n      select: {\n        id: true,\n        name: true,\n        email: true,\n        phone: true,\n        createdAt: true,\n        updatedAt: true\n      },\n      orderBy: {\n        updatedAt: 'desc'\n      },\n      take: 10\n    });\n\n    return suppliers.map(supplier => ({\n      type: 'supplier' as const,\n      data: {\n        supplierId: supplier.id,\n        name: supplier.name,\n        email: supplier.email,\n        phone: supplier.phone,\n        action: supplier.createdAt.getTime() >= since ? 'created' : 'updated'\n      },\n      timestamp: Math.max(supplier.createdAt.getTime(), supplier.updatedAt.getTime())\n    }));\n  } catch (error) {\n    console.error('Error fetching notifications:', error);\n    return [];\n  }\n}"],
      names: ["GET", "POST", "dynamic", "maxDuration", "runtime", "REALTIME_CACHE_KEYS", "UPDATES", "LAST_POLL", "NOTIFICATIONS", "request", "userId", "getUserIdFromToken", "NextResponse", "json", "error", "status", "url", "URL", "types", "searchParams", "get", "split", "hasAnyPermission", "type", "requiredPermission", "hasPermission", "validateTokenPermission", "isValid", "shopId", "getShopIdFromToken", "lastPoll", "since", "parseInt", "Date", "now", "updates", "includes", "inventoryUpdates", "getInventoryUpdates", "push", "invoiceUpdates", "getInvoiceUpdates", "purchaseUpdates", "getPurchaseInvoiceUpdates", "transferUpdates", "getTransferUpdates", "notifications", "getNotifications", "supplierUpdates", "getSupplierUpdates", "sort", "a", "b", "timestamp", "hasMore", "length", "headers", "console", "body", "data", "update", "cacheKey", "existingUpdates", "cache", "updatedList", "slice", "set", "success", "whereClause", "updatedAt", "gte", "products", "prisma", "product", "findMany", "where", "select", "id", "name", "inventoryItems", "quantity", "take", "map", "productId", "reduce", "total", "item", "action", "getTime", "undefined", "createdAt", "invoices", "invoice", "invoiceNumber", "totalAmount", "invoiceId", "OR", "fromShopId", "toShopId", "transfers", "inventoryTransfer", "transfer", "transferId", "purchaseInvoices", "purchaseInvoice", "supplier", "orderBy", "supplierName", "Math", "max", "notification", "title", "message", "isRead", "notificationId", "notificationType", "suppliers", "email", "phone", "supplierId"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fb5c10949773772ebe7d5c2659a988197e68fc1b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_200eng09pa = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_200eng09pa();
cov_200eng09pa().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_200eng09pa().f[0]++;
  cov_200eng09pa().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_200eng09pa().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_200eng09pa().s[3]++;
_export(exports, {
  GET: function () {
    /* istanbul ignore next */
    cov_200eng09pa().f[1]++;
    cov_200eng09pa().s[4]++;
    return GET;
  },
  POST: function () {
    /* istanbul ignore next */
    cov_200eng09pa().f[2]++;
    cov_200eng09pa().s[5]++;
    return POST;
  },
  dynamic: function () {
    /* istanbul ignore next */
    cov_200eng09pa().f[3]++;
    cov_200eng09pa().s[6]++;
    return dynamic;
  },
  maxDuration: function () {
    /* istanbul ignore next */
    cov_200eng09pa().f[4]++;
    cov_200eng09pa().s[7]++;
    return maxDuration;
  },
  runtime: function () {
    /* istanbul ignore next */
    cov_200eng09pa().f[5]++;
    cov_200eng09pa().s[8]++;
    return runtime;
  }
});
const _server =
/* istanbul ignore next */
(cov_200eng09pa().s[9]++, require("next/server"));
const _prisma =
/* istanbul ignore next */
(cov_200eng09pa().s[10]++, require("../../../lib/prisma"));
const _cachevercel =
/* istanbul ignore next */
(cov_200eng09pa().s[11]++, require("../../../lib/cache-vercel"));
const _auth =
/* istanbul ignore next */
(cov_200eng09pa().s[12]++, require("../../../lib/auth"));
const runtime =
/* istanbul ignore next */
(cov_200eng09pa().s[13]++, "nodejs");
const dynamic =
/* istanbul ignore next */
(cov_200eng09pa().s[14]++, "force-dynamic");
const maxDuration =
/* istanbul ignore next */
(cov_200eng09pa().s[15]++, 10);
// Cache keys for real-time updates
const REALTIME_CACHE_KEYS =
/* istanbul ignore next */
(cov_200eng09pa().s[16]++, {
  UPDATES: "realtime:updates",
  LAST_POLL: "realtime:last_poll",
  NOTIFICATIONS: "realtime:notifications"
});
async function GET(request) {
  /* istanbul ignore next */
  cov_200eng09pa().f[6]++;
  cov_200eng09pa().s[17]++;
  try {
    // Validate authentication - check for any view permission since realtime provides updates for multiple modules
    const userId =
    /* istanbul ignore next */
    (cov_200eng09pa().s[18]++, await (0, _auth.getUserIdFromToken)(request));
    /* istanbul ignore next */
    cov_200eng09pa().s[19]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_200eng09pa().b[0][0]++;
      cov_200eng09pa().s[20]++;
      return _server.NextResponse.json({
        error: "Unauthorized"
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_200eng09pa().b[0][1]++;
    }
    // Check if user has any view permissions for the requested data types
    const url =
    /* istanbul ignore next */
    (cov_200eng09pa().s[21]++, new URL(request.url));
    const types =
    /* istanbul ignore next */
    (cov_200eng09pa().s[22]++,
    /* istanbul ignore next */
    (cov_200eng09pa().b[1][0]++, url.searchParams.get("types")?.split(",")) ||
    /* istanbul ignore next */
    (cov_200eng09pa().b[1][1]++, ["inventory", "invoice", "transfer", "notification", "supplier"]));
    // Check permissions based on requested types
    let hasAnyPermission =
    /* istanbul ignore next */
    (cov_200eng09pa().s[23]++, false);
    /* istanbul ignore next */
    cov_200eng09pa().s[24]++;
    for (const type of types) {
      let requiredPermission =
      /* istanbul ignore next */
      (cov_200eng09pa().s[25]++, "");
      /* istanbul ignore next */
      cov_200eng09pa().s[26]++;
      switch (type) {
        case "inventory":
          /* istanbul ignore next */
          cov_200eng09pa().b[2][0]++;
          cov_200eng09pa().s[27]++;
          requiredPermission = "inventory:view";
          /* istanbul ignore next */
          cov_200eng09pa().s[28]++;
          break;
        case "invoice":
          /* istanbul ignore next */
          cov_200eng09pa().b[2][1]++;
        case "sales":
          /* istanbul ignore next */
          cov_200eng09pa().b[2][2]++;
          cov_200eng09pa().s[29]++;
          requiredPermission = "sales:view";
          /* istanbul ignore next */
          cov_200eng09pa().s[30]++;
          break;
        case "purchase":
          /* istanbul ignore next */
          cov_200eng09pa().b[2][3]++;
          cov_200eng09pa().s[31]++;
          requiredPermission = "purchases:view";
          /* istanbul ignore next */
          cov_200eng09pa().s[32]++;
          break;
        case "transfer":
          /* istanbul ignore next */
          cov_200eng09pa().b[2][4]++;
          cov_200eng09pa().s[33]++;
          requiredPermission = "inventory:view"; // transfers are part of inventory
          /* istanbul ignore next */
          cov_200eng09pa().s[34]++;
          break;
        case "notification":
          /* istanbul ignore next */
          cov_200eng09pa().b[2][5]++;
          cov_200eng09pa().s[35]++;
          requiredPermission = "view_dashboard"; // notifications are general
          /* istanbul ignore next */
          cov_200eng09pa().s[36]++;
          break;
        case "supplier":
          /* istanbul ignore next */
          cov_200eng09pa().b[2][6]++;
          cov_200eng09pa().s[37]++;
          requiredPermission = "purchases:view"; // suppliers are part of purchases
          /* istanbul ignore next */
          cov_200eng09pa().s[38]++;
          break;
        default:
          /* istanbul ignore next */
          cov_200eng09pa().b[2][7]++;
          cov_200eng09pa().s[39]++;
          continue;
      }
      const hasPermission =
      /* istanbul ignore next */
      (cov_200eng09pa().s[40]++, await (0, _auth.validateTokenPermission)(request, requiredPermission));
      /* istanbul ignore next */
      cov_200eng09pa().s[41]++;
      if (hasPermission.isValid) {
        /* istanbul ignore next */
        cov_200eng09pa().b[3][0]++;
        cov_200eng09pa().s[42]++;
        hasAnyPermission = true;
        /* istanbul ignore next */
        cov_200eng09pa().s[43]++;
        break;
      } else
      /* istanbul ignore next */
      {
        cov_200eng09pa().b[3][1]++;
      }
    }
    /* istanbul ignore next */
    cov_200eng09pa().s[44]++;
    if (!hasAnyPermission) {
      /* istanbul ignore next */
      cov_200eng09pa().b[4][0]++;
      cov_200eng09pa().s[45]++;
      return _server.NextResponse.json({
        error: "Unauthorized - No view permissions for requested data types"
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_200eng09pa().b[4][1]++;
    }
    const shopId =
    /* istanbul ignore next */
    (cov_200eng09pa().s[46]++, await (0, _auth.getShopIdFromToken)(request));
    const lastPoll =
    /* istanbul ignore next */
    (cov_200eng09pa().s[47]++, url.searchParams.get("lastPoll"));
    const since =
    /* istanbul ignore next */
    (cov_200eng09pa().s[48]++, lastPoll ?
    /* istanbul ignore next */
    (cov_200eng09pa().b[5][0]++, parseInt(lastPoll)) :
    /* istanbul ignore next */
    (cov_200eng09pa().b[5][1]++, Date.now() - 60000)); // Default to last minute
    const updates =
    /* istanbul ignore next */
    (cov_200eng09pa().s[49]++, []);
    // Get inventory updates
    /* istanbul ignore next */
    cov_200eng09pa().s[50]++;
    if (types.includes("inventory")) {
      /* istanbul ignore next */
      cov_200eng09pa().b[6][0]++;
      const inventoryUpdates =
      /* istanbul ignore next */
      (cov_200eng09pa().s[51]++, await getInventoryUpdates(shopId, since));
      /* istanbul ignore next */
      cov_200eng09pa().s[52]++;
      updates.push(...inventoryUpdates);
    } else
    /* istanbul ignore next */
    {
      cov_200eng09pa().b[6][1]++;
    }
    // Get invoice updates
    cov_200eng09pa().s[53]++;
    if (types.includes("invoice")) {
      /* istanbul ignore next */
      cov_200eng09pa().b[7][0]++;
      const invoiceUpdates =
      /* istanbul ignore next */
      (cov_200eng09pa().s[54]++, await getInvoiceUpdates(shopId, since));
      /* istanbul ignore next */
      cov_200eng09pa().s[55]++;
      updates.push(...invoiceUpdates);
    } else
    /* istanbul ignore next */
    {
      cov_200eng09pa().b[7][1]++;
    }
    // Get purchase invoice updates
    cov_200eng09pa().s[56]++;
    if (
    /* istanbul ignore next */
    (cov_200eng09pa().b[9][0]++, types.includes("purchase")) ||
    /* istanbul ignore next */
    (cov_200eng09pa().b[9][1]++, types.includes("invoice"))) {
      /* istanbul ignore next */
      cov_200eng09pa().b[8][0]++;
      const purchaseUpdates =
      /* istanbul ignore next */
      (cov_200eng09pa().s[57]++, await getPurchaseInvoiceUpdates(shopId, since));
      /* istanbul ignore next */
      cov_200eng09pa().s[58]++;
      updates.push(...purchaseUpdates);
    } else
    /* istanbul ignore next */
    {
      cov_200eng09pa().b[8][1]++;
    }
    // Get transfer updates
    cov_200eng09pa().s[59]++;
    if (types.includes("transfer")) {
      /* istanbul ignore next */
      cov_200eng09pa().b[10][0]++;
      const transferUpdates =
      /* istanbul ignore next */
      (cov_200eng09pa().s[60]++, await getTransferUpdates(shopId, since));
      /* istanbul ignore next */
      cov_200eng09pa().s[61]++;
      updates.push(...transferUpdates);
    } else
    /* istanbul ignore next */
    {
      cov_200eng09pa().b[10][1]++;
    }
    // Get notifications
    cov_200eng09pa().s[62]++;
    if (types.includes("notification")) {
      /* istanbul ignore next */
      cov_200eng09pa().b[11][0]++;
      const notifications =
      /* istanbul ignore next */
      (cov_200eng09pa().s[63]++, await getNotifications(userId, since));
      /* istanbul ignore next */
      cov_200eng09pa().s[64]++;
      updates.push(...notifications);
    } else
    /* istanbul ignore next */
    {
      cov_200eng09pa().b[11][1]++;
    }
    // Get supplier updates
    cov_200eng09pa().s[65]++;
    if (types.includes("supplier")) {
      /* istanbul ignore next */
      cov_200eng09pa().b[12][0]++;
      const supplierUpdates =
      /* istanbul ignore next */
      (cov_200eng09pa().s[66]++, await getSupplierUpdates(since));
      /* istanbul ignore next */
      cov_200eng09pa().s[67]++;
      updates.push(...supplierUpdates);
    } else
    /* istanbul ignore next */
    {
      cov_200eng09pa().b[12][1]++;
    }
    // Sort by timestamp
    cov_200eng09pa().s[68]++;
    updates.sort((a, b) => {
      /* istanbul ignore next */
      cov_200eng09pa().f[7]++;
      cov_200eng09pa().s[69]++;
      return b.timestamp - a.timestamp;
    });
    /* istanbul ignore next */
    cov_200eng09pa().s[70]++;
    return _server.NextResponse.json({
      updates,
      timestamp: Date.now(),
      hasMore: updates.length > 0
    }, {
      headers: {
        "Cache-Control": "no-cache, no-store, must-revalidate",
        "Content-Type": "application/json"
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_200eng09pa().s[71]++;
    console.error("Realtime API error:", error);
    /* istanbul ignore next */
    cov_200eng09pa().s[72]++;
    return _server.NextResponse.json({
      error: "Internal server error"
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_200eng09pa().f[8]++;
  cov_200eng09pa().s[73]++;
  try {
    const hasPermission =
    /* istanbul ignore next */
    (cov_200eng09pa().s[74]++, await (0, _auth.validateTokenPermission)(request, "write"));
    /* istanbul ignore next */
    cov_200eng09pa().s[75]++;
    if (!hasPermission) {
      /* istanbul ignore next */
      cov_200eng09pa().b[13][0]++;
      cov_200eng09pa().s[76]++;
      return _server.NextResponse.json({
        error: "Unauthorized"
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_200eng09pa().b[13][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_200eng09pa().s[77]++, await request.json());
    const {
      type,
      data,
      shopId
    } =
    /* istanbul ignore next */
    (cov_200eng09pa().s[78]++, body);
    const update =
    /* istanbul ignore next */
    (cov_200eng09pa().s[79]++, {
      type,
      data,
      timestamp: Date.now(),
      shopId
    });
    // Store update in cache for polling clients
    const cacheKey =
    /* istanbul ignore next */
    (cov_200eng09pa().s[80]++, `${REALTIME_CACHE_KEYS.UPDATES}:${
    /* istanbul ignore next */
    (cov_200eng09pa().b[14][0]++, shopId) ||
    /* istanbul ignore next */
    (cov_200eng09pa().b[14][1]++, "global")}`);
    const existingUpdates =
    /* istanbul ignore next */
    (cov_200eng09pa().s[81]++,
    /* istanbul ignore next */
    (cov_200eng09pa().b[15][0]++, await _cachevercel.cache.get(cacheKey)) ||
    /* istanbul ignore next */
    (cov_200eng09pa().b[15][1]++, []));
    // Keep only last 100 updates
    const updatedList =
    /* istanbul ignore next */
    (cov_200eng09pa().s[82]++, [update, ...existingUpdates].slice(0, 100));
    /* istanbul ignore next */
    cov_200eng09pa().s[83]++;
    await _cachevercel.cache.set(cacheKey, updatedList, 300); // 5 minutes TTL
    /* istanbul ignore next */
    cov_200eng09pa().s[84]++;
    return _server.NextResponse.json({
      success: true
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_200eng09pa().s[85]++;
    console.error("Realtime publish error:", error);
    /* istanbul ignore next */
    cov_200eng09pa().s[86]++;
    return _server.NextResponse.json({
      error: "Internal server error"
    }, {
      status: 500
    });
  }
}
// Helper functions to get updates from different sources
async function getInventoryUpdates(shopId, since) {
  /* istanbul ignore next */
  cov_200eng09pa().f[9]++;
  cov_200eng09pa().s[87]++;
  try {
    const whereClause =
    /* istanbul ignore next */
    (cov_200eng09pa().s[88]++, {
      updatedAt: {
        gte: new Date(since)
      },
      ...(
      /* istanbul ignore next */
      (cov_200eng09pa().b[16][0]++, shopId) &&
      /* istanbul ignore next */
      (cov_200eng09pa().b[16][1]++, {
        shopId
      }))
    });
    const products =
    /* istanbul ignore next */
    (cov_200eng09pa().s[89]++, await _prisma.prisma.product.findMany({
      where: whereClause,
      select: {
        id: true,
        name: true,
        updatedAt: true,
        shopId: true,
        inventoryItems: {
          select: {
            quantity: true
          }
        }
      },
      take: 20
    }));
    /* istanbul ignore next */
    cov_200eng09pa().s[90]++;
    return products.map(product => {
      /* istanbul ignore next */
      cov_200eng09pa().f[10]++;
      cov_200eng09pa().s[91]++;
      return {
        type: "inventory",
        data: {
          productId: product.id,
          name: product.name,
          quantity: product.inventoryItems.reduce((total, item) => {
            /* istanbul ignore next */
            cov_200eng09pa().f[11]++;
            cov_200eng09pa().s[92]++;
            return total + item.quantity;
          }, 0),
          action: "updated"
        },
        timestamp: product.updatedAt.getTime(),
        shopId:
        /* istanbul ignore next */
        (cov_200eng09pa().b[17][0]++, product.shopId) ||
        /* istanbul ignore next */
        (cov_200eng09pa().b[17][1]++, undefined)
      };
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_200eng09pa().s[93]++;
    console.error("Error fetching inventory updates:", error);
    /* istanbul ignore next */
    cov_200eng09pa().s[94]++;
    return [];
  }
}
async function getInvoiceUpdates(shopId, since) {
  /* istanbul ignore next */
  cov_200eng09pa().f[12]++;
  cov_200eng09pa().s[95]++;
  try {
    const whereClause =
    /* istanbul ignore next */
    (cov_200eng09pa().s[96]++, {
      createdAt: {
        gte: new Date(since)
      },
      ...(
      /* istanbul ignore next */
      (cov_200eng09pa().b[18][0]++, shopId) &&
      /* istanbul ignore next */
      (cov_200eng09pa().b[18][1]++, {
        shopId
      }))
    });
    const invoices =
    /* istanbul ignore next */
    (cov_200eng09pa().s[97]++, await _prisma.prisma.invoice.findMany({
      where: whereClause,
      select: {
        id: true,
        invoiceNumber: true,
        totalAmount: true,
        status: true,
        createdAt: true,
        shopId: true
      },
      take: 10
    }));
    /* istanbul ignore next */
    cov_200eng09pa().s[98]++;
    return invoices.map(invoice => {
      /* istanbul ignore next */
      cov_200eng09pa().f[13]++;
      cov_200eng09pa().s[99]++;
      return {
        type: "invoice",
        data: {
          invoiceId: invoice.id,
          invoiceNumber: invoice.invoiceNumber,
          totalAmount: invoice.totalAmount,
          status: invoice.status,
          action: "created"
        },
        timestamp: invoice.createdAt.getTime(),
        shopId:
        /* istanbul ignore next */
        (cov_200eng09pa().b[19][0]++, invoice.shopId) ||
        /* istanbul ignore next */
        (cov_200eng09pa().b[19][1]++, undefined)
      };
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_200eng09pa().s[100]++;
    console.error("Error fetching invoice updates:", error);
    /* istanbul ignore next */
    cov_200eng09pa().s[101]++;
    return [];
  }
}
async function getTransferUpdates(shopId, since) {
  /* istanbul ignore next */
  cov_200eng09pa().f[14]++;
  cov_200eng09pa().s[102]++;
  try {
    const whereClause =
    /* istanbul ignore next */
    (cov_200eng09pa().s[103]++, {
      updatedAt: {
        gte: new Date(since)
      },
      ...(
      /* istanbul ignore next */
      (cov_200eng09pa().b[20][0]++, shopId) &&
      /* istanbul ignore next */
      (cov_200eng09pa().b[20][1]++, {
        OR: [{
          fromShopId: shopId
        }, {
          toShopId: shopId
        }]
      }))
    });
    const transfers =
    /* istanbul ignore next */
    (cov_200eng09pa().s[104]++, await _prisma.prisma.inventoryTransfer.findMany({
      where: whereClause,
      select: {
        id: true,
        status: true,
        fromShopId: true,
        toShopId: true,
        updatedAt: true
      },
      take: 10
    }));
    /* istanbul ignore next */
    cov_200eng09pa().s[105]++;
    return transfers.map(transfer => {
      /* istanbul ignore next */
      cov_200eng09pa().f[15]++;
      cov_200eng09pa().s[106]++;
      return {
        type: "transfer",
        data: {
          transferId: transfer.id,
          status: transfer.status,
          fromShopId: transfer.fromShopId,
          toShopId: transfer.toShopId,
          action: "updated"
        },
        timestamp: transfer.updatedAt.getTime(),
        shopId:
        /* istanbul ignore next */
        (cov_200eng09pa().b[21][0]++, shopId) ||
        /* istanbul ignore next */
        (cov_200eng09pa().b[21][1]++, undefined)
      };
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_200eng09pa().s[107]++;
    console.error("Error fetching transfer updates:", error);
    /* istanbul ignore next */
    cov_200eng09pa().s[108]++;
    return [];
  }
}
async function getPurchaseInvoiceUpdates(shopId, since) {
  /* istanbul ignore next */
  cov_200eng09pa().f[16]++;
  cov_200eng09pa().s[109]++;
  try {
    const whereClause =
    /* istanbul ignore next */
    (cov_200eng09pa().s[110]++, {
      OR: [{
        createdAt: {
          gte: new Date(since)
        }
      }, {
        updatedAt: {
          gte: new Date(since)
        }
      }],
      ...(
      /* istanbul ignore next */
      (cov_200eng09pa().b[22][0]++, shopId) &&
      /* istanbul ignore next */
      (cov_200eng09pa().b[22][1]++, {
        shopId
      }))
    });
    const purchaseInvoices =
    /* istanbul ignore next */
    (cov_200eng09pa().s[111]++, await _prisma.prisma.purchaseInvoice.findMany({
      where: whereClause,
      select: {
        id: true,
        invoiceNumber: true,
        total: true,
        status: true,
        createdAt: true,
        updatedAt: true,
        shopId: true,
        supplier: {
          select: {
            name: true
          }
        }
      },
      orderBy: {
        updatedAt: "desc"
      },
      take: 10
    }));
    /* istanbul ignore next */
    cov_200eng09pa().s[112]++;
    return purchaseInvoices.map(invoice => {
      /* istanbul ignore next */
      cov_200eng09pa().f[17]++;
      cov_200eng09pa().s[113]++;
      return {
        type: "purchase",
        data: {
          invoiceId: invoice.id,
          invoiceNumber: invoice.invoiceNumber,
          total: invoice.total,
          status: invoice.status,
          supplierName: invoice.supplier?.name,
          action: invoice.createdAt.getTime() >= since ?
          /* istanbul ignore next */
          (cov_200eng09pa().b[23][0]++, "created") :
          /* istanbul ignore next */
          (cov_200eng09pa().b[23][1]++, "updated")
        },
        timestamp: Math.max(invoice.createdAt.getTime(), invoice.updatedAt.getTime()),
        shopId:
        /* istanbul ignore next */
        (cov_200eng09pa().b[24][0]++, invoice.shopId) ||
        /* istanbul ignore next */
        (cov_200eng09pa().b[24][1]++, undefined)
      };
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_200eng09pa().s[114]++;
    console.error("Error fetching purchase invoice updates:", error);
    /* istanbul ignore next */
    cov_200eng09pa().s[115]++;
    return [];
  }
}
async function getNotifications(userId, since) {
  /* istanbul ignore next */
  cov_200eng09pa().f[18]++;
  cov_200eng09pa().s[116]++;
  try {
    const notifications =
    /* istanbul ignore next */
    (cov_200eng09pa().s[117]++, await _prisma.prisma.notification.findMany({
      where: {
        userId,
        createdAt: {
          gte: new Date(since)
        }
      },
      select: {
        id: true,
        title: true,
        message: true,
        type: true,
        isRead: true,
        createdAt: true
      },
      take: 10
    }));
    /* istanbul ignore next */
    cov_200eng09pa().s[118]++;
    return notifications.map(notification => {
      /* istanbul ignore next */
      cov_200eng09pa().f[19]++;
      cov_200eng09pa().s[119]++;
      return {
        type: "notification",
        data: {
          notificationId: notification.id,
          title: notification.title,
          message: notification.message,
          notificationType: notification.type,
          isRead: notification.isRead,
          action: "created"
        },
        timestamp: notification.createdAt.getTime()
      };
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_200eng09pa().s[120]++;
    console.error("Error fetching notifications:", error);
    /* istanbul ignore next */
    cov_200eng09pa().s[121]++;
    return [];
  }
}
async function getSupplierUpdates(since) {
  /* istanbul ignore next */
  cov_200eng09pa().f[20]++;
  cov_200eng09pa().s[122]++;
  try {
    const suppliers =
    /* istanbul ignore next */
    (cov_200eng09pa().s[123]++, await _prisma.prisma.supplier.findMany({
      where: {
        OR: [{
          createdAt: {
            gte: new Date(since)
          }
        }, {
          updatedAt: {
            gte: new Date(since)
          }
        }]
      },
      select: {
        id: true,
        name: true,
        email: true,
        phone: true,
        createdAt: true,
        updatedAt: true
      },
      orderBy: {
        updatedAt: "desc"
      },
      take: 10
    }));
    /* istanbul ignore next */
    cov_200eng09pa().s[124]++;
    return suppliers.map(supplier => {
      /* istanbul ignore next */
      cov_200eng09pa().f[21]++;
      cov_200eng09pa().s[125]++;
      return {
        type: "supplier",
        data: {
          supplierId: supplier.id,
          name: supplier.name,
          email: supplier.email,
          phone: supplier.phone,
          action: supplier.createdAt.getTime() >= since ?
          /* istanbul ignore next */
          (cov_200eng09pa().b[25][0]++, "created") :
          /* istanbul ignore next */
          (cov_200eng09pa().b[25][1]++, "updated")
        },
        timestamp: Math.max(supplier.createdAt.getTime(), supplier.updatedAt.getTime())
      };
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_200eng09pa().s[126]++;
    console.error("Error fetching notifications:", error);
    /* istanbul ignore next */
    cov_200eng09pa().s[127]++;
    return [];
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,