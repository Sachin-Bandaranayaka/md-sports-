707b47bd31f8f53dfaac2e081cf92e56
"use strict";

/* istanbul ignore next */
function cov_1wbmpl9kr2() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/products/[id]/stock/route.ts";
  var hash = "dc20154406c137ed56a24dd8efff06227a42fc7a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/products/[id]/stock/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 19
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 16
        },
        end: {
          line: 12,
          column: 52
        }
      },
      "5": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 13,
          column: 74
        }
      },
      "6": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 102,
          column: 2
        }
      },
      "7": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 101,
          column: 5
        }
      },
      "8": {
        start: {
          line: 20,
          column: 26
        },
        end: {
          line: 20,
          column: 45
        }
      },
      "9": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "10": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 27,
          column: 15
        }
      },
      "11": {
        start: {
          line: 29,
          column: 33
        },
        end: {
          line: 29,
          column: 49
        }
      },
      "12": {
        start: {
          line: 30,
          column: 28
        },
        end: {
          line: 30,
          column: 54
        }
      },
      "13": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "14": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 37,
          column: 15
        }
      },
      "15": {
        start: {
          line: 40,
          column: 23
        },
        end: {
          line: 40,
          column: 45
        }
      },
      "16": {
        start: {
          line: 41,
          column: 26
        },
        end: {
          line: 86,
          column: 78
        }
      },
      "17": {
        start: {
          line: 43,
          column: 34
        },
        end: {
          line: 62,
          column: 14
        }
      },
      "18": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 71,
          column: 13
        }
      },
      "19": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 70,
          column: 18
        }
      },
      "20": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 79,
          column: 14
        }
      },
      "21": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 91,
          column: 11
        }
      },
      "22": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 62
        }
      },
      "23": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 100,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 61
          },
          end: {
            line: 14,
            column: 62
          }
        },
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 102,
            column: 1
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 41,
            column: 55
          },
          end: {
            line: 41,
            column: 56
          }
        },
        loc: {
          start: {
            line: 41,
            column: 65
          },
          end: {
            line: 80,
            column: 9
          }
        },
        line: 41
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 82
          },
          end: {
            line: 18,
            column: 1
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 95
          },
          end: {
            line: 18,
            column: 1
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "4": {
        loc: {
          start: {
            line: 73,
            column: 23
          },
          end: {
            line: 73,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 23
          },
          end: {
            line: 73,
            column: 45
          }
        }, {
          start: {
            line: 73,
            column: 49
          },
          end: {
            line: 73,
            column: 50
          }
        }],
        line: 73
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/products/[id]/stock/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { prisma, safeQuery } from '@/lib/prisma';\nimport { ShopAccessControl } from '@/lib/utils/shopMiddleware';\n\nexport const GET = ShopAccessControl.withShopAccess(async (\n    req: NextRequest,\n    context: any,\n    { params }: { params: { id: string } } = { params: { id: '' } }\n) => {\n    try {\n        const productId = parseInt(params.id);\n        if (isNaN(productId)) {\n            return NextResponse.json({\n                success: false,\n                message: 'Invalid product ID'\n            }, { status: 400 });\n        }\n\n        const { searchParams } = new URL(req.url);\n        const shopIdParam = searchParams.get('shopId');\n\n        if (!shopIdParam) {\n            return NextResponse.json({\n                success: false,\n                message: 'Shop ID is required'\n            }, { status: 400 });\n        }\n\n        // Ensure shopId is properly converted to string for database query\n        const shopId = shopIdParam.toString();\n\n        const stockData = await safeQuery(\n            async () => {\n                // Get inventory item for the specific product and shop\n                const inventoryItem = await prisma.inventoryItem.findFirst({\n                    where: {\n                        productId: productId,\n                        shopId: shopId\n                    },\n                    include: {\n                        product: {\n                            select: {\n                                name: true,\n                                sku: true,\n                                price: true\n                            }\n                        },\n                        shop: {\n                            select: {\n                                name: true\n                            }\n                        }\n                    }\n                });\n\n                if (!inventoryItem) {\n                    return {\n                        stock: 0,\n                        productId: productId,\n                        shopId: shopId,\n                        productName: null,\n                        shopName: null\n                    };\n                }\n\n                return {\n                    stock: inventoryItem.quantity || 0,\n                    productId: productId,\n                    shopId: shopId,\n                    productName: inventoryItem.product.name,\n                    shopName: inventoryItem.shop.name,\n                    price: inventoryItem.product.price\n                };\n            },\n            {\n                stock: 0,\n                productId: productId,\n                shopId: shopId,\n                productName: null,\n                shopName: null\n            },\n            `Failed to fetch stock for product ${productId} in shop ${shopId}`\n        );\n\n        return NextResponse.json({\n            success: true,\n            data: stockData,\n            stock: stockData.stock // For backward compatibility\n        });\n    } catch (error) {\n        console.error('Error fetching product stock:', error);\n        return NextResponse.json({\n            success: false,\n            message: 'Internal server error',\n            stock: 0\n        }, { status: 500 });\n    }\n});"],
      names: ["GET", "ShopAccessControl", "withShopAccess", "req", "context", "params", "id", "productId", "parseInt", "isNaN", "NextResponse", "json", "success", "message", "status", "searchParams", "URL", "url", "shopIdParam", "get", "shopId", "toString", "stockData", "safeQuery", "inventoryItem", "prisma", "findFirst", "where", "include", "product", "select", "name", "sku", "price", "shop", "stock", "productName", "shopName", "quantity", "data", "error", "console"],
      mappings: ";;;;+BAIaA;;;eAAAA;;;wBAJ6B;wBACR;gCACA;AAE3B,MAAMA,MAAMC,iCAAiB,CAACC,cAAc,CAAC,OAChDC,KACAC,SACA,EAAEC,MAAM,EAA8B,GAAG;IAAEA,QAAQ;QAAEC,IAAI;IAAG;AAAE,CAAC;IAE/D,IAAI;QACA,MAAMC,YAAYC,SAASH,OAAOC,EAAE;QACpC,IAAIG,MAAMF,YAAY;YAClB,OAAOG,oBAAY,CAACC,IAAI,CAAC;gBACrBC,SAAS;gBACTC,SAAS;YACb,GAAG;gBAAEC,QAAQ;YAAI;QACrB;QAEA,MAAM,EAAEC,YAAY,EAAE,GAAG,IAAIC,IAAIb,IAAIc,GAAG;QACxC,MAAMC,cAAcH,aAAaI,GAAG,CAAC;QAErC,IAAI,CAACD,aAAa;YACd,OAAOR,oBAAY,CAACC,IAAI,CAAC;gBACrBC,SAAS;gBACTC,SAAS;YACb,GAAG;gBAAEC,QAAQ;YAAI;QACrB;QAEA,mEAAmE;QACnE,MAAMM,SAASF,YAAYG,QAAQ;QAEnC,MAAMC,YAAY,MAAMC,IAAAA,iBAAS,EAC7B;YACI,uDAAuD;YACvD,MAAMC,gBAAgB,MAAMC,cAAM,CAACD,aAAa,CAACE,SAAS,CAAC;gBACvDC,OAAO;oBACHpB,WAAWA;oBACXa,QAAQA;gBACZ;gBACAQ,SAAS;oBACLC,SAAS;wBACLC,QAAQ;4BACJC,MAAM;4BACNC,KAAK;4BACLC,OAAO;wBACX;oBACJ;oBACAC,MAAM;wBACFJ,QAAQ;4BACJC,MAAM;wBACV;oBACJ;gBACJ;YACJ;YAEA,IAAI,CAACP,eAAe;gBAChB,OAAO;oBACHW,OAAO;oBACP5B,WAAWA;oBACXa,QAAQA;oBACRgB,aAAa;oBACbC,UAAU;gBACd;YACJ;YAEA,OAAO;gBACHF,OAAOX,cAAcc,QAAQ,IAAI;gBACjC/B,WAAWA;gBACXa,QAAQA;gBACRgB,aAAaZ,cAAcK,OAAO,CAACE,IAAI;gBACvCM,UAAUb,cAAcU,IAAI,CAACH,IAAI;gBACjCE,OAAOT,cAAcK,OAAO,CAACI,KAAK;YACtC;QACJ,GACA;YACIE,OAAO;YACP5B,WAAWA;YACXa,QAAQA;YACRgB,aAAa;YACbC,UAAU;QACd,GACA,CAAC,kCAAkC,EAAE9B,UAAU,SAAS,EAAEa,OAAO,CAAC;QAGtE,OAAOV,oBAAY,CAACC,IAAI,CAAC;YACrBC,SAAS;YACT2B,MAAMjB;YACNa,OAAOb,UAAUa,KAAK,CAAC,6BAA6B;QACxD;IACJ,EAAE,OAAOK,OAAO;QACZC,QAAQD,KAAK,CAAC,iCAAiCA;QAC/C,OAAO9B,oBAAY,CAACC,IAAI,CAAC;YACrBC,SAAS;YACTC,SAAS;YACTsB,OAAO;QACX,GAAG;YAAErB,QAAQ;QAAI;IACrB;AACJ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dc20154406c137ed56a24dd8efff06227a42fc7a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1wbmpl9kr2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1wbmpl9kr2();
cov_1wbmpl9kr2().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1wbmpl9kr2().s[1]++;
Object.defineProperty(exports, "GET", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1wbmpl9kr2().f[0]++;
    cov_1wbmpl9kr2().s[2]++;
    return GET;
  }
});
const _server =
/* istanbul ignore next */
(cov_1wbmpl9kr2().s[3]++, require("next/server"));
const _prisma =
/* istanbul ignore next */
(cov_1wbmpl9kr2().s[4]++, require("../../../../../lib/prisma"));
const _shopMiddleware =
/* istanbul ignore next */
(cov_1wbmpl9kr2().s[5]++, require("../../../../../lib/utils/shopMiddleware"));
const GET =
/* istanbul ignore next */
(cov_1wbmpl9kr2().s[6]++, _shopMiddleware.ShopAccessControl.withShopAccess(async (req, context, {
  params
} =
/* istanbul ignore next */
(cov_1wbmpl9kr2().b[0][0]++, {
  params: {
    id: ""
  }
})) => {
  /* istanbul ignore next */
  cov_1wbmpl9kr2().f[1]++;
  cov_1wbmpl9kr2().s[7]++;
  try {
    const productId =
    /* istanbul ignore next */
    (cov_1wbmpl9kr2().s[8]++, parseInt(params.id));
    /* istanbul ignore next */
    cov_1wbmpl9kr2().s[9]++;
    if (isNaN(productId)) {
      /* istanbul ignore next */
      cov_1wbmpl9kr2().b[1][0]++;
      cov_1wbmpl9kr2().s[10]++;
      return _server.NextResponse.json({
        success: false,
        message: "Invalid product ID"
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1wbmpl9kr2().b[1][1]++;
    }
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_1wbmpl9kr2().s[11]++, new URL(req.url));
    const shopIdParam =
    /* istanbul ignore next */
    (cov_1wbmpl9kr2().s[12]++, searchParams.get("shopId"));
    /* istanbul ignore next */
    cov_1wbmpl9kr2().s[13]++;
    if (!shopIdParam) {
      /* istanbul ignore next */
      cov_1wbmpl9kr2().b[2][0]++;
      cov_1wbmpl9kr2().s[14]++;
      return _server.NextResponse.json({
        success: false,
        message: "Shop ID is required"
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1wbmpl9kr2().b[2][1]++;
    }
    // Ensure shopId is properly converted to string for database query
    const shopId =
    /* istanbul ignore next */
    (cov_1wbmpl9kr2().s[15]++, shopIdParam.toString());
    const stockData =
    /* istanbul ignore next */
    (cov_1wbmpl9kr2().s[16]++, await (0, _prisma.safeQuery)(async () => {
      /* istanbul ignore next */
      cov_1wbmpl9kr2().f[2]++;
      // Get inventory item for the specific product and shop
      const inventoryItem =
      /* istanbul ignore next */
      (cov_1wbmpl9kr2().s[17]++, await _prisma.prisma.inventoryItem.findFirst({
        where: {
          productId: productId,
          shopId: shopId
        },
        include: {
          product: {
            select: {
              name: true,
              sku: true,
              price: true
            }
          },
          shop: {
            select: {
              name: true
            }
          }
        }
      }));
      /* istanbul ignore next */
      cov_1wbmpl9kr2().s[18]++;
      if (!inventoryItem) {
        /* istanbul ignore next */
        cov_1wbmpl9kr2().b[3][0]++;
        cov_1wbmpl9kr2().s[19]++;
        return {
          stock: 0,
          productId: productId,
          shopId: shopId,
          productName: null,
          shopName: null
        };
      } else
      /* istanbul ignore next */
      {
        cov_1wbmpl9kr2().b[3][1]++;
      }
      cov_1wbmpl9kr2().s[20]++;
      return {
        stock:
        /* istanbul ignore next */
        (cov_1wbmpl9kr2().b[4][0]++, inventoryItem.quantity) ||
        /* istanbul ignore next */
        (cov_1wbmpl9kr2().b[4][1]++, 0),
        productId: productId,
        shopId: shopId,
        productName: inventoryItem.product.name,
        shopName: inventoryItem.shop.name,
        price: inventoryItem.product.price
      };
    }, {
      stock: 0,
      productId: productId,
      shopId: shopId,
      productName: null,
      shopName: null
    }, `Failed to fetch stock for product ${productId} in shop ${shopId}`));
    /* istanbul ignore next */
    cov_1wbmpl9kr2().s[21]++;
    return _server.NextResponse.json({
      success: true,
      data: stockData,
      stock: stockData.stock // For backward compatibility
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1wbmpl9kr2().s[22]++;
    console.error("Error fetching product stock:", error);
    /* istanbul ignore next */
    cov_1wbmpl9kr2().s[23]++;
    return _server.NextResponse.json({
      success: false,
      message: "Internal server error",
      stock: 0
    }, {
      status: 500
    });
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,