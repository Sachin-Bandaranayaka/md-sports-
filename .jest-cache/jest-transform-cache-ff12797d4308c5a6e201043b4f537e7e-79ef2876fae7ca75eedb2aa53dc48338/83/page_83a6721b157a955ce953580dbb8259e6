6339e7f092217c04b89f4ad996c3e730
"use strict";

/* istanbul ignore next */
function cov_2dif0zy8zl() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/purchases/page.tsx";
  var hash = "2e05d58da9b8d7e8e7b5bafa64cd2d54abb07f27";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/purchases/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 29
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 26
        }
      },
      "6": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 48
        }
      },
      "7": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "8": {
        start: {
          line: 21,
          column: 17
        },
        end: {
          line: 21,
          column: 40
        }
      },
      "9": {
        start: {
          line: 22,
          column: 34
        },
        end: {
          line: 22,
          column: 105
        }
      },
      "10": {
        start: {
          line: 23,
          column: 42
        },
        end: {
          line: 23,
          column: 124
        }
      },
      "11": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 27,
          column: 6
        }
      },
      "12": {
        start: {
          line: 29,
          column: 19
        },
        end: {
          line: 29,
          column: 21
        }
      },
      "13": {
        start: {
          line: 30,
          column: 23
        },
        end: {
          line: 30,
          column: 25
        }
      },
      "14": {
        start: {
          line: 32,
          column: 24
        },
        end: {
          line: 35,
          column: 6
        }
      },
      "15": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 53
        }
      },
      "16": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 53
        }
      },
      "17": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 53
        }
      },
      "18": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 37,
          column: 53
        }
      },
      "19": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 65
        }
      },
      "20": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 38,
          column: 65
        }
      },
      "21": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 62
        }
      },
      "22": {
        start: {
          line: 39,
          column: 19
        },
        end: {
          line: 39,
          column: 62
        }
      },
      "23": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 56
        }
      },
      "24": {
        start: {
          line: 40,
          column: 17
        },
        end: {
          line: 40,
          column: 56
        }
      },
      "25": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "26": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 56
        }
      },
      "27": {
        start: {
          line: 44,
          column: 25
        },
        end: {
          line: 49,
          column: 10
        }
      },
      "28": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "29": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 104
        }
      },
      "30": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 56,
          column: 14
        }
      },
      "31": {
        start: {
          line: 58,
          column: 29
        },
        end: {
          line: 58,
          column: 50
        }
      },
      "32": {
        start: {
          line: 60,
          column: 25
        },
        end: {
          line: 60,
          column: 48
        }
      },
      "33": {
        start: {
          line: 61,
          column: 27
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "34": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 71,
          column: 10
        }
      },
      "35": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 66
        }
      },
      "36": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 78,
          column: 10
        }
      },
      "37": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 101,
          column: 5
        }
      },
      "38": {
        start: {
          line: 83,
          column: 25
        },
        end: {
          line: 91,
          column: 10
        }
      },
      "39": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "40": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 96
        }
      },
      "41": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 22
        }
      },
      "42": {
        start: {
          line: 96,
          column: 21
        },
        end: {
          line: 96,
          column: 42
        }
      },
      "43": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 74
        }
      },
      "44": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 58
        }
      },
      "45": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 18
        }
      },
      "46": {
        start: {
          line: 104,
          column: 24
        },
        end: {
          line: 104,
          column: 53
        }
      },
      "47": {
        start: {
          line: 105,
          column: 17
        },
        end: {
          line: 105,
          column: 60
        }
      },
      "48": {
        start: {
          line: 106,
          column: 21
        },
        end: {
          line: 106,
          column: 78
        }
      },
      "49": {
        start: {
          line: 107,
          column: 20
        },
        end: {
          line: 107,
          column: 43
        }
      },
      "50": {
        start: {
          line: 108,
          column: 25
        },
        end: {
          line: 108,
          column: 49
        }
      },
      "51": {
        start: {
          line: 109,
          column: 17
        },
        end: {
          line: 109,
          column: 52
        }
      },
      "52": {
        start: {
          line: 110,
          column: 18
        },
        end: {
          line: 110,
          column: 32
        }
      },
      "53": {
        start: {
          line: 111,
          column: 23
        },
        end: {
          line: 111,
          column: 49
        }
      },
      "54": {
        start: {
          line: 112,
          column: 25
        },
        end: {
          line: 112,
          column: 51
        }
      },
      "55": {
        start: {
          line: 113,
          column: 27
        },
        end: {
          line: 113,
          column: 57
        }
      },
      "56": {
        start: {
          line: 114,
          column: 28
        },
        end: {
          line: 114,
          column: 57
        }
      },
      "57": {
        start: {
          line: 115,
          column: 26
        },
        end: {
          line: 115,
          column: 53
        }
      },
      "58": {
        start: {
          line: 117,
          column: 38
        },
        end: {
          line: 120,
          column: 6
        }
      },
      "59": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 134,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 13
          },
          end: {
            line: 12,
            column: 14
          }
        },
        loc: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 16
          },
          end: {
            line: 15,
            column: 17
          }
        },
        loc: {
          start: {
            line: 15,
            column: 27
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 33
          }
        },
        loc: {
          start: {
            line: 24,
            column: 39
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 24
      },
      "4": {
        name: "fetchPurchaseInvoices",
        decl: {
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 36
          }
        },
        loc: {
          start: {
            line: 31,
            column: 107
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 31
      },
      "5": {
        name: "fetchSuppliers",
        decl: {
          start: {
            line: 81,
            column: 15
          },
          end: {
            line: 81,
            column: 29
          }
        },
        loc: {
          start: {
            line: 81,
            column: 39
          },
          end: {
            line: 102,
            column: 1
          }
        },
        line: 81
      },
      "6": {
        name: "PurchasesPage",
        decl: {
          start: {
            line: 103,
            column: 15
          },
          end: {
            line: 103,
            column: 28
          }
        },
        loc: {
          start: {
            line: 103,
            column: 67
          },
          end: {
            line: 135,
            column: 1
          }
        },
        line: 103
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 11
          },
          end: {
            line: 27,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 35
          },
          end: {
            line: 25,
            column: 38
          }
        }, {
          start: {
            line: 25,
            column: 41
          },
          end: {
            line: 27,
            column: 5
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 11
          },
          end: {
            line: 25,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 11
          },
          end: {
            line: 25,
            column: 14
          }
        }, {
          start: {
            line: 25,
            column: 18
          },
          end: {
            line: 25,
            column: 32
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 53
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 53
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 62
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 62
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "6": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "7": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "8": {
        loc: {
          start: {
            line: 60,
            column: 25
          },
          end: {
            line: 60,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 25
          },
          end: {
            line: 60,
            column: 42
          }
        }, {
          start: {
            line: 60,
            column: 46
          },
          end: {
            line: 60,
            column: 48
          }
        }],
        line: 60
      },
      "9": {
        loc: {
          start: {
            line: 61,
            column: 27
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 27
          },
          end: {
            line: 61,
            column: 50
          }
        }, {
          start: {
            line: 61,
            column: 54
          },
          end: {
            line: 66,
            column: 9
          }
        }],
        line: 61
      },
      "10": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "11": {
        loc: {
          start: {
            line: 97,
            column: 15
          },
          end: {
            line: 97,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 97,
            column: 30
          },
          end: {
            line: 97,
            column: 39
          }
        }, {
          start: {
            line: 97,
            column: 42
          },
          end: {
            line: 97,
            column: 73
          }
        }],
        line: 97
      },
      "12": {
        loc: {
          start: {
            line: 97,
            column: 42
          },
          end: {
            line: 97,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 97,
            column: 64
          },
          end: {
            line: 97,
            column: 68
          }
        }, {
          start: {
            line: 97,
            column: 71
          },
          end: {
            line: 97,
            column: 73
          }
        }],
        line: 97
      },
      "13": {
        loc: {
          start: {
            line: 105,
            column: 17
          },
          end: {
            line: 105,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 17
          },
          end: {
            line: 105,
            column: 40
          }
        }, {
          start: {
            line: 105,
            column: 44
          },
          end: {
            line: 105,
            column: 60
          }
        }],
        line: 105
      },
      "14": {
        loc: {
          start: {
            line: 106,
            column: 21
          },
          end: {
            line: 106,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 106,
            column: 62
          },
          end: {
            line: 106,
            column: 68
          }
        }, {
          start: {
            line: 106,
            column: 71
          },
          end: {
            line: 106,
            column: 78
          }
        }],
        line: 106
      },
      "15": {
        loc: {
          start: {
            line: 109,
            column: 26
          },
          end: {
            line: 109,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 26
          },
          end: {
            line: 109,
            column: 44
          }
        }, {
          start: {
            line: 109,
            column: 48
          },
          end: {
            line: 109,
            column: 51
          }
        }],
        line: 109
      },
      "16": {
        loc: {
          start: {
            line: 111,
            column: 23
          },
          end: {
            line: 111,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 23
          },
          end: {
            line: 111,
            column: 43
          }
        }, {
          start: {
            line: 111,
            column: 47
          },
          end: {
            line: 111,
            column: 49
          }
        }],
        line: 111
      },
      "17": {
        loc: {
          start: {
            line: 112,
            column: 25
          },
          end: {
            line: 112,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 25
          },
          end: {
            line: 112,
            column: 45
          }
        }, {
          start: {
            line: 112,
            column: 49
          },
          end: {
            line: 112,
            column: 51
          }
        }],
        line: 112
      },
      "18": {
        loc: {
          start: {
            line: 113,
            column: 27
          },
          end: {
            line: 113,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 27
          },
          end: {
            line: 113,
            column: 51
          }
        }, {
          start: {
            line: 113,
            column: 55
          },
          end: {
            line: 113,
            column: 57
          }
        }],
        line: 113
      },
      "19": {
        loc: {
          start: {
            line: 114,
            column: 28
          },
          end: {
            line: 114,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 28
          },
          end: {
            line: 114,
            column: 51
          }
        }, {
          start: {
            line: 114,
            column: 55
          },
          end: {
            line: 114,
            column: 57
          }
        }],
        line: 114
      },
      "20": {
        loc: {
          start: {
            line: 115,
            column: 26
          },
          end: {
            line: 115,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 26
          },
          end: {
            line: 115,
            column: 47
          }
        }, {
          start: {
            line: 115,
            column: 51
          },
          end: {
            line: 115,
            column: 53
          }
        }],
        line: 115
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/purchases/page.tsx"],
      sourcesContent: ["import { Suspense } from 'react';\nimport { headers } from 'next/headers';\nimport MainLayout from '@/components/layout/MainLayout';\nimport PurchaseListClient from '@/components/purchases/PurchaseListClient';\nimport { PurchaseInvoice, Supplier } from '@/types'; // Ensure types are available\n\n// Reduce revalidation time from 60 to 10 seconds for faster updates\nexport const revalidate = 10;\n\nconst ITEMS_PER_PAGE = 10; // Define how many items per page\n\nasync function fetchPurchaseInvoices(baseUrl: string, page: number, limit: number, search?: string, status?: string, supplierId?: string, startDate?: string, endDate?: string): Promise<{ invoices: PurchaseInvoice[], totalPages: number, currentPage: number }> {\n    const queryParams = new URLSearchParams({\n        page: page.toString(),\n        limit: limit.toString(),\n    });\n    if (search) queryParams.append('search', search);\n    if (status) queryParams.append('status', status);\n    if (supplierId) queryParams.append('supplierId', supplierId);\n    if (startDate) queryParams.append('startDate', startDate);\n    if (endDate) queryParams.append('endDate', endDate);\n\n    try {\n        // Add timestamp to bust cache and ensure fresh data\n        queryParams.append('_t', Date.now().toString());\n\n        const response = await fetch(`${baseUrl}/api/purchases?${queryParams.toString()}`, {\n            cache: 'no-store', // Never cache this request\n            next: { revalidate: 0 } // Force revalidation on each request\n        });\n\n        if (!response.ok) {\n            console.error('Failed to fetch purchase invoices:', response.status, await response.text());\n            return { invoices: [], totalPages: 0, currentPage: page };\n        }\n        const responseData = await response.json(); // Renamed to responseData to avoid conflict\n\n        // Assuming API returns { data: PurchaseInvoice[], pagination: { total: number, page: number, limit: number, totalPages: number } }\n        const invoices = responseData.data || [];\n        const pagination = responseData.pagination || { total: 0, page: page, limit: limit, totalPages: 0 };\n\n        return {\n            invoices: invoices,\n            totalPages: pagination.totalPages,\n            currentPage: pagination.page\n        };\n\n    } catch (error) {\n        console.error('Error fetching purchase invoices:', error);\n        return { invoices: [], totalPages: 0, currentPage: page };\n    }\n}\n\nasync function fetchSuppliers(baseUrl: string): Promise<Supplier[]> {\n    try {\n        const response = await fetch(`${baseUrl}/api/suppliers`, {\n            next: { revalidate: 60, tags: ['suppliers'] }, // Cache suppliers for 1 minute with tags\n            cache: 'force-cache'\n        });\n        if (!response.ok) {\n            console.error('Failed to fetch suppliers:', response.status, await response.text());\n            return [];\n        }\n        const data = await response.json();\n        return data.success ? data.data : (Array.isArray(data) ? data : []); // API might return array directly or { success: true, data: [] }\n    } catch (error) {\n        console.error('Error fetching suppliers:', error);\n        return [];\n    }\n}\n\nexport default async function PurchasesPage({\n    searchParams: passedSearchParams\n}: {\n    searchParams: { [key: string]: string | string[] | undefined }\n}) {\n    const headersList = await headers();\n    const host = headersList.get('host') || 'localhost:3000';\n    const protocol = process.env.NODE_ENV === 'development' ? 'http' : 'https';\n    const baseUrl = `${protocol}://${host}`;\n\n    const searchParams = await passedSearchParams;\n\n    const page = parseInt(searchParams?.page as string || '1');\n    const limit = ITEMS_PER_PAGE;\n    const searchTerm = searchParams?.search as string || '';\n    const statusFilter = searchParams?.status as string || '';\n    const supplierFilter = searchParams?.supplierId as string || '';\n    const startDateFilter = searchParams?.startDate as string || '';\n    const endDateFilter = searchParams?.endDate as string || '';\n\n    // Fetch data in parallel\n    const [invoicesData, suppliers] = await Promise.all([\n        fetchPurchaseInvoices(baseUrl, page, limit, searchTerm, statusFilter, supplierFilter, startDateFilter, endDateFilter),\n        fetchSuppliers(baseUrl)\n    ]);\n\n    return (\n        <MainLayout>\n            <Suspense fallback={<div className=\"text-center p-8\">Loading purchase invoices...</div>}>\n                <PurchaseListClient\n                    initialPurchaseInvoices={invoicesData.invoices}\n                    initialSuppliers={suppliers}\n                    initialTotalPages={invoicesData.totalPages}\n                    initialCurrentPage={invoicesData.currentPage}\n                />\n            </Suspense>\n        </MainLayout>\n    );\n}"],
      names: ["PurchasesPage", "revalidate", "ITEMS_PER_PAGE", "fetchPurchaseInvoices", "baseUrl", "page", "limit", "search", "status", "supplierId", "startDate", "endDate", "queryParams", "URLSearchParams", "toString", "append", "Date", "now", "response", "fetch", "cache", "next", "ok", "console", "error", "text", "invoices", "totalPages", "currentPage", "responseData", "json", "data", "pagination", "total", "fetchSuppliers", "tags", "success", "Array", "isArray", "searchParams", "passedSearchParams", "headersList", "headers", "host", "get", "protocol", "process", "env", "NODE_ENV", "parseInt", "searchTerm", "statusFilter", "supplierFilter", "startDateFilter", "endDateFilter", "invoicesData", "suppliers", "Promise", "all", "MainLayout", "Suspense", "fallback", "div", "className", "PurchaseListClient", "initialPurchaseInvoices", "initialSuppliers", "initialTotalPages", "initialCurrentPage"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2e05d58da9b8d7e8e7b5bafa64cd2d54abb07f27"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2dif0zy8zl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2dif0zy8zl();
cov_2dif0zy8zl().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2dif0zy8zl().f[0]++;
  cov_2dif0zy8zl().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2dif0zy8zl().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2dif0zy8zl().s[3]++;
_export(exports, {
  default: function () {
    /* istanbul ignore next */
    cov_2dif0zy8zl().f[1]++;
    cov_2dif0zy8zl().s[4]++;
    return PurchasesPage;
  },
  revalidate: function () {
    /* istanbul ignore next */
    cov_2dif0zy8zl().f[2]++;
    cov_2dif0zy8zl().s[5]++;
    return revalidate;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2dif0zy8zl().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_2dif0zy8zl().s[7]++, require("react"));
const _headers =
/* istanbul ignore next */
(cov_2dif0zy8zl().s[8]++, require("next/headers"));
const _MainLayout =
/* istanbul ignore next */
(/*#__PURE__*/cov_2dif0zy8zl().s[9]++, _interop_require_default(require("../../components/layout/MainLayout")));
const _PurchaseListClient =
/* istanbul ignore next */
(/*#__PURE__*/cov_2dif0zy8zl().s[10]++, _interop_require_default(require("../../components/purchases/PurchaseListClient")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2dif0zy8zl().f[3]++;
  cov_2dif0zy8zl().s[11]++;
  return /* istanbul ignore next */(cov_2dif0zy8zl().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2dif0zy8zl().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2dif0zy8zl().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2dif0zy8zl().b[0][1]++, {
    default: obj
  });
}
const revalidate =
/* istanbul ignore next */
(cov_2dif0zy8zl().s[12]++, 10);
const ITEMS_PER_PAGE =
/* istanbul ignore next */
(cov_2dif0zy8zl().s[13]++, 10); // Define how many items per page
async function fetchPurchaseInvoices(baseUrl, page, limit, search, status, supplierId, startDate, endDate) {
  /* istanbul ignore next */
  cov_2dif0zy8zl().f[4]++;
  const queryParams =
  /* istanbul ignore next */
  (cov_2dif0zy8zl().s[14]++, new URLSearchParams({
    page: page.toString(),
    limit: limit.toString()
  }));
  /* istanbul ignore next */
  cov_2dif0zy8zl().s[15]++;
  if (search) {
    /* istanbul ignore next */
    cov_2dif0zy8zl().b[2][0]++;
    cov_2dif0zy8zl().s[16]++;
    queryParams.append("search", search);
  } else
  /* istanbul ignore next */
  {
    cov_2dif0zy8zl().b[2][1]++;
  }
  cov_2dif0zy8zl().s[17]++;
  if (status) {
    /* istanbul ignore next */
    cov_2dif0zy8zl().b[3][0]++;
    cov_2dif0zy8zl().s[18]++;
    queryParams.append("status", status);
  } else
  /* istanbul ignore next */
  {
    cov_2dif0zy8zl().b[3][1]++;
  }
  cov_2dif0zy8zl().s[19]++;
  if (supplierId) {
    /* istanbul ignore next */
    cov_2dif0zy8zl().b[4][0]++;
    cov_2dif0zy8zl().s[20]++;
    queryParams.append("supplierId", supplierId);
  } else
  /* istanbul ignore next */
  {
    cov_2dif0zy8zl().b[4][1]++;
  }
  cov_2dif0zy8zl().s[21]++;
  if (startDate) {
    /* istanbul ignore next */
    cov_2dif0zy8zl().b[5][0]++;
    cov_2dif0zy8zl().s[22]++;
    queryParams.append("startDate", startDate);
  } else
  /* istanbul ignore next */
  {
    cov_2dif0zy8zl().b[5][1]++;
  }
  cov_2dif0zy8zl().s[23]++;
  if (endDate) {
    /* istanbul ignore next */
    cov_2dif0zy8zl().b[6][0]++;
    cov_2dif0zy8zl().s[24]++;
    queryParams.append("endDate", endDate);
  } else
  /* istanbul ignore next */
  {
    cov_2dif0zy8zl().b[6][1]++;
  }
  cov_2dif0zy8zl().s[25]++;
  try {
    /* istanbul ignore next */
    cov_2dif0zy8zl().s[26]++;
    // Add timestamp to bust cache and ensure fresh data
    queryParams.append("_t", Date.now().toString());
    const response =
    /* istanbul ignore next */
    (cov_2dif0zy8zl().s[27]++, await fetch(`${baseUrl}/api/purchases?${queryParams.toString()}`, {
      cache: "no-store",
      next: {
        revalidate: 0
      } // Force revalidation on each request
    }));
    /* istanbul ignore next */
    cov_2dif0zy8zl().s[28]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2dif0zy8zl().b[7][0]++;
      cov_2dif0zy8zl().s[29]++;
      console.error("Failed to fetch purchase invoices:", response.status, await response.text());
      /* istanbul ignore next */
      cov_2dif0zy8zl().s[30]++;
      return {
        invoices: [],
        totalPages: 0,
        currentPage: page
      };
    } else
    /* istanbul ignore next */
    {
      cov_2dif0zy8zl().b[7][1]++;
    }
    const responseData =
    /* istanbul ignore next */
    (cov_2dif0zy8zl().s[31]++, await response.json()); // Renamed to responseData to avoid conflict
    // Assuming API returns { data: PurchaseInvoice[], pagination: { total: number, page: number, limit: number, totalPages: number } }
    const invoices =
    /* istanbul ignore next */
    (cov_2dif0zy8zl().s[32]++,
    /* istanbul ignore next */
    (cov_2dif0zy8zl().b[8][0]++, responseData.data) ||
    /* istanbul ignore next */
    (cov_2dif0zy8zl().b[8][1]++, []));
    const pagination =
    /* istanbul ignore next */
    (cov_2dif0zy8zl().s[33]++,
    /* istanbul ignore next */
    (cov_2dif0zy8zl().b[9][0]++, responseData.pagination) ||
    /* istanbul ignore next */
    (cov_2dif0zy8zl().b[9][1]++, {
      total: 0,
      page: page,
      limit: limit,
      totalPages: 0
    }));
    /* istanbul ignore next */
    cov_2dif0zy8zl().s[34]++;
    return {
      invoices: invoices,
      totalPages: pagination.totalPages,
      currentPage: pagination.page
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_2dif0zy8zl().s[35]++;
    console.error("Error fetching purchase invoices:", error);
    /* istanbul ignore next */
    cov_2dif0zy8zl().s[36]++;
    return {
      invoices: [],
      totalPages: 0,
      currentPage: page
    };
  }
}
async function fetchSuppliers(baseUrl) {
  /* istanbul ignore next */
  cov_2dif0zy8zl().f[5]++;
  cov_2dif0zy8zl().s[37]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_2dif0zy8zl().s[38]++, await fetch(`${baseUrl}/api/suppliers`, {
      next: {
        revalidate: 60,
        tags: ["suppliers"]
      },
      cache: "force-cache"
    }));
    /* istanbul ignore next */
    cov_2dif0zy8zl().s[39]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2dif0zy8zl().b[10][0]++;
      cov_2dif0zy8zl().s[40]++;
      console.error("Failed to fetch suppliers:", response.status, await response.text());
      /* istanbul ignore next */
      cov_2dif0zy8zl().s[41]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_2dif0zy8zl().b[10][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_2dif0zy8zl().s[42]++, await response.json());
    /* istanbul ignore next */
    cov_2dif0zy8zl().s[43]++;
    return data.success ?
    /* istanbul ignore next */
    (cov_2dif0zy8zl().b[11][0]++, data.data) :
    /* istanbul ignore next */
    (cov_2dif0zy8zl().b[11][1]++, Array.isArray(data) ?
    /* istanbul ignore next */
    (cov_2dif0zy8zl().b[12][0]++, data) :
    /* istanbul ignore next */
    (cov_2dif0zy8zl().b[12][1]++, [])); // API might return array directly or { success: true, data: [] }
  } catch (error) {
    /* istanbul ignore next */
    cov_2dif0zy8zl().s[44]++;
    console.error("Error fetching suppliers:", error);
    /* istanbul ignore next */
    cov_2dif0zy8zl().s[45]++;
    return [];
  }
}
async function PurchasesPage({
  searchParams: passedSearchParams
}) {
  /* istanbul ignore next */
  cov_2dif0zy8zl().f[6]++;
  const headersList =
  /* istanbul ignore next */
  (cov_2dif0zy8zl().s[46]++, await (0, _headers.headers)());
  const host =
  /* istanbul ignore next */
  (cov_2dif0zy8zl().s[47]++,
  /* istanbul ignore next */
  (cov_2dif0zy8zl().b[13][0]++, headersList.get("host")) ||
  /* istanbul ignore next */
  (cov_2dif0zy8zl().b[13][1]++, "localhost:3000"));
  const protocol =
  /* istanbul ignore next */
  (cov_2dif0zy8zl().s[48]++, process.env.NODE_ENV === "development" ?
  /* istanbul ignore next */
  (cov_2dif0zy8zl().b[14][0]++, "http") :
  /* istanbul ignore next */
  (cov_2dif0zy8zl().b[14][1]++, "https"));
  const baseUrl =
  /* istanbul ignore next */
  (cov_2dif0zy8zl().s[49]++, `${protocol}://${host}`);
  const searchParams =
  /* istanbul ignore next */
  (cov_2dif0zy8zl().s[50]++, await passedSearchParams);
  const page =
  /* istanbul ignore next */
  (cov_2dif0zy8zl().s[51]++, parseInt(
  /* istanbul ignore next */
  (cov_2dif0zy8zl().b[15][0]++, searchParams?.page) ||
  /* istanbul ignore next */
  (cov_2dif0zy8zl().b[15][1]++, "1")));
  const limit =
  /* istanbul ignore next */
  (cov_2dif0zy8zl().s[52]++, ITEMS_PER_PAGE);
  const searchTerm =
  /* istanbul ignore next */
  (cov_2dif0zy8zl().s[53]++,
  /* istanbul ignore next */
  (cov_2dif0zy8zl().b[16][0]++, searchParams?.search) ||
  /* istanbul ignore next */
  (cov_2dif0zy8zl().b[16][1]++, ""));
  const statusFilter =
  /* istanbul ignore next */
  (cov_2dif0zy8zl().s[54]++,
  /* istanbul ignore next */
  (cov_2dif0zy8zl().b[17][0]++, searchParams?.status) ||
  /* istanbul ignore next */
  (cov_2dif0zy8zl().b[17][1]++, ""));
  const supplierFilter =
  /* istanbul ignore next */
  (cov_2dif0zy8zl().s[55]++,
  /* istanbul ignore next */
  (cov_2dif0zy8zl().b[18][0]++, searchParams?.supplierId) ||
  /* istanbul ignore next */
  (cov_2dif0zy8zl().b[18][1]++, ""));
  const startDateFilter =
  /* istanbul ignore next */
  (cov_2dif0zy8zl().s[56]++,
  /* istanbul ignore next */
  (cov_2dif0zy8zl().b[19][0]++, searchParams?.startDate) ||
  /* istanbul ignore next */
  (cov_2dif0zy8zl().b[19][1]++, ""));
  const endDateFilter =
  /* istanbul ignore next */
  (cov_2dif0zy8zl().s[57]++,
  /* istanbul ignore next */
  (cov_2dif0zy8zl().b[20][0]++, searchParams?.endDate) ||
  /* istanbul ignore next */
  (cov_2dif0zy8zl().b[20][1]++, ""));
  // Fetch data in parallel
  const [invoicesData, suppliers] =
  /* istanbul ignore next */
  (cov_2dif0zy8zl().s[58]++, await Promise.all([fetchPurchaseInvoices(baseUrl, page, limit, searchTerm, statusFilter, supplierFilter, startDateFilter, endDateFilter), fetchSuppliers(baseUrl)]));
  /* istanbul ignore next */
  cov_2dif0zy8zl().s[59]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_MainLayout.default, {
    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_react.Suspense, {
      fallback: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "text-center p-8",
        children: "Loading purchase invoices..."
      }),
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_PurchaseListClient.default, {
        initialPurchaseInvoices: invoicesData.invoices,
        initialSuppliers: suppliers,
        initialTotalPages: invoicesData.totalPages,
        initialCurrentPage: invoicesData.currentPage
      })
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,