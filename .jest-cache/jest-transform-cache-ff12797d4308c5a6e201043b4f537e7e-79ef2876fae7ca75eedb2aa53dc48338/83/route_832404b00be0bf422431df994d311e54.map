{"version":3,"names":["GET","req","cov_130xwesg7a","f","s","authHeader","headers","get","b","startsWith","console","error","_server","NextResponse","json","success","message","status","token","split","log","substring","user","id","username","fullName","email","roleId","roleName","shopId","permissions","time","tokenData","_authService","verifyToken","timeEnd","getUserFromDecodedPayload","name","_jsonwebtoken","default","TokenExpiredError","errorType","JsonWebTokenError"],"sources":["/Users/sachin/Documents/md-sports-/src/app/api/auth/validate/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { verifyToken, getUserFromDecodedPayload } from '@/services/authService';\nimport jwt from 'jsonwebtoken'; // Import jwt to access error types\n\nexport async function GET(req: NextRequest) {\n    try {\n        // Get token from Authorization header\n        const authHeader = req.headers.get('authorization');\n        if (!authHeader || !authHeader.startsWith('Bearer ')) {\n            console.error('No valid Authorization header found');\n            return NextResponse.json(\n                { success: false, message: 'No token provided' },\n                { status: 401 }\n            );\n        }\n\n        const token = authHeader.split(' ')[1];\n        console.log('Token received for validation:', token.substring(0, 10) + '...');\n\n        // Handle dev-token case\n        if (token === 'dev-token') {\n            console.log('Dev token detected, returning mock user data');\n            return NextResponse.json({\n                success: true,\n                user: {\n                    id: 'dev-user',\n                    username: 'dev-user',\n                    fullName: 'Development User',\n                    email: 'dev@example.com',\n                    roleId: 'dev-role',\n                    roleName: 'Shop Staff',\n                    shopId: 'cmbtr9q6l000061romoxi7uvf',\n                    permissions: ['read:products', 'write:products', 'read:invoices', 'write:invoices', 'user:manage', 'shop:manage', 'inventory:manage', 'settings:manage', 'sales:manage', 'sales:create:shop']\n                }\n            });\n        }\n\n        // Use optimized async verifyToken with caching\n        console.time('token validation time');\n        const tokenData = await verifyToken(token);\n        console.timeEnd('token validation time');\n\n        // If verifyToken didn't throw, tokenData is valid and populated\n        console.time('user lookup time');\n        const user = await getUserFromDecodedPayload(tokenData);\n        console.timeEnd('user lookup time');\n\n        if (!user) {\n            console.error('User not found from token payload or user is inactive');\n            return NextResponse.json(\n                { success: false, message: 'User not found or inactive' },\n                { status: 401 }\n            );\n        }\n\n        // Permissions are now part of the user object returned by getUserFromDecodedPayload\n        console.log('User validated successfully:', user.id, user.username, 'with permissions:', user.permissions);\n\n        // Return user data\n        return NextResponse.json({\n            success: true,\n            user: {\n                id: user.id,\n                username: user.username,\n                fullName: user.name,\n                email: user.email,\n                roleId: user.roleId,\n                roleName: user.roleName,\n                shopId: user.shopId,\n                permissions: user.permissions\n            }\n        });\n    } catch (error) {\n        console.error('Token validation error in GET /api/auth/validate:', error);\n        if (error instanceof jwt.TokenExpiredError) {\n            return NextResponse.json(\n                { success: false, message: 'Token expired', errorType: 'TOKEN_EXPIRED' },\n                { status: 401 }\n            );\n        }\n        if (error instanceof jwt.JsonWebTokenError) { // Catches other JWT errors (e.g. invalid signature)\n            return NextResponse.json(\n                { success: false, message: 'Invalid token', errorType: 'TOKEN_INVALID' },\n                { status: 401 }\n            );\n        }\n        // Fallback for other unexpected errors not related to JWT verification specifically\n        return NextResponse.json(\n            { success: false, message: 'Token validation failed due to an unexpected error' },\n            { status: 500 }\n        );\n    }\n}"],"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","ignoreList":[]}