d9a9b939975894a2a1f9fe0cc39d9033
"use strict";

/* istanbul ignore next */
function cov_2c69akqyzs() {
  var path = "/Users/sachin/Documents/md-sports-/src/lib/models/Category.ts";
  var hash = "0c4c0b6939e2687e82351505087111fcc4e81b2a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/lib/models/Category.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 19
        },
        end: {
          line: 11,
          column: 39
        }
      },
      "4": {
        start: {
          line: 12,
          column: 26
        },
        end: {
          line: 12,
          column: 68
        }
      },
      "5": {
        start: {
          line: 13,
          column: 31
        },
        end: {
          line: 13,
          column: 77
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 17,
          column: 6
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 27,
          column: 11
        }
      },
      "8": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 72,
          column: 3
        }
      },
      "9": {
        start: {
          line: 74,
          column: 0
        },
        end: {
          line: 78,
          column: 3
        }
      },
      "10": {
        start: {
          line: 79,
          column: 0
        },
        end: {
          line: 82,
          column: 3
        }
      },
      "11": {
        start: {
          line: 83,
          column: 17
        },
        end: {
          line: 83,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 33
          }
        },
        loc: {
          start: {
            line: 14,
            column: 39
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 24
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 21
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 17,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 35
          },
          end: {
            line: 15,
            column: 38
          }
        }, {
          start: {
            line: 15,
            column: 41
          },
          end: {
            line: 17,
            column: 5
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 14
          }
        }, {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 32
          }
        }],
        line: 15
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/lib/models/Category.ts"],
      sourcesContent: ["import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../db';\nimport Product from './Product';\n\ninterface CategoryAttributes {\n    id: number;\n    name: string;\n    description?: string;\n    parentId?: number;\n    isActive: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n}\n\ninterface CategoryCreationAttributes extends Optional<CategoryAttributes, 'id' | 'createdAt' | 'updatedAt' | 'isActive'> { }\n\nclass Category extends Model<CategoryAttributes, CategoryCreationAttributes> implements CategoryAttributes {\n    public id!: number;\n    public name!: string;\n    public description!: string;\n    public parentId!: number;\n    public isActive!: boolean;\n\n    // Timestamps\n    public readonly createdAt!: Date;\n    public readonly updatedAt!: Date;\n\n    // Methods defined in the design document\n    public async getProducts(): Promise<Product[]> {\n        return Product.findAll({\n            where: {\n                categoryId: this.id,\n                isActive: true\n            }\n        });\n    }\n}\n\nCategory.init({\n    id: {\n        type: DataTypes.INTEGER,\n        autoIncrement: true,\n        primaryKey: true,\n    },\n    name: {\n        type: DataTypes.STRING,\n        allowNull: false,\n    },\n    description: {\n        type: DataTypes.TEXT,\n        allowNull: true,\n    },\n    parentId: {\n        type: DataTypes.INTEGER,\n        allowNull: true,\n        references: {\n            model: 'categories',\n            key: 'id'\n        }\n    },\n    isActive: {\n        type: DataTypes.BOOLEAN,\n        allowNull: false,\n        defaultValue: true,\n    },\n    createdAt: {\n        type: DataTypes.DATE,\n        allowNull: false,\n        defaultValue: DataTypes.NOW,\n    },\n    updatedAt: {\n        type: DataTypes.DATE,\n        allowNull: false,\n        defaultValue: DataTypes.NOW,\n    },\n}, {\n    sequelize,\n    modelName: 'Category',\n    tableName: 'categories',\n    timestamps: true,\n});\n\n// Set up associations\nCategory.hasMany(Product, {\n    sourceKey: 'id',\n    foreignKey: 'categoryId',\n    as: 'products'\n});\n\nProduct.belongsTo(Category, {\n    foreignKey: 'categoryId',\n    as: 'category'\n});\n\nexport default Category; "],
      names: ["Category", "Model", "getProducts", "Product", "findAll", "where", "categoryId", "id", "isActive", "init", "type", "DataTypes", "INTEGER", "autoIncrement", "primaryKey", "name", "STRING", "allowNull", "description", "TEXT", "parentId", "references", "model", "key", "BOOLEAN", "defaultValue", "createdAt", "DATE", "NOW", "updatedAt", "sequelize", "modelName", "tableName", "timestamps", "hasMany", "sourceKey", "foreignKey", "as", "belongsTo"],
      mappings: ";;;;+BA8FA;;;eAAA;;;2BA9F2C;2DACrB;gEACF;;;;;;AAcpB,MAAMA,iBAAiBC,gBAAK;IAWxB,yCAAyC;IACzC,MAAaC,cAAkC;QAC3C,OAAOC,gBAAO,CAACC,OAAO,CAAC;YACnBC,OAAO;gBACHC,YAAY,IAAI,CAACC,EAAE;gBACnBC,UAAU;YACd;QACJ;IACJ;AACJ;AAEAR,SAASS,IAAI,CAAC;IACVF,IAAI;QACAG,MAAMC,oBAAS,CAACC,OAAO;QACvBC,eAAe;QACfC,YAAY;IAChB;IACAC,MAAM;QACFL,MAAMC,oBAAS,CAACK,MAAM;QACtBC,WAAW;IACf;IACAC,aAAa;QACTR,MAAMC,oBAAS,CAACQ,IAAI;QACpBF,WAAW;IACf;IACAG,UAAU;QACNV,MAAMC,oBAAS,CAACC,OAAO;QACvBK,WAAW;QACXI,YAAY;YACRC,OAAO;YACPC,KAAK;QACT;IACJ;IACAf,UAAU;QACNE,MAAMC,oBAAS,CAACa,OAAO;QACvBP,WAAW;QACXQ,cAAc;IAClB;IACAC,WAAW;QACPhB,MAAMC,oBAAS,CAACgB,IAAI;QACpBV,WAAW;QACXQ,cAAcd,oBAAS,CAACiB,GAAG;IAC/B;IACAC,WAAW;QACPnB,MAAMC,oBAAS,CAACgB,IAAI;QACpBV,WAAW;QACXQ,cAAcd,oBAAS,CAACiB,GAAG;IAC/B;AACJ,GAAG;IACCE,WAAAA,WAAS;IACTC,WAAW;IACXC,WAAW;IACXC,YAAY;AAChB;AAEA,sBAAsB;AACtBjC,SAASkC,OAAO,CAAC/B,gBAAO,EAAE;IACtBgC,WAAW;IACXC,YAAY;IACZC,IAAI;AACR;AAEAlC,gBAAO,CAACmC,SAAS,CAACtC,UAAU;IACxBoC,YAAY;IACZC,IAAI;AACR;MAEA,WAAerC"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0c4c0b6939e2687e82351505087111fcc4e81b2a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2c69akqyzs = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2c69akqyzs();
cov_2c69akqyzs().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2c69akqyzs().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2c69akqyzs().f[0]++;
    cov_2c69akqyzs().s[2]++;
    return _default;
  }
});
const _sequelize =
/* istanbul ignore next */
(cov_2c69akqyzs().s[3]++, require("sequelize"));
const _db =
/* istanbul ignore next */
(/*#__PURE__*/cov_2c69akqyzs().s[4]++, _interop_require_default(require("../db")));
const _Product =
/* istanbul ignore next */
(/*#__PURE__*/cov_2c69akqyzs().s[5]++, _interop_require_default(require("./Product")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2c69akqyzs().f[1]++;
  cov_2c69akqyzs().s[6]++;
  return /* istanbul ignore next */(cov_2c69akqyzs().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2c69akqyzs().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2c69akqyzs().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2c69akqyzs().b[0][1]++, {
    default: obj
  });
}
class Category extends
/* istanbul ignore next */
(_sequelize.Model) {
  // Methods defined in the design document
  async getProducts() {
    /* istanbul ignore next */
    cov_2c69akqyzs().f[2]++;
    cov_2c69akqyzs().s[7]++;
    return _Product.default.findAll({
      where: {
        categoryId: this.id,
        isActive: true
      }
    });
  }
}
/* istanbul ignore next */
cov_2c69akqyzs().s[8]++;
Category.init({
  id: {
    type: _sequelize.DataTypes.INTEGER,
    autoIncrement: true,
    primaryKey: true
  },
  name: {
    type: _sequelize.DataTypes.STRING,
    allowNull: false
  },
  description: {
    type: _sequelize.DataTypes.TEXT,
    allowNull: true
  },
  parentId: {
    type: _sequelize.DataTypes.INTEGER,
    allowNull: true,
    references: {
      model: "categories",
      key: "id"
    }
  },
  isActive: {
    type: _sequelize.DataTypes.BOOLEAN,
    allowNull: false,
    defaultValue: true
  },
  createdAt: {
    type: _sequelize.DataTypes.DATE,
    allowNull: false,
    defaultValue: _sequelize.DataTypes.NOW
  },
  updatedAt: {
    type: _sequelize.DataTypes.DATE,
    allowNull: false,
    defaultValue: _sequelize.DataTypes.NOW
  }
}, {
  sequelize: _db.default,
  modelName: "Category",
  tableName: "categories",
  timestamps: true
});
// Set up associations
/* istanbul ignore next */
cov_2c69akqyzs().s[9]++;
Category.hasMany(_Product.default, {
  sourceKey: "id",
  foreignKey: "categoryId",
  as: "products"
});
/* istanbul ignore next */
cov_2c69akqyzs().s[10]++;
_Product.default.belongsTo(Category, {
  foreignKey: "categoryId",
  as: "category"
});
const _default =
/* istanbul ignore next */
(cov_2c69akqyzs().s[11]++, Category);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGVmYXVsdCIsIkNhdGVnb3J5IiwiX3NlcXVlbGl6ZSIsIk1vZGVsIiwiZ2V0UHJvZHVjdHMiLCJjb3ZfMmM2OWFrcXl6cyIsImYiLCJzIiwiX1Byb2R1Y3QiLCJkZWZhdWx0IiwiZmluZEFsbCIsIndoZXJlIiwiY2F0ZWdvcnlJZCIsImlkIiwiaXNBY3RpdmUiLCJpbml0IiwidHlwZSIsIkRhdGFUeXBlcyIsIklOVEVHRVIiLCJhdXRvSW5jcmVtZW50IiwicHJpbWFyeUtleSIsIm5hbWUiLCJTVFJJTkciLCJhbGxvd051bGwiLCJkZXNjcmlwdGlvbiIsIlRFWFQiLCJwYXJlbnRJZCIsInJlZmVyZW5jZXMiLCJtb2RlbCIsImtleSIsIkJPT0xFQU4iLCJkZWZhdWx0VmFsdWUiLCJjcmVhdGVkQXQiLCJEQVRFIiwiTk9XIiwidXBkYXRlZEF0Iiwic2VxdWVsaXplIiwiX2RiIiwibW9kZWxOYW1lIiwidGFibGVOYW1lIiwidGltZXN0YW1wcyIsImhhc01hbnkiLCJzb3VyY2VLZXkiLCJmb3JlaWduS2V5IiwiYXMiLCJiZWxvbmdzVG8iXSwic291cmNlcyI6WyIvVXNlcnMvc2FjaGluL0RvY3VtZW50cy9tZC1zcG9ydHMtL3NyYy9saWIvbW9kZWxzL0NhdGVnb3J5LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERhdGFUeXBlcywgTW9kZWwsIE9wdGlvbmFsIH0gZnJvbSAnc2VxdWVsaXplJztcbmltcG9ydCBzZXF1ZWxpemUgZnJvbSAnLi4vZGInO1xuaW1wb3J0IFByb2R1Y3QgZnJvbSAnLi9Qcm9kdWN0JztcblxuaW50ZXJmYWNlIENhdGVnb3J5QXR0cmlidXRlcyB7XG4gICAgaWQ6IG51bWJlcjtcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gICAgcGFyZW50SWQ/OiBudW1iZXI7XG4gICAgaXNBY3RpdmU6IGJvb2xlYW47XG4gICAgY3JlYXRlZEF0OiBEYXRlO1xuICAgIHVwZGF0ZWRBdDogRGF0ZTtcbn1cblxuaW50ZXJmYWNlIENhdGVnb3J5Q3JlYXRpb25BdHRyaWJ1dGVzIGV4dGVuZHMgT3B0aW9uYWw8Q2F0ZWdvcnlBdHRyaWJ1dGVzLCAnaWQnIHwgJ2NyZWF0ZWRBdCcgfCAndXBkYXRlZEF0JyB8ICdpc0FjdGl2ZSc+IHsgfVxuXG5jbGFzcyBDYXRlZ29yeSBleHRlbmRzIE1vZGVsPENhdGVnb3J5QXR0cmlidXRlcywgQ2F0ZWdvcnlDcmVhdGlvbkF0dHJpYnV0ZXM+IGltcGxlbWVudHMgQ2F0ZWdvcnlBdHRyaWJ1dGVzIHtcbiAgICBwdWJsaWMgaWQhOiBudW1iZXI7XG4gICAgcHVibGljIG5hbWUhOiBzdHJpbmc7XG4gICAgcHVibGljIGRlc2NyaXB0aW9uITogc3RyaW5nO1xuICAgIHB1YmxpYyBwYXJlbnRJZCE6IG51bWJlcjtcbiAgICBwdWJsaWMgaXNBY3RpdmUhOiBib29sZWFuO1xuXG4gICAgLy8gVGltZXN0YW1wc1xuICAgIHB1YmxpYyByZWFkb25seSBjcmVhdGVkQXQhOiBEYXRlO1xuICAgIHB1YmxpYyByZWFkb25seSB1cGRhdGVkQXQhOiBEYXRlO1xuXG4gICAgLy8gTWV0aG9kcyBkZWZpbmVkIGluIHRoZSBkZXNpZ24gZG9jdW1lbnRcbiAgICBwdWJsaWMgYXN5bmMgZ2V0UHJvZHVjdHMoKTogUHJvbWlzZTxQcm9kdWN0W10+IHtcbiAgICAgICAgcmV0dXJuIFByb2R1Y3QuZmluZEFsbCh7XG4gICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgIGNhdGVnb3J5SWQ6IHRoaXMuaWQsXG4gICAgICAgICAgICAgICAgaXNBY3RpdmU6IHRydWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG5DYXRlZ29yeS5pbml0KHtcbiAgICBpZDoge1xuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICAgICAgYXV0b0luY3JlbWVudDogdHJ1ZSxcbiAgICAgICAgcHJpbWFyeUtleTogdHJ1ZSxcbiAgICB9LFxuICAgIG5hbWU6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICB9LFxuICAgIGRlc2NyaXB0aW9uOiB7XG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5URVhULFxuICAgICAgICBhbGxvd051bGw6IHRydWUsXG4gICAgfSxcbiAgICBwYXJlbnRJZDoge1xuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICAgICAgYWxsb3dOdWxsOiB0cnVlLFxuICAgICAgICByZWZlcmVuY2VzOiB7XG4gICAgICAgICAgICBtb2RlbDogJ2NhdGVnb3JpZXMnLFxuICAgICAgICAgICAga2V5OiAnaWQnXG4gICAgICAgIH1cbiAgICB9LFxuICAgIGlzQWN0aXZlOiB7XG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5CT09MRUFOLFxuICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgICBkZWZhdWx0VmFsdWU6IHRydWUsXG4gICAgfSxcbiAgICBjcmVhdGVkQXQ6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLkRBVEUsXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogRGF0YVR5cGVzLk5PVyxcbiAgICB9LFxuICAgIHVwZGF0ZWRBdDoge1xuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuREFURSxcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgICAgZGVmYXVsdFZhbHVlOiBEYXRhVHlwZXMuTk9XLFxuICAgIH0sXG59LCB7XG4gICAgc2VxdWVsaXplLFxuICAgIG1vZGVsTmFtZTogJ0NhdGVnb3J5JyxcbiAgICB0YWJsZU5hbWU6ICdjYXRlZ29yaWVzJyxcbiAgICB0aW1lc3RhbXBzOiB0cnVlLFxufSk7XG5cbi8vIFNldCB1cCBhc3NvY2lhdGlvbnNcbkNhdGVnb3J5Lmhhc01hbnkoUHJvZHVjdCwge1xuICAgIHNvdXJjZUtleTogJ2lkJyxcbiAgICBmb3JlaWduS2V5OiAnY2F0ZWdvcnlJZCcsXG4gICAgYXM6ICdwcm9kdWN0cydcbn0pO1xuXG5Qcm9kdWN0LmJlbG9uZ3NUbyhDYXRlZ29yeSwge1xuICAgIGZvcmVpZ25LZXk6ICdjYXRlZ29yeUlkJyxcbiAgICBhczogJ2NhdGVnb3J5J1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IENhdGVnb3J5OyAiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrQkE4RkE7Ozs7OztXQUFBQSxRQUFBOzs7OztrQ0E5RjJDOzs7d0VBQ3JCOzs7d0VBQ0Y7Ozs7Ozs7Ozs7Ozs7OztBQWNwQixNQUFNQyxRQUFBO0FBQUE7QUFBQSxDQUFpQkMsVUFBQSxDQUFBQyxLQUFLO0VBV3hCO0VBQ0EsTUFBYUMsWUFBQSxFQUFrQztJQUFBO0lBQUFDLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7SUFDM0MsT0FBT0MsUUFBQSxDQUFBQyxPQUFPLENBQUNDLE9BQU8sQ0FBQztNQUNuQkMsS0FBQSxFQUFPO1FBQ0hDLFVBQUEsRUFBWSxJQUFJLENBQUNDLEVBQUU7UUFDbkJDLFFBQUEsRUFBVTtNQUNkO0lBQ0o7RUFDSjtBQUNKO0FBQUE7QUFBQVQsY0FBQSxHQUFBRSxDQUFBO0FBRUFOLFFBQUEsQ0FBU2MsSUFBSSxDQUFDO0VBQ1ZGLEVBQUEsRUFBSTtJQUNBRyxJQUFBLEVBQU1kLFVBQUEsQ0FBQWUsU0FBUyxDQUFDQyxPQUFPO0lBQ3ZCQyxhQUFBLEVBQWU7SUFDZkMsVUFBQSxFQUFZO0VBQ2hCO0VBQ0FDLElBQUEsRUFBTTtJQUNGTCxJQUFBLEVBQU1kLFVBQUEsQ0FBQWUsU0FBUyxDQUFDSyxNQUFNO0lBQ3RCQyxTQUFBLEVBQVc7RUFDZjtFQUNBQyxXQUFBLEVBQWE7SUFDVFIsSUFBQSxFQUFNZCxVQUFBLENBQUFlLFNBQVMsQ0FBQ1EsSUFBSTtJQUNwQkYsU0FBQSxFQUFXO0VBQ2Y7RUFDQUcsUUFBQSxFQUFVO0lBQ05WLElBQUEsRUFBTWQsVUFBQSxDQUFBZSxTQUFTLENBQUNDLE9BQU87SUFDdkJLLFNBQUEsRUFBVztJQUNYSSxVQUFBLEVBQVk7TUFDUkMsS0FBQSxFQUFPO01BQ1BDLEdBQUEsRUFBSztJQUNUO0VBQ0o7RUFDQWYsUUFBQSxFQUFVO0lBQ05FLElBQUEsRUFBTWQsVUFBQSxDQUFBZSxTQUFTLENBQUNhLE9BQU87SUFDdkJQLFNBQUEsRUFBVztJQUNYUSxZQUFBLEVBQWM7RUFDbEI7RUFDQUMsU0FBQSxFQUFXO0lBQ1BoQixJQUFBLEVBQU1kLFVBQUEsQ0FBQWUsU0FBUyxDQUFDZ0IsSUFBSTtJQUNwQlYsU0FBQSxFQUFXO0lBQ1hRLFlBQUEsRUFBYzdCLFVBQUEsQ0FBQWUsU0FBUyxDQUFDaUI7RUFDNUI7RUFDQUMsU0FBQSxFQUFXO0lBQ1BuQixJQUFBLEVBQU1kLFVBQUEsQ0FBQWUsU0FBUyxDQUFDZ0IsSUFBSTtJQUNwQlYsU0FBQSxFQUFXO0lBQ1hRLFlBQUEsRUFBYzdCLFVBQUEsQ0FBQWUsU0FBUyxDQUFDaUI7RUFDNUI7QUFDSixHQUFHO0VBQ0NFLFNBQUEsRUFBQUMsR0FBQSxDQUFBNUIsT0FBUztFQUNUNkIsU0FBQSxFQUFXO0VBQ1hDLFNBQUEsRUFBVztFQUNYQyxVQUFBLEVBQVk7QUFDaEI7QUFFQTtBQUFBO0FBQUFuQyxjQUFBLEdBQUFFLENBQUE7QUFDQU4sUUFBQSxDQUFTd0MsT0FBTyxDQUFDakMsUUFBQSxDQUFBQyxPQUFPLEVBQUU7RUFDdEJpQyxTQUFBLEVBQVc7RUFDWEMsVUFBQSxFQUFZO0VBQ1pDLEVBQUEsRUFBSTtBQUNSO0FBQUE7QUFBQXZDLGNBQUEsR0FBQUUsQ0FBQTtBQUVBQyxRQUFBLENBQUFDLE9BQU8sQ0FBQ29DLFNBQVMsQ0FBQzVDLFFBQUEsRUFBVTtFQUN4QjBDLFVBQUEsRUFBWTtFQUNaQyxFQUFBLEVBQUk7QUFDUjtNQUVBNUMsUUFBQTtBQUFBO0FBQUEsQ0FBQUssY0FBQSxHQUFBRSxDQUFBLFFBQWVOLFFBQUEiLCJpZ25vcmVMaXN0IjpbXX0=