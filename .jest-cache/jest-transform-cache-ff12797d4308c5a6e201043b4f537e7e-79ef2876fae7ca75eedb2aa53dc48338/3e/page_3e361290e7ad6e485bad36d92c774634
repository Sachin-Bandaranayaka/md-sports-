ee5e1d772776b53414c3bc887ec6d96d
"use strict";

/* istanbul ignore next */
function cov_1ihmajautw() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/customers/page.tsx";
  var hash = "c10000ecc7c23b42aa1ee33172a37efc3be42289";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/customers/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 29
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 26
        }
      },
      "6": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 48
        }
      },
      "7": {
        start: {
          line: 20,
          column: 34
        },
        end: {
          line: 20,
          column: 105
        }
      },
      "8": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 43
        }
      },
      "9": {
        start: {
          line: 22,
          column: 45
        },
        end: {
          line: 22,
          column: 116
        }
      },
      "10": {
        start: {
          line: 23,
          column: 15
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "11": {
        start: {
          line: 24,
          column: 21
        },
        end: {
          line: 24,
          column: 44
        }
      },
      "12": {
        start: {
          line: 25,
          column: 22
        },
        end: {
          line: 25,
          column: 60
        }
      },
      "13": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 6
        }
      },
      "14": {
        start: {
          line: 31,
          column: 19
        },
        end: {
          line: 31,
          column: 21
        }
      },
      "15": {
        start: {
          line: 32,
          column: 23
        },
        end: {
          line: 32,
          column: 25
        }
      },
      "16": {
        start: {
          line: 34,
          column: 17
        },
        end: {
          line: 34,
          column: 47
        }
      },
      "17": {
        start: {
          line: 35,
          column: 23
        },
        end: {
          line: 35,
          column: 44
        }
      },
      "18": {
        start: {
          line: 36,
          column: 25
        },
        end: {
          line: 36,
          column: 48
        }
      },
      "19": {
        start: {
          line: 37,
          column: 27
        },
        end: {
          line: 37,
          column: 52
        }
      },
      "20": {
        start: {
          line: 38,
          column: 23
        },
        end: {
          line: 38,
          column: 50
        }
      },
      "21": {
        start: {
          line: 39,
          column: 23
        },
        end: {
          line: 39,
          column: 50
        }
      },
      "22": {
        start: {
          line: 40,
          column: 29
        },
        end: {
          line: 40,
          column: 56
        }
      },
      "23": {
        start: {
          line: 41,
          column: 27
        },
        end: {
          line: 41,
          column: 52
        }
      },
      "24": {
        start: {
          line: 42,
          column: 22
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "25": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "26": {
        start: {
          line: 59,
          column: 26
        },
        end: {
          line: 59,
          column: 63
        }
      },
      "27": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "28": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 71,
          column: 13
        }
      },
      "29": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 64,
          column: 19
        }
      },
      "30": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 70,
          column: 18
        }
      },
      "31": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 187,
          column: 5
        }
      },
      "32": {
        start: {
          line: 76,
          column: 29
        },
        end: {
          line: 76,
          column: 61
        }
      },
      "33": {
        start: {
          line: 77,
          column: 35
        },
        end: {
          line: 77,
          column: 85
        }
      },
      "34": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "35": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 82,
          column: 14
        }
      },
      "36": {
        start: {
          line: 84,
          column: 32
        },
        end: {
          line: 103,
          column: 10
        }
      },
      "37": {
        start: {
          line: 104,
          column: 31
        },
        end: {
          line: 106,
          column: 10
        }
      },
      "38": {
        start: {
          line: 107,
          column: 35
        },
        end: {
          line: 150,
          column: 10
        }
      },
      "39": {
        start: {
          line: 108,
          column: 33
        },
        end: {
          line: 108,
          column: 38
        }
      },
      "40": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 130,
          column: 13
        }
      },
      "41": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 129,
          column: 17
        }
      },
      "42": {
        start: {
          line: 111,
          column: 42
        },
        end: {
          line: 111,
          column: 70
        }
      },
      "43": {
        start: {
          line: 113,
          column: 20
        },
        end: {
          line: 125,
          column: 21
        }
      },
      "44": {
        start: {
          line: 114,
          column: 24
        },
        end: {
          line: 114,
          column: 67
        }
      },
      "45": {
        start: {
          line: 115,
          column: 24
        },
        end: {
          line: 117,
          column: 25
        }
      },
      "46": {
        start: {
          line: 116,
          column: 28
        },
        end: {
          line: 116,
          column: 72
        }
      },
      "47": {
        start: {
          line: 118,
          column: 27
        },
        end: {
          line: 125,
          column: 21
        }
      },
      "48": {
        start: {
          line: 120,
          column: 24
        },
        end: {
          line: 120,
          column: 55
        }
      },
      "49": {
        start: {
          line: 124,
          column: 24
        },
        end: {
          line: 124,
          column: 171
        }
      },
      "50": {
        start: {
          line: 128,
          column: 20
        },
        end: {
          line: 128,
          column: 54
        }
      },
      "51": {
        start: {
          line: 131,
          column: 34
        },
        end: {
          line: 131,
          column: 75
        }
      },
      "52": {
        start: {
          line: 132,
          column: 31
        },
        end: {
          line: 148,
          column: 13
        }
      },
      "53": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 30
        }
      },
      "54": {
        start: {
          line: 151,
          column: 36
        },
        end: {
          line: 151,
          column: 54
        }
      },
      "55": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "56": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 131
        }
      },
      "57": {
        start: {
          line: 153,
          column: 70
        },
        end: {
          line: 153,
          column: 129
        }
      },
      "58": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 161,
          column: 9
        }
      },
      "59": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 160,
          column: 13
        }
      },
      "60": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 157,
          column: 152
        }
      },
      "61": {
        start: {
          line: 157,
          column: 74
        },
        end: {
          line: 157,
          column: 150
        }
      },
      "62": {
        start: {
          line: 158,
          column: 19
        },
        end: {
          line: 160,
          column: 13
        }
      },
      "63": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 159,
          column: 120
        }
      },
      "64": {
        start: {
          line: 159,
          column: 74
        },
        end: {
          line: 159,
          column: 118
        }
      },
      "65": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 164,
          column: 9
        }
      },
      "66": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 136
        }
      },
      "67": {
        start: {
          line: 163,
          column: 70
        },
        end: {
          line: 163,
          column: 134
        }
      },
      "68": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "69": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 136
        }
      },
      "70": {
        start: {
          line: 166,
          column: 70
        },
        end: {
          line: 166,
          column: 134
        }
      },
      "71": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "72": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 152
        }
      },
      "73": {
        start: {
          line: 169,
          column: 70
        },
        end: {
          line: 169,
          column: 150
        }
      },
      "74": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "75": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 150
        }
      },
      "76": {
        start: {
          line: 172,
          column: 70
        },
        end: {
          line: 172,
          column: 148
        }
      },
      "77": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 178,
          column: 10
        }
      },
      "78": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 58
        }
      },
      "79": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 186,
          column: 10
        }
      },
      "80": {
        start: {
          line: 190,
          column: 17
        },
        end: {
          line: 190,
          column: 35
        }
      },
      "81": {
        start: {
          line: 191,
          column: 19
        },
        end: {
          line: 191,
          column: 39
        }
      },
      "82": {
        start: {
          line: 192,
          column: 25
        },
        end: {
          line: 192,
          column: 43
        }
      },
      "83": {
        start: {
          line: 193,
          column: 19
        },
        end: {
          line: 193,
          column: 39
        }
      },
      "84": {
        start: {
          line: 194,
          column: 23
        },
        end: {
          line: 194,
          column: 47
        }
      },
      "85": {
        start: {
          line: 195,
          column: 23
        },
        end: {
          line: 195,
          column: 47
        }
      },
      "86": {
        start: {
          line: 196,
          column: 29
        },
        end: {
          line: 196,
          column: 59
        }
      },
      "87": {
        start: {
          line: 197,
          column: 27
        },
        end: {
          line: 197,
          column: 55
        }
      },
      "88": {
        start: {
          line: 198,
          column: 58
        },
        end: {
          line: 198,
          column: 176
        }
      },
      "89": {
        start: {
          line: 199,
          column: 4
        },
        end: {
          line: 209,
          column: 5
        }
      },
      "90": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 208,
          column: 11
        }
      },
      "91": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 234,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 13
          },
          end: {
            line: 12,
            column: 14
          }
        },
        loc: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 16
          },
          end: {
            line: 15,
            column: 17
          }
        },
        loc: {
          start: {
            line: 15,
            column: 27
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 33
          }
        },
        loc: {
          start: {
            line: 26,
            column: 39
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 26
      },
      "4": {
        name: "fetchCustomersData",
        decl: {
          start: {
            line: 33,
            column: 15
          },
          end: {
            line: 33,
            column: 33
          }
        },
        loc: {
          start: {
            line: 33,
            column: 180
          },
          end: {
            line: 188,
            column: 1
          }
        },
        line: 33
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 107,
            column: 55
          },
          end: {
            line: 107,
            column: 56
          }
        },
        loc: {
          start: {
            line: 107,
            column: 67
          },
          end: {
            line: 150,
            column: 9
          }
        },
        line: 107
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 153,
            column: 65
          },
          end: {
            line: 153,
            column: 66
          }
        },
        loc: {
          start: {
            line: 153,
            column: 70
          },
          end: {
            line: 153,
            column: 129
          }
        },
        line: 153
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 157,
            column: 69
          },
          end: {
            line: 157,
            column: 70
          }
        },
        loc: {
          start: {
            line: 157,
            column: 74
          },
          end: {
            line: 157,
            column: 150
          }
        },
        line: 157
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 159,
            column: 69
          },
          end: {
            line: 159,
            column: 70
          }
        },
        loc: {
          start: {
            line: 159,
            column: 74
          },
          end: {
            line: 159,
            column: 118
          }
        },
        line: 159
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 163,
            column: 65
          },
          end: {
            line: 163,
            column: 66
          }
        },
        loc: {
          start: {
            line: 163,
            column: 70
          },
          end: {
            line: 163,
            column: 134
          }
        },
        line: 163
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 166,
            column: 65
          },
          end: {
            line: 166,
            column: 66
          }
        },
        loc: {
          start: {
            line: 166,
            column: 70
          },
          end: {
            line: 166,
            column: 134
          }
        },
        line: 166
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 169,
            column: 65
          },
          end: {
            line: 169,
            column: 66
          }
        },
        loc: {
          start: {
            line: 169,
            column: 70
          },
          end: {
            line: 169,
            column: 150
          }
        },
        line: 169
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 172,
            column: 65
          },
          end: {
            line: 172,
            column: 66
          }
        },
        loc: {
          start: {
            line: 172,
            column: 70
          },
          end: {
            line: 172,
            column: 148
          }
        },
        line: 172
      },
      "13": {
        name: "CustomersPage",
        decl: {
          start: {
            line: 189,
            column: 15
          },
          end: {
            line: 189,
            column: 28
          }
        },
        loc: {
          start: {
            line: 189,
            column: 47
          },
          end: {
            line: 235,
            column: 1
          }
        },
        line: 189
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 35
          },
          end: {
            line: 27,
            column: 38
          }
        }, {
          start: {
            line: 27,
            column: 41
          },
          end: {
            line: 29,
            column: 5
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 14
          }
        }, {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 32
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 26
          },
          end: {
            line: 34,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 26
          },
          end: {
            line: 34,
            column: 35
          }
        }, {
          start: {
            line: 34,
            column: 39
          },
          end: {
            line: 34,
            column: 42
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 35,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 35,
            column: 38
          }
        }, {
          start: {
            line: 35,
            column: 42
          },
          end: {
            line: 35,
            column: 44
          }
        }],
        line: 35
      },
      "4": {
        loc: {
          start: {
            line: 36,
            column: 25
          },
          end: {
            line: 36,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 25
          },
          end: {
            line: 36,
            column: 42
          }
        }, {
          start: {
            line: 36,
            column: 46
          },
          end: {
            line: 36,
            column: 48
          }
        }],
        line: 36
      },
      "5": {
        loc: {
          start: {
            line: 37,
            column: 27
          },
          end: {
            line: 37,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 27
          },
          end: {
            line: 37,
            column: 46
          }
        }, {
          start: {
            line: 37,
            column: 50
          },
          end: {
            line: 37,
            column: 52
          }
        }],
        line: 37
      },
      "6": {
        loc: {
          start: {
            line: 40,
            column: 29
          },
          end: {
            line: 40,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 29
          },
          end: {
            line: 40,
            column: 50
          }
        }, {
          start: {
            line: 40,
            column: 54
          },
          end: {
            line: 40,
            column: 56
          }
        }],
        line: 40
      },
      "7": {
        loc: {
          start: {
            line: 41,
            column: 27
          },
          end: {
            line: 41,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 27
          },
          end: {
            line: 41,
            column: 46
          }
        }, {
          start: {
            line: 41,
            column: 50
          },
          end: {
            line: 41,
            column: 52
          }
        }],
        line: 41
      },
      "8": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 56,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 25
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 21
          }
        }],
        line: 43
      },
      "9": {
        loc: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "10": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 58,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 58,
            column: 18
          }
        }, {
          start: {
            line: 58,
            column: 22
          },
          end: {
            line: 58,
            column: 65
          }
        }],
        line: 58
      },
      "11": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "12": {
        loc: {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        }, {
          start: {
            line: 65,
            column: 19
          },
          end: {
            line: 71,
            column: 13
          }
        }],
        line: 61
      },
      "13": {
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "14": {
        loc: {
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 130,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 130,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "15": {
        loc: {
          start: {
            line: 113,
            column: 20
          },
          end: {
            line: 125,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 20
          },
          end: {
            line: 125,
            column: 21
          }
        }, {
          start: {
            line: 118,
            column: 27
          },
          end: {
            line: 125,
            column: 21
          }
        }],
        line: 113
      },
      "16": {
        loc: {
          start: {
            line: 113,
            column: 24
          },
          end: {
            line: 113,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 24
          },
          end: {
            line: 113,
            column: 37
          }
        }, {
          start: {
            line: 113,
            column: 41
          },
          end: {
            line: 113,
            column: 74
          }
        }, {
          start: {
            line: 113,
            column: 78
          },
          end: {
            line: 113,
            column: 103
          }
        }],
        line: 113
      },
      "17": {
        loc: {
          start: {
            line: 115,
            column: 24
          },
          end: {
            line: 117,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 24
          },
          end: {
            line: 117,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "18": {
        loc: {
          start: {
            line: 118,
            column: 27
          },
          end: {
            line: 125,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 27
          },
          end: {
            line: 125,
            column: 21
          }
        }, {
          start: {
            line: 121,
            column: 27
          },
          end: {
            line: 125,
            column: 21
          }
        }],
        line: 118
      },
      "19": {
        loc: {
          start: {
            line: 124,
            column: 41
          },
          end: {
            line: 124,
            column: 170
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 124,
            column: 124
          },
          end: {
            line: 124,
            column: 151
          }
        }, {
          start: {
            line: 124,
            column: 154
          },
          end: {
            line: 124,
            column: 170
          }
        }],
        line: 124
      },
      "20": {
        loc: {
          start: {
            line: 124,
            column: 41
          },
          end: {
            line: 124,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 41
          },
          end: {
            line: 124,
            column: 80
          }
        }, {
          start: {
            line: 124,
            column: 84
          },
          end: {
            line: 124,
            column: 121
          }
        }],
        line: 124
      },
      "21": {
        loc: {
          start: {
            line: 131,
            column: 34
          },
          end: {
            line: 131,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 34
          },
          end: {
            line: 131,
            column: 51
          }
        }, {
          start: {
            line: 131,
            column: 55
          },
          end: {
            line: 131,
            column: 75
          }
        }],
        line: 131
      },
      "22": {
        loc: {
          start: {
            line: 144,
            column: 34
          },
          end: {
            line: 144,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 144,
            column: 50
          },
          end: {
            line: 144,
            column: 73
          }
        }, {
          start: {
            line: 144,
            column: 76
          },
          end: {
            line: 144,
            column: 80
          }
        }],
        line: 144
      },
      "23": {
        loc: {
          start: {
            line: 145,
            column: 44
          },
          end: {
            line: 145,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 145,
            column: 60
          },
          end: {
            line: 145,
            column: 80
          }
        }, {
          start: {
            line: 145,
            column: 83
          },
          end: {
            line: 145,
            column: 87
          }
        }],
        line: 145
      },
      "24": {
        loc: {
          start: {
            line: 146,
            column: 25
          },
          end: {
            line: 146,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 146,
            column: 65
          },
          end: {
            line: 146,
            column: 90
          }
        }, {
          start: {
            line: 146,
            column: 93
          },
          end: {
            line: 146,
            column: 102
          }
        }],
        line: 146
      },
      "25": {
        loc: {
          start: {
            line: 146,
            column: 65
          },
          end: {
            line: 146,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 65
          },
          end: {
            line: 146,
            column: 85
          }
        }, {
          start: {
            line: 146,
            column: 89
          },
          end: {
            line: 146,
            column: 90
          }
        }],
        line: 146
      },
      "26": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "27": {
        loc: {
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "28": {
        loc: {
          start: {
            line: 156,
            column: 12
          },
          end: {
            line: 160,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 12
          },
          end: {
            line: 160,
            column: 13
          }
        }, {
          start: {
            line: 158,
            column: 19
          },
          end: {
            line: 160,
            column: 13
          }
        }],
        line: 156
      },
      "29": {
        loc: {
          start: {
            line: 156,
            column: 16
          },
          end: {
            line: 156,
            column: 192
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 16
          },
          end: {
            line: 156,
            column: 55
          }
        }, {
          start: {
            line: 156,
            column: 59
          },
          end: {
            line: 156,
            column: 100
          }
        }, {
          start: {
            line: 156,
            column: 104
          },
          end: {
            line: 156,
            column: 146
          }
        }, {
          start: {
            line: 156,
            column: 150
          },
          end: {
            line: 156,
            column: 192
          }
        }],
        line: 156
      },
      "30": {
        loc: {
          start: {
            line: 158,
            column: 19
          },
          end: {
            line: 160,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 19
          },
          end: {
            line: 160,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "31": {
        loc: {
          start: {
            line: 158,
            column: 23
          },
          end: {
            line: 158,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 23
          },
          end: {
            line: 158,
            column: 50
          }
        }, {
          start: {
            line: 158,
            column: 54
          },
          end: {
            line: 158,
            column: 83
          }
        }],
        line: 158
      },
      "32": {
        loc: {
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "33": {
        loc: {
          start: {
            line: 163,
            column: 70
          },
          end: {
            line: 163,
            column: 134
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 70
          },
          end: {
            line: 163,
            column: 100
          }
        }, {
          start: {
            line: 163,
            column: 104
          },
          end: {
            line: 163,
            column: 134
          }
        }],
        line: 163
      },
      "34": {
        loc: {
          start: {
            line: 163,
            column: 105
          },
          end: {
            line: 163,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 105
          },
          end: {
            line: 163,
            column: 114
          }
        }, {
          start: {
            line: 163,
            column: 118
          },
          end: {
            line: 163,
            column: 119
          }
        }],
        line: 163
      },
      "35": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "36": {
        loc: {
          start: {
            line: 166,
            column: 70
          },
          end: {
            line: 166,
            column: 134
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 70
          },
          end: {
            line: 166,
            column: 100
          }
        }, {
          start: {
            line: 166,
            column: 104
          },
          end: {
            line: 166,
            column: 134
          }
        }],
        line: 166
      },
      "37": {
        loc: {
          start: {
            line: 166,
            column: 105
          },
          end: {
            line: 166,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 105
          },
          end: {
            line: 166,
            column: 114
          }
        }, {
          start: {
            line: 166,
            column: 118
          },
          end: {
            line: 166,
            column: 119
          }
        }],
        line: 166
      },
      "38": {
        loc: {
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "39": {
        loc: {
          start: {
            line: 169,
            column: 70
          },
          end: {
            line: 169,
            column: 150
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 70
          },
          end: {
            line: 169,
            column: 88
          }
        }, {
          start: {
            line: 169,
            column: 92
          },
          end: {
            line: 169,
            column: 150
          }
        }],
        line: 169
      },
      "40": {
        loc: {
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "41": {
        loc: {
          start: {
            line: 172,
            column: 70
          },
          end: {
            line: 172,
            column: 148
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 70
          },
          end: {
            line: 172,
            column: 88
          }
        }, {
          start: {
            line: 172,
            column: 92
          },
          end: {
            line: 172,
            column: 148
          }
        }],
        line: 172
      },
      "42": {
        loc: {
          start: {
            line: 199,
            column: 4
          },
          end: {
            line: 209,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 4
          },
          end: {
            line: 209,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0, 0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/customers/page.tsx"],
      sourcesContent: ["import MainLayout from '@/components/layout/MainLayout';\nimport { prisma } from '@/lib/prisma';\nimport CustomerClientWrapper from './components/CustomerClientWrapper';\nimport { Suspense } from 'react';\nimport { Loader2 } from 'lucide-react';\nimport { AuditService } from '@/services/auditService';\n\n// Add revalidation - cache customers page for 60 seconds\nexport const revalidate = 60;\n\n// Interface for Customer (can be shared or defined in a common types file)\ninterface Customer {\n    id: number;\n    name: string;\n    email?: string | null;\n    phone?: string | null;\n    address?: string | null;\n    customerType: 'wholesale' | 'retail';\n    creditLimit?: number | null;\n    creditPeriod?: number | null;\n    isActive: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n    lastPurchaseDate?: Date | null;\n    latestInvoicePaymentStatus?: string | null;\n    balance?: number;\n    contactPerson?: string;\n}\n\nconst ITEMS_PER_PAGE = 15;\n\nasync function fetchCustomersData(\n    pageParam: string | undefined,\n    searchTermParam: string | undefined,\n    customerTypeParam: string | undefined,\n    customerStatusParam: string | undefined,\n    balanceMinParam: string | undefined,\n    balanceMaxParam: string | undefined,\n    lastPurchaseFromParam: string | undefined,\n    lastPurchaseToParam: string | undefined\n) {\n    const page = parseInt(pageParam || '1', 10);\n    const searchTerm = searchTermParam || '';\n    const customerType = customerTypeParam || '';\n    const customerStatus = customerStatusParam || '';\n    const balanceMin = parseFloat(balanceMinParam as string); // parseFloat handles undefined/empty as NaN\n    const balanceMax = parseFloat(balanceMaxParam as string);\n    const lastPurchaseFrom = lastPurchaseFromParam || '';\n    const lastPurchaseTo = lastPurchaseToParam || '';\n\n    let whereClause: any = {\n        OR: searchTerm ? [\n            { name: { contains: searchTerm, mode: 'insensitive' } },\n            { phone: { contains: searchTerm, mode: 'insensitive' } },\n        ] : undefined,\n    };\n\n    if (searchTerm && searchTerm.toLowerCase().startsWith('cus-')) {\n        const numericId = parseInt(searchTerm.substring(4), 10);\n        if (!isNaN(numericId)) {\n            if (whereClause.OR) {\n                whereClause.OR.push({ id: numericId });\n            } else {\n                whereClause.OR = [{ id: numericId }];\n            }\n        }\n    }\n\n    try {\n        // Get IDs of soft-deleted customers\n        const auditService = new AuditService();\n        const deletedCustomerIds = await auditService.getDeletedEntityIds('Customer');\n\n        // Add soft delete filter to where clause\n        if (deletedCustomerIds.length > 0) {\n            whereClause.id = {\n                notIn: deletedCustomerIds\n            };\n        }\n\n        const customersFromDB = await prisma.customer.findMany({\n            where: whereClause,\n            include: {\n                invoices: {\n                    orderBy: {\n                        createdAt: 'desc'\n                    },\n                    take: 1,\n                    select: {\n                        createdAt: true,\n                        status: true\n                    }\n                }\n            },\n            orderBy: { createdAt: 'desc' },\n            skip: (page - 1) * ITEMS_PER_PAGE,\n            take: ITEMS_PER_PAGE,\n        });\n\n        const totalCustomers = await prisma.customer.count({ where: whereClause });\n\n        const formattedCustomers = customersFromDB.map(customer => {\n            let displayAddress = 'N/A';\n            if (customer.address) {\n                try {\n                    const parsedAddress = JSON.parse(customer.address);\n                    // Check if it's the old structure with mainAddress\n                    if (parsedAddress && typeof parsedAddress === 'object' && parsedAddress.mainAddress) {\n                        displayAddress = parsedAddress.mainAddress;\n                        if (parsedAddress.city) {\n                            displayAddress += `, ${parsedAddress.city}`;\n                        }\n                    } else if (typeof parsedAddress === 'string') {\n                        // If parsing results in a string, use that (e.g. if db stores \"'Some Address String'\" including quotes)\n                        displayAddress = parsedAddress;\n                    } else {\n                        // It was parsable JSON but not the expected old structure, and not a simple string post-parsing.\n                        // Fallback to the raw string if it doesn't look like typical JSON, otherwise mark as needing review or use a generic placeholder.\n                        displayAddress = customer.address.trim().startsWith('{') && customer.address.trim().endsWith('}') ? 'Address data needs review' : customer.address;\n                    }\n                } catch (e) {\n                    // Parsing failed, assume it's a plain text address (new records or already migrated)\n                    displayAddress = customer.address;\n                }\n            }\n\n            const latestInvoice = customer.invoices && customer.invoices[0];\n\n            const uiCustomer: Customer = {\n                id: customer.id,\n                name: customer.name,\n                email: customer.email,\n                phone: customer.phone,\n                address: displayAddress,\n                customerType: customer.customerType as 'wholesale' | 'retail',\n                creditLimit: customer.creditLimit,\n                creditPeriod: customer.creditPeriod,\n                isActive: customer.isActive,\n                createdAt: customer.createdAt,\n                updatedAt: customer.updatedAt,\n                lastPurchaseDate: latestInvoice ? latestInvoice.createdAt : null,\n                latestInvoicePaymentStatus: latestInvoice ? latestInvoice.status : null,\n                balance: customer.customerType === 'wholesale' ? customer.creditLimit || 0 : undefined,\n                contactPerson: customer.name,\n            };\n            return uiCustomer;\n        });\n\n        let postFilteredCustomers = formattedCustomers;\n        if (customerType) {\n            postFilteredCustomers = postFilteredCustomers.filter(c => c.customerType.toLowerCase() === customerType.toLowerCase());\n        }\n        if (customerStatus) {\n            if (customerStatus.toLowerCase() === 'paid' || customerStatus.toLowerCase() === 'unpaid' || customerStatus.toLowerCase() === 'pending' || customerStatus.toLowerCase() === 'partial') {\n                postFilteredCustomers = postFilteredCustomers.filter(c => c.latestInvoicePaymentStatus?.toLowerCase() === customerStatus.toLowerCase());\n            } else if (customerStatus === 'Active' || customerStatus === 'Inactive') {\n                postFilteredCustomers = postFilteredCustomers.filter(c => c.isActive === (customerStatus === 'Active'));\n            }\n        }\n        if (!isNaN(balanceMin)) {\n            postFilteredCustomers = postFilteredCustomers.filter(c => c.customerType === 'wholesale' && (c.balance || 0) >= balanceMin);\n        }\n        if (!isNaN(balanceMax)) {\n            postFilteredCustomers = postFilteredCustomers.filter(c => c.customerType === 'wholesale' && (c.balance || 0) <= balanceMax);\n        }\n        if (lastPurchaseFrom) {\n            postFilteredCustomers = postFilteredCustomers.filter(c => c.lastPurchaseDate && new Date(c.lastPurchaseDate) >= new Date(lastPurchaseFrom));\n        }\n        if (lastPurchaseTo) {\n            postFilteredCustomers = postFilteredCustomers.filter(c => c.lastPurchaseDate && new Date(c.lastPurchaseDate) <= new Date(lastPurchaseTo));\n        }\n\n        return {\n            customers: postFilteredCustomers,\n            totalPages: Math.ceil(totalCustomers / ITEMS_PER_PAGE),\n            currentPage: page,\n        };\n\n    } catch (error) {\n        console.error('Error fetching customers:', error);\n        return {\n            customers: [],\n            totalPages: 0,\n            currentPage: 1,\n            error: 'Failed to fetch customers'\n        };\n    }\n}\n\nexport default async function CustomersPage({ searchParams }: { searchParams?: { [key: string]: string | string[] | undefined } }) {\n    const page = searchParams?.page as string | undefined;\n    const search = searchParams?.search as string | undefined;\n    const customerType = searchParams?.type as string | undefined;\n    const status = searchParams?.status as string | undefined;\n    const balanceMin = searchParams?.balanceMin as string | undefined;\n    const balanceMax = searchParams?.balanceMax as string | undefined;\n    const lastPurchaseFrom = searchParams?.lastPurchaseFrom as string | undefined;\n    const lastPurchaseTo = searchParams?.lastPurchaseTo as string | undefined;\n\n    const { customers, totalPages, currentPage, error } = await fetchCustomersData(\n        page,\n        search,\n        customerType,\n        status,\n        balanceMin,\n        balanceMax,\n        lastPurchaseFrom,\n        lastPurchaseTo\n    );\n\n    if (error) {\n        return (\n            <MainLayout>\n                <div className=\"container mx-auto px-4 py-8\">\n                    <p className=\"text-red-500\">{error}</p>\n                </div>\n            </MainLayout>\n        );\n    }\n\n    return (\n        <MainLayout>\n            <div className=\"container mx-auto px-4 py-8\">\n                <Suspense fallback={\n                    <div className=\"flex justify-center items-center h-64\">\n                        <Loader2 className=\"animate-spin text-indigo-600\" size={48} />\n                        <p className=\"ml-3 text-lg text-gray-600\">Loading customers...</p>\n                    </div>\n                }>\n                    <CustomerClientWrapper\n                        initialCustomers={customers}\n                        initialTotalPages={totalPages}\n                        initialCurrentPage={currentPage}\n                    />\n                </Suspense>\n            </div>\n        </MainLayout>\n    );\n}"],
      names: ["CustomersPage", "revalidate", "ITEMS_PER_PAGE", "fetchCustomersData", "pageParam", "searchTermParam", "customerTypeParam", "customerStatusParam", "balanceMinParam", "balanceMaxParam", "lastPurchaseFromParam", "lastPurchaseToParam", "page", "parseInt", "searchTerm", "customerType", "customerStatus", "balanceMin", "parseFloat", "balanceMax", "lastPurchaseFrom", "lastPurchaseTo", "whereClause", "OR", "name", "contains", "mode", "phone", "undefined", "toLowerCase", "startsWith", "numericId", "substring", "isNaN", "push", "id", "auditService", "AuditService", "deletedCustomerIds", "getDeletedEntityIds", "length", "notIn", "customersFromDB", "prisma", "customer", "findMany", "where", "include", "invoices", "orderBy", "createdAt", "take", "select", "status", "skip", "totalCustomers", "count", "formattedCustomers", "map", "displayAddress", "address", "parsedAddress", "JSON", "parse", "mainAddress", "city", "trim", "endsWith", "e", "latestInvoice", "uiCustomer", "email", "creditLimit", "creditPeriod", "isActive", "updatedAt", "lastPurchaseDate", "latestInvoicePaymentStatus", "balance", "contactPerson", "postFilteredCustomers", "filter", "c", "Date", "customers", "totalPages", "Math", "ceil", "currentPage", "error", "console", "searchParams", "search", "type", "MainLayout", "div", "className", "p", "Suspense", "fallback", "Loader2", "size", "CustomerClientWrapper", "initialCustomers", "initialTotalPages", "initialCurrentPage"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c10000ecc7c23b42aa1ee33172a37efc3be42289"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ihmajautw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ihmajautw();
cov_1ihmajautw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1ihmajautw().f[0]++;
  cov_1ihmajautw().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1ihmajautw().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1ihmajautw().s[3]++;
_export(exports, {
  default: function () {
    /* istanbul ignore next */
    cov_1ihmajautw().f[1]++;
    cov_1ihmajautw().s[4]++;
    return CustomersPage;
  },
  revalidate: function () {
    /* istanbul ignore next */
    cov_1ihmajautw().f[2]++;
    cov_1ihmajautw().s[5]++;
    return revalidate;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1ihmajautw().s[6]++, require("react/jsx-runtime"));
const _MainLayout =
/* istanbul ignore next */
(/*#__PURE__*/cov_1ihmajautw().s[7]++, _interop_require_default(require("../../components/layout/MainLayout")));
const _prisma =
/* istanbul ignore next */
(cov_1ihmajautw().s[8]++, require("../../lib/prisma"));
const _CustomerClientWrapper =
/* istanbul ignore next */
(/*#__PURE__*/cov_1ihmajautw().s[9]++, _interop_require_default(require("./components/CustomerClientWrapper")));
const _react =
/* istanbul ignore next */
(cov_1ihmajautw().s[10]++, require("react"));
const _lucidereact =
/* istanbul ignore next */
(cov_1ihmajautw().s[11]++, require("lucide-react"));
const _auditService =
/* istanbul ignore next */
(cov_1ihmajautw().s[12]++, require("../../services/auditService"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1ihmajautw().f[3]++;
  cov_1ihmajautw().s[13]++;
  return /* istanbul ignore next */(cov_1ihmajautw().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1ihmajautw().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1ihmajautw().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1ihmajautw().b[0][1]++, {
    default: obj
  });
}
const revalidate =
/* istanbul ignore next */
(cov_1ihmajautw().s[14]++, 60);
const ITEMS_PER_PAGE =
/* istanbul ignore next */
(cov_1ihmajautw().s[15]++, 15);
async function fetchCustomersData(pageParam, searchTermParam, customerTypeParam, customerStatusParam, balanceMinParam, balanceMaxParam, lastPurchaseFromParam, lastPurchaseToParam) {
  /* istanbul ignore next */
  cov_1ihmajautw().f[4]++;
  const page =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[16]++, parseInt(
  /* istanbul ignore next */
  (cov_1ihmajautw().b[2][0]++, pageParam) ||
  /* istanbul ignore next */
  (cov_1ihmajautw().b[2][1]++, "1"), 10));
  const searchTerm =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[17]++,
  /* istanbul ignore next */
  (cov_1ihmajautw().b[3][0]++, searchTermParam) ||
  /* istanbul ignore next */
  (cov_1ihmajautw().b[3][1]++, ""));
  const customerType =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[18]++,
  /* istanbul ignore next */
  (cov_1ihmajautw().b[4][0]++, customerTypeParam) ||
  /* istanbul ignore next */
  (cov_1ihmajautw().b[4][1]++, ""));
  const customerStatus =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[19]++,
  /* istanbul ignore next */
  (cov_1ihmajautw().b[5][0]++, customerStatusParam) ||
  /* istanbul ignore next */
  (cov_1ihmajautw().b[5][1]++, ""));
  const balanceMin =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[20]++, parseFloat(balanceMinParam)); // parseFloat handles undefined/empty as NaN
  const balanceMax =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[21]++, parseFloat(balanceMaxParam));
  const lastPurchaseFrom =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[22]++,
  /* istanbul ignore next */
  (cov_1ihmajautw().b[6][0]++, lastPurchaseFromParam) ||
  /* istanbul ignore next */
  (cov_1ihmajautw().b[6][1]++, ""));
  const lastPurchaseTo =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[23]++,
  /* istanbul ignore next */
  (cov_1ihmajautw().b[7][0]++, lastPurchaseToParam) ||
  /* istanbul ignore next */
  (cov_1ihmajautw().b[7][1]++, ""));
  let whereClause =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[24]++, {
    OR: searchTerm ?
    /* istanbul ignore next */
    (cov_1ihmajautw().b[8][0]++, [{
      name: {
        contains: searchTerm,
        mode: "insensitive"
      }
    }, {
      phone: {
        contains: searchTerm,
        mode: "insensitive"
      }
    }]) :
    /* istanbul ignore next */
    (cov_1ihmajautw().b[8][1]++, undefined)
  });
  /* istanbul ignore next */
  cov_1ihmajautw().s[25]++;
  if (
  /* istanbul ignore next */
  (cov_1ihmajautw().b[10][0]++, searchTerm) &&
  /* istanbul ignore next */
  (cov_1ihmajautw().b[10][1]++, searchTerm.toLowerCase().startsWith("cus-"))) {
    /* istanbul ignore next */
    cov_1ihmajautw().b[9][0]++;
    const numericId =
    /* istanbul ignore next */
    (cov_1ihmajautw().s[26]++, parseInt(searchTerm.substring(4), 10));
    /* istanbul ignore next */
    cov_1ihmajautw().s[27]++;
    if (!isNaN(numericId)) {
      /* istanbul ignore next */
      cov_1ihmajautw().b[11][0]++;
      cov_1ihmajautw().s[28]++;
      if (whereClause.OR) {
        /* istanbul ignore next */
        cov_1ihmajautw().b[12][0]++;
        cov_1ihmajautw().s[29]++;
        whereClause.OR.push({
          id: numericId
        });
      } else {
        /* istanbul ignore next */
        cov_1ihmajautw().b[12][1]++;
        cov_1ihmajautw().s[30]++;
        whereClause.OR = [{
          id: numericId
        }];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ihmajautw().b[11][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1ihmajautw().b[9][1]++;
  }
  cov_1ihmajautw().s[31]++;
  try {
    // Get IDs of soft-deleted customers
    const auditService =
    /* istanbul ignore next */
    (cov_1ihmajautw().s[32]++, new _auditService.AuditService());
    const deletedCustomerIds =
    /* istanbul ignore next */
    (cov_1ihmajautw().s[33]++, await auditService.getDeletedEntityIds("Customer"));
    // Add soft delete filter to where clause
    /* istanbul ignore next */
    cov_1ihmajautw().s[34]++;
    if (deletedCustomerIds.length > 0) {
      /* istanbul ignore next */
      cov_1ihmajautw().b[13][0]++;
      cov_1ihmajautw().s[35]++;
      whereClause.id = {
        notIn: deletedCustomerIds
      };
    } else
    /* istanbul ignore next */
    {
      cov_1ihmajautw().b[13][1]++;
    }
    const customersFromDB =
    /* istanbul ignore next */
    (cov_1ihmajautw().s[36]++, await _prisma.prisma.customer.findMany({
      where: whereClause,
      include: {
        invoices: {
          orderBy: {
            createdAt: "desc"
          },
          take: 1,
          select: {
            createdAt: true,
            status: true
          }
        }
      },
      orderBy: {
        createdAt: "desc"
      },
      skip: (page - 1) * ITEMS_PER_PAGE,
      take: ITEMS_PER_PAGE
    }));
    const totalCustomers =
    /* istanbul ignore next */
    (cov_1ihmajautw().s[37]++, await _prisma.prisma.customer.count({
      where: whereClause
    }));
    const formattedCustomers =
    /* istanbul ignore next */
    (cov_1ihmajautw().s[38]++, customersFromDB.map(customer => {
      /* istanbul ignore next */
      cov_1ihmajautw().f[5]++;
      let displayAddress =
      /* istanbul ignore next */
      (cov_1ihmajautw().s[39]++, "N/A");
      /* istanbul ignore next */
      cov_1ihmajautw().s[40]++;
      if (customer.address) {
        /* istanbul ignore next */
        cov_1ihmajautw().b[14][0]++;
        cov_1ihmajautw().s[41]++;
        try {
          const parsedAddress =
          /* istanbul ignore next */
          (cov_1ihmajautw().s[42]++, JSON.parse(customer.address));
          // Check if it's the old structure with mainAddress
          /* istanbul ignore next */
          cov_1ihmajautw().s[43]++;
          if (
          /* istanbul ignore next */
          (cov_1ihmajautw().b[16][0]++, parsedAddress) &&
          /* istanbul ignore next */
          (cov_1ihmajautw().b[16][1]++, typeof parsedAddress === "object") &&
          /* istanbul ignore next */
          (cov_1ihmajautw().b[16][2]++, parsedAddress.mainAddress)) {
            /* istanbul ignore next */
            cov_1ihmajautw().b[15][0]++;
            cov_1ihmajautw().s[44]++;
            displayAddress = parsedAddress.mainAddress;
            /* istanbul ignore next */
            cov_1ihmajautw().s[45]++;
            if (parsedAddress.city) {
              /* istanbul ignore next */
              cov_1ihmajautw().b[17][0]++;
              cov_1ihmajautw().s[46]++;
              displayAddress += `, ${parsedAddress.city}`;
            } else
            /* istanbul ignore next */
            {
              cov_1ihmajautw().b[17][1]++;
            }
          } else {
            /* istanbul ignore next */
            cov_1ihmajautw().b[15][1]++;
            cov_1ihmajautw().s[47]++;
            if (typeof parsedAddress === "string") {
              /* istanbul ignore next */
              cov_1ihmajautw().b[18][0]++;
              cov_1ihmajautw().s[48]++;
              // If parsing results in a string, use that (e.g. if db stores "'Some Address String'" including quotes)
              displayAddress = parsedAddress;
            } else {
              /* istanbul ignore next */
              cov_1ihmajautw().b[18][1]++;
              cov_1ihmajautw().s[49]++;
              // It was parsable JSON but not the expected old structure, and not a simple string post-parsing.
              // Fallback to the raw string if it doesn't look like typical JSON, otherwise mark as needing review or use a generic placeholder.
              displayAddress =
              /* istanbul ignore next */
              (cov_1ihmajautw().b[20][0]++, customer.address.trim().startsWith("{")) &&
              /* istanbul ignore next */
              (cov_1ihmajautw().b[20][1]++, customer.address.trim().endsWith("}")) ?
              /* istanbul ignore next */
              (cov_1ihmajautw().b[19][0]++, "Address data needs review") :
              /* istanbul ignore next */
              (cov_1ihmajautw().b[19][1]++, customer.address);
            }
          }
        } catch (e) {
          /* istanbul ignore next */
          cov_1ihmajautw().s[50]++;
          // Parsing failed, assume it's a plain text address (new records or already migrated)
          displayAddress = customer.address;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1ihmajautw().b[14][1]++;
      }
      const latestInvoice =
      /* istanbul ignore next */
      (cov_1ihmajautw().s[51]++,
      /* istanbul ignore next */
      (cov_1ihmajautw().b[21][0]++, customer.invoices) &&
      /* istanbul ignore next */
      (cov_1ihmajautw().b[21][1]++, customer.invoices[0]));
      const uiCustomer =
      /* istanbul ignore next */
      (cov_1ihmajautw().s[52]++, {
        id: customer.id,
        name: customer.name,
        email: customer.email,
        phone: customer.phone,
        address: displayAddress,
        customerType: customer.customerType,
        creditLimit: customer.creditLimit,
        creditPeriod: customer.creditPeriod,
        isActive: customer.isActive,
        createdAt: customer.createdAt,
        updatedAt: customer.updatedAt,
        lastPurchaseDate: latestInvoice ?
        /* istanbul ignore next */
        (cov_1ihmajautw().b[22][0]++, latestInvoice.createdAt) :
        /* istanbul ignore next */
        (cov_1ihmajautw().b[22][1]++, null),
        latestInvoicePaymentStatus: latestInvoice ?
        /* istanbul ignore next */
        (cov_1ihmajautw().b[23][0]++, latestInvoice.status) :
        /* istanbul ignore next */
        (cov_1ihmajautw().b[23][1]++, null),
        balance: customer.customerType === "wholesale" ?
        /* istanbul ignore next */
        (cov_1ihmajautw().b[24][0]++,
        /* istanbul ignore next */
        (cov_1ihmajautw().b[25][0]++, customer.creditLimit) ||
        /* istanbul ignore next */
        (cov_1ihmajautw().b[25][1]++, 0)) :
        /* istanbul ignore next */
        (cov_1ihmajautw().b[24][1]++, undefined),
        contactPerson: customer.name
      });
      /* istanbul ignore next */
      cov_1ihmajautw().s[53]++;
      return uiCustomer;
    }));
    let postFilteredCustomers =
    /* istanbul ignore next */
    (cov_1ihmajautw().s[54]++, formattedCustomers);
    /* istanbul ignore next */
    cov_1ihmajautw().s[55]++;
    if (customerType) {
      /* istanbul ignore next */
      cov_1ihmajautw().b[26][0]++;
      cov_1ihmajautw().s[56]++;
      postFilteredCustomers = postFilteredCustomers.filter(c => {
        /* istanbul ignore next */
        cov_1ihmajautw().f[6]++;
        cov_1ihmajautw().s[57]++;
        return c.customerType.toLowerCase() === customerType.toLowerCase();
      });
    } else
    /* istanbul ignore next */
    {
      cov_1ihmajautw().b[26][1]++;
    }
    cov_1ihmajautw().s[58]++;
    if (customerStatus) {
      /* istanbul ignore next */
      cov_1ihmajautw().b[27][0]++;
      cov_1ihmajautw().s[59]++;
      if (
      /* istanbul ignore next */
      (cov_1ihmajautw().b[29][0]++, customerStatus.toLowerCase() === "paid") ||
      /* istanbul ignore next */
      (cov_1ihmajautw().b[29][1]++, customerStatus.toLowerCase() === "unpaid") ||
      /* istanbul ignore next */
      (cov_1ihmajautw().b[29][2]++, customerStatus.toLowerCase() === "pending") ||
      /* istanbul ignore next */
      (cov_1ihmajautw().b[29][3]++, customerStatus.toLowerCase() === "partial")) {
        /* istanbul ignore next */
        cov_1ihmajautw().b[28][0]++;
        cov_1ihmajautw().s[60]++;
        postFilteredCustomers = postFilteredCustomers.filter(c => {
          /* istanbul ignore next */
          cov_1ihmajautw().f[7]++;
          cov_1ihmajautw().s[61]++;
          return c.latestInvoicePaymentStatus?.toLowerCase() === customerStatus.toLowerCase();
        });
      } else {
        /* istanbul ignore next */
        cov_1ihmajautw().b[28][1]++;
        cov_1ihmajautw().s[62]++;
        if (
        /* istanbul ignore next */
        (cov_1ihmajautw().b[31][0]++, customerStatus === "Active") ||
        /* istanbul ignore next */
        (cov_1ihmajautw().b[31][1]++, customerStatus === "Inactive")) {
          /* istanbul ignore next */
          cov_1ihmajautw().b[30][0]++;
          cov_1ihmajautw().s[63]++;
          postFilteredCustomers = postFilteredCustomers.filter(c => {
            /* istanbul ignore next */
            cov_1ihmajautw().f[8]++;
            cov_1ihmajautw().s[64]++;
            return c.isActive === (customerStatus === "Active");
          });
        } else
        /* istanbul ignore next */
        {
          cov_1ihmajautw().b[30][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ihmajautw().b[27][1]++;
    }
    cov_1ihmajautw().s[65]++;
    if (!isNaN(balanceMin)) {
      /* istanbul ignore next */
      cov_1ihmajautw().b[32][0]++;
      cov_1ihmajautw().s[66]++;
      postFilteredCustomers = postFilteredCustomers.filter(c => {
        /* istanbul ignore next */
        cov_1ihmajautw().f[9]++;
        cov_1ihmajautw().s[67]++;
        return /* istanbul ignore next */(cov_1ihmajautw().b[33][0]++, c.customerType === "wholesale") &&
        /* istanbul ignore next */
        (cov_1ihmajautw().b[33][1]++, (
        /* istanbul ignore next */
        (cov_1ihmajautw().b[34][0]++, c.balance) ||
        /* istanbul ignore next */
        (cov_1ihmajautw().b[34][1]++, 0)) >= balanceMin);
      });
    } else
    /* istanbul ignore next */
    {
      cov_1ihmajautw().b[32][1]++;
    }
    cov_1ihmajautw().s[68]++;
    if (!isNaN(balanceMax)) {
      /* istanbul ignore next */
      cov_1ihmajautw().b[35][0]++;
      cov_1ihmajautw().s[69]++;
      postFilteredCustomers = postFilteredCustomers.filter(c => {
        /* istanbul ignore next */
        cov_1ihmajautw().f[10]++;
        cov_1ihmajautw().s[70]++;
        return /* istanbul ignore next */(cov_1ihmajautw().b[36][0]++, c.customerType === "wholesale") &&
        /* istanbul ignore next */
        (cov_1ihmajautw().b[36][1]++, (
        /* istanbul ignore next */
        (cov_1ihmajautw().b[37][0]++, c.balance) ||
        /* istanbul ignore next */
        (cov_1ihmajautw().b[37][1]++, 0)) <= balanceMax);
      });
    } else
    /* istanbul ignore next */
    {
      cov_1ihmajautw().b[35][1]++;
    }
    cov_1ihmajautw().s[71]++;
    if (lastPurchaseFrom) {
      /* istanbul ignore next */
      cov_1ihmajautw().b[38][0]++;
      cov_1ihmajautw().s[72]++;
      postFilteredCustomers = postFilteredCustomers.filter(c => {
        /* istanbul ignore next */
        cov_1ihmajautw().f[11]++;
        cov_1ihmajautw().s[73]++;
        return /* istanbul ignore next */(cov_1ihmajautw().b[39][0]++, c.lastPurchaseDate) &&
        /* istanbul ignore next */
        (cov_1ihmajautw().b[39][1]++, new Date(c.lastPurchaseDate) >= new Date(lastPurchaseFrom));
      });
    } else
    /* istanbul ignore next */
    {
      cov_1ihmajautw().b[38][1]++;
    }
    cov_1ihmajautw().s[74]++;
    if (lastPurchaseTo) {
      /* istanbul ignore next */
      cov_1ihmajautw().b[40][0]++;
      cov_1ihmajautw().s[75]++;
      postFilteredCustomers = postFilteredCustomers.filter(c => {
        /* istanbul ignore next */
        cov_1ihmajautw().f[12]++;
        cov_1ihmajautw().s[76]++;
        return /* istanbul ignore next */(cov_1ihmajautw().b[41][0]++, c.lastPurchaseDate) &&
        /* istanbul ignore next */
        (cov_1ihmajautw().b[41][1]++, new Date(c.lastPurchaseDate) <= new Date(lastPurchaseTo));
      });
    } else
    /* istanbul ignore next */
    {
      cov_1ihmajautw().b[40][1]++;
    }
    cov_1ihmajautw().s[77]++;
    return {
      customers: postFilteredCustomers,
      totalPages: Math.ceil(totalCustomers / ITEMS_PER_PAGE),
      currentPage: page
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1ihmajautw().s[78]++;
    console.error("Error fetching customers:", error);
    /* istanbul ignore next */
    cov_1ihmajautw().s[79]++;
    return {
      customers: [],
      totalPages: 0,
      currentPage: 1,
      error: "Failed to fetch customers"
    };
  }
}
async function CustomersPage({
  searchParams
}) {
  /* istanbul ignore next */
  cov_1ihmajautw().f[13]++;
  const page =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[80]++, searchParams?.page);
  const search =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[81]++, searchParams?.search);
  const customerType =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[82]++, searchParams?.type);
  const status =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[83]++, searchParams?.status);
  const balanceMin =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[84]++, searchParams?.balanceMin);
  const balanceMax =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[85]++, searchParams?.balanceMax);
  const lastPurchaseFrom =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[86]++, searchParams?.lastPurchaseFrom);
  const lastPurchaseTo =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[87]++, searchParams?.lastPurchaseTo);
  const {
    customers,
    totalPages,
    currentPage,
    error
  } =
  /* istanbul ignore next */
  (cov_1ihmajautw().s[88]++, await fetchCustomersData(page, search, customerType, status, balanceMin, balanceMax, lastPurchaseFrom, lastPurchaseTo));
  /* istanbul ignore next */
  cov_1ihmajautw().s[89]++;
  if (error) {
    /* istanbul ignore next */
    cov_1ihmajautw().b[42][0]++;
    cov_1ihmajautw().s[90]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_MainLayout.default, {
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "container mx-auto px-4 py-8",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-red-500",
          children: error
        })
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_1ihmajautw().b[42][1]++;
  }
  cov_1ihmajautw().s[91]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_MainLayout.default, {
    children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "container mx-auto px-4 py-8",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_react.Suspense, {
        fallback: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex justify-center items-center h-64",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Loader2, {
            className: "animate-spin text-indigo-600",
            size: 48
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "ml-3 text-lg text-gray-600",
            children: "Loading customers..."
          })]
        }),
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_CustomerClientWrapper.default, {
          initialCustomers: customers,
          initialTotalPages: totalPages,
          initialCurrentPage: currentPage
        })
      })
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,