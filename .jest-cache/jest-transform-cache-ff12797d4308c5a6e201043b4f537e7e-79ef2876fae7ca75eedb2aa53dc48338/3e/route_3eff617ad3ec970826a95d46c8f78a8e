83e0be6db52fe1b18d987c6520630a99
"use strict";

/* istanbul ignore next */
function cov_2ps6q3bn3s() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/db-seed/route.ts";
  var hash = "cc46b6853a1d0d568bfba7ebff611e8377abf639";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/db-seed/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 30
        },
        end: {
          line: 12,
          column: 86
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "6": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 148,
          column: 5
        }
      },
      "7": {
        start: {
          line: 21,
          column: 30
        },
        end: {
          line: 21,
          column: 68
        }
      },
      "8": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "9": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 26,
          column: 15
        }
      },
      "10": {
        start: {
          line: 29,
          column: 30
        },
        end: {
          line: 34,
          column: 10
        }
      },
      "11": {
        start: {
          line: 35,
          column: 24
        },
        end: {
          line: 41,
          column: 10
        }
      },
      "12": {
        start: {
          line: 42,
          column: 26
        },
        end: {
          line: 48,
          column: 10
        }
      },
      "13": {
        start: {
          line: 50,
          column: 27
        },
        end: {
          line: 60,
          column: 10
        }
      },
      "14": {
        start: {
          line: 61,
          column: 23
        },
        end: {
          line: 71,
          column: 10
        }
      },
      "15": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 92,
          column: 11
        }
      },
      "16": {
        start: {
          line: 94,
          column: 26
        },
        end: {
          line: 99,
          column: 10
        }
      },
      "17": {
        start: {
          line: 100,
          column: 28
        },
        end: {
          line: 105,
          column: 10
        }
      },
      "18": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 113,
          column: 11
        }
      },
      "19": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 120,
          column: 11
        }
      },
      "20": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 127,
          column: 11
        }
      },
      "21": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 134,
          column: 11
        }
      },
      "22": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 138,
          column: 11
        }
      },
      "23": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 56
        }
      },
      "24": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 147,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "POST",
        decl: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 18,
            column: 19
          }
        },
        loc: {
          start: {
            line: 18,
            column: 22
          },
          end: {
            line: 149,
            column: 1
          }
        },
        line: 18
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 35
          },
          end: {
            line: 14,
            column: 38
          }
        }, {
          start: {
            line: 14,
            column: 41
          },
          end: {
            line: 16,
            column: 5
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 14
          }
        }, {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 14,
            column: 32
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 144,
            column: 19
          },
          end: {
            line: 144,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 144,
            column: 44
          },
          end: {
            line: 144,
            column: 57
          }
        }, {
          start: {
            line: 144,
            column: 60
          },
          end: {
            line: 144,
            column: 73
          }
        }],
        line: 144
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/db-seed/route.ts"],
      sourcesContent: ["import { NextResponse } from 'next/server';\nimport prisma from '@/lib/prisma';\n\nexport async function POST() {\n    try {\n        // Check if data already exists\n        const categoryCount = await prisma.category.count();\n        if (categoryCount > 0) {\n            return NextResponse.json({\n                success: true,\n                message: 'Data already exists. Skipping seed operation.'\n            });\n        }\n\n        // Create categories\n        const sportingGoods = await prisma.category.create({\n            data: {\n                name: 'Sporting Goods',\n                description: 'All sporting equipment and accessories'\n            }\n        });\n\n        const apparel = await prisma.category.create({\n            data: {\n                name: 'Apparel',\n                description: 'Clothing and uniforms',\n                parentId: sportingGoods.id\n            }\n        });\n\n        const equipment = await prisma.category.create({\n            data: {\n                name: 'Equipment',\n                description: 'Sports equipment',\n                parentId: sportingGoods.id\n            }\n        });\n\n        // Create products\n        const basketball = await prisma.product.create({\n            data: {\n                name: 'Professional Basketball',\n                sku: 'BB-PRO-001',\n                barcode: '123456789012',\n                description: 'Official size and weight basketball',\n                cost: 25.00,\n                price: 39.99,\n                categoryId: equipment.id\n            }\n        });\n\n        const jersey = await prisma.product.create({\n            data: {\n                name: 'Team Jersey',\n                sku: 'APP-JRS-001',\n                barcode: '123456789013',\n                description: 'Official team jersey',\n                cost: 35.00,\n                price: 59.99,\n                categoryId: apparel.id\n            }\n        });\n\n        // Creating some default products\n        await prisma.product.createMany({\n            data: [\n                {\n                    name: 'Cricket Bat',\n                    sku: 'CB-001',\n                    description: 'Professional grade cricket bat',\n                    price: 120.00,\n                    weightedAverageCost: 25.00,\n                    categoryId: equipment.id\n                },\n                {\n                    name: 'Tennis Racket',\n                    sku: 'TR-001',\n                    description: 'Professional tennis racket',\n                    price: 150.00,\n                    weightedAverageCost: 35.00,\n                    categoryId: equipment.id\n                }\n            ]\n        });\n\n        // Create shops\n        const mainStore = await prisma.shop.create({\n            data: {\n                name: 'MD Sports Main Store',\n                location: 'Colombo'\n            }\n        });\n\n        const branchStore = await prisma.shop.create({\n            data: {\n                name: 'MD Sports Kandy Branch',\n                location: 'Kandy'\n            }\n        });\n\n        // Create inventory items\n        await prisma.inventoryItem.create({\n            data: {\n                shopId: mainStore.id,\n                productId: basketball.id,\n                quantity: 50\n            }\n        });\n\n        await prisma.inventoryItem.create({\n            data: {\n                shopId: mainStore.id,\n                productId: jersey.id,\n                quantity: 30\n            }\n        });\n\n        await prisma.inventoryItem.create({\n            data: {\n                shopId: branchStore.id,\n                productId: basketball.id,\n                quantity: 25\n            }\n        });\n\n        await prisma.inventoryItem.create({\n            data: {\n                shopId: branchStore.id,\n                productId: jersey.id,\n                quantity: 15\n            }\n        });\n\n        return NextResponse.json({\n            success: true,\n            message: 'Database seeded successfully.'\n        });\n    } catch (error) {\n        console.error('Error seeding database:', error);\n        return NextResponse.json({\n            success: false,\n            message: 'Error seeding database',\n            error: error instanceof Error ? error.message : String(error)\n        }, { status: 500 });\n    }\n} "],
      names: ["POST", "categoryCount", "prisma", "category", "count", "NextResponse", "json", "success", "message", "sportingGoods", "create", "data", "name", "description", "apparel", "parentId", "id", "equipment", "basketball", "product", "sku", "barcode", "cost", "price", "categoryId", "jersey", "createMany", "weightedAverageCost", "mainStore", "shop", "location", "branchStore", "inventoryItem", "shopId", "productId", "quantity", "error", "console", "Error", "String", "status"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cc46b6853a1d0d568bfba7ebff611e8377abf639"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ps6q3bn3s = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ps6q3bn3s();
cov_2ps6q3bn3s().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2ps6q3bn3s().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2ps6q3bn3s().f[0]++;
    cov_2ps6q3bn3s().s[2]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_2ps6q3bn3s().s[3]++, require("next/server"));
const _prisma =
/* istanbul ignore next */
(/*#__PURE__*/cov_2ps6q3bn3s().s[4]++, _interop_require_default(require("../../../lib/prisma")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2ps6q3bn3s().f[1]++;
  cov_2ps6q3bn3s().s[5]++;
  return /* istanbul ignore next */(cov_2ps6q3bn3s().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2ps6q3bn3s().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2ps6q3bn3s().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2ps6q3bn3s().b[0][1]++, {
    default: obj
  });
}
async function POST() {
  /* istanbul ignore next */
  cov_2ps6q3bn3s().f[2]++;
  cov_2ps6q3bn3s().s[6]++;
  try {
    // Check if data already exists
    const categoryCount =
    /* istanbul ignore next */
    (cov_2ps6q3bn3s().s[7]++, await _prisma.default.category.count());
    /* istanbul ignore next */
    cov_2ps6q3bn3s().s[8]++;
    if (categoryCount > 0) {
      /* istanbul ignore next */
      cov_2ps6q3bn3s().b[2][0]++;
      cov_2ps6q3bn3s().s[9]++;
      return _server.NextResponse.json({
        success: true,
        message: "Data already exists. Skipping seed operation."
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ps6q3bn3s().b[2][1]++;
    }
    // Create categories
    const sportingGoods =
    /* istanbul ignore next */
    (cov_2ps6q3bn3s().s[10]++, await _prisma.default.category.create({
      data: {
        name: "Sporting Goods",
        description: "All sporting equipment and accessories"
      }
    }));
    const apparel =
    /* istanbul ignore next */
    (cov_2ps6q3bn3s().s[11]++, await _prisma.default.category.create({
      data: {
        name: "Apparel",
        description: "Clothing and uniforms",
        parentId: sportingGoods.id
      }
    }));
    const equipment =
    /* istanbul ignore next */
    (cov_2ps6q3bn3s().s[12]++, await _prisma.default.category.create({
      data: {
        name: "Equipment",
        description: "Sports equipment",
        parentId: sportingGoods.id
      }
    }));
    // Create products
    const basketball =
    /* istanbul ignore next */
    (cov_2ps6q3bn3s().s[13]++, await _prisma.default.product.create({
      data: {
        name: "Professional Basketball",
        sku: "BB-PRO-001",
        barcode: "123456789012",
        description: "Official size and weight basketball",
        cost: 25.00,
        price: 39.99,
        categoryId: equipment.id
      }
    }));
    const jersey =
    /* istanbul ignore next */
    (cov_2ps6q3bn3s().s[14]++, await _prisma.default.product.create({
      data: {
        name: "Team Jersey",
        sku: "APP-JRS-001",
        barcode: "123456789013",
        description: "Official team jersey",
        cost: 35.00,
        price: 59.99,
        categoryId: apparel.id
      }
    }));
    // Creating some default products
    /* istanbul ignore next */
    cov_2ps6q3bn3s().s[15]++;
    await _prisma.default.product.createMany({
      data: [{
        name: "Cricket Bat",
        sku: "CB-001",
        description: "Professional grade cricket bat",
        price: 120.00,
        weightedAverageCost: 25.00,
        categoryId: equipment.id
      }, {
        name: "Tennis Racket",
        sku: "TR-001",
        description: "Professional tennis racket",
        price: 150.00,
        weightedAverageCost: 35.00,
        categoryId: equipment.id
      }]
    });
    // Create shops
    const mainStore =
    /* istanbul ignore next */
    (cov_2ps6q3bn3s().s[16]++, await _prisma.default.shop.create({
      data: {
        name: "MD Sports Main Store",
        location: "Colombo"
      }
    }));
    const branchStore =
    /* istanbul ignore next */
    (cov_2ps6q3bn3s().s[17]++, await _prisma.default.shop.create({
      data: {
        name: "MD Sports Kandy Branch",
        location: "Kandy"
      }
    }));
    // Create inventory items
    /* istanbul ignore next */
    cov_2ps6q3bn3s().s[18]++;
    await _prisma.default.inventoryItem.create({
      data: {
        shopId: mainStore.id,
        productId: basketball.id,
        quantity: 50
      }
    });
    /* istanbul ignore next */
    cov_2ps6q3bn3s().s[19]++;
    await _prisma.default.inventoryItem.create({
      data: {
        shopId: mainStore.id,
        productId: jersey.id,
        quantity: 30
      }
    });
    /* istanbul ignore next */
    cov_2ps6q3bn3s().s[20]++;
    await _prisma.default.inventoryItem.create({
      data: {
        shopId: branchStore.id,
        productId: basketball.id,
        quantity: 25
      }
    });
    /* istanbul ignore next */
    cov_2ps6q3bn3s().s[21]++;
    await _prisma.default.inventoryItem.create({
      data: {
        shopId: branchStore.id,
        productId: jersey.id,
        quantity: 15
      }
    });
    /* istanbul ignore next */
    cov_2ps6q3bn3s().s[22]++;
    return _server.NextResponse.json({
      success: true,
      message: "Database seeded successfully."
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2ps6q3bn3s().s[23]++;
    console.error("Error seeding database:", error);
    /* istanbul ignore next */
    cov_2ps6q3bn3s().s[24]++;
    return _server.NextResponse.json({
      success: false,
      message: "Error seeding database",
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2ps6q3bn3s().b[3][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2ps6q3bn3s().b[3][1]++, String(error))
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,