11e50d508bddad8d1a7e6f275bc7223d
"use client";
"use strict";

/* istanbul ignore next */
function cov_19v63dmwtw() {
  var path = "/Users/sachin/Documents/md-sports-/src/components/inventory/InventoryHeaderActions.tsx";
  var hash = "a064797ca8c6679768fb76ba4ed242a89bbef93b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/components/inventory/InventoryHeaderActions.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 38
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 46
        }
      },
      "6": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 15,
          column: 44
        }
      },
      "7": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 16,
          column: 39
        }
      },
      "8": {
        start: {
          line: 17,
          column: 41
        },
        end: {
          line: 17,
          column: 97
        }
      },
      "9": {
        start: {
          line: 18,
          column: 39
        },
        end: {
          line: 18,
          column: 93
        }
      },
      "10": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 53
        }
      },
      "11": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 52
        }
      },
      "12": {
        start: {
          line: 21,
          column: 23
        },
        end: {
          line: 21,
          column: 61
        }
      },
      "13": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 25,
          column: 6
        }
      },
      "14": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 51
        }
      },
      "15": {
        start: {
          line: 28,
          column: 39
        },
        end: {
          line: 28,
          column: 51
        }
      },
      "16": {
        start: {
          line: 29,
          column: 28
        },
        end: {
          line: 29,
          column: 41
        }
      },
      "17": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 30,
          column: 40
        }
      },
      "18": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 20
        }
      },
      "19": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 66
        }
      },
      "20": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "21": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 19
        }
      },
      "22": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "23": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 42,
          column: 10
        }
      },
      "24": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 53
        }
      },
      "25": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "26": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 30
        }
      },
      "27": {
        start: {
          line: 48,
          column: 17
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "28": {
        start: {
          line: 51,
          column: 32
        },
        end: {
          line: 51,
          column: 88
        }
      },
      "29": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "30": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "31": {
        start: {
          line: 54,
          column: 23
        },
        end: {
          line: 54,
          column: 95
        }
      },
      "32": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 59,
          column: 13
        }
      },
      "33": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 57
        }
      },
      "34": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 39
        }
      },
      "35": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 25
        }
      },
      "36": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "37": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 31
        }
      },
      "38": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 18
        }
      },
      "39": {
        start: {
          line: 69,
          column: 19
        },
        end: {
          line: 69,
          column: 47
        }
      },
      "40": {
        start: {
          line: 70,
          column: 62
        },
        end: {
          line: 70,
          column: 89
        }
      },
      "41": {
        start: {
          line: 71,
          column: 58
        },
        end: {
          line: 71,
          column: 85
        }
      },
      "42": {
        start: {
          line: 72,
          column: 50
        },
        end: {
          line: 72,
          column: 76
        }
      },
      "43": {
        start: {
          line: 73,
          column: 42
        },
        end: {
          line: 73,
          column: 69
        }
      },
      "44": {
        start: {
          line: 74,
          column: 42
        },
        end: {
          line: 74,
          column: 68
        }
      },
      "45": {
        start: {
          line: 75,
          column: 46
        },
        end: {
          line: 75,
          column: 72
        }
      },
      "46": {
        start: {
          line: 76,
          column: 44
        },
        end: {
          line: 76,
          column: 71
        }
      },
      "47": {
        start: {
          line: 77,
          column: 24
        },
        end: {
          line: 77,
          column: 55
        }
      },
      "48": {
        start: {
          line: 78,
          column: 24
        },
        end: {
          line: 78,
          column: 57
        }
      },
      "49": {
        start: {
          line: 79,
          column: 25
        },
        end: {
          line: 79,
          column: 52
        }
      },
      "50": {
        start: {
          line: 81,
          column: 30
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "51": {
        start: {
          line: 83,
          column: 22
        },
        end: {
          line: 83,
          column: 60
        }
      },
      "52": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 36
        }
      },
      "53": {
        start: {
          line: 87,
          column: 29
        },
        end: {
          line: 89,
          column: 5
        }
      },
      "54": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 34
        }
      },
      "55": {
        start: {
          line: 91,
          column: 31
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "56": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 33
        }
      },
      "57": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 39
        }
      },
      "58": {
        start: {
          line: 96,
          column: 33
        },
        end: {
          line: 99,
          column: 5
        }
      },
      "59": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 24
        }
      },
      "60": {
        start: {
          line: 101,
          column: 33
        },
        end: {
          line: 104,
          column: 5
        }
      },
      "61": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 24
        }
      },
      "62": {
        start: {
          line: 106,
          column: 50
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "63": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 110,
          column: 11
        }
      },
      "64": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 38
        }
      },
      "65": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 39
        }
      },
      "66": {
        start: {
          line: 114,
          column: 36
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "67": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "68": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 41
        }
      },
      "69": {
        start: {
          line: 120,
          column: 30
        },
        end: {
          line: 136,
          column: 5
        }
      },
      "70": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 30
        }
      },
      "71": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "72": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 126,
          column: 15
        }
      },
      "73": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 129,
          column: 15
        }
      },
      "74": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 28
        }
      },
      "75": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 67
        }
      },
      "76": {
        start: {
          line: 132,
          column: 41
        },
        end: {
          line: 132,
          column: 65
        }
      },
      "77": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 35
        }
      },
      "78": {
        start: {
          line: 137,
          column: 29
        },
        end: {
          line: 184,
          column: 5
        }
      },
      "79": {
        start: {
          line: 138,
          column: 21
        },
        end: {
          line: 138,
          column: 44
        }
      },
      "80": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "81": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 19
        }
      },
      "82": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 29
        }
      },
      "83": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 29
        }
      },
      "84": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 31
        }
      },
      "85": {
        start: {
          line: 145,
          column: 25
        },
        end: {
          line: 145,
          column: 39
        }
      },
      "86": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 38
        }
      },
      "87": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "88": {
        start: {
          line: 148,
          column: 29
        },
        end: {
          line: 151,
          column: 14
        }
      },
      "89": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 160,
          column: 13
        }
      },
      "90": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 154,
          column: 47
        }
      },
      "91": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 82
        }
      },
      "92": {
        start: {
          line: 157,
          column: 37
        },
        end: {
          line: 157,
          column: 58
        }
      },
      "93": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 158,
          column: 70
        }
      },
      "94": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 159,
          column: 116
        }
      },
      "95": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 164,
          column: 13
        }
      },
      "96": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 75
        }
      },
      "97": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 111
        }
      },
      "98": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 82
        }
      },
      "99": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 169,
          column: 15
        }
      },
      "100": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 172,
          column: 15
        }
      },
      "101": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 28
        }
      },
      "102": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 56
        }
      },
      "103": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 89
        }
      },
      "104": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 34
        }
      },
      "105": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 182,
          column: 13
        }
      },
      "106": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 181,
          column: 48
        }
      },
      "107": {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 339,
          column: 7
        }
      },
      "108": {
        start: {
          line: 193,
          column: 37
        },
        end: {
          line: 193,
          column: 57
        }
      },
      "109": {
        start: {
          line: 205,
          column: 37
        },
        end: {
          line: 205,
          column: 59
        }
      },
      "110": {
        start: {
          line: 248,
          column: 37
        },
        end: {
          line: 248,
          column: 73
        }
      },
      "111": {
        start: {
          line: 259,
          column: 37
        },
        end: {
          line: 259,
          column: 65
        }
      },
      "112": {
        start: {
          line: 281,
          column: 37
        },
        end: {
          line: 281,
          column: 75
        }
      },
      "113": {
        start: {
          line: 293,
          column: 37
        },
        end: {
          line: 293,
          column: 84
        }
      },
      "114": {
        start: {
          line: 328,
          column: 29
        },
        end: {
          line: 328,
          column: 60
        }
      },
      "115": {
        start: {
          line: 334,
          column: 29
        },
        end: {
          line: 334,
          column: 58
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 33
          }
        },
        loc: {
          start: {
            line: 22,
            column: 39
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 22
      },
      "2": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 33
          }
        },
        loc: {
          start: {
            line: 27,
            column: 47
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 27
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 31,
            column: 39
          },
          end: {
            line: 31,
            column: 40
          }
        },
        loc: {
          start: {
            line: 31,
            column: 61
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "4": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 35,
            column: 9
          },
          end: {
            line: 35,
            column: 34
          }
        },
        loc: {
          start: {
            line: 35,
            column: 53
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 35
      },
      "5": {
        name: "InventoryHeaderActions",
        decl: {
          start: {
            line: 68,
            column: 9
          },
          end: {
            line: 68,
            column: 31
          }
        },
        loc: {
          start: {
            line: 68,
            column: 34
          },
          end: {
            line: 340,
            column: 1
          }
        },
        line: 68
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 81,
            column: 30
          },
          end: {
            line: 81,
            column: 31
          }
        },
        loc: {
          start: {
            line: 81,
            column: 34
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 81
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 87,
            column: 29
          },
          end: {
            line: 87,
            column: 30
          }
        },
        loc: {
          start: {
            line: 87,
            column: 33
          },
          end: {
            line: 89,
            column: 5
          }
        },
        line: 87
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 91,
            column: 31
          },
          end: {
            line: 91,
            column: 32
          }
        },
        loc: {
          start: {
            line: 91,
            column: 35
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 91
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 96,
            column: 33
          },
          end: {
            line: 96,
            column: 34
          }
        },
        loc: {
          start: {
            line: 96,
            column: 43
          },
          end: {
            line: 99,
            column: 5
          }
        },
        line: 96
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 101,
            column: 33
          },
          end: {
            line: 101,
            column: 34
          }
        },
        loc: {
          start: {
            line: 101,
            column: 43
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 101
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 106,
            column: 50
          },
          end: {
            line: 106,
            column: 51
          }
        },
        loc: {
          start: {
            line: 106,
            column: 76
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 106
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 114,
            column: 36
          },
          end: {
            line: 114,
            column: 37
          }
        },
        loc: {
          start: {
            line: 114,
            column: 40
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 114
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 120,
            column: 30
          },
          end: {
            line: 120,
            column: 31
          }
        },
        loc: {
          start: {
            line: 120,
            column: 40
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 120
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 132,
            column: 30
          },
          end: {
            line: 132,
            column: 31
          }
        },
        loc: {
          start: {
            line: 132,
            column: 41
          },
          end: {
            line: 132,
            column: 65
          }
        },
        line: 132
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 137,
            column: 29
          },
          end: {
            line: 137,
            column: 30
          }
        },
        loc: {
          start: {
            line: 137,
            column: 44
          },
          end: {
            line: 184,
            column: 5
          }
        },
        line: 137
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 193,
            column: 33
          },
          end: {
            line: 193,
            column: 34
          }
        },
        loc: {
          start: {
            line: 193,
            column: 37
          },
          end: {
            line: 193,
            column: 57
          }
        },
        line: 193
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 205,
            column: 33
          },
          end: {
            line: 205,
            column: 34
          }
        },
        loc: {
          start: {
            line: 205,
            column: 37
          },
          end: {
            line: 205,
            column: 59
          }
        },
        line: 205
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 248,
            column: 33
          },
          end: {
            line: 248,
            column: 34
          }
        },
        loc: {
          start: {
            line: 248,
            column: 37
          },
          end: {
            line: 248,
            column: 73
          }
        },
        line: 248
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 259,
            column: 33
          },
          end: {
            line: 259,
            column: 34
          }
        },
        loc: {
          start: {
            line: 259,
            column: 37
          },
          end: {
            line: 259,
            column: 65
          }
        },
        line: 259
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 281,
            column: 33
          },
          end: {
            line: 281,
            column: 34
          }
        },
        loc: {
          start: {
            line: 281,
            column: 37
          },
          end: {
            line: 281,
            column: 75
          }
        },
        line: 281
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 293,
            column: 33
          },
          end: {
            line: 293,
            column: 34
          }
        },
        loc: {
          start: {
            line: 293,
            column: 37
          },
          end: {
            line: 293,
            column: 84
          }
        },
        line: 293
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 328,
            column: 25
          },
          end: {
            line: 328,
            column: 26
          }
        },
        loc: {
          start: {
            line: 328,
            column: 29
          },
          end: {
            line: 328,
            column: 60
          }
        },
        line: 328
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 334,
            column: 25
          },
          end: {
            line: 334,
            column: 26
          }
        },
        loc: {
          start: {
            line: 334,
            column: 29
          },
          end: {
            line: 334,
            column: 58
          }
        },
        line: 334
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 11
          },
          end: {
            line: 25,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 35
          },
          end: {
            line: 23,
            column: 38
          }
        }, {
          start: {
            line: 23,
            column: 41
          },
          end: {
            line: 25,
            column: 5
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 11
          },
          end: {
            line: 23,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 11
          },
          end: {
            line: 23,
            column: 14
          }
        }, {
          start: {
            line: 23,
            column: 18
          },
          end: {
            line: 23,
            column: 32
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 15
          },
          end: {
            line: 32,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 32,
            column: 45
          }
        }, {
          start: {
            line: 32,
            column: 48
          },
          end: {
            line: 32,
            column: 65
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "5": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 20
          }
        }, {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 27
          }
        }, {
          start: {
            line: 36,
            column: 31
          },
          end: {
            line: 36,
            column: 45
          }
        }],
        line: 36
      },
      "6": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "7": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 20
          }
        }, {
          start: {
            line: 39,
            column: 24
          },
          end: {
            line: 39,
            column: 47
          }
        }, {
          start: {
            line: 39,
            column: 51
          },
          end: {
            line: 39,
            column: 76
          }
        }],
        line: 39
      },
      "8": {
        loc: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "9": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 45,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 45,
            column: 13
          }
        }, {
          start: {
            line: 45,
            column: 17
          },
          end: {
            line: 45,
            column: 31
          }
        }],
        line: 45
      },
      "10": {
        loc: {
          start: {
            line: 51,
            column: 32
          },
          end: {
            line: 51,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 32
          },
          end: {
            line: 51,
            column: 53
          }
        }, {
          start: {
            line: 51,
            column: 57
          },
          end: {
            line: 51,
            column: 88
          }
        }],
        line: 51
      },
      "11": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "12": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 29
          }
        }, {
          start: {
            line: 53,
            column: 33
          },
          end: {
            line: 53,
            column: 79
          }
        }],
        line: 53
      },
      "13": {
        loc: {
          start: {
            line: 54,
            column: 23
          },
          end: {
            line: 54,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 54,
            column: 47
          },
          end: {
            line: 54,
            column: 88
          }
        }, {
          start: {
            line: 54,
            column: 91
          },
          end: {
            line: 54,
            column: 95
          }
        }],
        line: 54
      },
      "14": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: 57,
            column: 19
          },
          end: {
            line: 59,
            column: 13
          }
        }],
        line: 55
      },
      "15": {
        loc: {
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 55,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 55,
            column: 20
          }
        }, {
          start: {
            line: 55,
            column: 25
          },
          end: {
            line: 55,
            column: 33
          }
        }, {
          start: {
            line: 55,
            column: 37
          },
          end: {
            line: 55,
            column: 45
          }
        }],
        line: 55
      },
      "16": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "17": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "18": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "19": {
        loc: {
          start: {
            line: 159,
            column: 81
          },
          end: {
            line: 159,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 81
          },
          end: {
            line: 159,
            column: 93
          }
        }, {
          start: {
            line: 159,
            column: 97
          },
          end: {
            line: 159,
            column: 113
          }
        }],
        line: 159
      },
      "20": {
        loc: {
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 164,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 164,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "21": {
        loc: {
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 161,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 161,
            column: 28
          }
        }, {
          start: {
            line: 161,
            column: 32
          },
          end: {
            line: 161,
            column: 39
          }
        }, {
          start: {
            line: 161,
            column: 43
          },
          end: {
            line: 161,
            column: 58
          }
        }],
        line: 161
      },
      "22": {
        loc: {
          start: {
            line: 163,
            column: 32
          },
          end: {
            line: 163,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 32
          },
          end: {
            line: 163,
            column: 47
          }
        }, {
          start: {
            line: 163,
            column: 51
          },
          end: {
            line: 163,
            column: 109
          }
        }],
        line: 163
      },
      "23": {
        loc: {
          start: {
            line: 165,
            column: 29
          },
          end: {
            line: 165,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 29
          },
          end: {
            line: 165,
            column: 43
          }
        }, {
          start: {
            line: 165,
            column: 47
          },
          end: {
            line: 165,
            column: 80
          }
        }],
        line: 165
      },
      "24": {
        loc: {
          start: {
            line: 176,
            column: 27
          },
          end: {
            line: 176,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 27
          },
          end: {
            line: 176,
            column: 38
          }
        }, {
          start: {
            line: 176,
            column: 42
          },
          end: {
            line: 176,
            column: 87
          }
        }],
        line: 176
      },
      "25": {
        loc: {
          start: {
            line: 180,
            column: 12
          },
          end: {
            line: 182,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 12
          },
          end: {
            line: 182,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "26": {
        loc: {
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 198,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 187,
            column: 23
          }
        }, {
          start: {
            line: 187,
            column: 41
          },
          end: {
            line: 198,
            column: 14
          }
        }],
        line: 187
      },
      "27": {
        loc: {
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 210,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 199,
            column: 25
          }
        }, {
          start: {
            line: 199,
            column: 43
          },
          end: {
            line: 210,
            column: 14
          }
        }],
        line: 199
      },
      "28": {
        loc: {
          start: {
            line: 237,
            column: 54
          },
          end: {
            line: 237,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 237,
            column: 69
          },
          end: {
            line: 237,
            column: 83
          }
        }, {
          start: {
            line: 237,
            column: 86
          },
          end: {
            line: 237,
            column: 88
          }
        }],
        line: 237
      },
      "29": {
        loc: {
          start: {
            line: 241,
            column: 42
          },
          end: {
            line: 241,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 241,
            column: 57
          },
          end: {
            line: 241,
            column: 72
          }
        }, {
          start: {
            line: 241,
            column: 75
          },
          end: {
            line: 241,
            column: 89
          }
        }],
        line: 241
      },
      "30": {
        loc: {
          start: {
            line: 307,
            column: 28
          },
          end: {
            line: 311,
            column: 30
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 307,
            column: 56
          },
          end: {
            line: 309,
            column: 30
          }
        }, {
          start: {
            line: 309,
            column: 47
          },
          end: {
            line: 311,
            column: 30
          }
        }],
        line: 307
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/components/inventory/InventoryHeaderActions.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { Filter, ArrowUpDown, ShoppingBag, PlusCircle, Package, Store, Download, Upload, Loader2, RotateCw } from 'lucide-react';\nimport { Button } from '@/components/ui/Button';\nimport AddInventoryModal from '@/components/inventory/AddInventoryModal';\nimport NewProductModal from '@/components/inventory/NewProductModal';\nimport React from 'react';\nimport { useInventory } from '@/hooks/useQueries';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { queryKeys } from '@/context/QueryProvider';\n\nexport default function InventoryHeaderActions() {\n    const router = useRouter();\n    const [showAddInventoryModal, setShowAddInventoryModal] = useState(false);\n    const [showNewProductModal, setShowNewProductModal] = useState(false);\n    const [selectedProduct, setSelectedProduct] = useState<{ id: number, name: string } | null>(null);\n    const [isUploading, setIsUploading] = useState(false);\n    const [uploadError, setUploadError] = useState<string | null>(null);\n    const [uploadSuccess, setUploadSuccess] = useState<string | null>(null);\n    const [isRefreshing, setIsRefreshing] = useState(false);\n    const { refetch } = useInventory();\n    const queryClient = useQueryClient();\n\n    const fileInputRef = React.useRef<HTMLInputElement>(null);\n\n    // Toggle filter panel\n    const toggleFilterPanel = () => {\n        // This is now handled in the InventoryClientWrapper\n        const event = new CustomEvent('toggle-filter-panel');\n        window.dispatchEvent(event);\n    };\n\n    // Add Product handler\n    const handleAddProduct = () => {\n        router.push('/purchases');\n    };\n\n    // Add Direct Inventory handler\n    const handleAddInventory = () => {\n        setSelectedProduct(null);\n        setShowAddInventoryModal(true);\n    };\n\n    // Handle successful inventory addition\n    const handleInventoryAdded = async () => {\n        // Use React Query's refetch instead of router.refresh()\n        await refetch();\n    };\n\n    // Handle successful product creation\n    const handleProductCreated = async () => {\n        // Use React Query's refetch instead of router.refresh()\n        await refetch();\n    };\n\n    // Handle product created and add to inventory\n    const handleProductCreatedAndAddToInventory = (productId: number, productName: string) => {\n        setSelectedProduct({ id: productId, name: productName });\n        setShowNewProductModal(false);\n        setShowAddInventoryModal(true);\n    };\n\n    const handleImportButtonClick = () => {\n        if (fileInputRef.current) {\n            fileInputRef.current.click(); // Trigger click on hidden file input\n        }\n    };\n\n    // Handle manual data refresh\n    const handleRefreshData = async () => {\n        setIsRefreshing(true);\n        try {\n            // Invalidate all relevant queries\n            await queryClient.invalidateQueries({ queryKey: queryKeys.inventory });\n            await queryClient.invalidateQueries({ queryKey: queryKeys.products });\n            await refetch();\n\n            // Add a small delay to show the refreshing state\n            await new Promise(resolve => setTimeout(resolve, 500));\n        } finally {\n            setIsRefreshing(false);\n        }\n    };\n\n    const handleFileChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\n        const file = event.target.files?.[0];\n        if (!file) {\n            return;\n        }\n\n        setIsUploading(true);\n        setUploadError(null);\n        setUploadSuccess(null);\n\n        const formData = new FormData();\n        formData.append('file', file);\n\n        try {\n            const response = await fetch('/api/products/bulk-import', {\n                method: 'POST',\n                body: formData,\n            });\n\n            let result;\n            try {\n                result = await response.json();\n            } catch (jsonError) {\n                console.error('Failed to parse API response as JSON:', jsonError);\n                const responseText = await response.text(); // Try to get raw text\n                console.error('Raw API response text:', responseText);\n                throw new Error('Failed to parse server response. Raw text: ' + (responseText || 'Empty response'));\n            }\n\n            if (!response.ok || !result || !result.success) {\n                console.error('Bulk import failed. API Response:', result);\n                throw new Error(result?.message || 'Bulk import failed. Please check the file and try again.');\n            }\n            setUploadSuccess(result.message || 'Products imported successfully!');\n\n            // Invalidate queries and refetch data\n            queryClient.invalidateQueries({ queryKey: queryKeys.products });\n            queryClient.invalidateQueries({ queryKey: queryKeys.inventory });\n            await refetch();\n        } catch (err: any) {\n            console.error('Error uploading file:', err);\n            setUploadError(err.message || 'An unexpected error occurred during upload.');\n        } finally {\n            setIsUploading(false);\n            // Reset file input to allow re-uploading the same file if needed\n            if (fileInputRef.current) {\n                fileInputRef.current.value = '';\n            }\n        }\n    };\n\n    return (\n        <>\n            {uploadError && (\n                <div className=\"my-2 p-3 bg-red-100 text-red-700 border border-red-400 rounded-md\">\n                    Error: {uploadError}\n                    <button onClick={() => setUploadError(null)} className=\"ml-4 text-red-700 font-bold\">X</button>\n                </div>\n            )}\n            {uploadSuccess && (\n                <div className=\"my-2 p-3 bg-green-100 text-green-700 border border-green-400 rounded-md\">\n                    Success: {uploadSuccess}\n                    <button onClick={() => setUploadSuccess(null)} className=\"ml-4 text-green-700 font-bold\">X</button>\n                </div>\n            )}\n            <div className=\"flex flex-wrap gap-3\">\n                <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={toggleFilterPanel}\n                    className=\"flex items-center gap-1\"\n                >\n                    <Filter className=\"w-4 h-4\" />\n                    <span className=\"hidden sm:inline\">Filter</span>\n                </Button>\n\n                <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={handleRefreshData}\n                    disabled={isRefreshing}\n                    className=\"flex items-center gap-1\"\n                >\n                    <RotateCw className={`w-4 h-4 ${isRefreshing ? 'animate-spin' : ''}`} />\n                    <span className=\"hidden sm:inline\">\n                        {isRefreshing ? 'Refreshing...' : 'Refresh Data'}\n                    </span>\n                </Button>\n                <Button\n                    variant=\"secondary\"\n                    size=\"sm\"\n                    onClick={() => router.push('/inventory/categories')}\n                >\n                    <ArrowUpDown className=\"w-4 h-4 mr-2\" />\n                    Manage Categories\n                </Button>\n                <Button\n                    variant=\"secondary\"\n                    size=\"sm\"\n                    onClick={() => setShowNewProductModal(true)}\n                >\n                    <ShoppingBag className=\"w-4 h-4 mr-2\" />\n                    New Product\n                </Button>\n\n                <Button\n                    variant=\"primary\"\n                    size=\"sm\"\n                    onClick={handleAddProduct}\n                >\n                    <Package className=\"w-4 h-4 mr-2\" />\n                    Add Stock via Purchase\n                </Button>\n                <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => router.push('/inventory/distribution')}\n                    className=\"text-black\"\n                >\n                    <Store className=\"h-4 w-4 mr-2\" />\n                    Shop Distribution\n                </Button>\n                <Button\n                    variant=\"info\"\n                    size=\"sm\"\n                    onClick={() => window.location.href = '/api/products/template'}\n                >\n                    <Download className=\"w-4 h-4 mr-2\" />\n                    Download Template\n                </Button>\n                <Button\n                    variant=\"success\"\n                    size=\"sm\"\n                    onClick={handleImportButtonClick}\n                    disabled={isUploading}\n                >\n                    {isUploading ? (\n                        <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                    ) : (\n                        <Upload className=\"w-4 h-4 mr-2\" />\n                    )}\n                    Import Products\n                </Button>\n                <input\n                    type=\"file\"\n                    ref={fileInputRef}\n                    onChange={handleFileChange}\n                    accept=\".xlsx, .xls\"\n                    style={{ display: 'none' }}\n                />\n            </div>\n\n            {/* Add Inventory Modal */}\n            <AddInventoryModal\n                isOpen={showAddInventoryModal}\n                onClose={() => setShowAddInventoryModal(false)}\n                onSuccess={handleInventoryAdded}\n                preselectedProduct={selectedProduct}\n            />\n\n            {/* New Product Modal */}\n            <NewProductModal\n                isOpen={showNewProductModal}\n                onClose={() => setShowNewProductModal(false)}\n                onSuccess={handleProductCreated}\n                onAddToInventory={handleProductCreatedAndAddToInventory}\n            />\n        </>\n    );\n}"],
      names: ["InventoryHeaderActions", "router", "useRouter", "showAddInventoryModal", "setShowAddInventoryModal", "useState", "showNewProductModal", "setShowNewProductModal", "selectedProduct", "setSelectedProduct", "isUploading", "setIsUploading", "uploadError", "setUploadError", "uploadSuccess", "setUploadSuccess", "isRefreshing", "setIsRefreshing", "refetch", "useInventory", "queryClient", "useQueryClient", "fileInputRef", "React", "useRef", "toggleFilterPanel", "event", "CustomEvent", "window", "dispatchEvent", "handleAddProduct", "push", "handleAddInventory", "handleInventoryAdded", "handleProductCreated", "handleProductCreatedAndAddToInventory", "productId", "productName", "id", "name", "handleImportButtonClick", "current", "click", "handleRefreshData", "invalidateQueries", "queryKey", "queryKeys", "inventory", "products", "Promise", "resolve", "setTimeout", "handleFileChange", "file", "target", "files", "formData", "FormData", "append", "response", "fetch", "method", "body", "result", "json", "jsonError", "console", "error", "responseText", "text", "Error", "ok", "success", "message", "err", "value", "div", "className", "button", "onClick", "Button", "variant", "size", "Filter", "span", "disabled", "RotateCw", "ArrowUpDown", "ShoppingBag", "Package", "Store", "location", "href", "Download", "Loader2", "Upload", "input", "type", "ref", "onChange", "accept", "style", "display", "AddInventoryModal", "isOpen", "onClose", "onSuccess", "preselectedProduct", "NewProductModal", "onAddToInventory"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a064797ca8c6679768fb76ba4ed242a89bbef93b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_19v63dmwtw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_19v63dmwtw();
cov_19v63dmwtw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_19v63dmwtw().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_19v63dmwtw().f[0]++;
    cov_19v63dmwtw().s[2]++;
    return InventoryHeaderActions;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_19v63dmwtw().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_19v63dmwtw().s[4]++, _interop_require_wildcard(require("react")));
const _navigation =
/* istanbul ignore next */
(cov_19v63dmwtw().s[5]++, require("next/navigation"));
const _lucidereact =
/* istanbul ignore next */
(cov_19v63dmwtw().s[6]++, require("lucide-react"));
const _Button =
/* istanbul ignore next */
(cov_19v63dmwtw().s[7]++, require("../ui/Button"));
const _AddInventoryModal =
/* istanbul ignore next */
(/*#__PURE__*/cov_19v63dmwtw().s[8]++, _interop_require_default(require("./AddInventoryModal")));
const _NewProductModal =
/* istanbul ignore next */
(/*#__PURE__*/cov_19v63dmwtw().s[9]++, _interop_require_default(require("./NewProductModal")));
const _useQueries =
/* istanbul ignore next */
(cov_19v63dmwtw().s[10]++, require("../../hooks/useQueries"));
const _reactquery =
/* istanbul ignore next */
(cov_19v63dmwtw().s[11]++, require("@tanstack/react-query"));
const _QueryProvider =
/* istanbul ignore next */
(cov_19v63dmwtw().s[12]++, require("../../context/QueryProvider"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_19v63dmwtw().f[1]++;
  cov_19v63dmwtw().s[13]++;
  return /* istanbul ignore next */(cov_19v63dmwtw().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_19v63dmwtw().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_19v63dmwtw().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_19v63dmwtw().b[0][1]++, {
    default: obj
  });
}
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_19v63dmwtw().f[2]++;
  cov_19v63dmwtw().s[14]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_19v63dmwtw().b[2][0]++;
    cov_19v63dmwtw().s[15]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_19v63dmwtw().b[2][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_19v63dmwtw().s[16]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_19v63dmwtw().s[17]++, new WeakMap());
  /* istanbul ignore next */
  cov_19v63dmwtw().s[18]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_19v63dmwtw().f[3]++;
    cov_19v63dmwtw().s[19]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_19v63dmwtw().b[3][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_19v63dmwtw().b[3][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_19v63dmwtw().f[4]++;
  cov_19v63dmwtw().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_19v63dmwtw().b[5][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_19v63dmwtw().b[5][1]++, obj) &&
  /* istanbul ignore next */
  (cov_19v63dmwtw().b[5][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_19v63dmwtw().b[4][0]++;
    cov_19v63dmwtw().s[21]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_19v63dmwtw().b[4][1]++;
  }
  cov_19v63dmwtw().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_19v63dmwtw().b[7][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_19v63dmwtw().b[7][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_19v63dmwtw().b[7][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_19v63dmwtw().b[6][0]++;
    cov_19v63dmwtw().s[23]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_19v63dmwtw().b[6][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_19v63dmwtw().s[24]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_19v63dmwtw().s[25]++;
  if (
  /* istanbul ignore next */
  (cov_19v63dmwtw().b[9][0]++, cache) &&
  /* istanbul ignore next */
  (cov_19v63dmwtw().b[9][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_19v63dmwtw().b[8][0]++;
    cov_19v63dmwtw().s[26]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_19v63dmwtw().b[8][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_19v63dmwtw().s[27]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_19v63dmwtw().s[28]++,
  /* istanbul ignore next */
  (cov_19v63dmwtw().b[10][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_19v63dmwtw().b[10][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_19v63dmwtw().s[29]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_19v63dmwtw().s[30]++;
    if (
    /* istanbul ignore next */
    (cov_19v63dmwtw().b[12][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_19v63dmwtw().b[12][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_19v63dmwtw().b[11][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_19v63dmwtw().s[31]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_19v63dmwtw().b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_19v63dmwtw().b[13][1]++, null));
      /* istanbul ignore next */
      cov_19v63dmwtw().s[32]++;
      if (
      /* istanbul ignore next */
      (cov_19v63dmwtw().b[15][0]++, desc) && (
      /* istanbul ignore next */
      (cov_19v63dmwtw().b[15][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_19v63dmwtw().b[15][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_19v63dmwtw().b[14][0]++;
        cov_19v63dmwtw().s[33]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_19v63dmwtw().b[14][1]++;
        cov_19v63dmwtw().s[34]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_19v63dmwtw().b[11][1]++;
    }
  }
  /* istanbul ignore next */
  cov_19v63dmwtw().s[35]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_19v63dmwtw().s[36]++;
  if (cache) {
    /* istanbul ignore next */
    cov_19v63dmwtw().b[16][0]++;
    cov_19v63dmwtw().s[37]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_19v63dmwtw().b[16][1]++;
  }
  cov_19v63dmwtw().s[38]++;
  return newObj;
}
function InventoryHeaderActions() {
  /* istanbul ignore next */
  cov_19v63dmwtw().f[5]++;
  const router =
  /* istanbul ignore next */
  (cov_19v63dmwtw().s[39]++, (0, _navigation.useRouter)());
  const [showAddInventoryModal, setShowAddInventoryModal] =
  /* istanbul ignore next */
  (cov_19v63dmwtw().s[40]++, (0, _react.useState)(false));
  const [showNewProductModal, setShowNewProductModal] =
  /* istanbul ignore next */
  (cov_19v63dmwtw().s[41]++, (0, _react.useState)(false));
  const [selectedProduct, setSelectedProduct] =
  /* istanbul ignore next */
  (cov_19v63dmwtw().s[42]++, (0, _react.useState)(null));
  const [isUploading, setIsUploading] =
  /* istanbul ignore next */
  (cov_19v63dmwtw().s[43]++, (0, _react.useState)(false));
  const [uploadError, setUploadError] =
  /* istanbul ignore next */
  (cov_19v63dmwtw().s[44]++, (0, _react.useState)(null));
  const [uploadSuccess, setUploadSuccess] =
  /* istanbul ignore next */
  (cov_19v63dmwtw().s[45]++, (0, _react.useState)(null));
  const [isRefreshing, setIsRefreshing] =
  /* istanbul ignore next */
  (cov_19v63dmwtw().s[46]++, (0, _react.useState)(false));
  const {
    refetch
  } =
  /* istanbul ignore next */
  (cov_19v63dmwtw().s[47]++, (0, _useQueries.useInventory)());
  const queryClient =
  /* istanbul ignore next */
  (cov_19v63dmwtw().s[48]++, (0, _reactquery.useQueryClient)());
  const fileInputRef =
  /* istanbul ignore next */
  (cov_19v63dmwtw().s[49]++, _react.default.useRef(null));
  // Toggle filter panel
  /* istanbul ignore next */
  cov_19v63dmwtw().s[50]++;
  const toggleFilterPanel = () => {
    /* istanbul ignore next */
    cov_19v63dmwtw().f[6]++;
    // This is now handled in the InventoryClientWrapper
    const event =
    /* istanbul ignore next */
    (cov_19v63dmwtw().s[51]++, new CustomEvent("toggle-filter-panel"));
    /* istanbul ignore next */
    cov_19v63dmwtw().s[52]++;
    window.dispatchEvent(event);
  };
  // Add Product handler
  /* istanbul ignore next */
  cov_19v63dmwtw().s[53]++;
  const handleAddProduct = () => {
    /* istanbul ignore next */
    cov_19v63dmwtw().f[7]++;
    cov_19v63dmwtw().s[54]++;
    router.push("/purchases");
  };
  // Add Direct Inventory handler
  /* istanbul ignore next */
  cov_19v63dmwtw().s[55]++;
  const handleAddInventory = () => {
    /* istanbul ignore next */
    cov_19v63dmwtw().f[8]++;
    cov_19v63dmwtw().s[56]++;
    setSelectedProduct(null);
    /* istanbul ignore next */
    cov_19v63dmwtw().s[57]++;
    setShowAddInventoryModal(true);
  };
  // Handle successful inventory addition
  /* istanbul ignore next */
  cov_19v63dmwtw().s[58]++;
  const handleInventoryAdded = async () => {
    /* istanbul ignore next */
    cov_19v63dmwtw().f[9]++;
    cov_19v63dmwtw().s[59]++;
    // Use React Query's refetch instead of router.refresh()
    await refetch();
  };
  // Handle successful product creation
  /* istanbul ignore next */
  cov_19v63dmwtw().s[60]++;
  const handleProductCreated = async () => {
    /* istanbul ignore next */
    cov_19v63dmwtw().f[10]++;
    cov_19v63dmwtw().s[61]++;
    // Use React Query's refetch instead of router.refresh()
    await refetch();
  };
  // Handle product created and add to inventory
  /* istanbul ignore next */
  cov_19v63dmwtw().s[62]++;
  const handleProductCreatedAndAddToInventory = (productId, productName) => {
    /* istanbul ignore next */
    cov_19v63dmwtw().f[11]++;
    cov_19v63dmwtw().s[63]++;
    setSelectedProduct({
      id: productId,
      name: productName
    });
    /* istanbul ignore next */
    cov_19v63dmwtw().s[64]++;
    setShowNewProductModal(false);
    /* istanbul ignore next */
    cov_19v63dmwtw().s[65]++;
    setShowAddInventoryModal(true);
  };
  /* istanbul ignore next */
  cov_19v63dmwtw().s[66]++;
  const handleImportButtonClick = () => {
    /* istanbul ignore next */
    cov_19v63dmwtw().f[12]++;
    cov_19v63dmwtw().s[67]++;
    if (fileInputRef.current) {
      /* istanbul ignore next */
      cov_19v63dmwtw().b[17][0]++;
      cov_19v63dmwtw().s[68]++;
      fileInputRef.current.click(); // Trigger click on hidden file input
    } else
    /* istanbul ignore next */
    {
      cov_19v63dmwtw().b[17][1]++;
    }
  };
  // Handle manual data refresh
  /* istanbul ignore next */
  cov_19v63dmwtw().s[69]++;
  const handleRefreshData = async () => {
    /* istanbul ignore next */
    cov_19v63dmwtw().f[13]++;
    cov_19v63dmwtw().s[70]++;
    setIsRefreshing(true);
    /* istanbul ignore next */
    cov_19v63dmwtw().s[71]++;
    try {
      /* istanbul ignore next */
      cov_19v63dmwtw().s[72]++;
      // Invalidate all relevant queries
      await queryClient.invalidateQueries({
        queryKey: _QueryProvider.queryKeys.inventory
      });
      /* istanbul ignore next */
      cov_19v63dmwtw().s[73]++;
      await queryClient.invalidateQueries({
        queryKey: _QueryProvider.queryKeys.products
      });
      /* istanbul ignore next */
      cov_19v63dmwtw().s[74]++;
      await refetch();
      // Add a small delay to show the refreshing state
      /* istanbul ignore next */
      cov_19v63dmwtw().s[75]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_19v63dmwtw().f[14]++;
        cov_19v63dmwtw().s[76]++;
        return setTimeout(resolve, 500);
      });
    } finally {
      /* istanbul ignore next */
      cov_19v63dmwtw().s[77]++;
      setIsRefreshing(false);
    }
  };
  /* istanbul ignore next */
  cov_19v63dmwtw().s[78]++;
  const handleFileChange = async event => {
    /* istanbul ignore next */
    cov_19v63dmwtw().f[15]++;
    const file =
    /* istanbul ignore next */
    (cov_19v63dmwtw().s[79]++, event.target.files?.[0]);
    /* istanbul ignore next */
    cov_19v63dmwtw().s[80]++;
    if (!file) {
      /* istanbul ignore next */
      cov_19v63dmwtw().b[18][0]++;
      cov_19v63dmwtw().s[81]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_19v63dmwtw().b[18][1]++;
    }
    cov_19v63dmwtw().s[82]++;
    setIsUploading(true);
    /* istanbul ignore next */
    cov_19v63dmwtw().s[83]++;
    setUploadError(null);
    /* istanbul ignore next */
    cov_19v63dmwtw().s[84]++;
    setUploadSuccess(null);
    const formData =
    /* istanbul ignore next */
    (cov_19v63dmwtw().s[85]++, new FormData());
    /* istanbul ignore next */
    cov_19v63dmwtw().s[86]++;
    formData.append("file", file);
    /* istanbul ignore next */
    cov_19v63dmwtw().s[87]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_19v63dmwtw().s[88]++, await fetch("/api/products/bulk-import", {
        method: "POST",
        body: formData
      }));
      let result;
      /* istanbul ignore next */
      cov_19v63dmwtw().s[89]++;
      try {
        /* istanbul ignore next */
        cov_19v63dmwtw().s[90]++;
        result = await response.json();
      } catch (jsonError) {
        /* istanbul ignore next */
        cov_19v63dmwtw().s[91]++;
        console.error("Failed to parse API response as JSON:", jsonError);
        const responseText =
        /* istanbul ignore next */
        (cov_19v63dmwtw().s[92]++, await response.text()); // Try to get raw text
        /* istanbul ignore next */
        cov_19v63dmwtw().s[93]++;
        console.error("Raw API response text:", responseText);
        /* istanbul ignore next */
        cov_19v63dmwtw().s[94]++;
        throw new Error("Failed to parse server response. Raw text: " + (
        /* istanbul ignore next */
        (cov_19v63dmwtw().b[19][0]++, responseText) ||
        /* istanbul ignore next */
        (cov_19v63dmwtw().b[19][1]++, "Empty response")));
      }
      /* istanbul ignore next */
      cov_19v63dmwtw().s[95]++;
      if (
      /* istanbul ignore next */
      (cov_19v63dmwtw().b[21][0]++, !response.ok) ||
      /* istanbul ignore next */
      (cov_19v63dmwtw().b[21][1]++, !result) ||
      /* istanbul ignore next */
      (cov_19v63dmwtw().b[21][2]++, !result.success)) {
        /* istanbul ignore next */
        cov_19v63dmwtw().b[20][0]++;
        cov_19v63dmwtw().s[96]++;
        console.error("Bulk import failed. API Response:", result);
        /* istanbul ignore next */
        cov_19v63dmwtw().s[97]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_19v63dmwtw().b[22][0]++, result?.message) ||
        /* istanbul ignore next */
        (cov_19v63dmwtw().b[22][1]++, "Bulk import failed. Please check the file and try again."));
      } else
      /* istanbul ignore next */
      {
        cov_19v63dmwtw().b[20][1]++;
      }
      cov_19v63dmwtw().s[98]++;
      setUploadSuccess(
      /* istanbul ignore next */
      (cov_19v63dmwtw().b[23][0]++, result.message) ||
      /* istanbul ignore next */
      (cov_19v63dmwtw().b[23][1]++, "Products imported successfully!"));
      // Invalidate queries and refetch data
      /* istanbul ignore next */
      cov_19v63dmwtw().s[99]++;
      queryClient.invalidateQueries({
        queryKey: _QueryProvider.queryKeys.products
      });
      /* istanbul ignore next */
      cov_19v63dmwtw().s[100]++;
      queryClient.invalidateQueries({
        queryKey: _QueryProvider.queryKeys.inventory
      });
      /* istanbul ignore next */
      cov_19v63dmwtw().s[101]++;
      await refetch();
    } catch (err) {
      /* istanbul ignore next */
      cov_19v63dmwtw().s[102]++;
      console.error("Error uploading file:", err);
      /* istanbul ignore next */
      cov_19v63dmwtw().s[103]++;
      setUploadError(
      /* istanbul ignore next */
      (cov_19v63dmwtw().b[24][0]++, err.message) ||
      /* istanbul ignore next */
      (cov_19v63dmwtw().b[24][1]++, "An unexpected error occurred during upload."));
    } finally {
      /* istanbul ignore next */
      cov_19v63dmwtw().s[104]++;
      setIsUploading(false);
      // Reset file input to allow re-uploading the same file if needed
      /* istanbul ignore next */
      cov_19v63dmwtw().s[105]++;
      if (fileInputRef.current) {
        /* istanbul ignore next */
        cov_19v63dmwtw().b[25][0]++;
        cov_19v63dmwtw().s[106]++;
        fileInputRef.current.value = "";
      } else
      /* istanbul ignore next */
      {
        cov_19v63dmwtw().b[25][1]++;
      }
    }
  };
  /* istanbul ignore next */
  cov_19v63dmwtw().s[107]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
    children: [
    /* istanbul ignore next */
    (cov_19v63dmwtw().b[26][0]++, uploadError) &&
    /* istanbul ignore next */
    (cov_19v63dmwtw().b[26][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "my-2 p-3 bg-red-100 text-red-700 border border-red-400 rounded-md",
      children: ["Error: ", uploadError, /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
        onClick: () => {
          /* istanbul ignore next */
          cov_19v63dmwtw().f[16]++;
          cov_19v63dmwtw().s[108]++;
          return setUploadError(null);
        },
        className: "ml-4 text-red-700 font-bold",
        children: "X"
      })]
    })),
    /* istanbul ignore next */
    (cov_19v63dmwtw().b[27][0]++, uploadSuccess) &&
    /* istanbul ignore next */
    (cov_19v63dmwtw().b[27][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "my-2 p-3 bg-green-100 text-green-700 border border-green-400 rounded-md",
      children: ["Success: ", uploadSuccess, /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
        onClick: () => {
          /* istanbul ignore next */
          cov_19v63dmwtw().f[17]++;
          cov_19v63dmwtw().s[109]++;
          return setUploadSuccess(null);
        },
        className: "ml-4 text-green-700 font-bold",
        children: "X"
      })]
    })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex flex-wrap gap-3",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_Button.Button, {
        variant: "outline",
        size: "sm",
        onClick: toggleFilterPanel,
        className: "flex items-center gap-1",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Filter, {
          className: "w-4 h-4"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
          className: "hidden sm:inline",
          children: "Filter"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_Button.Button, {
        variant: "outline",
        size: "sm",
        onClick: handleRefreshData,
        disabled: isRefreshing,
        className: "flex items-center gap-1",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RotateCw, {
          className: `w-4 h-4 ${isRefreshing ?
          /* istanbul ignore next */
          (cov_19v63dmwtw().b[28][0]++, "animate-spin") :
          /* istanbul ignore next */
          (cov_19v63dmwtw().b[28][1]++, "")}`
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
          className: "hidden sm:inline",
          children: isRefreshing ?
          /* istanbul ignore next */
          (cov_19v63dmwtw().b[29][0]++, "Refreshing...") :
          /* istanbul ignore next */
          (cov_19v63dmwtw().b[29][1]++, "Refresh Data")
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_Button.Button, {
        variant: "secondary",
        size: "sm",
        onClick: () => {
          /* istanbul ignore next */
          cov_19v63dmwtw().f[18]++;
          cov_19v63dmwtw().s[110]++;
          return router.push("/inventory/categories");
        },
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.ArrowUpDown, {
          className: "w-4 h-4 mr-2"
        }), "Manage Categories"]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_Button.Button, {
        variant: "secondary",
        size: "sm",
        onClick: () => {
          /* istanbul ignore next */
          cov_19v63dmwtw().f[19]++;
          cov_19v63dmwtw().s[111]++;
          return setShowNewProductModal(true);
        },
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.ShoppingBag, {
          className: "w-4 h-4 mr-2"
        }), "New Product"]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_Button.Button, {
        variant: "primary",
        size: "sm",
        onClick: handleAddProduct,
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Package, {
          className: "w-4 h-4 mr-2"
        }), "Add Stock via Purchase"]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_Button.Button, {
        variant: "outline",
        size: "sm",
        onClick: () => {
          /* istanbul ignore next */
          cov_19v63dmwtw().f[20]++;
          cov_19v63dmwtw().s[112]++;
          return router.push("/inventory/distribution");
        },
        className: "text-black",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Store, {
          className: "h-4 w-4 mr-2"
        }), "Shop Distribution"]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_Button.Button, {
        variant: "info",
        size: "sm",
        onClick: () => {
          /* istanbul ignore next */
          cov_19v63dmwtw().f[21]++;
          cov_19v63dmwtw().s[113]++;
          return window.location.href = "/api/products/template";
        },
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Download, {
          className: "w-4 h-4 mr-2"
        }), "Download Template"]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_Button.Button, {
        variant: "success",
        size: "sm",
        onClick: handleImportButtonClick,
        disabled: isUploading,
        children: [isUploading ?
        /* istanbul ignore next */
        (/*#__PURE__*/cov_19v63dmwtw().b[30][0]++, (0, _jsxruntime.jsx)(_lucidereact.Loader2, {
          className: "w-4 h-4 mr-2 animate-spin"
        })) :
        /* istanbul ignore next */
        (/*#__PURE__*/cov_19v63dmwtw().b[30][1]++, (0, _jsxruntime.jsx)(_lucidereact.Upload, {
          className: "w-4 h-4 mr-2"
        })), "Import Products"]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
        type: "file",
        ref: fileInputRef,
        onChange: handleFileChange,
        accept: ".xlsx, .xls",
        style: {
          display: "none"
        }
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_AddInventoryModal.default, {
      isOpen: showAddInventoryModal,
      onClose: () => {
        /* istanbul ignore next */
        cov_19v63dmwtw().f[22]++;
        cov_19v63dmwtw().s[114]++;
        return setShowAddInventoryModal(false);
      },
      onSuccess: handleInventoryAdded,
      preselectedProduct: selectedProduct
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_NewProductModal.default, {
      isOpen: showNewProductModal,
      onClose: () => {
        /* istanbul ignore next */
        cov_19v63dmwtw().f[23]++;
        cov_19v63dmwtw().s[115]++;
        return setShowNewProductModal(false);
      },
      onSuccess: handleProductCreated,
      onAddToInventory: handleProductCreatedAndAddToInventory
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,