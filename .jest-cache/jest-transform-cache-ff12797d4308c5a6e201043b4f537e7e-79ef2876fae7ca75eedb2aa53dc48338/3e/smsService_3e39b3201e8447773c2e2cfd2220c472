91f829a590887d2bc41b2703b276676c
"use strict";

/* istanbul ignore next */
function cov_1src5l9t71() {
  var path = "/Users/sachin/Documents/md-sports-/src/services/smsService.ts";
  var hash = "57ef3eddcf15588d9a625e959f86773fb5c0a491";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/services/smsService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 26
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 26
        }
      },
      "6": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 40
        }
      },
      "7": {
        start: {
          line: 20,
          column: 29
        },
        end: {
          line: 20,
          column: 71
        }
      },
      "8": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 24,
          column: 6
        }
      },
      "9": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "10": {
        start: {
          line: 32,
          column: 34
        },
        end: {
          line: 36,
          column: 14
        }
      },
      "11": {
        start: {
          line: 37,
          column: 34
        },
        end: {
          line: 41,
          column: 14
        }
      },
      "12": {
        start: {
          line: 42,
          column: 35
        },
        end: {
          line: 46,
          column: 14
        }
      },
      "13": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 55
        }
      },
      "14": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 55
        }
      },
      "15": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 62
        }
      },
      "16": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 70
        }
      },
      "17": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 64
        }
      },
      "18": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "19": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 30
        }
      },
      "20": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "21": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 73,
          column: 14
        }
      },
      "22": {
        start: {
          line: 76,
          column: 26
        },
        end: {
          line: 76,
          column: 56
        }
      },
      "23": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "24": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 58
        }
      },
      "25": {
        start: {
          line: 79,
          column: 15
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "26": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 45
        }
      },
      "27": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "28": {
        start: {
          line: 83,
          column: 29
        },
        end: {
          line: 91,
          column: 14
        }
      },
      "29": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 96,
          column: 14
        }
      },
      "30": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 56
        }
      },
      "31": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 102,
          column: 14
        }
      },
      "32": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "33": {
        start: {
          line: 112,
          column: 28
        },
        end: {
          line: 119,
          column: 14
        }
      },
      "34": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 125,
          column: 13
        }
      },
      "35": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 124,
          column: 18
        }
      },
      "36": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 131,
          column: 13
        }
      },
      "37": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 130,
          column: 18
        }
      },
      "38": {
        start: {
          line: 133,
          column: 28
        },
        end: {
          line: 133,
          column: 196
        }
      },
      "39": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 138,
          column: 15
        }
      },
      "40": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 73
        }
      },
      "41": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 144,
          column: 14
        }
      },
      "42": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "43": {
        start: {
          line: 154,
          column: 28
        },
        end: {
          line: 161,
          column: 14
        }
      },
      "44": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 167,
          column: 13
        }
      },
      "45": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 166,
          column: 18
        }
      },
      "46": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 173,
          column: 13
        }
      },
      "47": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 172,
          column: 18
        }
      },
      "48": {
        start: {
          line: 175,
          column: 28
        },
        end: {
          line: 175,
          column: 216
        }
      },
      "49": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 180,
          column: 15
        }
      },
      "50": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 69
        }
      },
      "51": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 186,
          column: 14
        }
      },
      "52": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 27
        }
      },
      "53": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 27
        }
      },
      "54": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 59
        }
      },
      "55": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 31
        }
      },
      "56": {
        start: {
          line: 196,
          column: 19
        },
        end: {
          line: 196,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 16
          },
          end: {
            line: 12,
            column: 17
          }
        },
        loc: {
          start: {
            line: 12,
            column: 27
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 16
          },
          end: {
            line: 15,
            column: 17
          }
        },
        loc: {
          start: {
            line: 15,
            column: 27
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 33
          }
        },
        loc: {
          start: {
            line: 21,
            column: 39
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        },
        loc: {
          start: {
            line: 29,
            column: 21
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        loc: {
          start: {
            line: 56,
            column: 23
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 56
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        loc: {
          start: {
            line: 63,
            column: 31
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 63
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        loc: {
          start: {
            line: 109,
            column: 49
          },
          end: {
            line: 146,
            column: 5
          }
        },
        line: 109
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        },
        loc: {
          start: {
            line: 151,
            column: 45
          },
          end: {
            line: 188,
            column: 5
          }
        },
        line: 151
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 189,
            column: 5
          }
        },
        loc: {
          start: {
            line: 189,
            column: 17
          },
          end: {
            line: 194,
            column: 5
          }
        },
        line: 189
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 11
          },
          end: {
            line: 24,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 35
          },
          end: {
            line: 22,
            column: 38
          }
        }, {
          start: {
            line: 22,
            column: 41
          },
          end: {
            line: 24,
            column: 5
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 11
          },
          end: {
            line: 22,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 11
          },
          end: {
            line: 22,
            column: 14
          }
        }, {
          start: {
            line: 22,
            column: 18
          },
          end: {
            line: 22,
            column: 32
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 47,
            column: 26
          },
          end: {
            line: 47,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 26
          },
          end: {
            line: 47,
            column: 46
          }
        }, {
          start: {
            line: 47,
            column: 50
          },
          end: {
            line: 47,
            column: 54
          }
        }],
        line: 47
      },
      "3": {
        loc: {
          start: {
            line: 48,
            column: 26
          },
          end: {
            line: 48,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 26
          },
          end: {
            line: 48,
            column: 46
          }
        }, {
          start: {
            line: 48,
            column: 50
          },
          end: {
            line: 48,
            column: 54
          }
        }],
        line: 48
      },
      "4": {
        loc: {
          start: {
            line: 57,
            column: 18
          },
          end: {
            line: 57,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 18
          },
          end: {
            line: 57,
            column: 29
          }
        }, {
          start: {
            line: 57,
            column: 33
          },
          end: {
            line: 57,
            column: 44
          }
        }, {
          start: {
            line: 57,
            column: 48
          },
          end: {
            line: 57,
            column: 62
          }
        }],
        line: 57
      },
      "5": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "6": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 65,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 65,
            column: 24
          }
        }, {
          start: {
            line: 65,
            column: 28
          },
          end: {
            line: 65,
            column: 40
          }
        }],
        line: 65
      },
      "7": {
        loc: {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "8": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: 79,
            column: 15
          },
          end: {
            line: 81,
            column: 9
          }
        }],
        line: 77
      },
      "9": {
        loc: {
          start: {
            line: 79,
            column: 15
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 15
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "10": {
        loc: {
          start: {
            line: 101,
            column: 25
          },
          end: {
            line: 101,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 101,
            column: 50
          },
          end: {
            line: 101,
            column: 63
          }
        }, {
          start: {
            line: 101,
            column: 66
          },
          end: {
            line: 101,
            column: 86
          }
        }],
        line: 101
      },
      "11": {
        loc: {
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 125,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 125,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "12": {
        loc: {
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 131,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 131,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "13": {
        loc: {
          start: {
            line: 143,
            column: 25
          },
          end: {
            line: 143,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 143,
            column: 50
          },
          end: {
            line: 143,
            column: 63
          }
        }, {
          start: {
            line: 143,
            column: 66
          },
          end: {
            line: 143,
            column: 103
          }
        }],
        line: 143
      },
      "14": {
        loc: {
          start: {
            line: 162,
            column: 12
          },
          end: {
            line: 167,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 12
          },
          end: {
            line: 167,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "15": {
        loc: {
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 173,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 173,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "16": {
        loc: {
          start: {
            line: 185,
            column: 25
          },
          end: {
            line: 185,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 185,
            column: 50
          },
          end: {
            line: 185,
            column: 63
          }
        }, {
          start: {
            line: 185,
            column: 66
          },
          end: {
            line: 185,
            column: 99
          }
        }],
        line: 185
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/services/smsService.ts"],
      sourcesContent: ["import { prisma } from '@/lib/prisma';\nimport axios from 'axios';\n\ninterface SMSOptions {\n    to: string;\n    message: string;\n}\n\ninterface NotifyLKResponse {\n    status: number;\n    message: string;\n    data?: any;\n}\n\n/**\n * SMS Service for sending notifications via notify.lk\n */\nexport class SMSService {\n    private apiKey: string | null = null;\n    private userId: string | null = null;\n    private baseUrl = 'https://app.notify.lk/api/v1/send';\n    private isEnabled = false;\n\n    /**\n     * Initialize the SMS service with settings from the database\n     */\n    async init(): Promise<void> {\n        try {\n            // Get settings from database\n            const apiKeySetting = await prisma.systemSettings.findUnique({\n                where: { key: 'sms_api_key' }\n            });\n\n            const userIdSetting = await prisma.systemSettings.findUnique({\n                where: { key: 'sms_user_id' }\n            });\n\n            const enabledSetting = await prisma.systemSettings.findUnique({\n                where: { key: 'sms_enabled' }\n            });\n\n            this.apiKey = apiKeySetting?.value || null;\n            this.userId = userIdSetting?.value || null;\n            this.isEnabled = enabledSetting?.value === 'true';\n        } catch (error) {\n            console.error('Failed to initialize SMS service:', error);\n        }\n    }\n\n    /**\n     * Check if the SMS service is properly configured\n     */\n    isConfigured(): boolean {\n        return !!(this.apiKey && this.userId && this.isEnabled);\n    }\n\n    /**\n     * Send an SMS message\n     * @param options SMS options including recipient and message\n     * @returns Response from notify.lk API\n     */\n    async sendSMS(options: SMSOptions): Promise<NotifyLKResponse> {\n        // Initialize if not already initialized\n        if (!this.apiKey || !this.userId) {\n            await this.init();\n        }\n\n        // Check if service is configured and enabled\n        if (!this.isConfigured()) {\n            return {\n                status: 400,\n                message: 'SMS service is not configured or disabled'\n            };\n        }\n\n        // Format phone number (remove spaces, ensure it starts with 94 for Sri Lanka)\n        let phoneNumber = options.to.replace(/\\s+/g, '');\n        if (phoneNumber.startsWith('0')) {\n            phoneNumber = '94' + phoneNumber.substring(1);\n        } else if (!phoneNumber.startsWith('94')) {\n            phoneNumber = '94' + phoneNumber;\n        }\n\n        try {\n            const response = await axios.get(this.baseUrl, {\n                params: {\n                    user_id: this.userId,\n                    api_key: this.apiKey,\n                    sender_id: 'NotifyDEMO',\n                    to: phoneNumber,\n                    message: options.message\n                }\n            });\n\n            return {\n                status: response.status,\n                message: 'SMS sent successfully',\n                data: response.data\n            };\n        } catch (error) {\n            console.error('Failed to send SMS:', error);\n            return {\n                status: 500,\n                message: error instanceof Error ? error.message : 'Failed to send SMS'\n            };\n        }\n    }\n\n    /**\n     * Send invoice notification to customer\n     * @param invoiceId Invoice ID\n     * @returns Response from notify.lk API\n     */\n    async sendInvoiceNotification(invoiceId: number): Promise<NotifyLKResponse> {\n        try {\n            // Get invoice with customer details\n            const invoice = await prisma.invoice.findUnique({\n                where: { id: invoiceId },\n                include: {\n                    customer: true\n                }\n            });\n\n            if (!invoice) {\n                return {\n                    status: 404,\n                    message: 'Invoice not found'\n                };\n            }\n\n            if (!invoice.customer.phone) {\n                return {\n                    status: 400,\n                    message: 'Customer phone number not available'\n                };\n            }\n\n            // Prepare message\n            const message = `Dear ${invoice.customer.name}, your invoice #${invoice.invoiceNumber} for LKR ${invoice.total.toFixed(2)} has been created. Thank you for your business with MS Sport.`;\n\n            // Send SMS\n            return this.sendSMS({\n                to: invoice.customer.phone,\n                message\n            });\n        } catch (error) {\n            console.error('Failed to send invoice notification:', error);\n            return {\n                status: 500,\n                message: error instanceof Error ? error.message : 'Failed to send invoice notification'\n            };\n        }\n    }\n\n    /**\n     * Send payment reminder for overdue invoices\n     * @param invoiceId Invoice ID\n     * @returns Response from notify.lk API\n     */\n    async sendPaymentReminder(invoiceId: number): Promise<NotifyLKResponse> {\n        try {\n            // Get invoice with customer details\n            const invoice = await prisma.invoice.findUnique({\n                where: { id: invoiceId },\n                include: {\n                    customer: true\n                }\n            });\n\n            if (!invoice) {\n                return {\n                    status: 404,\n                    message: 'Invoice not found'\n                };\n            }\n\n            if (!invoice.customer.phone) {\n                return {\n                    status: 400,\n                    message: 'Customer phone number not available'\n                };\n            }\n\n            // Prepare message\n            const message = `Dear ${invoice.customer.name}, this is a reminder that invoice #${invoice.invoiceNumber} for LKR ${invoice.total.toFixed(2)} is overdue. Please make payment at your earliest convenience.`;\n\n            // Send SMS\n            return this.sendSMS({\n                to: invoice.customer.phone,\n                message\n            });\n        } catch (error) {\n            console.error('Failed to send payment reminder:', error);\n            return {\n                status: 500,\n                message: error instanceof Error ? error.message : 'Failed to send payment reminder'\n            };\n        }\n    }\n}\n\n// Export singleton instance\nexport const smsService = new SMSService(); "],
      names: ["SMSService", "smsService", "init", "apiKeySetting", "prisma", "systemSettings", "findUnique", "where", "key", "userIdSetting", "enabledSetting", "apiKey", "value", "userId", "isEnabled", "error", "console", "isConfigured", "sendSMS", "options", "status", "message", "phoneNumber", "to", "replace", "startsWith", "substring", "response", "axios", "get", "baseUrl", "params", "user_id", "api_key", "sender_id", "data", "Error", "sendInvoiceNotification", "invoiceId", "invoice", "id", "include", "customer", "phone", "name", "invoiceNumber", "total", "toFixed", "sendPaymentReminder"],
      mappings: ";;;;;;;;;;;IAiBaA,UAAU;eAAVA;;IAyLAC,UAAU;eAAVA;;;wBA1MU;8DACL;;;;;;AAgBX,MAAMD;IAMT;;KAEC,GACD,MAAME,OAAsB;QACxB,IAAI;YACA,6BAA6B;YAC7B,MAAMC,gBAAgB,MAAMC,cAAM,CAACC,cAAc,CAACC,UAAU,CAAC;gBACzDC,OAAO;oBAAEC,KAAK;gBAAc;YAChC;YAEA,MAAMC,gBAAgB,MAAML,cAAM,CAACC,cAAc,CAACC,UAAU,CAAC;gBACzDC,OAAO;oBAAEC,KAAK;gBAAc;YAChC;YAEA,MAAME,iBAAiB,MAAMN,cAAM,CAACC,cAAc,CAACC,UAAU,CAAC;gBAC1DC,OAAO;oBAAEC,KAAK;gBAAc;YAChC;YAEA,IAAI,CAACG,MAAM,GAAGR,eAAeS,SAAS;YACtC,IAAI,CAACC,MAAM,GAAGJ,eAAeG,SAAS;YACtC,IAAI,CAACE,SAAS,GAAGJ,gBAAgBE,UAAU;QAC/C,EAAE,OAAOG,OAAO;YACZC,QAAQD,KAAK,CAAC,qCAAqCA;QACvD;IACJ;IAEA;;KAEC,GACDE,eAAwB;QACpB,OAAO,CAAC,CAAE,CAAA,IAAI,CAACN,MAAM,IAAI,IAAI,CAACE,MAAM,IAAI,IAAI,CAACC,SAAS,AAAD;IACzD;IAEA;;;;KAIC,GACD,MAAMI,QAAQC,OAAmB,EAA6B;QAC1D,wCAAwC;QACxC,IAAI,CAAC,IAAI,CAACR,MAAM,IAAI,CAAC,IAAI,CAACE,MAAM,EAAE;YAC9B,MAAM,IAAI,CAACX,IAAI;QACnB;QAEA,6CAA6C;QAC7C,IAAI,CAAC,IAAI,CAACe,YAAY,IAAI;YACtB,OAAO;gBACHG,QAAQ;gBACRC,SAAS;YACb;QACJ;QAEA,8EAA8E;QAC9E,IAAIC,cAAcH,QAAQI,EAAE,CAACC,OAAO,CAAC,QAAQ;QAC7C,IAAIF,YAAYG,UAAU,CAAC,MAAM;YAC7BH,cAAc,OAAOA,YAAYI,SAAS,CAAC;QAC/C,OAAO,IAAI,CAACJ,YAAYG,UAAU,CAAC,OAAO;YACtCH,cAAc,OAAOA;QACzB;QAEA,IAAI;YACA,MAAMK,WAAW,MAAMC,cAAK,CAACC,GAAG,CAAC,IAAI,CAACC,OAAO,EAAE;gBAC3CC,QAAQ;oBACJC,SAAS,IAAI,CAACnB,MAAM;oBACpBoB,SAAS,IAAI,CAACtB,MAAM;oBACpBuB,WAAW;oBACXX,IAAID;oBACJD,SAASF,QAAQE,OAAO;gBAC5B;YACJ;YAEA,OAAO;gBACHD,QAAQO,SAASP,MAAM;gBACvBC,SAAS;gBACTc,MAAMR,SAASQ,IAAI;YACvB;QACJ,EAAE,OAAOpB,OAAO;YACZC,QAAQD,KAAK,CAAC,uBAAuBA;YACrC,OAAO;gBACHK,QAAQ;gBACRC,SAASN,iBAAiBqB,QAAQrB,MAAMM,OAAO,GAAG;YACtD;QACJ;IACJ;IAEA;;;;KAIC,GACD,MAAMgB,wBAAwBC,SAAiB,EAA6B;QACxE,IAAI;YACA,oCAAoC;YACpC,MAAMC,UAAU,MAAMnC,cAAM,CAACmC,OAAO,CAACjC,UAAU,CAAC;gBAC5CC,OAAO;oBAAEiC,IAAIF;gBAAU;gBACvBG,SAAS;oBACLC,UAAU;gBACd;YACJ;YAEA,IAAI,CAACH,SAAS;gBACV,OAAO;oBACHnB,QAAQ;oBACRC,SAAS;gBACb;YACJ;YAEA,IAAI,CAACkB,QAAQG,QAAQ,CAACC,KAAK,EAAE;gBACzB,OAAO;oBACHvB,QAAQ;oBACRC,SAAS;gBACb;YACJ;YAEA,kBAAkB;YAClB,MAAMA,UAAU,CAAC,KAAK,EAAEkB,QAAQG,QAAQ,CAACE,IAAI,CAAC,gBAAgB,EAAEL,QAAQM,aAAa,CAAC,SAAS,EAAEN,QAAQO,KAAK,CAACC,OAAO,CAAC,GAAG,6DAA6D,CAAC;YAExL,WAAW;YACX,OAAO,IAAI,CAAC7B,OAAO,CAAC;gBAChBK,IAAIgB,QAAQG,QAAQ,CAACC,KAAK;gBAC1BtB;YACJ;QACJ,EAAE,OAAON,OAAO;YACZC,QAAQD,KAAK,CAAC,wCAAwCA;YACtD,OAAO;gBACHK,QAAQ;gBACRC,SAASN,iBAAiBqB,QAAQrB,MAAMM,OAAO,GAAG;YACtD;QACJ;IACJ;IAEA;;;;KAIC,GACD,MAAM2B,oBAAoBV,SAAiB,EAA6B;QACpE,IAAI;YACA,oCAAoC;YACpC,MAAMC,UAAU,MAAMnC,cAAM,CAACmC,OAAO,CAACjC,UAAU,CAAC;gBAC5CC,OAAO;oBAAEiC,IAAIF;gBAAU;gBACvBG,SAAS;oBACLC,UAAU;gBACd;YACJ;YAEA,IAAI,CAACH,SAAS;gBACV,OAAO;oBACHnB,QAAQ;oBACRC,SAAS;gBACb;YACJ;YAEA,IAAI,CAACkB,QAAQG,QAAQ,CAACC,KAAK,EAAE;gBACzB,OAAO;oBACHvB,QAAQ;oBACRC,SAAS;gBACb;YACJ;YAEA,kBAAkB;YAClB,MAAMA,UAAU,CAAC,KAAK,EAAEkB,QAAQG,QAAQ,CAACE,IAAI,CAAC,mCAAmC,EAAEL,QAAQM,aAAa,CAAC,SAAS,EAAEN,QAAQO,KAAK,CAACC,OAAO,CAAC,GAAG,8DAA8D,CAAC;YAE5M,WAAW;YACX,OAAO,IAAI,CAAC7B,OAAO,CAAC;gBAChBK,IAAIgB,QAAQG,QAAQ,CAACC,KAAK;gBAC1BtB;YACJ;QACJ,EAAE,OAAON,OAAO;YACZC,QAAQD,KAAK,CAAC,oCAAoCA;YAClD,OAAO;gBACHK,QAAQ;gBACRC,SAASN,iBAAiBqB,QAAQrB,MAAMM,OAAO,GAAG;YACtD;QACJ;IACJ;;aApLQV,SAAwB;aACxBE,SAAwB;aACxBiB,UAAU;aACVhB,YAAY;;AAkLxB;AAGO,MAAMb,aAAa,IAAID"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "57ef3eddcf15588d9a625e959f86773fb5c0a491"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1src5l9t71 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1src5l9t71();
cov_1src5l9t71().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1src5l9t71().f[0]++;
  cov_1src5l9t71().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1src5l9t71().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1src5l9t71().s[3]++;
_export(exports, {
  SMSService: function () {
    /* istanbul ignore next */
    cov_1src5l9t71().f[1]++;
    cov_1src5l9t71().s[4]++;
    return SMSService;
  },
  smsService: function () {
    /* istanbul ignore next */
    cov_1src5l9t71().f[2]++;
    cov_1src5l9t71().s[5]++;
    return smsService;
  }
});
const _prisma =
/* istanbul ignore next */
(cov_1src5l9t71().s[6]++, require("../lib/prisma"));
const _axios =
/* istanbul ignore next */
(/*#__PURE__*/cov_1src5l9t71().s[7]++, _interop_require_default(require("axios")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1src5l9t71().f[3]++;
  cov_1src5l9t71().s[8]++;
  return /* istanbul ignore next */(cov_1src5l9t71().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1src5l9t71().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1src5l9t71().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1src5l9t71().b[0][1]++, {
    default: obj
  });
}
class SMSService {
  /**
   * Initialize the SMS service with settings from the database
   */
  async init() {
    /* istanbul ignore next */
    cov_1src5l9t71().f[4]++;
    cov_1src5l9t71().s[9]++;
    try {
      // Get settings from database
      const apiKeySetting =
      /* istanbul ignore next */
      (cov_1src5l9t71().s[10]++, await _prisma.prisma.systemSettings.findUnique({
        where: {
          key: "sms_api_key"
        }
      }));
      const userIdSetting =
      /* istanbul ignore next */
      (cov_1src5l9t71().s[11]++, await _prisma.prisma.systemSettings.findUnique({
        where: {
          key: "sms_user_id"
        }
      }));
      const enabledSetting =
      /* istanbul ignore next */
      (cov_1src5l9t71().s[12]++, await _prisma.prisma.systemSettings.findUnique({
        where: {
          key: "sms_enabled"
        }
      }));
      /* istanbul ignore next */
      cov_1src5l9t71().s[13]++;
      this.apiKey =
      /* istanbul ignore next */
      (cov_1src5l9t71().b[2][0]++, apiKeySetting?.value) ||
      /* istanbul ignore next */
      (cov_1src5l9t71().b[2][1]++, null);
      /* istanbul ignore next */
      cov_1src5l9t71().s[14]++;
      this.userId =
      /* istanbul ignore next */
      (cov_1src5l9t71().b[3][0]++, userIdSetting?.value) ||
      /* istanbul ignore next */
      (cov_1src5l9t71().b[3][1]++, null);
      /* istanbul ignore next */
      cov_1src5l9t71().s[15]++;
      this.isEnabled = enabledSetting?.value === "true";
    } catch (error) {
      /* istanbul ignore next */
      cov_1src5l9t71().s[16]++;
      console.error("Failed to initialize SMS service:", error);
    }
  }
  /**
   * Check if the SMS service is properly configured
   */
  isConfigured() {
    /* istanbul ignore next */
    cov_1src5l9t71().f[5]++;
    cov_1src5l9t71().s[17]++;
    return !!(
    /* istanbul ignore next */
    (cov_1src5l9t71().b[4][0]++, this.apiKey) &&
    /* istanbul ignore next */
    (cov_1src5l9t71().b[4][1]++, this.userId) &&
    /* istanbul ignore next */
    (cov_1src5l9t71().b[4][2]++, this.isEnabled));
  }
  /**
   * Send an SMS message
   * @param options SMS options including recipient and message
   * @returns Response from notify.lk API
   */
  async sendSMS(options) {
    /* istanbul ignore next */
    cov_1src5l9t71().f[6]++;
    cov_1src5l9t71().s[18]++;
    // Initialize if not already initialized
    if (
    /* istanbul ignore next */
    (cov_1src5l9t71().b[6][0]++, !this.apiKey) ||
    /* istanbul ignore next */
    (cov_1src5l9t71().b[6][1]++, !this.userId)) {
      /* istanbul ignore next */
      cov_1src5l9t71().b[5][0]++;
      cov_1src5l9t71().s[19]++;
      await this.init();
    } else
    /* istanbul ignore next */
    {
      cov_1src5l9t71().b[5][1]++;
    }
    // Check if service is configured and enabled
    cov_1src5l9t71().s[20]++;
    if (!this.isConfigured()) {
      /* istanbul ignore next */
      cov_1src5l9t71().b[7][0]++;
      cov_1src5l9t71().s[21]++;
      return {
        status: 400,
        message: "SMS service is not configured or disabled"
      };
    } else
    /* istanbul ignore next */
    {
      cov_1src5l9t71().b[7][1]++;
    }
    // Format phone number (remove spaces, ensure it starts with 94 for Sri Lanka)
    let phoneNumber =
    /* istanbul ignore next */
    (cov_1src5l9t71().s[22]++, options.to.replace(/\s+/g, ""));
    /* istanbul ignore next */
    cov_1src5l9t71().s[23]++;
    if (phoneNumber.startsWith("0")) {
      /* istanbul ignore next */
      cov_1src5l9t71().b[8][0]++;
      cov_1src5l9t71().s[24]++;
      phoneNumber = "94" + phoneNumber.substring(1);
    } else {
      /* istanbul ignore next */
      cov_1src5l9t71().b[8][1]++;
      cov_1src5l9t71().s[25]++;
      if (!phoneNumber.startsWith("94")) {
        /* istanbul ignore next */
        cov_1src5l9t71().b[9][0]++;
        cov_1src5l9t71().s[26]++;
        phoneNumber = "94" + phoneNumber;
      } else
      /* istanbul ignore next */
      {
        cov_1src5l9t71().b[9][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1src5l9t71().s[27]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1src5l9t71().s[28]++, await _axios.default.get(this.baseUrl, {
        params: {
          user_id: this.userId,
          api_key: this.apiKey,
          sender_id: "NotifyDEMO",
          to: phoneNumber,
          message: options.message
        }
      }));
      /* istanbul ignore next */
      cov_1src5l9t71().s[29]++;
      return {
        status: response.status,
        message: "SMS sent successfully",
        data: response.data
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1src5l9t71().s[30]++;
      console.error("Failed to send SMS:", error);
      /* istanbul ignore next */
      cov_1src5l9t71().s[31]++;
      return {
        status: 500,
        message: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1src5l9t71().b[10][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1src5l9t71().b[10][1]++, "Failed to send SMS")
      };
    }
  }
  /**
   * Send invoice notification to customer
   * @param invoiceId Invoice ID
   * @returns Response from notify.lk API
   */
  async sendInvoiceNotification(invoiceId) {
    /* istanbul ignore next */
    cov_1src5l9t71().f[7]++;
    cov_1src5l9t71().s[32]++;
    try {
      // Get invoice with customer details
      const invoice =
      /* istanbul ignore next */
      (cov_1src5l9t71().s[33]++, await _prisma.prisma.invoice.findUnique({
        where: {
          id: invoiceId
        },
        include: {
          customer: true
        }
      }));
      /* istanbul ignore next */
      cov_1src5l9t71().s[34]++;
      if (!invoice) {
        /* istanbul ignore next */
        cov_1src5l9t71().b[11][0]++;
        cov_1src5l9t71().s[35]++;
        return {
          status: 404,
          message: "Invoice not found"
        };
      } else
      /* istanbul ignore next */
      {
        cov_1src5l9t71().b[11][1]++;
      }
      cov_1src5l9t71().s[36]++;
      if (!invoice.customer.phone) {
        /* istanbul ignore next */
        cov_1src5l9t71().b[12][0]++;
        cov_1src5l9t71().s[37]++;
        return {
          status: 400,
          message: "Customer phone number not available"
        };
      } else
      /* istanbul ignore next */
      {
        cov_1src5l9t71().b[12][1]++;
      }
      // Prepare message
      const message =
      /* istanbul ignore next */
      (cov_1src5l9t71().s[38]++, `Dear ${invoice.customer.name}, your invoice #${invoice.invoiceNumber} for LKR ${invoice.total.toFixed(2)} has been created. Thank you for your business with MS Sport.`);
      // Send SMS
      /* istanbul ignore next */
      cov_1src5l9t71().s[39]++;
      return this.sendSMS({
        to: invoice.customer.phone,
        message
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1src5l9t71().s[40]++;
      console.error("Failed to send invoice notification:", error);
      /* istanbul ignore next */
      cov_1src5l9t71().s[41]++;
      return {
        status: 500,
        message: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1src5l9t71().b[13][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1src5l9t71().b[13][1]++, "Failed to send invoice notification")
      };
    }
  }
  /**
   * Send payment reminder for overdue invoices
   * @param invoiceId Invoice ID
   * @returns Response from notify.lk API
   */
  async sendPaymentReminder(invoiceId) {
    /* istanbul ignore next */
    cov_1src5l9t71().f[8]++;
    cov_1src5l9t71().s[42]++;
    try {
      // Get invoice with customer details
      const invoice =
      /* istanbul ignore next */
      (cov_1src5l9t71().s[43]++, await _prisma.prisma.invoice.findUnique({
        where: {
          id: invoiceId
        },
        include: {
          customer: true
        }
      }));
      /* istanbul ignore next */
      cov_1src5l9t71().s[44]++;
      if (!invoice) {
        /* istanbul ignore next */
        cov_1src5l9t71().b[14][0]++;
        cov_1src5l9t71().s[45]++;
        return {
          status: 404,
          message: "Invoice not found"
        };
      } else
      /* istanbul ignore next */
      {
        cov_1src5l9t71().b[14][1]++;
      }
      cov_1src5l9t71().s[46]++;
      if (!invoice.customer.phone) {
        /* istanbul ignore next */
        cov_1src5l9t71().b[15][0]++;
        cov_1src5l9t71().s[47]++;
        return {
          status: 400,
          message: "Customer phone number not available"
        };
      } else
      /* istanbul ignore next */
      {
        cov_1src5l9t71().b[15][1]++;
      }
      // Prepare message
      const message =
      /* istanbul ignore next */
      (cov_1src5l9t71().s[48]++, `Dear ${invoice.customer.name}, this is a reminder that invoice #${invoice.invoiceNumber} for LKR ${invoice.total.toFixed(2)} is overdue. Please make payment at your earliest convenience.`);
      // Send SMS
      /* istanbul ignore next */
      cov_1src5l9t71().s[49]++;
      return this.sendSMS({
        to: invoice.customer.phone,
        message
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1src5l9t71().s[50]++;
      console.error("Failed to send payment reminder:", error);
      /* istanbul ignore next */
      cov_1src5l9t71().s[51]++;
      return {
        status: 500,
        message: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1src5l9t71().b[16][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1src5l9t71().b[16][1]++, "Failed to send payment reminder")
      };
    }
  }
  constructor() {
    /* istanbul ignore next */
    cov_1src5l9t71().f[9]++;
    cov_1src5l9t71().s[52]++;
    this.apiKey = null;
    /* istanbul ignore next */
    cov_1src5l9t71().s[53]++;
    this.userId = null;
    /* istanbul ignore next */
    cov_1src5l9t71().s[54]++;
    this.baseUrl = "https://app.notify.lk/api/v1/send";
    /* istanbul ignore next */
    cov_1src5l9t71().s[55]++;
    this.isEnabled = false;
  }
}
const smsService =
/* istanbul ignore next */
(cov_1src5l9t71().s[56]++, new SMSService());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,