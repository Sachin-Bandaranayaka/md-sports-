{"version":3,"names":["cov_160jyjwbc8","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","GET","dynamic","maxDuration","runtime","request","Date","now","cacheKey","timestamp","_cachevercel","cache","set","cachedValue","get","dbStart","_prisma","prisma","$queryRaw","dbTime","totalTime","_server","NextResponse","json","status","toISOString","checks","database","responseTime","environment","region","process","env","VERCEL_REGION","nodeVersion","performance","totalResponseTime","headers","error","console","Error","message"],"sources":["/Users/sachin/Documents/md-sports-/src/app/api/health/route.ts"],"sourcesContent":["/**\n * Health check endpoint optimized for Vercel serverless\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { prisma } from '@/lib/prisma';\nimport { cache } from '@/lib/cache-vercel';\n\n// Vercel serverless optimizations\nexport const runtime = 'nodejs';\nexport const dynamic = 'force-dynamic';\nexport const maxDuration = 10;\n\nexport async function GET(request: NextRequest) {\n  const start = Date.now();\n  \n  try {\n    // Check cache health\n    const cacheKey = 'health:check';\n    const timestamp = Date.now();\n    await cache.set(cacheKey, timestamp, 60);\n    const cachedValue = await cache.get(cacheKey);\n    \n    // Check database health\n    const dbStart = Date.now();\n    await prisma.$queryRaw`SELECT 1`;\n    const dbTime = Date.now() - dbStart;\n    \n    const totalTime = Date.now() - start;\n    \n    return NextResponse.json({\n      status: 'healthy',\n      timestamp: new Date().toISOString(),\n      checks: {\n        database: {\n          status: 'healthy',\n          responseTime: `${dbTime}ms`\n        },\n        cache: {\n          status: cachedValue === timestamp ? 'healthy' : 'degraded',\n          responseTime: 'N/A'\n        }\n      },\n      environment: {\n        runtime: 'vercel-serverless',\n        region: process.env.VERCEL_REGION || 'unknown',\n        nodeVersion: process.version\n      },\n      performance: {\n        totalResponseTime: `${totalTime}ms`\n      }\n    }, {\n      status: 200,\n      headers: {\n        'Cache-Control': 'no-cache, no-store, must-revalidate',\n        'Content-Type': 'application/json'\n      }\n    });\n    \n  } catch (error) {\n    console.error('Health check failed:', error);\n    \n    return NextResponse.json({\n      status: 'unhealthy',\n      timestamp: new Date().toISOString(),\n      error: error instanceof Error ? error.message : 'Unknown error',\n      performance: {\n        totalResponseTime: `${Date.now() - start}ms`\n      }\n    }, {\n      status: 503,\n      headers: {\n        'Cache-Control': 'no-cache, no-store, must-revalidate',\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n}"],"mappings":"AAAA;;GAEC;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UA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","ignoreList":[]}