80460e70656c45ee3ed56d6d84ec4d0b
"use strict";

/* istanbul ignore next */
function cov_11omm1l759() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/dashboard/all/route.ts";
  var hash = "a4d947a9a78fededfa57c772e29a7dda3a432ba7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/dashboard/all/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 19
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 42
        }
      },
      "5": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 54
        }
      },
      "6": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 41
        }
      },
      "7": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 45
        }
      },
      "8": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 16,
          column: 41
        }
      },
      "9": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 45
        }
      },
      "10": {
        start: {
          line: 18,
          column: 15
        },
        end: {
          line: 18,
          column: 47
        }
      },
      "11": {
        start: {
          line: 19,
          column: 24
        },
        end: {
          line: 19,
          column: 71
        }
      },
      "12": {
        start: {
          line: 20,
          column: 14
        },
        end: {
          line: 20,
          column: 45
        }
      },
      "13": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 49
        }
      },
      "14": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 192,
          column: 2
        }
      },
      "15": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 191,
          column: 5
        }
      },
      "16": {
        start: {
          line: 25,
          column: 27
        },
        end: {
          line: 25,
          column: 94
        }
      },
      "17": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 32,
          column: 9
        }
      },
      "18": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 31,
          column: 15
        }
      },
      "19": {
        start: {
          line: 34,
          column: 33
        },
        end: {
          line: 34,
          column: 53
        }
      },
      "20": {
        start: {
          line: 35,
          column: 31
        },
        end: {
          line: 35,
          column: 60
        }
      },
      "21": {
        start: {
          line: 36,
          column: 29
        },
        end: {
          line: 36,
          column: 56
        }
      },
      "22": {
        start: {
          line: 38,
          column: 24
        },
        end: {
          line: 38,
          column: 74
        }
      },
      "23": {
        start: {
          line: 39,
          column: 26
        },
        end: {
          line: 39,
          column: 116
        }
      },
      "24": {
        start: {
          line: 41,
          column: 27
        },
        end: {
          line: 41,
          column: 103
        }
      },
      "25": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "26": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 52,
          column: 15
        }
      },
      "27": {
        start: {
          line: 55,
          column: 29
        },
        end: {
          line: 55,
          column: 110
        }
      },
      "28": {
        start: {
          line: 56,
          column: 25
        },
        end: {
          line: 56,
          column: 103
        }
      },
      "29": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 36
        }
      },
      "30": {
        start: {
          line: 58,
          column: 27
        },
        end: {
          line: 58,
          column: 66
        }
      },
      "31": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 39
        }
      },
      "32": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "33": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 94
        }
      },
      "34": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 69,
          column: 15
        }
      },
      "35": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 75,
          column: 11
        }
      },
      "36": {
        start: {
          line: 76,
          column: 23
        },
        end: {
          line: 76,
          column: 65
        }
      },
      "37": {
        start: {
          line: 78,
          column: 23
        },
        end: {
          line: 78,
          column: 67
        }
      },
      "38": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "39": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 84,
          column: 15
        }
      },
      "40": {
        start: {
          line: 87,
          column: 21
        },
        end: {
          line: 96,
          column: 10
        }
      },
      "41": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "42": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 102,
          column: 15
        }
      },
      "43": {
        start: {
          line: 105,
          column: 24
        },
        end: {
          line: 105,
          column: 146
        }
      },
      "44": {
        start: {
          line: 107,
          column: 27
        },
        end: {
          line: 107,
          column: 31
        }
      },
      "45": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "46": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 34
        }
      },
      "47": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 41
        }
      },
      "48": {
        start: {
          line: 112,
          column: 19
        },
        end: {
          line: 112,
          column: 152
        }
      },
      "49": {
        start: {
          line: 112,
          column: 116
        },
        end: {
          line: 112,
          column: 151
        }
      },
      "50": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 50
        }
      },
      "51": {
        start: {
          line: 114,
          column: 19
        },
        end: {
          line: 114,
          column: 135
        }
      },
      "52": {
        start: {
          line: 114,
          column: 90
        },
        end: {
          line: 114,
          column: 134
        }
      },
      "53": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 39
        }
      },
      "54": {
        start: {
          line: 116,
          column: 19
        },
        end: {
          line: 116,
          column: 113
        }
      },
      "55": {
        start: {
          line: 116,
          column: 79
        },
        end: {
          line: 116,
          column: 112
        }
      },
      "56": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 55
        }
      },
      "57": {
        start: {
          line: 118,
          column: 19
        },
        end: {
          line: 118,
          column: 145
        }
      },
      "58": {
        start: {
          line: 118,
          column: 95
        },
        end: {
          line: 118,
          column: 144
        }
      },
      "59": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 39
        }
      },
      "60": {
        start: {
          line: 120,
          column: 19
        },
        end: {
          line: 120,
          column: 149
        }
      },
      "61": {
        start: {
          line: 120,
          column: 115
        },
        end: {
          line: 120,
          column: 148
        }
      },
      "62": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 43
        }
      },
      "63": {
        start: {
          line: 122,
          column: 19
        },
        end: {
          line: 122,
          column: 121
        }
      },
      "64": {
        start: {
          line: 122,
          column: 83
        },
        end: {
          line: 122,
          column: 120
        }
      },
      "65": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 51
        }
      },
      "66": {
        start: {
          line: 124,
          column: 116
        },
        end: {
          line: 131,
          column: 10
        }
      },
      "67": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 54
        }
      },
      "68": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "69": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 146,
          column: 15
        }
      },
      "70": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 144,
          column: 17
        }
      },
      "71": {
        start: {
          line: 138,
          column: 20
        },
        end: {
          line: 143,
          column: 22
        }
      },
      "72": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 145,
          column: 28
        }
      },
      "73": {
        start: {
          line: 148,
          column: 29
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "74": {
        start: {
          line: 170,
          column: 26
        },
        end: {
          line: 170,
          column: 36
        }
      },
      "75": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 34
        }
      },
      "76": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 67
        }
      },
      "77": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 37
        }
      },
      "78": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 103
        }
      },
      "79": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 55
        }
      },
      "80": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 67
        }
      },
      "81": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 190,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 61
          },
          end: {
            line: 22,
            column: 62
          }
        },
        loc: {
          start: {
            line: 22,
            column: 87
          },
          end: {
            line: 192,
            column: 1
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 112,
            column: 112
          },
          end: {
            line: 112,
            column: 113
          }
        },
        loc: {
          start: {
            line: 112,
            column: 116
          },
          end: {
            line: 112,
            column: 151
          }
        },
        line: 112
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 114,
            column: 86
          },
          end: {
            line: 114,
            column: 87
          }
        },
        loc: {
          start: {
            line: 114,
            column: 90
          },
          end: {
            line: 114,
            column: 134
          }
        },
        line: 114
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 116,
            column: 75
          },
          end: {
            line: 116,
            column: 76
          }
        },
        loc: {
          start: {
            line: 116,
            column: 79
          },
          end: {
            line: 116,
            column: 112
          }
        },
        line: 116
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 118,
            column: 91
          },
          end: {
            line: 118,
            column: 92
          }
        },
        loc: {
          start: {
            line: 118,
            column: 95
          },
          end: {
            line: 118,
            column: 144
          }
        },
        line: 118
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 120,
            column: 111
          },
          end: {
            line: 120,
            column: 112
          }
        },
        loc: {
          start: {
            line: 120,
            column: 115
          },
          end: {
            line: 120,
            column: 148
          }
        },
        line: 120
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 122,
            column: 79
          },
          end: {
            line: 122,
            column: 80
          }
        },
        loc: {
          start: {
            line: 122,
            column: 83
          },
          end: {
            line: 122,
            column: 120
          }
        },
        line: 122
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 136,
            column: 56
          },
          end: {
            line: 136,
            column: 57
          }
        },
        loc: {
          start: {
            line: 136,
            column: 64
          },
          end: {
            line: 146,
            column: 13
          }
        },
        line: 136
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 170,
            column: 21
          },
          end: {
            line: 170,
            column: 22
          }
        },
        loc: {
          start: {
            line: 170,
            column: 26
          },
          end: {
            line: 170,
            column: 36
          }
        },
        line: 170
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 39
          },
          end: {
            line: 38,
            column: 61
          }
        }, {
          start: {
            line: 38,
            column: 64
          },
          end: {
            line: 38,
            column: 74
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 39,
            column: 26
          },
          end: {
            line: 39,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 43
          },
          end: {
            line: 39,
            column: 67
          }
        }, {
          start: {
            line: 39,
            column: 70
          },
          end: {
            line: 39,
            column: 116
          }
        }],
        line: 39
      },
      "3": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "4": {
        loc: {
          start: {
            line: 56,
            column: 42
          },
          end: {
            line: 56,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 63
          },
          end: {
            line: 56,
            column: 77
          }
        }, {
          start: {
            line: 56,
            column: 80
          },
          end: {
            line: 56,
            column: 85
          }
        }],
        line: 56
      },
      "5": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "6": {
        loc: {
          start: {
            line: 76,
            column: 23
          },
          end: {
            line: 76,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 76,
            column: 44
          },
          end: {
            line: 76,
            column: 58
          }
        }, {
          start: {
            line: 76,
            column: 61
          },
          end: {
            line: 76,
            column: 65
          }
        }],
        line: 76
      },
      "7": {
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "8": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "9": {
        loc: {
          start: {
            line: 105,
            column: 24
          },
          end: {
            line: 105,
            column: 146
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 24
          },
          end: {
            line: 105,
            column: 49
          }
        }, {
          start: {
            line: 105,
            column: 53
          },
          end: {
            line: 105,
            column: 84
          }
        }, {
          start: {
            line: 105,
            column: 88
          },
          end: {
            line: 105,
            column: 104
          }
        }, {
          start: {
            line: 105,
            column: 108
          },
          end: {
            line: 105,
            column: 146
          }
        }],
        line: 105
      },
      "10": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "11": {
        loc: {
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "12": {
        loc: {
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 135,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 135,
            column: 33
          }
        }, {
          start: {
            line: 135,
            column: 37
          },
          end: {
            line: 135,
            column: 55
          }
        }, {
          start: {
            line: 135,
            column: 59
          },
          end: {
            line: 135,
            column: 89
          }
        }],
        line: 135
      },
      "13": {
        loc: {
          start: {
            line: 137,
            column: 16
          },
          end: {
            line: 144,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 16
          },
          end: {
            line: 144,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "14": {
        loc: {
          start: {
            line: 150,
            column: 25
          },
          end: {
            line: 150,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 150,
            column: 49
          },
          end: {
            line: 150,
            column: 67
          }
        }, {
          start: {
            line: 150,
            column: 70
          },
          end: {
            line: 150,
            column: 74
          }
        }],
        line: 150
      },
      "15": {
        loc: {
          start: {
            line: 152,
            column: 29
          },
          end: {
            line: 152,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 152,
            column: 51
          },
          end: {
            line: 152,
            column: 67
          }
        }, {
          start: {
            line: 152,
            column: 70
          },
          end: {
            line: 152,
            column: 74
          }
        }],
        line: 152
      },
      "16": {
        loc: {
          start: {
            line: 153,
            column: 35
          },
          end: {
            line: 153,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 153,
            column: 61
          },
          end: {
            line: 153,
            column: 81
          }
        }, {
          start: {
            line: 153,
            column: 84
          },
          end: {
            line: 153,
            column: 88
          }
        }],
        line: 153
      },
      "17": {
        loc: {
          start: {
            line: 154,
            column: 26
          },
          end: {
            line: 154,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 154,
            column: 48
          },
          end: {
            line: 154,
            column: 64
          }
        }, {
          start: {
            line: 154,
            column: 67
          },
          end: {
            line: 154,
            column: 71
          }
        }],
        line: 154
      },
      "18": {
        loc: {
          start: {
            line: 155,
            column: 29
          },
          end: {
            line: 155,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 155,
            column: 55
          },
          end: {
            line: 155,
            column: 75
          }
        }, {
          start: {
            line: 155,
            column: 78
          },
          end: {
            line: 155,
            column: 82
          }
        }],
        line: 155
      },
      "19": {
        loc: {
          start: {
            line: 164,
            column: 16
          },
          end: {
            line: 164,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 164,
            column: 41
          },
          end: {
            line: 164,
            column: 71
          }
        }, {
          start: {
            line: 164,
            column: 74
          },
          end: {
            line: 164,
            column: 78
          }
        }],
        line: 164
      },
      "20": {
        loc: {
          start: {
            line: 165,
            column: 16
          },
          end: {
            line: 165,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 50
          },
          end: {
            line: 165,
            column: 86
          }
        }, {
          start: {
            line: 165,
            column: 89
          },
          end: {
            line: 165,
            column: 93
          }
        }],
        line: 165
      },
      "21": {
        loc: {
          start: {
            line: 166,
            column: 16
          },
          end: {
            line: 166,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 166,
            column: 39
          },
          end: {
            line: 166,
            column: 67
          }
        }, {
          start: {
            line: 166,
            column: 70
          },
          end: {
            line: 166,
            column: 74
          }
        }],
        line: 166
      },
      "22": {
        loc: {
          start: {
            line: 167,
            column: 16
          },
          end: {
            line: 167,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 167,
            column: 43
          },
          end: {
            line: 167,
            column: 75
          }
        }, {
          start: {
            line: 167,
            column: 78
          },
          end: {
            line: 167,
            column: 82
          }
        }],
        line: 167
      },
      "23": {
        loc: {
          start: {
            line: 168,
            column: 16
          },
          end: {
            line: 168,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 168,
            column: 39
          },
          end: {
            line: 168,
            column: 67
          }
        }, {
          start: {
            line: 168,
            column: 70
          },
          end: {
            line: 168,
            column: 74
          }
        }],
        line: 168
      },
      "24": {
        loc: {
          start: {
            line: 169,
            column: 16
          },
          end: {
            line: 169,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 169,
            column: 43
          },
          end: {
            line: 169,
            column: 75
          }
        }, {
          start: {
            line: 169,
            column: 78
          },
          end: {
            line: 169,
            column: 82
          }
        }],
        line: 169
      },
      "25": {
        loc: {
          start: {
            line: 183,
            column: 19
          },
          end: {
            line: 183,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 183,
            column: 44
          },
          end: {
            line: 183,
            column: 57
          }
        }, {
          start: {
            line: 183,
            column: 60
          },
          end: {
            line: 183,
            column: 73
          }
        }],
        line: 183
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/dashboard/all/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { fetchSummaryData } from '../summary/route';\nimport { fetchTotalRetailValueData } from '../total-retail-value/route';\nimport { fetchShopsData } from '../shops/route';\nimport { fetchInventoryDistributionData } from '../inventory/route';\nimport { fetchSalesData } from '../sales/route';\nimport { fetchTransfersData } from '../transfers/route';\nimport { cacheService } from '@/lib/cache';\nimport { ShopAccessControl } from '@/lib/utils/shopMiddleware';\nimport { validateTokenPermission, getUserIdFromToken } from '@/lib/auth';\nimport { prisma } from '@/lib/prisma';\n\nexport const GET = ShopAccessControl.withShopAccess(async (request: NextRequest, context) => {\n    try {\n        // Validate token and permissions\n        const authResult = await validateTokenPermission(request, 'view_dashboard');\n        if (!authResult.isValid) {\n            return NextResponse.json({ error: authResult.message }, { status: 401 });\n        }\n\n        // Extract date range from query parameters\n        const { searchParams } = new URL(request.url);\n        const startDateParam = searchParams.get('startDate');\n        const endDateParam = searchParams.get('endDate');\n        \n        // Default to last 7 days if no dates provided\n        const endDate = endDateParam ? new Date(endDateParam) : new Date();\n        const startDate = startDateParam ? new Date(startDateParam) : new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\n        \n        // Calculate period days for backward compatibility with existing functions\n        const periodDays = Math.ceil((endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24));\n\n        // Validate period parameter\n        if (![7, 30].includes(periodDays)) {\n            return NextResponse.json({ \n                success: false, \n                message: 'Invalid period. Must be 7 or 30 days.' \n            }, { status: 400 });\n        }\n\n        // Create cache key based on shop and date range\n        const dateRangeKey = `${startDate.toISOString().split('T')[0]}-${endDate.toISOString().split('T')[0]}`;\n        const cacheKey = `dashboard:all:${context.isFiltered ? context.shopId : 'all'}:${dateRangeKey}`;\n        console.time('cache check');\n        const cachedData = await cacheService.get(cacheKey);\n        console.timeEnd('cache check');\n\n        if (cachedData) {\n            console.log('\u2705 Dashboard data served from cache for period:', periodDays, 'days');\n            return NextResponse.json({\n                ...cachedData,\n                meta: {\n                    ...cachedData.meta,\n                    period: periodDays,\n                    fromCache: true\n                }\n            });\n        }\n\n        console.log('\uD83D\uDD04 Fetching fresh dashboard data with shop context and period:', {\n            shopId: context.shopId,\n            isFiltered: context.isFiltered,\n            period: periodDays\n        });\n\n        const shopId = context.isFiltered ? context.shopId : null;\n\n        // Get user ID from token\n        const userId = await getUserIdFromToken(request);\n        if (!userId) {\n            return NextResponse.json({ error: 'User ID not found in token' }, { status: 401 });\n        }\n\n        // Fetch user details to check role and permissions\n        const user = await prisma.user.findUnique({\n            where: { id: userId },\n            select: {\n                id: true,\n                roleName: true,\n                permissions: true\n            }\n        });\n\n        if (!user) {\n            return NextResponse.json({ error: 'User not found' }, { status: 404 });\n        }\n\n        // Check if user is admin or has admin permissions\n        const isAdmin = user.roleName === 'Admin' || user.roleName === 'Super Admin' || \n                       (user.permissions && user.permissions.includes('admin:all'));\n\n        // Determine user filtering\n        let filterUserId: string | null = null;\n        if (!isAdmin) {\n            filterUserId = userId;\n        }\n\n        console.time('fetchSummaryData');\n        const p1 = fetchSummaryData(shopId, periodDays, undefined, undefined, filterUserId).finally(() => console.timeEnd('fetchSummaryData'));\n\n        console.time('fetchTotalRetailValueData');\n        const p2 = fetchTotalRetailValueData(shopId, periodDays).finally(() => console.timeEnd('fetchTotalRetailValueData'));\n\n        console.time('fetchShopsData');\n        const p3 = fetchShopsData(shopId, periodDays).finally(() => console.timeEnd('fetchShopsData'));\n\n        console.time('fetchInventoryDistributionData');\n        const p4 = fetchInventoryDistributionData(shopId, periodDays).finally(() => console.timeEnd('fetchInventoryDistributionData'));\n\n        console.time('fetchSalesData');\n        const p5 = fetchSalesData(shopId, periodDays, undefined, undefined, filterUserId).finally(() => console.timeEnd('fetchSalesData'));\n\n        console.time('fetchTransfersData');\n        const p6 = fetchTransfersData(shopId, periodDays).finally(() => console.timeEnd('fetchTransfersData'));\n\n        console.time('Promise.all dashboard data');\n        const [\n            summaryResult,\n            totalRetailValueResult,\n            shopsResult,\n            inventoryResult,\n            salesResult,\n            transfersResult\n        ] = await Promise.all([\n             fetchSummaryData(context.shopId, periodDays, startDate, endDate, filterUserId),\n             fetchTotalRetailValueData(context.shopId, periodDays, startDate, endDate),\n             fetchShopsData(context.shopId, periodDays, startDate, endDate),\n             fetchInventoryDistributionData(context.shopId, periodDays, startDate, endDate),\n             fetchSalesData(context.shopId, periodDays, startDate, endDate, filterUserId),\n             fetchTransfersData(context.shopId, periodDays, startDate, endDate)\n         ]);\n        console.timeEnd('Promise.all dashboard data');\n\n        // The summaryData expects totalRetailValue to be part of its structure.\n        // Let's merge it here.\n        if (summaryResult.success && summaryResult.data && totalRetailValueResult.success) {\n            summaryResult.data = summaryResult.data.map(item => {\n                if (item.title === 'Total Retail Value') {\n                    return {\n                        ...item,\n                        value: totalRetailValueResult.formattedValue,\n                        trend: totalRetailValueResult.trend,\n                        trendUp: totalRetailValueResult.trendUp\n                    };\n                }\n                return item;\n            });\n        }\n\n        const responseData = {\n            success: true, // Overall success\n            summaryData: summaryResult.success ? summaryResult.data : null,\n            // totalRetailValue: totalRetailValueResult.success ? totalRetailValueResult : null, // No longer needed separately\n            shopPerformance: shopsResult.success ? shopsResult.data : null,\n            inventoryDistribution: inventoryResult.success ? inventoryResult.data : null,\n            monthlySales: salesResult.success ? salesResult.data : null,\n            recentTransfers: transfersResult.success ? transfersResult.data : null,\n            meta: {\n                shopFiltered: context.isFiltered,\n                shopId: context.shopId,\n                period: periodDays,\n                fromCache: false\n            },\n            // You might want to include individual success statuses or error messages if needed\n            errors: [\n                !summaryResult.success ? 'Failed to fetch summary data' : null,\n                !totalRetailValueResult.success ? 'Failed to fetch total retail value' : null,\n                !shopsResult.success ? 'Failed to fetch shops data' : null,\n                !inventoryResult.success ? 'Failed to fetch inventory data' : null,\n                !salesResult.success ? 'Failed to fetch sales data' : null,\n                !transfersResult.success ? 'Failed to fetch transfers data' : null,\n            ].filter(e => e !== null)\n        };\n\n        // Cache the response for 2 minutes with period-specific key\n        console.time('cache set');\n        await cacheService.set(cacheKey, responseData, 120);\n        console.timeEnd('cache set');\n        console.log('\uD83D\uDCBE Dashboard data cached for 2 minutes with date range:', dateRangeKey);\n\n        return NextResponse.json(responseData);\n\n    } catch (error) {\n        console.error('Error fetching all dashboard data:', error);\n        return NextResponse.json(\n            {\n                success: false,\n                message: 'Failed to load all dashboard data',\n                error: error instanceof Error ? error.message : String(error),\n                meta: {\n                    shopFiltered: context.isFiltered,\n                    shopId: context.shopId\n                }\n            },\n            { status: 500 }\n        );\n    }\n});"],
      names: ["GET", "ShopAccessControl", "withShopAccess", "request", "context", "authResult", "validateTokenPermission", "isValid", "NextResponse", "json", "error", "message", "status", "searchParams", "URL", "url", "startDateParam", "get", "endDateParam", "endDate", "Date", "startDate", "now", "periodDays", "Math", "ceil", "getTime", "includes", "success", "dateRangeKey", "toISOString", "split", "cacheKey", "isFiltered", "shopId", "console", "time", "cachedData", "cacheService", "timeEnd", "log", "meta", "period", "fromCache", "userId", "getUserIdFromToken", "user", "prisma", "findUnique", "where", "id", "select", "roleName", "permissions", "isAdmin", "filterUserId", "p1", "fetchSummaryData", "undefined", "finally", "p2", "fetchTotalRetailValueData", "p3", "fetchShopsData", "p4", "fetchInventoryDistributionData", "p5", "fetchSalesData", "p6", "fetchTransfersData", "summaryResult", "totalRetailValueResult", "shopsResult", "inventoryResult", "salesResult", "transfersResult", "Promise", "all", "data", "map", "item", "title", "value", "formattedValue", "trend", "trendUp", "responseData", "summaryData", "shopPerformance", "inventoryDistribution", "monthlySales", "recentTransfers", "shopFiltered", "errors", "filter", "e", "set", "Error", "String"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a4d947a9a78fededfa57c772e29a7dda3a432ba7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_11omm1l759 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_11omm1l759();
cov_11omm1l759().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_11omm1l759().s[1]++;
Object.defineProperty(exports, "GET", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_11omm1l759().f[0]++;
    cov_11omm1l759().s[2]++;
    return GET;
  }
});
const _server =
/* istanbul ignore next */
(cov_11omm1l759().s[3]++, require("next/server"));
const _route =
/* istanbul ignore next */
(cov_11omm1l759().s[4]++, require("../summary/route"));
const _route1 =
/* istanbul ignore next */
(cov_11omm1l759().s[5]++, require("../total-retail-value/route"));
const _route2 =
/* istanbul ignore next */
(cov_11omm1l759().s[6]++, require("../shops/route"));
const _route3 =
/* istanbul ignore next */
(cov_11omm1l759().s[7]++, require("../inventory/route"));
const _route4 =
/* istanbul ignore next */
(cov_11omm1l759().s[8]++, require("../sales/route"));
const _route5 =
/* istanbul ignore next */
(cov_11omm1l759().s[9]++, require("../transfers/route"));
const _cache =
/* istanbul ignore next */
(cov_11omm1l759().s[10]++, require("../../../../lib/cache"));
const _shopMiddleware =
/* istanbul ignore next */
(cov_11omm1l759().s[11]++, require("../../../../lib/utils/shopMiddleware"));
const _auth =
/* istanbul ignore next */
(cov_11omm1l759().s[12]++, require("../../../../lib/auth"));
const _prisma =
/* istanbul ignore next */
(cov_11omm1l759().s[13]++, require("../../../../lib/prisma"));
const GET =
/* istanbul ignore next */
(cov_11omm1l759().s[14]++, _shopMiddleware.ShopAccessControl.withShopAccess(async (request, context) => {
  /* istanbul ignore next */
  cov_11omm1l759().f[1]++;
  cov_11omm1l759().s[15]++;
  try {
    // Validate token and permissions
    const authResult =
    /* istanbul ignore next */
    (cov_11omm1l759().s[16]++, await (0, _auth.validateTokenPermission)(request, "view_dashboard"));
    /* istanbul ignore next */
    cov_11omm1l759().s[17]++;
    if (!authResult.isValid) {
      /* istanbul ignore next */
      cov_11omm1l759().b[0][0]++;
      cov_11omm1l759().s[18]++;
      return _server.NextResponse.json({
        error: authResult.message
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_11omm1l759().b[0][1]++;
    }
    // Extract date range from query parameters
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_11omm1l759().s[19]++, new URL(request.url));
    const startDateParam =
    /* istanbul ignore next */
    (cov_11omm1l759().s[20]++, searchParams.get("startDate"));
    const endDateParam =
    /* istanbul ignore next */
    (cov_11omm1l759().s[21]++, searchParams.get("endDate"));
    // Default to last 7 days if no dates provided
    const endDate =
    /* istanbul ignore next */
    (cov_11omm1l759().s[22]++, endDateParam ?
    /* istanbul ignore next */
    (cov_11omm1l759().b[1][0]++, new Date(endDateParam)) :
    /* istanbul ignore next */
    (cov_11omm1l759().b[1][1]++, new Date()));
    const startDate =
    /* istanbul ignore next */
    (cov_11omm1l759().s[23]++, startDateParam ?
    /* istanbul ignore next */
    (cov_11omm1l759().b[2][0]++, new Date(startDateParam)) :
    /* istanbul ignore next */
    (cov_11omm1l759().b[2][1]++, new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)));
    // Calculate period days for backward compatibility with existing functions
    const periodDays =
    /* istanbul ignore next */
    (cov_11omm1l759().s[24]++, Math.ceil((endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24)));
    // Validate period parameter
    /* istanbul ignore next */
    cov_11omm1l759().s[25]++;
    if (![7, 30].includes(periodDays)) {
      /* istanbul ignore next */
      cov_11omm1l759().b[3][0]++;
      cov_11omm1l759().s[26]++;
      return _server.NextResponse.json({
        success: false,
        message: "Invalid period. Must be 7 or 30 days."
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_11omm1l759().b[3][1]++;
    }
    // Create cache key based on shop and date range
    const dateRangeKey =
    /* istanbul ignore next */
    (cov_11omm1l759().s[27]++, `${startDate.toISOString().split("T")[0]}-${endDate.toISOString().split("T")[0]}`);
    const cacheKey =
    /* istanbul ignore next */
    (cov_11omm1l759().s[28]++, `dashboard:all:${context.isFiltered ?
    /* istanbul ignore next */
    (cov_11omm1l759().b[4][0]++, context.shopId) :
    /* istanbul ignore next */
    (cov_11omm1l759().b[4][1]++, "all")}:${dateRangeKey}`);
    /* istanbul ignore next */
    cov_11omm1l759().s[29]++;
    console.time("cache check");
    const cachedData =
    /* istanbul ignore next */
    (cov_11omm1l759().s[30]++, await _cache.cacheService.get(cacheKey));
    /* istanbul ignore next */
    cov_11omm1l759().s[31]++;
    console.timeEnd("cache check");
    /* istanbul ignore next */
    cov_11omm1l759().s[32]++;
    if (cachedData) {
      /* istanbul ignore next */
      cov_11omm1l759().b[5][0]++;
      cov_11omm1l759().s[33]++;
      console.log("✅ Dashboard data served from cache for period:", periodDays, "days");
      /* istanbul ignore next */
      cov_11omm1l759().s[34]++;
      return _server.NextResponse.json({
        ...cachedData,
        meta: {
          ...cachedData.meta,
          period: periodDays,
          fromCache: true
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_11omm1l759().b[5][1]++;
    }
    cov_11omm1l759().s[35]++;
    console.log("\uD83D\uDD04 Fetching fresh dashboard data with shop context and period:", {
      shopId: context.shopId,
      isFiltered: context.isFiltered,
      period: periodDays
    });
    const shopId =
    /* istanbul ignore next */
    (cov_11omm1l759().s[36]++, context.isFiltered ?
    /* istanbul ignore next */
    (cov_11omm1l759().b[6][0]++, context.shopId) :
    /* istanbul ignore next */
    (cov_11omm1l759().b[6][1]++, null));
    // Get user ID from token
    const userId =
    /* istanbul ignore next */
    (cov_11omm1l759().s[37]++, await (0, _auth.getUserIdFromToken)(request));
    /* istanbul ignore next */
    cov_11omm1l759().s[38]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_11omm1l759().b[7][0]++;
      cov_11omm1l759().s[39]++;
      return _server.NextResponse.json({
        error: "User ID not found in token"
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_11omm1l759().b[7][1]++;
    }
    // Fetch user details to check role and permissions
    const user =
    /* istanbul ignore next */
    (cov_11omm1l759().s[40]++, await _prisma.prisma.user.findUnique({
      where: {
        id: userId
      },
      select: {
        id: true,
        roleName: true,
        permissions: true
      }
    }));
    /* istanbul ignore next */
    cov_11omm1l759().s[41]++;
    if (!user) {
      /* istanbul ignore next */
      cov_11omm1l759().b[8][0]++;
      cov_11omm1l759().s[42]++;
      return _server.NextResponse.json({
        error: "User not found"
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_11omm1l759().b[8][1]++;
    }
    // Check if user is admin or has admin permissions
    const isAdmin =
    /* istanbul ignore next */
    (cov_11omm1l759().s[43]++,
    /* istanbul ignore next */
    (cov_11omm1l759().b[9][0]++, user.roleName === "Admin") ||
    /* istanbul ignore next */
    (cov_11omm1l759().b[9][1]++, user.roleName === "Super Admin") ||
    /* istanbul ignore next */
    (cov_11omm1l759().b[9][2]++, user.permissions) &&
    /* istanbul ignore next */
    (cov_11omm1l759().b[9][3]++, user.permissions.includes("admin:all")));
    // Determine user filtering
    let filterUserId =
    /* istanbul ignore next */
    (cov_11omm1l759().s[44]++, null);
    /* istanbul ignore next */
    cov_11omm1l759().s[45]++;
    if (!isAdmin) {
      /* istanbul ignore next */
      cov_11omm1l759().b[10][0]++;
      cov_11omm1l759().s[46]++;
      filterUserId = userId;
    } else
    /* istanbul ignore next */
    {
      cov_11omm1l759().b[10][1]++;
    }
    cov_11omm1l759().s[47]++;
    console.time("fetchSummaryData");
    const p1 =
    /* istanbul ignore next */
    (cov_11omm1l759().s[48]++, (0, _route.fetchSummaryData)(shopId, periodDays, undefined, undefined, filterUserId).finally(() => {
      /* istanbul ignore next */
      cov_11omm1l759().f[2]++;
      cov_11omm1l759().s[49]++;
      return console.timeEnd("fetchSummaryData");
    }));
    /* istanbul ignore next */
    cov_11omm1l759().s[50]++;
    console.time("fetchTotalRetailValueData");
    const p2 =
    /* istanbul ignore next */
    (cov_11omm1l759().s[51]++, (0, _route1.fetchTotalRetailValueData)(shopId, periodDays).finally(() => {
      /* istanbul ignore next */
      cov_11omm1l759().f[3]++;
      cov_11omm1l759().s[52]++;
      return console.timeEnd("fetchTotalRetailValueData");
    }));
    /* istanbul ignore next */
    cov_11omm1l759().s[53]++;
    console.time("fetchShopsData");
    const p3 =
    /* istanbul ignore next */
    (cov_11omm1l759().s[54]++, (0, _route2.fetchShopsData)(shopId, periodDays).finally(() => {
      /* istanbul ignore next */
      cov_11omm1l759().f[4]++;
      cov_11omm1l759().s[55]++;
      return console.timeEnd("fetchShopsData");
    }));
    /* istanbul ignore next */
    cov_11omm1l759().s[56]++;
    console.time("fetchInventoryDistributionData");
    const p4 =
    /* istanbul ignore next */
    (cov_11omm1l759().s[57]++, (0, _route3.fetchInventoryDistributionData)(shopId, periodDays).finally(() => {
      /* istanbul ignore next */
      cov_11omm1l759().f[5]++;
      cov_11omm1l759().s[58]++;
      return console.timeEnd("fetchInventoryDistributionData");
    }));
    /* istanbul ignore next */
    cov_11omm1l759().s[59]++;
    console.time("fetchSalesData");
    const p5 =
    /* istanbul ignore next */
    (cov_11omm1l759().s[60]++, (0, _route4.fetchSalesData)(shopId, periodDays, undefined, undefined, filterUserId).finally(() => {
      /* istanbul ignore next */
      cov_11omm1l759().f[6]++;
      cov_11omm1l759().s[61]++;
      return console.timeEnd("fetchSalesData");
    }));
    /* istanbul ignore next */
    cov_11omm1l759().s[62]++;
    console.time("fetchTransfersData");
    const p6 =
    /* istanbul ignore next */
    (cov_11omm1l759().s[63]++, (0, _route5.fetchTransfersData)(shopId, periodDays).finally(() => {
      /* istanbul ignore next */
      cov_11omm1l759().f[7]++;
      cov_11omm1l759().s[64]++;
      return console.timeEnd("fetchTransfersData");
    }));
    /* istanbul ignore next */
    cov_11omm1l759().s[65]++;
    console.time("Promise.all dashboard data");
    const [summaryResult, totalRetailValueResult, shopsResult, inventoryResult, salesResult, transfersResult] =
    /* istanbul ignore next */
    (cov_11omm1l759().s[66]++, await Promise.all([(0, _route.fetchSummaryData)(context.shopId, periodDays, startDate, endDate, filterUserId), (0, _route1.fetchTotalRetailValueData)(context.shopId, periodDays, startDate, endDate), (0, _route2.fetchShopsData)(context.shopId, periodDays, startDate, endDate), (0, _route3.fetchInventoryDistributionData)(context.shopId, periodDays, startDate, endDate), (0, _route4.fetchSalesData)(context.shopId, periodDays, startDate, endDate, filterUserId), (0, _route5.fetchTransfersData)(context.shopId, periodDays, startDate, endDate)]));
    /* istanbul ignore next */
    cov_11omm1l759().s[67]++;
    console.timeEnd("Promise.all dashboard data");
    // The summaryData expects totalRetailValue to be part of its structure.
    // Let's merge it here.
    /* istanbul ignore next */
    cov_11omm1l759().s[68]++;
    if (
    /* istanbul ignore next */
    (cov_11omm1l759().b[12][0]++, summaryResult.success) &&
    /* istanbul ignore next */
    (cov_11omm1l759().b[12][1]++, summaryResult.data) &&
    /* istanbul ignore next */
    (cov_11omm1l759().b[12][2]++, totalRetailValueResult.success)) {
      /* istanbul ignore next */
      cov_11omm1l759().b[11][0]++;
      cov_11omm1l759().s[69]++;
      summaryResult.data = summaryResult.data.map(item => {
        /* istanbul ignore next */
        cov_11omm1l759().f[8]++;
        cov_11omm1l759().s[70]++;
        if (item.title === "Total Retail Value") {
          /* istanbul ignore next */
          cov_11omm1l759().b[13][0]++;
          cov_11omm1l759().s[71]++;
          return {
            ...item,
            value: totalRetailValueResult.formattedValue,
            trend: totalRetailValueResult.trend,
            trendUp: totalRetailValueResult.trendUp
          };
        } else
        /* istanbul ignore next */
        {
          cov_11omm1l759().b[13][1]++;
        }
        cov_11omm1l759().s[72]++;
        return item;
      });
    } else
    /* istanbul ignore next */
    {
      cov_11omm1l759().b[11][1]++;
    }
    const responseData =
    /* istanbul ignore next */
    (cov_11omm1l759().s[73]++, {
      success: true,
      summaryData: summaryResult.success ?
      /* istanbul ignore next */
      (cov_11omm1l759().b[14][0]++, summaryResult.data) :
      /* istanbul ignore next */
      (cov_11omm1l759().b[14][1]++, null),
      // totalRetailValue: totalRetailValueResult.success ? totalRetailValueResult : null, // No longer needed separately
      shopPerformance: shopsResult.success ?
      /* istanbul ignore next */
      (cov_11omm1l759().b[15][0]++, shopsResult.data) :
      /* istanbul ignore next */
      (cov_11omm1l759().b[15][1]++, null),
      inventoryDistribution: inventoryResult.success ?
      /* istanbul ignore next */
      (cov_11omm1l759().b[16][0]++, inventoryResult.data) :
      /* istanbul ignore next */
      (cov_11omm1l759().b[16][1]++, null),
      monthlySales: salesResult.success ?
      /* istanbul ignore next */
      (cov_11omm1l759().b[17][0]++, salesResult.data) :
      /* istanbul ignore next */
      (cov_11omm1l759().b[17][1]++, null),
      recentTransfers: transfersResult.success ?
      /* istanbul ignore next */
      (cov_11omm1l759().b[18][0]++, transfersResult.data) :
      /* istanbul ignore next */
      (cov_11omm1l759().b[18][1]++, null),
      meta: {
        shopFiltered: context.isFiltered,
        shopId: context.shopId,
        period: periodDays,
        fromCache: false
      },
      // You might want to include individual success statuses or error messages if needed
      errors: [!summaryResult.success ?
      /* istanbul ignore next */
      (cov_11omm1l759().b[19][0]++, "Failed to fetch summary data") :
      /* istanbul ignore next */
      (cov_11omm1l759().b[19][1]++, null), !totalRetailValueResult.success ?
      /* istanbul ignore next */
      (cov_11omm1l759().b[20][0]++, "Failed to fetch total retail value") :
      /* istanbul ignore next */
      (cov_11omm1l759().b[20][1]++, null), !shopsResult.success ?
      /* istanbul ignore next */
      (cov_11omm1l759().b[21][0]++, "Failed to fetch shops data") :
      /* istanbul ignore next */
      (cov_11omm1l759().b[21][1]++, null), !inventoryResult.success ?
      /* istanbul ignore next */
      (cov_11omm1l759().b[22][0]++, "Failed to fetch inventory data") :
      /* istanbul ignore next */
      (cov_11omm1l759().b[22][1]++, null), !salesResult.success ?
      /* istanbul ignore next */
      (cov_11omm1l759().b[23][0]++, "Failed to fetch sales data") :
      /* istanbul ignore next */
      (cov_11omm1l759().b[23][1]++, null), !transfersResult.success ?
      /* istanbul ignore next */
      (cov_11omm1l759().b[24][0]++, "Failed to fetch transfers data") :
      /* istanbul ignore next */
      (cov_11omm1l759().b[24][1]++, null)].filter(e => {
        /* istanbul ignore next */
        cov_11omm1l759().f[9]++;
        cov_11omm1l759().s[74]++;
        return e !== null;
      })
    });
    // Cache the response for 2 minutes with period-specific key
    /* istanbul ignore next */
    cov_11omm1l759().s[75]++;
    console.time("cache set");
    /* istanbul ignore next */
    cov_11omm1l759().s[76]++;
    await _cache.cacheService.set(cacheKey, responseData, 120);
    /* istanbul ignore next */
    cov_11omm1l759().s[77]++;
    console.timeEnd("cache set");
    /* istanbul ignore next */
    cov_11omm1l759().s[78]++;
    console.log("\uD83D\uDCBE Dashboard data cached for 2 minutes with date range:", dateRangeKey);
    /* istanbul ignore next */
    cov_11omm1l759().s[79]++;
    return _server.NextResponse.json(responseData);
  } catch (error) {
    /* istanbul ignore next */
    cov_11omm1l759().s[80]++;
    console.error("Error fetching all dashboard data:", error);
    /* istanbul ignore next */
    cov_11omm1l759().s[81]++;
    return _server.NextResponse.json({
      success: false,
      message: "Failed to load all dashboard data",
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_11omm1l759().b[25][0]++, error.message) :
      /* istanbul ignore next */
      (cov_11omm1l759().b[25][1]++, String(error)),
      meta: {
        shopFiltered: context.isFiltered,
        shopId: context.shopId
      }
    }, {
      status: 500
    });
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,