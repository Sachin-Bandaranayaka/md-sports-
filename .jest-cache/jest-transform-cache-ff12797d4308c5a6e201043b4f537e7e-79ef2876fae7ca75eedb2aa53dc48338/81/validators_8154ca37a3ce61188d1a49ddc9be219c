456e257d8dcc524ebb5718fa5dc9b811
"use strict";

/* istanbul ignore next */
function cov_1lxt91iexx() {
  var path = "/Users/sachin/Documents/md-sports-/src/utils/validators.ts";
  var hash = "70bbaf1ffacb000f2304a89690e2ecceb9cceffb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/utils/validators.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 54,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 30
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 30
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 24
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 31
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 29
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 27
        }
      },
      "10": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 32
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 29
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 29
        }
      },
      "13": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 30
        }
      },
      "14": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 28
        }
      },
      "15": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 26
        }
      },
      "16": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 30
        }
      },
      "17": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 29
        }
      },
      "18": {
        start: {
          line: 55,
          column: 13
        },
        end: {
          line: 55,
          column: 27
        }
      },
      "19": {
        start: {
          line: 56,
          column: 20
        },
        end: {
          line: 59,
          column: 2
        }
      },
      "20": {
        start: {
          line: 60,
          column: 23
        },
        end: {
          line: 73,
          column: 2
        }
      },
      "21": {
        start: {
          line: 68,
          column: 18
        },
        end: {
          line: 68,
          column: 56
        }
      },
      "22": {
        start: {
          line: 74,
          column: 22
        },
        end: {
          line: 82,
          column: 2
        }
      },
      "23": {
        start: {
          line: 83,
          column: 23
        },
        end: {
          line: 87,
          column: 2
        }
      },
      "24": {
        start: {
          line: 88,
          column: 24
        },
        end: {
          line: 93,
          column: 2
        }
      },
      "25": {
        start: {
          line: 94,
          column: 19
        },
        end: {
          line: 118,
          column: 2
        }
      },
      "26": {
        start: {
          line: 119,
          column: 23
        },
        end: {
          line: 134,
          column: 2
        }
      },
      "27": {
        start: {
          line: 135,
          column: 23
        },
        end: {
          line: 147,
          column: 2
        }
      },
      "28": {
        start: {
          line: 148,
          column: 22
        },
        end: {
          line: 162,
          column: 2
        }
      },
      "29": {
        start: {
          line: 163,
          column: 22
        },
        end: {
          line: 175,
          column: 2
        }
      },
      "30": {
        start: {
          line: 176,
          column: 22
        },
        end: {
          line: 192,
          column: 1
        }
      },
      "31": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 191,
          column: 5
        }
      },
      "32": {
        start: {
          line: 178,
          column: 26
        },
        end: {
          line: 178,
          column: 44
        }
      },
      "33": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 182,
          column: 10
        }
      },
      "34": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "35": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 188,
          column: 14
        }
      },
      "36": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 20
        }
      },
      "37": {
        start: {
          line: 193,
          column: 25
        },
        end: {
          line: 201,
          column: 2
        }
      },
      "38": {
        start: {
          line: 202,
          column: 21
        },
        end: {
          line: 205,
          column: 26
        }
      },
      "39": {
        start: {
          line: 206,
          column: 17
        },
        end: {
          line: 208,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 12,
            column: 21
          }
        },
        loc: {
          start: {
            line: 12,
            column: 31
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 15,
            column: 21
          }
        },
        loc: {
          start: {
            line: 15,
            column: 31
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 14
          },
          end: {
            line: 18,
            column: 15
          }
        },
        loc: {
          start: {
            line: 18,
            column: 25
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 21
          },
          end: {
            line: 21,
            column: 22
          }
        },
        loc: {
          start: {
            line: 21,
            column: 32
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 19
          },
          end: {
            line: 24,
            column: 20
          }
        },
        loc: {
          start: {
            line: 24,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 17
          },
          end: {
            line: 27,
            column: 18
          }
        },
        loc: {
          start: {
            line: 27,
            column: 28
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 30,
            column: 22
          },
          end: {
            line: 30,
            column: 23
          }
        },
        loc: {
          start: {
            line: 30,
            column: 33
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 33,
            column: 19
          },
          end: {
            line: 33,
            column: 20
          }
        },
        loc: {
          start: {
            line: 33,
            column: 30
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 36,
            column: 19
          },
          end: {
            line: 36,
            column: 20
          }
        },
        loc: {
          start: {
            line: 36,
            column: 30
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 39,
            column: 20
          },
          end: {
            line: 39,
            column: 21
          }
        },
        loc: {
          start: {
            line: 39,
            column: 31
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 42,
            column: 18
          },
          end: {
            line: 42,
            column: 19
          }
        },
        loc: {
          start: {
            line: 42,
            column: 29
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 45,
            column: 17
          }
        },
        loc: {
          start: {
            line: 45,
            column: 27
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 48,
            column: 20
          },
          end: {
            line: 48,
            column: 21
          }
        },
        loc: {
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 48
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 51,
            column: 19
          },
          end: {
            line: 51,
            column: 20
          }
        },
        loc: {
          start: {
            line: 51,
            column: 30
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 51
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 68,
            column: 10
          },
          end: {
            line: 68,
            column: 11
          }
        },
        loc: {
          start: {
            line: 68,
            column: 18
          },
          end: {
            line: 68,
            column: 56
          }
        },
        line: 68
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 176,
            column: 22
          },
          end: {
            line: 176,
            column: 23
          }
        },
        loc: {
          start: {
            line: 176,
            column: 38
          },
          end: {
            line: 192,
            column: 1
          }
        },
        line: 176
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/utils/validators.ts"],
      sourcesContent: ["import { z } from 'zod';\n\n// User validation schemas\nexport const loginSchema = z.object({\n    email: z.string().email('Invalid email address'),\n    password: z.string().min(6, 'Password must be at least 6 characters'),\n});\n\nexport const registerSchema = z.object({\n    name: z.string().min(2, 'Name must be at least 2 characters'),\n    email: z.string().email('Invalid email address'),\n    password: z.string().min(8, 'Password must be at least 8 characters'),\n    confirmPassword: z.string(),\n    roleId: z.number().int().positive(),\n    phone: z.string().optional(),\n    shopId: z.number().int().positive().optional().nullable(),\n}).refine(data => data.password === data.confirmPassword, {\n    message: \"Passwords don't match\",\n    path: [\"confirmPassword\"],\n});\n\n// Product validation schema\nexport const productSchema = z.object({\n    name: z.string().min(2, 'Product name is required'),\n    description: z.string().optional(),\n    price: z.number().positive('Price must be positive'),\n    sku: z.string().optional().nullable(),\n    barcode: z.string().optional().nullable(),\n    categoryId: z.number().int().positive().optional().nullable(),\n    shopId: z.number().int().positive().optional().nullable(),\n});\n\n// Category validation schema\nexport const categorySchema = z.object({\n    name: z.string().min(2, 'Category name is required'),\n    description: z.string().optional(),\n    parentId: z.number().int().positive().optional().nullable(),\n});\n\n// Inventory validation schema\nexport const inventorySchema = z.object({\n    productId: z.number().int().positive('Product ID is required'),\n    shopId: z.number().int().positive('Shop ID is required'),\n    quantity: z.number().int('Quantity must be an integer'),\n    reorderLevel: z.number().int().optional(),\n});\n\n// Shop validation schema\nexport const shopSchema = z.object({\n    name: z.string().min(2, 'Shop name is required'),\n    location: z.string().optional(),\n    contact_person: z.string().optional(),\n    phone: z.string().optional(),\n    email: z.string().email('Invalid email address').optional(),\n    is_active: z.boolean().default(true),\n    opening_time: z.string().optional(),\n    closing_time: z.string().optional(),\n    manager_id: z.number().int().positive().optional().nullable(),\n    opening_date: z.string().optional(),\n    status: z.enum(['open', 'closed', 'renovating', 'relocating']).default('open'),\n    address_line1: z.string().optional(),\n    address_line2: z.string().optional(),\n    city: z.string().optional(),\n    state: z.string().optional(),\n    postal_code: z.string().optional(),\n    country: z.string().default('Malaysia'),\n    tax_rate: z.number().min(0).optional(),\n});\n\n// Customer validation schema\nexport const customerSchema = z.object({\n    name: z.string().min(2, 'Customer name is required'),\n    email: z.string().email('Invalid email address').optional(),\n    phone: z.string().optional(),\n    address: z.string().optional(),\n    city: z.string().optional(),\n    postalCode: z.string().optional(),\n    contactPerson: z.string().optional(),\n    contactPersonPhone: z.string().optional(),\n    customerType: z.string().optional(),\n    paymentType: z.string().optional(),\n    creditLimit: z.number().positive().optional(),\n    creditPeriod: z.number().int().positive().optional(),\n    taxId: z.string().optional(),\n    notes: z.string().optional(),\n});\n\n// Supplier validation schema\nexport const supplierSchema = z.object({\n    name: z.string().min(2, 'Supplier name is required'),\n    contactPerson: z.string().optional(),\n    email: z.string().email('Invalid email address').optional(),\n    phone: z.string().optional(),\n    address: z.string().optional(),\n    city: z.string().optional(),\n    notes: z.string().optional(),\n    status: z.enum(['active', 'inactive']).default('active'),\n});\n\n// Invoice validation schema\nexport const invoiceSchema = z.object({\n    invoiceNumber: z.string(),\n    customerId: z.number().int().positive(),\n    items: z.array(z.object({\n        productId: z.number().int().positive(),\n        quantity: z.number().int().positive(),\n        price: z.number().positive(),\n    })).min(1, 'At least one item is required'),\n    status: z.enum(['draft', 'pending', 'paid', 'cancelled']),\n});\n\n// Payment validation schema\nexport const paymentSchema = z.object({\n    invoiceId: z.number().int().positive(),\n    customerId: z.number().int().positive(),\n    amount: z.number().positive('Amount must be positive'),\n    paymentMethod: z.enum(['cash', 'credit_card', 'bank_transfer', 'cheque', 'online']),\n    referenceNumber: z.string().optional(),\n});\n\n// Helper validation functions\nexport const validateInput = <T>(schema: z.ZodType<T>, data: unknown): {\n    success: boolean;\n    data?: T;\n    errors?: z.ZodError['errors']\n} => {\n    try {\n        const validData = schema.parse(data);\n        return { success: true, data: validData };\n    } catch (error) {\n        if (error instanceof z.ZodError) {\n            return { success: false, errors: error.errors };\n        }\n        throw error;\n    }\n};\n\n// Pagination parameters validation\nexport const paginationSchema = z.object({\n    page: z.coerce.number().int().positive().default(1),\n    limit: z.coerce.number().int().positive().max(100).default(20),\n    sortBy: z.string().optional(),\n    sortOrder: z.enum(['asc', 'desc']).optional(),\n});\n\n// Search parameters validation\nexport const searchSchema = z.object({\n    query: z.string().optional(),\n    fields: z.array(z.string()).optional(),\n}).merge(paginationSchema);\n\n// ID parameter validation\nexport const idSchema = z.object({\n    id: z.coerce.number().int().positive('Invalid ID'),\n}); "],
      names: ["categorySchema", "customerSchema", "idSchema", "inventorySchema", "invoiceSchema", "loginSchema", "paginationSchema", "paymentSchema", "productSchema", "registerSchema", "searchSchema", "shopSchema", "supplierSchema", "validateInput", "z", "object", "email", "string", "password", "min", "name", "confirmPassword", "roleId", "number", "int", "positive", "phone", "optional", "shopId", "nullable", "refine", "data", "message", "path", "description", "price", "sku", "barcode", "categoryId", "parentId", "productId", "quantity", "reorderLevel", "location", "contact_person", "is_active", "boolean", "default", "opening_time", "closing_time", "manager_id", "opening_date", "status", "enum", "address_line1", "address_line2", "city", "state", "postal_code", "country", "tax_rate", "address", "postalCode", "contactPerson", "contactPersonPhone", "customerType", "paymentType", "creditLimit", "creditPeriod", "taxId", "notes", "invoiceNumber", "customerId", "items", "array", "invoiceId", "amount", "paymentMethod", "referenceNumber", "schema", "validData", "parse", "success", "error", "ZodError", "errors", "page", "coerce", "limit", "max", "sortBy", "sortOrder", "query", "fields", "merge", "id"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "70bbaf1ffacb000f2304a89690e2ecceb9cceffb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1lxt91iexx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1lxt91iexx();
cov_1lxt91iexx().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1lxt91iexx().f[0]++;
  cov_1lxt91iexx().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1lxt91iexx().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1lxt91iexx().s[3]++;
_export(exports, {
  categorySchema: function () {
    /* istanbul ignore next */
    cov_1lxt91iexx().f[1]++;
    cov_1lxt91iexx().s[4]++;
    return categorySchema;
  },
  customerSchema: function () {
    /* istanbul ignore next */
    cov_1lxt91iexx().f[2]++;
    cov_1lxt91iexx().s[5]++;
    return customerSchema;
  },
  idSchema: function () {
    /* istanbul ignore next */
    cov_1lxt91iexx().f[3]++;
    cov_1lxt91iexx().s[6]++;
    return idSchema;
  },
  inventorySchema: function () {
    /* istanbul ignore next */
    cov_1lxt91iexx().f[4]++;
    cov_1lxt91iexx().s[7]++;
    return inventorySchema;
  },
  invoiceSchema: function () {
    /* istanbul ignore next */
    cov_1lxt91iexx().f[5]++;
    cov_1lxt91iexx().s[8]++;
    return invoiceSchema;
  },
  loginSchema: function () {
    /* istanbul ignore next */
    cov_1lxt91iexx().f[6]++;
    cov_1lxt91iexx().s[9]++;
    return loginSchema;
  },
  paginationSchema: function () {
    /* istanbul ignore next */
    cov_1lxt91iexx().f[7]++;
    cov_1lxt91iexx().s[10]++;
    return paginationSchema;
  },
  paymentSchema: function () {
    /* istanbul ignore next */
    cov_1lxt91iexx().f[8]++;
    cov_1lxt91iexx().s[11]++;
    return paymentSchema;
  },
  productSchema: function () {
    /* istanbul ignore next */
    cov_1lxt91iexx().f[9]++;
    cov_1lxt91iexx().s[12]++;
    return productSchema;
  },
  registerSchema: function () {
    /* istanbul ignore next */
    cov_1lxt91iexx().f[10]++;
    cov_1lxt91iexx().s[13]++;
    return registerSchema;
  },
  searchSchema: function () {
    /* istanbul ignore next */
    cov_1lxt91iexx().f[11]++;
    cov_1lxt91iexx().s[14]++;
    return searchSchema;
  },
  shopSchema: function () {
    /* istanbul ignore next */
    cov_1lxt91iexx().f[12]++;
    cov_1lxt91iexx().s[15]++;
    return shopSchema;
  },
  supplierSchema: function () {
    /* istanbul ignore next */
    cov_1lxt91iexx().f[13]++;
    cov_1lxt91iexx().s[16]++;
    return supplierSchema;
  },
  validateInput: function () {
    /* istanbul ignore next */
    cov_1lxt91iexx().f[14]++;
    cov_1lxt91iexx().s[17]++;
    return validateInput;
  }
});
const _zod =
/* istanbul ignore next */
(cov_1lxt91iexx().s[18]++, require("zod"));
const loginSchema =
/* istanbul ignore next */
(cov_1lxt91iexx().s[19]++, _zod.z.object({
  email: _zod.z.string().email("Invalid email address"),
  password: _zod.z.string().min(6, "Password must be at least 6 characters")
}));
const registerSchema =
/* istanbul ignore next */
(cov_1lxt91iexx().s[20]++, _zod.z.object({
  name: _zod.z.string().min(2, "Name must be at least 2 characters"),
  email: _zod.z.string().email("Invalid email address"),
  password: _zod.z.string().min(8, "Password must be at least 8 characters"),
  confirmPassword: _zod.z.string(),
  roleId: _zod.z.number().int().positive(),
  phone: _zod.z.string().optional(),
  shopId: _zod.z.number().int().positive().optional().nullable()
}).refine(data => {
  /* istanbul ignore next */
  cov_1lxt91iexx().f[15]++;
  cov_1lxt91iexx().s[21]++;
  return data.password === data.confirmPassword;
}, {
  message: "Passwords don't match",
  path: ["confirmPassword"]
}));
const productSchema =
/* istanbul ignore next */
(cov_1lxt91iexx().s[22]++, _zod.z.object({
  name: _zod.z.string().min(2, "Product name is required"),
  description: _zod.z.string().optional(),
  price: _zod.z.number().positive("Price must be positive"),
  sku: _zod.z.string().optional().nullable(),
  barcode: _zod.z.string().optional().nullable(),
  categoryId: _zod.z.number().int().positive().optional().nullable(),
  shopId: _zod.z.number().int().positive().optional().nullable()
}));
const categorySchema =
/* istanbul ignore next */
(cov_1lxt91iexx().s[23]++, _zod.z.object({
  name: _zod.z.string().min(2, "Category name is required"),
  description: _zod.z.string().optional(),
  parentId: _zod.z.number().int().positive().optional().nullable()
}));
const inventorySchema =
/* istanbul ignore next */
(cov_1lxt91iexx().s[24]++, _zod.z.object({
  productId: _zod.z.number().int().positive("Product ID is required"),
  shopId: _zod.z.number().int().positive("Shop ID is required"),
  quantity: _zod.z.number().int("Quantity must be an integer"),
  reorderLevel: _zod.z.number().int().optional()
}));
const shopSchema =
/* istanbul ignore next */
(cov_1lxt91iexx().s[25]++, _zod.z.object({
  name: _zod.z.string().min(2, "Shop name is required"),
  location: _zod.z.string().optional(),
  contact_person: _zod.z.string().optional(),
  phone: _zod.z.string().optional(),
  email: _zod.z.string().email("Invalid email address").optional(),
  is_active: _zod.z.boolean().default(true),
  opening_time: _zod.z.string().optional(),
  closing_time: _zod.z.string().optional(),
  manager_id: _zod.z.number().int().positive().optional().nullable(),
  opening_date: _zod.z.string().optional(),
  status: _zod.z.enum(["open", "closed", "renovating", "relocating"]).default("open"),
  address_line1: _zod.z.string().optional(),
  address_line2: _zod.z.string().optional(),
  city: _zod.z.string().optional(),
  state: _zod.z.string().optional(),
  postal_code: _zod.z.string().optional(),
  country: _zod.z.string().default("Malaysia"),
  tax_rate: _zod.z.number().min(0).optional()
}));
const customerSchema =
/* istanbul ignore next */
(cov_1lxt91iexx().s[26]++, _zod.z.object({
  name: _zod.z.string().min(2, "Customer name is required"),
  email: _zod.z.string().email("Invalid email address").optional(),
  phone: _zod.z.string().optional(),
  address: _zod.z.string().optional(),
  city: _zod.z.string().optional(),
  postalCode: _zod.z.string().optional(),
  contactPerson: _zod.z.string().optional(),
  contactPersonPhone: _zod.z.string().optional(),
  customerType: _zod.z.string().optional(),
  paymentType: _zod.z.string().optional(),
  creditLimit: _zod.z.number().positive().optional(),
  creditPeriod: _zod.z.number().int().positive().optional(),
  taxId: _zod.z.string().optional(),
  notes: _zod.z.string().optional()
}));
const supplierSchema =
/* istanbul ignore next */
(cov_1lxt91iexx().s[27]++, _zod.z.object({
  name: _zod.z.string().min(2, "Supplier name is required"),
  contactPerson: _zod.z.string().optional(),
  email: _zod.z.string().email("Invalid email address").optional(),
  phone: _zod.z.string().optional(),
  address: _zod.z.string().optional(),
  city: _zod.z.string().optional(),
  notes: _zod.z.string().optional(),
  status: _zod.z.enum(["active", "inactive"]).default("active")
}));
const invoiceSchema =
/* istanbul ignore next */
(cov_1lxt91iexx().s[28]++, _zod.z.object({
  invoiceNumber: _zod.z.string(),
  customerId: _zod.z.number().int().positive(),
  items: _zod.z.array(_zod.z.object({
    productId: _zod.z.number().int().positive(),
    quantity: _zod.z.number().int().positive(),
    price: _zod.z.number().positive()
  })).min(1, "At least one item is required"),
  status: _zod.z.enum(["draft", "pending", "paid", "cancelled"])
}));
const paymentSchema =
/* istanbul ignore next */
(cov_1lxt91iexx().s[29]++, _zod.z.object({
  invoiceId: _zod.z.number().int().positive(),
  customerId: _zod.z.number().int().positive(),
  amount: _zod.z.number().positive("Amount must be positive"),
  paymentMethod: _zod.z.enum(["cash", "credit_card", "bank_transfer", "cheque", "online"]),
  referenceNumber: _zod.z.string().optional()
}));
/* istanbul ignore next */
cov_1lxt91iexx().s[30]++;
const validateInput = (schema, data) => {
  /* istanbul ignore next */
  cov_1lxt91iexx().f[16]++;
  cov_1lxt91iexx().s[31]++;
  try {
    const validData =
    /* istanbul ignore next */
    (cov_1lxt91iexx().s[32]++, schema.parse(data));
    /* istanbul ignore next */
    cov_1lxt91iexx().s[33]++;
    return {
      success: true,
      data: validData
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1lxt91iexx().s[34]++;
    if (error instanceof _zod.z.ZodError) {
      /* istanbul ignore next */
      cov_1lxt91iexx().b[0][0]++;
      cov_1lxt91iexx().s[35]++;
      return {
        success: false,
        errors: error.errors
      };
    } else
    /* istanbul ignore next */
    {
      cov_1lxt91iexx().b[0][1]++;
    }
    cov_1lxt91iexx().s[36]++;
    throw error;
  }
};
const paginationSchema =
/* istanbul ignore next */
(cov_1lxt91iexx().s[37]++, _zod.z.object({
  page: _zod.z.coerce.number().int().positive().default(1),
  limit: _zod.z.coerce.number().int().positive().max(100).default(20),
  sortBy: _zod.z.string().optional(),
  sortOrder: _zod.z.enum(["asc", "desc"]).optional()
}));
const searchSchema =
/* istanbul ignore next */
(cov_1lxt91iexx().s[38]++, _zod.z.object({
  query: _zod.z.string().optional(),
  fields: _zod.z.array(_zod.z.string()).optional()
}).merge(paginationSchema));
const idSchema =
/* istanbul ignore next */
(cov_1lxt91iexx().s[39]++, _zod.z.object({
  id: _zod.z.coerce.number().int().positive("Invalid ID")
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,