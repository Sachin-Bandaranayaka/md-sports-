dc11a01b43ac49a33631fa654b8fcb67
"use strict";

/* istanbul ignore next */
function cov_1bzxs2stgn() {
  var path = "/Users/sachin/Documents/md-sports-/src/lib/utils/middleware.ts";
  var hash = "06561a35e85bbc9d39e8f00ec7c19e478b9c093d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/lib/utils/middleware.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 25
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 25
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 27
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 33
        }
      },
      "8": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 38
        }
      },
      "9": {
        start: {
          line: 26,
          column: 21
        },
        end: {
          line: 26,
          column: 58
        }
      },
      "10": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 66,
          column: 1
        }
      },
      "11": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 65,
          column: 6
        }
      },
      "12": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "13": {
        start: {
          line: 30,
          column: 26
        },
        end: {
          line: 30,
          column: 82
        }
      },
      "14": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 38,
          column: 13
        }
      },
      "15": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 37,
          column: 19
        }
      },
      "16": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 43,
          column: 13
        }
      },
      "17": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 79
        }
      },
      "18": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 28
        }
      },
      "19": {
        start: {
          line: 45,
          column: 25
        },
        end: {
          line: 45,
          column: 72
        }
      },
      "20": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 53,
          column: 13
        }
      },
      "21": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 52,
          column: 19
        }
      },
      "22": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 24
        }
      },
      "23": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 48
        }
      },
      "24": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 63,
          column: 15
        }
      },
      "25": {
        start: {
          line: 67,
          column: 26
        },
        end: {
          line: 142,
          column: 1
        }
      },
      "26": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 141,
          column: 6
        }
      },
      "27": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 140,
          column: 9
        }
      },
      "28": {
        start: {
          line: 70,
          column: 26
        },
        end: {
          line: 70,
          column: 82
        }
      },
      "29": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 103
        }
      },
      "30": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 79,
          column: 13
        }
      },
      "31": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 78,
          column: 19
        }
      },
      "32": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 107,
          column: 13
        }
      },
      "33": {
        start: {
          line: 82,
          column: 46
        },
        end: {
          line: 94,
          column: 17
        }
      },
      "34": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 106,
          column: 17
        }
      },
      "35": {
        start: {
          line: 96,
          column: 20
        },
        end: {
          line: 96,
          column: 89
        }
      },
      "36": {
        start: {
          line: 97,
          column: 20
        },
        end: {
          line: 97,
          column: 32
        }
      },
      "37": {
        start: {
          line: 99,
          column: 20
        },
        end: {
          line: 99,
          column: 94
        }
      },
      "38": {
        start: {
          line: 100,
          column: 20
        },
        end: {
          line: 105,
          column: 23
        }
      },
      "39": {
        start: {
          line: 109,
          column: 33
        },
        end: {
          line: 109,
          column: 75
        }
      },
      "40": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 118,
          column: 13
        }
      },
      "41": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 79
        }
      },
      "42": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 117,
          column: 19
        }
      },
      "43": {
        start: {
          line: 120,
          column: 38
        },
        end: {
          line: 120,
          column: 101
        }
      },
      "44": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 129,
          column: 13
        }
      },
      "45": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 66
        }
      },
      "46": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 128,
          column: 19
        }
      },
      "47": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 61
        }
      },
      "48": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 24
        }
      },
      "49": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 78
        }
      },
      "50": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 139,
          column: 15
        }
      },
      "51": {
        start: {
          line: 144,
          column: 23
        },
        end: {
          line: 144,
          column: 55
        }
      },
      "52": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 147,
          column: 5
        }
      },
      "53": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 20
        }
      },
      "54": {
        start: {
          line: 148,
          column: 18
        },
        end: {
          line: 148,
          column: 42
        }
      },
      "55": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 152,
          column: 5
        }
      },
      "56": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 19
        }
      },
      "57": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 160,
          column: 5
        }
      },
      "58": {
        start: {
          line: 155,
          column: 21
        },
        end: {
          line: 155,
          column: 68
        }
      },
      "59": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 37
        }
      },
      "60": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 58
        }
      },
      "61": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 20
        }
      },
      "62": {
        start: {
          line: 163,
          column: 23
        },
        end: {
          line: 163,
          column: 55
        }
      },
      "63": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 166,
          column: 5
        }
      },
      "64": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 20
        }
      },
      "65": {
        start: {
          line: 167,
          column: 18
        },
        end: {
          line: 167,
          column: 42
        }
      },
      "66": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 171,
          column: 5
        }
      },
      "67": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 20
        }
      },
      "68": {
        start: {
          line: 172,
          column: 4
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "69": {
        start: {
          line: 174,
          column: 21
        },
        end: {
          line: 174,
          column: 68
        }
      },
      "70": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 41
        }
      },
      "71": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 58
        }
      },
      "72": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 15
          },
          end: {
            line: 12,
            column: 16
          }
        },
        loc: {
          start: {
            line: 12,
            column: 26
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 15
          },
          end: {
            line: 15,
            column: 16
          }
        },
        loc: {
          start: {
            line: 15,
            column: 26
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 17
          },
          end: {
            line: 18,
            column: 18
          }
        },
        loc: {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 23
          },
          end: {
            line: 21,
            column: 24
          }
        },
        loc: {
          start: {
            line: 21,
            column: 34
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 20
          },
          end: {
            line: 27,
            column: 21
          }
        },
        loc: {
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 28,
            column: 12
          }
        },
        loc: {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 67,
            column: 26
          },
          end: {
            line: 67,
            column: 27
          }
        },
        loc: {
          start: {
            line: 67,
            column: 40
          },
          end: {
            line: 142,
            column: 1
          }
        },
        line: 67
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 68,
            column: 11
          },
          end: {
            line: 68,
            column: 12
          }
        },
        loc: {
          start: {
            line: 68,
            column: 24
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 68
      },
      "9": {
        name: "getUserId",
        decl: {
          start: {
            line: 143,
            column: 15
          },
          end: {
            line: 143,
            column: 24
          }
        },
        loc: {
          start: {
            line: 143,
            column: 30
          },
          end: {
            line: 161,
            column: 1
          }
        },
        line: 143
      },
      "10": {
        name: "getShopId",
        decl: {
          start: {
            line: 162,
            column: 15
          },
          end: {
            line: 162,
            column: 24
          }
        },
        loc: {
          start: {
            line: 162,
            column: 30
          },
          end: {
            line: 180,
            column: 1
          }
        },
        line: 162
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 38,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 38,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 43,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 43,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "3": {
        loc: {
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "4": {
        loc: {
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 107,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 107,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "5": {
        loc: {
          start: {
            line: 95,
            column: 16
          },
          end: {
            line: 106,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 16
          },
          end: {
            line: 106,
            column: 17
          }
        }, {
          start: {
            line: 98,
            column: 23
          },
          end: {
            line: 106,
            column: 17
          }
        }],
        line: 95
      },
      "6": {
        loc: {
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 118,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 118,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "7": {
        loc: {
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 129,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 129,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "8": {
        loc: {
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "9": {
        loc: {
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 145,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 145,
            column: 19
          }
        }, {
          start: {
            line: 145,
            column: 23
          },
          end: {
            line: 145,
            column: 56
          }
        }],
        line: 145
      },
      "10": {
        loc: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "11": {
        loc: {
          start: {
            line: 156,
            column: 15
          },
          end: {
            line: 156,
            column: 36
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 156,
            column: 22
          },
          end: {
            line: 156,
            column: 29
          }
        }, {
          start: {
            line: 156,
            column: 32
          },
          end: {
            line: 156,
            column: 36
          }
        }],
        line: 156
      },
      "12": {
        loc: {
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "13": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 164,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 164,
            column: 19
          }
        }, {
          start: {
            line: 164,
            column: 23
          },
          end: {
            line: 164,
            column: 56
          }
        }],
        line: 164
      },
      "14": {
        loc: {
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "15": {
        loc: {
          start: {
            line: 175,
            column: 15
          },
          end: {
            line: 175,
            column: 40
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 175,
            column: 22
          },
          end: {
            line: 175,
            column: 33
          }
        }, {
          start: {
            line: 175,
            column: 36
          },
          end: {
            line: 175,
            column: 40
          }
        }],
        line: 175
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/lib/utils/middleware.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { verifyToken, getUserFromToken, hasPermission } from '@/services/authService';\n\n/**\n * Middleware to require authentication\n */\nexport const requireAuth = () => {\n    return async (req: NextRequest) => {\n        try {\n            const token = req.headers.get('authorization')?.replace('Bearer ', '');\n\n            if (!token) {\n                return NextResponse.json(\n                    { success: false, message: 'Authentication required' },\n                    { status: 401 }\n                );\n            }\n\n            // Special case for development token\n            if (token === 'dev-token') {\n                console.log('Using development token - skipping verification');\n                return null;\n            }\n\n            // Use optimized cached authentication\n            const user = await getUserFromToken(token);\n\n            if (!user) {\n                return NextResponse.json(\n                    { success: false, message: 'Invalid token or user not found' },\n                    { status: 401 }\n                );\n            }\n\n            // User is authenticated\n            return null;\n        } catch (error) {\n            console.error('Auth error:', error);\n            return NextResponse.json(\n                { success: false, message: 'Authentication failed' },\n                { status: 401 }\n            );\n        }\n    };\n};\n\n/**\n * Middleware to require specific permission\n */\nexport const requirePermission = (permission: string) => {\n    return async (req: NextRequest) => {\n        try {\n            const token = req.headers.get('authorization')?.replace('Bearer ', '');\n            console.log(`Checking permission: ${permission} for token: ${token?.substring(0, 10)}...`);\n\n            if (!token) {\n                return NextResponse.json(\n                    { success: false, message: 'Authentication required' },\n                    { status: 401 }\n                );\n            }\n\n            // Special case for development token - only grant basic permissions, not admin\n            if (token === 'dev-token') {\n                const allowedDevPermissions = [\n                    'shop:distribution:view',\n                    'read:products',\n                    'write:products', \n                    'read:invoices',\n                    'write:invoices',\n                    'user:manage',\n                    'shop:manage',\n                    'inventory:manage',\n                    'settings:manage',\n                    'sales:manage',\n                    'sales:create:shop'\n                ];\n                \n                if (allowedDevPermissions.includes(permission)) {\n                    console.log(`Development mode: granting permission '${permission}'`);\n                    return null;\n                } else {\n                    console.log(`Development mode: denying admin permission '${permission}'`);\n                    return NextResponse.json(\n                        { success: false, message: `Permission denied: ${permission}` },\n                        { status: 403 }\n                    );\n                }\n            }\n\n            // Verify the token to get the payload first\n            const tokenPayload = await verifyToken(token);\n            if (!tokenPayload) {\n                console.error('Invalid token - payload could not be verified');\n                return NextResponse.json(\n                    { success: false, message: 'Invalid token' },\n                    { status: 401 }\n                );\n            }\n\n            // Now pass the TokenPayload object to hasPermission\n            const userHasPermission = await hasPermission(tokenPayload, permission);\n\n            if (!userHasPermission) {\n                console.error(`Permission denied: ${permission}`);\n                return NextResponse.json(\n                    { success: false, message: `Permission denied: ${permission}` },\n                    { status: 403 }\n                );\n            }\n\n            console.log(`Permission granted: ${permission}`);\n            return null;\n        } catch (error) {\n            console.error(`Permission check error for ${permission}:`, error);\n            return NextResponse.json(\n                { success: false, message: 'Permission check failed' },\n                { status: 500 }\n            );\n        }\n    };\n};\n\n/**\n * Get user ID from token\n */\nexport async function getUserId(req: NextRequest): Promise<string | null> {\n    const authHeader = req.headers.get('authorization');\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n        return null;\n    }\n\n    const token = authHeader.split(' ')[1];\n\n    // Special case for development token\n    if (token === 'dev-token') {\n        return '1'; // Development user ID\n    }\n\n    try {\n        // Use optimized cached user lookup\n        const user = await getUserFromToken(token);\n        return user ? user.id : null;\n    } catch (error) {\n        console.error('Token verification error:', error);\n        return null;\n    }\n}\n\n/**\n * Get user's shop ID from token\n * Used for shop-specific operations\n */\nexport async function getShopId(req: NextRequest): Promise<number | null> {\n    const authHeader = req.headers.get('authorization');\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n        return null;\n    }\n\n    const token = authHeader.split(' ')[1];\n\n    // Special case for development token\n    if (token === 'dev-token') {\n        return null; // Development user might not have a shop\n    }\n\n    try {\n        // Use optimized cached user lookup\n        const user = await getUserFromToken(token);\n        return user ? user.shopId : null;\n    } catch (error) {\n        console.error('Token verification error:', error);\n        return null;\n    }\n}"],
      names: ["getShopId", "getUserId", "requireAuth", "requirePermission", "req", "token", "headers", "get", "replace", "NextResponse", "json", "success", "message", "status", "console", "log", "user", "getUserFromToken", "error", "permission", "substring", "allowedDevPermissions", "includes", "tokenPayload", "verifyToken", "userHasPermission", "hasPermission", "authHeader", "startsWith", "split", "id", "shopId"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "06561a35e85bbc9d39e8f00ec7c19e478b9c093d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1bzxs2stgn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1bzxs2stgn();
cov_1bzxs2stgn().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1bzxs2stgn().f[0]++;
  cov_1bzxs2stgn().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1bzxs2stgn().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1bzxs2stgn().s[3]++;
_export(exports, {
  getShopId: function () {
    /* istanbul ignore next */
    cov_1bzxs2stgn().f[1]++;
    cov_1bzxs2stgn().s[4]++;
    return getShopId;
  },
  getUserId: function () {
    /* istanbul ignore next */
    cov_1bzxs2stgn().f[2]++;
    cov_1bzxs2stgn().s[5]++;
    return getUserId;
  },
  requireAuth: function () {
    /* istanbul ignore next */
    cov_1bzxs2stgn().f[3]++;
    cov_1bzxs2stgn().s[6]++;
    return requireAuth;
  },
  requirePermission: function () {
    /* istanbul ignore next */
    cov_1bzxs2stgn().f[4]++;
    cov_1bzxs2stgn().s[7]++;
    return requirePermission;
  }
});
const _server =
/* istanbul ignore next */
(cov_1bzxs2stgn().s[8]++, require("next/server"));
const _authService =
/* istanbul ignore next */
(cov_1bzxs2stgn().s[9]++, require("../../services/authService"));
/* istanbul ignore next */
cov_1bzxs2stgn().s[10]++;
const requireAuth = () => {
  /* istanbul ignore next */
  cov_1bzxs2stgn().f[5]++;
  cov_1bzxs2stgn().s[11]++;
  return async req => {
    /* istanbul ignore next */
    cov_1bzxs2stgn().f[6]++;
    cov_1bzxs2stgn().s[12]++;
    try {
      const token =
      /* istanbul ignore next */
      (cov_1bzxs2stgn().s[13]++, req.headers.get("authorization")?.replace("Bearer ", ""));
      /* istanbul ignore next */
      cov_1bzxs2stgn().s[14]++;
      if (!token) {
        /* istanbul ignore next */
        cov_1bzxs2stgn().b[0][0]++;
        cov_1bzxs2stgn().s[15]++;
        return _server.NextResponse.json({
          success: false,
          message: "Authentication required"
        }, {
          status: 401
        });
      } else
      /* istanbul ignore next */
      {
        cov_1bzxs2stgn().b[0][1]++;
      }
      // Special case for development token
      cov_1bzxs2stgn().s[16]++;
      if (token === "dev-token") {
        /* istanbul ignore next */
        cov_1bzxs2stgn().b[1][0]++;
        cov_1bzxs2stgn().s[17]++;
        console.log("Using development token - skipping verification");
        /* istanbul ignore next */
        cov_1bzxs2stgn().s[18]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_1bzxs2stgn().b[1][1]++;
      }
      // Use optimized cached authentication
      const user =
      /* istanbul ignore next */
      (cov_1bzxs2stgn().s[19]++, await (0, _authService.getUserFromToken)(token));
      /* istanbul ignore next */
      cov_1bzxs2stgn().s[20]++;
      if (!user) {
        /* istanbul ignore next */
        cov_1bzxs2stgn().b[2][0]++;
        cov_1bzxs2stgn().s[21]++;
        return _server.NextResponse.json({
          success: false,
          message: "Invalid token or user not found"
        }, {
          status: 401
        });
      } else
      /* istanbul ignore next */
      {
        cov_1bzxs2stgn().b[2][1]++;
      }
      // User is authenticated
      cov_1bzxs2stgn().s[22]++;
      return null;
    } catch (error) {
      /* istanbul ignore next */
      cov_1bzxs2stgn().s[23]++;
      console.error("Auth error:", error);
      /* istanbul ignore next */
      cov_1bzxs2stgn().s[24]++;
      return _server.NextResponse.json({
        success: false,
        message: "Authentication failed"
      }, {
        status: 401
      });
    }
  };
};
/* istanbul ignore next */
cov_1bzxs2stgn().s[25]++;
const requirePermission = permission => {
  /* istanbul ignore next */
  cov_1bzxs2stgn().f[7]++;
  cov_1bzxs2stgn().s[26]++;
  return async req => {
    /* istanbul ignore next */
    cov_1bzxs2stgn().f[8]++;
    cov_1bzxs2stgn().s[27]++;
    try {
      const token =
      /* istanbul ignore next */
      (cov_1bzxs2stgn().s[28]++, req.headers.get("authorization")?.replace("Bearer ", ""));
      /* istanbul ignore next */
      cov_1bzxs2stgn().s[29]++;
      console.log(`Checking permission: ${permission} for token: ${token?.substring(0, 10)}...`);
      /* istanbul ignore next */
      cov_1bzxs2stgn().s[30]++;
      if (!token) {
        /* istanbul ignore next */
        cov_1bzxs2stgn().b[3][0]++;
        cov_1bzxs2stgn().s[31]++;
        return _server.NextResponse.json({
          success: false,
          message: "Authentication required"
        }, {
          status: 401
        });
      } else
      /* istanbul ignore next */
      {
        cov_1bzxs2stgn().b[3][1]++;
      }
      // Special case for development token - only grant basic permissions, not admin
      cov_1bzxs2stgn().s[32]++;
      if (token === "dev-token") {
        /* istanbul ignore next */
        cov_1bzxs2stgn().b[4][0]++;
        const allowedDevPermissions =
        /* istanbul ignore next */
        (cov_1bzxs2stgn().s[33]++, ["shop:distribution:view", "read:products", "write:products", "read:invoices", "write:invoices", "user:manage", "shop:manage", "inventory:manage", "settings:manage", "sales:manage", "sales:create:shop"]);
        /* istanbul ignore next */
        cov_1bzxs2stgn().s[34]++;
        if (allowedDevPermissions.includes(permission)) {
          /* istanbul ignore next */
          cov_1bzxs2stgn().b[5][0]++;
          cov_1bzxs2stgn().s[35]++;
          console.log(`Development mode: granting permission '${permission}'`);
          /* istanbul ignore next */
          cov_1bzxs2stgn().s[36]++;
          return null;
        } else {
          /* istanbul ignore next */
          cov_1bzxs2stgn().b[5][1]++;
          cov_1bzxs2stgn().s[37]++;
          console.log(`Development mode: denying admin permission '${permission}'`);
          /* istanbul ignore next */
          cov_1bzxs2stgn().s[38]++;
          return _server.NextResponse.json({
            success: false,
            message: `Permission denied: ${permission}`
          }, {
            status: 403
          });
        }
      } else
      /* istanbul ignore next */
      {
        cov_1bzxs2stgn().b[4][1]++;
      }
      // Verify the token to get the payload first
      const tokenPayload =
      /* istanbul ignore next */
      (cov_1bzxs2stgn().s[39]++, await (0, _authService.verifyToken)(token));
      /* istanbul ignore next */
      cov_1bzxs2stgn().s[40]++;
      if (!tokenPayload) {
        /* istanbul ignore next */
        cov_1bzxs2stgn().b[6][0]++;
        cov_1bzxs2stgn().s[41]++;
        console.error("Invalid token - payload could not be verified");
        /* istanbul ignore next */
        cov_1bzxs2stgn().s[42]++;
        return _server.NextResponse.json({
          success: false,
          message: "Invalid token"
        }, {
          status: 401
        });
      } else
      /* istanbul ignore next */
      {
        cov_1bzxs2stgn().b[6][1]++;
      }
      // Now pass the TokenPayload object to hasPermission
      const userHasPermission =
      /* istanbul ignore next */
      (cov_1bzxs2stgn().s[43]++, await (0, _authService.hasPermission)(tokenPayload, permission));
      /* istanbul ignore next */
      cov_1bzxs2stgn().s[44]++;
      if (!userHasPermission) {
        /* istanbul ignore next */
        cov_1bzxs2stgn().b[7][0]++;
        cov_1bzxs2stgn().s[45]++;
        console.error(`Permission denied: ${permission}`);
        /* istanbul ignore next */
        cov_1bzxs2stgn().s[46]++;
        return _server.NextResponse.json({
          success: false,
          message: `Permission denied: ${permission}`
        }, {
          status: 403
        });
      } else
      /* istanbul ignore next */
      {
        cov_1bzxs2stgn().b[7][1]++;
      }
      cov_1bzxs2stgn().s[47]++;
      console.log(`Permission granted: ${permission}`);
      /* istanbul ignore next */
      cov_1bzxs2stgn().s[48]++;
      return null;
    } catch (error) {
      /* istanbul ignore next */
      cov_1bzxs2stgn().s[49]++;
      console.error(`Permission check error for ${permission}:`, error);
      /* istanbul ignore next */
      cov_1bzxs2stgn().s[50]++;
      return _server.NextResponse.json({
        success: false,
        message: "Permission check failed"
      }, {
        status: 500
      });
    }
  };
};
async function getUserId(req) {
  /* istanbul ignore next */
  cov_1bzxs2stgn().f[9]++;
  const authHeader =
  /* istanbul ignore next */
  (cov_1bzxs2stgn().s[51]++, req.headers.get("authorization"));
  /* istanbul ignore next */
  cov_1bzxs2stgn().s[52]++;
  if (
  /* istanbul ignore next */
  (cov_1bzxs2stgn().b[9][0]++, !authHeader) ||
  /* istanbul ignore next */
  (cov_1bzxs2stgn().b[9][1]++, !authHeader.startsWith("Bearer "))) {
    /* istanbul ignore next */
    cov_1bzxs2stgn().b[8][0]++;
    cov_1bzxs2stgn().s[53]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1bzxs2stgn().b[8][1]++;
  }
  const token =
  /* istanbul ignore next */
  (cov_1bzxs2stgn().s[54]++, authHeader.split(" ")[1]);
  // Special case for development token
  /* istanbul ignore next */
  cov_1bzxs2stgn().s[55]++;
  if (token === "dev-token") {
    /* istanbul ignore next */
    cov_1bzxs2stgn().b[10][0]++;
    cov_1bzxs2stgn().s[56]++;
    return "1"; // Development user ID
  } else
  /* istanbul ignore next */
  {
    cov_1bzxs2stgn().b[10][1]++;
  }
  cov_1bzxs2stgn().s[57]++;
  try {
    // Use optimized cached user lookup
    const user =
    /* istanbul ignore next */
    (cov_1bzxs2stgn().s[58]++, await (0, _authService.getUserFromToken)(token));
    /* istanbul ignore next */
    cov_1bzxs2stgn().s[59]++;
    return user ?
    /* istanbul ignore next */
    (cov_1bzxs2stgn().b[11][0]++, user.id) :
    /* istanbul ignore next */
    (cov_1bzxs2stgn().b[11][1]++, null);
  } catch (error) {
    /* istanbul ignore next */
    cov_1bzxs2stgn().s[60]++;
    console.error("Token verification error:", error);
    /* istanbul ignore next */
    cov_1bzxs2stgn().s[61]++;
    return null;
  }
}
async function getShopId(req) {
  /* istanbul ignore next */
  cov_1bzxs2stgn().f[10]++;
  const authHeader =
  /* istanbul ignore next */
  (cov_1bzxs2stgn().s[62]++, req.headers.get("authorization"));
  /* istanbul ignore next */
  cov_1bzxs2stgn().s[63]++;
  if (
  /* istanbul ignore next */
  (cov_1bzxs2stgn().b[13][0]++, !authHeader) ||
  /* istanbul ignore next */
  (cov_1bzxs2stgn().b[13][1]++, !authHeader.startsWith("Bearer "))) {
    /* istanbul ignore next */
    cov_1bzxs2stgn().b[12][0]++;
    cov_1bzxs2stgn().s[64]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1bzxs2stgn().b[12][1]++;
  }
  const token =
  /* istanbul ignore next */
  (cov_1bzxs2stgn().s[65]++, authHeader.split(" ")[1]);
  // Special case for development token
  /* istanbul ignore next */
  cov_1bzxs2stgn().s[66]++;
  if (token === "dev-token") {
    /* istanbul ignore next */
    cov_1bzxs2stgn().b[14][0]++;
    cov_1bzxs2stgn().s[67]++;
    return null; // Development user might not have a shop
  } else
  /* istanbul ignore next */
  {
    cov_1bzxs2stgn().b[14][1]++;
  }
  cov_1bzxs2stgn().s[68]++;
  try {
    // Use optimized cached user lookup
    const user =
    /* istanbul ignore next */
    (cov_1bzxs2stgn().s[69]++, await (0, _authService.getUserFromToken)(token));
    /* istanbul ignore next */
    cov_1bzxs2stgn().s[70]++;
    return user ?
    /* istanbul ignore next */
    (cov_1bzxs2stgn().b[15][0]++, user.shopId) :
    /* istanbul ignore next */
    (cov_1bzxs2stgn().b[15][1]++, null);
  } catch (error) {
    /* istanbul ignore next */
    cov_1bzxs2stgn().s[71]++;
    console.error("Token verification error:", error);
    /* istanbul ignore next */
    cov_1bzxs2stgn().s[72]++;
    return null;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,