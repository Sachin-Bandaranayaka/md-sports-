{"version":3,"names":["_default","User","_sequelize","Model","authenticate","password","cov_1uidwszzep","f","s","_bcryptjs","default","compare","passwordHash","hasPermission","permissionName","role","_Role","findByPk","roleId","include","b","permissions","get","some","p","name","init","id","type","DataTypes","INTEGER","autoIncrement","primaryKey","username","STRING","allowNull","unique","validate","notEmpty","fullName","email","isEmail","phone","isActive","BOOLEAN","defaultValue","shopId","comment","sequelize","_db","modelName","tableName","timestamps","hooks","beforeCreate","user","changed","hash","beforeUpdate"],"sources":["/Users/sachin/Documents/md-sports-/src/lib/models/User.ts"],"sourcesContent":["import { Model, DataTypes } from 'sequelize';\nimport sequelize from '../db';\nimport bcrypt from 'bcryptjs';\nimport Role from './Role';\n\nclass User extends Model {\n    public id!: number;\n    public username!: string;\n    public passwordHash!: string;\n    public fullName!: string;\n    public email!: string;\n    public phone!: string;\n    public isActive!: boolean;\n    public roleId!: number;\n    public shopId!: number | null;\n    public readonly createdAt!: Date;\n    public readonly updatedAt!: Date;\n\n    // Custom instance methods\n    public async authenticate(password: string): Promise<boolean> {\n        return bcrypt.compare(password, this.passwordHash);\n    }\n\n    public async hasPermission(permissionName: string): Promise<boolean> {\n        const role = await Role.findByPk(this.roleId, {\n            include: ['permissions']\n        });\n\n        if (!role) return false;\n\n        const permissions = role.get('permissions') as any[];\n        return permissions.some(p => p.name === permissionName);\n    }\n}\n\nUser.init({\n    id: {\n        type: DataTypes.INTEGER,\n        autoIncrement: true,\n        primaryKey: true\n    },\n    username: {\n        type: DataTypes.STRING(50),\n        allowNull: false,\n        unique: true,\n        validate: {\n            notEmpty: true\n        }\n    },\n    passwordHash: {\n        type: DataTypes.STRING,\n        allowNull: false\n    },\n    fullName: {\n        type: DataTypes.STRING(100),\n        allowNull: false\n    },\n    email: {\n        type: DataTypes.STRING(100),\n        allowNull: false,\n        unique: true,\n        validate: {\n            isEmail: true\n        }\n    },\n    phone: {\n        type: DataTypes.STRING(20),\n        allowNull: true\n    },\n    isActive: {\n        type: DataTypes.BOOLEAN,\n        allowNull: false,\n        defaultValue: true\n    },\n    roleId: {\n        type: DataTypes.INTEGER,\n        allowNull: false\n    },\n    shopId: {\n        type: DataTypes.INTEGER,\n        allowNull: true,\n        comment: 'The shop this user is assigned to, if applicable'\n    }\n}, {\n    sequelize,\n    modelName: 'user',\n    tableName: 'users',\n    timestamps: true,\n    hooks: {\n        beforeCreate: async (user: User) => {\n            if (user.changed('passwordHash')) {\n                user.passwordHash = await bcrypt.hash(user.passwordHash, 12);\n            }\n        },\n        beforeUpdate: async (user: User) => {\n            if (user.changed('passwordHash')) {\n                user.passwordHash = await bcrypt.hash(user.passwordHash, 12);\n            }\n        }\n    }\n});\n\nexport default User; "],"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","ignoreList":[]}