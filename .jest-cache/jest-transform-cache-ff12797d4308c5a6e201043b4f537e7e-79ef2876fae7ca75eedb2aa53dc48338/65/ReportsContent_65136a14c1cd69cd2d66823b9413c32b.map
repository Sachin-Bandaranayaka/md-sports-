{"version":3,"names":["ReportsContent","DailySalesReportModal","cov_1k4zs6s2ba","s","_react","lazy","f","Promise","resolve","then","_interop_require_wildcard","require","ScheduleReportModal","GenerateReportModal","loadPDFLibraries","module","jsPDF","default","autoTableModule","autoTable","loadExcelLibrary","initialReports","id","name","description","type","lastGenerated","format","getReportTypeBadgeClass","b","reports","setReports","useState","loading","setLoading","error","setError","isDailySalesModalOpen","setIsDailySalesModalOpen","selectedDailySalesData","setSelectedDailySalesData","isScheduleModalOpen","setIsScheduleModalOpen","isGenerateModalOpen","setIsGenerateModalOpen","selectedReportName","setSelectedReportName","searchTerm","setSearchTerm","selectedType","setSelectedType","selectedFormat","setSelectedFormat","filteredReports","setFilteredReports","useEffect","fetchDailySales","prev","response","fetch","ok","Error","statusText","data","json","success","prevReports","map","report","totalSales","summary","totalShops","totalInvoices","date","toLocaleString","undefined","style","currency","Date","toLocaleDateString","message","err","console","currentReports","filter","toLowerCase","includes","handleViewReport","alert","handleDownloadReport","doc","setFontSize","text","numberOfShops","shopTableData","shopData","shop","shopName","numberOfInvoices","toString","totalQuantitySold","averageTransactionValue","head","body","startY","styles","fontSize","headStyles","fillColor","save","XLSX","wb","utils","book_new","summaryData","averagePerShop","summaryWs","aoa_to_sheet","book_append_sheet","shopOverviewData","forEach","push","shopOverviewWs","writeFile","handleGenerateFromTemplate","reportId","reportToView","find","r","handleGenerateAdhocReport","reportOptionsForModal","isLoading","_jsxruntime","jsxs","Fragment","jsx","className","_Button","Button","variant","size","onClick","_lucidereact","Calendar","BarChart2","role","placeholder","value","onChange","e","target","title","Filter","disabled","Download","length","colSpan","FileText","Suspense","fallback","isOpen","onClose","reportName","reportData","onGenerate"],"sources":["/Users/sachin/Documents/md-sports-/src/app/reports/components/ReportsContent.tsx"],"sourcesContent":["'use client';\n\nimport { Button } from '@/components/ui/Button';\nimport { BarChart2, Download, Filter, Calendar, FileText } from 'lucide-react';\nimport { useEffect, useState } from 'react';\n\n// Lazy load heavy dependencies only when needed\nimport { lazy, Suspense } from 'react';\n\nconst DailySalesReportModal = lazy(() => import('@/components/reports/DailySalesReportModal'));\nconst ScheduleReportModal = lazy(() => import('@/components/reports/ScheduleReportModal'));\nconst GenerateReportModal = lazy(() => import('@/components/reports/GenerateReportModal'));\n\n// Lazy load PDF/Excel libraries only when downloading\nconst loadPDFLibraries = () => import('jspdf').then(module => {\n  const jsPDF = module.default;\n  return import('jspdf-autotable').then(autoTableModule => {\n    const autoTable = autoTableModule.default;\n    return { jsPDF, autoTable };\n  });\n});\n\nconst loadExcelLibrary = () => import('xlsx');\n\ninterface Report {\n    id: string;\n    name: string;\n    description: string;\n    type: string;\n    lastGenerated: string;\n    format: string;\n    data?: any;\n}\n\ninterface ReportOption {\n    id: string;\n    name: string;\n    description: string;\n    data?: any;\n    isLoading: boolean;\n}\n\n// Initial dummy data for reports\nconst initialReports: Report[] = [\n    {\n        id: 'REP-006',\n        name: 'Daily Sales Report',\n        description: 'Comprehensive daily sales breakdown by shop including all payment statuses (paid, pending, partial) with Excel and PDF export',\n        type: 'Sales',\n        lastGenerated: 'loading...',\n        format: 'Both'\n    }\n];\n\n// Report type badge colors\nconst getReportTypeBadgeClass = (type: string) => {\n    switch (type) {\n        case 'Sales':\n            return 'bg-blue-100 text-blue-800';\n        case 'Inventory':\n            return 'bg-green-100 text-green-800';\n        case 'Financial':\n            return 'bg-yellow-100 text-yellow-800';\n        case 'Analytics':\n            return 'bg-purple-100 text-purple-800';\n        default:\n            return 'bg-gray-100 text-gray-800';\n    }\n};\n\nexport default function ReportsContent() {\n    const [reports, setReports] = useState<Report[]>(initialReports);\n    const [loading, setLoading] = useState<Record<string, boolean>>({});\n    const [error, setError] = useState<string | null>(null);\n\n    const [isDailySalesModalOpen, setIsDailySalesModalOpen] = useState(false);\n    const [selectedDailySalesData, setSelectedDailySalesData] = useState<any | null>(null);\n\n    const [isScheduleModalOpen, setIsScheduleModalOpen] = useState(false);\n    const [isGenerateModalOpen, setIsGenerateModalOpen] = useState(false);\n\n    const [selectedReportName, setSelectedReportName] = useState<string>('');\n\n    // State for Filters\n    const [searchTerm, setSearchTerm] = useState('');\n    const [selectedType, setSelectedType] = useState('');\n    const [selectedFormat, setSelectedFormat] = useState('');\n    const [filteredReports, setFilteredReports] = useState<Report[]>(initialReports);\n\n    useEffect(() => {\n        const fetchDailySales = async () => {\n            setLoading(prev => ({ ...prev, 'REP-006': true }));\n            setError(null);\n            try {\n                const response = await fetch('/api/reports/daily-sales');\n                if (!response.ok) {\n                    throw new Error(`Failed to fetch daily sales: ${response.statusText}`);\n                }\n                const data = await response.json();\n                if (data.success) {\n                    setReports(prevReports => prevReports.map(report => {\n                        if (report.id === 'REP-006') {\n                            const totalSales = data.summary.totalSales;\n                            const totalShops = data.summary.totalShops;\n                            const totalInvoices = data.summary.totalInvoices;\n                            return {\n                                ...report,\n                                description: `Daily sales for ${data.summary.date}: ${totalSales.toLocaleString(undefined, { style: 'currency', currency: 'LKR' })} from ${totalInvoices} invoices across ${totalShops} shops (all payment statuses included).`,\n                                lastGenerated: new Date().toLocaleDateString('en-CA'),\n                                data: data\n                            };\n                        }\n                        return report;\n                    }));\n                } else {\n                    throw new Error(data.message || 'Failed to fetch daily sales');\n                }\n            } catch (err: any) {\n                console.error(err);\n                setError(err.message);\n                setReports(prevReports => prevReports.map(report =>\n                    report.id === 'REP-006' ? { ...report, description: 'Error loading daily sales data', lastGenerated: 'Error' } : report\n                ));\n            }\n            setLoading(prev => ({ ...prev, 'REP-006': false }));\n        };\n\n        fetchDailySales();\n    }, []);\n\n    // useEffect for filtering reports\n    useEffect(() => {\n        let currentReports = [...reports];\n\n        if (searchTerm) {\n            currentReports = currentReports.filter(report =>\n                report.name.toLowerCase().includes(searchTerm.toLowerCase())\n            );\n        }\n        if (selectedType) {\n            currentReports = currentReports.filter(report => report.type === selectedType);\n        }\n        if (selectedFormat) {\n            currentReports = currentReports.filter(report => report.format === selectedFormat);\n        }\n        setFilteredReports(currentReports);\n    }, [searchTerm, selectedType, selectedFormat, reports]);\n\n    const handleViewReport = (report: Report) => {\n        setSelectedReportName(report.name);\n        if (report.id === 'REP-006' && report.data) {\n            setSelectedDailySalesData(report.data);\n            setIsDailySalesModalOpen(true);\n        } else {\n            alert(`View functionality for \"${report.name}\" is not yet implemented or data is missing.`);\n        }\n        if (isGenerateModalOpen) setIsGenerateModalOpen(false);\n    };\n\n    const handleDownloadReport = async (report: Report) => {\n        if (report.id === 'REP-006' && report.data) {\n            try {\n                if (report.format === 'Both' || report.format === 'PDF') {\n                    // Lazy load PDF libraries\n                    const { jsPDF, autoTable } = await loadPDFLibraries();\n                    \n                    const doc = new jsPDF();\n                    \n                    // Title\n                    doc.setFontSize(20);\n                    doc.text('Daily Sales Report', 20, 20);\n                    \n                    // Date and summary\n                    doc.setFontSize(12);\n                    doc.text(`Date: ${report.data.summary.date}`, 20, 35);\n                    doc.text(`Total Sales: ${report.data.summary.totalSales.toLocaleString(undefined, { style: 'currency', currency: 'LKR' })}`, 20, 45);\n                    doc.text(`Total Invoices: ${report.data.summary.totalInvoices}`, 20, 55);\n                    doc.text(`Active Shops: ${report.data.summary.numberOfShops}`, 20, 65);\n                    \n                    // Shop summary table\n                    const shopTableData = report.data.shopData.map((shop: any) => [\n                        shop.shopName,\n                        shop.totalSales.toLocaleString(undefined, { style: 'currency', currency: 'LKR' }),\n                        shop.numberOfInvoices.toString(),\n                        shop.totalQuantitySold.toString(),\n                        shop.averageTransactionValue.toLocaleString(undefined, { style: 'currency', currency: 'LKR' })\n                    ]);\n                    \n                    autoTable(doc, {\n                        head: [['Shop Name', 'Total Sales', 'Invoices', 'Quantity', 'Avg. Transaction']],\n                        body: shopTableData,\n                        startY: 75,\n                        styles: { fontSize: 10 },\n                        headStyles: { fillColor: [66, 139, 202] }\n                    });\n                    \n                    doc.save(`Daily_Sales_Report_${report.data.summary.date}.pdf`);\n                }\n                \n                if (report.format === 'Both' || report.format === 'Excel') {\n                    // Lazy load Excel library\n                    const XLSX = await loadExcelLibrary();\n                    \n                    const wb = XLSX.utils.book_new();\n                    \n                    // Summary sheet\n                    const summaryData = [\n                        ['Daily Sales Report Summary'],\n                        ['Date', report.data.summary.date],\n                        ['Total Sales', report.data.summary.totalSales],\n                        ['Total Invoices', report.data.summary.totalInvoices],\n                        ['Active Shops', report.data.summary.numberOfShops],\n                        ['Average Per Shop', report.data.summary.averagePerShop]\n                    ];\n                    const summaryWs = XLSX.utils.aoa_to_sheet(summaryData);\n                    XLSX.utils.book_append_sheet(wb, summaryWs, 'Summary');\n                    \n                    // Shop overview sheet\n                    const shopOverviewData = [\n                        ['Shop Name', 'Total Sales', 'Invoice Count', 'Total Quantity', 'Average Transaction Value']\n                    ];\n                    report.data.shopData.forEach((shop: any) => {\n                        shopOverviewData.push([\n                            shop.shopName,\n                            shop.totalSales,\n                            shop.numberOfInvoices,\n                            shop.totalQuantitySold,\n                            shop.averageTransactionValue\n                        ]);\n                    });\n                    const shopOverviewWs = XLSX.utils.aoa_to_sheet(shopOverviewData);\n                    XLSX.utils.book_append_sheet(wb, shopOverviewWs, 'Shop Overview');\n                    \n                    XLSX.writeFile(wb, `Daily_Sales_Report_${report.data.summary.date}.xlsx`);\n                }\n            } catch (error) {\n                console.error('Error generating report:', error);\n                alert('Error generating report. Please try again.');\n            }\n        } else {\n            alert(`Download functionality for \"${report.name}\" is not yet implemented or data is missing.`);\n        }\n    };\n\n    const handleGenerateFromTemplate = (reportId: string) => {\n        const reportToView = reports.find(r => r.id === reportId);\n        if (reportToView && reportToView.data) {\n            if (loading[reportId]) {\n                alert('Report data is still loading. Please wait.');\n                return;\n            }\n            handleViewReport(reportToView);\n        } else if (reportToView && loading[reportId]) {\n            alert('Report data is still loading. Please wait.');\n        } else {\n            alert('Report data not yet available or template is misconfigured. Please try again shortly.');\n        }\n    };\n\n    const handleGenerateAdhocReport = (reportId: string) => {\n        const reportToView = reports.find(r => r.id === reportId);\n        if (reportToView) {\n            handleViewReport(reportToView);\n        }\n    };\n\n    const reportOptionsForModal: ReportOption[] = reports.map(r => ({\n        id: r.id,\n        name: r.name,\n        description: r.description,\n        data: r.data,\n        isLoading: loading[r.id] || false\n    }));\n\n    return (\n        <>\n            {/* Header with actions */}\n            <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\n                <div className=\"flex gap-3\">\n                    <Button variant=\"outline\" size=\"sm\" onClick={() => setIsScheduleModalOpen(true)}>\n                        <Calendar className=\"w-4 h-4 mr-2\" />\n                        Schedule Report\n                    </Button>\n                    <Button variant=\"primary\" size=\"sm\" onClick={() => setIsGenerateModalOpen(true)}>\n                        <BarChart2 className=\"w-4 h-4 mr-2\" />\n                        Generate Report\n                    </Button>\n                </div>\n            </div>\n\n            {error && (\n                <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n                    <strong className=\"font-bold\">Error: </strong>\n                    <span className=\"block sm:inline\">{error}</span>\n                </div>\n            )}\n\n            {/* Filter bar */}\n            <div className=\"bg-tertiary p-4 rounded-lg shadow-sm border border-gray-200\">\n                <div className=\"flex flex-col md:flex-row gap-4\">\n                    <div className=\"relative flex-grow\">\n                        <input\n                            type=\"text\"\n                            className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5\"\n                            placeholder=\"Search reports by name...\"\n                            value={searchTerm}\n                            onChange={(e) => setSearchTerm(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"flex gap-2\">\n                        <select\n                            className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block p-2.5\"\n                            value={selectedType}\n                            onChange={(e) => setSelectedType(e.target.value)}\n                        >\n                            <option value=\"\">All Types</option>\n                            <option value=\"Sales\">Sales</option>\n                            <option value=\"Inventory\">Inventory</option>\n                            <option value=\"Financial\">Financial</option>\n                            <option value=\"Analytics\">Analytics</option>\n                        </select>\n                        <select\n                            className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block p-2.5\"\n                            value={selectedFormat}\n                            onChange={(e) => setSelectedFormat(e.target.value)}\n                        >\n                            <option value=\"\">All Formats</option>\n                            <option value=\"PDF\">PDF</option>\n                            <option value=\"Excel\">Excel</option>\n                        </select>\n                        <Button variant=\"outline\" size=\"sm\" title=\"Filters apply automatically\">\n                            <Filter className=\"w-4 h-4\" />\n                        </Button>\n                    </div>\n                </div>\n            </div>\n\n            {/* Reports List */}\n            <div className=\"bg-tertiary rounded-lg shadow-sm border border-gray-200\">\n                <div className=\"overflow-x-auto\">\n                    <table className=\"w-full text-sm text-left text-gray-500\">\n                        <thead className=\"text-xs text-gray-700 uppercase bg-gray-50\">\n                            <tr>\n                                <th className=\"px-6 py-3\">Report Name</th>\n                                <th className=\"px-6 py-3\">Description</th>\n                                <th className=\"px-6 py-3\">Type</th>\n                                <th className=\"px-6 py-3\">Last Generated</th>\n                                <th className=\"px-6 py-3\">Format</th>\n                                <th className=\"px-6 py-3\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {filteredReports.map((report) => (\n                                <tr key={report.id} className=\"border-b hover:bg-gray-50\">\n                                    <td className=\"px-6 py-4 font-medium text-gray-900\">\n                                        {report.name}\n                                        {loading[report.id] && <span className=\"text-xs text-gray-500 ml-2\">(loading...)</span>}\n                                    </td>\n                                    <td className=\"px-6 py-4\">\n                                        {report.description}\n                                    </td>\n                                    <td className=\"px-6 py-4\">\n                                        <span className={`px-2 py-1 rounded-full text-xs ${getReportTypeBadgeClass(report.type)}`}>\n                                            {report.type}\n                                        </span>\n                                    </td>\n                                    <td className=\"px-6 py-4\">{report.lastGenerated}</td>\n                                    <td className=\"px-6 py-4\">{report.format}</td>\n                                    <td className=\"px-6 py-4\">\n                                        <div className=\"flex gap-2\">\n                                            <Button\n                                                variant=\"ghost\"\n                                                size=\"sm\"\n                                                disabled={report.id === 'REP-006' && (loading[report.id] || !report.data)}\n                                                onClick={() => handleViewReport(report)}\n                                            >\n                                                View\n                                            </Button>\n                                            <Button\n                                                variant=\"ghost\"\n                                                size=\"sm\"\n                                                disabled={report.id === 'REP-006' && (loading[report.id] || !report.data)}\n                                                onClick={() => handleDownloadReport(report)}\n                                            >\n                                                <Download className=\"w-4 h-4\" />\n                                            </Button>\n                                        </div>\n                                    </td>\n                                </tr>\n                            ))}\n                            {filteredReports.length === 0 && (\n                                <tr>\n                                    <td colSpan={6} className=\"px-6 py-10 text-center text-gray-500\">\n                                        No reports match your filter criteria.\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n            {/* Report Templates */}\n            <div className=\"space-y-4\">\n                <h2 className=\"text-lg font-semibold text-gray-900\">Report Templates</h2>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                    <div className=\"bg-tertiary p-6 rounded-lg shadow-sm border border-gray-200\">\n                        <div className=\"flex items-start justify-between\">\n                            <div>\n                                <h3 className=\"text-lg font-semibold text-gray-900\">Daily Sales Report</h3>\n                                <p className=\"text-sm text-gray-500 mt-1\">Comprehensive daily sales breakdown by shop including all payment statuses</p>\n                            </div>\n                            <div className=\"p-3 rounded-full bg-blue-100\">\n                                <FileText className=\"h-6 w-6 text-blue-600\" />\n                            </div>\n                        </div>\n                        <div className=\"mt-6\">\n                            <Button\n                                variant=\"outline\"\n                                className=\"w-full\"\n                                onClick={() => handleGenerateFromTemplate('REP-006')}\n                                disabled={loading['REP-006'] || !reports.find(r => r.id === 'REP-006')?.data}\n                            >\n                                Generate Report {loading['REP-006'] && '(Loading...)'}\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Modals - Lazy loaded */}\n            <Suspense fallback={<div>Loading modal...</div>}>\n                {isDailySalesModalOpen && selectedDailySalesData && (\n                    <DailySalesReportModal\n                        isOpen={isDailySalesModalOpen}\n                        onClose={() => setIsDailySalesModalOpen(false)}\n                        reportName={selectedReportName}\n                        reportData={selectedDailySalesData}\n                    />\n                )}\n                {isScheduleModalOpen && (\n                    <ScheduleReportModal\n                        isOpen={isScheduleModalOpen}\n                        onClose={() => setIsScheduleModalOpen(false)}\n                    />\n                )}\n                {isGenerateModalOpen && (\n                    <GenerateReportModal\n                        isOpen={isGenerateModalOpen}\n                        onClose={() => setIsGenerateModalOpen(false)}\n                        reports={reportOptionsForModal}\n                        onGenerate={handleGenerateAdhocReport}\n                    />\n                )}\n            </Suspense>\n        </>\n    );\n}"],"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","ignoreList":[]}