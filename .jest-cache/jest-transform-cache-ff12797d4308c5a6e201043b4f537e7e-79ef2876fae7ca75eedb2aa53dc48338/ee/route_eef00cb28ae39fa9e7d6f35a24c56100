6c97393937bd6d591c4019446f76bea5
"use strict";

/* istanbul ignore next */
function cov_130xwesg7a() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/auth/validate/route.ts";
  var hash = "2f39be22d6625dbb4ce50aef6dc44aac766916a6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/auth/validate/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 19
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 21
        },
        end: {
          line: 12,
          column: 64
        }
      },
      "5": {
        start: {
          line: 13,
          column: 36
        },
        end: {
          line: 13,
          column: 85
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 17,
          column: 6
        }
      },
      "7": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 122,
          column: 5
        }
      },
      "8": {
        start: {
          line: 22,
          column: 27
        },
        end: {
          line: 22,
          column: 59
        }
      },
      "9": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "10": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 65
        }
      },
      "11": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 30,
          column: 15
        }
      },
      "12": {
        start: {
          line: 32,
          column: 22
        },
        end: {
          line: 32,
          column: 46
        }
      },
      "13": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 86
        }
      },
      "14": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "15": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 72
        }
      },
      "16": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 60,
          column: 15
        }
      },
      "17": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 46
        }
      },
      "18": {
        start: {
          line: 64,
          column: 26
        },
        end: {
          line: 64,
          column: 68
        }
      },
      "19": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 49
        }
      },
      "20": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 41
        }
      },
      "21": {
        start: {
          line: 68,
          column: 21
        },
        end: {
          line: 68,
          column: 81
        }
      },
      "22": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 44
        }
      },
      "23": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "24": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 83
        }
      },
      "25": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 77,
          column: 15
        }
      },
      "26": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 115
        }
      },
      "27": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 94,
          column: 11
        }
      },
      "28": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 82
        }
      },
      "29": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "30": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 104,
          column: 15
        }
      },
      "31": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "32": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 113,
          column: 15
        }
      },
      "33": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 121,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 33
          }
        },
        loc: {
          start: {
            line: 14,
            column: 39
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "GET",
        decl: {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 18
          }
        },
        loc: {
          start: {
            line: 19,
            column: 24
          },
          end: {
            line: 123,
            column: 1
          }
        },
        line: 19
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 17,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 35
          },
          end: {
            line: 15,
            column: 38
          }
        }, {
          start: {
            line: 15,
            column: 41
          },
          end: {
            line: 17,
            column: 5
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 14
          }
        }, {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 32
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "3": {
        loc: {
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 23
          }
        }, {
          start: {
            line: 23,
            column: 27
          },
          end: {
            line: 23,
            column: 60
          }
        }],
        line: 23
      },
      "4": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "5": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "6": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "7": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/auth/validate/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { verifyToken, getUserFromDecodedPayload } from '@/services/authService';\nimport jwt from 'jsonwebtoken'; // Import jwt to access error types\n\nexport async function GET(req: NextRequest) {\n    try {\n        // Get token from Authorization header\n        const authHeader = req.headers.get('authorization');\n        if (!authHeader || !authHeader.startsWith('Bearer ')) {\n            console.error('No valid Authorization header found');\n            return NextResponse.json(\n                { success: false, message: 'No token provided' },\n                { status: 401 }\n            );\n        }\n\n        const token = authHeader.split(' ')[1];\n        console.log('Token received for validation:', token.substring(0, 10) + '...');\n\n        // Handle dev-token case\n        if (token === 'dev-token') {\n            console.log('Dev token detected, returning mock user data');\n            return NextResponse.json({\n                success: true,\n                user: {\n                    id: 'dev-user',\n                    username: 'dev-user',\n                    fullName: 'Development User',\n                    email: 'dev@example.com',\n                    roleId: 'dev-role',\n                    roleName: 'Shop Staff',\n                    shopId: 'cmbtr9q6l000061romoxi7uvf',\n                    permissions: ['read:products', 'write:products', 'read:invoices', 'write:invoices', 'user:manage', 'shop:manage', 'inventory:manage', 'settings:manage', 'sales:manage', 'sales:create:shop']\n                }\n            });\n        }\n\n        // Use optimized async verifyToken with caching\n        console.time('token validation time');\n        const tokenData = await verifyToken(token);\n        console.timeEnd('token validation time');\n\n        // If verifyToken didn't throw, tokenData is valid and populated\n        console.time('user lookup time');\n        const user = await getUserFromDecodedPayload(tokenData);\n        console.timeEnd('user lookup time');\n\n        if (!user) {\n            console.error('User not found from token payload or user is inactive');\n            return NextResponse.json(\n                { success: false, message: 'User not found or inactive' },\n                { status: 401 }\n            );\n        }\n\n        // Permissions are now part of the user object returned by getUserFromDecodedPayload\n        console.log('User validated successfully:', user.id, user.username, 'with permissions:', user.permissions);\n\n        // Return user data\n        return NextResponse.json({\n            success: true,\n            user: {\n                id: user.id,\n                username: user.username,\n                fullName: user.name,\n                email: user.email,\n                roleId: user.roleId,\n                roleName: user.roleName,\n                shopId: user.shopId,\n                permissions: user.permissions\n            }\n        });\n    } catch (error) {\n        console.error('Token validation error in GET /api/auth/validate:', error);\n        if (error instanceof jwt.TokenExpiredError) {\n            return NextResponse.json(\n                { success: false, message: 'Token expired', errorType: 'TOKEN_EXPIRED' },\n                { status: 401 }\n            );\n        }\n        if (error instanceof jwt.JsonWebTokenError) { // Catches other JWT errors (e.g. invalid signature)\n            return NextResponse.json(\n                { success: false, message: 'Invalid token', errorType: 'TOKEN_INVALID' },\n                { status: 401 }\n            );\n        }\n        // Fallback for other unexpected errors not related to JWT verification specifically\n        return NextResponse.json(\n            { success: false, message: 'Token validation failed due to an unexpected error' },\n            { status: 500 }\n        );\n    }\n}"],
      names: ["GET", "req", "authHeader", "headers", "get", "startsWith", "console", "error", "NextResponse", "json", "success", "message", "status", "token", "split", "log", "substring", "user", "id", "username", "fullName", "email", "roleId", "roleName", "shopId", "permissions", "time", "tokenData", "verifyToken", "timeEnd", "getUserFromDecodedPayload", "name", "jwt", "TokenExpiredError", "errorType", "JsonWebTokenError"],
      mappings: ";;;;+BAIsBA;;;eAAAA;;;wBAJoB;6BACa;qEACvC;;;;;;AAET,eAAeA,IAAIC,GAAgB;IACtC,IAAI;QACA,sCAAsC;QACtC,MAAMC,aAAaD,IAAIE,OAAO,CAACC,GAAG,CAAC;QACnC,IAAI,CAACF,cAAc,CAACA,WAAWG,UAAU,CAAC,YAAY;YAClDC,QAAQC,KAAK,CAAC;YACd,OAAOC,oBAAY,CAACC,IAAI,CACpB;gBAAEC,SAAS;gBAAOC,SAAS;YAAoB,GAC/C;gBAAEC,QAAQ;YAAI;QAEtB;QAEA,MAAMC,QAAQX,WAAWY,KAAK,CAAC,IAAI,CAAC,EAAE;QACtCR,QAAQS,GAAG,CAAC,kCAAkCF,MAAMG,SAAS,CAAC,GAAG,MAAM;QAEvE,wBAAwB;QACxB,IAAIH,UAAU,aAAa;YACvBP,QAAQS,GAAG,CAAC;YACZ,OAAOP,oBAAY,CAACC,IAAI,CAAC;gBACrBC,SAAS;gBACTO,MAAM;oBACFC,IAAI;oBACJC,UAAU;oBACVC,UAAU;oBACVC,OAAO;oBACPC,QAAQ;oBACRC,UAAU;oBACVC,QAAQ;oBACRC,aAAa;wBAAC;wBAAiB;wBAAkB;wBAAiB;wBAAkB;wBAAe;wBAAe;wBAAoB;wBAAmB;wBAAgB;qBAAoB;gBACjM;YACJ;QACJ;QAEA,+CAA+C;QAC/CnB,QAAQoB,IAAI,CAAC;QACb,MAAMC,YAAY,MAAMC,IAAAA,wBAAW,EAACf;QACpCP,QAAQuB,OAAO,CAAC;QAEhB,gEAAgE;QAChEvB,QAAQoB,IAAI,CAAC;QACb,MAAMT,OAAO,MAAMa,IAAAA,sCAAyB,EAACH;QAC7CrB,QAAQuB,OAAO,CAAC;QAEhB,IAAI,CAACZ,MAAM;YACPX,QAAQC,KAAK,CAAC;YACd,OAAOC,oBAAY,CAACC,IAAI,CACpB;gBAAEC,SAAS;gBAAOC,SAAS;YAA6B,GACxD;gBAAEC,QAAQ;YAAI;QAEtB;QAEA,oFAAoF;QACpFN,QAAQS,GAAG,CAAC,gCAAgCE,KAAKC,EAAE,EAAED,KAAKE,QAAQ,EAAE,qBAAqBF,KAAKQ,WAAW;QAEzG,mBAAmB;QACnB,OAAOjB,oBAAY,CAACC,IAAI,CAAC;YACrBC,SAAS;YACTO,MAAM;gBACFC,IAAID,KAAKC,EAAE;gBACXC,UAAUF,KAAKE,QAAQ;gBACvBC,UAAUH,KAAKc,IAAI;gBACnBV,OAAOJ,KAAKI,KAAK;gBACjBC,QAAQL,KAAKK,MAAM;gBACnBC,UAAUN,KAAKM,QAAQ;gBACvBC,QAAQP,KAAKO,MAAM;gBACnBC,aAAaR,KAAKQ,WAAW;YACjC;QACJ;IACJ,EAAE,OAAOlB,OAAO;QACZD,QAAQC,KAAK,CAAC,qDAAqDA;QACnE,IAAIA,iBAAiByB,qBAAG,CAACC,iBAAiB,EAAE;YACxC,OAAOzB,oBAAY,CAACC,IAAI,CACpB;gBAAEC,SAAS;gBAAOC,SAAS;gBAAiBuB,WAAW;YAAgB,GACvE;gBAAEtB,QAAQ;YAAI;QAEtB;QACA,IAAIL,iBAAiByB,qBAAG,CAACG,iBAAiB,EAAE;YACxC,OAAO3B,oBAAY,CAACC,IAAI,CACpB;gBAAEC,SAAS;gBAAOC,SAAS;gBAAiBuB,WAAW;YAAgB,GACvE;gBAAEtB,QAAQ;YAAI;QAEtB;QACA,oFAAoF;QACpF,OAAOJ,oBAAY,CAACC,IAAI,CACpB;YAAEC,SAAS;YAAOC,SAAS;QAAqD,GAChF;YAAEC,QAAQ;QAAI;IAEtB;AACJ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2f39be22d6625dbb4ce50aef6dc44aac766916a6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_130xwesg7a = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_130xwesg7a();
cov_130xwesg7a().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_130xwesg7a().s[1]++;
Object.defineProperty(exports, "GET", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_130xwesg7a().f[0]++;
    cov_130xwesg7a().s[2]++;
    return GET;
  }
});
const _server =
/* istanbul ignore next */
(cov_130xwesg7a().s[3]++, require("next/server"));
const _authService =
/* istanbul ignore next */
(cov_130xwesg7a().s[4]++, require("../../../../services/authService"));
const _jsonwebtoken =
/* istanbul ignore next */
(/*#__PURE__*/cov_130xwesg7a().s[5]++, _interop_require_default(require("jsonwebtoken")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_130xwesg7a().f[1]++;
  cov_130xwesg7a().s[6]++;
  return /* istanbul ignore next */(cov_130xwesg7a().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_130xwesg7a().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_130xwesg7a().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_130xwesg7a().b[0][1]++, {
    default: obj
  });
}
async function GET(req) {
  /* istanbul ignore next */
  cov_130xwesg7a().f[2]++;
  cov_130xwesg7a().s[7]++;
  try {
    // Get token from Authorization header
    const authHeader =
    /* istanbul ignore next */
    (cov_130xwesg7a().s[8]++, req.headers.get("authorization"));
    /* istanbul ignore next */
    cov_130xwesg7a().s[9]++;
    if (
    /* istanbul ignore next */
    (cov_130xwesg7a().b[3][0]++, !authHeader) ||
    /* istanbul ignore next */
    (cov_130xwesg7a().b[3][1]++, !authHeader.startsWith("Bearer "))) {
      /* istanbul ignore next */
      cov_130xwesg7a().b[2][0]++;
      cov_130xwesg7a().s[10]++;
      console.error("No valid Authorization header found");
      /* istanbul ignore next */
      cov_130xwesg7a().s[11]++;
      return _server.NextResponse.json({
        success: false,
        message: "No token provided"
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_130xwesg7a().b[2][1]++;
    }
    const token =
    /* istanbul ignore next */
    (cov_130xwesg7a().s[12]++, authHeader.split(" ")[1]);
    /* istanbul ignore next */
    cov_130xwesg7a().s[13]++;
    console.log("Token received for validation:", token.substring(0, 10) + "...");
    // Handle dev-token case
    /* istanbul ignore next */
    cov_130xwesg7a().s[14]++;
    if (token === "dev-token") {
      /* istanbul ignore next */
      cov_130xwesg7a().b[4][0]++;
      cov_130xwesg7a().s[15]++;
      console.log("Dev token detected, returning mock user data");
      /* istanbul ignore next */
      cov_130xwesg7a().s[16]++;
      return _server.NextResponse.json({
        success: true,
        user: {
          id: "dev-user",
          username: "dev-user",
          fullName: "Development User",
          email: "dev@example.com",
          roleId: "dev-role",
          roleName: "Shop Staff",
          shopId: "cmbtr9q6l000061romoxi7uvf",
          permissions: ["read:products", "write:products", "read:invoices", "write:invoices", "user:manage", "shop:manage", "inventory:manage", "settings:manage", "sales:manage", "sales:create:shop"]
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_130xwesg7a().b[4][1]++;
    }
    // Use optimized async verifyToken with caching
    cov_130xwesg7a().s[17]++;
    console.time("token validation time");
    const tokenData =
    /* istanbul ignore next */
    (cov_130xwesg7a().s[18]++, await (0, _authService.verifyToken)(token));
    /* istanbul ignore next */
    cov_130xwesg7a().s[19]++;
    console.timeEnd("token validation time");
    // If verifyToken didn't throw, tokenData is valid and populated
    /* istanbul ignore next */
    cov_130xwesg7a().s[20]++;
    console.time("user lookup time");
    const user =
    /* istanbul ignore next */
    (cov_130xwesg7a().s[21]++, await (0, _authService.getUserFromDecodedPayload)(tokenData));
    /* istanbul ignore next */
    cov_130xwesg7a().s[22]++;
    console.timeEnd("user lookup time");
    /* istanbul ignore next */
    cov_130xwesg7a().s[23]++;
    if (!user) {
      /* istanbul ignore next */
      cov_130xwesg7a().b[5][0]++;
      cov_130xwesg7a().s[24]++;
      console.error("User not found from token payload or user is inactive");
      /* istanbul ignore next */
      cov_130xwesg7a().s[25]++;
      return _server.NextResponse.json({
        success: false,
        message: "User not found or inactive"
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_130xwesg7a().b[5][1]++;
    }
    // Permissions are now part of the user object returned by getUserFromDecodedPayload
    cov_130xwesg7a().s[26]++;
    console.log("User validated successfully:", user.id, user.username, "with permissions:", user.permissions);
    // Return user data
    /* istanbul ignore next */
    cov_130xwesg7a().s[27]++;
    return _server.NextResponse.json({
      success: true,
      user: {
        id: user.id,
        username: user.username,
        fullName: user.name,
        email: user.email,
        roleId: user.roleId,
        roleName: user.roleName,
        shopId: user.shopId,
        permissions: user.permissions
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_130xwesg7a().s[28]++;
    console.error("Token validation error in GET /api/auth/validate:", error);
    /* istanbul ignore next */
    cov_130xwesg7a().s[29]++;
    if (error instanceof _jsonwebtoken.default.TokenExpiredError) {
      /* istanbul ignore next */
      cov_130xwesg7a().b[6][0]++;
      cov_130xwesg7a().s[30]++;
      return _server.NextResponse.json({
        success: false,
        message: "Token expired",
        errorType: "TOKEN_EXPIRED"
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_130xwesg7a().b[6][1]++;
    }
    cov_130xwesg7a().s[31]++;
    if (error instanceof _jsonwebtoken.default.JsonWebTokenError) {
      /* istanbul ignore next */
      cov_130xwesg7a().b[7][0]++;
      cov_130xwesg7a().s[32]++;
      return _server.NextResponse.json({
        success: false,
        message: "Invalid token",
        errorType: "TOKEN_INVALID"
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_130xwesg7a().b[7][1]++;
    }
    // Fallback for other unexpected errors not related to JWT verification specifically
    cov_130xwesg7a().s[33]++;
    return _server.NextResponse.json({
      success: false,
      message: "Token validation failed due to an unexpected error"
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,