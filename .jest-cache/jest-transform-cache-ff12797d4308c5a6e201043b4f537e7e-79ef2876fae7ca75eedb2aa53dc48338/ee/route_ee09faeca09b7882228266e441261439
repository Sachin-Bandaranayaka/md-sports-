291240ba10b7faac2053866963cd3001
"use strict";

/* istanbul ignore next */
function cov_11b6nqn25m() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/products/route.ts";
  var hash = "2c9c9bb16a8bfbc99e26bb5a04accc65b633d386";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/products/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 20
        }
      },
      "6": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "7": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 36
        }
      },
      "8": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 45
        }
      },
      "9": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 46
        }
      },
      "10": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 23,
          column: 68
        }
      },
      "11": {
        start: {
          line: 24,
          column: 14
        },
        end: {
          line: 24,
          column: 42
        }
      },
      "12": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 72,
          column: 1
        }
      },
      "13": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 206,
          column: 2
        }
      },
      "14": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 205,
          column: 5
        }
      },
      "15": {
        start: {
          line: 75,
          column: 33
        },
        end: {
          line: 75,
          column: 53
        }
      },
      "16": {
        start: {
          line: 76,
          column: 27
        },
        end: {
          line: 76,
          column: 57
        }
      },
      "17": {
        start: {
          line: 77,
          column: 23
        },
        end: {
          line: 77,
          column: 49
        }
      },
      "18": {
        start: {
          line: 78,
          column: 32
        },
        end: {
          line: 78,
          column: 78
        }
      },
      "19": {
        start: {
          line: 79,
          column: 21
        },
        end: {
          line: 79,
          column: 62
        }
      },
      "20": {
        start: {
          line: 80,
          column: 22
        },
        end: {
          line: 80,
          column: 65
        }
      },
      "21": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 86,
          column: 11
        }
      },
      "22": {
        start: {
          line: 87,
          column: 21
        },
        end: {
          line: 87,
          column: 39
        }
      },
      "23": {
        start: {
          line: 89,
          column: 22
        },
        end: {
          line: 89,
          column: 24
        }
      },
      "24": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "25": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 52
        }
      },
      "26": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "27": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 113,
          column: 14
        }
      },
      "28": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "29": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 75
        }
      },
      "30": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 155,
          column: 15
        }
      },
      "31": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 75
        }
      },
      "32": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 184,
          column: 15
        }
      },
      "33": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 57
        }
      },
      "34": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 195,
          column: 11
        }
      },
      "35": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 57
        }
      },
      "36": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 204,
          column: 11
        }
      },
      "37": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 267,
          column: 5
        }
      },
      "38": {
        start: {
          line: 210,
          column: 27
        },
        end: {
          line: 210,
          column: 96
        }
      },
      "39": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "40": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 216,
          column: 15
        }
      },
      "41": {
        start: {
          line: 218,
          column: 28
        },
        end: {
          line: 218,
          column: 48
        }
      },
      "42": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 58
        }
      },
      "43": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 220,
          column: 81
        }
      },
      "44": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 221,
          column: 75
        }
      },
      "45": {
        start: {
          line: 222,
          column: 39
        },
        end: {
          line: 222,
          column: 65
        }
      },
      "46": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 82
        }
      },
      "47": {
        start: {
          line: 224,
          column: 24
        },
        end: {
          line: 237,
          column: 44
        }
      },
      "48": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 236,
          column: 15
        }
      },
      "49": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 240,
          column: 9
        }
      },
      "50": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 55
        }
      },
      "51": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 241,
          column: 91
        }
      },
      "52": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 243,
          column: 57
        }
      },
      "53": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 245,
          column: 46
        }
      },
      "54": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 47
        }
      },
      "55": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 247,
          column: 49
        }
      },
      "56": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 48
        }
      },
      "57": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 257,
          column: 11
        }
      },
      "58": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 259,
          column: 56
        }
      },
      "59": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 266,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 10
          }
        },
        loc: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 10
          },
          end: {
            line: 15,
            column: 11
          }
        },
        loc: {
          start: {
            line: 15,
            column: 21
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 73,
            column: 61
          },
          end: {
            line: 73,
            column: 62
          }
        },
        loc: {
          start: {
            line: 73,
            column: 87
          },
          end: {
            line: 206,
            column: 1
          }
        },
        line: 73
      },
      "4": {
        name: "POST",
        decl: {
          start: {
            line: 207,
            column: 15
          },
          end: {
            line: 207,
            column: 19
          }
        },
        loc: {
          start: {
            line: 207,
            column: 29
          },
          end: {
            line: 268,
            column: 1
          }
        },
        line: 207
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 224,
            column: 53
          },
          end: {
            line: 224,
            column: 54
          }
        },
        loc: {
          start: {
            line: 224,
            column: 63
          },
          end: {
            line: 237,
            column: 9
          }
        },
        line: 224
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 79,
            column: 30
          },
          end: {
            line: 79,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 30
          },
          end: {
            line: 79,
            column: 54
          }
        }, {
          start: {
            line: 79,
            column: 58
          },
          end: {
            line: 79,
            column: 61
          }
        }],
        line: 79
      },
      "1": {
        loc: {
          start: {
            line: 80,
            column: 31
          },
          end: {
            line: 80,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 31
          },
          end: {
            line: 80,
            column: 56
          }
        }, {
          start: {
            line: 80,
            column: 60
          },
          end: {
            line: 80,
            column: 64
          }
        }],
        line: 80
      },
      "2": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "3": {
        loc: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "4": {
        loc: {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        }, {
          start: {
            line: 156,
            column: 15
          },
          end: {
            line: 185,
            column: 9
          }
        }],
        line: 117
      },
      "5": {
        loc: {
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 117,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 117,
            column: 30
          }
        }, {
          start: {
            line: 117,
            column: 34
          },
          end: {
            line: 117,
            column: 48
          }
        }],
        line: 117
      },
      "6": {
        loc: {
          start: {
            line: 201,
            column: 19
          },
          end: {
            line: 201,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 201,
            column: 44
          },
          end: {
            line: 201,
            column: 57
          }
        }, {
          start: {
            line: 201,
            column: 60
          },
          end: {
            line: 201,
            column: 73
          }
        }],
        line: 201
      },
      "7": {
        loc: {
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "8": {
        loc: {
          start: {
            line: 222,
            column: 39
          },
          end: {
            line: 222,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 222,
            column: 39
          },
          end: {
            line: 222,
            column: 60
          }
        }, {
          start: {
            line: 222,
            column: 64
          },
          end: {
            line: 222,
            column: 65
          }
        }],
        line: 222
      },
      "9": {
        loc: {
          start: {
            line: 229,
            column: 29
          },
          end: {
            line: 229,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 29
          },
          end: {
            line: 229,
            column: 48
          }
        }, {
          start: {
            line: 229,
            column: 52
          },
          end: {
            line: 229,
            column: 56
          }
        }],
        line: 229
      },
      "10": {
        loc: {
          start: {
            line: 230,
            column: 33
          },
          end: {
            line: 230,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 230,
            column: 33
          },
          end: {
            line: 230,
            column: 56
          }
        }, {
          start: {
            line: 230,
            column: 60
          },
          end: {
            line: 230,
            column: 64
          }
        }],
        line: 230
      },
      "11": {
        loc: {
          start: {
            line: 232,
            column: 27
          },
          end: {
            line: 232,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 232,
            column: 27
          },
          end: {
            line: 232,
            column: 50
          }
        }, {
          start: {
            line: 232,
            column: 54
          },
          end: {
            line: 232,
            column: 55
          }
        }],
        line: 232
      },
      "12": {
        loc: {
          start: {
            line: 233,
            column: 32
          },
          end: {
            line: 233,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 233,
            column: 57
          },
          end: {
            line: 233,
            column: 89
          }
        }, {
          start: {
            line: 233,
            column: 92
          },
          end: {
            line: 233,
            column: 96
          }
        }],
        line: 233
      },
      "13": {
        loc: {
          start: {
            line: 234,
            column: 35
          },
          end: {
            line: 234,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 234,
            column: 63
          },
          end: {
            line: 234,
            column: 98
          }
        }, {
          start: {
            line: 234,
            column: 101
          },
          end: {
            line: 234,
            column: 103
          }
        }],
        line: 234
      },
      "14": {
        loc: {
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 240,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 240,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "15": {
        loc: {
          start: {
            line: 263,
            column: 19
          },
          end: {
            line: 263,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 263,
            column: 44
          },
          end: {
            line: 263,
            column: 57
          }
        }, {
          start: {
            line: 263,
            column: 60
          },
          end: {
            line: 263,
            column: 73
          }
        }],
        line: 263
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/products/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { revalidateTag, revalidatePath } from 'next/cache';\nimport { PrismaClient } from '@prisma/client';\nimport { getShopId } from '@/lib/utils/middleware';\nimport { cacheService } from '@/lib/cache';\n\nimport { safeQuery, prisma } from '@/lib/prisma';\nimport { ShopAccessControl } from '@/lib/utils/shopMiddleware';\nimport { validateTokenPermission } from '@/lib/auth';\n\n\n// Default fallback data for products\nconst defaultProductsData = [\n    { id: 1, name: 'Cricket Bat', sku: 'CB001', description: 'Professional cricket bat', price: 15000, weightedAverageCost: 12000, category_name: 'Cricket' },\n    { id: 2, name: 'Cricket Ball', sku: 'CB002', description: 'Match quality cricket ball', price: 2500, weightedAverageCost: 1800, category_name: 'Cricket' },\n    { id: 3, name: 'Football', sku: 'FB001', description: 'Size 5 football', price: 5000, weightedAverageCost: 3500, category_name: 'Football' },\n    { id: 4, name: 'Basketball', sku: 'BB001', description: 'Indoor basketball', price: 6000, weightedAverageCost: 4200, category_name: 'Basketball' },\n    { id: 5, name: 'Tennis Racket', sku: 'TR001', description: 'Professional tennis racket', price: 12000, weightedAverageCost: 8400, category_name: 'Tennis' }\n];\n\nexport const GET = ShopAccessControl.withShopAccess(async (request: NextRequest, context) => {\n    try {\n        const { searchParams } = new URL(request.url);\n        const categoryId = searchParams.get('categoryId');\n        const search = searchParams.get('search');\n        const includeInactive = searchParams.get('includeInactive') === 'true';\n        const page = parseInt(searchParams.get('page') || '1');\n        const limit = parseInt(searchParams.get('limit') || '50');\n\n        console.log('Products API - Shop context:', {\n            shopId: context.shopId,\n            isFiltered: context.isFiltered,\n            isAdmin: context.isAdmin,\n            userShopId: context.userShopId\n        });\n\n        const skip = (page - 1) * limit;\n\n        // Build where clause\n        const where: any = {};\n\n        if (categoryId) {\n            where.categoryId = parseInt(categoryId);\n        }\n\n        if (search) {\n            where.OR = [\n                {\n                    name: {\n                        contains: search,\n                        mode: 'insensitive'\n                    }\n                },\n                {\n                    sku: {\n                        contains: search,\n                        mode: 'insensitive'\n                    }\n                },\n                {\n                    barcode: {\n                        contains: search,\n                        mode: 'insensitive'\n                    }\n                }\n            ];\n        }\n\n        // Apply shop-based filtering for inventory\n        let products;\n        if (context.isFiltered && context.shopId) {\n            console.log(`Filtering products by shopId: ${context.shopId}`);\n            products = await prisma.product.findMany({\n                where: {\n                    ...where,\n                    inventoryItems: {\n                        some: {\n                            shopId: context.shopId\n                        }\n                    }\n                },\n                include: {\n                    category: {\n                        select: {\n                            id: true,\n                            name: true\n                        }\n                    },\n                    inventoryItems: {\n                        where: {\n                            shopId: context.shopId\n                        },\n                        include: {\n                            shop: {\n                                select: {\n                                    id: true,\n                                    name: true,\n                                    location: true\n                                }\n                            }\n                        }\n                    }\n                },\n                orderBy: {\n                    name: 'asc'\n                },\n                skip,\n                take: limit\n            });\n        } else {\n            console.log('Fetching all products (admin or no shop filter)');\n            products = await prisma.product.findMany({\n                where,\n                include: {\n                    category: {\n                        select: {\n                            id: true,\n                            name: true\n                        }\n                    },\n                    inventoryItems: {\n                        include: {\n                            shop: {\n                                select: {\n                                    id: true,\n                                    name: true,\n                                    location: true\n                                }\n                            }\n                        }\n                    }\n                },\n                orderBy: {\n                    name: 'asc'\n                },\n                skip,\n                take: limit\n            });\n        }\n\n        console.log(`Found ${products.length} products`);\n\n        return NextResponse.json({\n            success: true,\n            data: products,\n            meta: {\n                shopFiltered: context.isFiltered,\n                shopId: context.shopId,\n                totalItems: products.length\n            }\n        });\n    } catch (error) {\n        console.error('Error fetching products:', error);\n        return NextResponse.json({\n            success: false,\n            message: 'Error fetching products',\n            error: error instanceof Error ? error.message : String(error)\n        }, { status: 500 });\n    }\n});\n\nexport async function POST(request: NextRequest) {\n    try {\n        // Validate token and permissions\n        const authResult = await validateTokenPermission(request, 'inventory:manage');\n        if (!authResult.isValid) {\n            return NextResponse.json({ error: authResult.message }, { status: 401 });\n        }\n\n        const productData = await request.json();\n        console.log('Received productData:', productData);\n        console.log('productData.basePrice type:', typeof productData.basePrice);\n        console.log('productData.basePrice value:', productData.basePrice);\n\n        const newWeightedAverageCost = productData.basePrice || 0;\n        console.log('Calculated newWeightedAverageCost:', newWeightedAverageCost);\n\n        const product = await safeQuery(\n            async () => {\n                return await prisma.product.create({\n                    data: {\n                        name: productData.name,\n                        sku: productData.sku,\n                        barcode: productData.barcode || null,\n                        description: productData.description || null,\n                        weightedAverageCost: newWeightedAverageCost,\n                        price: productData.retailPrice || 0,\n                        categoryId: productData.categoryId ? parseInt(productData.categoryId) : null,\n                        minStockLevel: productData.minStockLevel ? parseInt(productData.minStockLevel) : 10,\n                    }\n                });\n            },\n            null,\n            'Failed to create product'\n        );\n\n        if (!product) {\n            throw new Error('Product creation failed');\n        }\n\n        console.log('Product created successfully with WAC:', product.weightedAverageCost);\n\n        // Invalidate inventory cache\n        await cacheService.invalidateInventory();\n\n        // Revalidate Next.js cached pages\n        revalidateTag('products');\n        revalidateTag('inventory');\n        revalidatePath('/inventory');\n        revalidatePath('/products');\n\n        // Emit WebSocket event for real-time updates using utility function\n        // Real-time updates now handled by polling system\n\n        return NextResponse.json({\n            success: true,\n            message: 'Product created successfully',\n            data: product\n        }, { status: 201 });\n    } catch (error) {\n        console.error('Error creating product:', error);\n        return NextResponse.json({\n            success: false,\n            message: 'Error creating product',\n            error: error instanceof Error ? error.message : String(error)\n        }, { status: 500 });\n    }\n}"],
      names: ["GET", "POST", "defaultProductsData", "id", "name", "sku", "description", "price", "weightedAverageCost", "category_name", "ShopAccessControl", "withShopAccess", "request", "context", "searchParams", "URL", "url", "categoryId", "get", "search", "includeInactive", "page", "parseInt", "limit", "console", "log", "shopId", "isFiltered", "isAdmin", "userShopId", "skip", "where", "OR", "contains", "mode", "barcode", "products", "prisma", "product", "findMany", "inventoryItems", "some", "include", "category", "select", "shop", "location", "orderBy", "take", "length", "NextResponse", "json", "success", "data", "meta", "shopFiltered", "totalItems", "error", "message", "Error", "String", "status", "authResult", "validateTokenPermission", "isValid", "productData", "basePrice", "newWeightedAverageCost", "safeQuery", "create", "retailPrice", "minStockLevel", "cacheService", "invalidateInventory", "revalidateTag", "revalidatePath"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2c9c9bb16a8bfbc99e26bb5a04accc65b633d386"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_11b6nqn25m = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_11b6nqn25m();
cov_11b6nqn25m().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_11b6nqn25m().f[0]++;
  cov_11b6nqn25m().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_11b6nqn25m().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_11b6nqn25m().s[3]++;
_export(exports, {
  GET: function () {
    /* istanbul ignore next */
    cov_11b6nqn25m().f[1]++;
    cov_11b6nqn25m().s[4]++;
    return GET;
  },
  POST: function () {
    /* istanbul ignore next */
    cov_11b6nqn25m().f[2]++;
    cov_11b6nqn25m().s[5]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_11b6nqn25m().s[6]++, require("next/server"));
const _cache =
/* istanbul ignore next */
(cov_11b6nqn25m().s[7]++, require("next/cache"));
const _cache1 =
/* istanbul ignore next */
(cov_11b6nqn25m().s[8]++, require("../../../lib/cache"));
const _prisma =
/* istanbul ignore next */
(cov_11b6nqn25m().s[9]++, require("../../../lib/prisma"));
const _shopMiddleware =
/* istanbul ignore next */
(cov_11b6nqn25m().s[10]++, require("../../../lib/utils/shopMiddleware"));
const _auth =
/* istanbul ignore next */
(cov_11b6nqn25m().s[11]++, require("../../../lib/auth"));
// Default fallback data for products
const defaultProductsData =
/* istanbul ignore next */
(cov_11b6nqn25m().s[12]++, [{
  id: 1,
  name: "Cricket Bat",
  sku: "CB001",
  description: "Professional cricket bat",
  price: 15000,
  weightedAverageCost: 12000,
  category_name: "Cricket"
}, {
  id: 2,
  name: "Cricket Ball",
  sku: "CB002",
  description: "Match quality cricket ball",
  price: 2500,
  weightedAverageCost: 1800,
  category_name: "Cricket"
}, {
  id: 3,
  name: "Football",
  sku: "FB001",
  description: "Size 5 football",
  price: 5000,
  weightedAverageCost: 3500,
  category_name: "Football"
}, {
  id: 4,
  name: "Basketball",
  sku: "BB001",
  description: "Indoor basketball",
  price: 6000,
  weightedAverageCost: 4200,
  category_name: "Basketball"
}, {
  id: 5,
  name: "Tennis Racket",
  sku: "TR001",
  description: "Professional tennis racket",
  price: 12000,
  weightedAverageCost: 8400,
  category_name: "Tennis"
}]);
const GET =
/* istanbul ignore next */
(cov_11b6nqn25m().s[13]++, _shopMiddleware.ShopAccessControl.withShopAccess(async (request, context) => {
  /* istanbul ignore next */
  cov_11b6nqn25m().f[3]++;
  cov_11b6nqn25m().s[14]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[15]++, new URL(request.url));
    const categoryId =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[16]++, searchParams.get("categoryId"));
    const search =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[17]++, searchParams.get("search"));
    const includeInactive =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[18]++, searchParams.get("includeInactive") === "true");
    const page =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[19]++, parseInt(
    /* istanbul ignore next */
    (cov_11b6nqn25m().b[0][0]++, searchParams.get("page")) ||
    /* istanbul ignore next */
    (cov_11b6nqn25m().b[0][1]++, "1")));
    const limit =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[20]++, parseInt(
    /* istanbul ignore next */
    (cov_11b6nqn25m().b[1][0]++, searchParams.get("limit")) ||
    /* istanbul ignore next */
    (cov_11b6nqn25m().b[1][1]++, "50")));
    /* istanbul ignore next */
    cov_11b6nqn25m().s[21]++;
    console.log("Products API - Shop context:", {
      shopId: context.shopId,
      isFiltered: context.isFiltered,
      isAdmin: context.isAdmin,
      userShopId: context.userShopId
    });
    const skip =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[22]++, (page - 1) * limit);
    // Build where clause
    const where =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[23]++, {});
    /* istanbul ignore next */
    cov_11b6nqn25m().s[24]++;
    if (categoryId) {
      /* istanbul ignore next */
      cov_11b6nqn25m().b[2][0]++;
      cov_11b6nqn25m().s[25]++;
      where.categoryId = parseInt(categoryId);
    } else
    /* istanbul ignore next */
    {
      cov_11b6nqn25m().b[2][1]++;
    }
    cov_11b6nqn25m().s[26]++;
    if (search) {
      /* istanbul ignore next */
      cov_11b6nqn25m().b[3][0]++;
      cov_11b6nqn25m().s[27]++;
      where.OR = [{
        name: {
          contains: search,
          mode: "insensitive"
        }
      }, {
        sku: {
          contains: search,
          mode: "insensitive"
        }
      }, {
        barcode: {
          contains: search,
          mode: "insensitive"
        }
      }];
    } else
    /* istanbul ignore next */
    {
      cov_11b6nqn25m().b[3][1]++;
    }
    // Apply shop-based filtering for inventory
    let products;
    /* istanbul ignore next */
    cov_11b6nqn25m().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_11b6nqn25m().b[5][0]++, context.isFiltered) &&
    /* istanbul ignore next */
    (cov_11b6nqn25m().b[5][1]++, context.shopId)) {
      /* istanbul ignore next */
      cov_11b6nqn25m().b[4][0]++;
      cov_11b6nqn25m().s[29]++;
      console.log(`Filtering products by shopId: ${context.shopId}`);
      /* istanbul ignore next */
      cov_11b6nqn25m().s[30]++;
      products = await _prisma.prisma.product.findMany({
        where: {
          ...where,
          inventoryItems: {
            some: {
              shopId: context.shopId
            }
          }
        },
        include: {
          category: {
            select: {
              id: true,
              name: true
            }
          },
          inventoryItems: {
            where: {
              shopId: context.shopId
            },
            include: {
              shop: {
                select: {
                  id: true,
                  name: true,
                  location: true
                }
              }
            }
          }
        },
        orderBy: {
          name: "asc"
        },
        skip,
        take: limit
      });
    } else {
      /* istanbul ignore next */
      cov_11b6nqn25m().b[4][1]++;
      cov_11b6nqn25m().s[31]++;
      console.log("Fetching all products (admin or no shop filter)");
      /* istanbul ignore next */
      cov_11b6nqn25m().s[32]++;
      products = await _prisma.prisma.product.findMany({
        where,
        include: {
          category: {
            select: {
              id: true,
              name: true
            }
          },
          inventoryItems: {
            include: {
              shop: {
                select: {
                  id: true,
                  name: true,
                  location: true
                }
              }
            }
          }
        },
        orderBy: {
          name: "asc"
        },
        skip,
        take: limit
      });
    }
    /* istanbul ignore next */
    cov_11b6nqn25m().s[33]++;
    console.log(`Found ${products.length} products`);
    /* istanbul ignore next */
    cov_11b6nqn25m().s[34]++;
    return _server.NextResponse.json({
      success: true,
      data: products,
      meta: {
        shopFiltered: context.isFiltered,
        shopId: context.shopId,
        totalItems: products.length
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_11b6nqn25m().s[35]++;
    console.error("Error fetching products:", error);
    /* istanbul ignore next */
    cov_11b6nqn25m().s[36]++;
    return _server.NextResponse.json({
      success: false,
      message: "Error fetching products",
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_11b6nqn25m().b[6][0]++, error.message) :
      /* istanbul ignore next */
      (cov_11b6nqn25m().b[6][1]++, String(error))
    }, {
      status: 500
    });
  }
}));
async function POST(request) {
  /* istanbul ignore next */
  cov_11b6nqn25m().f[4]++;
  cov_11b6nqn25m().s[37]++;
  try {
    // Validate token and permissions
    const authResult =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[38]++, await (0, _auth.validateTokenPermission)(request, "inventory:manage"));
    /* istanbul ignore next */
    cov_11b6nqn25m().s[39]++;
    if (!authResult.isValid) {
      /* istanbul ignore next */
      cov_11b6nqn25m().b[7][0]++;
      cov_11b6nqn25m().s[40]++;
      return _server.NextResponse.json({
        error: authResult.message
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b6nqn25m().b[7][1]++;
    }
    const productData =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[41]++, await request.json());
    /* istanbul ignore next */
    cov_11b6nqn25m().s[42]++;
    console.log("Received productData:", productData);
    /* istanbul ignore next */
    cov_11b6nqn25m().s[43]++;
    console.log("productData.basePrice type:", typeof productData.basePrice);
    /* istanbul ignore next */
    cov_11b6nqn25m().s[44]++;
    console.log("productData.basePrice value:", productData.basePrice);
    const newWeightedAverageCost =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[45]++,
    /* istanbul ignore next */
    (cov_11b6nqn25m().b[8][0]++, productData.basePrice) ||
    /* istanbul ignore next */
    (cov_11b6nqn25m().b[8][1]++, 0));
    /* istanbul ignore next */
    cov_11b6nqn25m().s[46]++;
    console.log("Calculated newWeightedAverageCost:", newWeightedAverageCost);
    const product =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[47]++, await (0, _prisma.safeQuery)(async () => {
      /* istanbul ignore next */
      cov_11b6nqn25m().f[5]++;
      cov_11b6nqn25m().s[48]++;
      return await _prisma.prisma.product.create({
        data: {
          name: productData.name,
          sku: productData.sku,
          barcode:
          /* istanbul ignore next */
          (cov_11b6nqn25m().b[9][0]++, productData.barcode) ||
          /* istanbul ignore next */
          (cov_11b6nqn25m().b[9][1]++, null),
          description:
          /* istanbul ignore next */
          (cov_11b6nqn25m().b[10][0]++, productData.description) ||
          /* istanbul ignore next */
          (cov_11b6nqn25m().b[10][1]++, null),
          weightedAverageCost: newWeightedAverageCost,
          price:
          /* istanbul ignore next */
          (cov_11b6nqn25m().b[11][0]++, productData.retailPrice) ||
          /* istanbul ignore next */
          (cov_11b6nqn25m().b[11][1]++, 0),
          categoryId: productData.categoryId ?
          /* istanbul ignore next */
          (cov_11b6nqn25m().b[12][0]++, parseInt(productData.categoryId)) :
          /* istanbul ignore next */
          (cov_11b6nqn25m().b[12][1]++, null),
          minStockLevel: productData.minStockLevel ?
          /* istanbul ignore next */
          (cov_11b6nqn25m().b[13][0]++, parseInt(productData.minStockLevel)) :
          /* istanbul ignore next */
          (cov_11b6nqn25m().b[13][1]++, 10)
        }
      });
    }, null, "Failed to create product"));
    /* istanbul ignore next */
    cov_11b6nqn25m().s[49]++;
    if (!product) {
      /* istanbul ignore next */
      cov_11b6nqn25m().b[14][0]++;
      cov_11b6nqn25m().s[50]++;
      throw new Error("Product creation failed");
    } else
    /* istanbul ignore next */
    {
      cov_11b6nqn25m().b[14][1]++;
    }
    cov_11b6nqn25m().s[51]++;
    console.log("Product created successfully with WAC:", product.weightedAverageCost);
    // Invalidate inventory cache
    /* istanbul ignore next */
    cov_11b6nqn25m().s[52]++;
    await _cache1.cacheService.invalidateInventory();
    // Revalidate Next.js cached pages
    /* istanbul ignore next */
    cov_11b6nqn25m().s[53]++;
    (0, _cache.revalidateTag)("products");
    /* istanbul ignore next */
    cov_11b6nqn25m().s[54]++;
    (0, _cache.revalidateTag)("inventory");
    /* istanbul ignore next */
    cov_11b6nqn25m().s[55]++;
    (0, _cache.revalidatePath)("/inventory");
    /* istanbul ignore next */
    cov_11b6nqn25m().s[56]++;
    (0, _cache.revalidatePath)("/products");
    // Emit WebSocket event for real-time updates using utility function
    // Real-time updates now handled by polling system
    /* istanbul ignore next */
    cov_11b6nqn25m().s[57]++;
    return _server.NextResponse.json({
      success: true,
      message: "Product created successfully",
      data: product
    }, {
      status: 201
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_11b6nqn25m().s[58]++;
    console.error("Error creating product:", error);
    /* istanbul ignore next */
    cov_11b6nqn25m().s[59]++;
    return _server.NextResponse.json({
      success: false,
      message: "Error creating product",
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_11b6nqn25m().b[15][0]++, error.message) :
      /* istanbul ignore next */
      (cov_11b6nqn25m().b[15][1]++, String(error))
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,