{"version":3,"names":["InvoiceDetail","cov_1seq0uhjo2","s","StatusBadge","status","f","bgColor","icon","b","_jsxruntime","jsx","_lucidereact","CheckCircle","className","Clock","AlertTriangle","jsxs","router","_navigation","useRouter","params","useParams","invoice","setInvoice","_react","useState","loading","setLoading","error","setError","confirmDelete","setConfirmDelete","printRef","useRef","isSendingSms","setIsSendingSms","smsStatus","setSmsStatus","canManageInvoices","_usePermission","usePermission","handlePrint","_reacttoprint","useReactToPrint","contentRef","documentTitle","invoiceNumber","onAfterPrint","console","log","useEffect","id","fetchInvoice","response","fetch","ok","Error","statusText","data","json","err","message","handleStatusChange","newStatus","method","headers","body","JSON","stringify","updatedInvoice","alert","handleDeleteInvoice","errorData","includes","push","handleDownloadPDF","_pdfGenerator","generateInvoicePDF","handleSendSms","invoiceId","result","success","_MainLayout","default","Array","map","_","i","_Button","Button","variant","size","onClick","ArrowLeft","paidAmount","payments","reduce","sum","payment","amount","remainingBalance","paymentMethod","total","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","dueDate","createdAt","setDate","getDate","Printer","disabled","Bell","toLowerCase","DollarSign","Download","ref","_InvoiceTemplate"],"sources":["/Users/sachin/Documents/md-sports-/src/app/invoices/[id]/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState, useRef } from 'react';\nimport { useRouter, useParams } from 'next/navigation';\nimport MainLayout from '@/components/layout/MainLayout';\nimport { Button } from '@/components/ui/Button';\nimport { Printer, ArrowLeft, Download, Bell, CheckCircle, Clock, AlertTriangle, DollarSign } from 'lucide-react';\nimport { useReactToPrint } from 'react-to-print';\nimport { formatCurrency } from '@/utils/formatters';\nimport { generateInvoicePDF } from '@/utils/pdfGenerator';\nimport InvoiceTemplate from '@/components/templates/InvoiceTemplate';\nimport { usePermission } from '@/hooks/usePermission';\n\n// Invoice and related interfaces\ninterface Product {\n    id: number;\n    name: string;\n    description?: string;\n    price: number;\n}\n\ninterface InvoiceItem {\n    id: number;\n    productId: number;\n    invoiceId: number;\n    quantity: number;\n    price: number;\n    total: number;\n    product: Product;\n}\n\ninterface Customer {\n    id: number;\n    name: string;\n    email?: string;\n    phone?: string;\n    address?: string | {\n        mainAddress?: string;\n        city?: string;\n        postalCode?: string;\n        contactPerson?: string;\n        contactPersonPhone?: string;\n        customerType?: string;\n        paymentType?: string;\n        creditLimit?: number | null;\n        creditPeriod?: number | null;\n        taxId?: string;\n        notes?: string;\n    };\n    city?: string;\n    postalCode?: string;\n    contactPerson?: string;\n    contactPersonPhone?: string;\n}\n\ninterface Payment {\n    id: number;\n    invoiceId: number;\n    customerId: number;\n    amount: number;\n    paymentMethod: string;\n    referenceNumber?: string;\n    createdAt: string;\n    receipt?: {\n        id: number;\n        receiptNumber: string;\n        receiptDate: string;\n    };\n}\n\ninterface Invoice {\n    id: number;\n    invoiceNumber: string;\n    customerId: number;\n    total: number;\n    status: string;\n    createdAt: string;\n    updatedAt: string;\n    customer: Customer;\n    items: InvoiceItem[];\n    payments: Payment[];\n    paymentMethod: string;\n    dueDate?: string;\n}\n\n// Status badge component\nconst StatusBadge = ({ status }: { status: string }) => {\n    let bgColor = 'bg-gray-100 text-gray-800';\n    let icon = null;\n\n    switch (status) {\n        case 'Paid':\n            bgColor = 'bg-green-100 text-green-800';\n            icon = <CheckCircle className=\"w-4 h-4 mr-1\" />;\n            break;\n        case 'Pending':\n            bgColor = 'bg-yellow-100 text-yellow-800';\n            icon = <Clock className=\"w-4 h-4 mr-1\" />;\n            break;\n        case 'Overdue':\n            bgColor = 'bg-red-100 text-red-800';\n            icon = <AlertTriangle className=\"w-4 h-4 mr-1\" />;\n            break;\n    }\n\n    return (\n        <span className={`inline-flex items-center rounded-full px-2.5 py-0.5 text-sm font-medium ${bgColor}`}>\n            {icon}\n            {status}\n        </span>\n    );\n};\n\nexport default function InvoiceDetail() {\n    const router = useRouter();\n    const params = useParams();\n    const [invoice, setInvoice] = useState<Invoice | null>(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n    const [confirmDelete, setConfirmDelete] = useState(false);\n    const printRef = useRef<HTMLDivElement>(null);\n    const [isSendingSms, setIsSendingSms] = useState(false);\n    const [smsStatus, setSmsStatus] = useState<{ success: boolean; message: string } | null>(null);\n    const { canManageInvoices } = usePermission();\n\n    const handlePrint = useReactToPrint({\n        contentRef: printRef,\n        documentTitle: invoice ? `Invoice-${invoice.invoiceNumber}` : 'Invoice',\n        onAfterPrint: () => console.log('Printed successfully'),\n    });\n\n    useEffect(() => {\n        if (!params.id) return;\n\n        const fetchInvoice = async () => {\n            try {\n                const response = await fetch(`/api/invoices/${params.id}`);\n                if (!response.ok) {\n                    throw new Error(`Failed to fetch invoice: ${response.statusText}`);\n                }\n                const data = await response.json();\n                setInvoice(data);\n            } catch (err) {\n                console.error('Error fetching invoice:', err);\n                setError(err instanceof Error ? err.message : 'Failed to load invoice');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchInvoice();\n    }, [params.id]);\n\n    const handleStatusChange = async (newStatus: string) => {\n        if (!invoice) return;\n\n        try {\n            const response = await fetch(`/api/invoices/${invoice.id}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ status: newStatus }),\n            });\n\n            if (!response.ok) {\n                throw new Error(`Failed to update invoice: ${response.statusText}`);\n            }\n\n            const updatedInvoice = await response.json();\n            setInvoice(updatedInvoice.data);\n        } catch (err) {\n            console.error('Error updating invoice status:', err);\n            alert('Failed to update invoice status');\n        }\n    };\n\n    const handleDeleteInvoice = async () => {\n        if (!invoice) return;\n\n        try {\n            const response = await fetch(`/api/invoices/${invoice.id}`, {\n                method: 'DELETE',\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json();\n                // Check if the error is a foreign key constraint related to receipts\n                if (errorData.error && errorData.error.includes('Receipt_paymentId_fkey')) {\n                    throw new Error('This invoice has associated receipts. Please delete the receipts first before deleting this invoice.');\n                } else {\n                    throw new Error(`Failed to delete invoice: ${errorData.message || response.statusText}`);\n                }\n            }\n\n            router.push('/invoices');\n        } catch (err) {\n            console.error('Error deleting invoice:', err);\n            alert(err instanceof Error ? err.message : 'Failed to delete invoice');\n        }\n    };\n\n    const handleDownloadPDF = async () => {\n        if (!invoice) return;\n\n        // Generate PDF client-side\n        generateInvoicePDF(invoice);\n    };\n\n    // Handle sending SMS notification\n    const handleSendSms = async () => {\n        if (!invoice) return;\n\n        setIsSendingSms(true);\n        setSmsStatus(null);\n\n        try {\n            const response = await fetch('/api/sms/invoice', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ invoiceId: invoice.id }),\n            });\n\n            const result = await response.json();\n\n            setSmsStatus({\n                success: response.ok,\n                message: result.message || (response.ok ? 'SMS sent successfully' : 'Failed to send SMS')\n            });\n        } catch (error) {\n            console.error('Error sending SMS:', error);\n            setSmsStatus({\n                success: false,\n                message: 'Error sending SMS. Please try again.'\n            });\n        } finally {\n            setIsSendingSms(false);\n        }\n    };\n\n    if (loading) {\n        return (\n            <MainLayout>\n                <div className=\"max-w-5xl mx-auto py-6 space-y-6 animate-pulse\">\n                    <div className=\"h-10 bg-gray-200 rounded w-64 mb-6\"></div>\n                    <div className=\"bg-tertiary p-8 rounded-xl border border-gray-200\">\n                        <div className=\"space-y-4\">\n                            <div className=\"h-8 bg-gray-200 rounded w-1/3\"></div>\n                            <div className=\"grid grid-cols-2 gap-6\">\n                                <div className=\"space-y-2\">\n                                    <div className=\"h-4 bg-gray-200 rounded w-32\"></div>\n                                    <div className=\"h-6 bg-gray-200 rounded w-64\"></div>\n                                </div>\n                                <div className=\"space-y-2\">\n                                    <div className=\"h-4 bg-gray-200 rounded w-32\"></div>\n                                    <div className=\"h-6 bg-gray-200 rounded w-64\"></div>\n                                </div>\n                            </div>\n                            <div className=\"h-px bg-gray-200 my-6\"></div>\n                            <div className=\"space-y-4\">\n                                {[...Array(3)].map((_, i) => (\n                                    <div key={i} className=\"h-12 bg-gray-200 rounded w-full\"></div>\n                                ))}\n                            </div>\n                            <div className=\"h-px bg-gray-200 my-6\"></div>\n                            <div className=\"flex justify-end\">\n                                <div className=\"h-8 bg-gray-200 rounded w-32\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </MainLayout>\n        );\n    }\n\n    if (error) {\n        return (\n            <MainLayout>\n                <div className=\"max-w-5xl mx-auto py-6\">\n                    <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg\">\n                        <h3 className=\"text-lg font-medium\">Error</h3>\n                        <p>{error}</p>\n                        <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => router.push('/invoices')}\n                            className=\"mt-2\"\n                        >\n                            <ArrowLeft className=\"w-4 h-4 mr-2\" />\n                            Return to Invoices\n                        </Button>\n                    </div>\n                </div>\n            </MainLayout>\n        );\n    }\n\n    if (!invoice) {\n        return (\n            <MainLayout>\n                <div className=\"max-w-5xl mx-auto py-6\">\n                    <div className=\"bg-yellow-50 border border-yellow-200 text-yellow-700 px-4 py-3 rounded-lg\">\n                        <h3 className=\"text-lg font-medium\">Invoice Not Found</h3>\n                        <p>The requested invoice could not be found.</p>\n                        <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => router.push('/invoices')}\n                            className=\"mt-2\"\n                        >\n                            <ArrowLeft className=\"w-4 h-4 mr-2\" />\n                            Return to Invoices\n                        </Button>\n                    </div>\n                </div>\n            </MainLayout>\n        );\n    }\n\n    // Calculate paid amount and remaining balance\n    const paidAmount = invoice.payments?.reduce((sum, payment) => sum + payment.amount, 0) || 0;\n    // For cash payments, balance is always 0 regardless of payment records\n    const remainingBalance = invoice.paymentMethod === 'Cash' ? 0 : invoice.total - paidAmount;\n\n    // Format dates\n    const formatDate = (dateString: string) => {\n        const date = new Date(dateString);\n        return date.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });\n    };\n\n    // Due date calculation - for cash payments, there is no due date\n    const dueDate = invoice.dueDate ? new Date(invoice.dueDate) :\n        (invoice.paymentMethod === 'Cash' ?\n            new Date(invoice.createdAt) : // For cash, due date is same as creation date\n            new Date(new Date(invoice.createdAt).setDate(new Date(invoice.createdAt).getDate() + 30)));\n\n    return (\n        <MainLayout>\n            <div className=\"max-w-5xl mx-auto py-6\">\n                {/* Action Bar - Compact version */}\n                <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 mb-6 print:hidden\">\n                    <div className=\"flex items-center\">\n                        <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => router.push('/invoices')}\n                            className=\"mr-2\"\n                        >\n                            <ArrowLeft className=\"w-4 h-4 mr-2\" />\n                            Back\n                        </Button>\n                        <h1 className=\"text-xl font-semibold text-gray-900\">Invoice #{invoice.invoiceNumber}</h1>\n                    </div>\n\n                    <div className=\"flex flex-wrap gap-2\">\n                        <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={handlePrint}\n                        >\n                            <Printer className=\"w-4 h-4 mr-2\" />\n                            Print\n                        </Button>\n\n                        <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={handleSendSms}\n                            disabled={isSendingSms}\n                        >\n                            <Bell className=\"w-4 h-4 mr-2\" />\n                            {isSendingSms ? 'Sending...' : 'Send SMS'}\n                        </Button>\n\n                        {/* Only show Record Payment button for unpaid invoices */}\n                        {(invoice.status.toLowerCase() === 'pending' || invoice.status.toLowerCase() === 'partial') && (\n                            <Button\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={() => router.push(`/payments/simple?invoiceId=${invoice.id}`)}\n                            >\n                                <DollarSign className=\"w-4 h-4 mr-2\" />\n                                Record Payment\n                            </Button>\n                        )}\n\n                        <Button\n                            variant=\"primary\"\n                            size=\"sm\"\n                            onClick={handleDownloadPDF}\n                        >\n                            <Download className=\"w-4 h-4 mr-2\" />\n                            Download PDF\n                        </Button>\n                    </div>\n                </div>\n\n                {/* SMS Status Message */}\n                {smsStatus && (\n                    <div className={`mb-4 p-3 rounded-md print:hidden ${smsStatus.success ? 'bg-green-50 border border-green-200 text-green-700' : 'bg-red-50 border border-red-200 text-red-700'}`}>\n                        <p className=\"text-sm flex items-center\">\n                            {smsStatus.success ? (\n                                <CheckCircle className=\"w-4 h-4 mr-2\" />\n                            ) : (\n                                <AlertTriangle className=\"w-4 h-4 mr-2\" />\n                            )}\n                            {smsStatus.message}\n                        </p>\n                    </div>\n                )}\n\n                {/* Invoice Template - Main Content */}\n                <div ref={printRef} className=\"bg-white\">\n                    <InvoiceTemplate invoice={invoice} />\n                </div>\n            </div>\n        </MainLayout>\n    );\n}"],"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","ignoreList":[]}