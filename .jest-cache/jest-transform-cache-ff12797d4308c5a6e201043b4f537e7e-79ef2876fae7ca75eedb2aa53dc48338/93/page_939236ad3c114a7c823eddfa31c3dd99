3ffa3a95c7d1ef7bac65414efde7dd23
"use strict";

/* istanbul ignore next */
function cov_se8mu5i7n() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/invoices/super-optimized/page.tsx";
  var hash = "d81332eb9e2c3923dc5e104f53e60c97c994827b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/invoices/super-optimized/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 26
        }
      },
      "7": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 48
        }
      },
      "8": {
        start: {
          line: 24,
          column: 34
        },
        end: {
          line: 24,
          column: 108
        }
      },
      "9": {
        start: {
          line: 25,
          column: 15
        },
        end: {
          line: 25,
          column: 31
        }
      },
      "10": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 46
        }
      },
      "11": {
        start: {
          line: 27,
          column: 15
        },
        end: {
          line: 27,
          column: 36
        }
      },
      "12": {
        start: {
          line: 28,
          column: 52
        },
        end: {
          line: 28,
          column: 130
        }
      },
      "13": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 6
        }
      },
      "14": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 60,
          column: 7
        }
      },
      "15": {
        start: {
          line: 51,
          column: 45
        },
        end: {
          line: 53,
          column: 29
        }
      },
      "16": {
        start: {
          line: 62,
          column: 23
        },
        end: {
          line: 62,
          column: 25
        }
      },
      "17": {
        start: {
          line: 63,
          column: 18
        },
        end: {
          line: 63,
          column: 21
        }
      },
      "18": {
        start: {
          line: 65,
          column: 35
        },
        end: {
          line: 259,
          column: 2
        }
      },
      "19": {
        start: {
          line: 66,
          column: 17
        },
        end: {
          line: 66,
          column: 44
        }
      },
      "20": {
        start: {
          line: 68,
          column: 24
        },
        end: {
          line: 68,
          column: 26
        }
      },
      "21": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 64
        }
      },
      "22": {
        start: {
          line: 69,
          column: 36
        },
        end: {
          line: 69,
          column: 64
        }
      },
      "23": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 92
        }
      },
      "24": {
        start: {
          line: 70,
          column: 50
        },
        end: {
          line: 70,
          column: 92
        }
      },
      "25": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 64
        }
      },
      "26": {
        start: {
          line: 71,
          column: 36
        },
        end: {
          line: 71,
          column: 64
        }
      },
      "27": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 89,
          column: 5
        }
      },
      "28": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 88,
          column: 10
        }
      },
      "29": {
        start: {
          line: 91,
          column: 18
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "30": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "31": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 98,
          column: 14
        }
      },
      "32": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 18
        }
      },
      "33": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 103,
          column: 14
        }
      },
      "34": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 18
        }
      },
      "35": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 108,
          column: 14
        }
      },
      "36": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 18
        }
      },
      "37": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 115,
          column: 14
        }
      },
      "38": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 18
        }
      },
      "39": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 250,
          column: 5
        }
      },
      "40": {
        start: {
          line: 120,
          column: 49
        },
        end: {
          line: 207,
          column: 10
        }
      },
      "41": {
        start: {
          line: 209,
          column: 25
        },
        end: {
          line: 222,
          column: 15
        }
      },
      "42": {
        start: {
          line: 209,
          column: 49
        },
        end: {
          line: 222,
          column: 13
        }
      },
      "43": {
        start: {
          line: 221,
          column: 58
        },
        end: {
          line: 221,
          column: 72
        }
      },
      "44": {
        start: {
          line: 223,
          column: 27
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "45": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 235,
          column: 10
        }
      },
      "46": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 67
        }
      },
      "47": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 249,
          column: 10
        }
      },
      "48": {
        start: {
          line: 261,
          column: 19
        },
        end: {
          line: 261,
          column: 37
        }
      },
      "49": {
        start: {
          line: 263,
          column: 17
        },
        end: {
          line: 270,
          column: 6
        }
      },
      "50": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 279,
          column: 7
        }
      },
      "51": {
        start: {
          line: 281,
          column: 16
        },
        end: {
          line: 281,
          column: 31
        }
      },
      "52": {
        start: {
          line: 282,
          column: 19
        },
        end: {
          line: 282,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 13
          },
          end: {
            line: 13,
            column: 14
          }
        },
        loc: {
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 13
          },
          end: {
            line: 16,
            column: 14
          }
        },
        loc: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 19,
            column: 17
          }
        },
        loc: {
          start: {
            line: 19,
            column: 27
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 33
          }
        },
        loc: {
          start: {
            line: 29,
            column: 39
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 29
      },
      "5": {
        name: "SuperOptimizedSkeleton",
        decl: {
          start: {
            line: 35,
            column: 9
          },
          end: {
            line: 35,
            column: 31
          }
        },
        loc: {
          start: {
            line: 35,
            column: 34
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 35
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 51,
            column: 26
          },
          end: {
            line: 51,
            column: 27
          }
        },
        loc: {
          start: {
            line: 51,
            column: 45
          },
          end: {
            line: 53,
            column: 29
          }
        },
        line: 51
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 65,
            column: 62
          },
          end: {
            line: 65,
            column: 63
          }
        },
        loc: {
          start: {
            line: 65,
            column: 147
          },
          end: {
            line: 251,
            column: 1
          }
        },
        line: 65
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 209,
            column: 41
          },
          end: {
            line: 209,
            column: 42
          }
        },
        loc: {
          start: {
            line: 209,
            column: 49
          },
          end: {
            line: 222,
            column: 13
          }
        },
        line: 209
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 221,
            column: 48
          },
          end: {
            line: 221,
            column: 49
          }
        },
        loc: {
          start: {
            line: 221,
            column: 58
          },
          end: {
            line: 221,
            column: 72
          }
        },
        line: 221
      },
      "10": {
        name: "SuperOptimizedInvoicesPage",
        decl: {
          start: {
            line: 260,
            column: 15
          },
          end: {
            line: 260,
            column: 41
          }
        },
        loc: {
          start: {
            line: 260,
            column: 60
          },
          end: {
            line: 280,
            column: 1
          }
        },
        line: 260
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 11
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 35
          },
          end: {
            line: 30,
            column: 38
          }
        }, {
          start: {
            line: 30,
            column: 41
          },
          end: {
            line: 32,
            column: 5
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 11
          },
          end: {
            line: 30,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 11
          },
          end: {
            line: 30,
            column: 14
          }
        }, {
          start: {
            line: 30,
            column: 18
          },
          end: {
            line: 30,
            column: 32
          }
        }],
        line: 30
      },
      "2": {
        loc: {
          start: {
            line: 65,
            column: 71
          },
          end: {
            line: 65,
            column: 79
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 65,
            column: 78
          },
          end: {
            line: 65,
            column: 79
          }
        }],
        line: 65
      },
      "3": {
        loc: {
          start: {
            line: 65,
            column: 117
          },
          end: {
            line: 65,
            column: 134
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 65,
            column: 126
          },
          end: {
            line: 65,
            column: 134
          }
        }],
        line: 65
      },
      "4": {
        loc: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "5": {
        loc: {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 69,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 69,
            column: 14
          }
        }, {
          start: {
            line: 69,
            column: 18
          },
          end: {
            line: 69,
            column: 34
          }
        }],
        line: 69
      },
      "6": {
        loc: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 92
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 92
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "7": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 70,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 70,
            column: 21
          }
        }, {
          start: {
            line: 70,
            column: 25
          },
          end: {
            line: 70,
            column: 48
          }
        }],
        line: 70
      },
      "8": {
        loc: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "9": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 71,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 71,
            column: 14
          }
        }, {
          start: {
            line: 71,
            column: 18
          },
          end: {
            line: 71,
            column: 34
          }
        }],
        line: 71
      },
      "10": {
        loc: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "11": {
        loc: {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 99,
            column: 18
          }
        }, {
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 104,
            column: 18
          }
        }, {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 109,
            column: 18
          }
        }, {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 116,
            column: 18
          }
        }],
        line: 94
      },
      "12": {
        loc: {
          start: {
            line: 213,
            column: 30
          },
          end: {
            line: 213,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 30
          },
          end: {
            line: 213,
            column: 48
          }
        }, {
          start: {
            line: 213,
            column: 52
          },
          end: {
            line: 213,
            column: 61
          }
        }],
        line: 213
      },
      "13": {
        loc: {
          start: {
            line: 218,
            column: 25
          },
          end: {
            line: 218,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 218,
            column: 25
          },
          end: {
            line: 218,
            column: 51
          }
        }, {
          start: {
            line: 218,
            column: 55
          },
          end: {
            line: 218,
            column: 59
          }
        }],
        line: 218
      },
      "14": {
        loc: {
          start: {
            line: 219,
            column: 26
          },
          end: {
            line: 219,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 219,
            column: 26
          },
          end: {
            line: 219,
            column: 40
          }
        }, {
          start: {
            line: 219,
            column: 44
          },
          end: {
            line: 219,
            column: 48
          }
        }],
        line: 219
      },
      "15": {
        loc: {
          start: {
            line: 221,
            column: 27
          },
          end: {
            line: 221,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 221,
            column: 27
          },
          end: {
            line: 221,
            column: 76
          }
        }, {
          start: {
            line: 221,
            column: 80
          },
          end: {
            line: 221,
            column: 81
          }
        }],
        line: 221
      },
      "16": {
        loc: {
          start: {
            line: 224,
            column: 30
          },
          end: {
            line: 224,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 30
          },
          end: {
            line: 224,
            column: 49
          }
        }, {
          start: {
            line: 224,
            column: 53
          },
          end: {
            line: 224,
            column: 54
          }
        }],
        line: 224
      },
      "17": {
        loc: {
          start: {
            line: 225,
            column: 27
          },
          end: {
            line: 225,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 27
          },
          end: {
            line: 225,
            column: 46
          }
        }, {
          start: {
            line: 225,
            column: 50
          },
          end: {
            line: 225,
            column: 51
          }
        }],
        line: 225
      },
      "18": {
        loc: {
          start: {
            line: 264,
            column: 23
          },
          end: {
            line: 264,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 264,
            column: 23
          },
          end: {
            line: 264,
            column: 34
          }
        }, {
          start: {
            line: 264,
            column: 38
          },
          end: {
            line: 264,
            column: 41
          }
        }],
        line: 264
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/invoices/super-optimized/page.tsx"],
      sourcesContent: ["import MainLayout from '@/components/layout/MainLayout';\nimport { Suspense } from 'react';\nimport { Prisma } from '@prisma/client';\nimport { prisma } from '@/lib/prisma';\nimport { unstable_cache } from 'next/cache';\nimport InvoiceSuperOptimizedWrapper from './components/InvoiceSuperOptimizedWrapper';\n\n// Minimal skeleton component for instant loading\nfunction SuperOptimizedSkeleton() {\n    return (\n        <div className=\"container mx-auto px-4 py-8\">\n            <div className=\"animate-pulse\">\n                <div className=\"h-8 bg-gray-200 rounded w-1/4 mb-6\"></div>\n                <div className=\"grid grid-cols-4 gap-4 mb-6\">\n                    {[1,2,3,4].map(i => (\n                        <div key={i} className=\"h-20 bg-gray-200 rounded\"></div>\n                    ))}\n                </div>\n                <div className=\"h-96 bg-gray-200 rounded\"></div>\n            </div>\n        </div>\n    );\n}\n\n// Optimized interface with minimal fields\ninterface OptimizedInvoice {\n    id: string;\n    invoiceNumber: string;\n    customerId: number | null;\n    customerName: string;\n    total: number;\n    status: string;\n    paymentMethod: string | null;\n    createdAt: string;\n    dueDate: string | null;\n    shopName: string | null;\n    itemCount: number;\n    totalPaid: number;\n}\n\ninterface OptimizedStatistics {\n    totalOutstanding: number;\n    paidThisMonth: number;\n    overdueCount: number;\n    totalInvoices: number;\n}\n\nconst ITEMS_PER_PAGE = 20; // Increased for better UX\nconst CACHE_TTL = 300; // 5 minutes cache\n\n// Ultra-optimized query with minimal data fetching\nconst fetchOptimizedInvoicesData = unstable_cache(\n    async ({\n        page = 1,\n        status,\n        paymentMethod,\n        searchQuery,\n        sortBy = 'newest',\n        shopId\n    }: {\n        page?: number;\n        status?: string;\n        paymentMethod?: string;\n        searchQuery?: string;\n        sortBy?: string;\n        shopId?: string;\n    }) => {\n        const skip = (page - 1) * ITEMS_PER_PAGE;\n\n        // Build minimal where clause\n        const whereClause: Prisma.InvoiceWhereInput = {};\n        \n        if (status && status !== 'all') whereClause.status = status;\n        if (paymentMethod && paymentMethod !== 'all') whereClause.paymentMethod = paymentMethod;\n        if (shopId && shopId !== 'all') whereClause.shopId = shopId;\n        \n        if (searchQuery) {\n            whereClause.OR = [\n                { invoiceNumber: { contains: searchQuery, mode: 'insensitive' } },\n                { customer: { name: { contains: searchQuery, mode: 'insensitive' } } },\n            ];\n        }\n\n        // Optimized order by\n        let orderBy: Prisma.InvoiceOrderByWithRelationInput = { createdAt: 'desc' };\n        switch (sortBy) {\n            case 'oldest': orderBy = { createdAt: 'asc' }; break;\n            case 'amount-high': orderBy = { total: 'desc' }; break;\n            case 'amount-low': orderBy = { total: 'asc' }; break;\n            case 'customer': orderBy = { customer: { name: 'asc' } }; break;\n        }\n\n        try {\n            // Single optimized query with minimal joins\n            const [invoicesRaw, totalCount, stats] = await Promise.all([\n                // Main query - only essential fields\n                prisma.invoice.findMany({\n                    where: whereClause,\n                    select: {\n                        id: true,\n                        invoiceNumber: true,\n                        customerId: true,\n                        total: true,\n                        status: true,\n                        paymentMethod: true,\n                        createdAt: true,\n                        dueDate: true,\n                        customer: {\n                            select: { name: true }\n                        },\n                        shop: {\n                            select: { name: true }\n                        },\n                        _count: {\n                            select: { items: true }\n                        },\n                        // Use aggregated payments for total paid\n                        payments: {\n                            select: { amount: true },\n                            where: { receipt: { isNot: null } }\n                        }\n                    },\n                    orderBy,\n                    skip,\n                    take: ITEMS_PER_PAGE,\n                }),\n\n                // Count query\n                prisma.invoice.count({ where: whereClause }),\n\n                // Simplified stats in one query using aggregations\n                prisma.$transaction([\n                    // Outstanding\n                    prisma.invoice.aggregate({\n                        _sum: { total: true },\n                        where: { ...whereClause, status: { notIn: ['paid', 'cancelled', 'void'] } }\n                    }),\n                    // Paid this month\n                    prisma.invoice.aggregate({\n                        _sum: { total: true },\n                        where: {\n                            ...whereClause,\n                            status: 'paid',\n                            updatedAt: { gte: new Date(new Date().getFullYear(), new Date().getMonth(), 1) }\n                        }\n                    }),\n                    // Overdue count\n                    prisma.invoice.count({\n                        where: { ...whereClause, status: 'overdue' }\n                    })\n                ])\n            ]);\n\n            // Transform data efficiently\n            const invoices: OptimizedInvoice[] = invoicesRaw.map(inv => ({\n                id: inv.id.toString(),\n                invoiceNumber: inv.invoiceNumber,\n                customerId: inv.customerId,\n                customerName: inv.customer?.name || 'Unknown',\n                total: inv.total,\n                status: inv.status,\n                paymentMethod: inv.paymentMethod,\n                createdAt: inv.createdAt.toISOString(),\n                dueDate: inv.dueDate?.toISOString() || null,\n                shopName: inv.shop?.name || null,\n                itemCount: inv._count.items,\n                totalPaid: inv.payments?.reduce((sum, p) => sum + p.amount, 0) || 0\n            }));\n\n            const statistics: OptimizedStatistics = {\n                totalOutstanding: stats[0]._sum.total || 0,\n                paidThisMonth: stats[1]._sum.total || 0,\n                overdueCount: stats[2],\n                totalInvoices: totalCount\n            };\n\n            return {\n                invoices,\n                totalPages: Math.ceil(totalCount / ITEMS_PER_PAGE),\n                currentPage: page,\n                statistics,\n                error: null\n            };\n\n        } catch (error) {\n            console.error('Error fetching optimized invoices:', error);\n            return {\n                invoices: [],\n                totalPages: 0,\n                currentPage: 1,\n                statistics: { totalOutstanding: 0, paidThisMonth: 0, overdueCount: 0, totalInvoices: 0 },\n                error: 'Failed to fetch invoices'\n            };\n        }\n    },\n    ['super-optimized-invoices'],\n    { \n        revalidate: CACHE_TTL,\n        tags: ['invoices', 'super-optimized']\n    }\n);\n\n// Main page component\nexport default async function SuperOptimizedInvoicesPage({\n    searchParams,\n}: {\n    searchParams: Promise<{ \n        page?: string;\n        status?: string;\n        paymentMethod?: string;\n        search?: string;\n        sortBy?: string;\n        shopId?: string;\n    }>;\n}) {\n    const params = await searchParams;\n    \n    // Get data with cache\n    const data = await fetchOptimizedInvoicesData({\n        page: parseInt(params.page || '1', 10),\n        status: params.status,\n        paymentMethod: params.paymentMethod,\n        searchQuery: params.search,\n        sortBy: params.sortBy,\n        shopId: params.shopId\n    });\n\n    return (\n        <MainLayout>\n            <Suspense fallback={<SuperOptimizedSkeleton />}>\n                <InvoiceSuperOptimizedWrapper\n                    initialData={data}\n                    searchParams={params}\n                />\n            </Suspense>\n        </MainLayout>\n    );\n}\n\n// Force static optimization where possible\nexport const dynamic = 'force-dynamic';\nexport const revalidate = CACHE_TTL; "],
      names: ["SuperOptimizedInvoicesPage", "dynamic", "revalidate", "SuperOptimizedSkeleton", "div", "className", "map", "i", "ITEMS_PER_PAGE", "CACHE_TTL", "fetchOptimizedInvoicesData", "unstable_cache", "page", "status", "paymentMethod", "searchQuery", "sortBy", "shopId", "skip", "whereClause", "OR", "invoiceNumber", "contains", "mode", "customer", "name", "orderBy", "createdAt", "total", "invoicesRaw", "totalCount", "stats", "Promise", "all", "prisma", "invoice", "findMany", "where", "select", "id", "customerId", "dueDate", "shop", "_count", "items", "payments", "amount", "receipt", "isNot", "take", "count", "$transaction", "aggregate", "_sum", "notIn", "updatedAt", "gte", "Date", "getFullYear", "getMonth", "invoices", "inv", "toString", "customerName", "toISOString", "shopName", "itemCount", "totalPaid", "reduce", "sum", "p", "statistics", "totalOutstanding", "paidThisMonth", "overdueCount", "totalInvoices", "totalPages", "Math", "ceil", "currentPage", "error", "console", "tags", "searchParams", "params", "data", "parseInt", "search", "MainLayout", "Suspense", "fallback", "InvoiceSuperOptimizedWrapper", "initialData"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d81332eb9e2c3923dc5e104f53e60c97c994827b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_se8mu5i7n = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_se8mu5i7n();
cov_se8mu5i7n().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_se8mu5i7n().f[0]++;
  cov_se8mu5i7n().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_se8mu5i7n().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_se8mu5i7n().s[3]++;
_export(exports, {
  // Main page component
  default: function () {
    /* istanbul ignore next */
    cov_se8mu5i7n().f[1]++;
    cov_se8mu5i7n().s[4]++;
    return SuperOptimizedInvoicesPage;
  },
  dynamic: function () {
    /* istanbul ignore next */
    cov_se8mu5i7n().f[2]++;
    cov_se8mu5i7n().s[5]++;
    return dynamic;
  },
  revalidate: function () {
    /* istanbul ignore next */
    cov_se8mu5i7n().f[3]++;
    cov_se8mu5i7n().s[6]++;
    return revalidate;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_se8mu5i7n().s[7]++, require("react/jsx-runtime"));
const _MainLayout =
/* istanbul ignore next */
(/*#__PURE__*/cov_se8mu5i7n().s[8]++, _interop_require_default(require("../../../components/layout/MainLayout")));
const _react =
/* istanbul ignore next */
(cov_se8mu5i7n().s[9]++, require("react"));
const _prisma =
/* istanbul ignore next */
(cov_se8mu5i7n().s[10]++, require("../../../lib/prisma"));
const _cache =
/* istanbul ignore next */
(cov_se8mu5i7n().s[11]++, require("next/cache"));
const _InvoiceSuperOptimizedWrapper =
/* istanbul ignore next */
(/*#__PURE__*/cov_se8mu5i7n().s[12]++, _interop_require_default(require("./components/InvoiceSuperOptimizedWrapper")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_se8mu5i7n().f[4]++;
  cov_se8mu5i7n().s[13]++;
  return /* istanbul ignore next */(cov_se8mu5i7n().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_se8mu5i7n().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_se8mu5i7n().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_se8mu5i7n().b[0][1]++, {
    default: obj
  });
}
// Minimal skeleton component for instant loading
function SuperOptimizedSkeleton() {
  /* istanbul ignore next */
  cov_se8mu5i7n().f[5]++;
  cov_se8mu5i7n().s[14]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: "container mx-auto px-4 py-8",
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "animate-pulse",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "h-8 bg-gray-200 rounded w-1/4 mb-6"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "grid grid-cols-4 gap-4 mb-6",
        children: [1, 2, 3, 4].map(i => {
          /* istanbul ignore next */
          cov_se8mu5i7n().f[6]++;
          cov_se8mu5i7n().s[15]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "h-20 bg-gray-200 rounded"
          }, i);
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "h-96 bg-gray-200 rounded"
      })]
    })
  });
}
const ITEMS_PER_PAGE =
/* istanbul ignore next */
(cov_se8mu5i7n().s[16]++, 20); // Increased for better UX
const CACHE_TTL =
/* istanbul ignore next */
(cov_se8mu5i7n().s[17]++, 300); // 5 minutes cache
// Ultra-optimized query with minimal data fetching
const fetchOptimizedInvoicesData =
/* istanbul ignore next */
(cov_se8mu5i7n().s[18]++, (0, _cache.unstable_cache)(async ({
  page =
  /* istanbul ignore next */
  (cov_se8mu5i7n().b[2][0]++, 1),
  status,
  paymentMethod,
  searchQuery,
  sortBy =
  /* istanbul ignore next */
  (cov_se8mu5i7n().b[3][0]++, "newest"),
  shopId
}) => {
  /* istanbul ignore next */
  cov_se8mu5i7n().f[7]++;
  const skip =
  /* istanbul ignore next */
  (cov_se8mu5i7n().s[19]++, (page - 1) * ITEMS_PER_PAGE);
  // Build minimal where clause
  const whereClause =
  /* istanbul ignore next */
  (cov_se8mu5i7n().s[20]++, {});
  /* istanbul ignore next */
  cov_se8mu5i7n().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_se8mu5i7n().b[5][0]++, status) &&
  /* istanbul ignore next */
  (cov_se8mu5i7n().b[5][1]++, status !== "all")) {
    /* istanbul ignore next */
    cov_se8mu5i7n().b[4][0]++;
    cov_se8mu5i7n().s[22]++;
    whereClause.status = status;
  } else
  /* istanbul ignore next */
  {
    cov_se8mu5i7n().b[4][1]++;
  }
  cov_se8mu5i7n().s[23]++;
  if (
  /* istanbul ignore next */
  (cov_se8mu5i7n().b[7][0]++, paymentMethod) &&
  /* istanbul ignore next */
  (cov_se8mu5i7n().b[7][1]++, paymentMethod !== "all")) {
    /* istanbul ignore next */
    cov_se8mu5i7n().b[6][0]++;
    cov_se8mu5i7n().s[24]++;
    whereClause.paymentMethod = paymentMethod;
  } else
  /* istanbul ignore next */
  {
    cov_se8mu5i7n().b[6][1]++;
  }
  cov_se8mu5i7n().s[25]++;
  if (
  /* istanbul ignore next */
  (cov_se8mu5i7n().b[9][0]++, shopId) &&
  /* istanbul ignore next */
  (cov_se8mu5i7n().b[9][1]++, shopId !== "all")) {
    /* istanbul ignore next */
    cov_se8mu5i7n().b[8][0]++;
    cov_se8mu5i7n().s[26]++;
    whereClause.shopId = shopId;
  } else
  /* istanbul ignore next */
  {
    cov_se8mu5i7n().b[8][1]++;
  }
  cov_se8mu5i7n().s[27]++;
  if (searchQuery) {
    /* istanbul ignore next */
    cov_se8mu5i7n().b[10][0]++;
    cov_se8mu5i7n().s[28]++;
    whereClause.OR = [{
      invoiceNumber: {
        contains: searchQuery,
        mode: "insensitive"
      }
    }, {
      customer: {
        name: {
          contains: searchQuery,
          mode: "insensitive"
        }
      }
    }];
  } else
  /* istanbul ignore next */
  {
    cov_se8mu5i7n().b[10][1]++;
  }
  // Optimized order by
  let orderBy =
  /* istanbul ignore next */
  (cov_se8mu5i7n().s[29]++, {
    createdAt: "desc"
  });
  /* istanbul ignore next */
  cov_se8mu5i7n().s[30]++;
  switch (sortBy) {
    case "oldest":
      /* istanbul ignore next */
      cov_se8mu5i7n().b[11][0]++;
      cov_se8mu5i7n().s[31]++;
      orderBy = {
        createdAt: "asc"
      };
      /* istanbul ignore next */
      cov_se8mu5i7n().s[32]++;
      break;
    case "amount-high":
      /* istanbul ignore next */
      cov_se8mu5i7n().b[11][1]++;
      cov_se8mu5i7n().s[33]++;
      orderBy = {
        total: "desc"
      };
      /* istanbul ignore next */
      cov_se8mu5i7n().s[34]++;
      break;
    case "amount-low":
      /* istanbul ignore next */
      cov_se8mu5i7n().b[11][2]++;
      cov_se8mu5i7n().s[35]++;
      orderBy = {
        total: "asc"
      };
      /* istanbul ignore next */
      cov_se8mu5i7n().s[36]++;
      break;
    case "customer":
      /* istanbul ignore next */
      cov_se8mu5i7n().b[11][3]++;
      cov_se8mu5i7n().s[37]++;
      orderBy = {
        customer: {
          name: "asc"
        }
      };
      /* istanbul ignore next */
      cov_se8mu5i7n().s[38]++;
      break;
  }
  /* istanbul ignore next */
  cov_se8mu5i7n().s[39]++;
  try {
    // Single optimized query with minimal joins
    const [invoicesRaw, totalCount, stats] =
    /* istanbul ignore next */
    (cov_se8mu5i7n().s[40]++, await Promise.all([
    // Main query - only essential fields
    _prisma.prisma.invoice.findMany({
      where: whereClause,
      select: {
        id: true,
        invoiceNumber: true,
        customerId: true,
        total: true,
        status: true,
        paymentMethod: true,
        createdAt: true,
        dueDate: true,
        customer: {
          select: {
            name: true
          }
        },
        shop: {
          select: {
            name: true
          }
        },
        _count: {
          select: {
            items: true
          }
        },
        // Use aggregated payments for total paid
        payments: {
          select: {
            amount: true
          },
          where: {
            receipt: {
              isNot: null
            }
          }
        }
      },
      orderBy,
      skip,
      take: ITEMS_PER_PAGE
    }),
    // Count query
    _prisma.prisma.invoice.count({
      where: whereClause
    }),
    // Simplified stats in one query using aggregations
    _prisma.prisma.$transaction([
    // Outstanding
    _prisma.prisma.invoice.aggregate({
      _sum: {
        total: true
      },
      where: {
        ...whereClause,
        status: {
          notIn: ["paid", "cancelled", "void"]
        }
      }
    }),
    // Paid this month
    _prisma.prisma.invoice.aggregate({
      _sum: {
        total: true
      },
      where: {
        ...whereClause,
        status: "paid",
        updatedAt: {
          gte: new Date(new Date().getFullYear(), new Date().getMonth(), 1)
        }
      }
    }),
    // Overdue count
    _prisma.prisma.invoice.count({
      where: {
        ...whereClause,
        status: "overdue"
      }
    })])]));
    // Transform data efficiently
    const invoices =
    /* istanbul ignore next */
    (cov_se8mu5i7n().s[41]++, invoicesRaw.map(inv => {
      /* istanbul ignore next */
      cov_se8mu5i7n().f[8]++;
      cov_se8mu5i7n().s[42]++;
      return {
        id: inv.id.toString(),
        invoiceNumber: inv.invoiceNumber,
        customerId: inv.customerId,
        customerName:
        /* istanbul ignore next */
        (cov_se8mu5i7n().b[12][0]++, inv.customer?.name) ||
        /* istanbul ignore next */
        (cov_se8mu5i7n().b[12][1]++, "Unknown"),
        total: inv.total,
        status: inv.status,
        paymentMethod: inv.paymentMethod,
        createdAt: inv.createdAt.toISOString(),
        dueDate:
        /* istanbul ignore next */
        (cov_se8mu5i7n().b[13][0]++, inv.dueDate?.toISOString()) ||
        /* istanbul ignore next */
        (cov_se8mu5i7n().b[13][1]++, null),
        shopName:
        /* istanbul ignore next */
        (cov_se8mu5i7n().b[14][0]++, inv.shop?.name) ||
        /* istanbul ignore next */
        (cov_se8mu5i7n().b[14][1]++, null),
        itemCount: inv._count.items,
        totalPaid:
        /* istanbul ignore next */
        (cov_se8mu5i7n().b[15][0]++, inv.payments?.reduce((sum, p) => {
          /* istanbul ignore next */
          cov_se8mu5i7n().f[9]++;
          cov_se8mu5i7n().s[43]++;
          return sum + p.amount;
        }, 0)) ||
        /* istanbul ignore next */
        (cov_se8mu5i7n().b[15][1]++, 0)
      };
    }));
    const statistics =
    /* istanbul ignore next */
    (cov_se8mu5i7n().s[44]++, {
      totalOutstanding:
      /* istanbul ignore next */
      (cov_se8mu5i7n().b[16][0]++, stats[0]._sum.total) ||
      /* istanbul ignore next */
      (cov_se8mu5i7n().b[16][1]++, 0),
      paidThisMonth:
      /* istanbul ignore next */
      (cov_se8mu5i7n().b[17][0]++, stats[1]._sum.total) ||
      /* istanbul ignore next */
      (cov_se8mu5i7n().b[17][1]++, 0),
      overdueCount: stats[2],
      totalInvoices: totalCount
    });
    /* istanbul ignore next */
    cov_se8mu5i7n().s[45]++;
    return {
      invoices,
      totalPages: Math.ceil(totalCount / ITEMS_PER_PAGE),
      currentPage: page,
      statistics,
      error: null
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_se8mu5i7n().s[46]++;
    console.error("Error fetching optimized invoices:", error);
    /* istanbul ignore next */
    cov_se8mu5i7n().s[47]++;
    return {
      invoices: [],
      totalPages: 0,
      currentPage: 1,
      statistics: {
        totalOutstanding: 0,
        paidThisMonth: 0,
        overdueCount: 0,
        totalInvoices: 0
      },
      error: "Failed to fetch invoices"
    };
  }
}, ["super-optimized-invoices"], {
  revalidate: CACHE_TTL,
  tags: ["invoices", "super-optimized"]
}));
async function SuperOptimizedInvoicesPage({
  searchParams
}) {
  /* istanbul ignore next */
  cov_se8mu5i7n().f[10]++;
  const params =
  /* istanbul ignore next */
  (cov_se8mu5i7n().s[48]++, await searchParams);
  // Get data with cache
  const data =
  /* istanbul ignore next */
  (cov_se8mu5i7n().s[49]++, await fetchOptimizedInvoicesData({
    page: parseInt(
    /* istanbul ignore next */
    (cov_se8mu5i7n().b[18][0]++, params.page) ||
    /* istanbul ignore next */
    (cov_se8mu5i7n().b[18][1]++, "1"), 10),
    status: params.status,
    paymentMethod: params.paymentMethod,
    searchQuery: params.search,
    sortBy: params.sortBy,
    shopId: params.shopId
  }));
  /* istanbul ignore next */
  cov_se8mu5i7n().s[50]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_MainLayout.default, {
    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_react.Suspense, {
      fallback: /*#__PURE__*/(0, _jsxruntime.jsx)(SuperOptimizedSkeleton, {}),
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_InvoiceSuperOptimizedWrapper.default, {
        initialData: data,
        searchParams: params
      })
    })
  });
}
const dynamic =
/* istanbul ignore next */
(cov_se8mu5i7n().s[51]++, "force-dynamic");
const revalidate =
/* istanbul ignore next */
(cov_se8mu5i7n().s[52]++, CACHE_TTL);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,