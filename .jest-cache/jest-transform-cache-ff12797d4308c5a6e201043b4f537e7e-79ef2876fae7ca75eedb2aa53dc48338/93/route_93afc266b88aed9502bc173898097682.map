{"version":3,"names":["cov_2yv2s2kvc","actualCoverage","s","POST","request","f","authResult","_auth","validateTokenPermission","isValid","b","_server","NextResponse","json","error","status","_cache","cacheService","invalidateInvoices","clear","console","log","success","message","timestamp","Date","toISOString","details","Error"],"sources":["/Users/sachin/Documents/md-sports-/src/app/api/admin/clear-cache/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { validateTokenPermission } from '@/lib/auth';\nimport { cacheService } from '@/lib/cache';\n\nexport async function POST(request: NextRequest) {\n    try {\n        // Validate admin permissions\n        const authResult = await validateTokenPermission(request, 'admin:all');\n        if (!authResult.isValid) {\n            return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n        }\n\n        // Clear invoice cache\n        await cacheService.invalidateInvoices();\n        \n        // Also clear general cache patterns\n        await cacheService.clear();\n        \n        console.log('✅ Cache cleared successfully via API');\n        \n        return NextResponse.json({ \n            success: true, \n            message: 'Cache cleared successfully',\n            timestamp: new Date().toISOString()\n        });\n    } catch (error) {\n        console.error('❌ Error clearing cache:', error);\n        return NextResponse.json({ \n            error: 'Failed to clear cache',\n            details: error instanceof Error ? error.message : 'Unknown error'\n        }, { status: 500 });\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAMQ;IAAAA,aAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;AAAAA,aAAA,GAAAE,CAAA;;;;;;+BAFc;;;;;;WAAAC,IAAA;;;;;iCAJoB;;;iCACF;;;iCACX;AAEtB,eAAeA,KAAKC,OAAoB;EAAA;EAAAJ,aAAA,GAAAK,CAAA;EAAAL,aAAA,GAAAE,CAAA;EAC3C,IAAI;IACA;IACA,MAAMI,UAAA;IAAA;IAAA,CAAAN,aAAA,GAAAE,CAAA,OAAa,MAAM,IAAAK,KAAA,CAAAC,uBAAuB,EAACJ,OAAA,EAAS;IAAA;IAAAJ,aAAA,GAAAE,CAAA;IAC1D,IAAI,CAACI,UAAA,CAAWG,OAAO,EAAE;MAAA;MAAAT,aAAA,GAAAU,CAAA;MAAAV,aAAA,GAAAE,CAAA;MACrB,OAAOS,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;QAAEC,KAAA,EAAO;MAAe,GAAG;QAAEC,MAAA,EAAQ;MAAI;IACtE;IAAA;IAAA;MAAAf,aAAA,GAAAU,CAAA;IAAA;IAEA;IAAAV,aAAA,GAAAE,CAAA;IACA,MAAMc,MAAA,CAAAC,YAAY,CAACC,kBAAkB;IAErC;IAAA;IAAAlB,aAAA,GAAAE,CAAA;IACA,MAAMc,MAAA,CAAAC,YAAY,CAACE,KAAK;IAAA;IAAAnB,aAAA,GAAAE,CAAA;IAExBkB,OAAA,CAAQC,GAAG,CAAC;IAAA;IAAArB,aAAA,GAAAE,CAAA;IAEZ,OAAOS,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MACrBS,OAAA,EAAS;MACTC,OAAA,EAAS;MACTC,SAAA,EAAW,IAAIC,IAAA,GAAOC,WAAW;IACrC;EACJ,EAAE,OAAOZ,KAAA,EAAO;IAAA;IAAAd,aAAA,GAAAE,CAAA;IACZkB,OAAA,CAAQN,KAAK,CAAC,2BAA2BA,KAAA;IAAA;IAAAd,aAAA,GAAAE,CAAA;IACzC,OAAOS,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MACrBC,KAAA,EAAO;MACPa,OAAA,EAASb,KAAA,YAAiBc,KAAA;MAAA;MAAA,CAAA5B,aAAA,GAAAU,CAAA,UAAQI,KAAA,CAAMS,OAAO;MAAA;MAAA,CAAAvB,aAAA,GAAAU,CAAA,UAAG;IACtD,GAAG;MAAEK,MAAA,EAAQ;IAAI;EACrB;AACJ","ignoreList":[]}