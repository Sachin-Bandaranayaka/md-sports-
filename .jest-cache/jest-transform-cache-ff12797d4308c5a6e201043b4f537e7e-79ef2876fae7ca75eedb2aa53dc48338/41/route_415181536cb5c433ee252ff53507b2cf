0d1bbf6b7238e47793d82a53f4626569
"use strict";

/* istanbul ignore next */
function cov_imjw00kwd() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/shops/[id]/route.ts";
  var hash = "67a2599030e0f22a84362c7a30b4a64a6f876adb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/shops/[id]/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 22
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 19
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 19
        }
      },
      "7": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "8": {
        start: {
          line: 23,
          column: 30
        },
        end: {
          line: 23,
          column: 89
        }
      },
      "9": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 27,
          column: 6
        }
      },
      "10": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "11": {
        start: {
          line: 31,
          column: 19
        },
        end: {
          line: 31,
          column: 28
        }
      },
      "12": {
        start: {
          line: 33,
          column: 21
        },
        end: {
          line: 52,
          column: 10
        }
      },
      "13": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "14": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 59,
          column: 15
        }
      },
      "15": {
        start: {
          line: 62,
          column: 26
        },
        end: {
          line: 70,
          column: 15
        }
      },
      "16": {
        start: {
          line: 62,
          column: 59
        },
        end: {
          line: 70,
          column: 13
        }
      },
      "17": {
        start: {
          line: 72,
          column: 48
        },
        end: {
          line: 72,
          column: 52
        }
      },
      "18": {
        start: {
          line: 73,
          column: 34
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "19": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 80,
          column: 11
        }
      },
      "20": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 74
        }
      },
      "21": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 89,
          column: 11
        }
      },
      "22": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 161,
          column: 5
        }
      },
      "23": {
        start: {
          line: 94,
          column: 19
        },
        end: {
          line: 94,
          column: 28
        }
      },
      "24": {
        start: {
          line: 95,
          column: 21
        },
        end: {
          line: 95,
          column: 41
        }
      },
      "25": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "26": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 103,
          column: 15
        }
      },
      "27": {
        start: {
          line: 106,
          column: 29
        },
        end: {
          line: 110,
          column: 10
        }
      },
      "28": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "29": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 117,
          column: 15
        }
      },
      "30": {
        start: {
          line: 120,
          column: 28
        },
        end: {
          line: 146,
          column: 10
        }
      },
      "31": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 151,
          column: 11
        }
      },
      "32": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 74
        }
      },
      "33": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 160,
          column: 11
        }
      },
      "34": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 250,
          column: 5
        }
      },
      "35": {
        start: {
          line: 165,
          column: 19
        },
        end: {
          line: 165,
          column: 36
        }
      },
      "36": {
        start: {
          line: 167,
          column: 29
        },
        end: {
          line: 171,
          column: 10
        }
      },
      "37": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 179,
          column: 9
        }
      },
      "38": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 178,
          column: 15
        }
      },
      "39": {
        start: {
          line: 181,
          column: 35
        },
        end: {
          line: 185,
          column: 10
        }
      },
      "40": {
        start: {
          line: 187,
          column: 26
        },
        end: {
          line: 191,
          column: 10
        }
      },
      "41": {
        start: {
          line: 193,
          column: 31
        },
        end: {
          line: 204,
          column: 10
        }
      },
      "42": {
        start: {
          line: 206,
          column: 30
        },
        end: {
          line: 210,
          column: 10
        }
      },
      "43": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 230,
          column: 9
        }
      },
      "44": {
        start: {
          line: 213,
          column: 35
        },
        end: {
          line: 213,
          column: 37
        }
      },
      "45": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 101
        }
      },
      "46": {
        start: {
          line: 214,
          column: 40
        },
        end: {
          line: 214,
          column: 101
        }
      },
      "47": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 73
        }
      },
      "48": {
        start: {
          line: 215,
          column: 31
        },
        end: {
          line: 215,
          column: 73
        }
      },
      "49": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 97
        }
      },
      "50": {
        start: {
          line: 216,
          column: 36
        },
        end: {
          line: 216,
          column: 97
        }
      },
      "51": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 84
        }
      },
      "52": {
        start: {
          line: 217,
          column: 35
        },
        end: {
          line: 217,
          column: 84
        }
      },
      "53": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 229,
          column: 15
        }
      },
      "54": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 236,
          column: 11
        }
      },
      "55": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 240,
          column: 11
        }
      },
      "56": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 242,
          column: 82
        }
      },
      "57": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 249,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 13
          }
        },
        loc: {
          start: {
            line: 12,
            column: 23
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 10
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 10
          }
        },
        loc: {
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 33
          }
        },
        loc: {
          start: {
            line: 24,
            column: 39
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 24
      },
      "5": {
        name: "GET",
        decl: {
          start: {
            line: 29,
            column: 15
          },
          end: {
            line: 29,
            column: 18
          }
        },
        loc: {
          start: {
            line: 29,
            column: 40
          },
          end: {
            line: 91,
            column: 1
          }
        },
        line: 29
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 62,
            column: 50
          },
          end: {
            line: 62,
            column: 51
          }
        },
        loc: {
          start: {
            line: 62,
            column: 59
          },
          end: {
            line: 70,
            column: 13
          }
        },
        line: 62
      },
      "7": {
        name: "PUT",
        decl: {
          start: {
            line: 92,
            column: 15
          },
          end: {
            line: 92,
            column: 18
          }
        },
        loc: {
          start: {
            line: 92,
            column: 40
          },
          end: {
            line: 162,
            column: 1
          }
        },
        line: 92
      },
      "8": {
        name: "DELETE",
        decl: {
          start: {
            line: 163,
            column: 15
          },
          end: {
            line: 163,
            column: 21
          }
        },
        loc: {
          start: {
            line: 163,
            column: 40
          },
          end: {
            line: 251,
            column: 1
          }
        },
        line: 163
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 11
          },
          end: {
            line: 27,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 35
          },
          end: {
            line: 25,
            column: 38
          }
        }, {
          start: {
            line: 25,
            column: 41
          },
          end: {
            line: 27,
            column: 5
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 11
          },
          end: {
            line: 25,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 11
          },
          end: {
            line: 25,
            column: 14
          }
        }, {
          start: {
            line: 25,
            column: 18
          },
          end: {
            line: 25,
            column: 32
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "3": {
        loc: {
          start: {
            line: 86,
            column: 19
          },
          end: {
            line: 86,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 86,
            column: 44
          },
          end: {
            line: 86,
            column: 57
          }
        }, {
          start: {
            line: 86,
            column: 60
          },
          end: {
            line: 86,
            column: 73
          }
        }],
        line: 86
      },
      "4": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "5": {
        loc: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "6": {
        loc: {
          start: {
            line: 127,
            column: 32
          },
          end: {
            line: 127,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 127,
            column: 68
          },
          end: {
            line: 127,
            column: 87
          }
        }, {
          start: {
            line: 127,
            column: 90
          },
          end: {
            line: 127,
            column: 117
          }
        }],
        line: 127
      },
      "7": {
        loc: {
          start: {
            line: 128,
            column: 23
          },
          end: {
            line: 128,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 128,
            column: 50
          },
          end: {
            line: 128,
            column: 60
          }
        }, {
          start: {
            line: 128,
            column: 63
          },
          end: {
            line: 128,
            column: 81
          }
        }],
        line: 128
      },
      "8": {
        loc: {
          start: {
            line: 129,
            column: 23
          },
          end: {
            line: 129,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 129,
            column: 50
          },
          end: {
            line: 129,
            column: 60
          }
        }, {
          start: {
            line: 129,
            column: 63
          },
          end: {
            line: 129,
            column: 81
          }
        }],
        line: 129
      },
      "9": {
        loc: {
          start: {
            line: 130,
            column: 27
          },
          end: {
            line: 130,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 130,
            column: 58
          },
          end: {
            line: 130,
            column: 72
          }
        }, {
          start: {
            line: 130,
            column: 75
          },
          end: {
            line: 130,
            column: 97
          }
        }],
        line: 130
      },
      "10": {
        loc: {
          start: {
            line: 131,
            column: 30
          },
          end: {
            line: 131,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 131,
            column: 50
          },
          end: {
            line: 131,
            column: 77
          }
        }, {
          start: {
            line: 131,
            column: 80
          },
          end: {
            line: 131,
            column: 105
          }
        }],
        line: 131
      },
      "11": {
        loc: {
          start: {
            line: 132,
            column: 30
          },
          end: {
            line: 132,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 132,
            column: 50
          },
          end: {
            line: 132,
            column: 77
          }
        }, {
          start: {
            line: 132,
            column: 80
          },
          end: {
            line: 132,
            column: 105
          }
        }],
        line: 132
      },
      "12": {
        loc: {
          start: {
            line: 133,
            column: 28
          },
          end: {
            line: 133,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 133,
            column: 60
          },
          end: {
            line: 133,
            column: 75
          }
        }, {
          start: {
            line: 133,
            column: 78
          },
          end: {
            line: 133,
            column: 101
          }
        }],
        line: 133
      },
      "13": {
        loc: {
          start: {
            line: 134,
            column: 30
          },
          end: {
            line: 134,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 134,
            column: 50
          },
          end: {
            line: 134,
            column: 77
          }
        }, {
          start: {
            line: 134,
            column: 80
          },
          end: {
            line: 134,
            column: 105
          }
        }],
        line: 134
      },
      "14": {
        loc: {
          start: {
            line: 135,
            column: 24
          },
          end: {
            line: 135,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 24
          },
          end: {
            line: 135,
            column: 35
          }
        }, {
          start: {
            line: 135,
            column: 39
          },
          end: {
            line: 135,
            column: 58
          }
        }],
        line: 135
      },
      "15": {
        loc: {
          start: {
            line: 136,
            column: 31
          },
          end: {
            line: 136,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 136,
            column: 66
          },
          end: {
            line: 136,
            column: 84
          }
        }, {
          start: {
            line: 136,
            column: 87
          },
          end: {
            line: 136,
            column: 113
          }
        }],
        line: 136
      },
      "16": {
        loc: {
          start: {
            line: 137,
            column: 31
          },
          end: {
            line: 137,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 137,
            column: 66
          },
          end: {
            line: 137,
            column: 84
          }
        }, {
          start: {
            line: 137,
            column: 87
          },
          end: {
            line: 137,
            column: 113
          }
        }],
        line: 137
      },
      "17": {
        loc: {
          start: {
            line: 138,
            column: 22
          },
          end: {
            line: 138,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 48
          },
          end: {
            line: 138,
            column: 57
          }
        }, {
          start: {
            line: 138,
            column: 60
          },
          end: {
            line: 138,
            column: 77
          }
        }],
        line: 138
      },
      "18": {
        loc: {
          start: {
            line: 139,
            column: 23
          },
          end: {
            line: 139,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 139,
            column: 50
          },
          end: {
            line: 139,
            column: 60
          }
        }, {
          start: {
            line: 139,
            column: 63
          },
          end: {
            line: 139,
            column: 81
          }
        }],
        line: 139
      },
      "19": {
        loc: {
          start: {
            line: 140,
            column: 29
          },
          end: {
            line: 140,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 140,
            column: 62
          },
          end: {
            line: 140,
            column: 78
          }
        }, {
          start: {
            line: 140,
            column: 81
          },
          end: {
            line: 140,
            column: 105
          }
        }],
        line: 140
      },
      "20": {
        loc: {
          start: {
            line: 141,
            column: 25
          },
          end: {
            line: 141,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 141,
            column: 54
          },
          end: {
            line: 141,
            column: 66
          }
        }, {
          start: {
            line: 141,
            column: 69
          },
          end: {
            line: 141,
            column: 89
          }
        }],
        line: 141
      },
      "21": {
        loc: {
          start: {
            line: 142,
            column: 26
          },
          end: {
            line: 142,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 142,
            column: 56
          },
          end: {
            line: 142,
            column: 69
          }
        }, {
          start: {
            line: 142,
            column: 72
          },
          end: {
            line: 142,
            column: 93
          }
        }],
        line: 142
      },
      "22": {
        loc: {
          start: {
            line: 143,
            column: 27
          },
          end: {
            line: 143,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 143,
            column: 58
          },
          end: {
            line: 143,
            column: 72
          }
        }, {
          start: {
            line: 143,
            column: 75
          },
          end: {
            line: 143,
            column: 97
          }
        }],
        line: 143
      },
      "23": {
        loc: {
          start: {
            line: 144,
            column: 26
          },
          end: {
            line: 144,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 144,
            column: 56
          },
          end: {
            line: 144,
            column: 69
          }
        }, {
          start: {
            line: 144,
            column: 72
          },
          end: {
            line: 144,
            column: 93
          }
        }],
        line: 144
      },
      "24": {
        loc: {
          start: {
            line: 157,
            column: 19
          },
          end: {
            line: 157,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 157,
            column: 44
          },
          end: {
            line: 157,
            column: 57
          }
        }, {
          start: {
            line: 157,
            column: 60
          },
          end: {
            line: 157,
            column: 73
          }
        }],
        line: 157
      },
      "25": {
        loc: {
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "26": {
        loc: {
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "27": {
        loc: {
          start: {
            line: 212,
            column: 12
          },
          end: {
            line: 212,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 12
          },
          end: {
            line: 212,
            column: 34
          }
        }, {
          start: {
            line: 212,
            column: 38
          },
          end: {
            line: 212,
            column: 51
          }
        }, {
          start: {
            line: 212,
            column: 55
          },
          end: {
            line: 212,
            column: 73
          }
        }, {
          start: {
            line: 212,
            column: 77
          },
          end: {
            line: 212,
            column: 94
          }
        }],
        line: 212
      },
      "28": {
        loc: {
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 214,
            column: 101
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 214,
            column: 101
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "29": {
        loc: {
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 215,
            column: 73
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 215,
            column: 73
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "30": {
        loc: {
          start: {
            line: 216,
            column: 12
          },
          end: {
            line: 216,
            column: 97
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 12
          },
          end: {
            line: 216,
            column: 97
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "31": {
        loc: {
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 217,
            column: 84
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 217,
            column: 84
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "32": {
        loc: {
          start: {
            line: 246,
            column: 19
          },
          end: {
            line: 246,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 246,
            column: 44
          },
          end: {
            line: 246,
            column: 57
          }
        }, {
          start: {
            line: 246,
            column: 60
          },
          end: {
            line: 246,
            column: 73
          }
        }],
        line: 246
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/shops/[id]/route.ts"],
      sourcesContent: ["import { NextResponse, NextRequest } from 'next/server';\nimport prisma from '@/lib/prisma';\n\n// GET: Fetch a specific shop by ID\nexport async function GET(\n    request: Request,\n    { params }: { params: { id: string } }\n) {\n    try {\n        const id = params.id;\n\n        // Get the shop with its inventory and manager\n        const shop = await prisma.shop.findUnique({\n            where: { id },\n            include: {\n                inventoryItems: {\n                    include: {\n                        product: true\n                    }\n                },\n                manager: {\n                    select: {\n                        id: true,\n                        name: true,\n                        email: true,\n                        phone: true\n                    }\n                }\n            }\n        });\n\n        if (!shop) {\n            return NextResponse.json({\n                success: false,\n                message: `Shop with ID ${id} not found`\n            }, { status: 404 });\n        }\n\n        // Format the inventory data for the response\n        const inventory = shop.inventoryItems.map(item => ({\n            id: item.id,\n            product_id: item.productId,\n            product_name: item.product.name,\n            product_sku: item.product.sku,\n            retail_price: item.product.price,\n            quantity: item.quantity,\n            reorder_level: 10 // Default reorder level if not in database\n        }));\n\n        // Format the response\n        const { inventoryItems, ...shopData } = shop;\n        const shopWithInventory = {\n            ...shopData,\n            inventory\n        };\n\n        return NextResponse.json({\n            success: true,\n            data: shopWithInventory\n        });\n    } catch (error) {\n        console.error(`Error fetching shop with ID ${params.id}:`, error);\n        return NextResponse.json({\n            success: false,\n            message: 'Error fetching shop',\n            error: error instanceof Error ? error.message : String(error)\n        }, { status: 500 });\n    }\n}\n\n// PUT: Update a shop by ID\nexport async function PUT(\n    request: Request,\n    { params }: { params: { id: string } }\n) {\n    try {\n        const id = params.id;\n        const body = await request.json();\n\n        // Validate required fields\n        if (!body.name) {\n            return NextResponse.json({\n                success: false,\n                message: 'Shop name is required'\n            }, { status: 400 });\n        }\n\n        // Check if the shop exists\n        const existingShop = await prisma.shop.findUnique({\n            where: { id }\n        });\n\n        if (!existingShop) {\n            return NextResponse.json({\n                success: false,\n                message: `Shop with ID ${id} not found`\n            }, { status: 404 });\n        }\n\n        // Update the shop\n        const updatedShop = await prisma.shop.update({\n            where: { id },\n            data: {\n                name: body.name,\n                location: body.location,\n                contact_person: body.contact_person !== undefined ? body.contact_person : existingShop.contact_person,\n                phone: body.phone !== undefined ? body.phone : existingShop.phone,\n                email: body.email !== undefined ? body.email : existingShop.email,\n                is_active: body.is_active !== undefined ? body.is_active : existingShop.is_active,\n                opening_time: body.opening_time ? new Date(body.opening_time) : existingShop.opening_time,\n                closing_time: body.closing_time ? new Date(body.closing_time) : existingShop.closing_time,\n                manager_id: body.manager_id !== undefined ? body.manager_id : existingShop.manager_id,\n                opening_date: body.opening_date ? new Date(body.opening_date) : existingShop.opening_date,\n                status: body.status || existingShop.status,\n                address_line1: body.address_line1 !== undefined ? body.address_line1 : existingShop.address_line1,\n                address_line2: body.address_line2 !== undefined ? body.address_line2 : existingShop.address_line2,\n                city: body.city !== undefined ? body.city : existingShop.city,\n                state: body.state !== undefined ? body.state : existingShop.state,\n                postal_code: body.postal_code !== undefined ? body.postal_code : existingShop.postal_code,\n                country: body.country !== undefined ? body.country : existingShop.country,\n                latitude: body.latitude !== undefined ? body.latitude : existingShop.latitude,\n                longitude: body.longitude !== undefined ? body.longitude : existingShop.longitude,\n                tax_rate: body.tax_rate !== undefined ? body.tax_rate : existingShop.tax_rate\n            }\n        });\n\n        return NextResponse.json({\n            success: true,\n            message: 'Shop updated successfully',\n            data: updatedShop\n        });\n    } catch (error) {\n        console.error(`Error updating shop with ID ${params.id}:`, error);\n        return NextResponse.json({\n            success: false,\n            message: 'Error updating shop',\n            error: error instanceof Error ? error.message : String(error)\n        }, { status: 500 });\n    }\n}\n\n// DELETE: Delete a shop by ID (since Prisma doesn't have built-in soft delete)\nexport async function DELETE(\n    request: NextRequest,\n    context: { params: { id: string } }\n) {\n    try {\n        const id = context.params.id;\n\n        // Check if the shop exists\n        const existingShop = await prisma.shop.findUnique({\n            where: { id }\n        });\n\n        if (!existingShop) {\n            return NextResponse.json({\n                success: false,\n                message: `Shop with ID ${id} not found`\n            }, { status: 404 });\n        }\n\n        // Check for related inventory items\n        const inventoryItemCount = await prisma.inventoryItem.count({\n            where: { shopId: id }\n        });\n\n        // Check for related users\n        const userCount = await prisma.user.count({\n            where: { shopId: id }\n        });\n\n        // Check for related inventory transfers\n        const transfersCount = await prisma.inventoryTransfer.count({\n            where: {\n                OR: [\n                    { fromShopId: id },\n                    { toShopId: id }\n                ]\n            }\n        });\n\n        // Check for related products\n        const productsCount = await prisma.product.count({\n            where: { shopId: id }\n        });\n\n        // If there are related records, return an error\n        if (inventoryItemCount > 0 || userCount > 0 || transfersCount > 0 || productsCount > 0) {\n            const relatedRecords = [];\n\n            if (inventoryItemCount > 0) relatedRecords.push(`${inventoryItemCount} inventory items`);\n            if (userCount > 0) relatedRecords.push(`${userCount} users`);\n            if (transfersCount > 0) relatedRecords.push(`${transfersCount} inventory transfers`);\n            if (productsCount > 0) relatedRecords.push(`${productsCount} products`);\n\n            return NextResponse.json({\n                success: false,\n                message: `Cannot delete shop. It has related records: ${relatedRecords.join(', ')}. Please remove or reassign these records first.`,\n                relatedRecords: {\n                    inventoryItems: inventoryItemCount,\n                    users: userCount,\n                    transfers: transfersCount,\n                    products: productsCount\n                }\n            }, { status: 409 }); // 409 Conflict\n        }\n\n        // Delete the shop\n        await prisma.shop.delete({\n            where: { id }\n        });\n\n        return NextResponse.json({\n            success: true,\n            message: 'Shop deleted successfully'\n        });\n    } catch (error) {\n        console.error(`Error deleting shop with ID ${context.params.id}:`, error);\n        return NextResponse.json({\n            success: false,\n            message: 'Error deleting shop',\n            error: error instanceof Error ? error.message : String(error)\n        }, { status: 500 });\n    }\n} "],
      names: ["DELETE", "GET", "PUT", "request", "params", "id", "shop", "prisma", "findUnique", "where", "include", "inventoryItems", "product", "manager", "select", "name", "email", "phone", "NextResponse", "json", "success", "message", "status", "inventory", "map", "item", "product_id", "productId", "product_name", "product_sku", "sku", "retail_price", "price", "quantity", "reorder_level", "shopData", "shopWithInventory", "data", "error", "console", "Error", "String", "body", "existingShop", "updatedShop", "update", "location", "contact_person", "undefined", "is_active", "opening_time", "Date", "closing_time", "manager_id", "opening_date", "address_line1", "address_line2", "city", "state", "postal_code", "country", "latitude", "longitude", "tax_rate", "context", "inventoryItemCount", "inventoryItem", "count", "shopId", "userCount", "user", "transfersCount", "inventoryTransfer", "OR", "fromShopId", "toShopId", "productsCount", "relatedRecords", "push", "join", "users", "transfers", "products", "delete"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "67a2599030e0f22a84362c7a30b4a64a6f876adb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_imjw00kwd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_imjw00kwd();
cov_imjw00kwd().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_imjw00kwd().f[0]++;
  cov_imjw00kwd().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_imjw00kwd().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_imjw00kwd().s[3]++;
_export(exports, {
  DELETE: function () {
    /* istanbul ignore next */
    cov_imjw00kwd().f[1]++;
    cov_imjw00kwd().s[4]++;
    return DELETE;
  },
  GET: function () {
    /* istanbul ignore next */
    cov_imjw00kwd().f[2]++;
    cov_imjw00kwd().s[5]++;
    return GET;
  },
  PUT: function () {
    /* istanbul ignore next */
    cov_imjw00kwd().f[3]++;
    cov_imjw00kwd().s[6]++;
    return PUT;
  }
});
const _server =
/* istanbul ignore next */
(cov_imjw00kwd().s[7]++, require("next/server"));
const _prisma =
/* istanbul ignore next */
(/*#__PURE__*/cov_imjw00kwd().s[8]++, _interop_require_default(require("../../../../lib/prisma")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_imjw00kwd().f[4]++;
  cov_imjw00kwd().s[9]++;
  return /* istanbul ignore next */(cov_imjw00kwd().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_imjw00kwd().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_imjw00kwd().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_imjw00kwd().b[0][1]++, {
    default: obj
  });
}
async function GET(request, {
  params
}) {
  /* istanbul ignore next */
  cov_imjw00kwd().f[5]++;
  cov_imjw00kwd().s[10]++;
  try {
    const id =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[11]++, params.id);
    // Get the shop with its inventory and manager
    const shop =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[12]++, await _prisma.default.shop.findUnique({
      where: {
        id
      },
      include: {
        inventoryItems: {
          include: {
            product: true
          }
        },
        manager: {
          select: {
            id: true,
            name: true,
            email: true,
            phone: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_imjw00kwd().s[13]++;
    if (!shop) {
      /* istanbul ignore next */
      cov_imjw00kwd().b[2][0]++;
      cov_imjw00kwd().s[14]++;
      return _server.NextResponse.json({
        success: false,
        message: `Shop with ID ${id} not found`
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_imjw00kwd().b[2][1]++;
    }
    // Format the inventory data for the response
    const inventory =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[15]++, shop.inventoryItems.map(item => {
      /* istanbul ignore next */
      cov_imjw00kwd().f[6]++;
      cov_imjw00kwd().s[16]++;
      return {
        id: item.id,
        product_id: item.productId,
        product_name: item.product.name,
        product_sku: item.product.sku,
        retail_price: item.product.price,
        quantity: item.quantity,
        reorder_level: 10 // Default reorder level if not in database
      };
    }));
    // Format the response
    const {
      inventoryItems,
      ...shopData
    } =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[17]++, shop);
    const shopWithInventory =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[18]++, {
      ...shopData,
      inventory
    });
    /* istanbul ignore next */
    cov_imjw00kwd().s[19]++;
    return _server.NextResponse.json({
      success: true,
      data: shopWithInventory
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_imjw00kwd().s[20]++;
    console.error(`Error fetching shop with ID ${params.id}:`, error);
    /* istanbul ignore next */
    cov_imjw00kwd().s[21]++;
    return _server.NextResponse.json({
      success: false,
      message: "Error fetching shop",
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_imjw00kwd().b[3][0]++, error.message) :
      /* istanbul ignore next */
      (cov_imjw00kwd().b[3][1]++, String(error))
    }, {
      status: 500
    });
  }
}
async function PUT(request, {
  params
}) {
  /* istanbul ignore next */
  cov_imjw00kwd().f[7]++;
  cov_imjw00kwd().s[22]++;
  try {
    const id =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[23]++, params.id);
    const body =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[24]++, await request.json());
    // Validate required fields
    /* istanbul ignore next */
    cov_imjw00kwd().s[25]++;
    if (!body.name) {
      /* istanbul ignore next */
      cov_imjw00kwd().b[4][0]++;
      cov_imjw00kwd().s[26]++;
      return _server.NextResponse.json({
        success: false,
        message: "Shop name is required"
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_imjw00kwd().b[4][1]++;
    }
    // Check if the shop exists
    const existingShop =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[27]++, await _prisma.default.shop.findUnique({
      where: {
        id
      }
    }));
    /* istanbul ignore next */
    cov_imjw00kwd().s[28]++;
    if (!existingShop) {
      /* istanbul ignore next */
      cov_imjw00kwd().b[5][0]++;
      cov_imjw00kwd().s[29]++;
      return _server.NextResponse.json({
        success: false,
        message: `Shop with ID ${id} not found`
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_imjw00kwd().b[5][1]++;
    }
    // Update the shop
    const updatedShop =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[30]++, await _prisma.default.shop.update({
      where: {
        id
      },
      data: {
        name: body.name,
        location: body.location,
        contact_person: body.contact_person !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[6][0]++, body.contact_person) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[6][1]++, existingShop.contact_person),
        phone: body.phone !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[7][0]++, body.phone) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[7][1]++, existingShop.phone),
        email: body.email !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[8][0]++, body.email) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[8][1]++, existingShop.email),
        is_active: body.is_active !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[9][0]++, body.is_active) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[9][1]++, existingShop.is_active),
        opening_time: body.opening_time ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[10][0]++, new Date(body.opening_time)) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[10][1]++, existingShop.opening_time),
        closing_time: body.closing_time ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[11][0]++, new Date(body.closing_time)) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[11][1]++, existingShop.closing_time),
        manager_id: body.manager_id !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[12][0]++, body.manager_id) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[12][1]++, existingShop.manager_id),
        opening_date: body.opening_date ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[13][0]++, new Date(body.opening_date)) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[13][1]++, existingShop.opening_date),
        status:
        /* istanbul ignore next */
        (cov_imjw00kwd().b[14][0]++, body.status) ||
        /* istanbul ignore next */
        (cov_imjw00kwd().b[14][1]++, existingShop.status),
        address_line1: body.address_line1 !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[15][0]++, body.address_line1) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[15][1]++, existingShop.address_line1),
        address_line2: body.address_line2 !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[16][0]++, body.address_line2) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[16][1]++, existingShop.address_line2),
        city: body.city !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[17][0]++, body.city) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[17][1]++, existingShop.city),
        state: body.state !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[18][0]++, body.state) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[18][1]++, existingShop.state),
        postal_code: body.postal_code !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[19][0]++, body.postal_code) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[19][1]++, existingShop.postal_code),
        country: body.country !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[20][0]++, body.country) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[20][1]++, existingShop.country),
        latitude: body.latitude !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[21][0]++, body.latitude) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[21][1]++, existingShop.latitude),
        longitude: body.longitude !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[22][0]++, body.longitude) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[22][1]++, existingShop.longitude),
        tax_rate: body.tax_rate !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[23][0]++, body.tax_rate) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[23][1]++, existingShop.tax_rate)
      }
    }));
    /* istanbul ignore next */
    cov_imjw00kwd().s[31]++;
    return _server.NextResponse.json({
      success: true,
      message: "Shop updated successfully",
      data: updatedShop
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_imjw00kwd().s[32]++;
    console.error(`Error updating shop with ID ${params.id}:`, error);
    /* istanbul ignore next */
    cov_imjw00kwd().s[33]++;
    return _server.NextResponse.json({
      success: false,
      message: "Error updating shop",
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_imjw00kwd().b[24][0]++, error.message) :
      /* istanbul ignore next */
      (cov_imjw00kwd().b[24][1]++, String(error))
    }, {
      status: 500
    });
  }
}
async function DELETE(request, context) {
  /* istanbul ignore next */
  cov_imjw00kwd().f[8]++;
  cov_imjw00kwd().s[34]++;
  try {
    const id =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[35]++, context.params.id);
    // Check if the shop exists
    const existingShop =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[36]++, await _prisma.default.shop.findUnique({
      where: {
        id
      }
    }));
    /* istanbul ignore next */
    cov_imjw00kwd().s[37]++;
    if (!existingShop) {
      /* istanbul ignore next */
      cov_imjw00kwd().b[25][0]++;
      cov_imjw00kwd().s[38]++;
      return _server.NextResponse.json({
        success: false,
        message: `Shop with ID ${id} not found`
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_imjw00kwd().b[25][1]++;
    }
    // Check for related inventory items
    const inventoryItemCount =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[39]++, await _prisma.default.inventoryItem.count({
      where: {
        shopId: id
      }
    }));
    // Check for related users
    const userCount =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[40]++, await _prisma.default.user.count({
      where: {
        shopId: id
      }
    }));
    // Check for related inventory transfers
    const transfersCount =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[41]++, await _prisma.default.inventoryTransfer.count({
      where: {
        OR: [{
          fromShopId: id
        }, {
          toShopId: id
        }]
      }
    }));
    // Check for related products
    const productsCount =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[42]++, await _prisma.default.product.count({
      where: {
        shopId: id
      }
    }));
    // If there are related records, return an error
    /* istanbul ignore next */
    cov_imjw00kwd().s[43]++;
    if (
    /* istanbul ignore next */
    (cov_imjw00kwd().b[27][0]++, inventoryItemCount > 0) ||
    /* istanbul ignore next */
    (cov_imjw00kwd().b[27][1]++, userCount > 0) ||
    /* istanbul ignore next */
    (cov_imjw00kwd().b[27][2]++, transfersCount > 0) ||
    /* istanbul ignore next */
    (cov_imjw00kwd().b[27][3]++, productsCount > 0)) {
      /* istanbul ignore next */
      cov_imjw00kwd().b[26][0]++;
      const relatedRecords =
      /* istanbul ignore next */
      (cov_imjw00kwd().s[44]++, []);
      /* istanbul ignore next */
      cov_imjw00kwd().s[45]++;
      if (inventoryItemCount > 0) {
        /* istanbul ignore next */
        cov_imjw00kwd().b[28][0]++;
        cov_imjw00kwd().s[46]++;
        relatedRecords.push(`${inventoryItemCount} inventory items`);
      } else
      /* istanbul ignore next */
      {
        cov_imjw00kwd().b[28][1]++;
      }
      cov_imjw00kwd().s[47]++;
      if (userCount > 0) {
        /* istanbul ignore next */
        cov_imjw00kwd().b[29][0]++;
        cov_imjw00kwd().s[48]++;
        relatedRecords.push(`${userCount} users`);
      } else
      /* istanbul ignore next */
      {
        cov_imjw00kwd().b[29][1]++;
      }
      cov_imjw00kwd().s[49]++;
      if (transfersCount > 0) {
        /* istanbul ignore next */
        cov_imjw00kwd().b[30][0]++;
        cov_imjw00kwd().s[50]++;
        relatedRecords.push(`${transfersCount} inventory transfers`);
      } else
      /* istanbul ignore next */
      {
        cov_imjw00kwd().b[30][1]++;
      }
      cov_imjw00kwd().s[51]++;
      if (productsCount > 0) {
        /* istanbul ignore next */
        cov_imjw00kwd().b[31][0]++;
        cov_imjw00kwd().s[52]++;
        relatedRecords.push(`${productsCount} products`);
      } else
      /* istanbul ignore next */
      {
        cov_imjw00kwd().b[31][1]++;
      }
      cov_imjw00kwd().s[53]++;
      return _server.NextResponse.json({
        success: false,
        message: `Cannot delete shop. It has related records: ${relatedRecords.join(", ")}. Please remove or reassign these records first.`,
        relatedRecords: {
          inventoryItems: inventoryItemCount,
          users: userCount,
          transfers: transfersCount,
          products: productsCount
        }
      }, {
        status: 409
      }); // 409 Conflict
    } else
    /* istanbul ignore next */
    {
      cov_imjw00kwd().b[26][1]++;
    }
    // Delete the shop
    cov_imjw00kwd().s[54]++;
    await _prisma.default.shop.delete({
      where: {
        id
      }
    });
    /* istanbul ignore next */
    cov_imjw00kwd().s[55]++;
    return _server.NextResponse.json({
      success: true,
      message: "Shop deleted successfully"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_imjw00kwd().s[56]++;
    console.error(`Error deleting shop with ID ${context.params.id}:`, error);
    /* istanbul ignore next */
    cov_imjw00kwd().s[57]++;
    return _server.NextResponse.json({
      success: false,
      message: "Error deleting shop",
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_imjw00kwd().b[32][0]++, error.message) :
      /* istanbul ignore next */
      (cov_imjw00kwd().b[32][1]++, String(error))
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,