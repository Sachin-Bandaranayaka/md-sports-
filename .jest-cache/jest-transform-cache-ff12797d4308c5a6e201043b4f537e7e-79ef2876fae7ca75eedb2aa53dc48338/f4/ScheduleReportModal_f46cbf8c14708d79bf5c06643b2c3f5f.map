{"version":3,"names":["_default","ScheduleReportModal","isOpen","onClose","cov_2mwrkrq88r","f","formData","setFormData","s","_react","useState","reportType","frequency","time","recipients","startDate","Date","toISOString","split","format","isSubmitting","setIsSubmitting","reportTypes","value","label","frequencies","formats","handleInputChange","field","prev","handleSubmit","e","preventDefault","console","log","Promise","resolve","setTimeout","alert","error","_jsxruntime","jsx","_Modal","default","title","size","jsxs","onSubmit","className","_lucidereact","FileText","onChange","target","required","map","type","Calendar","freq","Clock","min","Mail","placeholder","rows","_Button","Button","variant","onClick","disabled","b"],"sources":["/Users/sachin/Documents/md-sports-/src/components/reports/ScheduleReportModal.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { Button } from \"@/components/ui/Button\";\nimport Modal from \"@/components/ui/Modal\";\nimport { Calendar, Clock, Mail, FileText } from 'lucide-react';\n\ninterface ScheduleReportModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n}\n\nconst ScheduleReportModal: React.FC<ScheduleReportModalProps> = ({ isOpen, onClose }) => {\n    const [formData, setFormData] = useState({\n        reportType: '',\n        frequency: 'daily',\n        time: '09:00',\n        recipients: '',\n        startDate: new Date().toISOString().split('T')[0],\n        format: 'pdf'\n    });\n\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    const reportTypes = [\n        { value: 'sales', label: 'Sales Report' },\n        { value: 'inventory', label: 'Inventory Report' },\n        { value: 'customer-payments', label: 'Customer Payments Report' },\n        { value: 'product-performance', label: 'Product Performance Report' },\n        { value: 'shop-performance', label: 'Shop Performance Report' }\n    ];\n\n    const frequencies = [\n        { value: 'daily', label: 'Daily' },\n        { value: 'weekly', label: 'Weekly' },\n        { value: 'monthly', label: 'Monthly' },\n        { value: 'quarterly', label: 'Quarterly' }\n    ];\n\n    const formats = [\n        { value: 'pdf', label: 'PDF' },\n        { value: 'excel', label: 'Excel' },\n        { value: 'csv', label: 'CSV' }\n    ];\n\n    const handleInputChange = (field: string, value: string) => {\n        setFormData(prev => ({ ...prev, [field]: value }));\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setIsSubmitting(true);\n\n        try {\n            // TODO: Implement API call to save scheduled report\n            console.log('Scheduling report:', formData);\n            \n            // Simulate API call\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            \n            alert('Report scheduled successfully!');\n            onClose();\n        } catch (error) {\n            console.error('Error scheduling report:', error);\n            alert('Failed to schedule report. Please try again.');\n        } finally {\n            setIsSubmitting(false);\n        }\n    };\n\n    return (\n        <Modal isOpen={isOpen} onClose={onClose} title=\"Schedule Report\" size=\"lg\">\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n                {/* Report Type */}\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        <FileText className=\"w-4 h-4 inline mr-2\" />\n                        Report Type\n                    </label>\n                    <select\n                        value={formData.reportType}\n                        onChange={(e) => handleInputChange('reportType', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        required\n                    >\n                        <option value=\"\">Select a report type</option>\n                        {reportTypes.map(type => (\n                            <option key={type.value} value={type.value}>\n                                {type.label}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n\n                {/* Frequency and Time */}\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                            <Calendar className=\"w-4 h-4 inline mr-2\" />\n                            Frequency\n                        </label>\n                        <select\n                            value={formData.frequency}\n                            onChange={(e) => handleInputChange('frequency', e.target.value)}\n                            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        >\n                            {frequencies.map(freq => (\n                                <option key={freq.value} value={freq.value}>\n                                    {freq.label}\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n\n                    <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                            <Clock className=\"w-4 h-4 inline mr-2\" />\n                            Time\n                        </label>\n                        <input\n                            type=\"time\"\n                            value={formData.time}\n                            onChange={(e) => handleInputChange('time', e.target.value)}\n                            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        />\n                    </div>\n                </div>\n\n                {/* Start Date */}\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Start Date\n                    </label>\n                    <input\n                        type=\"date\"\n                        value={formData.startDate}\n                        onChange={(e) => handleInputChange('startDate', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        min={new Date().toISOString().split('T')[0]}\n                    />\n                </div>\n\n                {/* Recipients */}\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        <Mail className=\"w-4 h-4 inline mr-2\" />\n                        Email Recipients\n                    </label>\n                    <textarea\n                        value={formData.recipients}\n                        onChange={(e) => handleInputChange('recipients', e.target.value)}\n                        placeholder=\"Enter email addresses separated by commas\"\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        rows={3}\n                        required\n                    />\n                </div>\n\n                {/* Format */}\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Report Format\n                    </label>\n                    <select\n                        value={formData.format}\n                        onChange={(e) => handleInputChange('format', e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    >\n                        {formats.map(format => (\n                            <option key={format.value} value={format.value}>\n                                {format.label}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n\n                {/* Action Buttons */}\n                <div className=\"flex justify-end space-x-3 pt-4\">\n                    <Button \n                        type=\"button\" \n                        variant=\"outline\" \n                        onClick={onClose}\n                        disabled={isSubmitting}\n                    >\n                        Cancel\n                    </Button>\n                    <Button \n                        type=\"submit\" \n                        variant=\"primary\"\n                        disabled={isSubmitting}\n                    >\n                        {isSubmitting ? 'Scheduling...' : 'Schedule Report'}\n                    </Button>\n                </div>\n            </form>\n        </Modal>\n    );\n};\n\nexport default ScheduleReportModal;"],"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","ignoreList":[]}