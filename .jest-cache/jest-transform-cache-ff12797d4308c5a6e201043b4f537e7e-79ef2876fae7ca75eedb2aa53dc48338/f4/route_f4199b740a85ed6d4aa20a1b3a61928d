c85542f36e245d5335a123179d8f1b9d
"use strict";

/* istanbul ignore next */
function cov_1g350ag0j4() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/products/template/route.ts";
  var hash = "ecba6f3192fa5f08c9bd507a74fc949ba575f012";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/products/template/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 19
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 28
        },
        end: {
          line: 12,
          column: 70
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 51
        }
      },
      "6": {
        start: {
          line: 14,
          column: 39
        },
        end: {
          line: 14,
          column: 51
        }
      },
      "7": {
        start: {
          line: 15,
          column: 28
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "8": {
        start: {
          line: 16,
          column: 27
        },
        end: {
          line: 16,
          column: 40
        }
      },
      "9": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 20
        }
      },
      "10": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 66
        }
      },
      "11": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 24,
          column: 5
        }
      },
      "12": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 19
        }
      },
      "13": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "14": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 28,
          column: 10
        }
      },
      "15": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 53
        }
      },
      "16": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "17": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 30
        }
      },
      "18": {
        start: {
          line: 34,
          column: 17
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "19": {
        start: {
          line: 37,
          column: 32
        },
        end: {
          line: 37,
          column: 88
        }
      },
      "20": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "21": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "22": {
        start: {
          line: 40,
          column: 23
        },
        end: {
          line: 40,
          column: 95
        }
      },
      "23": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "24": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 57
        }
      },
      "25": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 39
        }
      },
      "26": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 25
        }
      },
      "27": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "28": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 31
        }
      },
      "29": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 18
        }
      },
      "30": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "31": {
        start: {
          line: 57,
          column: 24
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "32": {
        start: {
          line: 69,
          column: 19
        },
        end: {
          line: 69,
          column: 41
        }
      },
      "33": {
        start: {
          line: 70,
          column: 19
        },
        end: {
          line: 72,
          column: 10
        }
      },
      "34": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 66
        }
      },
      "35": {
        start: {
          line: 76,
          column: 23
        },
        end: {
          line: 79,
          column: 10
        }
      },
      "36": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 87,
          column: 11
        }
      },
      "37": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 74
        }
      },
      "38": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 96,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 47
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 39
          },
          end: {
            line: 17,
            column: 40
          }
        },
        loc: {
          start: {
            line: 17,
            column: 61
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 34
          }
        },
        loc: {
          start: {
            line: 21,
            column: 53
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 21
      },
      "4": {
        name: "GET",
        decl: {
          start: {
            line: 54,
            column: 15
          },
          end: {
            line: 54,
            column: 18
          }
        },
        loc: {
          start: {
            line: 54,
            column: 21
          },
          end: {
            line: 98,
            column: 1
          }
        },
        line: 54
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 18,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 29
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 48
          },
          end: {
            line: 18,
            column: 65
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 22,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 22,
            column: 20
          }
        }, {
          start: {
            line: 22,
            column: 24
          },
          end: {
            line: 22,
            column: 27
          }
        }, {
          start: {
            line: 22,
            column: 31
          },
          end: {
            line: 22,
            column: 45
          }
        }],
        line: 22
      },
      "4": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "5": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 20
          }
        }, {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 25,
            column: 47
          }
        }, {
          start: {
            line: 25,
            column: 51
          },
          end: {
            line: 25,
            column: 76
          }
        }],
        line: 25
      },
      "6": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "7": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 13
          }
        }, {
          start: {
            line: 31,
            column: 17
          },
          end: {
            line: 31,
            column: 31
          }
        }],
        line: 31
      },
      "8": {
        loc: {
          start: {
            line: 37,
            column: 32
          },
          end: {
            line: 37,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 32
          },
          end: {
            line: 37,
            column: 53
          }
        }, {
          start: {
            line: 37,
            column: 57
          },
          end: {
            line: 37,
            column: 88
          }
        }],
        line: 37
      },
      "9": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "10": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 29
          }
        }, {
          start: {
            line: 39,
            column: 33
          },
          end: {
            line: 39,
            column: 79
          }
        }],
        line: 39
      },
      "11": {
        loc: {
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 47
          },
          end: {
            line: 40,
            column: 88
          }
        }, {
          start: {
            line: 40,
            column: 91
          },
          end: {
            line: 40,
            column: 95
          }
        }],
        line: 40
      },
      "12": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        }, {
          start: {
            line: 43,
            column: 19
          },
          end: {
            line: 45,
            column: 13
          }
        }],
        line: 41
      },
      "13": {
        loc: {
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 41,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 41,
            column: 20
          }
        }, {
          start: {
            line: 41,
            column: 25
          },
          end: {
            line: 41,
            column: 33
          }
        }, {
          start: {
            line: 41,
            column: 37
          },
          end: {
            line: 41,
            column: 45
          }
        }],
        line: 41
      },
      "14": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "15": {
        loc: {
          start: {
            line: 93,
            column: 19
          },
          end: {
            line: 93,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 93,
            column: 44
          },
          end: {
            line: 93,
            column: 57
          }
        }, {
          start: {
            line: 93,
            column: 60
          },
          end: {
            line: 93,
            column: 73
          }
        }],
        line: 93
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/products/template/route.ts"],
      sourcesContent: ["import { NextResponse } from 'next/server';\nimport * as XLSX from 'xlsx';\n\nexport async function GET() {\n    try {\n        // Define the headers for the Excel template\n        const headers = [\n            'Name',\n            'SKU',\n            'Description',\n            'RetailPrice',\n            'CostPrice',\n            'Barcode',\n            'CategoryName',\n            'InitialQuantity',\n            'ShopName'\n        ];\n\n        // Create a new workbook and a worksheet\n        const wb = XLSX.utils.book_new();\n        const ws = XLSX.utils.aoa_to_sheet([headers]); // array_of_arrays_to_sheet\n\n        // Add the worksheet to the workbook\n        XLSX.utils.book_append_sheet(wb, ws, 'ProductsTemplate');\n\n        // Generate the Excel file buffer\n        const buffer = XLSX.write(wb, { type: 'buffer', bookType: 'xlsx' });\n\n        // Return the buffer as a downloadable file\n        return new NextResponse(buffer, {\n            status: 200,\n            headers: {\n                'Content-Disposition': 'attachment; filename=\"product_import_template.xlsx\"',\n                'Content-Type': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n            },\n        });\n\n    } catch (error) {\n        console.error('Error generating product import template:', error);\n        return NextResponse.json(\n            {\n                success: false,\n                message: 'Error generating product import template',\n                error: error instanceof Error ? error.message : String(error),\n            },\n            { status: 500 }\n        );\n    }\n} "],
      names: ["GET", "headers", "wb", "XLSX", "utils", "book_new", "ws", "aoa_to_sheet", "book_append_sheet", "buffer", "write", "type", "bookType", "NextResponse", "status", "error", "console", "json", "success", "message", "Error", "String"],
      mappings: ";;;;+BAGsBA;;;eAAAA;;;wBAHO;8DACP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEf,eAAeA;IAClB,IAAI;QACA,4CAA4C;QAC5C,MAAMC,UAAU;YACZ;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACH;QAED,wCAAwC;QACxC,MAAMC,KAAKC,MAAKC,KAAK,CAACC,QAAQ;QAC9B,MAAMC,KAAKH,MAAKC,KAAK,CAACG,YAAY,CAAC;YAACN;SAAQ,GAAG,2BAA2B;QAE1E,oCAAoC;QACpCE,MAAKC,KAAK,CAACI,iBAAiB,CAACN,IAAII,IAAI;QAErC,iCAAiC;QACjC,MAAMG,SAASN,MAAKO,KAAK,CAACR,IAAI;YAAES,MAAM;YAAUC,UAAU;QAAO;QAEjE,2CAA2C;QAC3C,OAAO,IAAIC,oBAAY,CAACJ,QAAQ;YAC5BK,QAAQ;YACRb,SAAS;gBACL,uBAAuB;gBACvB,gBAAgB;YACpB;QACJ;IAEJ,EAAE,OAAOc,OAAO;QACZC,QAAQD,KAAK,CAAC,6CAA6CA;QAC3D,OAAOF,oBAAY,CAACI,IAAI,CACpB;YACIC,SAAS;YACTC,SAAS;YACTJ,OAAOA,iBAAiBK,QAAQL,MAAMI,OAAO,GAAGE,OAAON;QAC3D,GACA;YAAED,QAAQ;QAAI;IAEtB;AACJ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ecba6f3192fa5f08c9bd507a74fc949ba575f012"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1g350ag0j4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1g350ag0j4();
cov_1g350ag0j4().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1g350ag0j4().s[1]++;
Object.defineProperty(exports, "GET", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1g350ag0j4().f[0]++;
    cov_1g350ag0j4().s[2]++;
    return GET;
  }
});
const _server =
/* istanbul ignore next */
(cov_1g350ag0j4().s[3]++, require("next/server"));
const _xlsx =
/* istanbul ignore next */
(/*#__PURE__*/cov_1g350ag0j4().s[4]++, _interop_require_wildcard(require("xlsx")));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1g350ag0j4().f[1]++;
  cov_1g350ag0j4().s[5]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1g350ag0j4().b[0][0]++;
    cov_1g350ag0j4().s[6]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1g350ag0j4().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1g350ag0j4().s[7]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1g350ag0j4().s[8]++, new WeakMap());
  /* istanbul ignore next */
  cov_1g350ag0j4().s[9]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1g350ag0j4().f[2]++;
    cov_1g350ag0j4().s[10]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1g350ag0j4().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1g350ag0j4().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1g350ag0j4().f[3]++;
  cov_1g350ag0j4().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_1g350ag0j4().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1g350ag0j4().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1g350ag0j4().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1g350ag0j4().b[2][0]++;
    cov_1g350ag0j4().s[12]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1g350ag0j4().b[2][1]++;
  }
  cov_1g350ag0j4().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_1g350ag0j4().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1g350ag0j4().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1g350ag0j4().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1g350ag0j4().b[4][0]++;
    cov_1g350ag0j4().s[14]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1g350ag0j4().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1g350ag0j4().s[15]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1g350ag0j4().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_1g350ag0j4().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1g350ag0j4().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1g350ag0j4().b[6][0]++;
    cov_1g350ag0j4().s[17]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1g350ag0j4().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1g350ag0j4().s[18]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1g350ag0j4().s[19]++,
  /* istanbul ignore next */
  (cov_1g350ag0j4().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1g350ag0j4().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1g350ag0j4().s[20]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1g350ag0j4().s[21]++;
    if (
    /* istanbul ignore next */
    (cov_1g350ag0j4().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1g350ag0j4().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1g350ag0j4().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1g350ag0j4().s[22]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1g350ag0j4().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1g350ag0j4().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1g350ag0j4().s[23]++;
      if (
      /* istanbul ignore next */
      (cov_1g350ag0j4().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1g350ag0j4().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1g350ag0j4().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1g350ag0j4().b[12][0]++;
        cov_1g350ag0j4().s[24]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1g350ag0j4().b[12][1]++;
        cov_1g350ag0j4().s[25]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1g350ag0j4().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1g350ag0j4().s[26]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1g350ag0j4().s[27]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1g350ag0j4().b[14][0]++;
    cov_1g350ag0j4().s[28]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1g350ag0j4().b[14][1]++;
  }
  cov_1g350ag0j4().s[29]++;
  return newObj;
}
async function GET() {
  /* istanbul ignore next */
  cov_1g350ag0j4().f[4]++;
  cov_1g350ag0j4().s[30]++;
  try {
    // Define the headers for the Excel template
    const headers =
    /* istanbul ignore next */
    (cov_1g350ag0j4().s[31]++, ["Name", "SKU", "Description", "RetailPrice", "CostPrice", "Barcode", "CategoryName", "InitialQuantity", "ShopName"]);
    // Create a new workbook and a worksheet
    const wb =
    /* istanbul ignore next */
    (cov_1g350ag0j4().s[32]++, _xlsx.utils.book_new());
    const ws =
    /* istanbul ignore next */
    (cov_1g350ag0j4().s[33]++, _xlsx.utils.aoa_to_sheet([headers])); // array_of_arrays_to_sheet
    // Add the worksheet to the workbook
    /* istanbul ignore next */
    cov_1g350ag0j4().s[34]++;
    _xlsx.utils.book_append_sheet(wb, ws, "ProductsTemplate");
    // Generate the Excel file buffer
    const buffer =
    /* istanbul ignore next */
    (cov_1g350ag0j4().s[35]++, _xlsx.write(wb, {
      type: "buffer",
      bookType: "xlsx"
    }));
    // Return the buffer as a downloadable file
    /* istanbul ignore next */
    cov_1g350ag0j4().s[36]++;
    return new _server.NextResponse(buffer, {
      status: 200,
      headers: {
        "Content-Disposition": 'attachment; filename="product_import_template.xlsx"',
        "Content-Type": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1g350ag0j4().s[37]++;
    console.error("Error generating product import template:", error);
    /* istanbul ignore next */
    cov_1g350ag0j4().s[38]++;
    return _server.NextResponse.json({
      success: false,
      message: "Error generating product import template",
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1g350ag0j4().b[15][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1g350ag0j4().b[15][1]++, String(error))
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJHRVQiLCJjb3ZfMWczNTBhZzBqNCIsImYiLCJzIiwiaGVhZGVycyIsIndiIiwiX3hsc3giLCJ1dGlscyIsImJvb2tfbmV3Iiwid3MiLCJhb2FfdG9fc2hlZXQiLCJib29rX2FwcGVuZF9zaGVldCIsImJ1ZmZlciIsIndyaXRlIiwidHlwZSIsImJvb2tUeXBlIiwiX3NlcnZlciIsIk5leHRSZXNwb25zZSIsInN0YXR1cyIsImVycm9yIiwiY29uc29sZSIsImpzb24iLCJzdWNjZXNzIiwibWVzc2FnZSIsIkVycm9yIiwiYiIsIlN0cmluZyJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWNoaW4vRG9jdW1lbnRzL21kLXNwb3J0cy0vc3JjL2FwcC9hcGkvcHJvZHVjdHMvdGVtcGxhdGUvcm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0ICogYXMgWExTWCBmcm9tICd4bHN4JztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVCgpIHtcbiAgICB0cnkge1xuICAgICAgICAvLyBEZWZpbmUgdGhlIGhlYWRlcnMgZm9yIHRoZSBFeGNlbCB0ZW1wbGF0ZVxuICAgICAgICBjb25zdCBoZWFkZXJzID0gW1xuICAgICAgICAgICAgJ05hbWUnLFxuICAgICAgICAgICAgJ1NLVScsXG4gICAgICAgICAgICAnRGVzY3JpcHRpb24nLFxuICAgICAgICAgICAgJ1JldGFpbFByaWNlJyxcbiAgICAgICAgICAgICdDb3N0UHJpY2UnLFxuICAgICAgICAgICAgJ0JhcmNvZGUnLFxuICAgICAgICAgICAgJ0NhdGVnb3J5TmFtZScsXG4gICAgICAgICAgICAnSW5pdGlhbFF1YW50aXR5JyxcbiAgICAgICAgICAgICdTaG9wTmFtZSdcbiAgICAgICAgXTtcblxuICAgICAgICAvLyBDcmVhdGUgYSBuZXcgd29ya2Jvb2sgYW5kIGEgd29ya3NoZWV0XG4gICAgICAgIGNvbnN0IHdiID0gWExTWC51dGlscy5ib29rX25ldygpO1xuICAgICAgICBjb25zdCB3cyA9IFhMU1gudXRpbHMuYW9hX3RvX3NoZWV0KFtoZWFkZXJzXSk7IC8vIGFycmF5X29mX2FycmF5c190b19zaGVldFxuXG4gICAgICAgIC8vIEFkZCB0aGUgd29ya3NoZWV0IHRvIHRoZSB3b3JrYm9va1xuICAgICAgICBYTFNYLnV0aWxzLmJvb2tfYXBwZW5kX3NoZWV0KHdiLCB3cywgJ1Byb2R1Y3RzVGVtcGxhdGUnKTtcblxuICAgICAgICAvLyBHZW5lcmF0ZSB0aGUgRXhjZWwgZmlsZSBidWZmZXJcbiAgICAgICAgY29uc3QgYnVmZmVyID0gWExTWC53cml0ZSh3YiwgeyB0eXBlOiAnYnVmZmVyJywgYm9va1R5cGU6ICd4bHN4JyB9KTtcblxuICAgICAgICAvLyBSZXR1cm4gdGhlIGJ1ZmZlciBhcyBhIGRvd25sb2FkYWJsZSBmaWxlXG4gICAgICAgIHJldHVybiBuZXcgTmV4dFJlc3BvbnNlKGJ1ZmZlciwge1xuICAgICAgICAgICAgc3RhdHVzOiAyMDAsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgJ0NvbnRlbnQtRGlzcG9zaXRpb24nOiAnYXR0YWNobWVudDsgZmlsZW5hbWU9XCJwcm9kdWN0X2ltcG9ydF90ZW1wbGF0ZS54bHN4XCInLFxuICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vdm5kLm9wZW54bWxmb3JtYXRzLW9mZmljZWRvY3VtZW50LnNwcmVhZHNoZWV0bWwuc2hlZXQnLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG5cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBnZW5lcmF0aW5nIHByb2R1Y3QgaW1wb3J0IHRlbXBsYXRlOicsIGVycm9yKTtcbiAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdFcnJvciBnZW5lcmF0aW5nIHByb2R1Y3QgaW1wb3J0IHRlbXBsYXRlJyxcbiAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiBTdHJpbmcoZXJyb3IpLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICAgICApO1xuICAgIH1cbn0gIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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