140165e41d50cc6c25fbe649dd3e5dee
"use strict";

/* istanbul ignore next */
function cov_1rvy6uschf() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/sms/reminder/route.ts";
  var hash = "6e858165fd8bfb02abcd766359fb4e885e834778";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/sms/reminder/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "6": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 15,
          column: 37
        }
      },
      "7": {
        start: {
          line: 16,
          column: 30
        },
        end: {
          line: 16,
          column: 34
        }
      },
      "8": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 25,
          column: 9
        }
      },
      "9": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 24,
          column: 15
        }
      },
      "10": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 44
        }
      },
      "11": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "12": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 35,
          column: 15
        }
      },
      "13": {
        start: {
          line: 38,
          column: 25
        },
        end: {
          line: 38,
          column: 84
        }
      },
      "14": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "15": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 44,
          column: 15
        }
      },
      "16": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 51,
          column: 15
        }
      },
      "17": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 64
        }
      },
      "18": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 60,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "POST",
        decl: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 13,
            column: 19
          }
        },
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 13
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        }, {
          start: {
            line: 45,
            column: 15
          },
          end: {
            line: 52,
            column: 9
          }
        }],
        line: 39
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 34
          }
        }, {
          start: {
            line: 39,
            column: 38
          },
          end: {
            line: 39,
            column: 59
          }
        }],
        line: 39
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/sms/reminder/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { requirePermission } from '@/lib/utils/middleware';\nimport { smsService } from '@/services/smsService';\n\n// POST: Send a payment reminder\nexport async function POST(req: NextRequest) {\n    try {\n        const data = await req.json();\n        const { invoiceId } = data;\n\n        // Validate input\n        if (!invoiceId) {\n            return NextResponse.json(\n                { success: false, message: 'Invoice ID is required' },\n                { status: 400 }\n            );\n        }\n\n        // Initialize SMS service if needed\n        await smsService.init();\n\n        // Check if SMS service is configured\n        if (!smsService.isConfigured()) {\n            return NextResponse.json(\n                { success: false, message: 'SMS service is not configured or is disabled' },\n                { status: 400 }\n            );\n        }\n\n        // Send payment reminder\n        const response = await smsService.sendPaymentReminder(invoiceId);\n\n        if (response.status >= 200 && response.status < 300) {\n            return NextResponse.json({\n                success: true,\n                message: 'Payment reminder sent successfully',\n                data: response.data\n            });\n        } else {\n            return NextResponse.json(\n                { success: false, message: response.message },\n                { status: response.status }\n            );\n        }\n    } catch (error) {\n        console.error('Error sending payment reminder:', error);\n        return NextResponse.json(\n            { success: false, message: 'Failed to send payment reminder' },\n            { status: 500 }\n        );\n    }\n} "],
      names: ["POST", "req", "data", "json", "invoiceId", "NextResponse", "success", "message", "status", "smsService", "init", "isConfigured", "response", "sendPaymentReminder", "error", "console"],
      mappings: ";;;;+BAKsBA;;;eAAAA;;;wBALoB;4BAEf;AAGpB,eAAeA,KAAKC,GAAgB;IACvC,IAAI;QACA,MAAMC,OAAO,MAAMD,IAAIE,IAAI;QAC3B,MAAM,EAAEC,SAAS,EAAE,GAAGF;QAEtB,iBAAiB;QACjB,IAAI,CAACE,WAAW;YACZ,OAAOC,oBAAY,CAACF,IAAI,CACpB;gBAAEG,SAAS;gBAAOC,SAAS;YAAyB,GACpD;gBAAEC,QAAQ;YAAI;QAEtB;QAEA,mCAAmC;QACnC,MAAMC,sBAAU,CAACC,IAAI;QAErB,qCAAqC;QACrC,IAAI,CAACD,sBAAU,CAACE,YAAY,IAAI;YAC5B,OAAON,oBAAY,CAACF,IAAI,CACpB;gBAAEG,SAAS;gBAAOC,SAAS;YAA+C,GAC1E;gBAAEC,QAAQ;YAAI;QAEtB;QAEA,wBAAwB;QACxB,MAAMI,WAAW,MAAMH,sBAAU,CAACI,mBAAmB,CAACT;QAEtD,IAAIQ,SAASJ,MAAM,IAAI,OAAOI,SAASJ,MAAM,GAAG,KAAK;YACjD,OAAOH,oBAAY,CAACF,IAAI,CAAC;gBACrBG,SAAS;gBACTC,SAAS;gBACTL,MAAMU,SAASV,IAAI;YACvB;QACJ,OAAO;YACH,OAAOG,oBAAY,CAACF,IAAI,CACpB;gBAAEG,SAAS;gBAAOC,SAASK,SAASL,OAAO;YAAC,GAC5C;gBAAEC,QAAQI,SAASJ,MAAM;YAAC;QAElC;IACJ,EAAE,OAAOM,OAAO;QACZC,QAAQD,KAAK,CAAC,mCAAmCA;QACjD,OAAOT,oBAAY,CAACF,IAAI,CACpB;YAAEG,SAAS;YAAOC,SAAS;QAAkC,GAC7D;YAAEC,QAAQ;QAAI;IAEtB;AACJ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6e858165fd8bfb02abcd766359fb4e885e834778"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1rvy6uschf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1rvy6uschf();
cov_1rvy6uschf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1rvy6uschf().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1rvy6uschf().f[0]++;
    cov_1rvy6uschf().s[2]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_1rvy6uschf().s[3]++, require("next/server"));
const _smsService =
/* istanbul ignore next */
(cov_1rvy6uschf().s[4]++, require("../../../../services/smsService"));
async function POST(req) {
  /* istanbul ignore next */
  cov_1rvy6uschf().f[1]++;
  cov_1rvy6uschf().s[5]++;
  try {
    const data =
    /* istanbul ignore next */
    (cov_1rvy6uschf().s[6]++, await req.json());
    const {
      invoiceId
    } =
    /* istanbul ignore next */
    (cov_1rvy6uschf().s[7]++, data);
    // Validate input
    /* istanbul ignore next */
    cov_1rvy6uschf().s[8]++;
    if (!invoiceId) {
      /* istanbul ignore next */
      cov_1rvy6uschf().b[0][0]++;
      cov_1rvy6uschf().s[9]++;
      return _server.NextResponse.json({
        success: false,
        message: "Invoice ID is required"
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1rvy6uschf().b[0][1]++;
    }
    // Initialize SMS service if needed
    cov_1rvy6uschf().s[10]++;
    await _smsService.smsService.init();
    // Check if SMS service is configured
    /* istanbul ignore next */
    cov_1rvy6uschf().s[11]++;
    if (!_smsService.smsService.isConfigured()) {
      /* istanbul ignore next */
      cov_1rvy6uschf().b[1][0]++;
      cov_1rvy6uschf().s[12]++;
      return _server.NextResponse.json({
        success: false,
        message: "SMS service is not configured or is disabled"
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1rvy6uschf().b[1][1]++;
    }
    // Send payment reminder
    const response =
    /* istanbul ignore next */
    (cov_1rvy6uschf().s[13]++, await _smsService.smsService.sendPaymentReminder(invoiceId));
    /* istanbul ignore next */
    cov_1rvy6uschf().s[14]++;
    if (
    /* istanbul ignore next */
    (cov_1rvy6uschf().b[3][0]++, response.status >= 200) &&
    /* istanbul ignore next */
    (cov_1rvy6uschf().b[3][1]++, response.status < 300)) {
      /* istanbul ignore next */
      cov_1rvy6uschf().b[2][0]++;
      cov_1rvy6uschf().s[15]++;
      return _server.NextResponse.json({
        success: true,
        message: "Payment reminder sent successfully",
        data: response.data
      });
    } else {
      /* istanbul ignore next */
      cov_1rvy6uschf().b[2][1]++;
      cov_1rvy6uschf().s[16]++;
      return _server.NextResponse.json({
        success: false,
        message: response.message
      }, {
        status: response.status
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_1rvy6uschf().s[17]++;
    console.error("Error sending payment reminder:", error);
    /* istanbul ignore next */
    cov_1rvy6uschf().s[18]++;
    return _server.NextResponse.json({
      success: false,
      message: "Failed to send payment reminder"
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXJ2eTZ1c2NoZiIsImFjdHVhbENvdmVyYWdlIiwicyIsIlBPU1QiLCJyZXEiLCJmIiwiZGF0YSIsImpzb24iLCJpbnZvaWNlSWQiLCJiIiwiX3NlcnZlciIsIk5leHRSZXNwb25zZSIsInN1Y2Nlc3MiLCJtZXNzYWdlIiwic3RhdHVzIiwiX3Ntc1NlcnZpY2UiLCJzbXNTZXJ2aWNlIiwiaW5pdCIsImlzQ29uZmlndXJlZCIsInJlc3BvbnNlIiwic2VuZFBheW1lbnRSZW1pbmRlciIsImVycm9yIiwiY29uc29sZSJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWNoaW4vRG9jdW1lbnRzL21kLXNwb3J0cy0vc3JjL2FwcC9hcGkvc21zL3JlbWluZGVyL3JvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XG5pbXBvcnQgeyByZXF1aXJlUGVybWlzc2lvbiB9IGZyb20gJ0AvbGliL3V0aWxzL21pZGRsZXdhcmUnO1xuaW1wb3J0IHsgc21zU2VydmljZSB9IGZyb20gJ0Avc2VydmljZXMvc21zU2VydmljZSc7XG5cbi8vIFBPU1Q6IFNlbmQgYSBwYXltZW50IHJlbWluZGVyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXE6IE5leHRSZXF1ZXN0KSB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcS5qc29uKCk7XG4gICAgICAgIGNvbnN0IHsgaW52b2ljZUlkIH0gPSBkYXRhO1xuXG4gICAgICAgIC8vIFZhbGlkYXRlIGlucHV0XG4gICAgICAgIGlmICghaW52b2ljZUlkKSB7XG4gICAgICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgICAgICAgICAgeyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogJ0ludm9pY2UgSUQgaXMgcmVxdWlyZWQnIH0sXG4gICAgICAgICAgICAgICAgeyBzdGF0dXM6IDQwMCB9XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gSW5pdGlhbGl6ZSBTTVMgc2VydmljZSBpZiBuZWVkZWRcbiAgICAgICAgYXdhaXQgc21zU2VydmljZS5pbml0KCk7XG5cbiAgICAgICAgLy8gQ2hlY2sgaWYgU01TIHNlcnZpY2UgaXMgY29uZmlndXJlZFxuICAgICAgICBpZiAoIXNtc1NlcnZpY2UuaXNDb25maWd1cmVkKCkpIHtcbiAgICAgICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgICAgICAgICB7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiAnU01TIHNlcnZpY2UgaXMgbm90IGNvbmZpZ3VyZWQgb3IgaXMgZGlzYWJsZWQnIH0sXG4gICAgICAgICAgICAgICAgeyBzdGF0dXM6IDQwMCB9XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gU2VuZCBwYXltZW50IHJlbWluZGVyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgc21zU2VydmljZS5zZW5kUGF5bWVudFJlbWluZGVyKGludm9pY2VJZCk7XG5cbiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA+PSAyMDAgJiYgcmVzcG9uc2Uuc3RhdHVzIDwgMzAwKSB7XG4gICAgICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ1BheW1lbnQgcmVtaW5kZXIgc2VudCBzdWNjZXNzZnVsbHknLFxuICAgICAgICAgICAgICAgIGRhdGE6IHJlc3BvbnNlLmRhdGFcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICAgICAgICAgIHsgc3VjY2VzczogZmFsc2UsIG1lc3NhZ2U6IHJlc3BvbnNlLm1lc3NhZ2UgfSxcbiAgICAgICAgICAgICAgICB7IHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzIH1cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBzZW5kaW5nIHBheW1lbnQgcmVtaW5kZXI6JywgZXJyb3IpO1xuICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgICAgICB7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiAnRmFpbGVkIHRvIHNlbmQgcGF5bWVudCByZW1pbmRlcicgfSxcbiAgICAgICAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICAgICApO1xuICAgIH1cbn0gIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBUVE7SUFBQUEsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsY0FBQTtBQUFBQSxjQUFBLEdBQUFFLENBQUE7Ozs7OzsrQkFIYzs7Ozs7O1dBQUFDLElBQUE7Ozs7O2tD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