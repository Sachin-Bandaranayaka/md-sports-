0249871be36cb911e38eab78627f3ddf
"use strict";

/* istanbul ignore next */
function cov_1mz236g7zl() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/dashboard/sales/route.ts";
  var hash = "a5c31464f371ae6d0f6992f6433bac23792e1367";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/dashboard/sales/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 30
        }
      },
      "6": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "7": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 49
        }
      },
      "8": {
        start: {
          line: 21,
          column: 15
        },
        end: {
          line: 21,
          column: 47
        }
      },
      "9": {
        start: {
          line: 22,
          column: 24
        },
        end: {
          line: 22,
          column: 71
        }
      },
      "10": {
        start: {
          line: 23,
          column: 14
        },
        end: {
          line: 23,
          column: 45
        }
      },
      "11": {
        start: {
          line: 24,
          column: 27
        },
        end: {
          line: 24,
          column: 80
        }
      },
      "12": {
        start: {
          line: 26,
          column: 23
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "13": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "14": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 26
        }
      },
      "15": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 22
        }
      },
      "16": {
        start: {
          line: 47,
          column: 20
        },
        end: {
          line: 47,
          column: 30
        }
      },
      "17": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 25
        }
      },
      "18": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 67
        }
      },
      "19": {
        start: {
          line: 51,
          column: 19
        },
        end: {
          line: 51,
          column: 21
        }
      },
      "20": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 52,
          column: 70
        }
      },
      "21": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 86,
          column: 5
        }
      },
      "22": {
        start: {
          line: 54,
          column: 27
        },
        end: {
          line: 54,
          column: 81
        }
      },
      "23": {
        start: {
          line: 55,
          column: 25
        },
        end: {
          line: 55,
          column: 100
        }
      },
      "24": {
        start: {
          line: 57,
          column: 26
        },
        end: {
          line: 57,
          column: 57
        }
      },
      "25": {
        start: {
          line: 58,
          column: 28
        },
        end: {
          line: 58,
          column: 67
        }
      },
      "26": {
        start: {
          line: 59,
          column: 32
        },
        end: {
          line: 79,
          column: 105
        }
      },
      "27": {
        start: {
          line: 59,
          column: 65
        },
        end: {
          line: 75,
          column: 14
        }
      },
      "28": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 83,
          column: 11
        }
      },
      "29": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 49
        }
      },
      "30": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 90,
          column: 6
        }
      },
      "31": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 191,
          column: 2
        }
      },
      "32": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 190,
          column: 5
        }
      },
      "33": {
        start: {
          line: 95,
          column: 27
        },
        end: {
          line: 95,
          column: 90
        }
      },
      "34": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "35": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 101,
          column: 15
        }
      },
      "36": {
        start: {
          line: 103,
          column: 33
        },
        end: {
          line: 103,
          column: 53
        }
      },
      "37": {
        start: {
          line: 104,
          column: 31
        },
        end: {
          line: 104,
          column: 60
        }
      },
      "38": {
        start: {
          line: 105,
          column: 29
        },
        end: {
          line: 105,
          column: 56
        }
      },
      "39": {
        start: {
          line: 107,
          column: 28
        },
        end: {
          line: 107,
          column: 72
        }
      },
      "40": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "41": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 113,
          column: 15
        }
      },
      "42": {
        start: {
          line: 116,
          column: 21
        },
        end: {
          line: 129,
          column: 10
        }
      },
      "43": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "44": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 135,
          column: 15
        }
      },
      "45": {
        start: {
          line: 138,
          column: 24
        },
        end: {
          line: 138,
          column: 236
        }
      },
      "46": {
        start: {
          line: 140,
          column: 27
        },
        end: {
          line: 140,
          column: 31
        }
      },
      "47": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 143,
          column: 9
        }
      },
      "48": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 39
        }
      },
      "49": {
        start: {
          line: 144,
          column: 23
        },
        end: {
          line: 144,
          column: 65
        }
      },
      "50": {
        start: {
          line: 146,
          column: 24
        },
        end: {
          line: 146,
          column: 74
        }
      },
      "51": {
        start: {
          line: 147,
          column: 26
        },
        end: {
          line: 147,
          column: 116
        }
      },
      "52": {
        start: {
          line: 149,
          column: 28
        },
        end: {
          line: 149,
          column: 60
        }
      },
      "53": {
        start: {
          line: 150,
          column: 29
        },
        end: {
          line: 150,
          column: 110
        }
      },
      "54": {
        start: {
          line: 151,
          column: 25
        },
        end: {
          line: 151,
          column: 97
        }
      },
      "55": {
        start: {
          line: 152,
          column: 27
        },
        end: {
          line: 152,
          column: 66
        }
      },
      "56": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "57": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 58
        }
      },
      "58": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 162,
          column: 15
        }
      },
      "59": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 62
        }
      },
      "60": {
        start: {
          line: 165,
          column: 28
        },
        end: {
          line: 165,
          column: 101
        }
      },
      "61": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 66
        }
      },
      "62": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 68
        }
      },
      "63": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 176,
          column: 11
        }
      },
      "64": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 61
        }
      },
      "65": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 189,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 10
          }
        },
        loc: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 15,
            column: 21
          }
        },
        loc: {
          start: {
            line: 15,
            column: 31
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "fetchSalesData",
        decl: {
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 25,
            column: 29
          }
        },
        loc: {
          start: {
            line: 25,
            column: 78
          },
          end: {
            line: 91,
            column: 1
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 59,
            column: 61
          },
          end: {
            line: 59,
            column: 62
          }
        },
        loc: {
          start: {
            line: 59,
            column: 65
          },
          end: {
            line: 75,
            column: 14
          }
        },
        line: 59
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 92,
            column: 61
          },
          end: {
            line: 92,
            column: 62
          }
        },
        loc: {
          start: {
            line: 92,
            column: 87
          },
          end: {
            line: 191,
            column: 1
          }
        },
        line: 92
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        }, {
          start: {
            line: 45,
            column: 11
          },
          end: {
            line: 50,
            column: 5
          }
        }],
        line: 42
      },
      "1": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 17
          }
        }, {
          start: {
            line: 42,
            column: 21
          },
          end: {
            line: 42,
            column: 28
          }
        }],
        line: 42
      },
      "2": {
        loc: {
          start: {
            line: 57,
            column: 26
          },
          end: {
            line: 57,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 57,
            column: 43
          },
          end: {
            line: 57,
            column: 46
          }
        }, {
          start: {
            line: 57,
            column: 49
          },
          end: {
            line: 57,
            column: 57
          }
        }],
        line: 57
      },
      "3": {
        loc: {
          start: {
            line: 58,
            column: 28
          },
          end: {
            line: 58,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 58,
            column: 49
          },
          end: {
            line: 58,
            column: 54
          }
        }, {
          start: {
            line: 58,
            column: 57
          },
          end: {
            line: 58,
            column: 67
          }
        }],
        line: 58
      },
      "4": {
        loc: {
          start: {
            line: 65,
            column: 23
          },
          end: {
            line: 67,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 65,
            column: 32
          },
          end: {
            line: 67,
            column: 21
          }
        }, {
          start: {
            line: 67,
            column: 24
          },
          end: {
            line: 67,
            column: 26
          }
        }],
        line: 65
      },
      "5": {
        loc: {
          start: {
            line: 68,
            column: 23
          },
          end: {
            line: 70,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 68,
            column: 32
          },
          end: {
            line: 70,
            column: 21
          }
        }, {
          start: {
            line: 70,
            column: 24
          },
          end: {
            line: 70,
            column: 26
          }
        }],
        line: 68
      },
      "6": {
        loc: {
          start: {
            line: 82,
            column: 19
          },
          end: {
            line: 82,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 19
          },
          end: {
            line: 82,
            column: 45
          }
        }, {
          start: {
            line: 82,
            column: 49
          },
          end: {
            line: 82,
            column: 50
          }
        }],
        line: 82
      },
      "7": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "8": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "9": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "10": {
        loc: {
          start: {
            line: 138,
            column: 24
          },
          end: {
            line: 138,
            column: 236
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 24
          },
          end: {
            line: 138,
            column: 49
          }
        }, {
          start: {
            line: 138,
            column: 53
          },
          end: {
            line: 138,
            column: 84
          }
        }, {
          start: {
            line: 138,
            column: 88
          },
          end: {
            line: 138,
            column: 163
          }
        }, {
          start: {
            line: 138,
            column: 167
          },
          end: {
            line: 138,
            column: 236
          }
        }],
        line: 138
      },
      "11": {
        loc: {
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "12": {
        loc: {
          start: {
            line: 144,
            column: 23
          },
          end: {
            line: 144,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 144,
            column: 44
          },
          end: {
            line: 144,
            column: 58
          }
        }, {
          start: {
            line: 144,
            column: 61
          },
          end: {
            line: 144,
            column: 65
          }
        }],
        line: 144
      },
      "13": {
        loc: {
          start: {
            line: 146,
            column: 24
          },
          end: {
            line: 146,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 146,
            column: 39
          },
          end: {
            line: 146,
            column: 61
          }
        }, {
          start: {
            line: 146,
            column: 64
          },
          end: {
            line: 146,
            column: 74
          }
        }],
        line: 146
      },
      "14": {
        loc: {
          start: {
            line: 147,
            column: 26
          },
          end: {
            line: 147,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 147,
            column: 43
          },
          end: {
            line: 147,
            column: 67
          }
        }, {
          start: {
            line: 147,
            column: 70
          },
          end: {
            line: 147,
            column: 116
          }
        }],
        line: 147
      },
      "15": {
        loc: {
          start: {
            line: 149,
            column: 28
          },
          end: {
            line: 149,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 149,
            column: 38
          },
          end: {
            line: 149,
            column: 45
          }
        }, {
          start: {
            line: 149,
            column: 48
          },
          end: {
            line: 149,
            column: 60
          }
        }],
        line: 149
      },
      "16": {
        loc: {
          start: {
            line: 151,
            column: 44
          },
          end: {
            line: 151,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 44
          },
          end: {
            line: 151,
            column: 50
          }
        }, {
          start: {
            line: 151,
            column: 54
          },
          end: {
            line: 151,
            column: 59
          }
        }],
        line: 151
      },
      "17": {
        loc: {
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "18": {
        loc: {
          start: {
            line: 183,
            column: 21
          },
          end: {
            line: 183,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 183,
            column: 46
          },
          end: {
            line: 183,
            column: 59
          }
        }, {
          start: {
            line: 183,
            column: 62
          },
          end: {
            line: 183,
            column: 77
          }
        }],
        line: 183
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/dashboard/sales/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { prisma, safeQuery } from '@/lib/prisma';\nimport { cacheService } from '@/lib/cache';\nimport { ShopAccessControl } from '@/lib/utils/shopMiddleware';\nimport { validateTokenPermission, getUserIdFromToken } from '@/lib/auth';\nimport { permissionService } from '@/lib/services/PermissionService';\n\nexport async function fetchSalesData(shopId?: string | null, periodDays?: number, startDate?: Date, endDate?: Date, userId?: string | null) {\n    const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    \n    let start: Date;\n    let end: Date;\n\n    if (startDate && endDate) {\n        start = startDate;\n        end = endDate;\n    } else {\n        // Default behavior - last 6 months\n        const now = new Date();\n        end = new Date();\n        start = new Date(now.getFullYear(), now.getMonth() - 5, 1);\n    }\n    \n    const months = [];\n    const current = new Date(start.getFullYear(), start.getMonth(), 1);\n\n    while (current <= end) {\n        const monthStart = new Date(current.getFullYear(), current.getMonth(), 1);\n        const monthEnd = new Date(current.getFullYear(), current.getMonth() + 1, 0, 23, 59, 59, 999);\n\n        // Ensure we don't go beyond the specified end date\n        const actualEnd = monthEnd > end ? end : monthEnd;\n        const actualStart = monthStart < start ? start : monthStart;\n\n        const monthlyInvoices = await safeQuery(\n            () => prisma.invoice.aggregate({\n                where: {\n                    createdAt: {\n                        gte: actualStart,\n                        lte: actualEnd\n                    },\n                    ...(shopId ? { shopId } : {}),\n                    ...(userId ? { createdBy: userId } : {})\n                },\n                _sum: {\n                    total: true\n                }\n            }),\n            { _sum: { total: null } },\n            `Failed to fetch invoice data for ${monthNames[current.getMonth()]} ${current.getFullYear()}`\n        );\n\n        months.push({\n            month: `${monthNames[current.getMonth()]} ${current.getFullYear()}`,\n            sales: monthlyInvoices._sum.total || 0\n        });\n\n        // Move to next month\n        current.setMonth(current.getMonth() + 1);\n    }\n\n    return {\n        success: true,\n        data: months\n    };\n}\n\n// GET: Fetch monthly sales data with shop-based filtering\nexport const GET = ShopAccessControl.withShopAccess(async (request: NextRequest, context) => {\n    try {\n        // Validate token and permissions\n        const authResult = await validateTokenPermission(request, 'view_sales');\n        if (!authResult.isValid) {\n            return NextResponse.json({ error: authResult.message }, { status: 401 });\n        }\n\n        const { searchParams } = new URL(request.url);\n        const startDateParam = searchParams.get('startDate');\n        const endDateParam = searchParams.get('endDate');\n\n        // Get user ID from token\n        const tokenUserId = await getUserIdFromToken(request);\n        if (!tokenUserId) {\n            return NextResponse.json({ error: 'User ID not found in token' }, { status: 401 });\n        }\n\n        // Fetch user details to check role and permissions\n        const user = await prisma.user.findUnique({\n            where: { id: tokenUserId },\n            select: {\n                id: true,\n                name: true,\n                email: true,\n                roleId: true,\n                roleName: true,\n                permissions: true,\n                shopId: true\n            }\n        });\n\n        if (!user) {\n            return NextResponse.json({ error: 'User not found' }, { status: 404 });\n        }\n\n        // Check if user is admin or has admin permissions\n        const isAdmin = user.roleName === 'Admin' || user.roleName === 'Super Admin' || \n                       await permissionService.hasPermission(user, 'admin:all') || \n                       await permissionService.hasPermission(user, 'ALL');\n\n        // Determine user filtering\n        let filterUserId: string | null = null;\n        if (!isAdmin) {\n            filterUserId = tokenUserId;\n        }\n\n        const shopId = context.isFiltered ? context.shopId : null;\n        \n        // Determine date range\n        const endDate = endDateParam ? new Date(endDateParam) : new Date();\n        const startDate = startDateParam ? new Date(startDateParam) : new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\n\n        // Create cache key that includes shop context and user context and date range\n        const userContext = isAdmin ? 'admin' : filterUserId;\n        const dateRangeKey = `${startDate.toISOString().split('T')[0]}-${endDate.toISOString().split('T')[0]}`;\n        const cacheKey = `dashboard:sales:${shopId || 'all'}:user:${userContext}:${dateRangeKey}`;\n        \n        const cachedData = await cacheService.get(cacheKey);\n\n        if (cachedData) {\n            console.log('\u2705 Sales data served from cache');\n            return NextResponse.json({\n                ...cachedData,\n                meta: {\n                    shopFiltered: context.isFiltered,\n                    shopId: context.shopId,\n                    fromCache: true\n                }\n            });\n        }\n\n        console.log('\uD83D\uDD04 Fetching fresh sales data');\n        const salesResult = await fetchSalesData(\n            shopId,\n            undefined,\n            startDate,\n            endDate,\n            filterUserId\n        );\n\n        // Cache for 5 minutes (sales data changes less frequently)\n        await cacheService.set(cacheKey, salesResult, 300);\n        console.log('\uD83D\uDCBE Sales data cached for 5 minutes');\n\n        return NextResponse.json({\n            ...salesResult,\n            meta: {\n                shopFiltered: context.isFiltered,\n                shopId: context.shopId,\n                fromCache: false\n            }\n        });\n    } catch (error) {\n        console.error('Error generating sales data:', error);\n\n        // Return empty array on error\n        return NextResponse.json({\n            success: false,\n            data: [],\n            message: error instanceof Error ? error.message : 'Unknown error',\n            meta: {\n                shopFiltered: context.isFiltered,\n                shopId: context.shopId,\n                error: true\n            }\n        });\n    }\n});"],
      names: ["GET", "fetchSalesData", "shopId", "periodDays", "startDate", "endDate", "userId", "monthNames", "start", "end", "now", "Date", "getFullYear", "getMonth", "months", "current", "monthStart", "monthEnd", "actualEnd", "actualStart", "monthlyInvoices", "safeQuery", "prisma", "invoice", "aggregate", "where", "createdAt", "gte", "lte", "createdBy", "_sum", "total", "push", "month", "sales", "setMonth", "success", "data", "ShopAccessControl", "withShopAccess", "request", "context", "authResult", "validateTokenPermission", "isValid", "NextResponse", "json", "error", "message", "status", "searchParams", "URL", "url", "startDateParam", "get", "endDateParam", "tokenUserId", "getUserIdFromToken", "user", "findUnique", "id", "select", "name", "email", "roleId", "roleName", "permissions", "isAdmin", "permissionService", "hasPermission", "filterUserId", "isFiltered", "userContext", "dateRangeKey", "toISOString", "split", "cacheKey", "cachedData", "cacheService", "console", "log", "meta", "shopFiltered", "fromCache", "salesResult", "undefined", "set", "Error"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a5c31464f371ae6d0f6992f6433bac23792e1367"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1mz236g7zl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1mz236g7zl();
cov_1mz236g7zl().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1mz236g7zl().f[0]++;
  cov_1mz236g7zl().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1mz236g7zl().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1mz236g7zl().s[3]++;
_export(exports, {
  GET: function () {
    /* istanbul ignore next */
    cov_1mz236g7zl().f[1]++;
    cov_1mz236g7zl().s[4]++;
    return GET;
  },
  fetchSalesData: function () {
    /* istanbul ignore next */
    cov_1mz236g7zl().f[2]++;
    cov_1mz236g7zl().s[5]++;
    return fetchSalesData;
  }
});
const _server =
/* istanbul ignore next */
(cov_1mz236g7zl().s[6]++, require("next/server"));
const _prisma =
/* istanbul ignore next */
(cov_1mz236g7zl().s[7]++, require("../../../../lib/prisma"));
const _cache =
/* istanbul ignore next */
(cov_1mz236g7zl().s[8]++, require("../../../../lib/cache"));
const _shopMiddleware =
/* istanbul ignore next */
(cov_1mz236g7zl().s[9]++, require("../../../../lib/utils/shopMiddleware"));
const _auth =
/* istanbul ignore next */
(cov_1mz236g7zl().s[10]++, require("../../../../lib/auth"));
const _PermissionService =
/* istanbul ignore next */
(cov_1mz236g7zl().s[11]++, require("../../../../lib/services/PermissionService"));
async function fetchSalesData(shopId, periodDays, startDate, endDate, userId) {
  /* istanbul ignore next */
  cov_1mz236g7zl().f[3]++;
  const monthNames =
  /* istanbul ignore next */
  (cov_1mz236g7zl().s[12]++, ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]);
  let start;
  let end;
  /* istanbul ignore next */
  cov_1mz236g7zl().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_1mz236g7zl().b[1][0]++, startDate) &&
  /* istanbul ignore next */
  (cov_1mz236g7zl().b[1][1]++, endDate)) {
    /* istanbul ignore next */
    cov_1mz236g7zl().b[0][0]++;
    cov_1mz236g7zl().s[14]++;
    start = startDate;
    /* istanbul ignore next */
    cov_1mz236g7zl().s[15]++;
    end = endDate;
  } else {
    /* istanbul ignore next */
    cov_1mz236g7zl().b[0][1]++;
    // Default behavior - last 6 months
    const now =
    /* istanbul ignore next */
    (cov_1mz236g7zl().s[16]++, new Date());
    /* istanbul ignore next */
    cov_1mz236g7zl().s[17]++;
    end = new Date();
    /* istanbul ignore next */
    cov_1mz236g7zl().s[18]++;
    start = new Date(now.getFullYear(), now.getMonth() - 5, 1);
  }
  const months =
  /* istanbul ignore next */
  (cov_1mz236g7zl().s[19]++, []);
  const current =
  /* istanbul ignore next */
  (cov_1mz236g7zl().s[20]++, new Date(start.getFullYear(), start.getMonth(), 1));
  /* istanbul ignore next */
  cov_1mz236g7zl().s[21]++;
  while (current <= end) {
    const monthStart =
    /* istanbul ignore next */
    (cov_1mz236g7zl().s[22]++, new Date(current.getFullYear(), current.getMonth(), 1));
    const monthEnd =
    /* istanbul ignore next */
    (cov_1mz236g7zl().s[23]++, new Date(current.getFullYear(), current.getMonth() + 1, 0, 23, 59, 59, 999));
    // Ensure we don't go beyond the specified end date
    const actualEnd =
    /* istanbul ignore next */
    (cov_1mz236g7zl().s[24]++, monthEnd > end ?
    /* istanbul ignore next */
    (cov_1mz236g7zl().b[2][0]++, end) :
    /* istanbul ignore next */
    (cov_1mz236g7zl().b[2][1]++, monthEnd));
    const actualStart =
    /* istanbul ignore next */
    (cov_1mz236g7zl().s[25]++, monthStart < start ?
    /* istanbul ignore next */
    (cov_1mz236g7zl().b[3][0]++, start) :
    /* istanbul ignore next */
    (cov_1mz236g7zl().b[3][1]++, monthStart));
    const monthlyInvoices =
    /* istanbul ignore next */
    (cov_1mz236g7zl().s[26]++, await (0, _prisma.safeQuery)(() => {
      /* istanbul ignore next */
      cov_1mz236g7zl().f[4]++;
      cov_1mz236g7zl().s[27]++;
      return _prisma.prisma.invoice.aggregate({
        where: {
          createdAt: {
            gte: actualStart,
            lte: actualEnd
          },
          ...(shopId ?
          /* istanbul ignore next */
          (cov_1mz236g7zl().b[4][0]++, {
            shopId
          }) :
          /* istanbul ignore next */
          (cov_1mz236g7zl().b[4][1]++, {})),
          ...(userId ?
          /* istanbul ignore next */
          (cov_1mz236g7zl().b[5][0]++, {
            createdBy: userId
          }) :
          /* istanbul ignore next */
          (cov_1mz236g7zl().b[5][1]++, {}))
        },
        _sum: {
          total: true
        }
      });
    }, {
      _sum: {
        total: null
      }
    }, `Failed to fetch invoice data for ${monthNames[current.getMonth()]} ${current.getFullYear()}`));
    /* istanbul ignore next */
    cov_1mz236g7zl().s[28]++;
    months.push({
      month: `${monthNames[current.getMonth()]} ${current.getFullYear()}`,
      sales:
      /* istanbul ignore next */
      (cov_1mz236g7zl().b[6][0]++, monthlyInvoices._sum.total) ||
      /* istanbul ignore next */
      (cov_1mz236g7zl().b[6][1]++, 0)
    });
    // Move to next month
    /* istanbul ignore next */
    cov_1mz236g7zl().s[29]++;
    current.setMonth(current.getMonth() + 1);
  }
  /* istanbul ignore next */
  cov_1mz236g7zl().s[30]++;
  return {
    success: true,
    data: months
  };
}
const GET =
/* istanbul ignore next */
(cov_1mz236g7zl().s[31]++, _shopMiddleware.ShopAccessControl.withShopAccess(async (request, context) => {
  /* istanbul ignore next */
  cov_1mz236g7zl().f[5]++;
  cov_1mz236g7zl().s[32]++;
  try {
    // Validate token and permissions
    const authResult =
    /* istanbul ignore next */
    (cov_1mz236g7zl().s[33]++, await (0, _auth.validateTokenPermission)(request, "view_sales"));
    /* istanbul ignore next */
    cov_1mz236g7zl().s[34]++;
    if (!authResult.isValid) {
      /* istanbul ignore next */
      cov_1mz236g7zl().b[7][0]++;
      cov_1mz236g7zl().s[35]++;
      return _server.NextResponse.json({
        error: authResult.message
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1mz236g7zl().b[7][1]++;
    }
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_1mz236g7zl().s[36]++, new URL(request.url));
    const startDateParam =
    /* istanbul ignore next */
    (cov_1mz236g7zl().s[37]++, searchParams.get("startDate"));
    const endDateParam =
    /* istanbul ignore next */
    (cov_1mz236g7zl().s[38]++, searchParams.get("endDate"));
    // Get user ID from token
    const tokenUserId =
    /* istanbul ignore next */
    (cov_1mz236g7zl().s[39]++, await (0, _auth.getUserIdFromToken)(request));
    /* istanbul ignore next */
    cov_1mz236g7zl().s[40]++;
    if (!tokenUserId) {
      /* istanbul ignore next */
      cov_1mz236g7zl().b[8][0]++;
      cov_1mz236g7zl().s[41]++;
      return _server.NextResponse.json({
        error: "User ID not found in token"
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1mz236g7zl().b[8][1]++;
    }
    // Fetch user details to check role and permissions
    const user =
    /* istanbul ignore next */
    (cov_1mz236g7zl().s[42]++, await _prisma.prisma.user.findUnique({
      where: {
        id: tokenUserId
      },
      select: {
        id: true,
        name: true,
        email: true,
        roleId: true,
        roleName: true,
        permissions: true,
        shopId: true
      }
    }));
    /* istanbul ignore next */
    cov_1mz236g7zl().s[43]++;
    if (!user) {
      /* istanbul ignore next */
      cov_1mz236g7zl().b[9][0]++;
      cov_1mz236g7zl().s[44]++;
      return _server.NextResponse.json({
        error: "User not found"
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_1mz236g7zl().b[9][1]++;
    }
    // Check if user is admin or has admin permissions
    const isAdmin =
    /* istanbul ignore next */
    (cov_1mz236g7zl().s[45]++,
    /* istanbul ignore next */
    (cov_1mz236g7zl().b[10][0]++, user.roleName === "Admin") ||
    /* istanbul ignore next */
    (cov_1mz236g7zl().b[10][1]++, user.roleName === "Super Admin") ||
    /* istanbul ignore next */
    (cov_1mz236g7zl().b[10][2]++, await _PermissionService.permissionService.hasPermission(user, "admin:all")) ||
    /* istanbul ignore next */
    (cov_1mz236g7zl().b[10][3]++, await _PermissionService.permissionService.hasPermission(user, "ALL")));
    // Determine user filtering
    let filterUserId =
    /* istanbul ignore next */
    (cov_1mz236g7zl().s[46]++, null);
    /* istanbul ignore next */
    cov_1mz236g7zl().s[47]++;
    if (!isAdmin) {
      /* istanbul ignore next */
      cov_1mz236g7zl().b[11][0]++;
      cov_1mz236g7zl().s[48]++;
      filterUserId = tokenUserId;
    } else
    /* istanbul ignore next */
    {
      cov_1mz236g7zl().b[11][1]++;
    }
    const shopId =
    /* istanbul ignore next */
    (cov_1mz236g7zl().s[49]++, context.isFiltered ?
    /* istanbul ignore next */
    (cov_1mz236g7zl().b[12][0]++, context.shopId) :
    /* istanbul ignore next */
    (cov_1mz236g7zl().b[12][1]++, null));
    // Determine date range
    const endDate =
    /* istanbul ignore next */
    (cov_1mz236g7zl().s[50]++, endDateParam ?
    /* istanbul ignore next */
    (cov_1mz236g7zl().b[13][0]++, new Date(endDateParam)) :
    /* istanbul ignore next */
    (cov_1mz236g7zl().b[13][1]++, new Date()));
    const startDate =
    /* istanbul ignore next */
    (cov_1mz236g7zl().s[51]++, startDateParam ?
    /* istanbul ignore next */
    (cov_1mz236g7zl().b[14][0]++, new Date(startDateParam)) :
    /* istanbul ignore next */
    (cov_1mz236g7zl().b[14][1]++, new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)));
    // Create cache key that includes shop context and user context and date range
    const userContext =
    /* istanbul ignore next */
    (cov_1mz236g7zl().s[52]++, isAdmin ?
    /* istanbul ignore next */
    (cov_1mz236g7zl().b[15][0]++, "admin") :
    /* istanbul ignore next */
    (cov_1mz236g7zl().b[15][1]++, filterUserId));
    const dateRangeKey =
    /* istanbul ignore next */
    (cov_1mz236g7zl().s[53]++, `${startDate.toISOString().split("T")[0]}-${endDate.toISOString().split("T")[0]}`);
    const cacheKey =
    /* istanbul ignore next */
    (cov_1mz236g7zl().s[54]++, `dashboard:sales:${
    /* istanbul ignore next */
    (cov_1mz236g7zl().b[16][0]++, shopId) ||
    /* istanbul ignore next */
    (cov_1mz236g7zl().b[16][1]++, "all")}:user:${userContext}:${dateRangeKey}`);
    const cachedData =
    /* istanbul ignore next */
    (cov_1mz236g7zl().s[55]++, await _cache.cacheService.get(cacheKey));
    /* istanbul ignore next */
    cov_1mz236g7zl().s[56]++;
    if (cachedData) {
      /* istanbul ignore next */
      cov_1mz236g7zl().b[17][0]++;
      cov_1mz236g7zl().s[57]++;
      console.log("✅ Sales data served from cache");
      /* istanbul ignore next */
      cov_1mz236g7zl().s[58]++;
      return _server.NextResponse.json({
        ...cachedData,
        meta: {
          shopFiltered: context.isFiltered,
          shopId: context.shopId,
          fromCache: true
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1mz236g7zl().b[17][1]++;
    }
    cov_1mz236g7zl().s[59]++;
    console.log("\uD83D\uDD04 Fetching fresh sales data");
    const salesResult =
    /* istanbul ignore next */
    (cov_1mz236g7zl().s[60]++, await fetchSalesData(shopId, undefined, startDate, endDate, filterUserId));
    // Cache for 5 minutes (sales data changes less frequently)
    /* istanbul ignore next */
    cov_1mz236g7zl().s[61]++;
    await _cache.cacheService.set(cacheKey, salesResult, 300);
    /* istanbul ignore next */
    cov_1mz236g7zl().s[62]++;
    console.log("\uD83D\uDCBE Sales data cached for 5 minutes");
    /* istanbul ignore next */
    cov_1mz236g7zl().s[63]++;
    return _server.NextResponse.json({
      ...salesResult,
      meta: {
        shopFiltered: context.isFiltered,
        shopId: context.shopId,
        fromCache: false
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1mz236g7zl().s[64]++;
    console.error("Error generating sales data:", error);
    // Return empty array on error
    /* istanbul ignore next */
    cov_1mz236g7zl().s[65]++;
    return _server.NextResponse.json({
      success: false,
      data: [],
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1mz236g7zl().b[18][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1mz236g7zl().b[18][1]++, "Unknown error"),
      meta: {
        shopFiltered: context.isFiltered,
        shopId: context.shopId,
        error: true
      }
    });
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,