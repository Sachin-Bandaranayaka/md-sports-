{"version":3,"names":["AddRolePage","cov_1sf2c1j28t","f","router","s","_navigation","useRouter","roleForm","setRoleForm","_react","useState","name","description","permissions","setPermissions","isLoading","setIsLoading","formError","setFormError","formSuccess","setFormSuccess","useEffect","fetchData","permissionsResponse","fetch","ok","b","permissionsData","json","success","data","setFallbackPermissions","error","console","id","handleRoleFormChange","e","value","target","prev","handlePermissionChange","permissionId","newPermissions","includes","filter","handleAddRole","preventDefault","response","method","headers","body","JSON","stringify","setTimeout","push","message","_jsxruntime","jsx","_MainLayout","default","className","jsxs","onSubmit","htmlFor","type","onChange","required","rows","_Button","Button","variant","size","onClick","allPermissionIds","map","p","viewPermIds","String","managePermIds","Set","moduleGroups","forEach","permission","module","split","sortedModules","Object","keys","sort","checked","every","allModulePermIds","allSelected","pId","length","disabled","Fragment","_lucidereact","Loader2"],"sources":["/Users/sachin/Documents/md-sports-/src/app/settings/roles/add/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport MainLayout from '@/components/layout/MainLayout';\nimport { Button } from '@/components/ui/Button';\nimport { Loader2, X } from 'lucide-react'; // Assuming X might be used for a cancel icon/button if not text\n\n// Define the structure for a Permission if not already globally available\ninterface Permission {\n    id: string;\n    name: string;\n    description?: string;\n    module?: string;\n}\n\nexport default function AddRolePage() {\n    const router = useRouter();\n    const [roleForm, setRoleForm] = useState({\n        name: '',\n        description: '',\n        permissions: [] as string[]\n    });\n    const [permissions, setPermissions] = useState<Permission[]>([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [formError, setFormError] = useState('');\n    const [formSuccess, setFormSuccess] = useState('');\n\n    // Fetch permissions on component mount\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const permissionsResponse = await fetch('/api/permissions');\n                if (permissionsResponse.ok) {\n                    const permissionsData = await permissionsResponse.json();\n                    if (permissionsData.success) {\n                        setPermissions(permissionsData.data || []);\n                    } else {\n                        setFallbackPermissions();\n                    }\n                } else {\n                    setFallbackPermissions();\n                }\n            } catch (error) {\n                console.error('Error fetching permissions:', error);\n                setFallbackPermissions();\n            }\n        };\n        fetchData();\n    }, []);\n\n    const setFallbackPermissions = () => {\n        setPermissions([\n            { id: 'dashboard:view', name: 'Dashboard Access' },\n            { id: 'dashboard:manage', name: 'Manage Dashboard' },\n            { id: 'inventory:view', name: 'View Inventory' },\n            { id: 'inventory:manage', name: 'Manage Inventory' },\n            { id: 'inventory:create', name: 'Create Inventory Items' },\n            { id: 'inventory:update', name: 'Update Inventory Items' },\n            { id: 'inventory:delete', name: 'Delete Inventory Items' },\n            { id: 'inventory:transfer', name: 'Transfer Inventory' },\n            { id: 'sales:view', name: 'View Sales' },\n            { id: 'sales:manage', name: 'Manage Sales' },\n            { id: 'sales:create', name: 'Create Sales' },\n            { id: 'sales:update', name: 'Update Sales' },\n            { id: 'sales:delete', name: 'Delete Sales' },\n            { id: 'sales:discount', name: 'Apply Discounts' },\n            { id: 'user:view', name: 'View Users' },\n            { id: 'user:manage', name: 'Manage Users' },\n            { id: 'user:create', name: 'Create Users' },\n            { id: 'user:update', name: 'Update Users' },\n            { id: 'user:delete', name: 'Delete Users' },\n            { id: 'invoice:view', name: 'View Invoices' },\n            { id: 'invoice:create', name: 'Create Invoices' },\n            { id: 'invoice:update', name: 'Update Invoices' },\n            { id: 'invoice:delete', name: 'Delete Invoices' },\n            { id: 'invoice:void', name: 'Void Invoices' },\n            { id: 'report:view', name: 'View Reports' },\n            { id: 'report:generate', name: 'Generate Reports' },\n            { id: 'report:export', name: 'Export Reports' },\n            { id: 'customer:view', name: 'View Customers' },\n            { id: 'customer:manage', name: 'Manage Customers' },\n            { id: 'customer:create', name: 'Create Customers' },\n            { id: 'customer:update', name: 'Update Customers' },\n            { id: 'customer:delete', name: 'Delete Customers' },\n            { id: 'supplier:view', name: 'View Suppliers' },\n            { id: 'supplier:manage', name: 'Manage Suppliers' },\n            { id: 'supplier:create', name: 'Create Suppliers' },\n            { id: 'supplier:update', name: 'Update Suppliers' },\n            { id: 'supplier:delete', name: 'Delete Suppliers' },\n            { id: 'shop:distribution:view', name: 'View Shop Distribution' },\n            { id: 'shop:manage', name: 'Manage Shops' },\n            { id: 'shop:create', name: 'Create Shops' },\n            { id: 'shop:update', name: 'Update Shops' },\n            { id: 'shop:delete', name: 'Delete Shops' },\n            { id: 'payment:view', name: 'View Payments' },\n            { id: 'payment:manage', name: 'Manage Payments' },\n            { id: 'payment:create', name: 'Create Payments' },\n            { id: 'payment:update', name: 'Update Payments' },\n            { id: 'payment:delete', name: 'Delete Payments' },\n            { id: 'settings:view', name: 'View Settings' },\n            { id: 'settings:manage', name: 'Manage Settings' },\n            { id: 'category:view', name: 'View Categories' },\n            { id: 'category:manage', name: 'Manage Categories' },\n            { id: 'category:create', name: 'Create Categories' },\n            { id: 'category:update', name: 'Update Categories' },\n            { id: 'category:delete', name: 'Delete Categories' },\n            { id: 'purchase:view', name: 'View Purchases' },\n            { id: 'purchase:manage', name: 'Manage Purchases' },\n            { id: 'purchase:create', name: 'Create Purchases' },\n            { id: 'purchase:update', name: 'Update Purchases' },\n            { id: 'purchase:delete', name: 'Delete Purchases' },\n        ]);\n    };\n\n    const handleRoleFormChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        const { name, value } = e.target;\n        setRoleForm(prev => ({ ...prev, [name]: value }));\n    };\n\n    const handlePermissionChange = (permissionId: string) => {\n        setRoleForm(prev => {\n            const newPermissions = prev.permissions.includes(permissionId)\n                ? prev.permissions.filter(id => id !== permissionId)\n                : [...prev.permissions, permissionId];\n            return { ...prev, permissions: newPermissions };\n        });\n    };\n\n    const handleAddRole = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setIsLoading(true);\n        setFormError('');\n        setFormSuccess('');\n\n        try {\n            const response = await fetch('/api/users/roles', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(roleForm),\n            });\n\n            const data = await response.json();\n\n            if (data.success) {\n                setFormSuccess('Role added successfully! Redirecting...');\n                setRoleForm({ name: '', description: '', permissions: [] });\n                setTimeout(() => {\n                    router.push('/settings?tab=roles'); // Or a more specific roles page\n                }, 1500);\n            } else {\n                setFormError(data.message || 'Failed to add role');\n            }\n        } catch (error) {\n            console.error('Error adding role:', error);\n            setFormError('An error occurred. Please try again.');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <MainLayout>\n            <div className=\"container mx-auto px-4 py-8\">\n                <div className=\"bg-white p-6 rounded-lg shadow-md max-w-3xl mx-auto\">\n                    <div className=\"flex justify-between items-center mb-6 pb-4 border-b\">\n                        <h1 className=\"text-xl font-semibold text-gray-900\">Add New Role</h1>\n                    </div>\n\n                    {formError && (\n                        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md mb-4\">\n                            {formError}\n                        </div>\n                    )}\n                    {formSuccess && (\n                        <div className=\"bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded-md mb-4\">\n                            {formSuccess}\n                        </div>\n                    )}\n\n                    <form onSubmit={handleAddRole}>\n                        <div className=\"space-y-6\">\n                            <div>\n                                <label htmlFor=\"roleName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Role Name <span className=\"text-red-500\">*</span>\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    id=\"roleName\"\n                                    name=\"name\"\n                                    value={roleForm.name}\n                                    onChange={handleRoleFormChange}\n                                    className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5\"\n                                    required\n                                />\n                            </div>\n\n                            <div>\n                                <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Description\n                                </label>\n                                <textarea\n                                    id=\"description\"\n                                    name=\"description\"\n                                    value={roleForm.description}\n                                    onChange={handleRoleFormChange}\n                                    className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5\"\n                                    rows={3}\n                                ></textarea>\n                            </div>\n\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                                    Permissions\n                                </label>\n                                {/* Quick actions */}\n                                <div className=\"flex flex-wrap gap-2 mb-3\">\n                                    <Button\n                                        type=\"button\"\n                                        variant=\"outline\"\n                                        size=\"sm\"\n                                        onClick={() => {\n                                            const allPermissionIds = permissions.map(p => p.id);\n                                            setRoleForm(prev => ({ ...prev, permissions: allPermissionIds }));\n                                        }}\n                                    >\n                                        Select All\n                                    </Button>\n                                    <Button\n                                        type=\"button\"\n                                        variant=\"outline\"\n                                        size=\"sm\"\n                                        onClick={() => setRoleForm(prev => ({ ...prev, permissions: [] }))}\n                                    >\n                                        Deselect All\n                                    </Button>\n                                    <Button\n                                        type=\"button\"\n                                        variant=\"outline\"\n                                        size=\"sm\"\n                                        onClick={() => {\n                                            const viewPermIds = permissions\n                                                .filter(p => String(p.id).includes(':view'))\n                                                .map(p => p.id);\n                                            setRoleForm(prev => ({ ...prev, permissions: viewPermIds }));\n                                        }}\n                                    >\n                                        View Access Only\n                                    </Button>\n                                    <Button\n                                        type=\"button\"\n                                        variant=\"outline\"\n                                        size=\"sm\"\n                                        onClick={() => {\n                                            const managePermIds = permissions\n                                                .filter(p => String(p.id).includes(':manage'))\n                                                .map(p => p.id);\n                                            setRoleForm(prev => ({\n                                                ...prev,\n                                                permissions: [\n                                                    ...new Set([...prev.permissions, ...managePermIds]) // Use Set to avoid duplicates\n                                                ]\n                                            }));\n                                        }}\n                                    >\n                                        Add All Management\n                                    </Button>\n                                </div>\n\n                                <div className=\"border border-gray-200 rounded-md p-4 max-h-[400px] overflow-y-auto\">\n                                    {(() => {\n                                        const moduleGroups: { [key: string]: Permission[] } = {};\n                                        permissions.forEach(permission => {\n                                            const module = permission.module || String(permission.id).split(':')[0];\n                                            if (!moduleGroups[module]) {\n                                                moduleGroups[module] = [];\n                                            }\n                                            moduleGroups[module].push(permission);\n                                        });\n                                        const sortedModules = Object.keys(moduleGroups).sort();\n\n                                        return sortedModules.map(module => (\n                                            <div key={module} className=\"mb-4 last:mb-0\">\n                                                <div className=\"flex items-center justify-between mb-2 pb-2 border-b border-gray-200\">\n                                                    <h4 className=\"font-semibold text-md text-gray-800 capitalize\">{module}</h4>\n                                                    <div className=\"flex items-center\">\n                                                        <input\n                                                            type=\"checkbox\"\n                                                            id={`select-all-${module}`}\n                                                            checked={moduleGroups[module].every(p => roleForm.permissions.includes(p.id))}\n                                                            onChange={() => {\n                                                                const allModulePermIds = moduleGroups[module].map(p => p.id);\n                                                                const allSelected = moduleGroups[module].every(p => roleForm.permissions.includes(p.id));\n                                                                setRoleForm(prev => {\n                                                                    let newPermissions = [...prev.permissions];\n                                                                    if (allSelected) {\n                                                                        newPermissions = newPermissions.filter(pId => !allModulePermIds.includes(pId));\n                                                                    } else {\n                                                                        allModulePermIds.forEach(pId => {\n                                                                            if (!newPermissions.includes(pId)) {\n                                                                                newPermissions.push(pId);\n                                                                            }\n                                                                        });\n                                                                    }\n                                                                    return { ...prev, permissions: newPermissions };\n                                                                });\n                                                            }}\n                                                            className=\"h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary\"\n                                                        />\n                                                        <label htmlFor={`select-all-${module}`} className=\"ml-2 text-sm text-gray-600 cursor-pointer\">\n                                                            Select All in {module}\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-x-6 gap-y-2\">\n                                                    {moduleGroups[module].map(permission => (\n                                                        <div key={permission.id} className=\"flex items-center\">\n                                                            <input\n                                                                type=\"checkbox\"\n                                                                id={permission.id}\n                                                                checked={roleForm.permissions.includes(permission.id)}\n                                                                onChange={() => handlePermissionChange(permission.id)}\n                                                                className=\"h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary\"\n                                                            />\n                                                            <label htmlFor={permission.id} className=\"ml-3 block text-sm text-gray-700 cursor-pointer\">\n                                                                {permission.name}\n                                                                {permission.description && (\n                                                                    <span className=\"block text-xs text-gray-500\">\n                                                                        ({permission.description})\n                                                                    </span>\n                                                                )}\n                                                            </label>\n                                                        </div>\n                                                    ))}\n                                                </div>\n                                            </div>\n                                        ));\n                                    })()}\n                                </div>\n                                <div className=\"mt-2 text-xs text-gray-500\">\n                                    {roleForm.permissions.length} of {permissions.length} permissions selected\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"flex items-center justify-end mt-8 border-t border-gray-200 pt-5\">\n                            <Button\n                                type=\"button\"\n                                variant=\"outline\"\n                                onClick={() => router.push('/settings?tab=roles')} // Navigate back\n                                className=\"mr-3\"\n                                disabled={isLoading}\n                            >\n                                Cancel\n                            </Button>\n                            <Button\n                                type=\"submit\"\n                                variant=\"primary\"\n                                disabled={isLoading}\n                            >\n                                {isLoading ? (\n                                    <>\n                                        <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                                        Saving Role...\n                                    </>\n                                ) : (\n                                    'Save Role'\n                                )}\n                            </Button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </MainLayout>\n    );\n}"],"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","ignoreList":[]}