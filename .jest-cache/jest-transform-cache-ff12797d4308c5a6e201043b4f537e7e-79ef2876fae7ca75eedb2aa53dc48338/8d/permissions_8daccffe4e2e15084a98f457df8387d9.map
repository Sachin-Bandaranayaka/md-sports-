{"version":3,"sources":["/Users/sachin/Documents/md-sports-/src/lib/utils/permissions.ts"],"sourcesContent":["/**\n * Permission utility functions\n * \n * @deprecated Use PermissionService instead for better performance and consistency\n */\n\nimport { PERMISSIONS, Permission, isValidPermission } from '@/lib/constants/permissions';\nimport { permissionService } from '@/lib/services/PermissionService';\nimport { AuthenticatedUser } from '@/types/auth';\n\n/**\n * @deprecated Use permissionService.hasPermission() instead\n */\nexport function hasPermission(userPermissions: string[], requiredPermission: string): boolean {\n  // Add defensive type checking\n  if (!userPermissions || !Array.isArray(userPermissions) || userPermissions.length === 0) {\n    console.error('hasPermission: userPermissions is not a valid array:', {\n      type: typeof userPermissions,\n      value: userPermissions,\n      requiredPermission,\n      stack: new Error().stack\n    });\n    return false;\n  }\n\n  // Check if requiredPermission is defined\n  if (!requiredPermission) {\n    return false;\n  }\n\n  // Validate permission format\n  if (!isValidPermission(requiredPermission)) {\n    console.warn(`Invalid permission format: ${requiredPermission}`);\n    return false;\n  }\n\n  // Check for wildcard permissions\n  if (userPermissions.includes(PERMISSIONS.WILDCARD) || \n      userPermissions.includes(PERMISSIONS.ADMIN_ALL) || \n      userPermissions.includes(PERMISSIONS.LEGACY_ALL)) {\n    return true;\n  }\n\n  // Check for exact permission match\n  if (userPermissions.includes(requiredPermission)) {\n    return true;\n  }\n\n  // Check for module-level permissions (e.g., 'sales:manage' includes 'sales:view')\n  if (requiredPermission && requiredPermission.includes(':')) {\n    const [module, action] = requiredPermission.split(':');\n    if (action && userPermissions.includes(`${module}:manage`)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * @deprecated Use permissionService.hasAnyPermission() instead\n */\nexport function hasAnyPermission(userPermissions: string[], requiredPermissions: string[]): boolean {\n  return requiredPermissions.some(permission => hasPermission(userPermissions, permission));\n}\n\n/**\n * @deprecated Use permissionService.hasAllPermissions() instead\n */\nexport function hasAllPermissions(userPermissions: string[], requiredPermissions: string[]): boolean {\n  return requiredPermissions.every(permission => hasPermission(userPermissions, permission));\n}\n\n/**\n * @deprecated Use permissionService.isAdmin() instead\n */\nexport function isAdmin(userPermissions: string[]): boolean {\n  return hasAnyPermission(userPermissions, [PERMISSIONS.WILDCARD, PERMISSIONS.ADMIN_ALL, PERMISSIONS.LEGACY_ALL]);\n}\n\n// New utility functions using PermissionService\n\n/**\n * Check if user has permission using the new PermissionService\n */\nexport function checkUserPermission(\n  user: AuthenticatedUser | null,\n  permission: Permission | string,\n  context?: { shopId?: string; userId?: string; resourceId?: string }\n): boolean {\n  return permissionService.hasPermission(user, permission, context);\n}\n\n/**\n * Check if user has shop access\n */\nexport function checkShopAccess(\n  user: AuthenticatedUser | null,\n  shopId: string,\n  permission: Permission | string\n): boolean {\n  return permissionService.hasShopAccess(user, shopId, permission);\n}\n\n/**\n * Check if user is admin\n */\nexport function checkIsAdmin(user: AuthenticatedUser | null): boolean {\n  return permissionService.isAdmin(user);\n}"],"names":["checkIsAdmin","checkShopAccess","checkUserPermission","hasAllPermissions","hasAnyPermission","hasPermission","isAdmin","userPermissions","requiredPermission","Array","isArray","length","console","error","type","value","stack","Error","isValidPermission","warn","includes","PERMISSIONS","WILDCARD","ADMIN_ALL","LEGACY_ALL","module","action","split","requiredPermissions","some","permission","every","user","context","permissionService","shopId","hasShopAccess"],"mappings":"AAAA;;;;CAIC;;;;;;;;;;;IAuGeA,YAAY;eAAZA;;IAXAC,eAAe;eAAfA;;IAXAC,mBAAmB;eAAnBA;;IAhBAC,iBAAiB;eAAjBA;;IAPAC,gBAAgB;eAAhBA;;IAjDAC,aAAa;eAAbA;;IA+DAC,OAAO;eAAPA;;;6BAtE2C;mCACzB;AAM3B,SAASD,cAAcE,eAAyB,EAAEC,kBAA0B;IACjF,8BAA8B;IAC9B,IAAI,CAACD,mBAAmB,CAACE,MAAMC,OAAO,CAACH,oBAAoBA,gBAAgBI,MAAM,KAAK,GAAG;QACvFC,QAAQC,KAAK,CAAC,wDAAwD;YACpEC,MAAM,OAAOP;YACbQ,OAAOR;YACPC;YACAQ,OAAO,IAAIC,QAAQD,KAAK;QAC1B;QACA,OAAO;IACT;IAEA,yCAAyC;IACzC,IAAI,CAACR,oBAAoB;QACvB,OAAO;IACT;IAEA,6BAA6B;IAC7B,IAAI,CAACU,IAAAA,8BAAiB,EAACV,qBAAqB;QAC1CI,QAAQO,IAAI,CAAC,CAAC,2BAA2B,EAAEX,mBAAmB,CAAC;QAC/D,OAAO;IACT;IAEA,iCAAiC;IACjC,IAAID,gBAAgBa,QAAQ,CAACC,wBAAW,CAACC,QAAQ,KAC7Cf,gBAAgBa,QAAQ,CAACC,wBAAW,CAACE,SAAS,KAC9ChB,gBAAgBa,QAAQ,CAACC,wBAAW,CAACG,UAAU,GAAG;QACpD,OAAO;IACT;IAEA,mCAAmC;IACnC,IAAIjB,gBAAgBa,QAAQ,CAACZ,qBAAqB;QAChD,OAAO;IACT;IAEA,kFAAkF;IAClF,IAAIA,sBAAsBA,mBAAmBY,QAAQ,CAAC,MAAM;QAC1D,MAAM,CAACK,QAAQC,OAAO,GAAGlB,mBAAmBmB,KAAK,CAAC;QAClD,IAAID,UAAUnB,gBAAgBa,QAAQ,CAAC,CAAC,EAAEK,OAAO,OAAO,CAAC,GAAG;YAC1D,OAAO;QACT;IACF;IAEA,OAAO;AACT;AAKO,SAASrB,iBAAiBG,eAAyB,EAAEqB,mBAA6B;IACvF,OAAOA,oBAAoBC,IAAI,CAACC,CAAAA,aAAczB,cAAcE,iBAAiBuB;AAC/E;AAKO,SAAS3B,kBAAkBI,eAAyB,EAAEqB,mBAA6B;IACxF,OAAOA,oBAAoBG,KAAK,CAACD,CAAAA,aAAczB,cAAcE,iBAAiBuB;AAChF;AAKO,SAASxB,QAAQC,eAAyB;IAC/C,OAAOH,iBAAiBG,iBAAiB;QAACc,wBAAW,CAACC,QAAQ;QAAED,wBAAW,CAACE,SAAS;QAAEF,wBAAW,CAACG,UAAU;KAAC;AAChH;AAOO,SAAStB,oBACd8B,IAA8B,EAC9BF,UAA+B,EAC/BG,OAAmE;IAEnE,OAAOC,oCAAiB,CAAC7B,aAAa,CAAC2B,MAAMF,YAAYG;AAC3D;AAKO,SAAShC,gBACd+B,IAA8B,EAC9BG,MAAc,EACdL,UAA+B;IAE/B,OAAOI,oCAAiB,CAACE,aAAa,CAACJ,MAAMG,QAAQL;AACvD;AAKO,SAAS9B,aAAagC,IAA8B;IACzD,OAAOE,oCAAiB,CAAC5B,OAAO,CAAC0B;AACnC"}