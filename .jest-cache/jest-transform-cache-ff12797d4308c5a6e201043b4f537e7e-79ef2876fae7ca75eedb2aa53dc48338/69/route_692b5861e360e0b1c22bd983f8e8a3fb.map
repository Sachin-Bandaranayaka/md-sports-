{"version":3,"names":["cov_1wbmpl9kr2","actualCoverage","s","GET","_shopMiddleware","ShopAccessControl","withShopAccess","req","context","params","b","id","f","productId","parseInt","isNaN","_server","NextResponse","json","success","message","status","searchParams","URL","url","shopIdParam","get","shopId","toString","stockData","_prisma","safeQuery","inventoryItem","prisma","findFirst","where","include","product","select","name","sku","price","shop","stock","productName","shopName","quantity","data","error","console"],"sources":["/Users/sachin/Documents/md-sports-/src/app/api/products/[id]/stock/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { prisma, safeQuery } from '@/lib/prisma';\nimport { ShopAccessControl } from '@/lib/utils/shopMiddleware';\n\nexport const GET = ShopAccessControl.withShopAccess(async (\n    req: NextRequest,\n    context: any,\n    { params }: { params: { id: string } } = { params: { id: '' } }\n) => {\n    try {\n        const productId = parseInt(params.id);\n        if (isNaN(productId)) {\n            return NextResponse.json({\n                success: false,\n                message: 'Invalid product ID'\n            }, { status: 400 });\n        }\n\n        const { searchParams } = new URL(req.url);\n        const shopIdParam = searchParams.get('shopId');\n\n        if (!shopIdParam) {\n            return NextResponse.json({\n                success: false,\n                message: 'Shop ID is required'\n            }, { status: 400 });\n        }\n\n        // Ensure shopId is properly converted to string for database query\n        const shopId = shopIdParam.toString();\n\n        const stockData = await safeQuery(\n            async () => {\n                // Get inventory item for the specific product and shop\n                const inventoryItem = await prisma.inventoryItem.findFirst({\n                    where: {\n                        productId: productId,\n                        shopId: shopId\n                    },\n                    include: {\n                        product: {\n                            select: {\n                                name: true,\n                                sku: true,\n                                price: true\n                            }\n                        },\n                        shop: {\n                            select: {\n                                name: true\n                            }\n                        }\n                    }\n                });\n\n                if (!inventoryItem) {\n                    return {\n                        stock: 0,\n                        productId: productId,\n                        shopId: shopId,\n                        productName: null,\n                        shopName: null\n                    };\n                }\n\n                return {\n                    stock: inventoryItem.quantity || 0,\n                    productId: productId,\n                    shopId: shopId,\n                    productName: inventoryItem.product.name,\n                    shopName: inventoryItem.shop.name,\n                    price: inventoryItem.product.price\n                };\n            },\n            {\n                stock: 0,\n                productId: productId,\n                shopId: shopId,\n                productName: null,\n                shopName: null\n            },\n            `Failed to fetch stock for product ${productId} in shop ${shopId}`\n        );\n\n        return NextResponse.json({\n            success: true,\n            data: stockData,\n            stock: stockData.stock // For backward compatibility\n        });\n    } catch (error) {\n        console.error('Error fetching product stock:', error);\n        return NextResponse.json({\n            success: false,\n            message: 'Internal server error',\n            stock: 0\n        }, { status: 500 });\n    }\n});"],"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","ignoreList":[]}