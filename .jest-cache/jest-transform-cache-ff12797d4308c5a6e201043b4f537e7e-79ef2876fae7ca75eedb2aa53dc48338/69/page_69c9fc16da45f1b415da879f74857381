673cbaa5aee4d68bb3ff22a19798dc49
"use strict";

/* istanbul ignore next */
function cov_1wzwe2l5ja() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/inventory/page.tsx";
  var hash = "03d73befab18b8fced156bd810a317ce25d21fb9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/inventory/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 25
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 26
        }
      },
      "6": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 48
        }
      },
      "7": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "8": {
        start: {
          line: 21,
          column: 17
        },
        end: {
          line: 21,
          column: 40
        }
      },
      "9": {
        start: {
          line: 22,
          column: 34
        },
        end: {
          line: 22,
          column: 105
        }
      },
      "10": {
        start: {
          line: 23,
          column: 46
        },
        end: {
          line: 23,
          column: 132
        }
      },
      "11": {
        start: {
          line: 24,
          column: 46
        },
        end: {
          line: 24,
          column: 132
        }
      },
      "12": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 28,
          column: 6
        }
      },
      "13": {
        start: {
          line: 30,
          column: 19
        },
        end: {
          line: 30,
          column: 20
        }
      },
      "14": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "15": {
        start: {
          line: 33,
          column: 35
        },
        end: {
          line: 41,
          column: 10
        }
      },
      "16": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "17": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 117
        }
      },
      "18": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 22
        }
      },
      "19": {
        start: {
          line: 46,
          column: 31
        },
        end: {
          line: 46,
          column: 62
        }
      },
      "20": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 65
        }
      },
      "21": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 58
        }
      },
      "22": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 18
        }
      },
      "23": {
        start: {
          line: 54,
          column: 24
        },
        end: {
          line: 54,
          column: 53
        }
      },
      "24": {
        start: {
          line: 55,
          column: 17
        },
        end: {
          line: 55,
          column: 60
        }
      },
      "25": {
        start: {
          line: 56,
          column: 21
        },
        end: {
          line: 56,
          column: 80
        }
      },
      "26": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 57,
          column: 43
        }
      },
      "27": {
        start: {
          line: 58,
          column: 25
        },
        end: {
          line: 58,
          column: 49
        }
      },
      "28": {
        start: {
          line: 59,
          column: 17
        },
        end: {
          line: 59,
          column: 52
        }
      },
      "29": {
        start: {
          line: 60,
          column: 18
        },
        end: {
          line: 60,
          column: 55
        }
      },
      "30": {
        start: {
          line: 61,
          column: 19
        },
        end: {
          line: 61,
          column: 45
        }
      },
      "31": {
        start: {
          line: 62,
          column: 27
        },
        end: {
          line: 62,
          column: 55
        }
      },
      "32": {
        start: {
          line: 63,
          column: 25
        },
        end: {
          line: 63,
          column: 51
        }
      },
      "33": {
        start: {
          line: 64,
          column: 24
        },
        end: {
          line: 67,
          column: 6
        }
      },
      "34": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 53
        }
      },
      "35": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 53
        }
      },
      "36": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 71
        }
      },
      "37": {
        start: {
          line: 69,
          column: 24
        },
        end: {
          line: 69,
          column: 71
        }
      },
      "38": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 65
        }
      },
      "39": {
        start: {
          line: 70,
          column: 22
        },
        end: {
          line: 70,
          column: 65
        }
      },
      "40": {
        start: {
          line: 72,
          column: 24
        },
        end: {
          line: 72,
          column: 53
        }
      },
      "41": {
        start: {
          line: 73,
          column: 24
        },
        end: {
          line: 73,
          column: 61
        }
      },
      "42": {
        start: {
          line: 75,
          column: 27
        },
        end: {
          line: 77,
          column: 5
        }
      },
      "43": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "44": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 66
        }
      },
      "45": {
        start: {
          line: 82,
          column: 23
        },
        end: {
          line: 82,
          column: 69
        }
      },
      "46": {
        start: {
          line: 84,
          column: 30
        },
        end: {
          line: 93,
          column: 6
        }
      },
      "47": {
        start: {
          line: 94,
          column: 25
        },
        end: {
          line: 94,
          column: 27
        }
      },
      "48": {
        start: {
          line: 95,
          column: 21
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "49": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "50": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 115
        }
      },
      "51": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "52": {
        start: {
          line: 106,
          column: 34
        },
        end: {
          line: 106,
          column: 64
        }
      },
      "53": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 112,
          column: 13
        }
      },
      "54": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 52
        }
      },
      "55": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 109,
          column: 68
        }
      },
      "56": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 96
        }
      },
      "57": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 69
        }
      },
      "58": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 154,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 13
          },
          end: {
            line: 12,
            column: 14
          }
        },
        loc: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 16
          },
          end: {
            line: 15,
            column: 17
          }
        },
        loc: {
          start: {
            line: 15,
            column: 27
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 33
          }
        },
        loc: {
          start: {
            line: 25,
            column: 39
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 25
      },
      "4": {
        name: "fetchCategories",
        decl: {
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 30
          }
        },
        loc: {
          start: {
            line: 31,
            column: 49
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 31
      },
      "5": {
        name: "Inventory",
        decl: {
          start: {
            line: 53,
            column: 15
          },
          end: {
            line: 53,
            column: 24
          }
        },
        loc: {
          start: {
            line: 53,
            column: 63
          },
          end: {
            line: 155,
            column: 1
          }
        },
        line: 53
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 35
          },
          end: {
            line: 26,
            column: 38
          }
        }, {
          start: {
            line: 26,
            column: 41
          },
          end: {
            line: 28,
            column: 5
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 26,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 26,
            column: 14
          }
        }, {
          start: {
            line: 26,
            column: 18
          },
          end: {
            line: 26,
            column: 32
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 15
          },
          end: {
            line: 47,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 40
          },
          end: {
            line: 47,
            column: 59
          }
        }, {
          start: {
            line: 47,
            column: 62
          },
          end: {
            line: 47,
            column: 64
          }
        }],
        line: 47
      },
      "4": {
        loc: {
          start: {
            line: 55,
            column: 17
          },
          end: {
            line: 55,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 17
          },
          end: {
            line: 55,
            column: 40
          }
        }, {
          start: {
            line: 55,
            column: 44
          },
          end: {
            line: 55,
            column: 60
          }
        }],
        line: 55
      },
      "5": {
        loc: {
          start: {
            line: 56,
            column: 21
          },
          end: {
            line: 56,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 64
          },
          end: {
            line: 56,
            column: 70
          }
        }, {
          start: {
            line: 56,
            column: 73
          },
          end: {
            line: 56,
            column: 80
          }
        }],
        line: 56
      },
      "6": {
        loc: {
          start: {
            line: 59,
            column: 26
          },
          end: {
            line: 59,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 26
          },
          end: {
            line: 59,
            column: 44
          }
        }, {
          start: {
            line: 59,
            column: 48
          },
          end: {
            line: 59,
            column: 51
          }
        }],
        line: 59
      },
      "7": {
        loc: {
          start: {
            line: 60,
            column: 27
          },
          end: {
            line: 60,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 27
          },
          end: {
            line: 60,
            column: 46
          }
        }, {
          start: {
            line: 60,
            column: 50
          },
          end: {
            line: 60,
            column: 54
          }
        }],
        line: 60
      },
      "8": {
        loc: {
          start: {
            line: 61,
            column: 19
          },
          end: {
            line: 61,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 19
          },
          end: {
            line: 61,
            column: 39
          }
        }, {
          start: {
            line: 61,
            column: 43
          },
          end: {
            line: 61,
            column: 45
          }
        }],
        line: 61
      },
      "9": {
        loc: {
          start: {
            line: 62,
            column: 27
          },
          end: {
            line: 62,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 27
          },
          end: {
            line: 62,
            column: 49
          }
        }, {
          start: {
            line: 62,
            column: 53
          },
          end: {
            line: 62,
            column: 55
          }
        }],
        line: 62
      },
      "10": {
        loc: {
          start: {
            line: 63,
            column: 25
          },
          end: {
            line: 63,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 25
          },
          end: {
            line: 63,
            column: 45
          }
        }, {
          start: {
            line: 63,
            column: 49
          },
          end: {
            line: 63,
            column: 51
          }
        }],
        line: 63
      },
      "11": {
        loc: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 53
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "12": {
        loc: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 71
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 71
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "13": {
        loc: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "14": {
        loc: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "15": {
        loc: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        }, {
          start: {
            line: 104,
            column: 11
          },
          end: {
            line: 116,
            column: 5
          }
        }],
        line: 101
      },
      "16": {
        loc: {
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 112,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 112,
            column: 13
          }
        }, {
          start: {
            line: 110,
            column: 19
          },
          end: {
            line: 112,
            column: 13
          }
        }],
        line: 107
      },
      "17": {
        loc: {
          start: {
            line: 109,
            column: 29
          },
          end: {
            line: 109,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 29
          },
          end: {
            line: 109,
            column: 53
          }
        }, {
          start: {
            line: 109,
            column: 57
          },
          end: {
            line: 109,
            column: 67
          }
        }],
        line: 109
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/inventory/page.tsx"],
      sourcesContent: ["import { Suspense } from 'react';\nimport { headers, cookies } from 'next/headers';\nimport MainLayout from '@/components/layout/MainLayout';\nimport InventoryClientWrapper from '@/components/inventory/InventoryClientWrapper';\nimport InventoryHeaderActions from '@/components/inventory/InventoryHeaderActions';\n\n// Add revalidation - cache inventory page for 5 seconds (reduced from 10)\nexport const revalidate = 5;\n\n// Define proper types for our data\ninterface BranchStock {\n    shopId: number;\n    shopName: string;\n    quantity: number;\n}\n\ninterface InventoryItem {\n    id: number;\n    sku: string;\n    name: string;\n    category: string;\n    stock: number;\n    retailPrice: number;\n    weightedAverageCost: number;\n    status: string;\n    branchStock: BranchStock[];\n}\n\ninterface Category {\n    id: number;\n    name: string;\n}\n\ninterface InventorySearchParams {\n    page?: string;\n    limit?: string;\n    search?: string;\n    category?: string;\n    status?: string;\n}\n\nasync function fetchCategories(baseUrl: string, headers?: HeadersInit) {\n    try {\n        const categoriesResponse = await fetch(`${baseUrl}/api/categories`, {\n            headers,\n            next: { \n                revalidate: 30, // Revalidate every 30 seconds\n                tags: ['categories'] // Add tags for revalidation\n            }\n        });\n        if (!categoriesResponse.ok) {\n            console.error('Failed to fetch categories:', categoriesResponse.status, await categoriesResponse.text());\n            return []; // Return empty array on error\n        }\n        const categoriesData = await categoriesResponse.json();\n        return categoriesData.success ? categoriesData.data : [];\n    } catch (error) {\n        console.error('Error in fetchCategories:', error);\n        return [];\n    }\n}\n\nexport default async function Inventory({\n    searchParams: passedSearchParams\n}: {\n    searchParams: InventorySearchParams\n}) {\n    const headersList = await headers();\n    const host = headersList.get('host') || 'localhost:3000';\n    const protocol = process?.env?.NODE_ENV === 'development' ? 'http' : 'https';\n    const baseUrl = `${protocol}://${host}`;\n\n    const searchParams = await passedSearchParams;\n\n    const page = parseInt(searchParams?.page || '1');\n    const limit = parseInt(searchParams?.limit || '10');\n    const search = searchParams?.search || '';\n    const categoryFilter = searchParams?.category || '';\n    const statusFilter = searchParams?.status || '';\n\n    const queryParams = new URLSearchParams({\n        page: page.toString(),\n        limit: limit.toString()\n    });\n    if (search) queryParams.append('search', search);\n    if (categoryFilter) queryParams.append('category', categoryFilter);\n    if (statusFilter) queryParams.append('status', statusFilter);\n\n    // Get access token from cookies for authentication\n    const cookieStore = await cookies();\n    const accessToken = cookieStore.get('accessToken')?.value;\n\n    // Prepare headers for authenticated requests\n    const requestHeaders: HeadersInit = {\n        'Content-Type': 'application/json',\n    };\n\n    if (accessToken) {\n        requestHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    // Fetch categories from the new API route with caching\n    const categories: Category[] = await fetchCategories(baseUrl, requestHeaders);\n\n    // Fetch inventory data with pagination and filters\n    const inventoryResponse = await fetch(\n        `${baseUrl}/api/inventory/summary?${queryParams.toString()}`,\n        {\n            headers: requestHeaders,\n            next: { \n                revalidate: 10, // Revalidate every 10 seconds to match page revalidation time\n                tags: ['inventory', 'products'] // Add tags for revalidation\n            }\n        }\n    );\n\n    let inventoryItems: InventoryItem[] = [];\n    let pagination = {\n        total: 0,\n        page: 1,\n        limit: 10,\n        totalPages: 0\n    };\n\n    if (!inventoryResponse.ok) {\n        console.error('Failed to fetch inventory data:', inventoryResponse.status, await inventoryResponse.text());\n        // Potentially set an error state to display to the user\n    } else {\n        try {\n            const inventoryData = await inventoryResponse.json();\n            if (inventoryData.success) {\n                inventoryItems = inventoryData.data;\n                pagination = inventoryData.pagination || pagination;\n            } else {\n                console.error('Inventory data API call not successful:', inventoryData.message);\n            }\n        } catch (e) {\n            console.error('Failed to parse inventory data JSON:', e);\n        }\n    }\n\n    return (\n        <MainLayout>\n            <div className=\"space-y-6\">\n                <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\n                    <div>\n                        <h1 className=\"text-2xl font-bold text-gray-900\">Inventory Management</h1>\n                        <p className=\"text-gray-500\">Manage your product inventory across all shops</p>\n                    </div>\n                    <InventoryHeaderActions />\n                </div>\n\n                <Suspense fallback={<div>Loading inventory...</div>}>\n                    <InventoryClientWrapper\n                        initialInventoryItems={inventoryItems}\n                        initialCategories={categories}\n                        initialPagination={pagination}\n                        initialSearchTerm={search}\n                        initialCategoryFilter={categoryFilter}\n                        initialStatusFilter={statusFilter}\n                    />\n                </Suspense>\n            </div>\n        </MainLayout>\n    );\n}"],
      names: ["Inventory", "revalidate", "fetchCategories", "baseUrl", "headers", "categoriesResponse", "fetch", "next", "tags", "ok", "console", "error", "status", "text", "categoriesData", "json", "success", "data", "searchParams", "passedSearchParams", "headersList", "host", "get", "protocol", "process", "env", "NODE_ENV", "page", "parseInt", "limit", "search", "categoryFilter", "category", "statusFilter", "queryParams", "URLSearchParams", "toString", "append", "cookieStore", "cookies", "accessToken", "value", "requestHeaders", "categories", "inventoryResponse", "inventoryItems", "pagination", "total", "totalPages", "inventoryData", "message", "e", "MainLayout", "div", "className", "h1", "p", "InventoryHeaderActions", "Suspense", "fallback", "InventoryClientWrapper", "initialInventoryItems", "initialCategories", "initialPagination", "initialSearchTerm", "initialCategoryFilter", "initialStatusFilter"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "03d73befab18b8fced156bd810a317ce25d21fb9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1wzwe2l5ja = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1wzwe2l5ja();
cov_1wzwe2l5ja().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1wzwe2l5ja().f[0]++;
  cov_1wzwe2l5ja().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1wzwe2l5ja().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1wzwe2l5ja().s[3]++;
_export(exports, {
  default: function () {
    /* istanbul ignore next */
    cov_1wzwe2l5ja().f[1]++;
    cov_1wzwe2l5ja().s[4]++;
    return Inventory;
  },
  revalidate: function () {
    /* istanbul ignore next */
    cov_1wzwe2l5ja().f[2]++;
    cov_1wzwe2l5ja().s[5]++;
    return revalidate;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1wzwe2l5ja().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_1wzwe2l5ja().s[7]++, require("react"));
const _headers =
/* istanbul ignore next */
(cov_1wzwe2l5ja().s[8]++, require("next/headers"));
const _MainLayout =
/* istanbul ignore next */
(/*#__PURE__*/cov_1wzwe2l5ja().s[9]++, _interop_require_default(require("../../components/layout/MainLayout")));
const _InventoryClientWrapper =
/* istanbul ignore next */
(/*#__PURE__*/cov_1wzwe2l5ja().s[10]++, _interop_require_default(require("../../components/inventory/InventoryClientWrapper")));
const _InventoryHeaderActions =
/* istanbul ignore next */
(/*#__PURE__*/cov_1wzwe2l5ja().s[11]++, _interop_require_default(require("../../components/inventory/InventoryHeaderActions")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1wzwe2l5ja().f[3]++;
  cov_1wzwe2l5ja().s[12]++;
  return /* istanbul ignore next */(cov_1wzwe2l5ja().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[0][1]++, {
    default: obj
  });
}
const revalidate =
/* istanbul ignore next */
(cov_1wzwe2l5ja().s[13]++, 5);
async function fetchCategories(baseUrl, headers) {
  /* istanbul ignore next */
  cov_1wzwe2l5ja().f[4]++;
  cov_1wzwe2l5ja().s[14]++;
  try {
    const categoriesResponse =
    /* istanbul ignore next */
    (cov_1wzwe2l5ja().s[15]++, await fetch(`${baseUrl}/api/categories`, {
      headers,
      next: {
        revalidate: 30,
        tags: ["categories"] // Add tags for revalidation
      }
    }));
    /* istanbul ignore next */
    cov_1wzwe2l5ja().s[16]++;
    if (!categoriesResponse.ok) {
      /* istanbul ignore next */
      cov_1wzwe2l5ja().b[2][0]++;
      cov_1wzwe2l5ja().s[17]++;
      console.error("Failed to fetch categories:", categoriesResponse.status, await categoriesResponse.text());
      /* istanbul ignore next */
      cov_1wzwe2l5ja().s[18]++;
      return []; // Return empty array on error
    } else
    /* istanbul ignore next */
    {
      cov_1wzwe2l5ja().b[2][1]++;
    }
    const categoriesData =
    /* istanbul ignore next */
    (cov_1wzwe2l5ja().s[19]++, await categoriesResponse.json());
    /* istanbul ignore next */
    cov_1wzwe2l5ja().s[20]++;
    return categoriesData.success ?
    /* istanbul ignore next */
    (cov_1wzwe2l5ja().b[3][0]++, categoriesData.data) :
    /* istanbul ignore next */
    (cov_1wzwe2l5ja().b[3][1]++, []);
  } catch (error) {
    /* istanbul ignore next */
    cov_1wzwe2l5ja().s[21]++;
    console.error("Error in fetchCategories:", error);
    /* istanbul ignore next */
    cov_1wzwe2l5ja().s[22]++;
    return [];
  }
}
async function Inventory({
  searchParams: passedSearchParams
}) {
  /* istanbul ignore next */
  cov_1wzwe2l5ja().f[5]++;
  const headersList =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[23]++, await (0, _headers.headers)());
  const host =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[24]++,
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[4][0]++, headersList.get("host")) ||
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[4][1]++, "localhost:3000"));
  const protocol =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[25]++, process?.env?.NODE_ENV === "development" ?
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[5][0]++, "http") :
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[5][1]++, "https"));
  const baseUrl =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[26]++, `${protocol}://${host}`);
  const searchParams =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[27]++, await passedSearchParams);
  const page =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[28]++, parseInt(
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[6][0]++, searchParams?.page) ||
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[6][1]++, "1")));
  const limit =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[29]++, parseInt(
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[7][0]++, searchParams?.limit) ||
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[7][1]++, "10")));
  const search =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[30]++,
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[8][0]++, searchParams?.search) ||
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[8][1]++, ""));
  const categoryFilter =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[31]++,
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[9][0]++, searchParams?.category) ||
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[9][1]++, ""));
  const statusFilter =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[32]++,
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[10][0]++, searchParams?.status) ||
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[10][1]++, ""));
  const queryParams =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[33]++, new URLSearchParams({
    page: page.toString(),
    limit: limit.toString()
  }));
  /* istanbul ignore next */
  cov_1wzwe2l5ja().s[34]++;
  if (search) {
    /* istanbul ignore next */
    cov_1wzwe2l5ja().b[11][0]++;
    cov_1wzwe2l5ja().s[35]++;
    queryParams.append("search", search);
  } else
  /* istanbul ignore next */
  {
    cov_1wzwe2l5ja().b[11][1]++;
  }
  cov_1wzwe2l5ja().s[36]++;
  if (categoryFilter) {
    /* istanbul ignore next */
    cov_1wzwe2l5ja().b[12][0]++;
    cov_1wzwe2l5ja().s[37]++;
    queryParams.append("category", categoryFilter);
  } else
  /* istanbul ignore next */
  {
    cov_1wzwe2l5ja().b[12][1]++;
  }
  cov_1wzwe2l5ja().s[38]++;
  if (statusFilter) {
    /* istanbul ignore next */
    cov_1wzwe2l5ja().b[13][0]++;
    cov_1wzwe2l5ja().s[39]++;
    queryParams.append("status", statusFilter);
  } else
  /* istanbul ignore next */
  {
    cov_1wzwe2l5ja().b[13][1]++;
  }
  // Get access token from cookies for authentication
  const cookieStore =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[40]++, await (0, _headers.cookies)());
  const accessToken =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[41]++, cookieStore.get("accessToken")?.value);
  // Prepare headers for authenticated requests
  const requestHeaders =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[42]++, {
    "Content-Type": "application/json"
  });
  /* istanbul ignore next */
  cov_1wzwe2l5ja().s[43]++;
  if (accessToken) {
    /* istanbul ignore next */
    cov_1wzwe2l5ja().b[14][0]++;
    cov_1wzwe2l5ja().s[44]++;
    requestHeaders["Authorization"] = `Bearer ${accessToken}`;
  } else
  /* istanbul ignore next */
  {
    cov_1wzwe2l5ja().b[14][1]++;
  }
  // Fetch categories from the new API route with caching
  const categories =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[45]++, await fetchCategories(baseUrl, requestHeaders));
  // Fetch inventory data with pagination and filters
  const inventoryResponse =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[46]++, await fetch(`${baseUrl}/api/inventory/summary?${queryParams.toString()}`, {
    headers: requestHeaders,
    next: {
      revalidate: 10,
      tags: ["inventory", "products"] // Add tags for revalidation
    }
  }));
  let inventoryItems =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[47]++, []);
  let pagination =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[48]++, {
    total: 0,
    page: 1,
    limit: 10,
    totalPages: 0
  });
  /* istanbul ignore next */
  cov_1wzwe2l5ja().s[49]++;
  if (!inventoryResponse.ok) {
    /* istanbul ignore next */
    cov_1wzwe2l5ja().b[15][0]++;
    cov_1wzwe2l5ja().s[50]++;
    console.error("Failed to fetch inventory data:", inventoryResponse.status, await inventoryResponse.text());
    // Potentially set an error state to display to the user
  } else {
    /* istanbul ignore next */
    cov_1wzwe2l5ja().b[15][1]++;
    cov_1wzwe2l5ja().s[51]++;
    try {
      const inventoryData =
      /* istanbul ignore next */
      (cov_1wzwe2l5ja().s[52]++, await inventoryResponse.json());
      /* istanbul ignore next */
      cov_1wzwe2l5ja().s[53]++;
      if (inventoryData.success) {
        /* istanbul ignore next */
        cov_1wzwe2l5ja().b[16][0]++;
        cov_1wzwe2l5ja().s[54]++;
        inventoryItems = inventoryData.data;
        /* istanbul ignore next */
        cov_1wzwe2l5ja().s[55]++;
        pagination =
        /* istanbul ignore next */
        (cov_1wzwe2l5ja().b[17][0]++, inventoryData.pagination) ||
        /* istanbul ignore next */
        (cov_1wzwe2l5ja().b[17][1]++, pagination);
      } else {
        /* istanbul ignore next */
        cov_1wzwe2l5ja().b[16][1]++;
        cov_1wzwe2l5ja().s[56]++;
        console.error("Inventory data API call not successful:", inventoryData.message);
      }
    } catch (e) {
      /* istanbul ignore next */
      cov_1wzwe2l5ja().s[57]++;
      console.error("Failed to parse inventory data JSON:", e);
    }
  }
  /* istanbul ignore next */
  cov_1wzwe2l5ja().s[58]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_MainLayout.default, {
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "space-y-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex flex-col md:flex-row md:items-center md:justify-between gap-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
            className: "text-2xl font-bold text-gray-900",
            children: "Inventory Management"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-gray-500",
            children: "Manage your product inventory across all shops"
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_InventoryHeaderActions.default, {})]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_react.Suspense, {
        fallback: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          children: "Loading inventory..."
        }),
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_InventoryClientWrapper.default, {
          initialInventoryItems: inventoryItems,
          initialCategories: categories,
          initialPagination: pagination,
          initialSearchTerm: search,
          initialCategoryFilter: categoryFilter,
          initialStatusFilter: statusFilter
        })
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,