172f6fbe795538e33eb7613a53d66f27
"use strict";

/* istanbul ignore next */
function cov_imjw00kwd() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/shops/[id]/route.ts";
  var hash = "6c675c0d70c23448b62cb9b9ee4d0a44efc46de2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/shops/[id]/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 22
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 19
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 19
        }
      },
      "7": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "8": {
        start: {
          line: 23,
          column: 30
        },
        end: {
          line: 23,
          column: 89
        }
      },
      "9": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 27,
          column: 6
        }
      },
      "10": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "11": {
        start: {
          line: 32,
          column: 31
        },
        end: {
          line: 32,
          column: 43
        }
      },
      "12": {
        start: {
          line: 33,
          column: 19
        },
        end: {
          line: 33,
          column: 36
        }
      },
      "13": {
        start: {
          line: 35,
          column: 21
        },
        end: {
          line: 54,
          column: 10
        }
      },
      "14": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "15": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 61,
          column: 15
        }
      },
      "16": {
        start: {
          line: 64,
          column: 26
        },
        end: {
          line: 72,
          column: 15
        }
      },
      "17": {
        start: {
          line: 64,
          column: 58
        },
        end: {
          line: 72,
          column: 13
        }
      },
      "18": {
        start: {
          line: 74,
          column: 47
        },
        end: {
          line: 74,
          column: 51
        }
      },
      "19": {
        start: {
          line: 75,
          column: 34
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "20": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 82,
          column: 11
        }
      },
      "21": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 53
        }
      },
      "22": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 91,
          column: 11
        }
      },
      "23": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 165,
          column: 5
        }
      },
      "24": {
        start: {
          line: 97,
          column: 31
        },
        end: {
          line: 97,
          column: 43
        }
      },
      "25": {
        start: {
          line: 98,
          column: 19
        },
        end: {
          line: 98,
          column: 36
        }
      },
      "26": {
        start: {
          line: 99,
          column: 21
        },
        end: {
          line: 99,
          column: 41
        }
      },
      "27": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "28": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 107,
          column: 15
        }
      },
      "29": {
        start: {
          line: 110,
          column: 29
        },
        end: {
          line: 114,
          column: 10
        }
      },
      "30": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "31": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 121,
          column: 15
        }
      },
      "32": {
        start: {
          line: 124,
          column: 28
        },
        end: {
          line: 150,
          column: 10
        }
      },
      "33": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 155,
          column: 11
        }
      },
      "34": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 53
        }
      },
      "35": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 164,
          column: 11
        }
      },
      "36": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 256,
          column: 5
        }
      },
      "37": {
        start: {
          line: 170,
          column: 31
        },
        end: {
          line: 170,
          column: 51
        }
      },
      "38": {
        start: {
          line: 171,
          column: 19
        },
        end: {
          line: 171,
          column: 36
        }
      },
      "39": {
        start: {
          line: 173,
          column: 29
        },
        end: {
          line: 177,
          column: 10
        }
      },
      "40": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "41": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 184,
          column: 15
        }
      },
      "42": {
        start: {
          line: 187,
          column: 35
        },
        end: {
          line: 191,
          column: 10
        }
      },
      "43": {
        start: {
          line: 193,
          column: 26
        },
        end: {
          line: 197,
          column: 10
        }
      },
      "44": {
        start: {
          line: 199,
          column: 31
        },
        end: {
          line: 210,
          column: 10
        }
      },
      "45": {
        start: {
          line: 212,
          column: 30
        },
        end: {
          line: 216,
          column: 10
        }
      },
      "46": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 236,
          column: 9
        }
      },
      "47": {
        start: {
          line: 219,
          column: 35
        },
        end: {
          line: 219,
          column: 37
        }
      },
      "48": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 101
        }
      },
      "49": {
        start: {
          line: 220,
          column: 40
        },
        end: {
          line: 220,
          column: 101
        }
      },
      "50": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 73
        }
      },
      "51": {
        start: {
          line: 221,
          column: 31
        },
        end: {
          line: 221,
          column: 73
        }
      },
      "52": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 97
        }
      },
      "53": {
        start: {
          line: 222,
          column: 36
        },
        end: {
          line: 222,
          column: 97
        }
      },
      "54": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 84
        }
      },
      "55": {
        start: {
          line: 223,
          column: 35
        },
        end: {
          line: 223,
          column: 84
        }
      },
      "56": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 235,
          column: 15
        }
      },
      "57": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 242,
          column: 11
        }
      },
      "58": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 246,
          column: 11
        }
      },
      "59": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 53
        }
      },
      "60": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 255,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 13
          }
        },
        loc: {
          start: {
            line: 12,
            column: 23
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 10
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 10
          }
        },
        loc: {
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 33
          }
        },
        loc: {
          start: {
            line: 24,
            column: 39
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 24
      },
      "5": {
        name: "GET",
        decl: {
          start: {
            line: 29,
            column: 15
          },
          end: {
            line: 29,
            column: 18
          }
        },
        loc: {
          start: {
            line: 29,
            column: 40
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 29
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 64,
            column: 49
          },
          end: {
            line: 64,
            column: 50
          }
        },
        loc: {
          start: {
            line: 64,
            column: 58
          },
          end: {
            line: 72,
            column: 13
          }
        },
        line: 64
      },
      "7": {
        name: "PUT",
        decl: {
          start: {
            line: 94,
            column: 15
          },
          end: {
            line: 94,
            column: 18
          }
        },
        loc: {
          start: {
            line: 94,
            column: 40
          },
          end: {
            line: 166,
            column: 1
          }
        },
        line: 94
      },
      "8": {
        name: "DELETE",
        decl: {
          start: {
            line: 167,
            column: 15
          },
          end: {
            line: 167,
            column: 21
          }
        },
        loc: {
          start: {
            line: 167,
            column: 40
          },
          end: {
            line: 257,
            column: 1
          }
        },
        line: 167
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 11
          },
          end: {
            line: 27,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 35
          },
          end: {
            line: 25,
            column: 38
          }
        }, {
          start: {
            line: 25,
            column: 41
          },
          end: {
            line: 27,
            column: 5
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 11
          },
          end: {
            line: 25,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 11
          },
          end: {
            line: 25,
            column: 14
          }
        }, {
          start: {
            line: 25,
            column: 18
          },
          end: {
            line: 25,
            column: 32
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "3": {
        loc: {
          start: {
            line: 88,
            column: 19
          },
          end: {
            line: 88,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 88,
            column: 44
          },
          end: {
            line: 88,
            column: 57
          }
        }, {
          start: {
            line: 88,
            column: 60
          },
          end: {
            line: 88,
            column: 73
          }
        }],
        line: 88
      },
      "4": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "5": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "6": {
        loc: {
          start: {
            line: 131,
            column: 32
          },
          end: {
            line: 131,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 131,
            column: 68
          },
          end: {
            line: 131,
            column: 87
          }
        }, {
          start: {
            line: 131,
            column: 90
          },
          end: {
            line: 131,
            column: 117
          }
        }],
        line: 131
      },
      "7": {
        loc: {
          start: {
            line: 132,
            column: 23
          },
          end: {
            line: 132,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 132,
            column: 50
          },
          end: {
            line: 132,
            column: 60
          }
        }, {
          start: {
            line: 132,
            column: 63
          },
          end: {
            line: 132,
            column: 81
          }
        }],
        line: 132
      },
      "8": {
        loc: {
          start: {
            line: 133,
            column: 23
          },
          end: {
            line: 133,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 133,
            column: 50
          },
          end: {
            line: 133,
            column: 60
          }
        }, {
          start: {
            line: 133,
            column: 63
          },
          end: {
            line: 133,
            column: 81
          }
        }],
        line: 133
      },
      "9": {
        loc: {
          start: {
            line: 134,
            column: 27
          },
          end: {
            line: 134,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 134,
            column: 58
          },
          end: {
            line: 134,
            column: 72
          }
        }, {
          start: {
            line: 134,
            column: 75
          },
          end: {
            line: 134,
            column: 97
          }
        }],
        line: 134
      },
      "10": {
        loc: {
          start: {
            line: 135,
            column: 30
          },
          end: {
            line: 135,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 135,
            column: 50
          },
          end: {
            line: 135,
            column: 77
          }
        }, {
          start: {
            line: 135,
            column: 80
          },
          end: {
            line: 135,
            column: 105
          }
        }],
        line: 135
      },
      "11": {
        loc: {
          start: {
            line: 136,
            column: 30
          },
          end: {
            line: 136,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 136,
            column: 50
          },
          end: {
            line: 136,
            column: 77
          }
        }, {
          start: {
            line: 136,
            column: 80
          },
          end: {
            line: 136,
            column: 105
          }
        }],
        line: 136
      },
      "12": {
        loc: {
          start: {
            line: 137,
            column: 28
          },
          end: {
            line: 137,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 137,
            column: 60
          },
          end: {
            line: 137,
            column: 75
          }
        }, {
          start: {
            line: 137,
            column: 78
          },
          end: {
            line: 137,
            column: 101
          }
        }],
        line: 137
      },
      "13": {
        loc: {
          start: {
            line: 138,
            column: 30
          },
          end: {
            line: 138,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 50
          },
          end: {
            line: 138,
            column: 77
          }
        }, {
          start: {
            line: 138,
            column: 80
          },
          end: {
            line: 138,
            column: 105
          }
        }],
        line: 138
      },
      "14": {
        loc: {
          start: {
            line: 139,
            column: 24
          },
          end: {
            line: 139,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 24
          },
          end: {
            line: 139,
            column: 35
          }
        }, {
          start: {
            line: 139,
            column: 39
          },
          end: {
            line: 139,
            column: 58
          }
        }],
        line: 139
      },
      "15": {
        loc: {
          start: {
            line: 140,
            column: 31
          },
          end: {
            line: 140,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 140,
            column: 66
          },
          end: {
            line: 140,
            column: 84
          }
        }, {
          start: {
            line: 140,
            column: 87
          },
          end: {
            line: 140,
            column: 113
          }
        }],
        line: 140
      },
      "16": {
        loc: {
          start: {
            line: 141,
            column: 31
          },
          end: {
            line: 141,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 141,
            column: 66
          },
          end: {
            line: 141,
            column: 84
          }
        }, {
          start: {
            line: 141,
            column: 87
          },
          end: {
            line: 141,
            column: 113
          }
        }],
        line: 141
      },
      "17": {
        loc: {
          start: {
            line: 142,
            column: 22
          },
          end: {
            line: 142,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 142,
            column: 48
          },
          end: {
            line: 142,
            column: 57
          }
        }, {
          start: {
            line: 142,
            column: 60
          },
          end: {
            line: 142,
            column: 77
          }
        }],
        line: 142
      },
      "18": {
        loc: {
          start: {
            line: 143,
            column: 23
          },
          end: {
            line: 143,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 143,
            column: 50
          },
          end: {
            line: 143,
            column: 60
          }
        }, {
          start: {
            line: 143,
            column: 63
          },
          end: {
            line: 143,
            column: 81
          }
        }],
        line: 143
      },
      "19": {
        loc: {
          start: {
            line: 144,
            column: 29
          },
          end: {
            line: 144,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 144,
            column: 62
          },
          end: {
            line: 144,
            column: 78
          }
        }, {
          start: {
            line: 144,
            column: 81
          },
          end: {
            line: 144,
            column: 105
          }
        }],
        line: 144
      },
      "20": {
        loc: {
          start: {
            line: 145,
            column: 25
          },
          end: {
            line: 145,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 145,
            column: 54
          },
          end: {
            line: 145,
            column: 66
          }
        }, {
          start: {
            line: 145,
            column: 69
          },
          end: {
            line: 145,
            column: 89
          }
        }],
        line: 145
      },
      "21": {
        loc: {
          start: {
            line: 146,
            column: 26
          },
          end: {
            line: 146,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 146,
            column: 56
          },
          end: {
            line: 146,
            column: 69
          }
        }, {
          start: {
            line: 146,
            column: 72
          },
          end: {
            line: 146,
            column: 93
          }
        }],
        line: 146
      },
      "22": {
        loc: {
          start: {
            line: 147,
            column: 27
          },
          end: {
            line: 147,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 147,
            column: 58
          },
          end: {
            line: 147,
            column: 72
          }
        }, {
          start: {
            line: 147,
            column: 75
          },
          end: {
            line: 147,
            column: 97
          }
        }],
        line: 147
      },
      "23": {
        loc: {
          start: {
            line: 148,
            column: 26
          },
          end: {
            line: 148,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 148,
            column: 56
          },
          end: {
            line: 148,
            column: 69
          }
        }, {
          start: {
            line: 148,
            column: 72
          },
          end: {
            line: 148,
            column: 93
          }
        }],
        line: 148
      },
      "24": {
        loc: {
          start: {
            line: 161,
            column: 19
          },
          end: {
            line: 161,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 161,
            column: 44
          },
          end: {
            line: 161,
            column: 57
          }
        }, {
          start: {
            line: 161,
            column: 60
          },
          end: {
            line: 161,
            column: 73
          }
        }],
        line: 161
      },
      "25": {
        loc: {
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "26": {
        loc: {
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "27": {
        loc: {
          start: {
            line: 218,
            column: 12
          },
          end: {
            line: 218,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 218,
            column: 12
          },
          end: {
            line: 218,
            column: 34
          }
        }, {
          start: {
            line: 218,
            column: 38
          },
          end: {
            line: 218,
            column: 51
          }
        }, {
          start: {
            line: 218,
            column: 55
          },
          end: {
            line: 218,
            column: 73
          }
        }, {
          start: {
            line: 218,
            column: 77
          },
          end: {
            line: 218,
            column: 94
          }
        }],
        line: 218
      },
      "28": {
        loc: {
          start: {
            line: 220,
            column: 12
          },
          end: {
            line: 220,
            column: 101
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 12
          },
          end: {
            line: 220,
            column: 101
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "29": {
        loc: {
          start: {
            line: 221,
            column: 12
          },
          end: {
            line: 221,
            column: 73
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 12
          },
          end: {
            line: 221,
            column: 73
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "30": {
        loc: {
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 222,
            column: 97
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 222,
            column: 97
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "31": {
        loc: {
          start: {
            line: 223,
            column: 12
          },
          end: {
            line: 223,
            column: 84
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 12
          },
          end: {
            line: 223,
            column: 84
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 223
      },
      "32": {
        loc: {
          start: {
            line: 252,
            column: 19
          },
          end: {
            line: 252,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 252,
            column: 44
          },
          end: {
            line: 252,
            column: 57
          }
        }, {
          start: {
            line: 252,
            column: 60
          },
          end: {
            line: 252,
            column: 73
          }
        }],
        line: 252
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/shops/[id]/route.ts"],
      sourcesContent: ["import { NextResponse, NextRequest } from 'next/server';\nimport prisma from '@/lib/prisma';\n\n// GET: Fetch a specific shop by ID\nexport async function GET(\n    request: Request,\n    { params }: { params: Promise<{ id: string }> }\n) {\n    try {\n        // Await params before using its properties\n        const resolvedParams = await params;\n        const id = resolvedParams.id;\n\n        // Get the shop with its inventory and manager\n        const shop = await prisma.shop.findUnique({\n            where: { id },\n            include: {\n                InventoryItem: {\n                    include: {\n                        product: true\n                    }\n                },\n                manager: {\n                    select: {\n                        id: true,\n                        name: true,\n                        email: true,\n                        phone: true\n                    }\n                }\n            }\n        });\n\n        if (!shop) {\n            return NextResponse.json({\n                success: false,\n                message: `Shop with ID ${id} not found`\n            }, { status: 404 });\n        }\n\n        // Format the inventory data for the response\n        const inventory = shop.InventoryItem.map((item: any) => ({\n            id: item.id,\n            product_id: item.productId,\n            product_name: item.product.name,\n            product_sku: item.product.sku,\n            retail_price: item.product.price,\n            quantity: item.quantity,\n            reorder_level: 10 // Default reorder level if not in database\n        }));\n\n        // Format the response\n        const { InventoryItem, ...shopData } = shop;\n        const shopWithInventory = {\n            ...shopData,\n            inventory\n        };\n\n        return NextResponse.json({\n            success: true,\n            data: shopWithInventory\n        });\n    } catch (error) {\n        console.error(`Error fetching shop:`, error);\n        return NextResponse.json({\n            success: false,\n            message: 'Error fetching shop',\n            error: error instanceof Error ? error.message : String(error)\n        }, { status: 500 });\n    }\n}\n\n// PUT: Update a shop by ID\nexport async function PUT(\n    request: Request,\n    { params }: { params: Promise<{ id: string }> }\n) {\n    try {\n        // Await params before using its properties\n        const resolvedParams = await params;\n        const id = resolvedParams.id;\n        const body = await request.json();\n\n        // Validate required fields\n        if (!body.name) {\n            return NextResponse.json({\n                success: false,\n                message: 'Shop name is required'\n            }, { status: 400 });\n        }\n\n        // Check if the shop exists\n        const existingShop = await prisma.shop.findUnique({\n            where: { id }\n        });\n\n        if (!existingShop) {\n            return NextResponse.json({\n                success: false,\n                message: `Shop with ID ${id} not found`\n            }, { status: 404 });\n        }\n\n        // Update the shop\n        const updatedShop = await prisma.shop.update({\n            where: { id },\n            data: {\n                name: body.name,\n                location: body.location,\n                contact_person: body.contact_person !== undefined ? body.contact_person : existingShop.contact_person,\n                phone: body.phone !== undefined ? body.phone : existingShop.phone,\n                email: body.email !== undefined ? body.email : existingShop.email,\n                is_active: body.is_active !== undefined ? body.is_active : existingShop.is_active,\n                opening_time: body.opening_time ? new Date(body.opening_time) : existingShop.opening_time,\n                closing_time: body.closing_time ? new Date(body.closing_time) : existingShop.closing_time,\n                manager_id: body.manager_id !== undefined ? body.manager_id : existingShop.manager_id,\n                opening_date: body.opening_date ? new Date(body.opening_date) : existingShop.opening_date,\n                status: body.status || existingShop.status,\n                address_line1: body.address_line1 !== undefined ? body.address_line1 : existingShop.address_line1,\n                address_line2: body.address_line2 !== undefined ? body.address_line2 : existingShop.address_line2,\n                city: body.city !== undefined ? body.city : existingShop.city,\n                state: body.state !== undefined ? body.state : existingShop.state,\n                postal_code: body.postal_code !== undefined ? body.postal_code : existingShop.postal_code,\n                country: body.country !== undefined ? body.country : existingShop.country,\n                latitude: body.latitude !== undefined ? body.latitude : existingShop.latitude,\n                longitude: body.longitude !== undefined ? body.longitude : existingShop.longitude,\n                tax_rate: body.tax_rate !== undefined ? body.tax_rate : existingShop.tax_rate\n            }\n        });\n\n        return NextResponse.json({\n            success: true,\n            message: 'Shop updated successfully',\n            data: updatedShop\n        });\n    } catch (error) {\n        console.error(`Error updating shop:`, error);\n        return NextResponse.json({\n            success: false,\n            message: 'Error updating shop',\n            error: error instanceof Error ? error.message : String(error)\n        }, { status: 500 });\n    }\n}\n\n// DELETE: Delete a shop by ID (since Prisma doesn't have built-in soft delete)\nexport async function DELETE(\n    request: NextRequest,\n    context: { params: Promise<{ id: string }> }\n) {\n    try {\n        // Await params before using its properties\n        const resolvedParams = await context.params;\n        const id = resolvedParams.id;\n\n        // Check if the shop exists\n        const existingShop = await prisma.shop.findUnique({\n            where: { id }\n        });\n\n        if (!existingShop) {\n            return NextResponse.json({\n                success: false,\n                message: `Shop with ID ${id} not found`\n            }, { status: 404 });\n        }\n\n        // Check for related inventory items\n        const inventoryItemCount = await prisma.inventoryItem.count({\n            where: { shopId: id }\n        });\n\n        // Check for related users\n        const userCount = await prisma.user.count({\n            where: { shopId: id }\n        });\n\n        // Check for related inventory transfers\n        const transfersCount = await prisma.inventoryTransfer.count({\n            where: {\n                OR: [\n                    { fromShopId: id },\n                    { toShopId: id }\n                ]\n            }\n        });\n\n        // Check for related products\n        const productsCount = await prisma.product.count({\n            where: { shopId: id }\n        });\n\n        // If there are related records, return an error\n        if (inventoryItemCount > 0 || userCount > 0 || transfersCount > 0 || productsCount > 0) {\n            const relatedRecords = [];\n\n            if (inventoryItemCount > 0) relatedRecords.push(`${inventoryItemCount} inventory items`);\n            if (userCount > 0) relatedRecords.push(`${userCount} users`);\n            if (transfersCount > 0) relatedRecords.push(`${transfersCount} inventory transfers`);\n            if (productsCount > 0) relatedRecords.push(`${productsCount} products`);\n\n            return NextResponse.json({\n                success: false,\n                message: `Cannot delete shop. It has related records: ${relatedRecords.join(', ')}. Please remove or reassign these records first.`,\n                relatedRecords: {\n                    inventoryItems: inventoryItemCount,\n                    users: userCount,\n                    transfers: transfersCount,\n                    products: productsCount\n                }\n            }, { status: 409 }); // 409 Conflict\n        }\n\n        // Delete the shop\n        await prisma.shop.delete({\n            where: { id }\n        });\n\n        return NextResponse.json({\n            success: true,\n            message: 'Shop deleted successfully'\n        });\n    } catch (error) {\n        console.error(`Error deleting shop:`, error);\n        return NextResponse.json({\n            success: false,\n            message: 'Error deleting shop',\n            error: error instanceof Error ? error.message : String(error)\n        }, { status: 500 });\n    }\n} "],
      names: ["DELETE", "GET", "PUT", "request", "params", "resolvedParams", "id", "shop", "prisma", "findUnique", "where", "include", "InventoryItem", "product", "manager", "select", "name", "email", "phone", "NextResponse", "json", "success", "message", "status", "inventory", "map", "item", "product_id", "productId", "product_name", "product_sku", "sku", "retail_price", "price", "quantity", "reorder_level", "shopData", "shopWithInventory", "data", "error", "console", "Error", "String", "body", "existingShop", "updatedShop", "update", "location", "contact_person", "undefined", "is_active", "opening_time", "Date", "closing_time", "manager_id", "opening_date", "address_line1", "address_line2", "city", "state", "postal_code", "country", "latitude", "longitude", "tax_rate", "context", "inventoryItemCount", "inventoryItem", "count", "shopId", "userCount", "user", "transfersCount", "inventoryTransfer", "OR", "fromShopId", "toShopId", "productsCount", "relatedRecords", "push", "join", "inventoryItems", "users", "transfers", "products", "delete"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6c675c0d70c23448b62cb9b9ee4d0a44efc46de2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_imjw00kwd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_imjw00kwd();
cov_imjw00kwd().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_imjw00kwd().f[0]++;
  cov_imjw00kwd().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_imjw00kwd().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_imjw00kwd().s[3]++;
_export(exports, {
  DELETE: function () {
    /* istanbul ignore next */
    cov_imjw00kwd().f[1]++;
    cov_imjw00kwd().s[4]++;
    return DELETE;
  },
  GET: function () {
    /* istanbul ignore next */
    cov_imjw00kwd().f[2]++;
    cov_imjw00kwd().s[5]++;
    return GET;
  },
  PUT: function () {
    /* istanbul ignore next */
    cov_imjw00kwd().f[3]++;
    cov_imjw00kwd().s[6]++;
    return PUT;
  }
});
const _server =
/* istanbul ignore next */
(cov_imjw00kwd().s[7]++, require("next/server"));
const _prisma =
/* istanbul ignore next */
(/*#__PURE__*/cov_imjw00kwd().s[8]++, _interop_require_default(require("../../../../lib/prisma")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_imjw00kwd().f[4]++;
  cov_imjw00kwd().s[9]++;
  return /* istanbul ignore next */(cov_imjw00kwd().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_imjw00kwd().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_imjw00kwd().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_imjw00kwd().b[0][1]++, {
    default: obj
  });
}
async function GET(request, {
  params
}) {
  /* istanbul ignore next */
  cov_imjw00kwd().f[5]++;
  cov_imjw00kwd().s[10]++;
  try {
    // Await params before using its properties
    const resolvedParams =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[11]++, await params);
    const id =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[12]++, resolvedParams.id);
    // Get the shop with its inventory and manager
    const shop =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[13]++, await _prisma.default.shop.findUnique({
      where: {
        id
      },
      include: {
        InventoryItem: {
          include: {
            product: true
          }
        },
        manager: {
          select: {
            id: true,
            name: true,
            email: true,
            phone: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_imjw00kwd().s[14]++;
    if (!shop) {
      /* istanbul ignore next */
      cov_imjw00kwd().b[2][0]++;
      cov_imjw00kwd().s[15]++;
      return _server.NextResponse.json({
        success: false,
        message: `Shop with ID ${id} not found`
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_imjw00kwd().b[2][1]++;
    }
    // Format the inventory data for the response
    const inventory =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[16]++, shop.InventoryItem.map(item => {
      /* istanbul ignore next */
      cov_imjw00kwd().f[6]++;
      cov_imjw00kwd().s[17]++;
      return {
        id: item.id,
        product_id: item.productId,
        product_name: item.product.name,
        product_sku: item.product.sku,
        retail_price: item.product.price,
        quantity: item.quantity,
        reorder_level: 10 // Default reorder level if not in database
      };
    }));
    // Format the response
    const {
      InventoryItem,
      ...shopData
    } =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[18]++, shop);
    const shopWithInventory =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[19]++, {
      ...shopData,
      inventory
    });
    /* istanbul ignore next */
    cov_imjw00kwd().s[20]++;
    return _server.NextResponse.json({
      success: true,
      data: shopWithInventory
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_imjw00kwd().s[21]++;
    console.error(`Error fetching shop:`, error);
    /* istanbul ignore next */
    cov_imjw00kwd().s[22]++;
    return _server.NextResponse.json({
      success: false,
      message: "Error fetching shop",
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_imjw00kwd().b[3][0]++, error.message) :
      /* istanbul ignore next */
      (cov_imjw00kwd().b[3][1]++, String(error))
    }, {
      status: 500
    });
  }
}
async function PUT(request, {
  params
}) {
  /* istanbul ignore next */
  cov_imjw00kwd().f[7]++;
  cov_imjw00kwd().s[23]++;
  try {
    // Await params before using its properties
    const resolvedParams =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[24]++, await params);
    const id =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[25]++, resolvedParams.id);
    const body =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[26]++, await request.json());
    // Validate required fields
    /* istanbul ignore next */
    cov_imjw00kwd().s[27]++;
    if (!body.name) {
      /* istanbul ignore next */
      cov_imjw00kwd().b[4][0]++;
      cov_imjw00kwd().s[28]++;
      return _server.NextResponse.json({
        success: false,
        message: "Shop name is required"
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_imjw00kwd().b[4][1]++;
    }
    // Check if the shop exists
    const existingShop =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[29]++, await _prisma.default.shop.findUnique({
      where: {
        id
      }
    }));
    /* istanbul ignore next */
    cov_imjw00kwd().s[30]++;
    if (!existingShop) {
      /* istanbul ignore next */
      cov_imjw00kwd().b[5][0]++;
      cov_imjw00kwd().s[31]++;
      return _server.NextResponse.json({
        success: false,
        message: `Shop with ID ${id} not found`
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_imjw00kwd().b[5][1]++;
    }
    // Update the shop
    const updatedShop =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[32]++, await _prisma.default.shop.update({
      where: {
        id
      },
      data: {
        name: body.name,
        location: body.location,
        contact_person: body.contact_person !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[6][0]++, body.contact_person) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[6][1]++, existingShop.contact_person),
        phone: body.phone !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[7][0]++, body.phone) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[7][1]++, existingShop.phone),
        email: body.email !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[8][0]++, body.email) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[8][1]++, existingShop.email),
        is_active: body.is_active !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[9][0]++, body.is_active) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[9][1]++, existingShop.is_active),
        opening_time: body.opening_time ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[10][0]++, new Date(body.opening_time)) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[10][1]++, existingShop.opening_time),
        closing_time: body.closing_time ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[11][0]++, new Date(body.closing_time)) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[11][1]++, existingShop.closing_time),
        manager_id: body.manager_id !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[12][0]++, body.manager_id) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[12][1]++, existingShop.manager_id),
        opening_date: body.opening_date ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[13][0]++, new Date(body.opening_date)) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[13][1]++, existingShop.opening_date),
        status:
        /* istanbul ignore next */
        (cov_imjw00kwd().b[14][0]++, body.status) ||
        /* istanbul ignore next */
        (cov_imjw00kwd().b[14][1]++, existingShop.status),
        address_line1: body.address_line1 !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[15][0]++, body.address_line1) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[15][1]++, existingShop.address_line1),
        address_line2: body.address_line2 !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[16][0]++, body.address_line2) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[16][1]++, existingShop.address_line2),
        city: body.city !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[17][0]++, body.city) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[17][1]++, existingShop.city),
        state: body.state !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[18][0]++, body.state) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[18][1]++, existingShop.state),
        postal_code: body.postal_code !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[19][0]++, body.postal_code) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[19][1]++, existingShop.postal_code),
        country: body.country !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[20][0]++, body.country) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[20][1]++, existingShop.country),
        latitude: body.latitude !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[21][0]++, body.latitude) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[21][1]++, existingShop.latitude),
        longitude: body.longitude !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[22][0]++, body.longitude) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[22][1]++, existingShop.longitude),
        tax_rate: body.tax_rate !== undefined ?
        /* istanbul ignore next */
        (cov_imjw00kwd().b[23][0]++, body.tax_rate) :
        /* istanbul ignore next */
        (cov_imjw00kwd().b[23][1]++, existingShop.tax_rate)
      }
    }));
    /* istanbul ignore next */
    cov_imjw00kwd().s[33]++;
    return _server.NextResponse.json({
      success: true,
      message: "Shop updated successfully",
      data: updatedShop
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_imjw00kwd().s[34]++;
    console.error(`Error updating shop:`, error);
    /* istanbul ignore next */
    cov_imjw00kwd().s[35]++;
    return _server.NextResponse.json({
      success: false,
      message: "Error updating shop",
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_imjw00kwd().b[24][0]++, error.message) :
      /* istanbul ignore next */
      (cov_imjw00kwd().b[24][1]++, String(error))
    }, {
      status: 500
    });
  }
}
async function DELETE(request, context) {
  /* istanbul ignore next */
  cov_imjw00kwd().f[8]++;
  cov_imjw00kwd().s[36]++;
  try {
    // Await params before using its properties
    const resolvedParams =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[37]++, await context.params);
    const id =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[38]++, resolvedParams.id);
    // Check if the shop exists
    const existingShop =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[39]++, await _prisma.default.shop.findUnique({
      where: {
        id
      }
    }));
    /* istanbul ignore next */
    cov_imjw00kwd().s[40]++;
    if (!existingShop) {
      /* istanbul ignore next */
      cov_imjw00kwd().b[25][0]++;
      cov_imjw00kwd().s[41]++;
      return _server.NextResponse.json({
        success: false,
        message: `Shop with ID ${id} not found`
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_imjw00kwd().b[25][1]++;
    }
    // Check for related inventory items
    const inventoryItemCount =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[42]++, await _prisma.default.inventoryItem.count({
      where: {
        shopId: id
      }
    }));
    // Check for related users
    const userCount =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[43]++, await _prisma.default.user.count({
      where: {
        shopId: id
      }
    }));
    // Check for related inventory transfers
    const transfersCount =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[44]++, await _prisma.default.inventoryTransfer.count({
      where: {
        OR: [{
          fromShopId: id
        }, {
          toShopId: id
        }]
      }
    }));
    // Check for related products
    const productsCount =
    /* istanbul ignore next */
    (cov_imjw00kwd().s[45]++, await _prisma.default.product.count({
      where: {
        shopId: id
      }
    }));
    // If there are related records, return an error
    /* istanbul ignore next */
    cov_imjw00kwd().s[46]++;
    if (
    /* istanbul ignore next */
    (cov_imjw00kwd().b[27][0]++, inventoryItemCount > 0) ||
    /* istanbul ignore next */
    (cov_imjw00kwd().b[27][1]++, userCount > 0) ||
    /* istanbul ignore next */
    (cov_imjw00kwd().b[27][2]++, transfersCount > 0) ||
    /* istanbul ignore next */
    (cov_imjw00kwd().b[27][3]++, productsCount > 0)) {
      /* istanbul ignore next */
      cov_imjw00kwd().b[26][0]++;
      const relatedRecords =
      /* istanbul ignore next */
      (cov_imjw00kwd().s[47]++, []);
      /* istanbul ignore next */
      cov_imjw00kwd().s[48]++;
      if (inventoryItemCount > 0) {
        /* istanbul ignore next */
        cov_imjw00kwd().b[28][0]++;
        cov_imjw00kwd().s[49]++;
        relatedRecords.push(`${inventoryItemCount} inventory items`);
      } else
      /* istanbul ignore next */
      {
        cov_imjw00kwd().b[28][1]++;
      }
      cov_imjw00kwd().s[50]++;
      if (userCount > 0) {
        /* istanbul ignore next */
        cov_imjw00kwd().b[29][0]++;
        cov_imjw00kwd().s[51]++;
        relatedRecords.push(`${userCount} users`);
      } else
      /* istanbul ignore next */
      {
        cov_imjw00kwd().b[29][1]++;
      }
      cov_imjw00kwd().s[52]++;
      if (transfersCount > 0) {
        /* istanbul ignore next */
        cov_imjw00kwd().b[30][0]++;
        cov_imjw00kwd().s[53]++;
        relatedRecords.push(`${transfersCount} inventory transfers`);
      } else
      /* istanbul ignore next */
      {
        cov_imjw00kwd().b[30][1]++;
      }
      cov_imjw00kwd().s[54]++;
      if (productsCount > 0) {
        /* istanbul ignore next */
        cov_imjw00kwd().b[31][0]++;
        cov_imjw00kwd().s[55]++;
        relatedRecords.push(`${productsCount} products`);
      } else
      /* istanbul ignore next */
      {
        cov_imjw00kwd().b[31][1]++;
      }
      cov_imjw00kwd().s[56]++;
      return _server.NextResponse.json({
        success: false,
        message: `Cannot delete shop. It has related records: ${relatedRecords.join(", ")}. Please remove or reassign these records first.`,
        relatedRecords: {
          inventoryItems: inventoryItemCount,
          users: userCount,
          transfers: transfersCount,
          products: productsCount
        }
      }, {
        status: 409
      }); // 409 Conflict
    } else
    /* istanbul ignore next */
    {
      cov_imjw00kwd().b[26][1]++;
    }
    // Delete the shop
    cov_imjw00kwd().s[57]++;
    await _prisma.default.shop.delete({
      where: {
        id
      }
    });
    /* istanbul ignore next */
    cov_imjw00kwd().s[58]++;
    return _server.NextResponse.json({
      success: true,
      message: "Shop deleted successfully"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_imjw00kwd().s[59]++;
    console.error(`Error deleting shop:`, error);
    /* istanbul ignore next */
    cov_imjw00kwd().s[60]++;
    return _server.NextResponse.json({
      success: false,
      message: "Error deleting shop",
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_imjw00kwd().b[32][0]++, error.message) :
      /* istanbul ignore next */
      (cov_imjw00kwd().b[32][1]++, String(error))
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,