{"version":3,"names":["NewPurchaseInvoiceForm","cardVariants","cov_18emoeox3d","s","hidden","opacity","y","visible","transition","duration","ease","itemVariants","x","initialSuppliers","initialProducts","initialCategories","initialShops","isModal","b","onSuccess","onCancel","f","router","_navigation","useRouter","submitting","setSubmitting","_react","useState","error","setError","data","suppliers","_useQueries","useSuppliersOptimized","products","setProducts","filteredProducts","setFilteredProducts","categories","setCategories","shops","setShops","showNewProductModal","setShowNewProductModal","newProductModalError","setNewProductModalError","newProductSubmitting","setNewProductSubmitting","newProductData","setNewProductData","name","sku","description","price","weightedAverageCost","categoryId","selectedItemIndexForDistribution","setSelectedItemIndexForDistribution","showDistributionModal","setShowDistributionModal","itemDistributions","setItemDistributions","generateInvoiceNumber","useCallback","now","Date","year","getFullYear","toString","slice","month","getMonth","padStart","day","getDate","random","Math","floor","formData","setFormData","invoiceNumber","date","toISOString","split","dueDate","supplierId","status","notes","items","totalAmount","paidAmount","fetchUpdatedProductData","productId","timestamp","response","fetch","cache","headers","ok","json","success","console","useEffect","total","reduce","sum","item","Number","quantity","prev","createInvoiceMutation","useCreatePurchaseInvoice","productsData","refetch","refetchProducts","useProducts","handleChange","e","value","target","parseFloat","handleAddItem","newItems","productName","prevDist","handleItemChange","index","currentItem","selectedProduct","find","p","id","handleRemoveItem","filter","_","i","handleOpenDistributionModal","itemIndex","handleDistributionChange","shopId","quantityStr","parseInt","prevDists","newDists","currentItemDist","getTotalDistributedForItem","Object","values","qty","handleCreateNewProduct","method","body","JSON","stringify","errData","Error","message","createdProduct","err","handleSubmit","preventDefault","length","invalidItems","preparedData","map","hasActualDistributions","some","dist","keys","distributions","defaultShop","isDefault","defaultShopId","log","createdInvoice","mutateAsync","push","handleProductSearch","query","product","toLowerCase","includes","_jsxruntime","jsxs","onSubmit","className","_framermotion","motion","div","initial","animate","jsx","_lucidereact","Info","size","variants","htmlFor","type","readOnly","_Combobox","Combobox","options","label","onChange","placeholder","searchable","required","toFixed","min","step","rows","_Button","Button","variant","onClick","PackagePlus","Plus","onSearch","disabled","Store","Trash","AnimatePresence","exit","scale","XCircle","c","Loader2","max","shop","Fragment","Save"],"sources":["/Users/sachin/Documents/md-sports-/src/components/purchases/NewPurchaseInvoiceForm.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { Button } from '@/components/ui/Button';\nimport { Combobox } from '@/components/ui/Combobox';\nimport { Loader2, Save, XCircle, Plus, FileText, DollarSign, Calendar, Trash, Store, PackagePlus, Info } from 'lucide-react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { PurchaseInvoice, Supplier, Product, Category, Shop } from '@/types';\nimport { useCreatePurchaseInvoice, useProducts, useSuppliersOptimized } from '@/hooks/useQueries';\n\nconst cardVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n        opacity: 1,\n        y: 0,\n        transition: { duration: 0.4, ease: \"easeOut\" }\n    }\n};\n\nconst itemVariants = {\n    hidden: { opacity: 0, x: -10 },\n    visible: {\n        opacity: 1,\n        x: 0,\n        transition: { duration: 0.3 }\n    }\n};\n\ninterface NewPurchaseInvoiceFormProps {\n    initialSuppliers: Supplier[];\n    initialProducts: Product[];\n    initialCategories: Category[];\n    initialShops: Shop[];\n    isModal?: boolean;\n    onSuccess?: () => void;\n    onCancel?: () => void;\n}\n\nexport default function NewPurchaseInvoiceForm({\n    initialSuppliers,\n    initialProducts,\n    initialCategories,\n    initialShops,\n    isModal = false,\n    onSuccess,\n    onCancel\n}: NewPurchaseInvoiceFormProps) {\n    const router = useRouter();\n    const [submitting, setSubmitting] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n\n    // Use real-time hooks for data fetching\n    const { data: suppliers = initialSuppliers || [] } = useSuppliersOptimized();\n    const [products, setProducts] = useState<Product[]>(initialProducts || []);\n    const [filteredProducts, setFilteredProducts] = useState<Product[]>(initialProducts || []);\n    const [categories, setCategories] = useState<Category[]>(initialCategories || []);\n    const [shops, setShops] = useState<Shop[]>(initialShops || []);\n\n    const [showNewProductModal, setShowNewProductModal] = useState(false);\n    const [newProductModalError, setNewProductModalError] = useState<string | null>(null);\n    const [newProductSubmitting, setNewProductSubmitting] = useState(false);\n    const [newProductData, setNewProductData] = useState({\n        name: '',\n        sku: '',\n        description: '',\n        price: 0,\n        weightedAverageCost: 0,\n        categoryId: ''\n    });\n\n    const [selectedItemIndexForDistribution, setSelectedItemIndexForDistribution] = useState<number | null>(null);\n    const [showDistributionModal, setShowDistributionModal] = useState(false);\n    const [itemDistributions, setItemDistributions] = useState<Array<Record<number, number>>>([]);\n\n    const generateInvoiceNumber = useCallback(() => {\n        const now = new Date();\n        const year = now.getFullYear().toString().slice(2);\n        const month = (now.getMonth() + 1).toString().padStart(2, '0');\n        const day = now.getDate().toString().padStart(2, '0');\n        const random = Math.floor(Math.random() * 1000).toString().padStart(3, '0');\n        return `PI-${year}${month}${day}-${random}`;\n    }, []);\n\n    const [formData, setFormData] = useState<Partial<PurchaseInvoice>>({\n        invoiceNumber: generateInvoiceNumber(),\n        date: new Date().toISOString().split('T')[0],\n        dueDate: '',\n        supplierId: '',\n        status: 'pending_approval', // Default status\n        notes: '',\n        items: [],\n        totalAmount: 0,\n        paidAmount: 0,\n    });\n\n    // Function to fetch updated product data\n    const fetchUpdatedProductData = useCallback(async (productId?: number) => {\n        try {\n            // Add timestamp to ensure cache busting\n            const timestamp = Date.now();\n            const response = await fetch(`/api/products?t=${timestamp}`, {\n                cache: 'no-store', // Ensure fresh data\n                headers: {\n                    'Cache-Control': 'no-cache, no-store, must-revalidate',\n                    'Pragma': 'no-cache',\n                    'Expires': '0'\n                }\n            });\n            if (response.ok) {\n                const data = await response.json();\n                if (data.success && data.data) {\n                    setProducts(data.data);\n                    setFilteredProducts(data.data);\n                }\n            }\n        } catch (error) {\n            console.error('Error fetching updated product data:', error);\n        }\n    }, []);\n\n    useEffect(() => {\n        const total = (formData.items || []).reduce((sum, item) => {\n            return sum + (Number(item.quantity) * Number(item.price));\n        }, 0);\n        setFormData(prev => ({ ...prev, totalAmount: total }));\n    }, [formData.items]);\n\n    // Force refresh products on component mount to ensure latest data\n    useEffect(() => {\n        fetchUpdatedProductData();\n    }, [fetchUpdatedProductData]);\n\n    const createInvoiceMutation = useCreatePurchaseInvoice();\n    const { data: productsData, refetch: refetchProducts } = useProducts();\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n        const { name, value } = e.target;\n        setFormData(prev => ({\n            ...prev,\n            [name]: name === 'paidAmount' || name === 'totalAmount' ? parseFloat(value) || 0 : value\n        }));\n    };\n\n    const handleAddItem = () => {\n        setFormData(prev => {\n            const newItems = [\n                ...(prev.items || []),\n                {\n                    productId: '',\n                    productName: '',\n                    quantity: 1,\n                    price: 0,\n                }\n            ];\n            setItemDistributions(prevDist => [...prevDist, {}]);\n            return { ...prev, items: newItems };\n        });\n    };\n\n    const handleItemChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>, index: number) => {\n        const { name, value } = e.target;\n        const newItems = [...(formData.items || [])];\n        const currentItem = { ...newItems[index] };\n\n        if (name === 'productId') {\n            const selectedProduct = products.find(p => p.id.toString() === value);\n            if (selectedProduct) {\n                currentItem.productId = selectedProduct.id.toString();\n                currentItem.productName = selectedProduct.name;\n                currentItem.price = selectedProduct.weightedAverageCost || 0;\n            } else {\n                currentItem.productId = '';\n                currentItem.productName = '';\n                currentItem.price = 0;\n            }\n        } else if (name === 'quantity' || name === 'price') {\n            (currentItem as any)[name] = value === '' ? '' : parseFloat(value) || 0;\n        } else {\n            (currentItem as any)[name] = value;\n        }\n        newItems[index] = currentItem;\n        setFormData(prev => ({ ...prev, items: newItems }));\n    };\n\n    const handleRemoveItem = (index: number) => {\n        setFormData(prev => ({\n            ...prev,\n            items: (prev.items || []).filter((_, i) => i !== index)\n        }));\n        setItemDistributions(prevDist => prevDist.filter((_, i) => i !== index));\n    };\n\n    const handleOpenDistributionModal = (itemIndex: number) => {\n        setSelectedItemIndexForDistribution(itemIndex);\n        setShowDistributionModal(true);\n    };\n\n    const handleDistributionChange = (shopId: number, quantityStr: string) => {\n        if (selectedItemIndexForDistribution === null) return;\n        const quantity = quantityStr === '' ? 0 : parseInt(quantityStr) || 0;\n        setItemDistributions(prevDists => {\n            const newDists = [...prevDists];\n            const currentItemDist = { ...(newDists[selectedItemIndexForDistribution] || {}) };\n            if (quantity > 0) {\n                currentItemDist[shopId] = quantity;\n            } else {\n                delete currentItemDist[shopId];\n            }\n            newDists[selectedItemIndexForDistribution] = currentItemDist;\n            return newDists;\n        });\n    };\n\n    const getTotalDistributedForItem = (itemIndex: number): number => {\n        if (itemIndex === null || !itemDistributions[itemIndex]) return 0;\n        return Object.values(itemDistributions[itemIndex]).reduce((sum, qty) => sum + Number(qty), 0);\n    };\n\n    const handleCreateNewProduct = async () => {\n        if (!newProductData.name || !newProductData.categoryId || newProductData.price <= 0 || newProductData.weightedAverageCost <= 0) {\n            setNewProductModalError('Name, Category, Purchase Price, and Retail Price are required.');\n            return;\n        }\n        setNewProductSubmitting(true);\n        setNewProductModalError(null);\n        try {\n            const response = await fetch('/api/products', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(newProductData)\n            });\n            if (!response.ok) {\n                const errData = await response.json();\n                throw new Error(errData.message || 'Failed to create product');\n            }\n            const createdProduct = await response.json();\n\n            // Refetch products to get updated list\n            await refetchProducts();\n\n            setProducts(prev => [...prev, createdProduct.data]);\n            setFilteredProducts(prev => [...prev, createdProduct.data]);\n            setShowNewProductModal(false);\n            setNewProductData({ name: '', sku: '', description: '', price: 0, weightedAverageCost: 0, categoryId: '' });\n            // Optionally, add the new product directly to the current invoice items\n        } catch (err: any) {\n            setNewProductModalError(err.message);\n        } finally {\n            setNewProductSubmitting(false);\n        }\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n\n        if (!formData.supplierId) {\n            setError('Please select a supplier.');\n            return;\n        }\n\n        if (!formData.items || formData.items.length === 0) {\n            setError('Please add at least one item to the invoice.');\n            return;\n        }\n\n        // Validate all items have valid products and quantities\n        const invalidItems = (formData.items || []).filter(item =>\n            !item.productId || !item.quantity || item.quantity <= 0 || !item.price || item.price <= 0\n        );\n\n        if (invalidItems.length > 0) {\n            setError('Please ensure all items have a product, quantity, and price.');\n            return;\n        }\n\n        setSubmitting(true);\n        setError(null);\n\n        try {\n            // Prepare the data with proper types\n            const preparedData: any = { // Use 'any' for now, or create a more specific type\n                ...formData,\n                items: formData.items?.map(item => ({\n                    ...item,\n                    productId: parseInt(item.productId), // Ensure productId is a number\n                    quantity: Number(item.quantity),\n                    price: Number(item.price),\n                })),\n                totalAmount: Number(formData.totalAmount),\n                paidAmount: Number(formData.paidAmount || 0),\n            };\n\n            // Add distribution data if available and correctly structured\n            const hasActualDistributions = itemDistributions.some(dist => Object.keys(dist).length > 0);\n\n            if (hasActualDistributions) {\n                preparedData.distributions = itemDistributions.map((dist, index) => {\n                    const item = formData.items?.[index];\n                    // Ensure distribution is only added if item exists and distribution is not empty\n                    if (item && Object.keys(dist).length > 0) {\n                        return dist;\n                    }\n                    return {}; // Return empty object if no distribution for this item\n                });\n            } else if (shops.length > 0) { // If no specific distributions, check for a default shop\n                // Attempt to use the first shop as a default if no specific distributions\n                // This is a placeholder, you might have a more specific way to define a \"default\" shop\n                const defaultShop = shops.find(s => s.isDefault) || shops[0];\n                if (defaultShop) {\n                    preparedData.defaultShopId = defaultShop.id;\n                }\n            }\n\n            // Remove itemDistributions if it was added in error previously\n            if (preparedData.itemDistributions) {\n                delete preparedData.itemDistributions;\n            }\n\n            console.log('Submitting purchase invoice:', preparedData);\n\n            const createdInvoice = await createInvoiceMutation.mutateAsync(preparedData);\n            console.log('Purchase invoice created:', createdInvoice);\n\n            // If in modal mode, call onSuccess callback\n            if (isModal && onSuccess) {\n                onSuccess();\n            } else {\n                // Otherwise redirect to the purchase invoices list\n                router.push('/purchases?success=true&action=created&id=' + createdInvoice.id);\n            }\n\n        } catch (err) {\n            console.error('Error creating purchase invoice:', err);\n            setError(err instanceof Error ? err.message : 'An unexpected error occurred');\n        } finally {\n            setSubmitting(false);\n        }\n    };\n\n    const handleProductSearch = (query: string) => {\n        if (!query) {\n            setFilteredProducts(products);\n            return;\n        }\n        setFilteredProducts(\n            products.filter(\n                (product) =>\n                    product.name.toLowerCase().includes(query.toLowerCase()) ||\n                    (product.sku && product.sku.toLowerCase().includes(query.toLowerCase()))\n            )\n        );\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n            {error &&\n                <motion.div initial={{ opacity: 0, y: -10 }} animate={{ opacity: 1, y: 0 }} className=\"mb-4 p-3 bg-red-100 text-red-700 rounded-md flex items-center gap-2\">\n                    <Info size={18} /> {error}\n                </motion.div>\n            }\n            <motion.div variants={cardVariants} className=\"p-6 bg-white rounded-lg shadow\">\n                <h2 className=\"text-xl font-semibold mb-6 text-gray-800 border-b pb-3\">Invoice Details</h2>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-x-6 gap-y-5\">\n                    <div>\n                        <label htmlFor=\"invoiceNumber\" className=\"block text-sm font-medium text-gray-700 mb-1\">Invoice Number</label>\n                        <input type=\"text\" name=\"invoiceNumber\" id=\"invoiceNumber\" value={formData.invoiceNumber || ''} readOnly className=\"block w-full rounded-md border border-gray-300 shadow-sm bg-gray-100 sm:text-sm text-gray-700 p-2 cursor-default\" />\n                    </div>\n                    <div>\n                        <label htmlFor=\"supplierId\" className=\"block text-sm font-medium text-gray-700 mb-1\">Supplier <span className=\"text-red-500\">*</span></label>\n                        <Combobox\n                            options={suppliers.map(s => ({ value: s.id.toString(), label: s.name }))}\n                            value={formData.supplierId || ''}\n                            onChange={(value) => setFormData(prev => ({ ...prev, supplierId: value }))}\n                            placeholder=\"Select Supplier\"\n                            searchable={true}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"date\" className=\"block text-sm font-medium text-gray-700 mb-1\">Invoice Date <span className=\"text-red-500\">*</span></label>\n                        <input type=\"date\" name=\"date\" id=\"date\" value={formData.date || ''} onChange={handleChange} required className=\"block w-full rounded-md border border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-900 p-2 placeholder-gray-500\" />\n                    </div>\n                    <div>\n                        <label htmlFor=\"dueDate\" className=\"block text-sm font-medium text-gray-700 mb-1\">Due Date</label>\n                        <input type=\"date\" name=\"dueDate\" id=\"dueDate\" value={formData.dueDate || ''} onChange={handleChange} className=\"block w-full rounded-md border border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-900 p-2 placeholder-gray-500\" />\n                    </div>\n                    <div>\n                        <label htmlFor=\"status\" className=\"block text-sm font-medium text-gray-700 mb-1\">Status</label>\n                        <select name=\"status\" id=\"status\" value={formData.status || 'pending_approval'} onChange={handleChange} className=\"block w-full rounded-md border border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-900 p-2 placeholder-gray-500\">\n                            <option value=\"pending_approval\">Pending Approval</option>\n                            <option value=\"unpaid\">Unpaid</option>\n                            <option value=\"partial\">Partial</option>\n                            <option value=\"paid\">Paid</option>\n                            <option value=\"void\">Void</option>\n                        </select>\n                    </div>\n                    <div>\n                        <label htmlFor=\"totalAmount\" className=\"block text-sm font-medium text-gray-700 mb-1\">Total Amount</label>\n                        <input type=\"number\" name=\"totalAmount\" id=\"totalAmount\" value={formData.totalAmount?.toFixed(2) || '0.00'} readOnly className=\"block w-full rounded-md border border-gray-300 shadow-sm bg-gray-100 sm:text-sm text-gray-700 p-2 cursor-default\" />\n                    </div>\n                    <div className=\"md:col-span-2\">\n                        <label htmlFor=\"paidAmount\" className=\"block text-sm font-medium text-gray-700 mb-1\">Amount Paid</label>\n                        <input type=\"number\" name=\"paidAmount\" id=\"paidAmount\" value={formData.paidAmount || 0} onChange={handleChange} min=\"0\" step=\"0.01\" className=\"block w-full rounded-md border border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-900 p-2 placeholder-gray-500\" />\n                    </div>\n                    <div className=\"md:col-span-2\">\n                        <label htmlFor=\"notes\" className=\"block text-sm font-medium text-gray-700 mb-1\">Notes</label>\n                        <textarea name=\"notes\" id=\"notes\" value={formData.notes || ''} onChange={handleChange} rows={3} className=\"block w-full rounded-md border border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-900 p-2 placeholder-gray-500\"></textarea>\n                    </div>\n                </div>\n            </motion.div>\n\n            <motion.div variants={cardVariants} className=\"p-6 bg-white rounded-lg shadow\">\n                <div className=\"flex flex-col sm:flex-row justify-between sm:items-center mb-6 border-b pb-3\">\n                    <h2 className=\"text-xl font-semibold text-gray-800 mb-2 sm:mb-0\">Invoice Items</h2>\n                    <div className=\"flex space-x-2 flex-shrink-0\">\n                        <Button type=\"button\" variant=\"outline\" size=\"sm\" onClick={() => setShowNewProductModal(true)} className=\"flex items-center\">\n                            <PackagePlus className=\"w-4 h-4 mr-2\" /> New Product\n                        </Button>\n                        <Button type=\"button\" variant=\"primary\" size=\"sm\" onClick={handleAddItem} className=\"flex items-center\">\n                            <Plus className=\"w-4 h-4 mr-2\" /> Add Item\n                        </Button>\n                    </div>\n                </div>\n                <div className=\"space-y-4\">\n                    {(formData.items || []).map((item, index) => (\n                        <motion.div variants={itemVariants} key={index} className=\"p-4 border rounded-md bg-gray-50/80 space-y-3 md:space-y-0 md:grid md:grid-cols-12 md:gap-x-4 md:items-end\">\n                            <div className=\"md:col-span-4\">\n                                <label htmlFor={`item-product-${index}`} className=\"block text-xs font-medium text-gray-600 mb-1\">Product <span className=\"text-red-500\">*</span></label>\n                                <Combobox\n                                    options={filteredProducts.map(p => ({ value: p.id.toString(), label: `${p.name} (SKU: ${p.sku || 'N/A'})` }))}\n                                    value={item.productId || ''}\n                                    onChange={(value) => handleItemChange({ target: { name: 'productId', value } } as any, index)}\n                                    onSearch={handleProductSearch}\n                                    placeholder=\"Search or Select Product\"\n                                    searchable={true}\n                                />\n                            </div>\n                            <div className=\"md:col-span-2\">\n                                <label htmlFor={`item-quantity-${index}`} className=\"block text-xs font-medium text-gray-600 mb-1\">Quantity <span className=\"text-red-500\">*</span></label>\n                                <input type=\"number\" name=\"quantity\" id={`item-quantity-${index}`} value={item.quantity || ''} onChange={(e) => handleItemChange(e, index)} required min=\"0.01\" step=\"any\" className=\"block w-full rounded-md border border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-900 p-2 placeholder-gray-500\" placeholder=\"0.00\" />\n                            </div>\n                            <div className=\"md:col-span-2\">\n                                <label htmlFor={`item-price-${index}`} className=\"block text-xs font-medium text-gray-600 mb-1\">Unit Price <span className=\"text-red-500\">*</span></label>\n                                <input type=\"number\" name=\"price\" id={`item-price-${index}`} value={item.price || ''} onChange={(e) => handleItemChange(e, index)} required min=\"0\" step=\"any\" className=\"block w-full rounded-md border border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-900 p-2 placeholder-gray-500\" placeholder=\"0.00\" />\n                            </div>\n                            <div className=\"md:col-span-2\">\n                                <label className=\"block text-xs font-medium text-gray-600 mb-1\">Subtotal</label>\n                                <input type=\"text\" value={(Number(item.quantity) * Number(item.price)).toFixed(2)} readOnly className=\"block w-full rounded-md border border-gray-300 shadow-sm bg-gray-100 sm:text-sm text-gray-700 p-2 cursor-default\" />\n                            </div>\n                            <div className=\"md:col-span-2 flex items-end space-x-2\">\n                                <Button type=\"button\" variant=\"outline\" size=\"sm\" onClick={() => handleOpenDistributionModal(index)} className=\"w-full flex items-center justify-center text-xs py-2\" disabled={!item.productId || !item.quantity || Number(item.quantity) <= 0}>\n                                    <Store className=\"w-3 h-3 mr-1\" /> Distribute\n                                </Button>\n                                <Button type=\"button\" variant=\"danger_outline\" size=\"icon_sm\" onClick={() => handleRemoveItem(index)} className=\"h-9 w-9 flex-shrink-0\">\n                                    <Trash className=\"w-4 h-4\" />\n                                </Button>\n                            </div>\n                        </motion.div>\n                    ))}\n                </div>\n                {formData.items && formData.items.length === 0 && <p className=\"text-sm text-gray-500 text-center py-6\">No items added yet.</p>}\n            </motion.div>\n\n            {showNewProductModal && (\n                <AnimatePresence>\n                    <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }} className=\"fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center z-50 p-4\">\n                        <motion.div initial={{ scale: 0.95, opacity: 0 }} animate={{ scale: 1, opacity: 1 }} exit={{ scale: 0.95, opacity: 0 }} transition={{ duration: 0.2 }} className=\"bg-white p-6 rounded-lg shadow-xl w-full max-w-lg space-y-4\">\n                            <div className=\"flex justify-between items-center\">\n                                <h3 className=\"text-lg font-semibold text-gray-800\">Add New Product</h3>\n                                <button onClick={() => { setShowNewProductModal(false); setNewProductModalError(null); }} className=\"text-gray-400 hover:text-gray-600\"><XCircle className=\"w-5 h-5\" /></button>\n                            </div>\n                            {newProductModalError && <div className=\"p-3 bg-red-50 text-red-600 rounded-md text-sm flex items-center gap-2\"><Info size={16} /> {newProductModalError}</div>}\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Product Name <span className=\"text-red-500\">*</span></label>\n                                <input type=\"text\" value={newProductData.name} onChange={e => setNewProductData({ ...newProductData, name: e.target.value })} className=\"block w-full rounded-md border border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-900 p-2 placeholder-gray-500\" required />\n                            </div>\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">SKU</label>\n                                <input type=\"text\" value={newProductData.sku} onChange={e => setNewProductData({ ...newProductData, sku: e.target.value })} className=\"block w-full rounded-md border border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-900 p-2 placeholder-gray-500\" />\n                            </div>\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Category <span className=\"text-red-500\">*</span></label>\n                                <Combobox\n                                    options={categories.map(c => ({ value: c.id.toString(), label: c.name }))}\n                                    value={newProductData.categoryId}\n                                    onChange={value => setNewProductData({ ...newProductData, categoryId: value })}\n                                    placeholder=\"Select Category\"\n                                    searchable={true}\n                                />\n                            </div>\n                            <div className=\"grid grid-cols-2 gap-4\">\n                                <div>\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Purchase Price (WAC) <span className=\"text-red-500\">*</span></label>\n                                    <input type=\"number\" value={newProductData.weightedAverageCost} onChange={e => setNewProductData({ ...newProductData, weightedAverageCost: parseFloat(e.target.value) || 0 })} className=\"block w-full rounded-md border border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-900 p-2 placeholder-gray-500\" required min=\"0\" step=\"any\" placeholder=\"0.00\" />\n                                </div>\n                                <div>\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Retail Price <span className=\"text-red-500\">*</span></label>\n                                    <input type=\"number\" value={newProductData.price} onChange={e => setNewProductData({ ...newProductData, price: parseFloat(e.target.value) || 0 })} className=\"block w-full rounded-md border border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-900 p-2 placeholder-gray-500\" required min=\"0\" step=\"any\" placeholder=\"0.00\" />\n                                </div>\n                            </div>\n                            <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description</label>\n                                <textarea value={newProductData.description} onChange={e => setNewProductData({ ...newProductData, description: e.target.value })} className=\"block w-full rounded-md border border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-900 p-2 placeholder-gray-500\" rows={2}></textarea>\n                            </div>\n                            <div className=\"flex justify-end space-x-3 pt-2\">\n                                <Button variant=\"outline\" onClick={() => { setShowNewProductModal(false); setNewProductModalError(null); }} disabled={newProductSubmitting}>Cancel</Button>\n                                <Button variant=\"primary\" onClick={handleCreateNewProduct} disabled={newProductSubmitting} className=\"min-w-[130px]\">\n                                    {newProductSubmitting ? <Loader2 className=\"w-4 h-4 animate-spin\" /> : 'Create Product'}\n                                </Button>\n                            </div>\n                        </motion.div>\n                    </motion.div>\n                </AnimatePresence>\n            )}\n\n            {showDistributionModal && selectedItemIndexForDistribution !== null && formData.items && formData.items[selectedItemIndexForDistribution] && (\n                <AnimatePresence>\n                    <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }} className=\"fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center z-50 p-4\">\n                        <motion.div initial={{ scale: 0.95, opacity: 0 }} animate={{ scale: 1, opacity: 1 }} exit={{ scale: 0.95, opacity: 0 }} transition={{ duration: 0.2 }} className=\"bg-white p-6 rounded-lg shadow-xl w-full max-w-md\">\n                            <div className=\"flex justify-between items-center mb-4\">\n                                <h3 className=\"text-lg font-semibold text-gray-800\">Distribute: {formData.items[selectedItemIndexForDistribution].productName}</h3>\n                                <button onClick={() => setShowDistributionModal(false)} className=\"text-gray-400 hover:text-gray-600\"><XCircle className=\"w-5 h-5\" /></button>\n                            </div>\n                            <div className=\"space-y-3 max-h-72 overflow-y-auto pr-1\">\n                                <div className=\"mb-3 p-3 bg-blue-50 border border-blue-200 rounded-md text-sm text-blue-700 space-y-1\">\n                                    <p>Total Quantity for item: <span className=\"font-semibold\">{formData.items[selectedItemIndexForDistribution].quantity}</span></p>\n                                    <p>Currently Distributed: <span className=\"font-semibold\">{getTotalDistributedForItem(selectedItemIndexForDistribution)}</span></p>\n                                    <p>Remaining: <span className=\"font-semibold text-blue-800\">{Math.max(0, Number(formData.items[selectedItemIndexForDistribution].quantity) - getTotalDistributedForItem(selectedItemIndexForDistribution))}</span></p>\n                                </div>\n                                {shops.length > 0 ? shops.map(shop => (\n                                    <div key={shop.id} className=\"flex items-center justify-between py-2 border-b border-gray-100 last:border-b-0\">\n                                        <label htmlFor={`dist-shop-${shop.id}`} className=\"text-sm text-gray-700\">{shop.name}</label>\n                                        <input\n                                            type=\"number\"\n                                            id={`dist-shop-${shop.id}`}\n                                            value={itemDistributions[selectedItemIndexForDistribution]?.[shop.id] || ''}\n                                            onChange={(e) => handleDistributionChange(shop.id, e.target.value)}\n                                            min=\"0\"\n                                            max={Number(formData.items![selectedItemIndexForDistribution].quantity) - (getTotalDistributedForItem(selectedItemIndexForDistribution) - (itemDistributions[selectedItemIndexForDistribution]?.[shop.id] || 0))}\n                                            placeholder=\"0\"\n                                            className=\"block w-28 rounded-md border border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm text-gray-900 p-1.5 placeholder-gray-500\"\n                                        />\n                                    </div>\n                                )) : <p className=\"text-sm text-gray-500 py-4 text-center\">No shops available for distribution.</p>}\n                            </div>\n                            <div className=\"mt-6 flex justify-end\">\n                                <Button variant=\"primary\" onClick={() => setShowDistributionModal(false)}>Done</Button>\n                            </div>\n                        </motion.div>\n                    </motion.div>\n                </AnimatePresence>\n            )}\n            <div className=\"flex justify-end space-x-3 mt-8\">\n                <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    disabled={submitting}\n                    onClick={isModal ? onCancel : () => router.push('/purchases')}\n                >\n                    Cancel\n                </Button>\n                <Button\n                    type=\"submit\"\n                    variant=\"primary\"\n                    disabled={submitting}\n                    className=\"flex items-center gap-2\"\n                >\n                    {submitting ? (\n                        <>\n                            <Loader2 className=\"animate-spin h-4 w-4\" />\n                            Saving...\n                        </>\n                    ) : (\n                        <>\n                            <Save className=\"h-4 w-4\" />\n                            Save Invoice\n                        </>\n                    )}\n                </Button>\n            </div>\n        </form>\n    );\n}"],"mappingsuCA;;;;;;WAAwBA,sBAAA;;;;;;;;kCArCyB;;;kCACvB;;;kCACH;;;kCACE;;;kCACqF;;;kCACtE;;;mCAEqC;AAE7E,MAAMC,YAAA;AAAA;AAAA,CAAAC,cAAA,GAAAC,CAAA,QAAe;EACjBC,MAAA,EAAQ;IAAEC,OAAA,EAAS;IAAGC,CAAA,EAAG;EAAG;EAC5BC,OAAA,EAAS;IACLF,OAAA,EAAS;IACTC,CAAA,EAAG;IACHE,UAAA,EAAY;MAAEC,QAAA,EAAU;MAAKC,IAAA,EAAM;IAAU;EACjD;AACJ;AAEA,MAAMC,YAAA;AAAA;AAAA,CAAAT,cAAA,GAAAC,CAAA,QAAe;EACjBC,MAAA,EAAQ;IAAEC,OAAA,EAAS;IAAGO,CAAA,EAAG,CAAC;EAAG;EAC7BL,OAAA,EAAS;IACLF,OAAA,EAAS;IACTO,CAAA,EAAG;IACHJ,UAAA,EAAY;MAAEC,QAAA,EAAU;IAAI;EAChC;AACJ;AAYe,SAAST,uBAAuB;EAC3Ca,gBAAgB;EAChBC,eAAe;EACfC,iBAAiB;EACjBC,YAAY;EACZC,OAAA;EAAA;EAAA,CAAAf,cAAA,GAAAgB,CAAA,UAAU,KAAK;EACfC,SAAS;EACTC;AAAQ,CACkB;EAAA;EAAAlB,cAAA,GAAAmB,CAAA;EAC1B,MAAMC,MAAA;EAAA;EAAA,CAAApB,cAAA,GAAAC,CAAA,QAAS,IAAAoB,WAAA,CAAAC,SAAS;EACxB,MAAM,CAACC,UAAA,EAAYC,aAAA,CAAc;EAAA;EAAA,CAAAxB,cAAA,GAAAC,CAAA,QAAG,IAAAwB,MAAA,CAAAC,QAAQ,EAAC;EAC7C,MAAM,CAACC,KAAA,EAAOC,QAAA,CAAS;EAAA;EAAA,CAAA5B,cAAA,GAAAC,CAAA,QAAG,IAAAwB,MAAA,CAAAC,QAAQ,EAAgB;EAElD;EACA,MAAM;IAAEG,IAAA,EAAMC,SAAA;IAAA;IAAA,CAAA9B,cAAA,GAAAgB,CAAA;IAAY;IAAA,CAAAhB,cAAA,GAAAgB,CAAA,UAAAL,gBAAA;IAAA;IAAA,CAAAX,cAAA,GAAAgB,CAAA,UAAoB,EAAE;EAAA,CAAE;EAAA;EAAA,CAAAhB,cAAA,GAAAC,CAAA,QAAG,IAAA8B,WAAA,CAAAC,qBAAqB;EAC1E,MAAM,CAACC,QAAA,EAAUC,WAAA,CAAY;EAAA;EAAA,CAAAlC,cAAA,GAAAC,CAAA,QAAG,IAAAwB,MAAA,CAAAC,QAAQ;EAAY;EAAA,CAAA1B,cAAA,GAAAgB,CAAA,UAAAJ,eAAA;EAAA;EAAA,CAAAZ,cAAA,GAAAgB,CAAA,UAAmB,EAAE;EACzE,MAAM,CAACmB,gBAAA,EAAkBC,mBAAA,CAAoB;EAAA;EAAA,CAAApC,cAAA,GAAAC,CAAA,QAAG,IAAAwB,MAAA,CAAAC,QAAQ;EAAY;EAAA,CAAA1B,cAAA,GAAAgB,CAAA,UAAAJ,eAAA;EAAA;EAAA,CAAAZ,cAAA,GAAAgB,CAAA,UAAmB,EAAE;EACzF,MAAM,CAACqB,UAAA,EAAYC,aAAA,CAAc;EAAA;EAAA,CAAAtC,cAAA,GAAAC,CAAA,QAAG,IAAAwB,MAAA,CAAAC,QAAQ;EAAa;EAAA,CAAA1B,cAAA,GAAAgB,CAAA,UAAAH,iBAAA;EAAA;EAAA,CAAAb,cAAA,GAAAgB,CAAA,UAAqB,EAAE;EAChF,MAAM,CAACuB,KAAA,EAAOC,QAAA,CAAS;EAAA;EAAA,CAAAxC,cAAA,GAAAC,CAAA,QAAG,IAAAwB,MAAA,CAAAC,QAAQ;EAAS;EAAA,CAAA1B,cAAA,GAAAgB,CAAA,UAAAF,YAAA;EAAA;EAAA,CAAAd,cAAA,GAAAgB,CAAA,UAAgB,EAAE;EAE7D,MAAM,CAACyB,mBAAA,EAAqBC,sBAAA,CAAuB;EAAA;EAAA,CAAA1C,cAAA,GAAAC,CAAA,QAAG,IAAAwB,MAAA,CAAAC,QAAQ,EAAC;EAC/D,MAAM,CAACiB,oBAAA,EAAsBC,uBAAA,CAAwB;EAAA;EAAA,CAAA5C,cAAA,GAAAC,CAAA,QAAG,IAAAwB,MAAA,CAAAC,QAAQ,EAAgB;EAChF,MAAM,CAACmB,oBAAA,EAAsBC,uBAAA,CAAwB;EAAA;EAAA,CAAA9C,cAAA,GAAAC,CAAA,QAAG,IAAAwB,MAAA,CAAAC,QAAQ,EAAC;EACjE,MAAM,CAACqB,cAAA,EAAgBC,iBAAA,CAAkB;EAAA;EAAA,CAAAhD,cAAA,GAAAC,CAAA,QAAG,IAAAwB,MAAA,CAAAC,QAAQ,EAAC;IACjDuB,IAAA,EAAM;IACNC,GAAA,EAAK;IACLC,WAAA,EAAa;IACbC,KAAA,EAAO;IACPC,mBAAA,EAAqB;IACrBC,UAAA,EAAY;EAChB;EAEA,MAAM,CAACC,gCAAA,EAAkCC,mCAAA,CAAoC;EAAA;EAAA,CAAAxD,cAAA,GAAAC,CAAA,QAAG,IAAAwB,MAAA,CAAAC,QAAQ,EAAgB;EACxG,MAAM,CAAC+B,qBAAA,EAAuBC,wBAAA,CAAyB;EAAA;EAAA,CAAA1D,cAAA,GAAAC,CAAA,QAAG,IAAAwB,MAAA,CAAAC,QAAQ,EAAC;EACnE,MAAM,CAACiC,iBAAA,EAAmBC,oBAAA,CAAqB;EAAA;EAAA,CAAA5D,cAAA,GAAAC,CAAA,QAAG,IAAAwB,MAAA,CAAAC,QAAQ,EAAgC,EAAE;EAE5F,MAAMmC,qBAAA;EAAA;EAAA,CAAA7D,cAAA,GAAAC,CAAA,QAAwB,IAAAwB,MAAA,CAAAqC,WAAW,EAAC;IAAA;IAAA9D,cAAA,GAAAmB,CAAA;IACtC,MAAM4C,GAAA;IAAA;IAAA,CAAA/D,cAAA,GAAAC,CAAA,QAAM,IAAI+D,IAAA;IAChB,MAAMC,IAAA;IAAA;IAAA,CAAAjE,cAAA,GAAAC,CAAA,QAAO8D,GAAA,CAAIG,WAAW,GAAGC,QAAQ,GAAGC,KAAK,CAAC;IAChD,MAAMC,KAAA;IAAA;IAAA,CAAArE,cAAA,GAAAC,CAAA,QAAQ,CAAC8D,GAAA,CAAIO,QAAQ,KAAK,GAAGH,QAAQ,GAAGI,QAAQ,CAAC,GAAG;IAC1D,MAAMC,GAAA;IAAA;IAAA,CAAAxE,cAAA,GAAAC,CAAA,QAAM8D,GAAA,CAAIU,OAAO,GAAGN,QAAQ,GAAGI,QAAQ,CAAC,GAAG;IACjD,MAAMG,MAAA;IAAA;IAAA,CAAA1E,cAAA,GAAAC,CAAA,QAAS0E,IAAA,CAAKC,KAAK,CAACD,IAAA,CAAKD,MAAM,KAAK,MAAMP,QAAQ,GAAGI,QAAQ,CAAC,GAAG;IAAA;IAAAvE,cAAA,GAAAC,CAAA;IACvE,OAAO,MAAMgE,IAAA,GAAOI,KAAA,GAAQG,GAAA,IAAOE,MAAA,EAAQ;EAC/C,GAAG,EAAE;EAEL,MAAM,CAACG,QAAA,EAAUC,WAAA,CAAY;EAAA;EAAA,CAAA9E,cAAA,GAAAC,CAAA,QAAG,IAAAwB,MAAA,CAAAC,QAAQ,EAA2B;IAC/DqD,aAAA,EAAelB,qBAAA;IACfmB,IAAA,EAAM,IAAIhB,IAAA,GAAOiB,WAAW,GAAGC,KAAK,CAAC,IAAI,CAAC,EAAE;IAC5CC,OAAA,EAAS;IACTC,UAAA,EAAY;IACZC,MAAA,EAAQ;IACRC,KAAA,EAAO;IACPC,KAAA,EAAO,EAAE;IACTC,WAAA,EAAa;IACbC,UAAA,EAAY;EAChB;EAEA;EACA,MAAMC,uBAAA;EAAA;EAAA,CAAA1F,cAAA,GAAAC,CAAA,QAA0B,IAAAwB,MAAA,CAAAqC,WAAW,EAAC,MAAO6B,SAAA;IAAA;IAAA3F,cAAA,GAAAmB,CAAA;IAAAnB,cAAA,GAAAC,CAAA;IAC/C,IAAI;MACA;MACA,MAAM2F,SAAA;MAAA;MAAA,CAAA5F,cAAA,GAAAC,CAAA,QAAY+D,IAAA,CAAKD,GAAG;MAC1B,MAAM8B,QAAA;MAAA;MAAA,CAAA7F,cAAA,GAAAC,CAAA,QAAW,MAAM6F,KAAA,CAAM,mBAAmBF,SAAA,EAAW,EAAE;QACzDG,KAAA,EAAO;QACPC,OAAA,EAAS;UACL,iBAAiB;UACjB,UAAU;UACV,WAAW;QACf;MACJ;MAAA;MAAAhG,cAAA,GAAAC,CAAA;MACA,IAAI4F,QAAA,CAASI,EAAE,EAAE;QAAA;QAAAjG,cAAA,GAAAgB,CAAA;QACb,MAAMa,IAAA;QAAA;QAAA,CAAA7B,cAAA,GAAAC,CAAA,QAAO,MAAM4F,QAAA,CAASK,IAAI;QAAA;QAAAlG,cAAA,GAAAC,CAAA;QAChC;QAAI;QAAA,CAAAD,cAAA,GAAAgB,CAAA,UAAAa,IAAA,CAAKsE,OAAO;QAAA;QAAA,CAAAnG,cAAA,GAAAgB,CAAA,UAAIa,IAAA,CAAKA,IAAI,GAAE;UAAA;UAAA7B,cAAA,GAAAgB,CAAA;UAAAhB,cAAA,GAAAC,CAAA;UAC3BiC,WAAA,CAAYL,IAAA,CAAKA,IAAI;UAAA;UAAA7B,cAAA,GAAAC,CAAA;UACrBmC,mBAAA,CAAoBP,IAAA,CAAKA,IAAI;QACjC;QAAA;QAAA;UAAA7B,cAAA,GAAAgB,CAAA;QAAA;MACJ;MAAA;MAAA;QAAAhB,cAAA,GAAAgB,CAAA;MAAA;IACJ,EAAE,OAAOW,KAAA,EAAO;MAAA;MAAA3B,cAAA,GAAAC,CAAA;MACZmG,OAAA,CAAQzE,KAAK,CAAC,wCAAwCA,KAAA;IAC1D;EACJ,GAAG,EAAE;EAAA;EAAA3B,cAAA,GAAAC,CAAA;EAEL,IAAAwB,MAAA,CAAA4E,SAAS,EAAC;IAAA;IAAArG,cAAA,GAAAmB,CAAA;IACN,MAAMmF,KAAA;IAAA;IAAA,CAAAtG,cAAA,GAAAC,CAAA,QAAQ;IAAC;IAAA,CAAAD,cAAA,GAAAgB,CAAA,WAAA6D,QAAA,CAASU,KAAK;IAAA;IAAA,CAAAvF,cAAA,GAAAgB,CAAA,WAAI,EAAE,GAAEuF,MAAM,CAAC,CAACC,GAAA,EAAKC,IAAA;MAAA;MAAAzG,cAAA,GAAAmB,CAAA;MAAAnB,cAAA,GAAAC,CAAA;MAC9C,OAAOuG,GAAA,GAAOE,MAAA,CAAOD,IAAA,CAAKE,QAAQ,IAAID,MAAA,CAAOD,IAAA,CAAKrD,KAAK;IAC3D,GAAG;IAAA;IAAApD,cAAA,GAAAC,CAAA;IACH6E,WAAA,CAAY8B,IAAA,IAAS;MAAA;MAAA5G,cAAA,GAAAmB,CAAA;MAAAnB,cAAA,GAAAC,CAAA;MAAA;QAAE,GAAG2G,IAAI;QAAEpB,WAAA,EAAac;MAAM;IAAA;EACvD,GAAG,CAACzB,QAAA,CAASU,KAAK,CAAC;EAEnB;EAAA;EAAAvF,cAAA,GAAAC,CAAA;EACA,IAAAwB,MAAA,CAAA4E,SAAS,EAAC;IAAA;IAAArG,cAAA,GAAAmB,CAAA;IAAAnB,cAAA,GAAAC,CAAA;IACNyF,uBAAA;EACJ,GAAG,CAACA,uBAAA,CAAwB;EAE5B,MAAMmB,qBAAA;EAAA;EAAA,CAAA7G,cAAA,GAAAC,CAAA,QAAwB,IAAA8B,WAAA,CAAA+E,wBAAwB;EACtD,MAAM;IAAEjF,IAAA,EAAMkF,YAAY;IAAEC,OAAA,EAASC;EAAe,CAAE;EAAA;EAAA,CAAAjH,cAAA,GAAAC,CAAA,QAAG,IAAA8B,WAAA,CAAAmF,WAAW;EAAA;EAAAlH,cAAA,GAAAC,CAAA;EAEpE,MAAMkH,YAAA,GAAgBC,CAAA;IAAA;IAAApH,cAAA,GAAAmB,CAAA;IAClB,MAAM;MAAE8B,IAAI;MAAEoE;IAAK,CAAE;IAAA;IAAA,CAAArH,cAAA,GAAAC,CAAA,QAAGmH,CAAA,CAAEE,MAAM;IAAA;IAAAtH,cAAA,GAAAC,CAAA;IAChC6E,WAAA,CAAY8B,IAAA,IAAS;MAAA;MAAA5G,cAAA,GAAAmB,CAAA;MAAAnB,cAAA,GAAAC,CAAA;MAAA;QACjB,GAAG2G,IAAI;QACP,CAAC3D,IAAA;QAAO;QAAA,CAAAjD,cAAA,GAAAgB,CAAA,WAAAiC,IAAA,KAAS;QAAA;QAAA,CAAAjD,cAAA,GAAAgB,CAAA,WAAgBiC,IAAA,KAAS;QAAA;QAAA,CAAAjD,cAAA,GAAAgB,CAAA;QAAgB;QAAA,CAAAhB,cAAA,GAAAgB,CAAA,WAAAuG,UAAA,CAAWF,KAAA;QAAA;QAAA,CAAArH,cAAA,GAAAgB,CAAA,WAAU;QAAA;QAAA,CAAAhB,cAAA,GAAAgB,CAAA,WAAIqG,KAAA;MACvF;IAAA;EACJ;EAAA;EAAArH,cAAA,GAAAC,CAAA;EAEA,MAAMuH,aAAA,GAAgBA,CAAA;IAAA;IAAAxH,cAAA,GAAAmB,CAAA;IAAAnB,cAAA,GAAAC,CAAA;IAClB6E,WAAA,CAAY8B,IAAA;MAAA;MAAA5G,cAAA,GAAAmB,CAAA;MACR,MAAMsG,QAAA;MAAA;MAAA,CAAAzH,cAAA,GAAAC,CAAA,QAAW,C;MACT;MAAA,CAAAD,cAAA,GAAAgB,CAAA,WAAA4F,IAAA,CAAKrB,KAAK;MAAA;MAAA,CAAAvF,cAAA,GAAAgB,CAAA,WAAI,EAAE,IACpB;QACI2E,SAAA,EAAW;QACX+B,WAAA,EAAa;QACbf,QAAA,EAAU;QACVvD,KAAA,EAAO;MACX,EACH;MAAA;MAAApD,cAAA,GAAAC,CAAA;MACD2D,oBAAA,CAAqB+D,QAAA,IAAY;QAAA;QAAA3H,cAAA,GAAAmB,CAAA;QAAAnB,cAAA,GAAAC,CAAA;QAAA,Q,GAAI0H,QAAA,EAAU,CAAC,EAAE;OAAA;MAAA;MAAA3H,cAAA,GAAAC,CAAA;MAClD,OAAO;QAAE,GAAG2G,IAAI;QAAErB,KAAA,EAAOkC;MAAS;IACtC;EACJ;EAAA;EAAAzH,cAAA,GAAAC,CAAA;EAEA,MAAM2H,gBAAA,GAAmBA,CAACR,CAAA,EAA4DS,KAAA;IAAA;IAAA7H,cAAA,GAAAmB,CAAA;IAClF,MAAM;MAAE8B,IAAI;MAAEoE;IAAK,CAAE;IAAA;IAAA,CAAArH,cAAA,GAAAC,CAAA,QAAGmH,CAAA,CAAEE,MAAM;IAChC,MAAMG,QAAA;IAAA;IAAA,CAAAzH,cAAA,GAAAC,CAAA,QAAW,C;IAAK;IAAA,CAAAD,cAAA,GAAAgB,CAAA,WAAA6D,QAAA,CAASU,KAAK;IAAA;IAAA,CAAAvF,cAAA,GAAAgB,CAAA,WAAI,EAAE,GAAE;IAC5C,MAAM8G,WAAA;IAAA;IAAA,CAAA9H,cAAA,GAAAC,CAAA,QAAc;MAAE,GAAGwH,QAAQ,CAACI,KAAA;IAAO;IAAA;IAAA7H,cAAA,GAAAC,CAAA;IAEzC,IAAIgD,IAAA,KAAS,aAAa;MAAA;MAAAjD,cAAA,GAAAgB,CAAA;MACtB,MAAM+G,eAAA;MAAA;MAAA,CAAA/H,cAAA,GAAAC,CAAA,QAAkBgC,QAAA,CAAS+F,IAAI,CAACC,CAAA,IAAK;QAAA;QAAAjI,cAAA,GAAAmB,CAAA;QAAAnB,cAAA,GAAAC,CAAA;QAAA,OAAAgI,CAAA,CAAEC,EAAE,CAAC/D,QAAQ,OAAOkD,KAAA;MAAA;MAAA;MAAArH,cAAA,GAAAC,CAAA;MAC/D,IAAI8H,eAAA,EAAiB;QAAA;QAAA/H,cAAA,GAAAgB,CAAA;QAAAhB,cAAA,GAAAC,CAAA;QACjB6H,WAAA,CAAYnC,SAAS,GAAGoC,eAAA,CAAgBG,EAAE,CAAC/D,QAAQ;QAAA;QAAAnE,cAAA,GAAAC,CAAA;QACnD6H,WAAA,CAAYJ,WAAW,GAAGK,eAAA,CAAgB9E,IAAI;QAAA;QAAAjD,cAAA,GAAAC,CAAA;QAC9C6H,WAAA,CAAY1E,KAAK;QAAG;QAAA,CAAApD,cAAA,GAAAgB,CAAA,WAAA+G,eAAA,CAAgB1E,mBAAmB;QAAA;QAAA,CAAArD,cAAA,GAAAgB,CAAA,WAAI;MAC/D,OAAO;QAAA;QAAAhB,cAAA,GAAAgB,CAAA;QAAAhB,cAAA,GAAAC,CAAA;QACH6H,WAAA,CAAYnC,SAAS,GAAG;QAAA;QAAA3F,cAAA,GAAAC,CAAA;QACxB6H,WAAA,CAAYJ,WAAW,GAAG;QAAA;QAAA1H,cAAA,GAAAC,CAAA;QAC1B6H,WAAA,CAAY1E,KAAK,GAAG;MACxB;IACJ,OAAO;MAAA;MAAApD,cAAA,GAAAgB,CAAA;MAAAhB,cAAA,GAAAC,CAAA;MAAA;MAAI;MAAA,CAAAD,cAAA,GAAAgB,CAAA,WAAAiC,IAAA,KAAS;MAAA;MAAA,CAAAjD,cAAA,GAAAgB,CAAA,WAAciC,IAAA,KAAS,UAAS;QAAA;QAAAjD,cAAA,GAAAgB,CAAA;QAAAhB,cAAA,GAAAC,CAAA;QAC/C6H,WAAmB,CAAC7E,IAAA,CAAK,GAAGoE,KAAA,KAAU;QAAA;QAAA,CAAArH,cAAA,GAAAgB,CAAA,WAAK;QAAA;QAAA,CAAAhB,cAAA,GAAAgB,CAAA;QAAK;QAAA,CAAAhB,cAAA,GAAAgB,CAAA,WAAAuG,UAAA,CAAWF,KAAA;QAAA;QAAA,CAAArH,cAAA,GAAAgB,CAAA,WAAU;MAC1E,OAAO;QAAA;QAAAhB,cAAA,GAAAgB,CAAA;QAAAhB,cAAA,GAAAC,CAAA;QACF6H,WAAmB,CAAC7E,IAAA,CAAK,GAAGoE,KAAA;MACjC;IAAA;IAAA;IAAArH,cAAA,GAAAC,CAAA;IACAwH,QAAQ,CAACI,KAAA,CAAM,GAAGC,WAAA;IAAA;IAAA9H,cAAA,GAAAC,CAAA;IAClB6E,WAAA,CAAY8B,IAAA,IAAS;MAAA;MAAA5G,cAAA,GAAAmB,CAAA;MAAAnB,cAAA,GAAAC,CAAA;MAAA;QAAE,GAAG2G,IAAI;QAAErB,KAAA,EAAOkC;MAAS;IAAA;EACpD;EAAA;EAAAzH,cAAA,GAAAC,CAAA;EAEA,MAAMkI,gBAAA,GAAoBN,KAAA;IAAA;IAAA7H,cAAA,GAAAmB,CAAA;IAAAnB,cAAA,GAAAC,CAAA;IACtB6E,WAAA,CAAY8B,IAAA,IAAS;MAAA;MAAA5G,cAAA,GAAAmB,CAAA;MAAAnB,cAAA,GAAAC,CAAA;MAAA;QACjB,GAAG2G,IAAI;QACPrB,KAAA,EAAO;QAAC;QAAA,CAAAvF,cAAA,GAAAgB,CAAA,WAAA4F,IAAA,CAAKrB,KAAK;QAAA;QAAA,CAAAvF,cAAA,GAAAgB,CAAA,WAAI,EAAE,GAAEoH,MAAM,CAAC,CAACC,CAAA,EAAGC,CAAA,KAAM;UAAA;UAAAtI,cAAA,GAAAmB,CAAA;UAAAnB,cAAA,GAAAC,CAAA;UAAA,OAAAqI,CAAA,KAAMT,KAAA;QAAA;MACrD;IAAA;IAAA;IAAA7H,cAAA,GAAAC,CAAA;IACA2D,oBAAA,CAAqB+D,QAAA,IAAY;MAAA;MAAA3H,cAAA,GAAAmB,CAAA;MAAAnB,cAAA,GAAAC,CAAA;MAAA,OAAA0H,QAAA,CAASS,MAAM,CAAC,CAACC,CAAA,EAAGC,CAAA,KAAM;QAAA;QAAAtI,cAAA,GAAAmB,CAAA;QAAAnB,cAAA,GAAAC,CAAA;QAAA,OAAAqI,CAAA,KAAMT,KAAA;MAAA;IAAA;EACrE;EAAA;EAAA7H,cAAA,GAAAC,CAAA;EAEA,MAAMsI,2BAAA,GAA+BC,SAAA;IAAA;IAAAxI,cAAA,GAAAmB,CAAA;IAAAnB,cAAA,GAAAC,CAAA;IACjCuD,mCAAA,CAAoCgF,SAAA;IAAA;IAAAxI,cAAA,GAAAC,CAAA;IACpCyD,wBAAA,CAAyB;EAC7B;EAAA;EAAA1D,cAAA,GAAAC,CAAA;EAEA,MAAMwI,wBAAA,GAA2BA,CAACC,MAAA,EAAgBC,WAAA;IAAA;IAAA3I,cAAA,GAAAmB,CAAA;IAAAnB,cAAA,GAAAC,CAAA;IAC9C,IAAIsD,gCAAA,KAAqC,MAAM;MAAA;MAAAvD,cAAA,GAAAgB,CAAA;MAAAhB,cAAA,GAAAC,CAAA;MAAA;IAAA;IAAA;IAAA;MAAAD,cAAA,GAAAgB,CAAA;IAAA;IAC/C,MAAM2F,QAAA;IAAA;IAAA,CAAA3G,cAAA,GAAAC,CAAA,QAAW0I,WAAA,KAAgB;IAAA;IAAA,CAAA3I,cAAA,GAAAgB,CAAA,WAAK;IAAA;IAAA,CAAAhB,cAAA,GAAAgB,CAAA;IAAI;IAAA,CAAAhB,cAAA,GAAAgB,CAAA,WAAA4H,QAAA,CAASD,WAAA;IAAA;IAAA,CAAA3I,cAAA,GAAAgB,CAAA,WAAgB;IAAA;IAAAhB,cAAA,GAAAC,CAAA;IACnE2D,oBAAA,CAAqBiF,SAAA;MAAA;MAAA7I,cAAA,GAAAmB,CAAA;MACjB,MAAM2H,QAAA;MAAA;MAAA,CAAA9I,cAAA,GAAAC,CAAA,SAAW,C,GAAI4I,SAAA,CAAU;MAC/B,MAAME,eAAA;MAAA;MAAA,CAAA/I,cAAA,GAAAC,CAAA,SAAkB;QAAE;QAAI;QAAA,CAAAD,cAAA,GAAAgB,CAAA,WAAA8H,QAAQ,CAACvF,gCAAA,CAAiC;QAAA;QAAA,CAAAvD,cAAA,GAAAgB,CAAA,WAAI,CAAC,CAAC;MAAE;MAAA;MAAAhB,cAAA,GAAAC,CAAA;MAChF,IAAI0G,QAAA,GAAW,GAAG;QAAA;QAAA3G,cAAA,GAAAgB,CAAA;QAAAhB,cAAA,GAAAC,CAAA;QACd8I,eAAe,CAACL,MAAA,CAAO,GAAG/B,QAAA;MAC9B,OAAO;QAAA;QAAA3G,cAAA,GAAAgB,CAAA;QAAAhB,cAAA,GAAAC,CAAA;QACH,OAAO8I,eAAe,CAACL,MAAA,CAAO;MAClC;MAAA;MAAA1I,cAAA,GAAAC,CAAA;MACA6I,QAAQ,CAACvF,gCAAA,CAAiC,GAAGwF,eAAA;MAAA;MAAA/I,cAAA,GAAAC,CAAA;MAC7C,OAAO6I,QAAA;IACX;EACJ;EAAA;EAAA9I,cAAA,GAAAC,CAAA;EAEA,MAAM+I,0BAAA,GAA8BR,SAAA;IAAA;IAAAxI,cAAA,GAAAmB,CAAA;IAAAnB,cAAA,GAAAC,CAAA;IAChC;IAAI;IAAA,CAAAD,cAAA,GAAAgB,CAAA,WAAAwH,SAAA,KAAc;IAAA;IAAA,CAAAxI,cAAA,GAAAgB,CAAA,WAAQ,CAAC2C,iBAAiB,CAAC6E,SAAA,CAAU,GAAE;MAAA;MAAAxI,cAAA,GAAAgB,CAAA;MAAAhB,cAAA,GAAAC,CAAA;MAAA,OAAO;IAAA;IAAA;IAAA;MAAAD,cAAA,GAAAgB,CAAA;IAAA;IAAAhB,cAAA,GAAAC,CAAA;IAChE,OAAOgJ,MAAA,CAAOC,MAAM,CAACvF,iBAAiB,CAAC6E,SAAA,CAAU,EAAEjC,MAAM,CAAC,CAACC,GAAA,EAAK2C,GAAA,KAAQ;MAAA;MAAAnJ,cAAA,GAAAmB,CAAA;MAAAnB,cAAA,GAAAC,CAAA;MAAA,OAAAuG,GAAA,GAAME,MAAA,CAAOyC,GAAA;IAAA,GAAM;EAC/F;EAAA;EAAAnJ,cAAA,GAAAC,CAAA;EAEA,MAAMmJ,sBAAA,GAAyB,MAAAA,CAAA;IAAA;IAAApJ,cAAA,GAAAmB,CAAA;IAAAnB,cAAA,GAAAC,CAAA;IAC3B;IAAI;IAAA,CAAAD,cAAA,GAAAgB,CAAA,YAAC+B,cAAA,CAAeE,IAAI;IAAA;IAAA,CAAAjD,cAAA,GAAAgB,CAAA,WAAI,CAAC+B,cAAA,CAAeO,UAAU;IAAA;IAAA,CAAAtD,cAAA,GAAAgB,CAAA,WAAI+B,cAAA,CAAeK,KAAK,IAAI;IAAA;IAAA,CAAApD,cAAA,GAAAgB,CAAA,WAAK+B,cAAA,CAAeM,mBAAmB,IAAI,IAAG;MAAA;MAAArD,cAAA,GAAAgB,CAAA;MAAAhB,cAAA,GAAAC,CAAA;MAC5H2C,uBAAA,CAAwB;MAAA;MAAA5C,cAAA,GAAAC,CAAA;MACxB;IACJ;IAAA;IAAA;MAAAD,cAAA,GAAAgB,CAAA;IAAA;IAAAhB,cAAA,GAAAC,CAAA;IACA6C,uBAAA,CAAwB;IAAA;IAAA9C,cAAA,GAAAC,CAAA;IACxB2C,uBAAA,CAAwB;IAAA;IAAA5C,cAAA,GAAAC,CAAA;IACxB,IAAI;MACA,MAAM4F,QAAA;MAAA;MAAA,CAAA7F,cAAA,GAAAC,CAAA,SAAW,MAAM6F,KAAA,CAAM,iBAAiB;QAC1CuD,MAAA,EAAQ;QACRrD,OAAA,EAAS;UAAE,gBAAgB;QAAmB;QAC9CsD,IAAA,EAAMC,IAAA,CAAKC,SAAS,CAACzG,cAAA;MACzB;MAAA;MAAA/C,cAAA,GAAAC,CAAA;MACA,IAAI,CAAC4F,QAAA,CAASI,EAAE,EAAE;QAAA;QAAAjG,cAAA,GAAAgB,CAAA;QACd,MAAMyI,OAAA;QAAA;QAAA,CAAAzJ,cAAA,GAAAC,CAAA,SAAU,MAAM4F,QAAA,CAASK,IAAI;QAAA;QAAAlG,cAAA,GAAAC,CAAA;QACnC,MAAM,IAAIyJ,KAAA;QAAM;QAAA,CAAA1J,cAAA,GAAAgB,CAAA,WAAAyI,OAAA,CAAQE,OAAO;QAAA;QAAA,CAAA3J,cAAA,GAAAgB,CAAA,WAAI;MACvC;MAAA;MAAA;QAAAhB,cAAA,GAAAgB,CAAA;MAAA;MACA,MAAM4I,cAAA;MAAA;MAAA,CAAA5J,cAAA,GAAAC,CAAA,SAAiB,MAAM4F,QAAA,CAASK,IAAI;MAE1C;MAAA;MAAAlG,cAAA,GAAAC,CAAA;MACA,MAAMgH,eAAA;MAAA;MAAAjH,cAAA,GAAAC,CAAA;MAENiC,WAAA,CAAY0E,IAAA,IAAQ;QAAA;QAAA5G,cAAA,GAAAmB,CAAA;QAAAnB,cAAA,GAAAC,CAAA;QAAA,Q,GAAI2G,IAAA,EAAMgD,cAAA,CAAe/H,IAAI,CAAC;OAAA;MAAA;MAAA7B,cAAA,GAAAC,CAAA;MAClDmC,mBAAA,CAAoBwE,IAAA,IAAQ;QAAA;QAAA5G,cAAA,GAAAmB,CAAA;QAAAnB,cAAA,GAAAC,CAAA;QAAA,Q,GAAI2G,IAAA,EAAMgD,cAAA,CAAe/H,IAAI,CAAC;OAAA;MAAA;MAAA7B,cAAA,GAAAC,CAAA;MAC1DyC,sBAAA,CAAuB;MAAA;MAAA1C,cAAA,GAAAC,CAAA;MACvB+C,iBAAA,CAAkB;QAAEC,IAAA,EAAM;QAAIC,GAAA,EAAK;QAAIC,WAAA,EAAa;QAAIC,KAAA,EAAO;QAAGC,mBAAA,EAAqB;QAAGC,UAAA,EAAY;MAAG;MACzG;IACJ,EAAE,OAAOuG,GAAA,EAAU;MAAA;MAAA7J,cAAA,GAAAC,CAAA;MACf2C,uBAAA,CAAwBiH,GAAA,CAAIF,OAAO;IACvC,UAAU;MAAA;MAAA3J,cAAA,GAAAC,CAAA;MACN6C,uBAAA,CAAwB;IAC5B;EACJ;EAAA;EAAA9C,cAAA,GAAAC,CAAA;EAEA,MAAM6J,YAAA,GAAe,MAAO1C,CAAA;IAAA;IAAApH,cAAA,GAAAmB,CAAA;IAAAnB,cAAA,GAAAC,CAAA;IACxBmH,CAAA,CAAE2C,cAAc;IAAA;IAAA/J,cAAA,GAAAC,CAAA;IAEhB,IAAI,CAAC4E,QAAA,CAASO,UAAU,EAAE;MAAA;MAAApF,cAAA,GAAAgB,CAAA;MAAAhB,cAAA,GAAAC,CAAA;MACtB2B,QAAA,CAAS;MAAA;MAAA5B,cAAA,GAAAC,CAAA;MACT;IACJ;IAAA;IAAA;MAAAD,cAAA,GAAAgB,CAAA;IAAA;IAAAhB,cAAA,GAAAC,CAAA;IAEA;IAAI;IAAA,CAAAD,cAAA,GAAAgB,CAAA,YAAC6D,QAAA,CAASU,KAAK;IAAA;IAAA,CAAAvF,cAAA,GAAAgB,CAAA,WAAI6D,QAAA,CAASU,KAAK,CAACyE,MAAM,KAAK,IAAG;MAAA;MAAAhK,cAAA,GAAAgB,CAAA;MAAAhB,cAAA,GAAAC,CAAA;MAChD2B,QAAA,CAAS;MAAA;MAAA5B,cAAA,GAAAC,CAAA;MACT;IACJ;IAAA;IAAA;MAAAD,cAAA,GAAAgB,CAAA;IAAA;IAEA;IACA,MAAMiJ,YAAA;IAAA;IAAA,CAAAjK,cAAA,GAAAC,CAAA,SAAe;IAAC;IAAA,CAAAD,cAAA,GAAAgB,CAAA,WAAA6D,QAAA,CAASU,KAAK;IAAA;IAAA,CAAAvF,cAAA,GAAAgB,CAAA,WAAI,EAAE,GAAEoH,MAAM,CAAC3B,IAAA,IAC/C;MAAA;MAAAzG,cAAA,GAAAmB,CAAA;MAAAnB,cAAA,GAAAC,CAAA;MAAA,kCAAAD,cAAA,GAAAgB,CAAA,YAACyF,IAAA,CAAKd,SAAS;MAAA;MAAA,CAAA3F,cAAA,GAAAgB,CAAA,WAAI,CAACyF,IAAA,CAAKE,QAAQ;MAAA;MAAA,CAAA3G,cAAA,GAAAgB,CAAA,WAAIyF,IAAA,CAAKE,QAAQ,IAAI;MAAA;MAAA,CAAA3G,cAAA,GAAAgB,CAAA,WAAK,CAACyF,IAAA,CAAKrD,KAAK;MAAA;MAAA,CAAApD,cAAA,GAAAgB,CAAA,WAAIyF,IAAA,CAAKrD,KAAK,IAAI;IAAA;IAAA;IAAApD,cAAA,GAAAC,CAAA;IAG5F,IAAIgK,YAAA,CAAaD,MAAM,GAAG,GAAG;MAAA;MAAAhK,cAAA,GAAAgB,CAAA;MAAAhB,cAAA,GAAAC,CAAA;MACzB2B,QAAA,CAAS;MAAA;MAAA5B,cAAA,GAAAC,CAAA;MACT;IACJ;IAAA;IAAA;MAAAD,cAAA,GAAAgB,CAAA;IAAA;IAAAhB,cAAA,GAAAC,CAAA;IAEAuB,aAAA,CAAc;IAAA;IAAAxB,cAAA,GAAAC,CAAA;IACd2B,QAAA,CAAS;IAAA;IAAA5B,cAAA,GAAAC,CAAA;IAET,IAAI;MACA;MACA,MAAMiK,YAAA;MAAA;MAAA,CAAAlK,cAAA,GAAAC,CAAA,SAAoB;QACtB,GAAG4E,QAAQ;QACXU,KAAA,EAAOV,QAAA,CAASU,KAAK,EAAE4E,GAAA,CAAI1D,IAAA,IAAS;UAAA;UAAAzG,cAAA,GAAAmB,CAAA;UAAAnB,cAAA,GAAAC,CAAA;UAAA;YAChC,GAAGwG,IAAI;YACPd,SAAA,EAAWiD,QAAA,CAASnC,IAAA,CAAKd,SAAS;YAClCgB,QAAA,EAAUD,MAAA,CAAOD,IAAA,CAAKE,QAAQ;YAC9BvD,KAAA,EAAOsD,MAAA,CAAOD,IAAA,CAAKrD,KAAK;UAC5B;QAAA;QACAoC,WAAA,EAAakB,MAAA,CAAO7B,QAAA,CAASW,WAAW;QACxCC,UAAA,EAAYiB,MAAA;QAAO;QAAA,CAAA1G,cAAA,GAAAgB,CAAA,WAAA6D,QAAA,CAASY,UAAU;QAAA;QAAA,CAAAzF,cAAA,GAAAgB,CAAA,WAAI;MAC9C;MAEA;MACA,MAAMoJ,sBAAA;MAAA;MAAA,CAAApK,cAAA,GAAAC,CAAA,SAAyB0D,iBAAA,CAAkB0G,IAAI,CAACC,IAAA,IAAQ;QAAA;QAAAtK,cAAA,GAAAmB,CAAA;QAAAnB,cAAA,GAAAC,CAAA;QAAA,OAAAgJ,MAAA,CAAOsB,IAAI,CAACD,IAAA,EAAMN,MAAM,GAAG;MAAA;MAAA;MAAAhK,cAAA,GAAAC,CAAA;MAEzF,IAAImK,sBAAA,EAAwB;QAAA;QAAApK,cAAA,GAAAgB,CAAA;QAAAhB,cAAA,GAAAC,CAAA;QACxBiK,YAAA,CAAaM,aAAa,GAAG7G,iBAAA,CAAkBwG,GAAG,CAAC,CAACG,IAAA,EAAMzC,KAAA;UAAA;UAAA7H,cAAA,GAAAmB,CAAA;UACtD,MAAMsF,IAAA;UAAA;UAAA,CAAAzG,cAAA,GAAAC,CAAA,SAAO4E,QAAA,CAASU,KAAK,GAAGsC,KAAA,CAAM;UACpC;UAAA;UAAA7H,cAAA,GAAAC,CAAA;UACA;UAAI;UAAA,CAAAD,cAAA,GAAAgB,CAAA,WAAAyF,IAAA;UAAA;UAAA,CAAAzG,cAAA,GAAAgB,CAAA,WAAQiI,MAAA,CAAOsB,IAAI,CAACD,IAAA,EAAMN,MAAM,GAAG,IAAG;YAAA;YAAAhK,cAAA,GAAAgB,CAAA;YAAAhB,cAAA,GAAAC,CAAA;YACtC,OAAOqK,IAAA;UACX;UAAA;UAAA;YAAAtK,cAAA,GAAAgB,CAAA;UAAA;UAAAhB,cAAA,GAAAC,CAAA;UACA,OAAO,CAAC,GAAG;QACf;MACJ,OAAO;QAAA;QAAAD,cAAA,GAAAgB,CAAA;QAAAhB,cAAA,GAAAC,CAAA;QAAA,IAAIsC,KAAA,CAAMyH,MAAM,GAAG,GAAG;UAAA;UAAAhK,cAAA,GAAAgB,CAAA;UACzB;UACA;UACA,MAAMyJ,WAAA;UAAA;UAAA,CAAAzK,cAAA,GAAAC,CAAA;UAAc;UAAA,CAAAD,cAAA,GAAAgB,CAAA,WAAAuB,KAAA,CAAMyF,IAAI,CAAC/H,CAAA,IAAK;YAAA;YAAAD,cAAA,GAAAmB,CAAA;YAAAnB,cAAA,GAAAC,CAAA;YAAA,OAAAA,CAAA,CAAEyK,SAAS;UAAT,CAAS;UAAA;UAAA,CAAA1K,cAAA,GAAAgB,CAAA,WAAKuB,KAAK,CAAC,EAAE;UAAA;UAAAvC,cAAA,GAAAC,CAAA;UAC5D,IAAIwK,WAAA,EAAa;YAAA;YAAAzK,cAAA,GAAAgB,CAAA;YAAAhB,cAAA,GAAAC,CAAA;YACbiK,YAAA,CAAaS,aAAa,GAAGF,WAAA,CAAYvC,EAAE;UAC/C;UAAA;UAAA;YAAAlI,cAAA,GAAAgB,CAAA;UAAA;QACJ;QAAA;QAAA;UAAAhB,cAAA,GAAAgB,CAAA;QAAA;MAAA;MAEA;MAAA;MAAAhB,cAAA,GAAAC,CAAA;MACA,IAAIiK,YAAA,CAAavG,iBAAiB,EAAE;QAAA;QAAA3D,cAAA,GAAAgB,CAAA;QAAAhB,cAAA,GAAAC,CAAA;QAChC,OAAOiK,YAAA,CAAavG,iBAAiB;MACzC;MAAA;MAAA;QAAA3D,cAAA,GAAAgB,CAAA;MAAA;MAAAhB,cAAA,GAAAC,CAAA;MAEAmG,OAAA,CAAQwE,GAAG,CAAC,gCAAgCV,YAAA;MAE5C,MAAMW,cAAA;MAAA;MAAA,CAAA7K,cAAA,GAAAC,CAAA,SAAiB,MAAM4G,qBAAA,CAAsBiE,WAAW,CAACZ,YAAA;MAAA;MAAAlK,cAAA,GAAAC,CAAA;MAC/DmG,OAAA,CAAQwE,GAAG,CAAC,6BAA6BC,cAAA;MAEzC;MAAA;MAAA7K,cAAA,GAAAC,CAAA;MACA;MAAI;MAAA,CAAAD,cAAA,GAAAgB,CAAA,WAAAD,OAAA;MAAA;MAAA,CAAAf,cAAA,GAAAgB,CAAA,WAAWC,SAAA,GAAW;QAAA;QAAAjB,cAAA,GAAAgB,CAAA;QAAAhB,cAAA,GAAAC,CAAA;QACtBgB,SAAA;MACJ,OAAO;QAAA;QAAAjB,cAAA,GAAAgB,CAAA;QAAAhB,cAAA,GAAAC,CAAA;QACH;QACAmB,MAAA,CAAO2J,IAAI,CAAC,+CAA+CF,cAAA,CAAe3C,EAAE;MAChF;IAEJ,EAAE,OAAO2B,GAAA,EAAK;MAAA;MAAA7J,cAAA,GAAAC,CAAA;MACVmG,OAAA,CAAQzE,KAAK,CAAC,oCAAoCkI,GAAA;MAAA;MAAA7J,cAAA,GAAAC,CAAA;MAClD2B,QAAA,CAASiI,GAAA,YAAeH,KAAA;MAAA;MAAA,CAAA1J,cAAA,GAAAgB,CAAA,WAAQ6I,GAAA,CAAIF,OAAO;MAAA;MAAA,CAAA3J,cAAA,GAAAgB,CAAA,WAAG;IAClD,UAAU;MAAA;MAAAhB,cAAA,GAAAC,CAAA;MACNuB,aAAA,CAAc;IAClB;EACJ;EAAA;EAAAxB,cAAA,GAAAC,CAAA;EAEA,MAAM+K,mBAAA,GAAuBC,KAAA;IAAA;IAAAjL,cAAA,GAAAmB,CAAA;IAAAnB,cAAA,GAAAC,CAAA;IACzB,IAAI,CAACgL,KAAA,EAAO;MAAA;MAAAjL,cAAA,GAAAgB,CAAA;MAAAhB,cAAA,GAAAC,CAAA;MACRmC,mBAAA,CAAoBH,QAAA;MAAA;MAAAjC,cAAA,GAAAC,CAAA;MACpB;IACJ;IAAA;IAAA;MAAAD,cAAA,GAAAgB,CAAA;IAAA;IAAAhB,cAAA,GAAAC,CAAA;IACAmC,mBAAA,CACIH,QAAA,CAASmG,MAAM,CACV8C,OAAA,IACG;MAAA;MAAAlL,cAAA,GAAAmB,CAAA;MAAAnB,cAAA,GAAAC,CAAA;MAAA,kCAAAD,cAAA,GAAAgB,CAAA,WAAAkK,OAAA,CAAQjI,IAAI,CAACkI,WAAW,GAAGC,QAAQ,CAACH,KAAA,CAAME,WAAW;MACpD;MAAA,CAAAnL,cAAA,GAAAgB,CAAA,WAAAkK,OAAA,CAAQhI,GAAG;MAAA;MAAA,CAAAlD,cAAA,GAAAgB,CAAA,WAAIkK,OAAA,CAAQhI,GAAG,CAACiI,WAAW,GAAGC,QAAQ,CAACH,KAAA,CAAME,WAAW;IAAA;EAGpF;EAAA;EAAAnL,cAAA,GAAAC,CAAA;EAEA,oBACI,IAAAoL,WAAA,CAAAC,IAAA,EAAC;IAAKC,QAAA,EAAUzB,YAAA;IAAc0B,SAAA,EAAU;;IACnC;IAAA,CAAAxL,cAAA,GAAAgB,CAAA,WAAAW,KAAA;IAAA;IAAA,CAAA3B,cAAA,GAAAgB,CAAA,wBACG,IAAAqK,WAAA,CAAAC,IAAA,EAACG,aAAA,CAAAC,MAAM,CAACC,GAAG;MAACC,OAAA,EAAS;QAAEzL,OAAA,EAAS;QAAGC,CAAA,EAAG,CAAC;MAAG;MAAGyL,OAAA,EAAS;QAAE1L,OAAA,EAAS;QAAGC,CAAA,EAAG;MAAE;MAAGoL,SAAA,EAAU;8BAClF,IAAAH,WAAA,CAAAS,GAAA,EAACC,YAAA,CAAAC,IAAI;QAACC,IAAA,EAAM;UAAM,KAAEtK,KAAA;sBAG5B,IAAA0J,WAAA,CAAAC,IAAA,EAACG,aAAA,CAAAC,MAAM,CAACC,GAAG;MAACO,QAAA,EAAUnM,YAAA;MAAcyL,SAAA,EAAU;8BAC1C,IAAAH,WAAA,CAAAS,GAAA,EAAC;QAAGN,SAAA,EAAU;kBAAyD;uBACvE,IAAAH,WAAA,CAAAC,IAAA,EAAC;QAAIE,SAAA,EAAU;gCACX,IAAAH,WAAA,CAAAC,IAAA,EAAC;kCACG,IAAAD,WAAA,CAAAS,GAAA,EAAC;YAAMK,OAAA,EAAQ;YAAgBX,SAAA,EAAU;sBAA+C;2BACxF,IAAAH,WAAA,CAAAS,GAAA,EAAC;YAAMM,IAAA,EAAK;YAAOnJ,IAAA,EAAK;YAAgBiF,EAAA,EAAG;YAAgBb,KAAA;YAAO;YAAA,CAAArH,cAAA,GAAAgB,CAAA,WAAA6D,QAAA,CAASE,aAAa;YAAA;YAAA,CAAA/E,cAAA,GAAAgB,CAAA,WAAI;YAAIqL,QAAQ;YAACb,SAAA,EAAU;;yBAEvH,IAAAH,WAAA,CAAAC,IAAA,EAAC;kCACG,IAAAD,WAAA,CAAAC,IAAA,EAAC;YAAMa,OAAA,EAAQ;YAAaX,SAAA,EAAU;uBAA+C,a,aAAS,IAAAH,WAAA,CAAAS,GAAA,EAAC;cAAKN,SAAA,EAAU;wBAAe;;2BAC7H,IAAAH,WAAA,CAAAS,GAAA,EAACQ,SAAA,CAAAC,QAAQ;YACLC,OAAA,EAAS1K,SAAA,CAAUqI,GAAG,CAAClK,CAAA,IAAM;cAAA;cAAAD,cAAA,GAAAmB,CAAA;cAAAnB,cAAA,GAAAC,CAAA;cAAA;gBAAEoH,KAAA,EAAOpH,CAAA,CAAEiI,EAAE,CAAC/D,QAAQ;gBAAIsI,KAAA,EAAOxM,CAAA,CAAEgD;cAAK;YAAA;YACrEoE,KAAA;YAAO;YAAA,CAAArH,cAAA,GAAAgB,CAAA,WAAA6D,QAAA,CAASO,UAAU;YAAA;YAAA,CAAApF,cAAA,GAAAgB,CAAA,WAAI;YAC9B0L,QAAA,EAAWrF,KAAA,IAAU;cAAA;cAAArH,cAAA,GAAAmB,CAAA;cAAAnB,cAAA,GAAAC,CAAA;cAAA,OAAA6E,WAAA,CAAY8B,IAAA,IAAS;gBAAA;gBAAA5G,cAAA,GAAAmB,CAAA;gBAAAnB,cAAA,GAAAC,CAAA;gBAAA;kBAAE,GAAG2G,IAAI;kBAAExB,UAAA,EAAYiC;gBAAM;cAAA;YAAA;YACvEsF,WAAA,EAAY;YACZC,UAAA,EAAY;;yBAGpB,IAAAvB,WAAA,CAAAC,IAAA,EAAC;kCACG,IAAAD,WAAA,CAAAC,IAAA,EAAC;YAAMa,OAAA,EAAQ;YAAOX,SAAA,EAAU;uBAA+C,iB,aAAa,IAAAH,WAAA,CAAAS,GAAA,EAAC;cAAKN,SAAA,EAAU;wBAAe;;2BAC3H,IAAAH,WAAA,CAAAS,GAAA,EAAC;YAAMM,IAAA,EAAK;YAAOnJ,IAAA,EAAK;YAAOiF,EAAA,EAAG;YAAOb,KAAA;YAAO;YAAA,CAAArH,cAAA,GAAAgB,CAAA,WAAA6D,QAAA,CAASG,IAAI;YAAA;YAAA,CAAAhF,cAAA,GAAAgB,CAAA,WAAI;YAAI0L,QAAA,EAAUvF,YAAA;YAAc0F,QAAQ;YAACrB,SAAA,EAAU;;yBAEpH,IAAAH,WAAA,CAAAC,IAAA,EAAC;kCACG,IAAAD,WAAA,CAAAS,GAAA,EAAC;YAAMK,OAAA,EAAQ;YAAUX,SAAA,EAAU;sBAA+C;2BAClF,IAAAH,WAAA,CAAAS,GAAA,EAAC;YAAMM,IAAA,EAAK;YAAOnJ,IAAA,EAAK;YAAUiF,EAAA,EAAG;YAAUb,KAAA;YAAO;YAAA,CAAArH,cAAA,GAAAgB,CAAA,WAAA6D,QAAA,CAASM,OAAO;YAAA;YAAA,CAAAnF,cAAA,GAAAgB,CAAA,WAAI;YAAI0L,QAAA,EAAUvF,YAAA;YAAcqE,SAAA,EAAU;;yBAEpH,IAAAH,WAAA,CAAAC,IAAA,EAAC;kCACG,IAAAD,WAAA,CAAAS,GAAA,EAAC;YAAMK,OAAA,EAAQ;YAASX,SAAA,EAAU;sBAA+C;2BACjF,IAAAH,WAAA,CAAAC,IAAA,EAAC;YAAOrI,IAAA,EAAK;YAASiF,EAAA,EAAG;YAASb,KAAA;YAAO;YAAA,CAAArH,cAAA,GAAAgB,CAAA,WAAA6D,QAAA,CAASQ,MAAM;YAAA;YAAA,CAAArF,cAAA,GAAAgB,CAAA,WAAI;YAAoB0L,QAAA,EAAUvF,YAAA;YAAcqE,SAAA,EAAU;oCAC9G,IAAAH,WAAA,CAAAS,GAAA,EAAC;cAAOzE,KAAA,EAAM;wBAAmB;6BACjC,IAAAgE,WAAA,CAAAS,GAAA,EAAC;cAAOzE,KAAA,EAAM;wBAAS;6BACvB,IAAAgE,WAAA,CAAAS,GAAA,EAAC;cAAOzE,KAAA,EAAM;wBAAU;6BACxB,IAAAgE,WAAA,CAAAS,GAAA,EAAC;cAAOzE,KAAA,EAAM;wBAAO;6BACrB,IAAAgE,WAAA,CAAAS,GAAA,EAAC;cAAOzE,KAAA,EAAM;wBAAO;;;yBAG7B,IAAAgE,WAAA,CAAAC,IAAA,EAAC;kCACG,IAAAD,WAAA,CAAAS,GAAA,EAAC;YAAMK,OAAA,EAAQ;YAAcX,SAAA,EAAU;sBAA+C;2BACtF,IAAAH,WAAA,CAAAS,GAAA,EAAC;YAAMM,IAAA,EAAK;YAASnJ,IAAA,EAAK;YAAciF,EAAA,EAAG;YAAcb,KAAA;YAAO;YAAA,CAAArH,cAAA,GAAAgB,CAAA,WAAA6D,QAAA,CAASW,WAAW,EAAEsH,OAAA,CAAQ;YAAA;YAAA,CAAA9M,cAAA,GAAAgB,CAAA,WAAM;YAAQqL,QAAQ;YAACb,SAAA,EAAU;;yBAEnI,IAAAH,WAAA,CAAAC,IAAA,EAAC;UAAIE,SAAA,EAAU;kCACX,IAAAH,WAAA,CAAAS,GAAA,EAAC;YAAMK,OAAA,EAAQ;YAAaX,SAAA,EAAU;sBAA+C;2BACrF,IAAAH,WAAA,CAAAS,GAAA,EAAC;YAAMM,IAAA,EAAK;YAASnJ,IAAA,EAAK;YAAaiF,EAAA,EAAG;YAAab,KAAA;YAAO;YAAA,CAAArH,cAAA,GAAAgB,CAAA,WAAA6D,QAAA,CAASY,UAAU;YAAA;YAAA,CAAAzF,cAAA,GAAAgB,CAAA,WAAI;YAAG0L,QAAA,EAAUvF,YAAA;YAAc4F,GAAA,EAAI;YAAIC,IAAA,EAAK;YAAOxB,SAAA,EAAU;;yBAElJ,IAAAH,WAAA,CAAAC,IAAA,EAAC;UAAIE,SAAA,EAAU;kCACX,IAAAH,WAAA,CAAAS,GAAA,EAAC;YAAMK,OAAA,EAAQ;YAAQX,SAAA,EAAU;sBAA+C;2BAChF,IAAAH,WAAA,CAAAS,GAAA,EAAC;YAAS7I,IAAA,EAAK;YAAQiF,EAAA,EAAG;YAAQb,KAAA;YAAO;YAAA,CAAArH,cAAA,GAAAgB,CAAA,WAAA6D,QAAA,CAASS,KAAK;YAAA;YAAA,CAAAtF,cAAA,GAAAgB,CAAA,WAAI;YAAI0L,QAAA,EAAUvF,YAAA;YAAc8F,IAAA,EAAM;YAAGzB,SAAA,EAAU;;;;qBAKtH,IAAAH,WAAA,CAAAC,IAAA,EAACG,aAAA,CAAAC,MAAM,CAACC,GAAG;MAACO,QAAA,EAAUnM,YAAA;MAAcyL,SAAA,EAAU;8BAC1C,IAAAH,WAAA,CAAAC,IAAA,EAAC;QAAIE,SAAA,EAAU;gCACX,IAAAH,WAAA,CAAAS,GAAA,EAAC;UAAGN,SAAA,EAAU;oBAAmD;yBACjE,IAAAH,WAAA,CAAAC,IAAA,EAAC;UAAIE,SAAA,EAAU;kCACX,IAAAH,WAAA,CAAAC,IAAA,EAAC4B,OAAA,CAAAC,MAAM;YAACf,IAAA,EAAK;YAASgB,OAAA,EAAQ;YAAUnB,IAAA,EAAK;YAAKoB,OAAA,EAASA,CAAA,KAAM;cAAA;cAAArN,cAAA,GAAAmB,CAAA;cAAAnB,cAAA,GAAAC,CAAA;cAAA,OAAAyC,sBAAA,CAAuB;YAAA;YAAO8I,SAAA,EAAU;oCACrG,IAAAH,WAAA,CAAAS,GAAA,EAACC,YAAA,CAAAuB,WAAW;cAAC9B,SAAA,EAAU;gBAAiB;2BAE5C,IAAAH,WAAA,CAAAC,IAAA,EAAC4B,OAAA,CAAAC,MAAM;YAACf,IAAA,EAAK;YAASgB,OAAA,EAAQ;YAAUnB,IAAA,EAAK;YAAKoB,OAAA,EAAS7F,aAAA;YAAegE,SAAA,EAAU;oCAChF,IAAAH,WAAA,CAAAS,GAAA,EAACC,YAAA,CAAAwB,IAAI;cAAC/B,SAAA,EAAU;gBAAiB;;;uBAI7C,IAAAH,WAAA,CAAAS,GAAA,EAAC;QAAIN,SAAA,EAAU;kBACV;QAAC;QAAA,CAAAxL,cAAA,GAAAgB,CAAA,WAAA6D,QAAA,CAASU,KAAK;QAAA;QAAA,CAAAvF,cAAA,GAAAgB,CAAA,WAAI,EAAE,GAAEmJ,GAAG,CAAC,CAAC1D,IAAA,EAAMoB,KAAA,KAC/B;UAAA;UAAA7H,cAAA,GAAAmB,CAAA;UAAAnB,cAAA,GAAAC,CAAA;UAAA,OAD+B,aAC/B,IAAAoL,WAAA,CAAAC,IAAA,EAACG,aAAA,CAAAC,MAAM,CAACC,GAAG;YAACO,QAAA,EAAUzL,YAAA;YAA0B+K,SAAA,EAAU;oCACtD,IAAAH,WAAA,CAAAC,IAAA,EAAC;cAAIE,SAAA,EAAU;sCACX,IAAAH,WAAA,CAAAC,IAAA,EAAC;gBAAMa,OAAA,EAAS,gBAAgBtE,KAAA,EAAO;gBAAE2D,SAAA,EAAU;2BAA+C,Y,aAAQ,IAAAH,WAAA,CAAAS,GAAA,EAAC;kBAAKN,SAAA,EAAU;4BAAe;;+BACzI,IAAAH,WAAA,CAAAS,GAAA,EAACQ,SAAA,CAAAC,QAAQ;gBACLC,OAAA,EAASrK,gBAAA,CAAiBgI,GAAG,CAAClC,CAAA,IAAM;kBAAA;kBAAAjI,cAAA,GAAAmB,CAAA;kBAAAnB,cAAA,GAAAC,CAAA;kBAAA;oBAAEoH,KAAA,EAAOY,CAAA,CAAEC,EAAE,CAAC/D,QAAQ;oBAAIsI,KAAA,EAAO,GAAGxE,CAAA,CAAEhF,IAAI;oBAAU;oBAAA,CAAAjD,cAAA,GAAAgB,CAAA,WAAAiH,CAAA,CAAE/E,GAAG;oBAAA;oBAAA,CAAAlD,cAAA,GAAAgB,CAAA,WAAI;kBAAS;gBAAA;gBAC1GqG,KAAA;gBAAO;gBAAA,CAAArH,cAAA,GAAAgB,CAAA,WAAAyF,IAAA,CAAKd,SAAS;gBAAA;gBAAA,CAAA3F,cAAA,GAAAgB,CAAA,WAAI;gBACzB0L,QAAA,EAAWrF,KAAA,IAAU;kBAAA;kBAAArH,cAAA,GAAAmB,CAAA;kBAAAnB,cAAA,GAAAC,CAAA;kBAAA,OAAA2H,gBAAA,CAAiB;oBAAEN,MAAA,EAAQ;sBAAErE,IAAA,EAAM;sBAAaoE;oBAAM;kBAAE,GAAUQ,KAAA;gBAAA;gBACvF2F,QAAA,EAAUxC,mBAAA;gBACV2B,WAAA,EAAY;gBACZC,UAAA,EAAY;;6BAGpB,IAAAvB,WAAA,CAAAC,IAAA,EAAC;cAAIE,SAAA,EAAU;sCACX,IAAAH,WAAA,CAAAC,IAAA,EAAC;gBAAMa,OAAA,EAAS,iBAAiBtE,KAAA,EAAO;gBAAE2D,SAAA,EAAU;2BAA+C,a,aAAS,IAAAH,WAAA,CAAAS,GAAA,EAAC;kBAAKN,SAAA,EAAU;4BAAe;;+BAC3I,IAAAH,WAAA,CAAAS,GAAA,EAAC;gBAAMM,IAAA,EAAK;gBAASnJ,IAAA,EAAK;gBAAWiF,EAAA,EAAI,iBAAiBL,KAAA,EAAO;gBAAER,KAAA;gBAAO;gBAAA,CAAArH,cAAA,GAAAgB,CAAA,WAAAyF,IAAA,CAAKE,QAAQ;gBAAA;gBAAA,CAAA3G,cAAA,GAAAgB,CAAA,WAAI;gBAAI0L,QAAA,EAAWtF,CAAA,IAAM;kBAAA;kBAAApH,cAAA,GAAAmB,CAAA;kBAAAnB,cAAA,GAAAC,CAAA;kBAAA,OAAA2H,gBAAA,CAAiBR,CAAA,EAAGS,KAAA;gBAAA;gBAAQgF,QAAQ;gBAACE,GAAA,EAAI;gBAAOC,IAAA,EAAK;gBAAMxB,SAAA,EAAU;gBAA2JmB,WAAA,EAAY;;6BAEhW,IAAAtB,WAAA,CAAAC,IAAA,EAAC;cAAIE,SAAA,EAAU;sCACX,IAAAH,WAAA,CAAAC,IAAA,EAAC;gBAAMa,OAAA,EAAS,cAActE,KAAA,EAAO;gBAAE2D,SAAA,EAAU;2BAA+C,e,aAAW,IAAAH,WAAA,CAAAS,GAAA,EAAC;kBAAKN,SAAA,EAAU;4BAAe;;+BAC1I,IAAAH,WAAA,CAAAS,GAAA,EAAC;gBAAMM,IAAA,EAAK;gBAASnJ,IAAA,EAAK;gBAAQiF,EAAA,EAAI,cAAcL,KAAA,EAAO;gBAAER,KAAA;gBAAO;gBAAA,CAAArH,cAAA,GAAAgB,CAAA,WAAAyF,IAAA,CAAKrD,KAAK;gBAAA;gBAAA,CAAApD,cAAA,GAAAgB,CAAA,WAAI;gBAAI0L,QAAA,EAAWtF,CAAA,IAAM;kBAAA;kBAAApH,cAAA,GAAAmB,CAAA;kBAAAnB,cAAA,GAAAC,CAAA;kBAAA,OAAA2H,gBAAA,CAAiBR,CAAA,EAAGS,KAAA;gBAAA;gBAAQgF,QAAQ;gBAACE,GAAA,EAAI;gBAAIC,IAAA,EAAK;gBAAMxB,SAAA,EAAU;gBAA2JmB,WAAA,EAAY;;6BAEpV,IAAAtB,WAAA,CAAAC,IAAA,EAAC;cAAIE,SAAA,EAAU;sCACX,IAAAH,WAAA,CAAAS,GAAA,EAAC;gBAAMN,SAAA,EAAU;0BAA+C;+BAChE,IAAAH,WAAA,CAAAS,GAAA,EAAC;gBAAMM,IAAA,EAAK;gBAAO/E,KAAA,EAAO,CAACX,MAAA,CAAOD,IAAA,CAAKE,QAAQ,IAAID,MAAA,CAAOD,IAAA,CAAKrD,KAAK,GAAG0J,OAAO,CAAC;gBAAIT,QAAQ;gBAACb,SAAA,EAAU;;6BAE1G,IAAAH,WAAA,CAAAC,IAAA,EAAC;cAAIE,SAAA,EAAU;sCACX,IAAAH,WAAA,CAAAC,IAAA,EAAC4B,OAAA,CAAAC,MAAM;gBAACf,IAAA,EAAK;gBAASgB,OAAA,EAAQ;gBAAUnB,IAAA,EAAK;gBAAKoB,OAAA,EAASA,CAAA,KAAM;kBAAA;kBAAArN,cAAA,GAAAmB,CAAA;kBAAAnB,cAAA,GAAAC,CAAA;kBAAA,OAAAsI,2BAAA,CAA4BV,KAAA;gBAAA;gBAAQ2D,SAAA,EAAU;gBAAuDiC,QAAA;gBAAU;gBAAA,CAAAzN,cAAA,GAAAgB,CAAA,YAACyF,IAAA,CAAKd,SAAS;gBAAA;gBAAA,CAAA3F,cAAA,GAAAgB,CAAA,WAAI,CAACyF,IAAA,CAAKE,QAAQ;gBAAA;gBAAA,CAAA3G,cAAA,GAAAgB,CAAA,WAAI0F,MAAA,CAAOD,IAAA,CAAKE,QAAQ,KAAK;wCAC1O,IAAA0E,WAAA,CAAAS,GAAA,EAACC,YAAA,CAAA2B,KAAK;kBAAClC,SAAA,EAAU;oBAAiB;+BAEtC,IAAAH,WAAA,CAAAS,GAAA,EAACoB,OAAA,CAAAC,MAAM;gBAACf,IAAA,EAAK;gBAASgB,OAAA,EAAQ;gBAAiBnB,IAAA,EAAK;gBAAUoB,OAAA,EAASA,CAAA,KAAM;kBAAA;kBAAArN,cAAA,GAAAmB,CAAA;kBAAAnB,cAAA,GAAAC,CAAA;kBAAA,OAAAkI,gBAAA,CAAiBN,KAAA;gBAAA;gBAAQ2D,SAAA,EAAU;0BAC5G,iBAAAH,WAAA,CAAAS,GAAA,EAACC,YAAA,CAAA4B,KAAK;kBAACnC,SAAA,EAAU;;;;aA7BY3D,KAAA;QAAA;;MAmChD;MAAA,CAAA7H,cAAA,GAAAgB,CAAA,WAAA6D,QAAA,CAASU,KAAK;MAAA;MAAA,CAAAvF,cAAA,GAAAgB,CAAA,WAAI6D,QAAA,CAASU,KAAK,CAACyE,MAAM,KAAK;MAAA;MAAA,CAAAhK,cAAA,GAAAgB,CAAA,wBAAK,IAAAqK,WAAA,CAAAS,GAAA,EAAC;QAAEN,SAAA,EAAU;kBAAyC;;;IAG3G;IAAA,CAAAxL,cAAA,GAAAgB,CAAA,WAAAyB,mBAAA;IAAA;IAAA,CAAAzC,cAAA,GAAAgB,CAAA,wBACG,IAAAqK,WAAA,CAAAS,GAAA,EAACL,aAAA,CAAAmC,eAAe;gBACZ,iBAAAvC,WAAA,CAAAS,GAAA,EAACL,aAAA,CAAAC,MAAM,CAACC,GAAG;QAACC,OAAA,EAAS;UAAEzL,OAAA,EAAS;QAAE;QAAG0L,OAAA,EAAS;UAAE1L,OAAA,EAAS;QAAE;QAAG0N,IAAA,EAAM;UAAE1N,OAAA,EAAS;QAAE;QAAGqL,SAAA,EAAU;kBAC1F,iBAAAH,WAAA,CAAAC,IAAA,EAACG,aAAA,CAAAC,MAAM,CAACC,GAAG;UAACC,OAAA,EAAS;YAAEkC,KAAA,EAAO;YAAM3N,OAAA,EAAS;UAAE;UAAG0L,OAAA,EAAS;YAAEiC,KAAA,EAAO;YAAG3N,OAAA,EAAS;UAAE;UAAG0N,IAAA,EAAM;YAAEC,KAAA,EAAO;YAAM3N,OAAA,EAAS;UAAE;UAAGG,UAAA,EAAY;YAAEC,QAAA,EAAU;UAAI;UAAGiL,SAAA,EAAU;kCAC7J,IAAAH,WAAA,CAAAC,IAAA,EAAC;YAAIE,SAAA,EAAU;oCACX,IAAAH,WAAA,CAAAS,GAAA,EAAC;cAAGN,SAAA,EAAU;wBAAsC;6BACpD,IAAAH,WAAA,CAAAS,GAAA,EAAC;cAAOuB,OAAA,EAASA,CAAA;gBAAA;gBAAArN,cAAA,GAAAmB,CAAA;gBAAAnB,cAAA,GAAAC,CAAA;gBAAQyC,sBAAA,CAAuB;gBAAA;gBAAA1C,cAAA,GAAAC,CAAA;gBAAQ2C,uBAAA,CAAwB;cAAO;cAAG4I,SAAA,EAAU;wBAAoC,iBAAAH,WAAA,CAAAS,GAAA,EAACC,YAAA,CAAAgC,OAAO;gBAACvC,SAAA,EAAU;;;;UAE9J;UAAA,CAAAxL,cAAA,GAAAgB,CAAA,WAAA2B,oBAAA;UAAA;UAAA,CAAA3C,cAAA,GAAAgB,CAAA,wBAAwB,IAAAqK,WAAA,CAAAC,IAAA,EAAC;YAAIE,SAAA,EAAU;oCAAwE,IAAAH,WAAA,CAAAS,GAAA,EAACC,YAAA,CAAAC,IAAI;cAACC,IAAA,EAAM;gBAAM,KAAEtJ,oBAAA;4BACpI,IAAA0I,WAAA,CAAAC,IAAA,EAAC;oCACG,IAAAD,WAAA,CAAAC,IAAA,EAAC;cAAME,SAAA,EAAU;yBAA+C,iB,aAAa,IAAAH,WAAA,CAAAS,GAAA,EAAC;gBAAKN,SAAA,EAAU;0BAAe;;6BAC5G,IAAAH,WAAA,CAAAS,GAAA,EAAC;cAAMM,IAAA,EAAK;cAAO/E,KAAA,EAAOtE,cAAA,CAAeE,IAAI;cAAEyJ,QAAA,EAAUtF,CAAA,IAAK;gBAAA;gBAAApH,cAAA,GAAAmB,CAAA;gBAAAnB,cAAA,GAAAC,CAAA;gBAAA,OAAA+C,iBAAA,CAAkB;kBAAE,GAAGD,cAAc;kBAAEE,IAAA,EAAMmE,CAAA,CAAEE,MAAM,CAACD;gBAAM;cAAA;cAAImE,SAAA,EAAU;cAA2JqB,QAAQ;;2BAE/S,IAAAxB,WAAA,CAAAC,IAAA,EAAC;oCACG,IAAAD,WAAA,CAAAS,GAAA,EAAC;cAAMN,SAAA,EAAU;wBAA+C;6BAChE,IAAAH,WAAA,CAAAS,GAAA,EAAC;cAAMM,IAAA,EAAK;cAAO/E,KAAA,EAAOtE,cAAA,CAAeG,GAAG;cAAEwJ,QAAA,EAAUtF,CAAA,IAAK;gBAAA;gBAAApH,cAAA,GAAAmB,CAAA;gBAAAnB,cAAA,GAAAC,CAAA;gBAAA,OAAA+C,iBAAA,CAAkB;kBAAE,GAAGD,cAAc;kBAAEG,GAAA,EAAKkE,CAAA,CAAEE,MAAM,CAACD;gBAAM;cAAA;cAAImE,SAAA,EAAU;;2BAE1I,IAAAH,WAAA,CAAAC,IAAA,EAAC;oCACG,IAAAD,WAAA,CAAAC,IAAA,EAAC;cAAME,SAAA,EAAU;yBAA+C,a,aAAS,IAAAH,WAAA,CAAAS,GAAA,EAAC;gBAAKN,SAAA,EAAU;0BAAe;;6BACxG,IAAAH,WAAA,CAAAS,GAAA,EAACQ,SAAA,CAAAC,QAAQ;cACLC,OAAA,EAASnK,UAAA,CAAW8H,GAAG,CAAC6D,CAAA,IAAM;gBAAA;gBAAAhO,cAAA,GAAAmB,CAAA;gBAAAnB,cAAA,GAAAC,CAAA;gBAAA;kBAAEoH,KAAA,EAAO2G,CAAA,CAAE9F,EAAE,CAAC/D,QAAQ;kBAAIsI,KAAA,EAAOuB,CAAA,CAAE/K;gBAAK;cAAA;cACtEoE,KAAA,EAAOtE,cAAA,CAAeO,UAAU;cAChCoJ,QAAA,EAAUrF,KAAA,IAAS;gBAAA;gBAAArH,cAAA,GAAAmB,CAAA;gBAAAnB,cAAA,GAAAC,CAAA;gBAAA,OAAA+C,iBAAA,CAAkB;kBAAE,GAAGD,cAAc;kBAAEO,UAAA,EAAY+D;gBAAM;cAAA;cAC5EsF,WAAA,EAAY;cACZC,UAAA,EAAY;;2BAGpB,IAAAvB,WAAA,CAAAC,IAAA,EAAC;YAAIE,SAAA,EAAU;oCACX,IAAAH,WAAA,CAAAC,IAAA,EAAC;sCACG,IAAAD,WAAA,CAAAC,IAAA,EAAC;gBAAME,SAAA,EAAU;2BAA+C,yB,aAAqB,IAAAH,WAAA,CAAAS,GAAA,EAAC;kBAAKN,SAAA,EAAU;4BAAe;;+BACpH,IAAAH,WAAA,CAAAS,GAAA,EAAC;gBAAMM,IAAA,EAAK;gBAAS/E,KAAA,EAAOtE,cAAA,CAAeM,mBAAmB;gBAAEqJ,QAAA,EAAUtF,CAAA,IAAK;kBAAA;kBAAApH,cAAA,GAAAmB,CAAA;kBAAAnB,cAAA,GAAAC,CAAA;kBAAA,OAAA+C,iBAAA,CAAkB;oBAAE,GAAGD,cAAc;oBAAEM,mBAAA;oBAAqB;oBAAA,CAAArD,cAAA,GAAAgB,CAAA,WAAAuG,UAAA,CAAWH,CAAA,CAAEE,MAAM,CAACD,KAAK;oBAAA;oBAAA,CAAArH,cAAA,GAAAgB,CAAA,WAAK;kBAAE;gBAAA;gBAAIwK,SAAA,EAAU;gBAA2JqB,QAAQ;gBAACE,GAAA,EAAI;gBAAIC,IAAA,EAAK;gBAAML,WAAA,EAAY;;6BAEhY,IAAAtB,WAAA,CAAAC,IAAA,EAAC;sCACG,IAAAD,WAAA,CAAAC,IAAA,EAAC;gBAAME,SAAA,EAAU;2BAA+C,iB,aAAa,IAAAH,WAAA,CAAAS,GAAA,EAAC;kBAAKN,SAAA,EAAU;4BAAe;;+BAC5G,IAAAH,WAAA,CAAAS,GAAA,EAAC;gBAAMM,IAAA,EAAK;gBAAS/E,KAAA,EAAOtE,cAAA,CAAeK,KAAK;gBAAEsJ,QAAA,EAAUtF,CAAA,IAAK;kBAAA;kBAAApH,cAAA,GAAAmB,CAAA;kBAAAnB,cAAA,GAAAC,CAAA;kBAAA,OAAA+C,iBAAA,CAAkB;oBAAE,GAAGD,cAAc;oBAAEK,KAAA;oBAAO;oBAAA,CAAApD,cAAA,GAAAgB,CAAA,WAAAuG,UAAA,CAAWH,CAAA,CAAEE,MAAM,CAACD,KAAK;oBAAA;oBAAA,CAAArH,cAAA,GAAAgB,CAAA,WAAK;kBAAE;gBAAA;gBAAIwK,SAAA,EAAU;gBAA2JqB,QAAQ;gBAACE,GAAA,EAAI;gBAAIC,IAAA,EAAK;gBAAML,WAAA,EAAY;;;2BAGxW,IAAAtB,WAAA,CAAAC,IAAA,EAAC;oCACG,IAAAD,WAAA,CAAAS,GAAA,EAAC;cAAMN,SAAA,EAAU;wBAA+C;6BAChE,IAAAH,WAAA,CAAAS,GAAA,EAAC;cAASzE,KAAA,EAAOtE,cAAA,CAAeI,WAAW;cAAEuJ,QAAA,EAAUtF,CAAA,IAAK;gBAAA;gBAAApH,cAAA,GAAAmB,CAAA;gBAAAnB,cAAA,GAAAC,CAAA;gBAAA,OAAA+C,iBAAA,CAAkB;kBAAE,GAAGD,cAAc;kBAAEI,WAAA,EAAaiE,CAAA,CAAEE,MAAM,CAACD;gBAAM;cAAA;cAAImE,SAAA,EAAU;cAA2JyB,IAAA,EAAM;;2BAElT,IAAA5B,WAAA,CAAAC,IAAA,EAAC;YAAIE,SAAA,EAAU;oCACX,IAAAH,WAAA,CAAAS,GAAA,EAACoB,OAAA,CAAAC,MAAM;cAACC,OAAA,EAAQ;cAAUC,OAAA,EAASA,CAAA;gBAAA;gBAAArN,cAAA,GAAAmB,CAAA;gBAAAnB,cAAA,GAAAC,CAAA;gBAAQyC,sBAAA,CAAuB;gBAAA;gBAAA1C,cAAA,GAAAC,CAAA;gBAAQ2C,uBAAA,CAAwB;cAAO;cAAG6K,QAAA,EAAU5K,oBAAA;wBAAsB;6BAC5I,IAAAwI,WAAA,CAAAS,GAAA,EAACoB,OAAA,CAAAC,MAAM;cAACC,OAAA,EAAQ;cAAUC,OAAA,EAASjE,sBAAA;cAAwBqE,QAAA,EAAU5K,oBAAA;cAAsB2I,SAAA,EAAU;wBAChG3I,oBAAA;cAAA;cAAA,cAAA7C,cAAA,GAAAgB,CAAA,WAAuB,IAAAqK,WAAA,CAAAS,GAAA,EAACC,YAAA,CAAAkC,OAAO;gBAACzC,SAAA,EAAU;;;4CAA4B;;;;;;IAQ9F;IAAA,CAAAxL,cAAA,GAAAgB,CAAA,WAAAyC,qBAAA;IAAA;IAAA,CAAAzD,cAAA,GAAAgB,CAAA,WAAyBuC,gCAAA,KAAqC;IAAA;IAAA,CAAAvD,cAAA,GAAAgB,CAAA,WAAQ6D,QAAA,CAASU,KAAK;IAAA;IAAA,CAAAvF,cAAA,GAAAgB,CAAA,WAAI6D,QAAA,CAASU,KAAK,CAAChC,gCAAA,CAAiC;IAAA;IAAA,CAAAvD,cAAA,GAAAgB,CAAA,wBACrI,IAAAqK,WAAA,CAAAS,GAAA,EAACL,aAAA,CAAAmC,eAAe;gBACZ,iBAAAvC,WAAA,CAAAS,GAAA,EAACL,aAAA,CAAAC,MAAM,CAACC,GAAG;QAACC,OAAA,EAAS;UAAEzL,OAAA,EAAS;QAAE;QAAG0L,OAAA,EAAS;UAAE1L,OAAA,EAAS;QAAE;QAAG0N,IAAA,EAAM;UAAE1N,OAAA,EAAS;QAAE;QAAGqL,SAAA,EAAU;kBAC1F,iBAAAH,WAAA,CAAAC,IAAA,EAACG,aAAA,CAAAC,MAAM,CAACC,GAAG;UAACC,OAAA,EAAS;YAAEkC,KAAA,EAAO;YAAM3N,OAAA,EAAS;UAAE;UAAG0L,OAAA,EAAS;YAAEiC,KAAA,EAAO;YAAG3N,OAAA,EAAS;UAAE;UAAG0N,IAAA,EAAM;YAAEC,KAAA,EAAO;YAAM3N,OAAA,EAAS;UAAE;UAAGG,UAAA,EAAY;YAAEC,QAAA,EAAU;UAAI;UAAGiL,SAAA,EAAU;kCAC7J,IAAAH,WAAA,CAAAC,IAAA,EAAC;YAAIE,SAAA,EAAU;oCACX,IAAAH,WAAA,CAAAC,IAAA,EAAC;cAAGE,SAAA,EAAU;yBAAsC,gBAAa3G,QAAA,CAASU,KAAK,CAAChC,gCAAA,CAAiC,CAACmE,WAAW;6BAC7H,IAAA2D,WAAA,CAAAS,GAAA,EAAC;cAAOuB,OAAA,EAASA,CAAA,KAAM;gBAAA;gBAAArN,cAAA,GAAAmB,CAAA;gBAAAnB,cAAA,GAAAC,CAAA;gBAAA,OAAAyD,wBAAA,CAAyB;cAAA;cAAQ8H,SAAA,EAAU;wBAAoC,iBAAAH,WAAA,CAAAS,GAAA,EAACC,YAAA,CAAAgC,OAAO;gBAACvC,SAAA,EAAU;;;2BAE7H,IAAAH,WAAA,CAAAC,IAAA,EAAC;YAAIE,SAAA,EAAU;oCACX,IAAAH,WAAA,CAAAC,IAAA,EAAC;cAAIE,SAAA,EAAU;sCACX,IAAAH,WAAA,CAAAC,IAAA,EAAC;2BAAE,6B,aAAyB,IAAAD,WAAA,CAAAS,GAAA,EAAC;kBAAKN,SAAA,EAAU;4BAAiB3G,QAAA,CAASU,KAAK,CAAChC,gCAAA,CAAiC,CAACoD;;+BAC9G,IAAA0E,WAAA,CAAAC,IAAA,EAAC;2BAAE,2B,aAAuB,IAAAD,WAAA,CAAAS,GAAA,EAAC;kBAAKN,SAAA,EAAU;4BAAiBxC,0BAAA,CAA2BzF,gCAAA;;+BACtF,IAAA8H,WAAA,CAAAC,IAAA,EAAC;2BAAE,e,aAAW,IAAAD,WAAA,CAAAS,GAAA,EAAC;kBAAKN,SAAA,EAAU;4BAA+B7G,IAAA,CAAKuJ,GAAG,CAAC,GAAGxH,MAAA,CAAO7B,QAAA,CAASU,KAAK,CAAChC,gCAAA,CAAiC,CAACoD,QAAQ,IAAIqC,0BAAA,CAA2BzF,gCAAA;;;gBAE3KhB,KAAA,CAAMyH,MAAM,GAAG;YAAA;YAAA,CAAAhK,cAAA,GAAAgB,CAAA,WAAIuB,KAAA,CAAM4H,GAAG,CAACgE,IAAA,IAC1B;cAAA;cAAAnO,cAAA,GAAAmB,CAAA;cAAAnB,cAAA,GAAAC,CAAA;cAAA,OAD0B,aAC1B,IAAAoL,WAAA,CAAAC,IAAA,EAAC;gBAAkBE,SAAA,EAAU;wCACzB,IAAAH,WAAA,CAAAS,GAAA,EAAC;kBAAMK,OAAA,EAAS,aAAagC,IAAA,CAAKjG,EAAE,EAAE;kBAAEsD,SAAA,EAAU;4BAAyB2C,IAAA,CAAKlL;iCAChF,IAAAoI,WAAA,CAAAS,GAAA,EAAC;kBACGM,IAAA,EAAK;kBACLlE,EAAA,EAAI,aAAaiG,IAAA,CAAKjG,EAAE,EAAE;kBAC1Bb,KAAA;kBAAO;kBAAA,CAAArH,cAAA,GAAAgB,CAAA,WAAA2C,iBAAiB,CAACJ,gCAAA,CAAiC,GAAG4K,IAAA,CAAKjG,EAAE,CAAC;kBAAA;kBAAA,CAAAlI,cAAA,GAAAgB,CAAA,WAAI;kBACzE0L,QAAA,EAAWtF,CAAA,IAAM;oBAAA;oBAAApH,cAAA,GAAAmB,CAAA;oBAAAnB,cAAA,GAAAC,CAAA;oBAAA,OAAAwI,wBAAA,CAAyB0F,IAAA,CAAKjG,EAAE,EAAEd,CAAA,CAAEE,MAAM,CAACD,KAAK;kBAAA;kBACjE0F,GAAA,EAAI;kBACJmB,GAAA,EAAKxH,MAAA,CAAO7B,QAAA,CAASU,KAAK,CAAEhC,gCAAA,CAAiC,CAACoD,QAAQ,KAAKqC,0BAAA,CAA2BzF,gCAAA;kBAAqC;kBAAA,CAAAvD,cAAA,GAAAgB,CAAA,WAAA2C,iBAAiB,CAACJ,gCAAA,CAAiC,GAAG4K,IAAA,CAAKjG,EAAE,CAAC;kBAAA;kBAAA,CAAAlI,cAAA,GAAAgB,CAAA,WAAI,GAAC;kBAC9M2L,WAAA,EAAY;kBACZnB,SAAA,EAAU;;iBAVR2C,IAAA,CAAKjG,EAAE;YAAA;YAAA;YAAA,cAAAlI,cAAA,GAAAgB,CAAA,WAahB,IAAAqK,WAAA,CAAAS,GAAA,EAAC;cAAEN,SAAA,EAAU;wBAAyC;;2BAE/D,IAAAH,WAAA,CAAAS,GAAA,EAAC;YAAIN,SAAA,EAAU;sBACX,iBAAAH,WAAA,CAAAS,GAAA,EAACoB,OAAA,CAAAC,MAAM;cAACC,OAAA,EAAQ;cAAUC,OAAA,EAASA,CAAA,KAAM;gBAAA;gBAAArN,cAAA,GAAAmB,CAAA;gBAAAnB,cAAA,GAAAC,CAAA;gBAAA,OAAAyD,wBAAA,CAAyB;cAAA;wBAAQ;;;;;sBAM9F,IAAA2H,WAAA,CAAAC,IAAA,EAAC;MAAIE,SAAA,EAAU;8BACX,IAAAH,WAAA,CAAAS,GAAA,EAACoB,OAAA,CAAAC,MAAM;QACHf,IAAA,EAAK;QACLgB,OAAA,EAAQ;QACRK,QAAA,EAAUlM,UAAA;QACV8L,OAAA,EAAStM,OAAA;QAAA;QAAA,CAAAf,cAAA,GAAAgB,CAAA,WAAUE,QAAA;QAAA;QAAA,CAAAlB,cAAA,GAAAgB,CAAA,WAAW,MAAM;UAAA;UAAAhB,cAAA,GAAAmB,CAAA;UAAAnB,cAAA,GAAAC,CAAA;UAAA,OAAAmB,MAAA,CAAO2J,IAAI,CAAC;QAAA;kBACnD;uBAGD,IAAAM,WAAA,CAAAS,GAAA,EAACoB,OAAA,CAAAC,MAAM;QACHf,IAAA,EAAK;QACLgB,OAAA,EAAQ;QACRK,QAAA,EAAUlM,UAAA;QACViK,SAAA,EAAU;kBAETjK,UAAA;QAAA;QAAA,cAAAvB,cAAA,GAAAgB,CAAA,WACG,IAAAqK,WAAA,CAAAC,IAAA,EAAAD,WAAA,CAAA+C,QAAA;kCACI,IAAA/C,WAAA,CAAAS,GAAA,EAACC,YAAA,CAAAkC,OAAO;YAACzC,SAAA,EAAU;cAAyB;;;mDAIhD,IAAAH,WAAA,CAAAC,IAAA,EAAAD,WAAA,CAAA+C,QAAA;kCACI,IAAA/C,WAAA,CAAAS,GAAA,EAACC,YAAA,CAAAsC,IAAI;YAAC7C,SAAA,EAAU;cAAY;;;;;AAQxD","ignoreList":[]}