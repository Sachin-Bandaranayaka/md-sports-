{"version":3,"names":["cov_2p0x2nd3q8","actualCoverage","s","GET","request","f","inventoryItems","_prisma","prisma","inventoryItem","findMany","include","product","category","shop","orderBy","name","reportData","map","item","productName","sku","barcode","b","shopName","quantity","price","totalValue","_server","NextResponse","json","success","details","generatedAt","Date","toISOString","error","console","message","status"],"sources":["/Users/sachin/Documents/md-sports-/src/app/api/reports/inventory/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { prisma } from '@/lib/prisma';\n\nexport async function GET(request: Request) {\n    try {\n        // TODO: Implement inventory status report logic\n        const inventoryItems = await prisma.inventoryItem.findMany({\n            include: {\n                product: {\n                    include: {\n                        category: true,\n                    }\n                },\n                shop: true,\n            },\n            orderBy: [\n                { shop: { name: 'asc' } },\n                { product: { name: 'asc' } },\n            ]\n        });\n\n        const reportData = inventoryItems.map(item => ({\n            productName: item.product.name,\n            sku: item.product.sku,\n            barcode: item.product.barcode,\n            category: item.product.category?.name || 'N/A',\n            shopName: item.shop.name,\n            quantity: item.quantity,\n            price: item.product.price, // Assuming 'price' on Product is the current retail price\n            totalValue: item.quantity * item.product.price,\n            // Add other relevant fields from item.product or item.shop as needed\n        }));\n\n        return NextResponse.json({\n            success: true,\n            // Summary might not be applicable here, or could be total items, total value etc.\n            // For now, just returning the detailed list.\n            details: reportData,\n            generatedAt: new Date().toISOString(),\n        });\n\n    } catch (error) {\n        console.error('Error fetching inventory status report:', error);\n        return NextResponse.json(\n            { success: false, message: 'Failed to fetch inventory status report' },\n            { status: 500 }\n        );\n    }\n} "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAMQ;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;;;+BAHc;;;;;;WAAAC,GAAA;;;;;kCAHO;;;kCACN;AAEhB,eAAeA,IAAIC,OAAgB;EAAA;EAAAJ,cAAA,GAAAK,CAAA;EAAAL,cAAA,GAAAE,CAAA;EACtC,IAAI;IACA;IACA,MAAMI,cAAA;IAAA;IAAA,CAAAN,cAAA,GAAAE,CAAA,OAAiB,MAAMK,OAAA,CAAAC,MAAM,CAACC,aAAa,CAACC,QAAQ,CAAC;MACvDC,OAAA,EAAS;QACLC,OAAA,EAAS;UACLD,OAAA,EAAS;YACLE,QAAA,EAAU;UACd;QACJ;QACAC,IAAA,EAAM;MACV;MACAC,OAAA,EAAS,CACL;QAAED,IAAA,EAAM;UAAEE,IAAA,EAAM;QAAM;MAAE,GACxB;QAAEJ,OAAA,EAAS;UAAEI,IAAA,EAAM;QAAM;MAAE;IAEnC;IAEA,MAAMC,UAAA;IAAA;IAAA,CAAAjB,cAAA,GAAAE,CAAA,OAAaI,cAAA,CAAeY,GAAG,CAACC,IAAA,IAAS;MAAA;MAAAnB,cAAA,GAAAK,CAAA;MAAAL,cAAA,GAAAE,CAAA;MAAA;QAC3CkB,WAAA,EAAaD,IAAA,CAAKP,OAAO,CAACI,IAAI;QAC9BK,GAAA,EAAKF,IAAA,CAAKP,OAAO,CAACS,GAAG;QACrBC,OAAA,EAASH,IAAA,CAAKP,OAAO,CAACU,OAAO;QAC7BT,QAAA;QAAU;QAAA,CAAAb,cAAA,GAAAuB,CAAA,UAAAJ,IAAA,CAAKP,OAAO,CAACC,QAAQ,EAAEG,IAAA;QAAA;QAAA,CAAAhB,cAAA,GAAAuB,CAAA,UAAQ;QACzCC,QAAA,EAAUL,IAAA,CAAKL,IAAI,CAACE,IAAI;QACxBS,QAAA,EAAUN,IAAA,CAAKM,QAAQ;QACvBC,KAAA,EAAOP,IAAA,CAAKP,OAAO,CAACc,KAAK;QACzBC,UAAA,EAAYR,IAAA,CAAKM,QAAQ,GAAGN,IAAA,CAAKP,OAAO,CAACc;MAE7C;IAAA;IAAA;IAAA1B,cAAA,GAAAE,CAAA;IAEA,OAAO0B,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MACrBC,OAAA,EAAS;MACT;MACA;MACAC,OAAA,EAASf,UAAA;MACTgB,WAAA,EAAa,IAAIC,IAAA,GAAOC,WAAW;IACvC;EAEJ,EAAE,OAAOC,KAAA,EAAO;IAAA;IAAApC,cAAA,GAAAE,CAAA;IACZmC,OAAA,CAAQD,KAAK,CAAC,2CAA2CA,KAAA;IAAA;IAAApC,cAAA,GAAAE,CAAA;IACzD,OAAO0B,OAAA,CAAAC,YAAY,CAACC,IAAI,CACpB;MAAEC,OAAA,EAAS;MAAOO,OAAA,EAAS;IAA0C,GACrE;MAAEC,MAAA,EAAQ;IAAI;EAEtB;AACJ","ignoreList":[]}