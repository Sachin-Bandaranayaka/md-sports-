766d3c221ae414447cee68a62d1cda4d
"use strict";

/* istanbul ignore next */
function cov_k8426yhnu() {
  var path = "/Users/sachin/Documents/md-sports-/src/lib/utils/shopMiddleware.ts";
  var hash = "a9fc407c1e7eeef875e7d152732138d1ddde3c04";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/lib/utils/shopMiddleware.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 33
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 32
        }
      },
      "7": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "8": {
        start: {
          line: 23,
          column: 14
        },
        end: {
          line: 23,
          column: 32
        }
      },
      "9": {
        start: {
          line: 24,
          column: 30
        },
        end: {
          line: 24,
          column: 76
        }
      },
      "10": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 28,
          column: 6
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "12": {
        start: {
          line: 35,
          column: 31
        },
        end: {
          line: 35,
          column: 71
        }
      },
      "13": {
        start: {
          line: 36,
          column: 28
        },
        end: {
          line: 36,
          column: 68
        }
      },
      "14": {
        start: {
          line: 38,
          column: 26
        },
        end: {
          line: 38,
          column: 73
        }
      },
      "15": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "16": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 44,
          column: 18
        }
      },
      "17": {
        start: {
          line: 47,
          column: 41
        },
        end: {
          line: 47,
          column: 101
        }
      },
      "18": {
        start: {
          line: 48,
          column: 39
        },
        end: {
          line: 48,
          column: 97
        }
      },
      "19": {
        start: {
          line: 49,
          column: 41
        },
        end: {
          line: 49,
          column: 101
        }
      },
      "20": {
        start: {
          line: 50,
          column: 28
        },
        end: {
          line: 50,
          column: 118
        }
      },
      "21": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "22": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 57,
          column: 18
        }
      },
      "23": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "24": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 65,
          column: 18
        }
      },
      "25": {
        start: {
          line: 69,
          column: 28
        },
        end: {
          line: 69,
          column: 33
        }
      },
      "26": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 77,
          column: 13
        }
      },
      "27": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 71,
          column: 56
        }
      },
      "28": {
        start: {
          line: 72,
          column: 19
        },
        end: {
          line: 77,
          column: 13
        }
      },
      "29": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 56
        }
      },
      "30": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 72
        }
      },
      "31": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 83,
          column: 14
        }
      },
      "32": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 66
        }
      },
      "33": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 91,
          column: 14
        }
      },
      "34": {
        start: {
          line: 98,
          column: 29
        },
        end: {
          line: 98,
          column: 80
        }
      },
      "35": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "36": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 104,
          column: 14
        }
      },
      "37": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "38": {
        start: {
          line: 108,
          column: 30
        },
        end: {
          line: 108,
          column: 53
        }
      },
      "39": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 112,
          column: 14
        }
      },
      "40": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "41": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 119,
          column: 14
        }
      },
      "42": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 125,
          column: 10
        }
      },
      "43": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 135,
          column: 11
        }
      },
      "44": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 172,
          column: 10
        }
      },
      "45": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 171,
          column: 13
        }
      },
      "46": {
        start: {
          line: 143,
          column: 28
        },
        end: {
          line: 143,
          column: 44
        }
      },
      "47": {
        start: {
          line: 144,
          column: 40
        },
        end: {
          line: 144,
          column: 70
        }
      },
      "48": {
        start: {
          line: 146,
          column: 35
        },
        end: {
          line: 146,
          column: 99
        }
      },
      "49": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 149,
          column: 17
        }
      },
      "50": {
        start: {
          line: 148,
          column: 20
        },
        end: {
          line: 148,
          column: 77
        }
      },
      "51": {
        start: {
          line: 151,
          column: 35
        },
        end: {
          line: 151,
          column: 75
        }
      },
      "52": {
        start: {
          line: 152,
          column: 45
        },
        end: {
          line: 152,
          column: 105
        }
      },
      "53": {
        start: {
          line: 153,
          column: 43
        },
        end: {
          line: 153,
          column: 101
        }
      },
      "54": {
        start: {
          line: 154,
          column: 45
        },
        end: {
          line: 154,
          column: 105
        }
      },
      "55": {
        start: {
          line: 155,
          column: 32
        },
        end: {
          line: 155,
          column: 122
        }
      },
      "56": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 162,
          column: 19
        }
      },
      "57": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 164,
          column: 70
        }
      },
      "58": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 170,
          column: 19
        }
      },
      "59": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 179,
          column: 9
        }
      },
      "60": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 22
        }
      },
      "61": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 182,
          column: 10
        }
      },
      "62": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "63": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 22
        }
      },
      "64": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 196,
          column: 10
        }
      },
      "65": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "66": {
        start: {
          line: 202,
          column: 25
        },
        end: {
          line: 206,
          column: 14
        }
      },
      "67": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 26
        }
      },
      "68": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 66
        }
      },
      "69": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 25
        }
      },
      "70": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 215,
          column: 32
        }
      },
      "71": {
        start: {
          line: 216,
          column: 24
        },
        end: {
          line: 216,
          column: 54
        }
      },
      "72": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 219,
          column: 5
        }
      },
      "73": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 218,
          column: 37
        }
      },
      "74": {
        start: {
          line: 220,
          column: 4
        },
        end: {
          line: 220,
          column: 46
        }
      },
      "75": {
        start: {
          line: 223,
          column: 18
        },
        end: {
          line: 223,
          column: 65
        }
      },
      "76": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 226,
          column: 5
        }
      },
      "77": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 20
        }
      },
      "78": {
        start: {
          line: 227,
          column: 33
        },
        end: {
          line: 227,
          column: 93
        }
      },
      "79": {
        start: {
          line: 228,
          column: 31
        },
        end: {
          line: 228,
          column: 89
        }
      },
      "80": {
        start: {
          line: 229,
          column: 33
        },
        end: {
          line: 229,
          column: 93
        }
      },
      "81": {
        start: {
          line: 230,
          column: 4
        },
        end: {
          line: 230,
          column: 102
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 23
          },
          end: {
            line: 12,
            column: 24
          }
        },
        loc: {
          start: {
            line: 12,
            column: 34
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 23
          },
          end: {
            line: 15,
            column: 24
          }
        },
        loc: {
          start: {
            line: 15,
            column: 34
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 22
          },
          end: {
            line: 18,
            column: 23
          }
        },
        loc: {
          start: {
            line: 18,
            column: 33
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 33
          }
        },
        loc: {
          start: {
            line: 25,
            column: 39
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 25
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        },
        loc: {
          start: {
            line: 33,
            column: 59
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 33
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        },
        loc: {
          start: {
            line: 97,
            column: 62
          },
          end: {
            line: 126,
            column: 5
          }
        },
        line: 97
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        },
        loc: {
          start: {
            line: 129,
            column: 51
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 129
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        },
        loc: {
          start: {
            line: 139,
            column: 39
          },
          end: {
            line: 173,
            column: 5
          }
        },
        line: 139
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 140,
            column: 15
          },
          end: {
            line: 140,
            column: 16
          }
        },
        loc: {
          start: {
            line: 140,
            column: 28
          },
          end: {
            line: 172,
            column: 9
          }
        },
        line: 140
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        },
        loc: {
          start: {
            line: 176,
            column: 40
          },
          end: {
            line: 183,
            column: 5
          }
        },
        line: 176
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        },
        loc: {
          start: {
            line: 186,
            column: 60
          },
          end: {
            line: 197,
            column: 5
          }
        },
        line: 186
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 200,
            column: 9
          }
        },
        loc: {
          start: {
            line: 200,
            column: 48
          },
          end: {
            line: 212,
            column: 5
          }
        },
        line: 200
      },
      "13": {
        name: "getRequestShopId",
        decl: {
          start: {
            line: 214,
            column: 15
          },
          end: {
            line: 214,
            column: 31
          }
        },
        loc: {
          start: {
            line: 214,
            column: 37
          },
          end: {
            line: 221,
            column: 1
          }
        },
        line: 214
      },
      "14": {
        name: "canAccessAllShops",
        decl: {
          start: {
            line: 222,
            column: 15
          },
          end: {
            line: 222,
            column: 32
          }
        },
        loc: {
          start: {
            line: 222,
            column: 38
          },
          end: {
            line: 231,
            column: 1
          }
        },
        line: 222
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 35
          },
          end: {
            line: 26,
            column: 38
          }
        }, {
          start: {
            line: 26,
            column: 41
          },
          end: {
            line: 28,
            column: 5
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 26,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 26,
            column: 14
          }
        }, {
          start: {
            line: 26,
            column: 18
          },
          end: {
            line: 26,
            column: 32
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "3": {
        loc: {
          start: {
            line: 50,
            column: 28
          },
          end: {
            line: 50,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 28
          },
          end: {
            line: 50,
            column: 56
          }
        }, {
          start: {
            line: 50,
            column: 60
          },
          end: {
            line: 50,
            column: 86
          }
        }, {
          start: {
            line: 50,
            column: 90
          },
          end: {
            line: 50,
            column: 118
          }
        }],
        line: 50
      },
      "4": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "5": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "6": {
        loc: {
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        }, {
          start: {
            line: 72,
            column: 19
          },
          end: {
            line: 77,
            column: 13
          }
        }],
        line: 70
      },
      "7": {
        loc: {
          start: {
            line: 70,
            column: 16
          },
          end: {
            line: 70,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 16
          },
          end: {
            line: 70,
            column: 48
          }
        }, {
          start: {
            line: 70,
            column: 52
          },
          end: {
            line: 70,
            column: 82
          }
        }],
        line: 70
      },
      "8": {
        loc: {
          start: {
            line: 72,
            column: 19
          },
          end: {
            line: 77,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 19
          },
          end: {
            line: 77,
            column: 13
          }
        }, {
          start: {
            line: 74,
            column: 19
          },
          end: {
            line: 77,
            column: 13
          }
        }],
        line: 72
      },
      "9": {
        loc: {
          start: {
            line: 72,
            column: 23
          },
          end: {
            line: 72,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 23
          },
          end: {
            line: 72,
            column: 55
          }
        }, {
          start: {
            line: 72,
            column: 59
          },
          end: {
            line: 72,
            column: 89
          }
        }],
        line: 72
      },
      "10": {
        loc: {
          start: {
            line: 82,
            column: 23
          },
          end: {
            line: 82,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 82,
            column: 35
          },
          end: {
            line: 82,
            column: 44
          }
        }, {
          start: {
            line: 82,
            column: 47
          },
          end: {
            line: 82,
            column: 112
          }
        }],
        line: 82
      },
      "11": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "12": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "13": {
        loc: {
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 107,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 107,
            column: 32
          }
        }, {
          start: {
            line: 107,
            column: 36
          },
          end: {
            line: 107,
            column: 51
          }
        }],
        line: 107
      },
      "14": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "15": {
        loc: {
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 115,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 115,
            column: 33
          }
        }, {
          start: {
            line: 115,
            column: 37
          },
          end: {
            line: 115,
            column: 60
          }
        }],
        line: 115
      },
      "16": {
        loc: {
          start: {
            line: 132,
            column: 21
          },
          end: {
            line: 132,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 21
          },
          end: {
            line: 132,
            column: 28
          }
        }, {
          start: {
            line: 132,
            column: 32
          },
          end: {
            line: 132,
            column: 97
          }
        }],
        line: 132
      },
      "17": {
        loc: {
          start: {
            line: 146,
            column: 70
          },
          end: {
            line: 146,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 70
          },
          end: {
            line: 146,
            column: 85
          }
        }, {
          start: {
            line: 146,
            column: 89
          },
          end: {
            line: 146,
            column: 98
          }
        }],
        line: 146
      },
      "18": {
        loc: {
          start: {
            line: 147,
            column: 16
          },
          end: {
            line: 149,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 16
          },
          end: {
            line: 149,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "19": {
        loc: {
          start: {
            line: 155,
            column: 32
          },
          end: {
            line: 155,
            column: 122
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 32
          },
          end: {
            line: 155,
            column: 60
          }
        }, {
          start: {
            line: 155,
            column: 64
          },
          end: {
            line: 155,
            column: 90
          }
        }, {
          start: {
            line: 155,
            column: 94
          },
          end: {
            line: 155,
            column: 122
          }
        }],
        line: 155
      },
      "20": {
        loc: {
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "21": {
        loc: {
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 177,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 177,
            column: 31
          }
        }, {
          start: {
            line: 177,
            column: 35
          },
          end: {
            line: 177,
            column: 50
          }
        }],
        line: 177
      },
      "22": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "23": {
        loc: {
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 187,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 187,
            column: 23
          }
        }, {
          start: {
            line: 187,
            column: 27
          },
          end: {
            line: 187,
            column: 34
          }
        }],
        line: 187
      },
      "24": {
        loc: {
          start: {
            line: 217,
            column: 4
          },
          end: {
            line: 219,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 4
          },
          end: {
            line: 219,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "25": {
        loc: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "26": {
        loc: {
          start: {
            line: 230,
            column: 11
          },
          end: {
            line: 230,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 230,
            column: 11
          },
          end: {
            line: 230,
            column: 39
          }
        }, {
          start: {
            line: 230,
            column: 43
          },
          end: {
            line: 230,
            column: 69
          }
        }, {
          start: {
            line: 230,
            column: 73
          },
          end: {
            line: 230,
            column: 101
          }
        }],
        line: 230
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/lib/utils/shopMiddleware.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { validateTokenPermission, getUserIdFromToken, getShopIdFromToken } from '@/lib/auth';\nimport prisma from '@/lib/prisma';\n\n/**\n * Shop-based access control middleware for API routes\n */\nexport class ShopAccessControl {\n    /**\n     * Validate if user can access data from a specific shop\n     */\n    static async validateShopAccess(req: NextRequest, targetShopId?: string | number): Promise<{\n        hasAccess: boolean;\n        userShopId: string | null;\n        isAdmin: boolean;\n        error?: string;\n    }> {\n        try {\n            const userShopId = await getShopIdFromToken(req);\n            const _userId = await getUserIdFromToken(req);\n\n            // Development mode - allow all access\n            const token = req.headers.get('authorization')?.split(' ')[1];\n            if (token === 'dev-token') {\n                return { hasAccess: true, userShopId: null, isAdmin: true };\n            }\n\n            // Check if user has admin permissions for cross-shop access\n            const shopManagePermission = await validateTokenPermission(req, 'shop:manage');\n            const adminAllPermission = await validateTokenPermission(req, 'admin:all');\n            const userManagePermission = await validateTokenPermission(req, 'user:manage');\n\n            const isAdmin = shopManagePermission.isValid || adminAllPermission.isValid || userManagePermission.isValid;\n\n            // If no target shop specified, allow access\n            if (!targetShopId) {\n                return { hasAccess: true, userShopId, isAdmin };\n            }\n\n            // Admins can access any shop\n            if (isAdmin) {\n                return { hasAccess: true, userShopId, isAdmin };\n            }\n\n            // Check if user belongs to the target shop\n            // Handle both string and number shop IDs\n            let hasAccess = false;\n            if (typeof targetShopId === 'string' && typeof userShopId === 'string') {\n                hasAccess = userShopId === targetShopId;\n            } else if (typeof targetShopId === 'number' && typeof userShopId === 'number') {\n                hasAccess = userShopId === targetShopId;\n            } else {\n                // Convert both to strings for comparison\n                hasAccess = String(userShopId) === String(targetShopId);\n            }\n\n            return {\n                hasAccess,\n                userShopId,\n                isAdmin,\n                error: hasAccess ? undefined : 'Access denied: You can only access data from your assigned shop'\n            };\n\n        } catch (error) {\n            console.error('Error validating shop access:', error);\n            return {\n                hasAccess: false,\n                userShopId: null,\n                isAdmin: false,\n                error: 'Failed to validate shop access'\n            };\n        }\n    }\n\n    /**\n     * Get the effective shop ID for filtering data\n     * Returns user's shop ID if they're restricted, or the requested shop ID if they're admin\n     */\n    static async getEffectiveShopId(req: NextRequest, requestedShopId?: string | number): Promise<{\n        shopId: string | null;\n        isFiltered: boolean;\n        error?: string;\n    }> {\n        const accessResult = await this.validateShopAccess(req, requestedShopId);\n\n        if (!accessResult.hasAccess) {\n            return {\n                shopId: null,\n                isFiltered: false,\n                error: accessResult.error\n            };\n        }\n\n        // If user is admin and requested a specific shop, use that\n        if (accessResult.isAdmin && requestedShopId) {\n            const shopIdStr = String(requestedShopId);\n            return {\n                shopId: shopIdStr,\n                isFiltered: true\n            };\n        }\n\n        // If user is not admin, use their shop ID\n        if (!accessResult.isAdmin && accessResult.userShopId) {\n            return {\n                shopId: accessResult.userShopId,\n                isFiltered: true\n            };\n        }\n\n        // Admin with no specific shop requested - no filtering\n        return {\n            shopId: null,\n            isFiltered: false\n        };\n    }\n\n    /**\n     * Create a standardized error response for shop access violations\n     */\n    static createAccessDeniedResponse(message?: string): NextResponse {\n        return NextResponse.json({\n            success: false,\n            message: message || 'Access denied: You can only access data from your assigned shop'\n        }, { status: 403 });\n    }\n\n    /**\n     * Middleware wrapper for API routes that need shop-based filtering\n     */\n    static withShopAccess(handler: (req: NextRequest, context: {\n        shopId: string | null;\n        isFiltered: boolean;\n        userShopId: string | null;\n        isAdmin: boolean;\n    }) => Promise<NextResponse>) {\n        return async (req: NextRequest) => {\n            try {\n                // Extract shopId from query parameters\n                const url = new URL(req.url);\n                const requestedShopId = url.searchParams.get('shopId');\n\n                // Get effective shop ID for filtering\n                const shopResult = await this.getEffectiveShopId(req, requestedShopId || undefined);\n\n                if (shopResult.error) {\n                    return this.createAccessDeniedResponse(shopResult.error);\n                }\n\n                // Get user context\n                const userShopId = await getShopIdFromToken(req);\n\n                const shopManagePermission = await validateTokenPermission(req, 'shop:manage');\n                const adminAllPermission = await validateTokenPermission(req, 'admin:all');\n                const userManagePermission = await validateTokenPermission(req, 'user:manage');\n\n                const isAdmin = shopManagePermission.isValid || adminAllPermission.isValid || userManagePermission.isValid;\n\n                // Call the handler with shop context\n                return await handler(req, {\n                    shopId: shopResult.shopId,\n                    isFiltered: shopResult.isFiltered,\n                    userShopId,\n                    isAdmin\n                });\n\n            } catch (error) {\n                console.error('Shop access middleware error:', error);\n                return NextResponse.json({\n                    success: false,\n                    message: 'Internal server error'\n                }, { status: 500 });\n            }\n        };\n    }\n\n    /**\n     * Helper to build Prisma where clauses with shop filtering\n     */\n    static buildShopFilter(context: { shopId: string | null; isFiltered: boolean }) {\n        if (!context.isFiltered || !context.shopId) {\n            return {};\n        }\n\n        return {\n            shopId: context.shopId\n        };\n    }\n\n    /**\n     * Helper to build Prisma where clauses for inventory items with shop filtering\n     */\n    static buildInventoryShopFilter(shopId: string | null, isFiltered: boolean) {\n        if (!isFiltered || !shopId) {\n            return {};\n        }\n\n        return {\n            inventoryItems: {\n                some: {\n                    shopId: shopId\n                }\n            }\n        };\n    }\n\n    /**\n     * Helper to validate shop exists and user has access\n     */\n    static async validateShopExists(shopId: number): Promise<boolean> {\n        try {\n            const shop = await prisma.shop.findUnique({\n                where: { id: shopId }\n            });\n            return !!shop;\n        } catch (error) {\n            console.error('Error validating shop exists:', error);\n            return false;\n        }\n    }\n}\n\n/**\n * Utility function to extract shop ID from request (query param or user's shop)\n */\nexport async function getRequestShopId(req: NextRequest): Promise<number | null> {\n    const url = new URL(req.url);\n    const queryShopId = url.searchParams.get('shopId');\n\n    if (queryShopId) {\n        return parseInt(queryShopId);\n    }\n\n    return getShopIdFromToken(req);\n}\n\n/**\n * Utility function to check if user can perform cross-shop operations\n */\nexport async function canAccessAllShops(req: NextRequest): Promise<boolean> {\n    const token = req.headers.get('authorization')?.split(' ')[1];\n    if (token === 'dev-token') {\n        return true;\n    }\n\n    const shopManagePermission = await validateTokenPermission(req, 'shop:manage');\n    const adminAllPermission = await validateTokenPermission(req, 'admin:all');\n    const userManagePermission = await validateTokenPermission(req, 'user:manage');\n\n    return shopManagePermission.isValid || adminAllPermission.isValid || userManagePermission.isValid;\n}"],
      names: ["ShopAccessControl", "canAccessAllShops", "getRequestShopId", "validateShopAccess", "req", "targetShopId", "userShopId", "getShopIdFromToken", "_userId", "getUserIdFromToken", "token", "headers", "get", "split", "hasAccess", "isAdmin", "shopManagePermission", "validateTokenPermission", "adminAllPermission", "userManagePermission", "isValid", "String", "error", "undefined", "console", "getEffectiveShopId", "requestedShopId", "accessResult", "shopId", "isFiltered", "shopIdStr", "createAccessDeniedResponse", "message", "NextResponse", "json", "success", "status", "withShopAccess", "handler", "url", "URL", "searchParams", "shopResult", "buildShopFilter", "context", "buildInventoryShopFilter", "inventoryItems", "some", "validateShopExists", "shop", "prisma", "findUnique", "where", "id", "queryShopId", "parseInt"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a9fc407c1e7eeef875e7d152732138d1ddde3c04"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_k8426yhnu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_k8426yhnu();
cov_k8426yhnu().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_k8426yhnu().f[0]++;
  cov_k8426yhnu().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_k8426yhnu().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_k8426yhnu().s[3]++;
_export(exports, {
  ShopAccessControl: function () {
    /* istanbul ignore next */
    cov_k8426yhnu().f[1]++;
    cov_k8426yhnu().s[4]++;
    return ShopAccessControl;
  },
  canAccessAllShops: function () {
    /* istanbul ignore next */
    cov_k8426yhnu().f[2]++;
    cov_k8426yhnu().s[5]++;
    return canAccessAllShops;
  },
  getRequestShopId: function () {
    /* istanbul ignore next */
    cov_k8426yhnu().f[3]++;
    cov_k8426yhnu().s[6]++;
    return getRequestShopId;
  }
});
const _server =
/* istanbul ignore next */
(cov_k8426yhnu().s[7]++, require("next/server"));
const _auth =
/* istanbul ignore next */
(cov_k8426yhnu().s[8]++, require("../auth"));
const _prisma =
/* istanbul ignore next */
(/*#__PURE__*/cov_k8426yhnu().s[9]++, _interop_require_default(require("../prisma")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_k8426yhnu().f[4]++;
  cov_k8426yhnu().s[10]++;
  return /* istanbul ignore next */(cov_k8426yhnu().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_k8426yhnu().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_k8426yhnu().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_k8426yhnu().b[0][1]++, {
    default: obj
  });
}
class ShopAccessControl {
  /**
   * Validate if user can access data from a specific shop
   */
  static async validateShopAccess(req, targetShopId) {
    /* istanbul ignore next */
    cov_k8426yhnu().f[5]++;
    cov_k8426yhnu().s[11]++;
    try {
      const userShopId =
      /* istanbul ignore next */
      (cov_k8426yhnu().s[12]++, await (0, _auth.getShopIdFromToken)(req));
      const _userId =
      /* istanbul ignore next */
      (cov_k8426yhnu().s[13]++, await (0, _auth.getUserIdFromToken)(req));
      // Development mode - allow all access
      const token =
      /* istanbul ignore next */
      (cov_k8426yhnu().s[14]++, req.headers.get("authorization")?.split(" ")[1]);
      /* istanbul ignore next */
      cov_k8426yhnu().s[15]++;
      if (token === "dev-token") {
        /* istanbul ignore next */
        cov_k8426yhnu().b[2][0]++;
        cov_k8426yhnu().s[16]++;
        return {
          hasAccess: true,
          userShopId: null,
          isAdmin: true
        };
      } else
      /* istanbul ignore next */
      {
        cov_k8426yhnu().b[2][1]++;
      }
      // Check if user has admin permissions for cross-shop access
      const shopManagePermission =
      /* istanbul ignore next */
      (cov_k8426yhnu().s[17]++, await (0, _auth.validateTokenPermission)(req, "shop:manage"));
      const adminAllPermission =
      /* istanbul ignore next */
      (cov_k8426yhnu().s[18]++, await (0, _auth.validateTokenPermission)(req, "admin:all"));
      const userManagePermission =
      /* istanbul ignore next */
      (cov_k8426yhnu().s[19]++, await (0, _auth.validateTokenPermission)(req, "user:manage"));
      const isAdmin =
      /* istanbul ignore next */
      (cov_k8426yhnu().s[20]++,
      /* istanbul ignore next */
      (cov_k8426yhnu().b[3][0]++, shopManagePermission.isValid) ||
      /* istanbul ignore next */
      (cov_k8426yhnu().b[3][1]++, adminAllPermission.isValid) ||
      /* istanbul ignore next */
      (cov_k8426yhnu().b[3][2]++, userManagePermission.isValid));
      // If no target shop specified, allow access
      /* istanbul ignore next */
      cov_k8426yhnu().s[21]++;
      if (!targetShopId) {
        /* istanbul ignore next */
        cov_k8426yhnu().b[4][0]++;
        cov_k8426yhnu().s[22]++;
        return {
          hasAccess: true,
          userShopId,
          isAdmin
        };
      } else
      /* istanbul ignore next */
      {
        cov_k8426yhnu().b[4][1]++;
      }
      // Admins can access any shop
      cov_k8426yhnu().s[23]++;
      if (isAdmin) {
        /* istanbul ignore next */
        cov_k8426yhnu().b[5][0]++;
        cov_k8426yhnu().s[24]++;
        return {
          hasAccess: true,
          userShopId,
          isAdmin
        };
      } else
      /* istanbul ignore next */
      {
        cov_k8426yhnu().b[5][1]++;
      }
      // Check if user belongs to the target shop
      // Handle both string and number shop IDs
      let hasAccess =
      /* istanbul ignore next */
      (cov_k8426yhnu().s[25]++, false);
      /* istanbul ignore next */
      cov_k8426yhnu().s[26]++;
      if (
      /* istanbul ignore next */
      (cov_k8426yhnu().b[7][0]++, typeof targetShopId === "string") &&
      /* istanbul ignore next */
      (cov_k8426yhnu().b[7][1]++, typeof userShopId === "string")) {
        /* istanbul ignore next */
        cov_k8426yhnu().b[6][0]++;
        cov_k8426yhnu().s[27]++;
        hasAccess = userShopId === targetShopId;
      } else {
        /* istanbul ignore next */
        cov_k8426yhnu().b[6][1]++;
        cov_k8426yhnu().s[28]++;
        if (
        /* istanbul ignore next */
        (cov_k8426yhnu().b[9][0]++, typeof targetShopId === "number") &&
        /* istanbul ignore next */
        (cov_k8426yhnu().b[9][1]++, typeof userShopId === "number")) {
          /* istanbul ignore next */
          cov_k8426yhnu().b[8][0]++;
          cov_k8426yhnu().s[29]++;
          hasAccess = userShopId === targetShopId;
        } else {
          /* istanbul ignore next */
          cov_k8426yhnu().b[8][1]++;
          cov_k8426yhnu().s[30]++;
          // Convert both to strings for comparison
          hasAccess = String(userShopId) === String(targetShopId);
        }
      }
      /* istanbul ignore next */
      cov_k8426yhnu().s[31]++;
      return {
        hasAccess,
        userShopId,
        isAdmin,
        error: hasAccess ?
        /* istanbul ignore next */
        (cov_k8426yhnu().b[10][0]++, undefined) :
        /* istanbul ignore next */
        (cov_k8426yhnu().b[10][1]++, "Access denied: You can only access data from your assigned shop")
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_k8426yhnu().s[32]++;
      console.error("Error validating shop access:", error);
      /* istanbul ignore next */
      cov_k8426yhnu().s[33]++;
      return {
        hasAccess: false,
        userShopId: null,
        isAdmin: false,
        error: "Failed to validate shop access"
      };
    }
  }
  /**
   * Get the effective shop ID for filtering data
   * Returns user's shop ID if they're restricted, or the requested shop ID if they're admin
   */
  static async getEffectiveShopId(req, requestedShopId) {
    /* istanbul ignore next */
    cov_k8426yhnu().f[6]++;
    const accessResult =
    /* istanbul ignore next */
    (cov_k8426yhnu().s[34]++, await this.validateShopAccess(req, requestedShopId));
    /* istanbul ignore next */
    cov_k8426yhnu().s[35]++;
    if (!accessResult.hasAccess) {
      /* istanbul ignore next */
      cov_k8426yhnu().b[11][0]++;
      cov_k8426yhnu().s[36]++;
      return {
        shopId: null,
        isFiltered: false,
        error: accessResult.error
      };
    } else
    /* istanbul ignore next */
    {
      cov_k8426yhnu().b[11][1]++;
    }
    // If user is admin and requested a specific shop, use that
    cov_k8426yhnu().s[37]++;
    if (
    /* istanbul ignore next */
    (cov_k8426yhnu().b[13][0]++, accessResult.isAdmin) &&
    /* istanbul ignore next */
    (cov_k8426yhnu().b[13][1]++, requestedShopId)) {
      /* istanbul ignore next */
      cov_k8426yhnu().b[12][0]++;
      const shopIdStr =
      /* istanbul ignore next */
      (cov_k8426yhnu().s[38]++, String(requestedShopId));
      /* istanbul ignore next */
      cov_k8426yhnu().s[39]++;
      return {
        shopId: shopIdStr,
        isFiltered: true
      };
    } else
    /* istanbul ignore next */
    {
      cov_k8426yhnu().b[12][1]++;
    }
    // If user is not admin, use their shop ID
    cov_k8426yhnu().s[40]++;
    if (
    /* istanbul ignore next */
    (cov_k8426yhnu().b[15][0]++, !accessResult.isAdmin) &&
    /* istanbul ignore next */
    (cov_k8426yhnu().b[15][1]++, accessResult.userShopId)) {
      /* istanbul ignore next */
      cov_k8426yhnu().b[14][0]++;
      cov_k8426yhnu().s[41]++;
      return {
        shopId: accessResult.userShopId,
        isFiltered: true
      };
    } else
    /* istanbul ignore next */
    {
      cov_k8426yhnu().b[14][1]++;
    }
    // Admin with no specific shop requested - no filtering
    cov_k8426yhnu().s[42]++;
    return {
      shopId: null,
      isFiltered: false
    };
  }
  /**
   * Create a standardized error response for shop access violations
   */
  static createAccessDeniedResponse(message) {
    /* istanbul ignore next */
    cov_k8426yhnu().f[7]++;
    cov_k8426yhnu().s[43]++;
    return _server.NextResponse.json({
      success: false,
      message:
      /* istanbul ignore next */
      (cov_k8426yhnu().b[16][0]++, message) ||
      /* istanbul ignore next */
      (cov_k8426yhnu().b[16][1]++, "Access denied: You can only access data from your assigned shop")
    }, {
      status: 403
    });
  }
  /**
   * Middleware wrapper for API routes that need shop-based filtering
   */
  static withShopAccess(handler) {
    /* istanbul ignore next */
    cov_k8426yhnu().f[8]++;
    cov_k8426yhnu().s[44]++;
    return async req => {
      /* istanbul ignore next */
      cov_k8426yhnu().f[9]++;
      cov_k8426yhnu().s[45]++;
      try {
        // Extract shopId from query parameters
        const url =
        /* istanbul ignore next */
        (cov_k8426yhnu().s[46]++, new URL(req.url));
        const requestedShopId =
        /* istanbul ignore next */
        (cov_k8426yhnu().s[47]++, url.searchParams.get("shopId"));
        // Get effective shop ID for filtering
        const shopResult =
        /* istanbul ignore next */
        (cov_k8426yhnu().s[48]++, await this.getEffectiveShopId(req,
        /* istanbul ignore next */
        (cov_k8426yhnu().b[17][0]++, requestedShopId) ||
        /* istanbul ignore next */
        (cov_k8426yhnu().b[17][1]++, undefined)));
        /* istanbul ignore next */
        cov_k8426yhnu().s[49]++;
        if (shopResult.error) {
          /* istanbul ignore next */
          cov_k8426yhnu().b[18][0]++;
          cov_k8426yhnu().s[50]++;
          return this.createAccessDeniedResponse(shopResult.error);
        } else
        /* istanbul ignore next */
        {
          cov_k8426yhnu().b[18][1]++;
        }
        // Get user context
        const userShopId =
        /* istanbul ignore next */
        (cov_k8426yhnu().s[51]++, await (0, _auth.getShopIdFromToken)(req));
        const shopManagePermission =
        /* istanbul ignore next */
        (cov_k8426yhnu().s[52]++, await (0, _auth.validateTokenPermission)(req, "shop:manage"));
        const adminAllPermission =
        /* istanbul ignore next */
        (cov_k8426yhnu().s[53]++, await (0, _auth.validateTokenPermission)(req, "admin:all"));
        const userManagePermission =
        /* istanbul ignore next */
        (cov_k8426yhnu().s[54]++, await (0, _auth.validateTokenPermission)(req, "user:manage"));
        const isAdmin =
        /* istanbul ignore next */
        (cov_k8426yhnu().s[55]++,
        /* istanbul ignore next */
        (cov_k8426yhnu().b[19][0]++, shopManagePermission.isValid) ||
        /* istanbul ignore next */
        (cov_k8426yhnu().b[19][1]++, adminAllPermission.isValid) ||
        /* istanbul ignore next */
        (cov_k8426yhnu().b[19][2]++, userManagePermission.isValid));
        // Call the handler with shop context
        /* istanbul ignore next */
        cov_k8426yhnu().s[56]++;
        return await handler(req, {
          shopId: shopResult.shopId,
          isFiltered: shopResult.isFiltered,
          userShopId,
          isAdmin
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_k8426yhnu().s[57]++;
        console.error("Shop access middleware error:", error);
        /* istanbul ignore next */
        cov_k8426yhnu().s[58]++;
        return _server.NextResponse.json({
          success: false,
          message: "Internal server error"
        }, {
          status: 500
        });
      }
    };
  }
  /**
   * Helper to build Prisma where clauses with shop filtering
   */
  static buildShopFilter(context) {
    /* istanbul ignore next */
    cov_k8426yhnu().f[10]++;
    cov_k8426yhnu().s[59]++;
    if (
    /* istanbul ignore next */
    (cov_k8426yhnu().b[21][0]++, !context.isFiltered) ||
    /* istanbul ignore next */
    (cov_k8426yhnu().b[21][1]++, !context.shopId)) {
      /* istanbul ignore next */
      cov_k8426yhnu().b[20][0]++;
      cov_k8426yhnu().s[60]++;
      return {};
    } else
    /* istanbul ignore next */
    {
      cov_k8426yhnu().b[20][1]++;
    }
    cov_k8426yhnu().s[61]++;
    return {
      shopId: context.shopId
    };
  }
  /**
   * Helper to build Prisma where clauses for inventory items with shop filtering
   */
  static buildInventoryShopFilter(shopId, isFiltered) {
    /* istanbul ignore next */
    cov_k8426yhnu().f[11]++;
    cov_k8426yhnu().s[62]++;
    if (
    /* istanbul ignore next */
    (cov_k8426yhnu().b[23][0]++, !isFiltered) ||
    /* istanbul ignore next */
    (cov_k8426yhnu().b[23][1]++, !shopId)) {
      /* istanbul ignore next */
      cov_k8426yhnu().b[22][0]++;
      cov_k8426yhnu().s[63]++;
      return {};
    } else
    /* istanbul ignore next */
    {
      cov_k8426yhnu().b[22][1]++;
    }
    cov_k8426yhnu().s[64]++;
    return {
      inventoryItems: {
        some: {
          shopId: shopId
        }
      }
    };
  }
  /**
   * Helper to validate shop exists and user has access
   */
  static async validateShopExists(shopId) {
    /* istanbul ignore next */
    cov_k8426yhnu().f[12]++;
    cov_k8426yhnu().s[65]++;
    try {
      const shop =
      /* istanbul ignore next */
      (cov_k8426yhnu().s[66]++, await _prisma.default.shop.findUnique({
        where: {
          id: shopId
        }
      }));
      /* istanbul ignore next */
      cov_k8426yhnu().s[67]++;
      return !!shop;
    } catch (error) {
      /* istanbul ignore next */
      cov_k8426yhnu().s[68]++;
      console.error("Error validating shop exists:", error);
      /* istanbul ignore next */
      cov_k8426yhnu().s[69]++;
      return false;
    }
  }
}
async function getRequestShopId(req) {
  /* istanbul ignore next */
  cov_k8426yhnu().f[13]++;
  const url =
  /* istanbul ignore next */
  (cov_k8426yhnu().s[70]++, new URL(req.url));
  const queryShopId =
  /* istanbul ignore next */
  (cov_k8426yhnu().s[71]++, url.searchParams.get("shopId"));
  /* istanbul ignore next */
  cov_k8426yhnu().s[72]++;
  if (queryShopId) {
    /* istanbul ignore next */
    cov_k8426yhnu().b[24][0]++;
    cov_k8426yhnu().s[73]++;
    return parseInt(queryShopId);
  } else
  /* istanbul ignore next */
  {
    cov_k8426yhnu().b[24][1]++;
  }
  cov_k8426yhnu().s[74]++;
  return (0, _auth.getShopIdFromToken)(req);
}
async function canAccessAllShops(req) {
  /* istanbul ignore next */
  cov_k8426yhnu().f[14]++;
  const token =
  /* istanbul ignore next */
  (cov_k8426yhnu().s[75]++, req.headers.get("authorization")?.split(" ")[1]);
  /* istanbul ignore next */
  cov_k8426yhnu().s[76]++;
  if (token === "dev-token") {
    /* istanbul ignore next */
    cov_k8426yhnu().b[25][0]++;
    cov_k8426yhnu().s[77]++;
    return true;
  } else
  /* istanbul ignore next */
  {
    cov_k8426yhnu().b[25][1]++;
  }
  const shopManagePermission =
  /* istanbul ignore next */
  (cov_k8426yhnu().s[78]++, await (0, _auth.validateTokenPermission)(req, "shop:manage"));
  const adminAllPermission =
  /* istanbul ignore next */
  (cov_k8426yhnu().s[79]++, await (0, _auth.validateTokenPermission)(req, "admin:all"));
  const userManagePermission =
  /* istanbul ignore next */
  (cov_k8426yhnu().s[80]++, await (0, _auth.validateTokenPermission)(req, "user:manage"));
  /* istanbul ignore next */
  cov_k8426yhnu().s[81]++;
  return /* istanbul ignore next */(cov_k8426yhnu().b[26][0]++, shopManagePermission.isValid) ||
  /* istanbul ignore next */
  (cov_k8426yhnu().b[26][1]++, adminAllPermission.isValid) ||
  /* istanbul ignore next */
  (cov_k8426yhnu().b[26][2]++, userManagePermission.isValid);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,