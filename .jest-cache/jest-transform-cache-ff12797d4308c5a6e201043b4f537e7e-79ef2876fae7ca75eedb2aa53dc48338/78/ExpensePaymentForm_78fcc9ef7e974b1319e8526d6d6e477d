66dff099abdc11d48da7238c46a12b3a
"use client";
"use strict";

/* istanbul ignore next */
function cov_219t0k20i5() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/payments/components/ExpensePaymentForm.tsx";
  var hash = "4b45089663610213a3ab1a2ad426052d74b345bf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/payments/components/ExpensePaymentForm.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 34
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 56
        }
      },
      "6": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 54
        }
      },
      "7": {
        start: {
          line: 16,
          column: 14
        },
        end: {
          line: 16,
          column: 52
        }
      },
      "8": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 17,
          column: 44
        }
      },
      "9": {
        start: {
          line: 19,
          column: 34
        },
        end: {
          line: 19,
          column: 61
        }
      },
      "10": {
        start: {
          line: 20,
          column: 40
        },
        end: {
          line: 20,
          column: 67
        }
      },
      "11": {
        start: {
          line: 21,
          column: 36
        },
        end: {
          line: 21,
          column: 60
        }
      },
      "12": {
        start: {
          line: 22,
          column: 32
        },
        end: {
          line: 22,
          column: 56
        }
      },
      "13": {
        start: {
          line: 23,
          column: 36
        },
        end: {
          line: 30,
          column: 6
        }
      },
      "14": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 11
        }
      },
      "15": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 24
        }
      },
      "16": {
        start: {
          line: 34,
          column: 26
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "17": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "18": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 29
        }
      },
      "19": {
        start: {
          line: 37,
          column: 29
        },
        end: {
          line: 37,
          column: 68
        }
      },
      "20": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 41,
          column: 13
        }
      },
      "21": {
        start: {
          line: 39,
          column: 31
        },
        end: {
          line: 39,
          column: 52
        }
      },
      "22": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 47
        }
      },
      "23": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 61
        }
      },
      "24": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 30
        }
      },
      "25": {
        start: {
          line: 48,
          column: 30
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "26": {
        start: {
          line: 49,
          column: 32
        },
        end: {
          line: 49,
          column: 40
        }
      },
      "27": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 53,
          column: 16
        }
      },
      "28": {
        start: {
          line: 50,
          column: 29
        },
        end: {
          line: 53,
          column: 13
        }
      },
      "29": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "30": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 59,
          column: 20
        }
      },
      "31": {
        start: {
          line: 56,
          column: 31
        },
        end: {
          line: 59,
          column: 17
        }
      },
      "32": {
        start: {
          line: 62,
          column: 25
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "33": {
        start: {
          line: 63,
          column: 26
        },
        end: {
          line: 63,
          column: 28
        }
      },
      "34": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "35": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 61
        }
      },
      "36": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "37": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 76
        }
      },
      "38": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "39": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 78
        }
      },
      "40": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "41": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 86
        }
      },
      "42": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 29
        }
      },
      "43": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 51
        }
      },
      "44": {
        start: {
          line: 79,
          column: 25
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "45": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 27
        }
      },
      "46": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "47": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 19
        }
      },
      "48": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "49": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 32
        }
      },
      "50": {
        start: {
          line: 86,
          column: 29
        },
        end: {
          line: 99,
          column: 14
        }
      },
      "51": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 108,
          column: 13
        }
      },
      "52": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 28
        }
      },
      "53": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 102,
          column: 26
        }
      },
      "54": {
        start: {
          line: 104,
          column: 34
        },
        end: {
          line: 104,
          column: 55
        }
      },
      "55": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 107,
          column: 19
        }
      },
      "56": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 70
        }
      },
      "57": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 113,
          column: 15
        }
      },
      "58": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 33
        }
      },
      "59": {
        start: {
          line: 118,
          column: 28
        },
        end: {
          line: 118,
          column: 132
        }
      },
      "60": {
        start: {
          line: 118,
          column: 55
        },
        end: {
          line: 118,
          column: 131
        }
      },
      "61": {
        start: {
          line: 119,
          column: 27
        },
        end: {
          line: 119,
          column: 331
        }
      },
      "62": {
        start: {
          line: 119,
          column: 54
        },
        end: {
          line: 119,
          column: 330
        }
      },
      "63": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 322,
          column: 7
        }
      },
      "64": {
        start: {
          line: 199,
          column: 89
        },
        end: {
          line: 207,
          column: 62
        }
      },
      "65": {
        start: {
          line: 232,
          column: 88
        },
        end: {
          line: 239,
          column: 62
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "ExpensePaymentForm",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 27
          }
        },
        loc: {
          start: {
            line: 18,
            column: 52
          },
          end: {
            line: 323,
            column: 1
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 31,
            column: 26
          },
          end: {
            line: 31,
            column: 27
          }
        },
        loc: {
          start: {
            line: 31,
            column: 30
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 34,
            column: 26
          },
          end: {
            line: 34,
            column: 27
          }
        },
        loc: {
          start: {
            line: 34,
            column: 36
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 34
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 48,
            column: 30
          },
          end: {
            line: 48,
            column: 31
          }
        },
        loc: {
          start: {
            line: 48,
            column: 35
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 48
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 50,
            column: 20
          },
          end: {
            line: 50,
            column: 21
          }
        },
        loc: {
          start: {
            line: 50,
            column: 29
          },
          end: {
            line: 53,
            column: 13
          }
        },
        line: 50
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 56,
            column: 22
          },
          end: {
            line: 56,
            column: 23
          }
        },
        loc: {
          start: {
            line: 56,
            column: 31
          },
          end: {
            line: 59,
            column: 17
          }
        },
        line: 56
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 62,
            column: 25
          },
          end: {
            line: 62,
            column: 26
          }
        },
        loc: {
          start: {
            line: 62,
            column: 29
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 62
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 79,
            column: 25
          },
          end: {
            line: 79,
            column: 26
          }
        },
        loc: {
          start: {
            line: 79,
            column: 36
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 79
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 118,
            column: 44
          },
          end: {
            line: 118,
            column: 45
          }
        },
        loc: {
          start: {
            line: 118,
            column: 55
          },
          end: {
            line: 118,
            column: 131
          }
        },
        line: 118
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 119,
            column: 43
          },
          end: {
            line: 119,
            column: 44
          }
        },
        loc: {
          start: {
            line: 119,
            column: 54
          },
          end: {
            line: 119,
            column: 330
          }
        },
        line: 119
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 199,
            column: 64
          },
          end: {
            line: 199,
            column: 65
          }
        },
        loc: {
          start: {
            line: 199,
            column: 89
          },
          end: {
            line: 207,
            column: 62
          }
        },
        line: 199
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 232,
            column: 63
          },
          end: {
            line: 232,
            column: 64
          }
        },
        loc: {
          start: {
            line: 232,
            column: 88
          },
          end: {
            line: 239,
            column: 62
          }
        },
        line: 232
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 41,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 41,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 28
          },
          end: {
            line: 40,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 28
          },
          end: {
            line: 40,
            column: 39
          }
        }, {
          start: {
            line: 40,
            column: 43
          },
          end: {
            line: 40,
            column: 45
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "3": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "4": {
        loc: {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 64,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 64,
            column: 28
          }
        }, {
          start: {
            line: 64,
            column: 32
          },
          end: {
            line: 64,
            column: 64
          }
        }],
        line: 64
      },
      "5": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "6": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "7": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "8": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "9": {
        loc: {
          start: {
            line: 97,
            column: 37
          },
          end: {
            line: 97,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 37
          },
          end: {
            line: 97,
            column: 61
          }
        }, {
          start: {
            line: 97,
            column: 65
          },
          end: {
            line: 97,
            column: 74
          }
        }],
        line: 97
      },
      "10": {
        loc: {
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 108,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 108,
            column: 13
          }
        }, {
          start: {
            line: 103,
            column: 19
          },
          end: {
            line: 108,
            column: 13
          }
        }],
        line: 100
      },
      "11": {
        loc: {
          start: {
            line: 106,
            column: 28
          },
          end: {
            line: 106,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 28
          },
          end: {
            line: 106,
            column: 43
          }
        }, {
          start: {
            line: 106,
            column: 47
          },
          end: {
            line: 106,
            column: 81
          }
        }],
        line: 106
      },
      "12": {
        loc: {
          start: {
            line: 118,
            column: 55
          },
          end: {
            line: 118,
            column: 131
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 55
          },
          end: {
            line: 118,
            column: 81
          }
        }, {
          start: {
            line: 118,
            column: 85
          },
          end: {
            line: 118,
            column: 131
          }
        }],
        line: 118
      },
      "13": {
        loc: {
          start: {
            line: 119,
            column: 54
          },
          end: {
            line: 119,
            column: 330
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 54
          },
          end: {
            line: 119,
            column: 78
          }
        }, {
          start: {
            line: 119,
            column: 82
          },
          end: {
            line: 119,
            column: 108
          }
        }, {
          start: {
            line: 119,
            column: 112
          },
          end: {
            line: 119,
            column: 137
          }
        }, {
          start: {
            line: 119,
            column: 141
          },
          end: {
            line: 119,
            column: 184
          }
        }, {
          start: {
            line: 119,
            column: 188
          },
          end: {
            line: 119,
            column: 231
          }
        }, {
          start: {
            line: 119,
            column: 235
          },
          end: {
            line: 119,
            column: 280
          }
        }, {
          start: {
            line: 119,
            column: 284
          },
          end: {
            line: 119,
            column: 330
          }
        }],
        line: 119
      },
      "14": {
        loc: {
          start: {
            line: 160,
            column: 51
          },
          end: {
            line: 160,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 160,
            column: 67
          },
          end: {
            line: 160,
            column: 83
          }
        }, {
          start: {
            line: 160,
            column: 86
          },
          end: {
            line: 160,
            column: 88
          }
        }],
        line: 160
      },
      "15": {
        loc: {
          start: {
            line: 162,
            column: 36
          },
          end: {
            line: 165,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 36
          },
          end: {
            line: 162,
            column: 49
          }
        }, {
          start: {
            line: 162,
            column: 67
          },
          end: {
            line: 165,
            column: 38
          }
        }],
        line: 162
      },
      "16": {
        loc: {
          start: {
            line: 193,
            column: 140
          },
          end: {
            line: 193,
            column: 202
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 193,
            column: 166
          },
          end: {
            line: 193,
            column: 182
          }
        }, {
          start: {
            line: 193,
            column: 185
          },
          end: {
            line: 193,
            column: 202
          }
        }],
        line: 193
      },
      "17": {
        loc: {
          start: {
            line: 210,
            column: 36
          },
          end: {
            line: 213,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 210,
            column: 36
          },
          end: {
            line: 210,
            column: 59
          }
        }, {
          start: {
            line: 210,
            column: 77
          },
          end: {
            line: 213,
            column: 38
          }
        }],
        line: 210
      },
      "18": {
        loc: {
          start: {
            line: 226,
            column: 140
          },
          end: {
            line: 226,
            column: 199
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 226,
            column: 163
          },
          end: {
            line: 226,
            column: 179
          }
        }, {
          start: {
            line: 226,
            column: 182
          },
          end: {
            line: 226,
            column: 199
          }
        }],
        line: 226
      },
      "19": {
        loc: {
          start: {
            line: 237,
            column: 56
          },
          end: {
            line: 237,
            column: 168
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 237,
            column: 94
          },
          end: {
            line: 237,
            column: 120
          }
        }, {
          start: {
            line: 237,
            column: 123
          },
          end: {
            line: 237,
            column: 168
          }
        }],
        line: 237
      },
      "20": {
        loc: {
          start: {
            line: 237,
            column: 134
          },
          end: {
            line: 237,
            column: 156
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 237,
            column: 134
          },
          end: {
            line: 237,
            column: 149
          }
        }, {
          start: {
            line: 237,
            column: 153
          },
          end: {
            line: 237,
            column: 156
          }
        }],
        line: 237
      },
      "21": {
        loc: {
          start: {
            line: 242,
            column: 36
          },
          end: {
            line: 245,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 242,
            column: 36
          },
          end: {
            line: 242,
            column: 56
          }
        }, {
          start: {
            line: 242,
            column: 74
          },
          end: {
            line: 245,
            column: 38
          }
        }],
        line: 242
      },
      "22": {
        loc: {
          start: {
            line: 295,
            column: 28
          },
          end: {
            line: 298,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 295,
            column: 28
          },
          end: {
            line: 295,
            column: 41
          }
        }, {
          start: {
            line: 295,
            column: 59
          },
          end: {
            line: 298,
            column: 30
          }
        }],
        line: 295
      },
      "23": {
        loc: {
          start: {
            line: 311,
            column: 50
          },
          end: {
            line: 311,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 311,
            column: 50
          },
          end: {
            line: 311,
            column: 60
          }
        }, {
          start: {
            line: 311,
            column: 64
          },
          end: {
            line: 311,
            column: 71
          }
        }],
        line: 311
      },
      "24": {
        loc: {
          start: {
            line: 313,
            column: 50
          },
          end: {
            line: 313,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 313,
            column: 63
          },
          end: {
            line: 313,
            column: 77
          }
        }, {
          start: {
            line: 313,
            column: 80
          },
          end: {
            line: 313,
            column: 96
          }
        }],
        line: 313
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0, 0, 0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/payments/components/ExpensePaymentForm.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/Button';\nimport { Input } from '@/components/ui/Input';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { X } from 'lucide-react';\n\ninterface Account {\n    id: string;\n    name: string;\n    type: string;\n    balance: number;\n}\n\ninterface ExpensePaymentFormProps {\n    onClose: () => void;\n    onSuccess: () => void;\n}\n\nexport default function ExpensePaymentForm({ onClose, onSuccess }: ExpensePaymentFormProps) {\n    const [loading, setLoading] = useState(false);\n    const [submitting, setSubmitting] = useState(false);\n    const [accounts, setAccounts] = useState<Account[]>([]);\n    const [errors, setErrors] = useState<{ [key: string]: string }>({});\n    \n    const [formData, setFormData] = useState({\n        amount: '',\n        description: '',\n        paymentMethod: 'cash',\n        expenseAccountId: '',\n        fromAccountId: '',\n        referenceNumber: ''\n    });\n\n    useEffect(() => {\n        fetchAccounts();\n    }, []);\n\n    const fetchAccounts = async () => {\n        try {\n            setLoading(true);\n            const response = await fetch('/api/accounting/accounts');\n            if (response.ok) {\n                const result = await response.json();\n                setAccounts(result.data || []);\n            }\n        } catch (error) {\n            console.error('Error fetching accounts:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        const { name, value } = e.target;\n        setFormData(prev => ({ ...prev, [name]: value }));\n        // Clear error when user starts typing\n        if (errors[name]) {\n            setErrors(prev => ({ ...prev, [name]: '' }));\n        }\n    };\n\n    const validateForm = () => {\n        const newErrors: { [key: string]: string } = {};\n        \n        if (!formData.amount || parseFloat(formData.amount) <= 0) {\n            newErrors.amount = 'Please enter a valid amount';\n        }\n        \n        if (!formData.expenseAccountId) {\n            newErrors.expenseAccountId = 'Please select an expense account';\n        }\n        \n        if (!formData.fromAccountId) {\n            newErrors.fromAccountId = 'Please select the account to pay from';\n        }\n        \n        if (formData.expenseAccountId === formData.fromAccountId) {\n            newErrors.fromAccountId = 'Source and expense accounts must be different';\n        }\n        \n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        \n        if (!validateForm()) {\n            return;\n        }\n        \n        try {\n            setSubmitting(true);\n            \n            const response = await fetch('/api/payments/expenses', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    amount: parseFloat(formData.amount),\n                    description: formData.description,\n                    paymentMethod: formData.paymentMethod,\n                    expenseAccountId: formData.expenseAccountId,\n                    fromAccountId: formData.fromAccountId,\n                    referenceNumber: formData.referenceNumber || undefined\n                }),\n            });\n            \n            if (response.ok) {\n                onSuccess();\n                onClose();\n            } else {\n                const errorData = await response.json();\n                setErrors({ submit: errorData.error || 'Failed to record expense payment' });\n            }\n        } catch (error) {\n            console.error('Error submitting expense payment:', error);\n            setErrors({ submit: 'An error occurred while recording the expense payment' });\n        } finally {\n            setSubmitting(false);\n        }\n    };\n\n    const expenseAccounts = accounts.filter(account => \n        account.type === 'expense' || account.name.toLowerCase().includes('expense')\n    );\n    \n    const sourceAccounts = accounts.filter(account => \n        account.type === 'asset' || account.type === 'revenue' || account.type === 'income' ||\n        account.name.toLowerCase().includes('cash') || \n        account.name.toLowerCase().includes('bank') ||\n        account.name.toLowerCase().includes('income') ||\n        account.name.toLowerCase().includes('revenue')\n    );\n\n    return (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <Card className=\"w-full max-w-md mx-4 bg-white\">\n                <CardHeader className=\"flex flex-row items-center justify-between\">\n                    <CardTitle>Record Expense Payment</CardTitle>\n                    <Button variant=\"ghost\" size=\"sm\" onClick={onClose}>\n                        <X className=\"w-4 h-4\" />\n                    </Button>\n                </CardHeader>\n                <CardContent>\n                    <form onSubmit={handleSubmit} className=\"space-y-4\">\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Amount *\n                            </label>\n                            <Input\n                                type=\"number\"\n                                name=\"amount\"\n                                value={formData.amount}\n                                onChange={handleInputChange}\n                                placeholder=\"0.00\"\n                                step=\"0.01\"\n                                min=\"0\"\n                                className={errors.amount ? 'border-red-500' : ''}\n                            />\n                            {errors.amount && (\n                                <p className=\"text-red-500 text-xs mt-1\">{errors.amount}</p>\n                            )}\n                        </div>\n\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Description\n                            </label>\n                            <Input\n                                type=\"text\"\n                                name=\"description\"\n                                value={formData.description}\n                                onChange={handleInputChange}\n                                placeholder=\"e.g., Salary advance, Office supplies\"\n                            />\n                        </div>\n\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Expense Account *\n                            </label>\n                            <select\n                                name=\"expenseAccountId\"\n                                value={formData.expenseAccountId}\n                                onChange={handleInputChange}\n                                className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary ${\n                                    errors.expenseAccountId ? 'border-red-500' : 'border-gray-300'\n                                }`}\n                            >\n                                <option value=\"\">Select expense account</option>\n                                {expenseAccounts.map((account) => (\n                                    <option key={account.id} value={account.id}>\n                                        {account.name} ({account.type})\n                                    </option>\n                                ))}\n                            </select>\n                            {errors.expenseAccountId && (\n                                <p className=\"text-red-500 text-xs mt-1\">{errors.expenseAccountId}</p>\n                            )}\n                        </div>\n\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Pay From Account *\n                            </label>\n                            <select\n                                name=\"fromAccountId\"\n                                value={formData.fromAccountId}\n                                onChange={handleInputChange}\n                                className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary ${\n                                    errors.fromAccountId ? 'border-red-500' : 'border-gray-300'\n                                }`}\n                            >\n                                <option value=\"\">Select source account</option>\n                                {sourceAccounts.map((account) => (\n                                    <option key={account.id} value={account.id}>\n                                        {account.name} - Balance: ${typeof account.balance === 'number' ? account.balance.toFixed(2) : parseFloat(account.balance || '0').toFixed(2)}\n                                    </option>\n                                ))}\n                            </select>\n                            {errors.fromAccountId && (\n                                <p className=\"text-red-500 text-xs mt-1\">{errors.fromAccountId}</p>\n                            )}\n                        </div>\n\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Payment Method\n                            </label>\n                            <select\n                                name=\"paymentMethod\"\n                                value={formData.paymentMethod}\n                                onChange={handleInputChange}\n                                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\n                            >\n                                <option value=\"cash\">Cash</option>\n                                <option value=\"bank_transfer\">Bank Transfer</option>\n                                <option value=\"check\">Check</option>\n                                <option value=\"mobile_money\">Mobile Money</option>\n                            </select>\n                        </div>\n\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Reference Number\n                            </label>\n                            <Input\n                                type=\"text\"\n                                name=\"referenceNumber\"\n                                value={formData.referenceNumber}\n                                onChange={handleInputChange}\n                                placeholder=\"Optional reference number\"\n                            />\n                        </div>\n\n                        {errors.submit && (\n                            <div className=\"text-red-500 text-sm\">{errors.submit}</div>\n                        )}\n\n                        <div className=\"flex gap-2 pt-4\">\n                            <Button\n                                type=\"button\"\n                                variant=\"outline\"\n                                onClick={onClose}\n                                className=\"flex-1\"\n                            >\n                                Cancel\n                            </Button>\n                            <Button\n                                type=\"submit\"\n                                disabled={submitting || loading}\n                                className=\"flex-1\"\n                            >\n                                {submitting ? 'Recording...' : 'Record Payment'}\n                            </Button>\n                        </div>\n                    </form>\n                </CardContent>\n            </Card>\n        </div>\n    );\n}"],
      names: ["ExpensePaymentForm", "onClose", "onSuccess", "loading", "setLoading", "useState", "submitting", "setSubmitting", "accounts", "setAccounts", "errors", "setErrors", "formData", "setFormData", "amount", "description", "paymentMethod", "expenseAccountId", "fromAccountId", "referenceNumber", "useEffect", "fetchAccounts", "response", "fetch", "ok", "result", "json", "data", "error", "console", "handleInputChange", "e", "name", "value", "target", "prev", "validateForm", "newErrors", "parseFloat", "Object", "keys", "length", "handleSubmit", "preventDefault", "method", "headers", "body", "JSON", "stringify", "undefined", "errorData", "submit", "expenseAccounts", "filter", "account", "type", "toLowerCase", "includes", "sourceAccounts", "div", "className", "Card", "CardHeader", "CardTitle", "Button", "variant", "size", "onClick", "X", "CardContent", "form", "onSubmit", "label", "Input", "onChange", "placeholder", "step", "min", "p", "select", "option", "map", "id", "balance", "toFixed", "disabled"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4b45089663610213a3ab1a2ad426052d74b345bf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_219t0k20i5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_219t0k20i5();
cov_219t0k20i5().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_219t0k20i5().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_219t0k20i5().f[0]++;
    cov_219t0k20i5().s[2]++;
    return ExpensePaymentForm;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_219t0k20i5().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_219t0k20i5().s[4]++, require("react"));
const _Button =
/* istanbul ignore next */
(cov_219t0k20i5().s[5]++, require("../../../components/ui/Button"));
const _Input =
/* istanbul ignore next */
(cov_219t0k20i5().s[6]++, require("../../../components/ui/Input"));
const _card =
/* istanbul ignore next */
(cov_219t0k20i5().s[7]++, require("../../../components/ui/card"));
const _lucidereact =
/* istanbul ignore next */
(cov_219t0k20i5().s[8]++, require("lucide-react"));
function ExpensePaymentForm({
  onClose,
  onSuccess
}) {
  /* istanbul ignore next */
  cov_219t0k20i5().f[1]++;
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_219t0k20i5().s[9]++, (0, _react.useState)(false));
  const [submitting, setSubmitting] =
  /* istanbul ignore next */
  (cov_219t0k20i5().s[10]++, (0, _react.useState)(false));
  const [accounts, setAccounts] =
  /* istanbul ignore next */
  (cov_219t0k20i5().s[11]++, (0, _react.useState)([]));
  const [errors, setErrors] =
  /* istanbul ignore next */
  (cov_219t0k20i5().s[12]++, (0, _react.useState)({}));
  const [formData, setFormData] =
  /* istanbul ignore next */
  (cov_219t0k20i5().s[13]++, (0, _react.useState)({
    amount: "",
    description: "",
    paymentMethod: "cash",
    expenseAccountId: "",
    fromAccountId: "",
    referenceNumber: ""
  }));
  /* istanbul ignore next */
  cov_219t0k20i5().s[14]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_219t0k20i5().f[2]++;
    cov_219t0k20i5().s[15]++;
    fetchAccounts();
  }, []);
  /* istanbul ignore next */
  cov_219t0k20i5().s[16]++;
  const fetchAccounts = async () => {
    /* istanbul ignore next */
    cov_219t0k20i5().f[3]++;
    cov_219t0k20i5().s[17]++;
    try {
      /* istanbul ignore next */
      cov_219t0k20i5().s[18]++;
      setLoading(true);
      const response =
      /* istanbul ignore next */
      (cov_219t0k20i5().s[19]++, await fetch("/api/accounting/accounts"));
      /* istanbul ignore next */
      cov_219t0k20i5().s[20]++;
      if (response.ok) {
        /* istanbul ignore next */
        cov_219t0k20i5().b[0][0]++;
        const result =
        /* istanbul ignore next */
        (cov_219t0k20i5().s[21]++, await response.json());
        /* istanbul ignore next */
        cov_219t0k20i5().s[22]++;
        setAccounts(
        /* istanbul ignore next */
        (cov_219t0k20i5().b[1][0]++, result.data) ||
        /* istanbul ignore next */
        (cov_219t0k20i5().b[1][1]++, []));
      } else
      /* istanbul ignore next */
      {
        cov_219t0k20i5().b[0][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_219t0k20i5().s[23]++;
      console.error("Error fetching accounts:", error);
    } finally {
      /* istanbul ignore next */
      cov_219t0k20i5().s[24]++;
      setLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_219t0k20i5().s[25]++;
  const handleInputChange = e => {
    /* istanbul ignore next */
    cov_219t0k20i5().f[4]++;
    const {
      name,
      value
    } =
    /* istanbul ignore next */
    (cov_219t0k20i5().s[26]++, e.target);
    /* istanbul ignore next */
    cov_219t0k20i5().s[27]++;
    setFormData(prev => {
      /* istanbul ignore next */
      cov_219t0k20i5().f[5]++;
      cov_219t0k20i5().s[28]++;
      return {
        ...prev,
        [name]: value
      };
    });
    // Clear error when user starts typing
    /* istanbul ignore next */
    cov_219t0k20i5().s[29]++;
    if (errors[name]) {
      /* istanbul ignore next */
      cov_219t0k20i5().b[2][0]++;
      cov_219t0k20i5().s[30]++;
      setErrors(prev => {
        /* istanbul ignore next */
        cov_219t0k20i5().f[6]++;
        cov_219t0k20i5().s[31]++;
        return {
          ...prev,
          [name]: ""
        };
      });
    } else
    /* istanbul ignore next */
    {
      cov_219t0k20i5().b[2][1]++;
    }
  };
  /* istanbul ignore next */
  cov_219t0k20i5().s[32]++;
  const validateForm = () => {
    /* istanbul ignore next */
    cov_219t0k20i5().f[7]++;
    const newErrors =
    /* istanbul ignore next */
    (cov_219t0k20i5().s[33]++, {});
    /* istanbul ignore next */
    cov_219t0k20i5().s[34]++;
    if (
    /* istanbul ignore next */
    (cov_219t0k20i5().b[4][0]++, !formData.amount) ||
    /* istanbul ignore next */
    (cov_219t0k20i5().b[4][1]++, parseFloat(formData.amount) <= 0)) {
      /* istanbul ignore next */
      cov_219t0k20i5().b[3][0]++;
      cov_219t0k20i5().s[35]++;
      newErrors.amount = "Please enter a valid amount";
    } else
    /* istanbul ignore next */
    {
      cov_219t0k20i5().b[3][1]++;
    }
    cov_219t0k20i5().s[36]++;
    if (!formData.expenseAccountId) {
      /* istanbul ignore next */
      cov_219t0k20i5().b[5][0]++;
      cov_219t0k20i5().s[37]++;
      newErrors.expenseAccountId = "Please select an expense account";
    } else
    /* istanbul ignore next */
    {
      cov_219t0k20i5().b[5][1]++;
    }
    cov_219t0k20i5().s[38]++;
    if (!formData.fromAccountId) {
      /* istanbul ignore next */
      cov_219t0k20i5().b[6][0]++;
      cov_219t0k20i5().s[39]++;
      newErrors.fromAccountId = "Please select the account to pay from";
    } else
    /* istanbul ignore next */
    {
      cov_219t0k20i5().b[6][1]++;
    }
    cov_219t0k20i5().s[40]++;
    if (formData.expenseAccountId === formData.fromAccountId) {
      /* istanbul ignore next */
      cov_219t0k20i5().b[7][0]++;
      cov_219t0k20i5().s[41]++;
      newErrors.fromAccountId = "Source and expense accounts must be different";
    } else
    /* istanbul ignore next */
    {
      cov_219t0k20i5().b[7][1]++;
    }
    cov_219t0k20i5().s[42]++;
    setErrors(newErrors);
    /* istanbul ignore next */
    cov_219t0k20i5().s[43]++;
    return Object.keys(newErrors).length === 0;
  };
  /* istanbul ignore next */
  cov_219t0k20i5().s[44]++;
  const handleSubmit = async e => {
    /* istanbul ignore next */
    cov_219t0k20i5().f[8]++;
    cov_219t0k20i5().s[45]++;
    e.preventDefault();
    /* istanbul ignore next */
    cov_219t0k20i5().s[46]++;
    if (!validateForm()) {
      /* istanbul ignore next */
      cov_219t0k20i5().b[8][0]++;
      cov_219t0k20i5().s[47]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_219t0k20i5().b[8][1]++;
    }
    cov_219t0k20i5().s[48]++;
    try {
      /* istanbul ignore next */
      cov_219t0k20i5().s[49]++;
      setSubmitting(true);
      const response =
      /* istanbul ignore next */
      (cov_219t0k20i5().s[50]++, await fetch("/api/payments/expenses", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          amount: parseFloat(formData.amount),
          description: formData.description,
          paymentMethod: formData.paymentMethod,
          expenseAccountId: formData.expenseAccountId,
          fromAccountId: formData.fromAccountId,
          referenceNumber:
          /* istanbul ignore next */
          (cov_219t0k20i5().b[9][0]++, formData.referenceNumber) ||
          /* istanbul ignore next */
          (cov_219t0k20i5().b[9][1]++, undefined)
        })
      }));
      /* istanbul ignore next */
      cov_219t0k20i5().s[51]++;
      if (response.ok) {
        /* istanbul ignore next */
        cov_219t0k20i5().b[10][0]++;
        cov_219t0k20i5().s[52]++;
        onSuccess();
        /* istanbul ignore next */
        cov_219t0k20i5().s[53]++;
        onClose();
      } else {
        /* istanbul ignore next */
        cov_219t0k20i5().b[10][1]++;
        const errorData =
        /* istanbul ignore next */
        (cov_219t0k20i5().s[54]++, await response.json());
        /* istanbul ignore next */
        cov_219t0k20i5().s[55]++;
        setErrors({
          submit:
          /* istanbul ignore next */
          (cov_219t0k20i5().b[11][0]++, errorData.error) ||
          /* istanbul ignore next */
          (cov_219t0k20i5().b[11][1]++, "Failed to record expense payment")
        });
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_219t0k20i5().s[56]++;
      console.error("Error submitting expense payment:", error);
      /* istanbul ignore next */
      cov_219t0k20i5().s[57]++;
      setErrors({
        submit: "An error occurred while recording the expense payment"
      });
    } finally {
      /* istanbul ignore next */
      cov_219t0k20i5().s[58]++;
      setSubmitting(false);
    }
  };
  const expenseAccounts =
  /* istanbul ignore next */
  (cov_219t0k20i5().s[59]++, accounts.filter(account => {
    /* istanbul ignore next */
    cov_219t0k20i5().f[9]++;
    cov_219t0k20i5().s[60]++;
    return /* istanbul ignore next */(cov_219t0k20i5().b[12][0]++, account.type === "expense") ||
    /* istanbul ignore next */
    (cov_219t0k20i5().b[12][1]++, account.name.toLowerCase().includes("expense"));
  }));
  const sourceAccounts =
  /* istanbul ignore next */
  (cov_219t0k20i5().s[61]++, accounts.filter(account => {
    /* istanbul ignore next */
    cov_219t0k20i5().f[10]++;
    cov_219t0k20i5().s[62]++;
    return /* istanbul ignore next */(cov_219t0k20i5().b[13][0]++, account.type === "asset") ||
    /* istanbul ignore next */
    (cov_219t0k20i5().b[13][1]++, account.type === "revenue") ||
    /* istanbul ignore next */
    (cov_219t0k20i5().b[13][2]++, account.type === "income") ||
    /* istanbul ignore next */
    (cov_219t0k20i5().b[13][3]++, account.name.toLowerCase().includes("cash")) ||
    /* istanbul ignore next */
    (cov_219t0k20i5().b[13][4]++, account.name.toLowerCase().includes("bank")) ||
    /* istanbul ignore next */
    (cov_219t0k20i5().b[13][5]++, account.name.toLowerCase().includes("income")) ||
    /* istanbul ignore next */
    (cov_219t0k20i5().b[13][6]++, account.name.toLowerCase().includes("revenue"));
  }));
  /* istanbul ignore next */
  cov_219t0k20i5().s[63]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50",
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
      className: "w-full max-w-md mx-4 bg-white",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
        className: "flex flex-row items-center justify-between",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
          children: "Record Expense Payment"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          variant: "ghost",
          size: "sm",
          onClick: onClose,
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.X, {
            className: "w-4 h-4"
          })
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("form", {
          onSubmit: handleSubmit,
          className: "space-y-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "block text-sm font-medium text-gray-700 mb-1",
              children: "Amount *"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Input.Input, {
              type: "number",
              name: "amount",
              value: formData.amount,
              onChange: handleInputChange,
              placeholder: "0.00",
              step: "0.01",
              min: "0",
              className: errors.amount ?
              /* istanbul ignore next */
              (cov_219t0k20i5().b[14][0]++, "border-red-500") :
              /* istanbul ignore next */
              (cov_219t0k20i5().b[14][1]++, "")
            }),
            /* istanbul ignore next */
            (cov_219t0k20i5().b[15][0]++, errors.amount) &&
            /* istanbul ignore next */
            (cov_219t0k20i5().b[15][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-red-500 text-xs mt-1",
              children: errors.amount
            }))]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "block text-sm font-medium text-gray-700 mb-1",
              children: "Description"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Input.Input, {
              type: "text",
              name: "description",
              value: formData.description,
              onChange: handleInputChange,
              placeholder: "e.g., Salary advance, Office supplies"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "block text-sm font-medium text-gray-700 mb-1",
              children: "Expense Account *"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("select", {
              name: "expenseAccountId",
              value: formData.expenseAccountId,
              onChange: handleInputChange,
              className: `w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary ${errors.expenseAccountId ?
              /* istanbul ignore next */
              (cov_219t0k20i5().b[16][0]++, "border-red-500") :
              /* istanbul ignore next */
              (cov_219t0k20i5().b[16][1]++, "border-gray-300")}`,
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                value: "",
                children: "Select expense account"
              }), expenseAccounts.map(account => {
                /* istanbul ignore next */
                cov_219t0k20i5().f[11]++;
                cov_219t0k20i5().s[64]++;
                return /*#__PURE__*/(0, _jsxruntime.jsxs)("option", {
                  value: account.id,
                  children: [account.name, " (", account.type, ")"]
                }, account.id);
              })]
            }),
            /* istanbul ignore next */
            (cov_219t0k20i5().b[17][0]++, errors.expenseAccountId) &&
            /* istanbul ignore next */
            (cov_219t0k20i5().b[17][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-red-500 text-xs mt-1",
              children: errors.expenseAccountId
            }))]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "block text-sm font-medium text-gray-700 mb-1",
              children: "Pay From Account *"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("select", {
              name: "fromAccountId",
              value: formData.fromAccountId,
              onChange: handleInputChange,
              className: `w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary ${errors.fromAccountId ?
              /* istanbul ignore next */
              (cov_219t0k20i5().b[18][0]++, "border-red-500") :
              /* istanbul ignore next */
              (cov_219t0k20i5().b[18][1]++, "border-gray-300")}`,
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                value: "",
                children: "Select source account"
              }), sourceAccounts.map(account => {
                /* istanbul ignore next */
                cov_219t0k20i5().f[12]++;
                cov_219t0k20i5().s[65]++;
                return /*#__PURE__*/(0, _jsxruntime.jsxs)("option", {
                  value: account.id,
                  children: [account.name, " - Balance: $", typeof account.balance === "number" ?
                  /* istanbul ignore next */
                  (cov_219t0k20i5().b[19][0]++, account.balance.toFixed(2)) :
                  /* istanbul ignore next */
                  (cov_219t0k20i5().b[19][1]++, parseFloat(
                  /* istanbul ignore next */
                  (cov_219t0k20i5().b[20][0]++, account.balance) ||
                  /* istanbul ignore next */
                  (cov_219t0k20i5().b[20][1]++, "0")).toFixed(2))]
                }, account.id);
              })]
            }),
            /* istanbul ignore next */
            (cov_219t0k20i5().b[21][0]++, errors.fromAccountId) &&
            /* istanbul ignore next */
            (cov_219t0k20i5().b[21][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-red-500 text-xs mt-1",
              children: errors.fromAccountId
            }))]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "block text-sm font-medium text-gray-700 mb-1",
              children: "Payment Method"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("select", {
              name: "paymentMethod",
              value: formData.paymentMethod,
              onChange: handleInputChange,
              className: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                value: "cash",
                children: "Cash"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                value: "bank_transfer",
                children: "Bank Transfer"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                value: "check",
                children: "Check"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                value: "mobile_money",
                children: "Mobile Money"
              })]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "block text-sm font-medium text-gray-700 mb-1",
              children: "Reference Number"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Input.Input, {
              type: "text",
              name: "referenceNumber",
              value: formData.referenceNumber,
              onChange: handleInputChange,
              placeholder: "Optional reference number"
            })]
          }),
          /* istanbul ignore next */
          (cov_219t0k20i5().b[22][0]++, errors.submit) &&
          /* istanbul ignore next */
          (cov_219t0k20i5().b[22][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-red-500 text-sm",
            children: errors.submit
          })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex gap-2 pt-4",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
              type: "button",
              variant: "outline",
              onClick: onClose,
              className: "flex-1",
              children: "Cancel"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
              type: "submit",
              disabled:
              /* istanbul ignore next */
              (cov_219t0k20i5().b[23][0]++, submitting) ||
              /* istanbul ignore next */
              (cov_219t0k20i5().b[23][1]++, loading),
              className: "flex-1",
              children: submitting ?
              /* istanbul ignore next */
              (cov_219t0k20i5().b[24][0]++, "Recording...") :
              /* istanbul ignore next */
              (cov_219t0k20i5().b[24][1]++, "Record Payment")
            })]
          })]
        })
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,