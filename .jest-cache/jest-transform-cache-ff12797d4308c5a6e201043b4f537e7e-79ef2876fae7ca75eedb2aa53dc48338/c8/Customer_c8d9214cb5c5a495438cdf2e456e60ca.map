{"version":3,"names":["_default","Customer","_sequelize","Model","getCurrentBalance","cov_1r0p31bphc","f","Invoice","s","_db","default","model","Payment","invoices","findAll","where","customer_id","id","totalInvoiced","reduce","sum","invoice","get","payments","include","totalPaid","payment","init","type","DataTypes","INTEGER","primaryKey","autoIncrement","name","STRING","allowNull","validate","notEmpty","email","unique","isEmail","phone","address","TEXT","defaultValue","isIn","creditLimit","DECIMAL","min","creditPeriod","isActive","BOOLEAN","sequelize","modelName","tableName","timestamps","underscored"],"sources":["/Users/sachin/Documents/md-sports-/src/lib/models/Customer.ts"],"sourcesContent":["import { Model, DataTypes, Optional } from 'sequelize';\nimport sequelize from '../db';\n\n// Define attributes interface\ninterface CustomerAttributes {\n    id: number;\n    name: string;\n    email?: string;\n    phone?: string;\n    address?: string;\n    type: 'wholesale' | 'retail';\n    creditLimit?: number;\n    creditPeriod?: number;\n    isActive: boolean;\n    createdAt?: Date;\n    updatedAt?: Date;\n}\n\n// Define creation attributes (making id optional as it has a default)\ninterface CustomerCreationAttributes extends Optional<CustomerAttributes, 'id' | 'createdAt' | 'updatedAt' | 'email' | 'phone' | 'address' | 'creditLimit' | 'creditPeriod'> { }\n\nclass Customer extends Model<CustomerAttributes, CustomerCreationAttributes> implements CustomerAttributes {\n    public id!: number;\n    public name!: string;\n    public email!: string;\n    public phone!: string;\n    public address!: string;\n    public type!: 'wholesale' | 'retail';\n    public creditLimit!: number;\n    public creditPeriod!: number;\n    public isActive!: boolean;\n    public readonly createdAt!: Date;\n    public readonly updatedAt!: Date;\n\n    // Custom instance methods\n    public async getCurrentBalance(): Promise<number> {\n        const Invoice = sequelize.model('invoice');\n        const Payment = sequelize.model('payment');\n\n        // Calculate total invoice amount\n        const invoices = await Invoice.findAll({\n            where: { customer_id: this.id }\n        });\n\n        const totalInvoiced = invoices.reduce((sum, invoice) =>\n            sum + (invoice.get('total') as number), 0);\n\n        // Calculate total payments\n        const payments = await Payment.findAll({\n            include: [{\n                model: Invoice,\n                where: { customer_id: this.id }\n            }]\n        });\n\n        const totalPaid = payments.reduce((sum, payment) =>\n            sum + (payment.get('amount') as number), 0);\n\n        // Return balance (invoiced - paid)\n        return totalInvoiced - totalPaid;\n    }\n}\n\nCustomer.init({\n    id: {\n        type: DataTypes.INTEGER,\n        primaryKey: true,\n        autoIncrement: true\n    },\n    name: {\n        type: DataTypes.STRING(100),\n        allowNull: false,\n        validate: {\n            notEmpty: true\n        }\n    },\n    email: {\n        type: DataTypes.STRING(100),\n        allowNull: true,\n        unique: true,\n        validate: {\n            isEmail: true\n        }\n    },\n    phone: {\n        type: DataTypes.STRING(20),\n        allowNull: true\n    },\n    address: {\n        type: DataTypes.TEXT,\n        allowNull: true\n    },\n    type: {\n        type: DataTypes.STRING(10),\n        allowNull: false,\n        defaultValue: 'retail',\n        validate: {\n            isIn: [['wholesale', 'retail']]\n        }\n    },\n    creditLimit: {\n        type: DataTypes.DECIMAL(10, 2),\n        allowNull: true,\n        defaultValue: 0.00,\n        validate: {\n            min: 0\n        }\n    },\n    creditPeriod: {\n        type: DataTypes.INTEGER,\n        allowNull: true,\n        validate: {\n            min: 0\n        }\n    },\n    isActive: {\n        type: DataTypes.BOOLEAN,\n        allowNull: false,\n        defaultValue: true\n    }\n}, {\n    sequelize,\n    modelName: 'customer',\n    tableName: 'customers',\n    timestamps: true,\n    underscored: true\n});\n\nexport default Customer; "],"mappings":"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","ignoreList":[]}