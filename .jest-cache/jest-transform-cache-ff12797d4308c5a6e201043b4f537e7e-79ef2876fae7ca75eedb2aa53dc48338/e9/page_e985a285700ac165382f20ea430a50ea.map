{"version":3,"names":["ProductDetail","cov_1inllx6ad7","s","fetchProductDetails","id","f","response","fetch","method","headers","ok","b","Error","responseData","json","success","message","productData","data","totalStock","inventory","reduce","sum","item","quantity","branchStock","map","branchId","shop_id","toString","branchName","shop_name","salesResponse","invoices","salesMetrics","daily","weekly","monthly","salesData","metrics","name","category","category_name","stock","retailPrice","price","wholesalePrice","weightedAverageCost","status","sales","getStatusBadgeClass","renderClickableReference","event","relatedDocumentId","type","details","invoiceNumber","_jsxruntime","jsx","_link","default","href","className","title","includes","ShopSection","shopName","expanded","setExpanded","_react","useState","jsxs","onClick","_lucidereact","Store","ChevronUp","ChevronDown","invoice","Date","date","toLocaleDateString","User","cashierName","total","toLocaleString","StatCard","value","icon","params","_navigation","useParams","router","useRouter","product","setProduct","isLoading","setIsLoading","activeTab","setActiveTab","productHistory","setProductHistory","isLoadingHistory","setIsLoadingHistory","selectedEventTypes","setSelectedEventTypes","historyStartDate","setHistoryStartDate","historyEndDate","setHistoryEndDate","invoicesByShop","forEach","push","useEffect","productId","Array","isArray","loadProductData","error","console","productIdStr","fetchHistory","queryParams","URLSearchParams","length","append","join","historyData","getHistoryIcon","ShoppingCart","Tag","Repeat","Edit3","ArrowLeft","Info","getSalesDataByLocation","salesByShop","shopId","Object","values","getSalesDistributionData","entries","CHART_COLORS","_MainLayout","_Button","Button","variant","size","Package","Fragment","Math","round","branch","Calendar","BarChart4","TrendingUp","_recharts","ResponsiveContainer","width","height","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","yAxisId","orientation","stroke","Tooltip","Legend","Bar","fill","PieChart","Pie","cx","cy","labelLine","outerRadius","nameKey","label","percent","toFixed","entry","index","Cell","formatter","Number","FileText","keys","htmlFor","multiple","onChange","e","from","target","selectedOptions","option","timestamp","description","quantityChange","undefined","userName"],"sources":["/Users/sachin/Documents/md-sports-/src/app/inventory/[productId]/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useParams, useRouter } from 'next/navigation';\nimport Link from 'next/link';\nimport MainLayout from '@/components/layout/MainLayout';\nimport {\n    Package,\n    BarChart4,\n    Calendar,\n    Store,\n    User,\n    FileText,\n    ArrowLeft,\n    TrendingUp,\n    ChevronDown,\n    ChevronUp,\n    Info,\n    ShoppingCart,\n    Tag,\n    Repeat,\n    Edit3\n} from 'lucide-react';\nimport { Button } from '@/components/ui/Button';\nimport {\n    BarChart,\n    Bar,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    ResponsiveContainer,\n    PieChart,\n    Pie,\n    Cell\n} from 'recharts';\n\n// Types\ninterface BranchStock {\n    branchId: string;\n    branchName: string;\n    quantity: number;\n}\n\ninterface Invoice {\n    id: string;\n    date: string;\n    shopId: string;\n    shopName: string;\n    cashierName: string;\n    quantity: number;\n    total: number;\n}\n\ninterface ProductSales {\n    daily: number;\n    weekly: number;\n    monthly: number;\n}\n\ninterface ProductHistoryEvent {\n    timestamp: string;\n    type: string;\n    description: string;\n    quantityChange?: number;\n    shopId?: number;\n    shopName?: string;\n    userId?: number;\n    userName?: string;\n    relatedDocumentId?: string;\n    details?: any;\n}\n\ninterface ProductDetail {\n    id: string;\n    name: string;\n    category: string;\n    stock: number;\n    retailPrice: number;\n    wholesalePrice: number;\n    weightedAverageCost: number;\n    status: string;\n    branchStock: BranchStock[];\n    invoices: Invoice[];\n    sales: ProductSales;\n}\n\n// Mock data function - in a real app, this would fetch data from an API\nconst fetchProductDetails = async (id: string): Promise<ProductDetail> => {\n    // Make a real API call to the product endpoint\n    const response = await fetch(`/api/products/${id}`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    });\n\n    if (!response.ok) {\n        throw new Error('Failed to fetch product details');\n    }\n\n    const responseData = await response.json();\n\n    if (!responseData.success) {\n        throw new Error(responseData.message || 'Failed to fetch product details');\n    }\n\n    const productData = responseData.data;\n\n    // Get total stock quantity across all locations\n    const totalStock = productData.inventory.reduce(\n        (sum: number, item: any) => sum + item.quantity,\n        0\n    );\n\n    // Prepare branch stock data from inventory items\n    const branchStock: BranchStock[] = productData.inventory.map((item: any) => ({\n        branchId: item.shop_id.toString(),\n        branchName: item.shop_name,\n        quantity: item.quantity\n    }));\n\n    // Fetch sales history data from the API\n    const salesResponse = await fetch(`/api/products/${id}/sales`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    });\n\n    let invoices: Invoice[] = [];\n    let salesMetrics = {\n        daily: 0,\n        weekly: 0,\n        monthly: 0\n    };\n\n    // If the sales history API is successful, use the data; otherwise use default values\n    if (salesResponse.ok) {\n        const salesData = await salesResponse.json();\n        if (salesData.success) {\n            invoices = salesData.data.invoices;\n            salesMetrics = {\n                daily: salesData.data.metrics.daily,\n                weekly: salesData.data.metrics.weekly,\n                monthly: salesData.data.metrics.monthly\n            };\n        }\n    }\n\n    // Transform the API response to match our ProductDetail interface\n    return {\n        id: productData.id.toString(),\n        name: productData.name,\n        category: productData.category_name || 'Uncategorized',\n        stock: totalStock,\n        retailPrice: productData.price,\n        wholesalePrice: productData.wholesalePrice || productData.price * 0.85, // Default calculation if not available\n        weightedAverageCost: productData.weightedAverageCost || 0,\n        status: totalStock > 0 ? (totalStock < 10 ? 'Low Stock' : 'In Stock') : 'Out of Stock',\n        branchStock,\n        invoices,\n        sales: salesMetrics\n    };\n};\n\n// Status badge color function\nconst getStatusBadgeClass = (status: string) => {\n    switch (status) {\n        case 'In Stock':\n            return 'bg-green-100 text-green-800';\n        case 'Low Stock':\n            return 'bg-yellow-100 text-yellow-800';\n        case 'Out of Stock':\n            return 'bg-red-100 text-red-800';\n        default:\n            return 'bg-gray-100 text-gray-800';\n    }\n};\n\n// Function to render clickable reference links\nconst renderClickableReference = (event: ProductHistoryEvent) => {\n    const { relatedDocumentId, type, details } = event;\n    \n    if (!relatedDocumentId) return null;\n    \n    // Extract invoice number or ID from relatedDocumentId\n    if (type === 'Purchase' && details?.invoiceNumber) {\n        // For purchase invoices, link to purchases page with search\n        // This will filter the purchases list to show the specific invoice\n        return (\n            <Link \n                href={`/purchases?search=${details.invoiceNumber}`}\n                className=\"text-blue-600 hover:text-blue-800 hover:underline cursor-pointer transition-colors\"\n                title={`View Purchase Invoice ${details.invoiceNumber}`}\n            >\n                {relatedDocumentId}\n            </Link>\n        );\n    } else if (type === 'Sale' && details?.invoiceNumber) {\n        // For sales invoices, link to invoices page with search\n        // This will filter the invoices list to show the specific invoice\n        return (\n            <Link \n                href={`/invoices?search=${details.invoiceNumber}`}\n                className=\"text-blue-600 hover:text-blue-800 hover:underline cursor-pointer transition-colors\"\n                title={`View Sales Invoice ${details.invoiceNumber}`}\n            >\n                {relatedDocumentId}\n            </Link>\n        );\n    } else if (type.includes('Transfer') && details) {\n        // For transfers, we could link to a transfers page if it exists\n        // For now, we'll just show the text without a link but with a different style\n        return (\n            <span \n                className=\"text-gray-600 font-medium\"\n                title=\"Transfer details\"\n            >\n                {relatedDocumentId}\n            </span>\n        );\n    }\n    \n    // Default case - just show the text\n    return (\n        <span \n            className=\"text-gray-600\"\n            title=\"Reference ID\"\n        >\n            {relatedDocumentId}\n        </span>\n    );\n};\n\n// Shop section component for better organization\nconst ShopSection = ({\n    shopName,\n    invoices\n}: {\n    shopName: string,\n    invoices: Invoice[]\n}) => {\n    const [expanded, setExpanded] = useState(true);\n\n    return (\n        <div className=\"mb-6 border rounded-lg overflow-hidden\">\n            <div\n                className=\"bg-gray-50 p-3 flex justify-between items-center cursor-pointer\"\n                onClick={() => setExpanded(!expanded)}\n            >\n                <div className=\"flex items-center\">\n                    <Store className=\"w-4 h-4 mr-2 text-black\" />\n                    <h3 className=\"font-semibold text-black\">{shopName}</h3>\n                </div>\n                {expanded ? <ChevronUp className=\"w-4 h-4 text-black\" /> : <ChevronDown className=\"w-4 h-4 text-black\" />}\n            </div>\n\n            {expanded && (\n                <div className=\"p-4\">\n                    <table className=\"w-full text-sm\">\n                        <thead className=\"text-xs text-black uppercase bg-gray-50\">\n                            <tr>\n                                <th className=\"px-4 py-2 text-left\">Invoice ID</th>\n                                <th className=\"px-4 py-2 text-left\">Date</th>\n                                <th className=\"px-4 py-2 text-left\">Cashier</th>\n                                <th className=\"px-4 py-2 text-left\">Quantity</th>\n                                <th className=\"px-4 py-2 text-left\">Total</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {invoices.map(invoice => (\n                                <tr key={invoice.id} className=\"border-b hover:bg-gray-50\">\n                                    <td className=\"px-4 py-2 text-black\">{invoice.id}</td>\n                                    <td className=\"px-4 py-2 text-black\">{new Date(invoice.date).toLocaleDateString()}</td>\n                                    <td className=\"px-4 py-2\">\n                                        <div className=\"flex items-center text-black\">\n                                            <User className=\"w-3 h-3 mr-1 text-black\" />\n                                            {invoice.cashierName}\n                                        </div>\n                                    </td>\n                                    <td className=\"px-4 py-2 text-black\">{invoice.quantity}</td>\n                                    <td className=\"px-4 py-2 text-black\">Rs. {invoice.total.toLocaleString()}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            )}\n        </div>\n    );\n};\n\n// Sales stat card\nconst StatCard = ({\n    title,\n    value,\n    icon\n}: {\n    title: string,\n    value: number,\n    icon: React.ReactNode\n}) => (\n    <div className=\"bg-white p-4 rounded-lg border shadow-sm\">\n        <div className=\"flex justify-between items-start\">\n            <div>\n                <p className=\"text-sm text-black\">{title}</p>\n                <p className=\"text-2xl font-semibold mt-1 text-black\">{value}</p>\n            </div>\n            <div className=\"p-2 rounded-full bg-primary/10 text-primary\">\n                {icon}\n            </div>\n        </div>\n    </div>\n);\n\nexport default function ProductDetail() {\n    const params = useParams();\n    const router = useRouter();\n    const [product, setProduct] = useState<ProductDetail | null>(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [activeTab, setActiveTab] = useState('details');\n    const [productHistory, setProductHistory] = useState<ProductHistoryEvent[]>([]);\n    const [isLoadingHistory, setIsLoadingHistory] = useState(false);\n\n    // New filter states for Product History\n    const [selectedEventTypes, setSelectedEventTypes] = useState<string[]>([]);\n    const [historyStartDate, setHistoryStartDate] = useState<string>('');\n    const [historyEndDate, setHistoryEndDate] = useState<string>('');\n\n    // Group invoices by shop\n    const invoicesByShop: Record<string, Invoice[]> = {};\n\n    if (product) {\n        product.invoices.forEach(invoice => {\n            if (!invoicesByShop[invoice.shopName]) {\n                invoicesByShop[invoice.shopName] = [];\n            }\n            invoicesByShop[invoice.shopName].push(invoice);\n        });\n    }\n\n    useEffect(() => {\n        if (!params.productId) return;\n\n        const productId = Array.isArray(params.productId)\n            ? params.productId[0]\n            : params.productId;\n\n        setIsLoading(true);\n\n        const loadProductData = async () => {\n            try {\n                const data = await fetchProductDetails(productId);\n                setProduct(data);\n            } catch (error) {\n                console.error('Error fetching product details:', error);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        loadProductData();\n    }, [params.productId]);\n\n    // useEffect to fetch product history when activeTab is 'history' or productId changes\n    useEffect(() => {\n        if (!params.productId || activeTab !== 'history') {\n            // Clear history if not on history tab or no product\n            // setProductHistory([]); // Optional: clear if you want fresh load every time tab is clicked\n            return;\n        }\n\n        const productIdStr = Array.isArray(params.productId) ? params.productId[0] : params.productId;\n\n        const fetchHistory = async () => {\n            setIsLoadingHistory(true);\n            const queryParams = new URLSearchParams();\n            if (selectedEventTypes.length > 0) {\n                queryParams.append('eventTypes', selectedEventTypes.join(','));\n            }\n            if (historyStartDate) {\n                queryParams.append('startDate', historyStartDate);\n            }\n            if (historyEndDate) {\n                queryParams.append('endDate', historyEndDate);\n            }\n\n            try {\n                const response = await fetch(`/api/products/${productIdStr}/history?${queryParams.toString()}`);\n                if (!response.ok) {\n                    throw new Error('Failed to fetch product history');\n                }\n                const historyData = await response.json();\n                if (historyData.success) {\n                    setProductHistory(historyData.data);\n                } else {\n                    console.error('Error in history API response:', historyData.message);\n                    setProductHistory([]);\n                }\n            } catch (error) {\n                console.error('Error fetching product history:', error);\n                setProductHistory([]);\n            } finally {\n                setIsLoadingHistory(false);\n                // If all initial data is loaded, set main loading to false\n                if (product) setIsLoading(false);\n            }\n        };\n\n        if (productIdStr) {\n            fetchHistory();\n        }\n\n    }, [params.productId, activeTab, product, selectedEventTypes, historyStartDate, historyEndDate]); // Add filter states to dependency array\n\n    // Helper to get an icon based on history event type\n    const getHistoryIcon = (type: string) => {\n        switch (type) {\n            case 'Purchase': return <ShoppingCart className=\"w-5 h-5 text-blue-500\" />;\n            case 'Sale': return <Tag className=\"w-5 h-5 text-green-500\" />;\n            case 'Transfer In':\n            case 'Transfer Out': return <Repeat className=\"w-5 h-5 text-purple-500\" />;\n            case 'Product Update': return <Edit3 className=\"w-5 h-5 text-orange-500\" />;\n            case 'Stock Added': return <ArrowLeft className=\"w-5 h-5 text-teal-500 transform rotate-45\" />; // Example icon\n            default: return <Info className=\"w-5 h-5 text-gray-500\" />;\n        }\n    };\n\n    // Prepare data for charts\n    const getSalesDataByLocation = () => {\n        if (!product) return [];\n\n        // Count quantity and total sales by shop\n        const salesByShop: Record<string, { shopName: string, quantity: number, total: number }> = {};\n\n        product.invoices.forEach(invoice => {\n            if (!salesByShop[invoice.shopId]) {\n                salesByShop[invoice.shopId] = {\n                    shopName: invoice.shopName,\n                    quantity: 0,\n                    total: 0\n                };\n            }\n\n            salesByShop[invoice.shopId].quantity += invoice.quantity;\n            salesByShop[invoice.shopId].total += invoice.total;\n        });\n\n        // Convert to array for Recharts\n        return Object.values(salesByShop).map(item => ({\n            name: item.shopName,\n            quantity: item.quantity,\n            sales: item.total\n        }));\n    };\n\n    // Pie chart data for sales distribution\n    const getSalesDistributionData = () => {\n        if (!product) return [];\n\n        const salesByShop: Record<string, number> = {};\n\n        product.invoices.forEach(invoice => {\n            if (!salesByShop[invoice.shopName]) {\n                salesByShop[invoice.shopName] = 0;\n            }\n\n            salesByShop[invoice.shopName] += invoice.total;\n        });\n\n        return Object.entries(salesByShop).map(([name, value]) => ({\n            name,\n            value\n        }));\n    };\n\n    // Colors for pie chart\n    const CHART_COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#A28CD2'];\n\n    if (isLoading) {\n        return (\n            <MainLayout>\n                <div className=\"flex items-center justify-center h-64\">\n                    <div className=\"text-center\">\n                        <div className=\"w-8 h-8 border-4 border-primary border-t-transparent rounded-full animate-spin mx-auto\"></div>\n                        <p className=\"mt-2 text-black\">Loading product details...</p>\n                    </div>\n                </div>\n            </MainLayout>\n        );\n    }\n\n    if (!product) {\n        return (\n            <MainLayout>\n                <div className=\"text-center py-12\">\n                    <h2 className=\"text-2xl font-bold text-black\">Product Not Found</h2>\n                    <p className=\"text-black mt-2\">The product you're looking for doesn't exist or has been removed.</p>\n                    <Button\n                        variant=\"primary\"\n                        size=\"sm\"\n                        className=\"mt-4\"\n                        onClick={() => router.push('/inventory')}\n                    >\n                        <ArrowLeft className=\"w-4 h-4 mr-2\" />\n                        Back to Inventory\n                    </Button>\n                </div>\n            </MainLayout>\n        );\n    }\n\n    return (\n        <MainLayout>\n            <div className=\"space-y-6\">\n                {/* Back button and header */}\n                <div>\n                    <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        className=\"mb-4\"\n                        onClick={() => router.push('/inventory')}\n                    >\n                        <ArrowLeft className=\"w-4 h-4 mr-2\" />\n                        Back to Inventory\n                    </Button>\n\n                    <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\n                        <div className=\"flex items-center\">\n                            <div className=\"p-2 rounded-full bg-primary/10 text-primary mr-3\">\n                                <Package className=\"w-6 h-6\" />\n                            </div>\n                            <div>\n                                <h1 className=\"text-2xl font-bold text-black\">{product.name}</h1>\n                                <p className=\"text-black\">{product.id} &middot; {product.category}</p>\n                            </div>\n                        </div>\n                        <div>\n                            <span className={`px-3 py-1 rounded-full text-sm ${getStatusBadgeClass(product.status)}`}>\n                                {product.status}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Tabs */}\n                <div className=\"border-b\">\n                    <nav className=\"-mb-px flex space-x-6\">\n                        <button\n                            className={`py-2 px-1 border-b-2 font-medium text-sm ${activeTab === 'details'\n                                ? 'border-primary text-primary'\n                                : 'border-transparent text-black hover:text-gray-700 hover:border-gray-300'\n                                }`}\n                            onClick={() => setActiveTab('details')}\n                        >\n                            Product Details\n                        </button>\n                        <button\n                            className={`py-2 px-1 border-b-2 font-medium text-sm ${activeTab === 'sales'\n                                ? 'border-primary text-primary'\n                                : 'border-transparent text-black hover:text-gray-700 hover:border-gray-300'\n                                }`}\n                            onClick={() => setActiveTab('sales')}\n                        >\n                            Sales History\n                        </button>\n                        <button\n                            className={`py-2 px-1 border-b-2 font-medium text-sm ${activeTab === 'history'\n                                ? 'border-primary text-primary'\n                                : 'border-transparent text-black hover:text-gray-700 hover:border-gray-300'\n                                }`}\n                            onClick={() => setActiveTab('history')}\n                        >\n                            Product History\n                        </button>\n                    </nav>\n                </div>\n\n                {/* Content based on active tab */}\n                {activeTab === 'details' && (\n                    <>\n                        {/* Stats cards */}\n                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n                            <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n                                <h3 className=\"text-sm font-medium text-black\">Retail Price</h3>\n                                <p className=\"text-2xl font-bold mt-1 text-black\">Rs. {product.retailPrice.toLocaleString()}</p>\n                            </div>\n                            <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n                                <h3 className=\"text-sm font-medium text-black\">Weighted Average Cost</h3>\n                                <p className=\"text-2xl font-bold mt-1 text-black\">Rs. {product.weightedAverageCost.toLocaleString()}</p>\n                                <div className=\"mt-2 text-sm text-black\">Margin: {product.weightedAverageCost > 0 ? Math.round(((product.retailPrice - product.weightedAverageCost) / product.weightedAverageCost) * 100) : 'N/A'}%</div>\n                            </div>\n                            <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n                                <h3 className=\"text-sm font-medium text-black\">Total Stock</h3>\n                                <p className=\"text-2xl font-bold mt-1 text-black\">{product.stock} units</p>\n                                <div className=\"mt-2 text-sm text-black\">Across {product.branchStock.length} locations</div>\n                            </div>\n                        </div>\n\n                        {/* Stock by branch */}\n                        <div className=\"bg-white rounded-lg border shadow-sm\">\n                            <div className=\"p-4 border-b\">\n                                <h2 className=\"font-semibold text-lg text-black\">Stock by Location</h2>\n                            </div>\n                            <div className=\"p-4\">\n                                <table className=\"w-full text-sm\">\n                                    <thead className=\"text-xs text-black uppercase bg-gray-50\">\n                                        <tr>\n                                            <th className=\"px-4 py-2 text-left\">Branch ID</th>\n                                            <th className=\"px-4 py-2 text-left\">Branch Name</th>\n                                            <th className=\"px-4 py-2 text-left\">Quantity</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {product.branchStock.map((branch) => (\n                                            <tr key={branch.branchId} className=\"border-b\">\n                                                <td className=\"px-4 py-2 text-black\">{branch.branchId}</td>\n                                                <td className=\"px-4 py-2\">\n                                                    <div className=\"flex items-center text-black\">\n                                                        <Store className=\"w-4 h-4 mr-2 text-black\" />\n                                                        {branch.branchName}\n                                                    </div>\n                                                </td>\n                                                <td className=\"px-4 py-2 text-black\">{branch.quantity}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </>\n                )}\n\n                {activeTab === 'sales' && (\n                    <>\n                        {/* Sales stats */}\n                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n                            <StatCard\n                                title=\"Daily Sales\"\n                                value={product.sales.daily}\n                                icon={<Calendar className=\"w-5 h-5\" />}\n                            />\n                            <StatCard\n                                title=\"Weekly Sales\"\n                                value={product.sales.weekly}\n                                icon={<BarChart4 className=\"w-5 h-5\" />}\n                            />\n                            <StatCard\n                                title=\"Monthly Sales\"\n                                value={product.sales.monthly}\n                                icon={<TrendingUp className=\"w-5 h-5\" />}\n                            />\n                        </div>\n\n                        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\n                            {/* Sales by Location - Bar Chart */}\n                            <div className=\"bg-white rounded-lg border shadow-sm\">\n                                <div className=\"p-4 border-b\">\n                                    <h2 className=\"font-semibold text-lg text-black\">Sales by Location</h2>\n                                </div>\n                                <div className=\"p-4\">\n                                    <div className=\"h-64\">\n                                        <ResponsiveContainer width=\"100%\" height=\"100%\">\n                                            <BarChart\n                                                data={getSalesDataByLocation()}\n                                                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                                            >\n                                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                                <XAxis dataKey=\"name\" />\n                                                <YAxis yAxisId=\"left\" orientation=\"left\" stroke=\"#8884d8\" />\n                                                <YAxis yAxisId=\"right\" orientation=\"right\" stroke=\"#82ca9d\" />\n                                                <Tooltip />\n                                                <Legend />\n                                                <Bar yAxisId=\"left\" dataKey=\"quantity\" name=\"Units Sold\" fill=\"#8884d8\" />\n                                                <Bar yAxisId=\"right\" dataKey=\"sales\" name=\"Sales (Rs.)\" fill=\"#82ca9d\" />\n                                            </BarChart>\n                                        </ResponsiveContainer>\n                                    </div>\n                                </div>\n                            </div>\n\n                            {/* Sales Distribution - Pie Chart */}\n                            <div className=\"bg-white rounded-lg border shadow-sm\">\n                                <div className=\"p-4 border-b\">\n                                    <h2 className=\"font-semibold text-lg text-black\">Sales Distribution</h2>\n                                </div>\n                                <div className=\"p-4\">\n                                    <div className=\"h-64\">\n                                        <ResponsiveContainer width=\"100%\" height=\"100%\">\n                                            <PieChart>\n                                                <Pie\n                                                    data={getSalesDistributionData()}\n                                                    cx=\"50%\"\n                                                    cy=\"50%\"\n                                                    labelLine={false}\n                                                    outerRadius={80}\n                                                    fill=\"#8884d8\"\n                                                    dataKey=\"value\"\n                                                    nameKey=\"name\"\n                                                    label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\n                                                >\n                                                    {getSalesDistributionData().map((entry, index) => (\n                                                        <Cell key={`cell-${index}`} fill={CHART_COLORS[index % CHART_COLORS.length]} />\n                                                    ))}\n                                                </Pie>\n                                                <Tooltip formatter={(value) => `Rs. ${Number(value).toLocaleString()}`} />\n                                            </PieChart>\n                                        </ResponsiveContainer>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        {/* Invoices by shop */}\n                        <div className=\"bg-white rounded-lg border shadow-sm\">\n                            <div className=\"p-4 border-b flex items-center justify-between\">\n                                <h2 className=\"font-semibold text-lg text-black\">Sales History by Shop</h2>\n                                <div className=\"text-sm text-black\">\n                                    <FileText className=\"w-4 h-4 inline mr-1\" />\n                                    {product.invoices.length} Invoices\n                                </div>\n                            </div>\n                            <div className=\"p-4\">\n                                {Object.keys(invoicesByShop).map(shopName => (\n                                    <ShopSection\n                                        key={shopName}\n                                        shopName={shopName}\n                                        invoices={invoicesByShop[shopName]}\n                                    />\n                                ))}\n                            </div>\n                        </div>\n                    </>\n                )}\n\n                {activeTab === 'history' && (\n                    <div className=\"bg-white rounded-lg border shadow-sm p-6\">\n                        <h2 className=\"font-semibold text-lg text-black mb-4\">Product Event History</h2>\n\n                        {/* Filter Controls */}\n                        <div className=\"mb-6 p-4 border rounded-md bg-gray-50 grid grid-cols-1 md:grid-cols-3 gap-4 items-end\">\n                            <div>\n                                <label htmlFor=\"event-type-filter\" className=\"block text-sm font-medium text-gray-700 mb-1\">Event Type(s)</label>\n                                <select\n                                    id=\"event-type-filter\"\n                                    multiple\n                                    className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5 h-32\"\n                                    value={selectedEventTypes}\n                                    onChange={(e) => setSelectedEventTypes(Array.from(e.target.selectedOptions, option => option.value))}\n                                >\n                                    <option value=\"Purchase\">Purchase</option>\n                                    <option value=\"Sale\">Sale</option>\n                                    <option value=\"Transfer In\">Transfer In</option>\n                                    <option value=\"Transfer Out\">Transfer Out</option>\n                                    <option value=\"Product Update\">Product Update</option>\n                                    <option value=\"Stock Added\">Stock Added</option>\n                                </select>\n                                <p className=\"text-xs text-gray-500 mt-1\">Hold Ctrl/Cmd to select multiple.</p>\n                            </div>\n                            <div>\n                                <label htmlFor=\"history-start-date\" className=\"block text-sm font-medium text-gray-700 mb-1\">Start Date</label>\n                                <input\n                                    type=\"date\"\n                                    id=\"history-start-date\"\n                                    className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5\"\n                                    value={historyStartDate}\n                                    onChange={(e) => setHistoryStartDate(e.target.value)}\n                                />\n                            </div>\n                            <div>\n                                <label htmlFor=\"history-end-date\" className=\"block text-sm font-medium text-gray-700 mb-1\">End Date</label>\n                                <input\n                                    type=\"date\"\n                                    id=\"history-end-date\"\n                                    className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5\"\n                                    value={historyEndDate}\n                                    onChange={(e) => setHistoryEndDate(e.target.value)}\n                                />\n                            </div>\n                        </div>\n\n                        {isLoadingHistory ? (\n                            <div className=\"text-center py-4\">\n                                <div className=\"w-6 h-6 border-4 border-primary border-t-transparent rounded-full animate-spin mx-auto\"></div>\n                                <p className=\"mt-2 text-black\">Loading history...</p>\n                            </div>\n                        ) : productHistory.length > 0 ? (\n                            <ul className=\"space-y-4\">\n                                {productHistory.map((event, index) => (\n                                    <li key={index} className=\"flex items-start space-x-3 p-3 border-b last:border-b-0\">\n                                        <div className=\"flex-shrink-0 pt-1\">\n                                            {getHistoryIcon(event.type)}\n                                        </div>\n                                        <div className=\"flex-1\">\n                                            <div className=\"flex justify-between items-center\">\n                                                <p className=\"text-sm font-semibold text-black\">{event.type}</p>\n                                                <p className=\"text-xs text-gray-500\">{new Date(event.timestamp).toLocaleString()}</p>\n                                            </div>\n                                            <p className=\"mt-1 text-sm text-black whitespace-pre-line\">{event.description}</p>\n                                            {event.quantityChange !== undefined && (\n                                                <p className=\"text-xs mt-1 font-medium text-black\">\n                                                    Quantity Change: <span className={event.quantityChange > 0 ? 'text-green-600' : 'text-red-600'}>{event.quantityChange > 0 ? '+' : ''}{event.quantityChange} units</span>\n                                                </p>\n                                            )}\n                                            {event.shopName && <p className=\"text-xs mt-1 text-gray-600\">Shop: {event.shopName}</p>}\n                                            {event.userName && <p className=\"text-xs mt-1 text-gray-600\">User: {event.userName}</p>}\n                                            {event.relatedDocumentId && (\n                                                <p className=\"text-xs mt-1 text-gray-600\">\n                                                    Ref: {renderClickableReference(event)}\n                                                </p>\n                                            )}\n                                            {/* Optionally, add a way to view raw event.details if needed */}\n                                        </div>\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : (\n                            <p className=\"text-black text-center py-4\">No history events found for this product.</p>\n                        )}\n                    </div>\n                )}\n            </div>\n        </MainLayout>\n    );\n}"],"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","ignoreList":[]}