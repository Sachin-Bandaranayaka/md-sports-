0dd688fbec2482fb0f61be7fef900b99
"use strict";

/* istanbul ignore next */
function cov_h10jxyh9u() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/inventory/shop/[id]/route.ts";
  var hash = "2ab27bb6424b7ffbe1ac021c27b0a9dc7876dd27";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/inventory/shop/[id]/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 19
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 21
        },
        end: {
          line: 12,
          column: 67
        }
      },
      "5": {
        start: {
          line: 13,
          column: 26
        },
        end: {
          line: 13,
          column: 86
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 17,
          column: 6
        }
      },
      "7": {
        start: {
          line: 21,
          column: 18
        },
        end: {
          line: 21,
          column: 74
        }
      },
      "8": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "9": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 28,
          column: 11
        }
      },
      "10": {
        start: {
          line: 31,
          column: 17
        },
        end: {
          line: 31,
          column: 64
        }
      },
      "11": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "12": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 38,
          column: 11
        }
      },
      "13": {
        start: {
          line: 41,
          column: 25
        },
        end: {
          line: 41,
          column: 75
        }
      },
      "14": {
        start: {
          line: 42,
          column: 24
        },
        end: {
          line: 42,
          column: 68
        }
      },
      "15": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "16": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 49,
          column: 11
        }
      },
      "17": {
        start: {
          line: 52,
          column: 25
        },
        end: {
          line: 52,
          column: 53
        }
      },
      "18": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 104,
          column: 5
        }
      },
      "19": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "20": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 61,
          column: 15
        }
      },
      "21": {
        start: {
          line: 63,
          column: 23
        },
        end: {
          line: 63,
          column: 32
        }
      },
      "22": {
        start: {
          line: 65,
          column: 26
        },
        end: {
          line: 65,
          column: 67
        }
      },
      "23": {
        start: {
          line: 66,
          column: 23
        },
        end: {
          line: 89,
          column: 10
        }
      },
      "24": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 93,
          column: 11
        }
      },
      "25": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 87
        }
      },
      "26": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 103,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 33
          }
        },
        loc: {
          start: {
            line: 14,
            column: 39
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "GET",
        decl: {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 18
          }
        },
        loc: {
          start: {
            line: 19,
            column: 36
          },
          end: {
            line: 105,
            column: 1
          }
        },
        line: 19
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 17,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 35
          },
          end: {
            line: 15,
            column: 38
          }
        }, {
          start: {
            line: 15,
            column: 41
          },
          end: {
            line: 17,
            column: 5
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 14
          }
        }, {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 32
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "5": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 21
          }
        }, {
          start: {
            line: 43,
            column: 25
          },
          end: {
            line: 43,
            column: 37
          }
        }],
        line: 43
      },
      "6": {
        loc: {
          start: {
            line: 52,
            column: 25
          },
          end: {
            line: 52,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 25
          },
          end: {
            line: 52,
            column: 36
          }
        }, {
          start: {
            line: 52,
            column: 40
          },
          end: {
            line: 52,
            column: 53
          }
        }],
        line: 52
      },
      "7": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "8": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 55,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 55,
            column: 19
          }
        }, {
          start: {
            line: 55,
            column: 23
          },
          end: {
            line: 55,
            column: 33
          }
        }],
        line: 55
      },
      "9": {
        loc: {
          start: {
            line: 65,
            column: 26
          },
          end: {
            line: 65,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 65,
            column: 41
          },
          end: {
            line: 65,
            column: 62
          }
        }, {
          start: {
            line: 65,
            column: 65
          },
          end: {
            line: 65,
            column: 67
          }
        }],
        line: 65
      },
      "10": {
        loc: {
          start: {
            line: 100,
            column: 19
          },
          end: {
            line: 100,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 100,
            column: 44
          },
          end: {
            line: 100,
            column: 57
          }
        }, {
          start: {
            line: 100,
            column: 60
          },
          end: {
            line: 100,
            column: 73
          }
        }],
        line: 100
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/inventory/shop/[id]/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { requirePermission } from '@/lib/utils/middleware';\nimport { getUserFromToken } from '@/services/authService';\nimport db from '@/utils/db';\n\nexport async function GET(\n    req: NextRequest,\n    { params }: { params: { id: string } }\n) {\n    // Check for inventory view permissions\n    const token = req.headers.get('authorization')?.replace('Bearer ', '');\n    \n    if (!token) {\n        return NextResponse.json({\n            success: false,\n            message: 'Authentication required'\n        }, { status: 401 });\n    }\n\n    // Get user to check specific permissions\n    const user = await getUserFromToken(token);\n    if (!user) {\n        return NextResponse.json({\n            success: false,\n            message: 'Invalid token'\n        }, { status: 401 });\n    }\n\n    // Check if user has any inventory view permission\n    const hasBasicView = user.permissions?.includes('inventory:view:basic');\n    const hasFullView = user.permissions?.includes('inventory:view');\n    \n    if (!hasBasicView && !hasFullView) {\n        return NextResponse.json({\n            success: false,\n            message: 'Permission denied: inventory view access required'\n        }, { status: 403 });\n    }\n\n    // Determine if costs should be included\n    const includeCosts = hasFullView && !hasBasicView;\n\n    try {\n        // Get the shop ID safely\n        if (!params || !params.id) {\n            return NextResponse.json({\n                success: false,\n                message: 'Shop ID is required',\n            }, { status: 400 });\n        }\n\n        const shopId = params.id;\n\n        // Get inventory items for the shop with conditional cost inclusion\n        const costField = includeCosts ? 'i.shopspecificcost,' : '';\n        \n        const result = await db.query(\n            `SELECT \n                i.id,\n                i.\"productId\",\n                i.quantity,\n                p.id AS product_id,\n                p.name AS product_name,\n                p.description,\n                p.sku,\n                p.barcode,\n                p.price,\n                ${costField}\n                c.name AS category_name\n            FROM \n                \"InventoryItem\" i\n            JOIN \n                \"Product\" p ON i.\"productId\" = p.id\n            LEFT JOIN \n                \"Category\" c ON p.\"categoryId\" = c.id\n            WHERE \n                i.\"shopId\" = $1\n            ORDER BY\n                p.name`,\n            [shopId]\n        );\n\n        return NextResponse.json({\n            success: true,\n            data: result.rows\n        });\n    } catch (error) {\n        // Log the error\n        console.error(`Error fetching shop inventory (shop_id ${params?.id}):`, error);\n        return NextResponse.json({\n            success: false,\n            message: 'Failed to fetch shop inventory',\n            error: error instanceof Error ? error.message : String(error)\n        }, { status: 500 });\n    }\n}"],
      names: ["GET", "req", "params", "token", "headers", "get", "replace", "NextResponse", "json", "success", "message", "status", "user", "getUserFromToken", "hasBasicView", "permissions", "includes", "hasFullView", "includeCosts", "id", "shopId", "costField", "result", "db", "query", "data", "rows", "error", "console", "Error", "String"],
      mappings: ";;;;+BAKsBA;;;eAAAA;;;wBALoB;6BAET;2DAClB;;;;;;AAER,eAAeA,IAClBC,GAAgB,EAChB,EAAEC,MAAM,EAA8B;IAEtC,uCAAuC;IACvC,MAAMC,QAAQF,IAAIG,OAAO,CAACC,GAAG,CAAC,kBAAkBC,QAAQ,WAAW;IAEnE,IAAI,CAACH,OAAO;QACR,OAAOI,oBAAY,CAACC,IAAI,CAAC;YACrBC,SAAS;YACTC,SAAS;QACb,GAAG;YAAEC,QAAQ;QAAI;IACrB;IAEA,yCAAyC;IACzC,MAAMC,OAAO,MAAMC,IAAAA,6BAAgB,EAACV;IACpC,IAAI,CAACS,MAAM;QACP,OAAOL,oBAAY,CAACC,IAAI,CAAC;YACrBC,SAAS;YACTC,SAAS;QACb,GAAG;YAAEC,QAAQ;QAAI;IACrB;IAEA,kDAAkD;IAClD,MAAMG,eAAeF,KAAKG,WAAW,EAAEC,SAAS;IAChD,MAAMC,cAAcL,KAAKG,WAAW,EAAEC,SAAS;IAE/C,IAAI,CAACF,gBAAgB,CAACG,aAAa;QAC/B,OAAOV,oBAAY,CAACC,IAAI,CAAC;YACrBC,SAAS;YACTC,SAAS;QACb,GAAG;YAAEC,QAAQ;QAAI;IACrB;IAEA,wCAAwC;IACxC,MAAMO,eAAeD,eAAe,CAACH;IAErC,IAAI;QACA,yBAAyB;QACzB,IAAI,CAACZ,UAAU,CAACA,OAAOiB,EAAE,EAAE;YACvB,OAAOZ,oBAAY,CAACC,IAAI,CAAC;gBACrBC,SAAS;gBACTC,SAAS;YACb,GAAG;gBAAEC,QAAQ;YAAI;QACrB;QAEA,MAAMS,SAASlB,OAAOiB,EAAE;QAExB,mEAAmE;QACnE,MAAME,YAAYH,eAAe,wBAAwB;QAEzD,MAAMI,SAAS,MAAMC,WAAE,CAACC,KAAK,CACzB,CAAC;;;;;;;;;;gBAUG,EAAEH,UAAU;;;;;;;;;;;sBAWN,CAAC,EACX;YAACD;SAAO;QAGZ,OAAOb,oBAAY,CAACC,IAAI,CAAC;YACrBC,SAAS;YACTgB,MAAMH,OAAOI,IAAI;QACrB;IACJ,EAAE,OAAOC,OAAO;QACZ,gBAAgB;QAChBC,QAAQD,KAAK,CAAC,CAAC,uCAAuC,EAAEzB,QAAQiB,GAAG,EAAE,CAAC,EAAEQ;QACxE,OAAOpB,oBAAY,CAACC,IAAI,CAAC;YACrBC,SAAS;YACTC,SAAS;YACTiB,OAAOA,iBAAiBE,QAAQF,MAAMjB,OAAO,GAAGoB,OAAOH;QAC3D,GAAG;YAAEhB,QAAQ;QAAI;IACrB;AACJ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2ab27bb6424b7ffbe1ac021c27b0a9dc7876dd27"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_h10jxyh9u = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_h10jxyh9u();
cov_h10jxyh9u().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_h10jxyh9u().s[1]++;
Object.defineProperty(exports, "GET", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_h10jxyh9u().f[0]++;
    cov_h10jxyh9u().s[2]++;
    return GET;
  }
});
const _server =
/* istanbul ignore next */
(cov_h10jxyh9u().s[3]++, require("next/server"));
const _authService =
/* istanbul ignore next */
(cov_h10jxyh9u().s[4]++, require("../../../../../services/authService"));
const _db =
/* istanbul ignore next */
(/*#__PURE__*/cov_h10jxyh9u().s[5]++, _interop_require_default(require("../../../../../utils/db")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_h10jxyh9u().f[1]++;
  cov_h10jxyh9u().s[6]++;
  return /* istanbul ignore next */(cov_h10jxyh9u().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_h10jxyh9u().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_h10jxyh9u().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_h10jxyh9u().b[0][1]++, {
    default: obj
  });
}
async function GET(req, {
  params
}) {
  /* istanbul ignore next */
  cov_h10jxyh9u().f[2]++;
  // Check for inventory view permissions
  const token =
  /* istanbul ignore next */
  (cov_h10jxyh9u().s[7]++, req.headers.get("authorization")?.replace("Bearer ", ""));
  /* istanbul ignore next */
  cov_h10jxyh9u().s[8]++;
  if (!token) {
    /* istanbul ignore next */
    cov_h10jxyh9u().b[2][0]++;
    cov_h10jxyh9u().s[9]++;
    return _server.NextResponse.json({
      success: false,
      message: "Authentication required"
    }, {
      status: 401
    });
  } else
  /* istanbul ignore next */
  {
    cov_h10jxyh9u().b[2][1]++;
  }
  // Get user to check specific permissions
  const user =
  /* istanbul ignore next */
  (cov_h10jxyh9u().s[10]++, await (0, _authService.getUserFromToken)(token));
  /* istanbul ignore next */
  cov_h10jxyh9u().s[11]++;
  if (!user) {
    /* istanbul ignore next */
    cov_h10jxyh9u().b[3][0]++;
    cov_h10jxyh9u().s[12]++;
    return _server.NextResponse.json({
      success: false,
      message: "Invalid token"
    }, {
      status: 401
    });
  } else
  /* istanbul ignore next */
  {
    cov_h10jxyh9u().b[3][1]++;
  }
  // Check if user has any inventory view permission
  const hasBasicView =
  /* istanbul ignore next */
  (cov_h10jxyh9u().s[13]++, user.permissions?.includes("inventory:view:basic"));
  const hasFullView =
  /* istanbul ignore next */
  (cov_h10jxyh9u().s[14]++, user.permissions?.includes("inventory:view"));
  /* istanbul ignore next */
  cov_h10jxyh9u().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_h10jxyh9u().b[5][0]++, !hasBasicView) &&
  /* istanbul ignore next */
  (cov_h10jxyh9u().b[5][1]++, !hasFullView)) {
    /* istanbul ignore next */
    cov_h10jxyh9u().b[4][0]++;
    cov_h10jxyh9u().s[16]++;
    return _server.NextResponse.json({
      success: false,
      message: "Permission denied: inventory view access required"
    }, {
      status: 403
    });
  } else
  /* istanbul ignore next */
  {
    cov_h10jxyh9u().b[4][1]++;
  }
  // Determine if costs should be included
  const includeCosts =
  /* istanbul ignore next */
  (cov_h10jxyh9u().s[17]++,
  /* istanbul ignore next */
  (cov_h10jxyh9u().b[6][0]++, hasFullView) &&
  /* istanbul ignore next */
  (cov_h10jxyh9u().b[6][1]++, !hasBasicView));
  /* istanbul ignore next */
  cov_h10jxyh9u().s[18]++;
  try {
    /* istanbul ignore next */
    cov_h10jxyh9u().s[19]++;
    // Get the shop ID safely
    if (
    /* istanbul ignore next */
    (cov_h10jxyh9u().b[8][0]++, !params) ||
    /* istanbul ignore next */
    (cov_h10jxyh9u().b[8][1]++, !params.id)) {
      /* istanbul ignore next */
      cov_h10jxyh9u().b[7][0]++;
      cov_h10jxyh9u().s[20]++;
      return _server.NextResponse.json({
        success: false,
        message: "Shop ID is required"
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_h10jxyh9u().b[7][1]++;
    }
    const shopId =
    /* istanbul ignore next */
    (cov_h10jxyh9u().s[21]++, params.id);
    // Get inventory items for the shop with conditional cost inclusion
    const costField =
    /* istanbul ignore next */
    (cov_h10jxyh9u().s[22]++, includeCosts ?
    /* istanbul ignore next */
    (cov_h10jxyh9u().b[9][0]++, "i.shopspecificcost,") :
    /* istanbul ignore next */
    (cov_h10jxyh9u().b[9][1]++, ""));
    const result =
    /* istanbul ignore next */
    (cov_h10jxyh9u().s[23]++, await _db.default.query(`SELECT 
                i.id,
                i."productId",
                i.quantity,
                p.id AS product_id,
                p.name AS product_name,
                p.description,
                p.sku,
                p.barcode,
                p.price,
                ${costField}
                c.name AS category_name
            FROM 
                "InventoryItem" i
            JOIN 
                "Product" p ON i."productId" = p.id
            LEFT JOIN 
                "Category" c ON p."categoryId" = c.id
            WHERE 
                i."shopId" = $1
            ORDER BY
                p.name`, [shopId]));
    /* istanbul ignore next */
    cov_h10jxyh9u().s[24]++;
    return _server.NextResponse.json({
      success: true,
      data: result.rows
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_h10jxyh9u().s[25]++;
    // Log the error
    console.error(`Error fetching shop inventory (shop_id ${params?.id}):`, error);
    /* istanbul ignore next */
    cov_h10jxyh9u().s[26]++;
    return _server.NextResponse.json({
      success: false,
      message: "Failed to fetch shop inventory",
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_h10jxyh9u().b[10][0]++, error.message) :
      /* istanbul ignore next */
      (cov_h10jxyh9u().b[10][1]++, String(error))
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,