{"version":3,"sources":["/Users/sachin/Documents/md-sports-/tests/unit/jwt-test.test.ts"],"sourcesContent":["// Simple test to verify JWT mocking works\njest.mock('jsonwebtoken', () => ({\n  verify: jest.fn(),\n  sign: jest.fn(),\n}));\n\nimport jwt from 'jsonwebtoken';\n\nconst mockJwt = jwt as jest.Mocked<typeof jwt>;\n\ndescribe('JWT Mock Test', () => {\n  test('should use mocked jwt.verify', () => {\n    mockJwt.verify.mockReturnValue({ sub: 1, username: 'test' });\n    \n    const result = jwt.verify('test-token', 'secret');\n    \n    expect(result).toEqual({ sub: 1, username: 'test' });\n    expect(mockJwt.verify).toHaveBeenCalledWith('test-token', 'secret');\n  });\n});"],"names":["jest","mock","verify","fn","sign","mockJwt","jwt","describe","test","mockReturnValue","sub","username","result","expect","toEqual","toHaveBeenCalledWith"],"mappings":"AAAA,0CAA0C;;AAC1CA,KAAKC,IAAI,CAAC,gBAAgB,IAAO,CAAA;QAC/BC,QAAQF,KAAKG,EAAE;QACfC,MAAMJ,KAAKG,EAAE;IACf,CAAA;;;;qEAEgB;;;;;;AAEhB,MAAME,UAAUC,qBAAG;AAEnBC,SAAS,iBAAiB;IACxBC,KAAK,gCAAgC;QACnCH,QAAQH,MAAM,CAACO,eAAe,CAAC;YAAEC,KAAK;YAAGC,UAAU;QAAO;QAE1D,MAAMC,SAASN,qBAAG,CAACJ,MAAM,CAAC,cAAc;QAExCW,OAAOD,QAAQE,OAAO,CAAC;YAAEJ,KAAK;YAAGC,UAAU;QAAO;QAClDE,OAAOR,QAAQH,MAAM,EAAEa,oBAAoB,CAAC,cAAc;IAC5D;AACF"}