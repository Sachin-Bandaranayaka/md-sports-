38a3241036b2a61a55d53555fa073c55
"use strict";

/* istanbul ignore next */
function cov_17a5i90kvd() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/db-setup/route.ts";
  var hash = "334bde3d9c31bee5bb2b8bcd4fa5cc3e76ab1e88";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/db-setup/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 26
        },
        end: {
          line: 12,
          column: 80
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "6": {
        start: {
          line: 19,
          column: 24
        },
        end: {
          line: 70,
          column: 1
        }
      },
      "7": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 156,
          column: 5
        }
      },
      "8": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 42
        }
      },
      "9": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 49
        }
      },
      "10": {
        start: {
          line: 77,
          column: 30
        },
        end: {
          line: 77,
          column: 97
        }
      },
      "11": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "12": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 43
        }
      },
      "13": {
        start: {
          line: 81,
          column: 40
        },
        end: {
          line: 85,
          column: 8
        }
      },
      "14": {
        start: {
          line: 86,
          column: 36
        },
        end: {
          line: 86,
          column: 66
        }
      },
      "15": {
        start: {
          line: 88,
          column: 37
        },
        end: {
          line: 96,
          column: 14
        }
      },
      "16": {
        start: {
          line: 98,
          column: 32
        },
        end: {
          line: 98,
          column: 90
        }
      },
      "17": {
        start: {
          line: 98,
          column: 64
        },
        end: {
          line: 98,
          column: 86
        }
      },
      "18": {
        start: {
          line: 99,
          column: 30
        },
        end: {
          line: 99,
          column: 86
        }
      },
      "19": {
        start: {
          line: 99,
          column: 62
        },
        end: {
          line: 99,
          column: 82
        }
      },
      "20": {
        start: {
          line: 101,
          column: 35
        },
        end: {
          line: 110,
          column: 14
        }
      },
      "21": {
        start: {
          line: 112,
          column: 33
        },
        end: {
          line: 112,
          column: 103
        }
      },
      "22": {
        start: {
          line: 112,
          column: 63
        },
        end: {
          line: 112,
          column: 99
        }
      },
      "23": {
        start: {
          line: 113,
          column: 29
        },
        end: {
          line: 113,
          column: 87
        }
      },
      "24": {
        start: {
          line: 113,
          column: 59
        },
        end: {
          line: 113,
          column: 83
        }
      },
      "25": {
        start: {
          line: 115,
          column: 32
        },
        end: {
          line: 121,
          column: 8
        }
      },
      "26": {
        start: {
          line: 123,
          column: 32
        },
        end: {
          line: 123,
          column: 95
        }
      },
      "27": {
        start: {
          line: 123,
          column: 59
        },
        end: {
          line: 123,
          column: 91
        }
      },
      "28": {
        start: {
          line: 124,
          column: 33
        },
        end: {
          line: 124,
          column: 98
        }
      },
      "29": {
        start: {
          line: 124,
          column: 60
        },
        end: {
          line: 124,
          column: 94
        }
      },
      "30": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 138,
          column: 15
        }
      },
      "31": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 53
        }
      },
      "32": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 63
        }
      },
      "33": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 146,
          column: 11
        }
      },
      "34": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 59
        }
      },
      "35": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 155,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "POST",
        decl: {
          start: {
            line: 71,
            column: 15
          },
          end: {
            line: 71,
            column: 19
          }
        },
        loc: {
          start: {
            line: 71,
            column: 30
          },
          end: {
            line: 157,
            column: 1
          }
        },
        line: 71
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 98,
            column: 59
          },
          end: {
            line: 98,
            column: 60
          }
        },
        loc: {
          start: {
            line: 98,
            column: 64
          },
          end: {
            line: 98,
            column: 86
          }
        },
        line: 98
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 99,
            column: 57
          },
          end: {
            line: 99,
            column: 58
          }
        },
        loc: {
          start: {
            line: 99,
            column: 62
          },
          end: {
            line: 99,
            column: 82
          }
        },
        line: 99
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 112,
            column: 58
          },
          end: {
            line: 112,
            column: 59
          }
        },
        loc: {
          start: {
            line: 112,
            column: 63
          },
          end: {
            line: 112,
            column: 99
          }
        },
        line: 112
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 113,
            column: 54
          },
          end: {
            line: 113,
            column: 55
          }
        },
        loc: {
          start: {
            line: 113,
            column: 59
          },
          end: {
            line: 113,
            column: 83
          }
        },
        line: 113
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 123,
            column: 54
          },
          end: {
            line: 123,
            column: 55
          }
        },
        loc: {
          start: {
            line: 123,
            column: 59
          },
          end: {
            line: 123,
            column: 91
          }
        },
        line: 123
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 124,
            column: 55
          },
          end: {
            line: 124,
            column: 56
          }
        },
        loc: {
          start: {
            line: 124,
            column: 60
          },
          end: {
            line: 124,
            column: 94
          }
        },
        line: 124
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 35
          },
          end: {
            line: 14,
            column: 38
          }
        }, {
          start: {
            line: 14,
            column: 41
          },
          end: {
            line: 16,
            column: 5
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 14
          }
        }, {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 14,
            column: 32
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        }, {
          start: {
            line: 140,
            column: 15
          },
          end: {
            line: 142,
            column: 9
          }
        }],
        line: 78
      },
      "3": {
        loc: {
          start: {
            line: 152,
            column: 19
          },
          end: {
            line: 152,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 152,
            column: 44
          },
          end: {
            line: 152,
            column: 57
          }
        }, {
          start: {
            line: 152,
            column: 60
          },
          end: {
            line: 152,
            column: 73
          }
        }],
        line: 152
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/db-setup/route.ts"],
      sourcesContent: ["import { NextResponse } from 'next/server';\nimport db from '@/utils/db';\n\n// SQL to create tables\nconst createTablesSQL = `\n-- Create categories table\nCREATE TABLE IF NOT EXISTS categories (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  description TEXT,\n  parent_id INTEGER REFERENCES categories(id),\n  is_active BOOLEAN NOT NULL DEFAULT TRUE,\n  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Create products table\nCREATE TABLE IF NOT EXISTS products (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  sku VARCHAR(50) NOT NULL UNIQUE,\n  barcode VARCHAR(50),\n  description TEXT,\n  base_price DECIMAL(10, 2) NOT NULL,\n  retail_price DECIMAL(10, 2) NOT NULL,\n  category_id INTEGER REFERENCES categories(id),\n  image_url VARCHAR(255),\n  is_active BOOLEAN NOT NULL DEFAULT TRUE,\n  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Create shops table\nCREATE TABLE IF NOT EXISTS shops (\n  id SERIAL PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  location VARCHAR(255) NOT NULL,\n  contact_person VARCHAR(255),\n  phone VARCHAR(50),\n  email VARCHAR(255),\n  is_active BOOLEAN NOT NULL DEFAULT TRUE,\n  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP\n);\n\n-- Create inventory_items table\nCREATE TABLE IF NOT EXISTS inventory_items (\n  id SERIAL PRIMARY KEY,\n  shop_id INTEGER NOT NULL REFERENCES shops(id),\n  product_id INTEGER NOT NULL REFERENCES products(id),\n  quantity INTEGER NOT NULL DEFAULT 0,\n  reorder_level INTEGER,\n  last_updated TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  UNIQUE(shop_id, product_id)\n);\n`;\n\nexport async function POST(_request: Request) {\n  try {\n    // Create tables\n    console.log('Creating tables...');\n    await db.query(createTablesSQL);\n\n    // Check if we already have data\n    const categoryCheck = await db.query('SELECT COUNT(*) as count FROM categories');\n\n    if (parseInt(categoryCheck.rows[0].count) === 0) {\n      console.log('Seeding data...');\n\n      // Create main category\n      const sportingGoodsResult = await db.query(`\n        INSERT INTO categories (name, description) \n        VALUES ('Sporting Goods', 'All sporting equipment and accessories')\n        RETURNING id\n      `);\n      const sportingGoodsId = sportingGoodsResult.rows[0].id;\n\n      // Create subcategories\n      const categoriesResult = await db.query(`\n        INSERT INTO categories (name, description, parent_id) \n        VALUES \n          ('Apparel', 'Clothing and uniforms', $1),\n          ('Equipment', 'Sports equipment', $1)\n        RETURNING id, name\n      `, [sportingGoodsId]);\n\n      // Get category IDs\n      const equipmentId = categoriesResult.rows.find(c => c.name === 'Equipment').id;\n      const apparelId = categoriesResult.rows.find(c => c.name === 'Apparel').id;\n\n      // Create products\n      const productsResult = await db.query(`\n        INSERT INTO products (name, sku, barcode, description, base_price, retail_price, category_id) \n        VALUES \n          ('Professional Basketball', 'BB-PRO-001', '123456789012', 'Official size and weight basketball', 25.00, 39.99, $1),\n          ('Team Jersey', 'APP-JRS-001', '123456789013', 'Official team jersey', 35.00, 59.99, $2)\n        RETURNING id, name\n      `, [equipmentId, apparelId]);\n\n      // Get product IDs\n      const basketballId = productsResult.rows.find(p => p.name === 'Professional Basketball').id;\n      const jerseyId = productsResult.rows.find(p => p.name === 'Team Jersey').id;\n\n      // Create shops\n      const shopsResult = await db.query(`\n        INSERT INTO shops (name, location, contact_person, phone, email) \n        VALUES \n          ('MS Sport Main Store', 'Colombo', 'John Doe', '+94123456789', 'main@mssport.lk'),\n          ('MS Sport Kandy Branch', 'Kandy', 'Jane Smith', '+94123456790', 'kandy@mssport.lk')\n        RETURNING id, name\n      `);\n\n      // Get shop IDs\n      const mainStoreId = shopsResult.rows.find(s => s.name === 'MS Sport Main Store').id;\n      const kandyStoreId = shopsResult.rows.find(s => s.name === 'MS Sport Kandy Branch').id;\n\n      // Create inventory items\n      await db.query(`\n        INSERT INTO inventory_items (shop_id, product_id, quantity, reorder_level) \n        VALUES \n          ($1, $3, 50, 10),\n          ($1, $4, 30, 5),\n          ($2, $3, 25, 8),\n          ($2, $4, 15, 3)\n      `, [mainStoreId, kandyStoreId, basketballId, jerseyId]);\n\n      console.log('Data seeded successfully!');\n    } else {\n      console.log('Data already exists, skipping seed.');\n    }\n\n    return NextResponse.json({\n      success: true,\n      message: 'Database setup completed successfully.'\n    });\n  } catch (error) {\n    console.error('Error setting up database:', error);\n    return NextResponse.json({\n      success: false,\n      message: 'Error setting up database',\n      error: error instanceof Error ? error.message : String(error)\n    }, { status: 500 });\n  }\n} "],
      names: ["POST", "createTablesSQL", "_request", "console", "log", "db", "query", "categoryCheck", "parseInt", "rows", "count", "sportingGoodsResult", "sportingGoodsId", "id", "categoriesResult", "equipmentId", "find", "c", "name", "apparelId", "productsResult", "basketballId", "p", "jerseyId", "shopsResult", "mainStoreId", "s", "kandyStoreId", "NextResponse", "json", "success", "message", "error", "Error", "String", "status"],
      mappings: ";;;;+BAyDsBA;;;eAAAA;;;wBAzDO;2DACd;;;;;;AAEf,uBAAuB;AACvB,MAAMC,kBAAkB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDzB,CAAC;AAEM,eAAeD,KAAKE,QAAiB;IAC1C,IAAI;QACF,gBAAgB;QAChBC,QAAQC,GAAG,CAAC;QACZ,MAAMC,WAAE,CAACC,KAAK,CAACL;QAEf,gCAAgC;QAChC,MAAMM,gBAAgB,MAAMF,WAAE,CAACC,KAAK,CAAC;QAErC,IAAIE,SAASD,cAAcE,IAAI,CAAC,EAAE,CAACC,KAAK,MAAM,GAAG;YAC/CP,QAAQC,GAAG,CAAC;YAEZ,uBAAuB;YACvB,MAAMO,sBAAsB,MAAMN,WAAE,CAACC,KAAK,CAAC,CAAC;;;;MAI5C,CAAC;YACD,MAAMM,kBAAkBD,oBAAoBF,IAAI,CAAC,EAAE,CAACI,EAAE;YAEtD,uBAAuB;YACvB,MAAMC,mBAAmB,MAAMT,WAAE,CAACC,KAAK,CAAC,CAAC;;;;;;MAMzC,CAAC,EAAE;gBAACM;aAAgB;YAEpB,mBAAmB;YACnB,MAAMG,cAAcD,iBAAiBL,IAAI,CAACO,IAAI,CAACC,CAAAA,IAAKA,EAAEC,IAAI,KAAK,aAAaL,EAAE;YAC9E,MAAMM,YAAYL,iBAAiBL,IAAI,CAACO,IAAI,CAACC,CAAAA,IAAKA,EAAEC,IAAI,KAAK,WAAWL,EAAE;YAE1E,kBAAkB;YAClB,MAAMO,iBAAiB,MAAMf,WAAE,CAACC,KAAK,CAAC,CAAC;;;;;;MAMvC,CAAC,EAAE;gBAACS;gBAAaI;aAAU;YAE3B,kBAAkB;YAClB,MAAME,eAAeD,eAAeX,IAAI,CAACO,IAAI,CAACM,CAAAA,IAAKA,EAAEJ,IAAI,KAAK,2BAA2BL,EAAE;YAC3F,MAAMU,WAAWH,eAAeX,IAAI,CAACO,IAAI,CAACM,CAAAA,IAAKA,EAAEJ,IAAI,KAAK,eAAeL,EAAE;YAE3E,eAAe;YACf,MAAMW,cAAc,MAAMnB,WAAE,CAACC,KAAK,CAAC,CAAC;;;;;;MAMpC,CAAC;YAED,eAAe;YACf,MAAMmB,cAAcD,YAAYf,IAAI,CAACO,IAAI,CAACU,CAAAA,IAAKA,EAAER,IAAI,KAAK,uBAAuBL,EAAE;YACnF,MAAMc,eAAeH,YAAYf,IAAI,CAACO,IAAI,CAACU,CAAAA,IAAKA,EAAER,IAAI,KAAK,yBAAyBL,EAAE;YAEtF,yBAAyB;YACzB,MAAMR,WAAE,CAACC,KAAK,CAAC,CAAC;;;;;;;MAOhB,CAAC,EAAE;gBAACmB;gBAAaE;gBAAcN;gBAAcE;aAAS;YAEtDpB,QAAQC,GAAG,CAAC;QACd,OAAO;YACLD,QAAQC,GAAG,CAAC;QACd;QAEA,OAAOwB,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTC,SAAS;QACX;IACF,EAAE,OAAOC,OAAO;QACd7B,QAAQ6B,KAAK,CAAC,8BAA8BA;QAC5C,OAAOJ,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTC,SAAS;YACTC,OAAOA,iBAAiBC,QAAQD,MAAMD,OAAO,GAAGG,OAAOF;QACzD,GAAG;YAAEG,QAAQ;QAAI;IACnB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "334bde3d9c31bee5bb2b8bcd4fa5cc3e76ab1e88"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_17a5i90kvd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_17a5i90kvd();
cov_17a5i90kvd().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_17a5i90kvd().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_17a5i90kvd().f[0]++;
    cov_17a5i90kvd().s[2]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_17a5i90kvd().s[3]++, require("next/server"));
const _db =
/* istanbul ignore next */
(/*#__PURE__*/cov_17a5i90kvd().s[4]++, _interop_require_default(require("../../../utils/db")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_17a5i90kvd().f[1]++;
  cov_17a5i90kvd().s[5]++;
  return /* istanbul ignore next */(cov_17a5i90kvd().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_17a5i90kvd().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_17a5i90kvd().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_17a5i90kvd().b[0][1]++, {
    default: obj
  });
}
// SQL to create tables
const createTablesSQL =
/* istanbul ignore next */
(cov_17a5i90kvd().s[6]++, `
-- Create categories table
CREATE TABLE IF NOT EXISTS categories (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  description TEXT,
  parent_id INTEGER REFERENCES categories(id),
  is_active BOOLEAN NOT NULL DEFAULT TRUE,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Create products table
CREATE TABLE IF NOT EXISTS products (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  sku VARCHAR(50) NOT NULL UNIQUE,
  barcode VARCHAR(50),
  description TEXT,
  base_price DECIMAL(10, 2) NOT NULL,
  retail_price DECIMAL(10, 2) NOT NULL,
  category_id INTEGER REFERENCES categories(id),
  image_url VARCHAR(255),
  is_active BOOLEAN NOT NULL DEFAULT TRUE,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Create shops table
CREATE TABLE IF NOT EXISTS shops (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  location VARCHAR(255) NOT NULL,
  contact_person VARCHAR(255),
  phone VARCHAR(50),
  email VARCHAR(255),
  is_active BOOLEAN NOT NULL DEFAULT TRUE,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Create inventory_items table
CREATE TABLE IF NOT EXISTS inventory_items (
  id SERIAL PRIMARY KEY,
  shop_id INTEGER NOT NULL REFERENCES shops(id),
  product_id INTEGER NOT NULL REFERENCES products(id),
  quantity INTEGER NOT NULL DEFAULT 0,
  reorder_level INTEGER,
  last_updated TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UNIQUE(shop_id, product_id)
);
`);
async function POST(_request) {
  /* istanbul ignore next */
  cov_17a5i90kvd().f[2]++;
  cov_17a5i90kvd().s[7]++;
  try {
    /* istanbul ignore next */
    cov_17a5i90kvd().s[8]++;
    // Create tables
    console.log("Creating tables...");
    /* istanbul ignore next */
    cov_17a5i90kvd().s[9]++;
    await _db.default.query(createTablesSQL);
    // Check if we already have data
    const categoryCheck =
    /* istanbul ignore next */
    (cov_17a5i90kvd().s[10]++, await _db.default.query("SELECT COUNT(*) as count FROM categories"));
    /* istanbul ignore next */
    cov_17a5i90kvd().s[11]++;
    if (parseInt(categoryCheck.rows[0].count) === 0) {
      /* istanbul ignore next */
      cov_17a5i90kvd().b[2][0]++;
      cov_17a5i90kvd().s[12]++;
      console.log("Seeding data...");
      // Create main category
      const sportingGoodsResult =
      /* istanbul ignore next */
      (cov_17a5i90kvd().s[13]++, await _db.default.query(`
        INSERT INTO categories (name, description) 
        VALUES ('Sporting Goods', 'All sporting equipment and accessories')
        RETURNING id
      `));
      const sportingGoodsId =
      /* istanbul ignore next */
      (cov_17a5i90kvd().s[14]++, sportingGoodsResult.rows[0].id);
      // Create subcategories
      const categoriesResult =
      /* istanbul ignore next */
      (cov_17a5i90kvd().s[15]++, await _db.default.query(`
        INSERT INTO categories (name, description, parent_id) 
        VALUES 
          ('Apparel', 'Clothing and uniforms', $1),
          ('Equipment', 'Sports equipment', $1)
        RETURNING id, name
      `, [sportingGoodsId]));
      // Get category IDs
      const equipmentId =
      /* istanbul ignore next */
      (cov_17a5i90kvd().s[16]++, categoriesResult.rows.find(c => {
        /* istanbul ignore next */
        cov_17a5i90kvd().f[3]++;
        cov_17a5i90kvd().s[17]++;
        return c.name === "Equipment";
      }).id);
      const apparelId =
      /* istanbul ignore next */
      (cov_17a5i90kvd().s[18]++, categoriesResult.rows.find(c => {
        /* istanbul ignore next */
        cov_17a5i90kvd().f[4]++;
        cov_17a5i90kvd().s[19]++;
        return c.name === "Apparel";
      }).id);
      // Create products
      const productsResult =
      /* istanbul ignore next */
      (cov_17a5i90kvd().s[20]++, await _db.default.query(`
        INSERT INTO products (name, sku, barcode, description, base_price, retail_price, category_id) 
        VALUES 
          ('Professional Basketball', 'BB-PRO-001', '123456789012', 'Official size and weight basketball', 25.00, 39.99, $1),
          ('Team Jersey', 'APP-JRS-001', '123456789013', 'Official team jersey', 35.00, 59.99, $2)
        RETURNING id, name
      `, [equipmentId, apparelId]));
      // Get product IDs
      const basketballId =
      /* istanbul ignore next */
      (cov_17a5i90kvd().s[21]++, productsResult.rows.find(p => {
        /* istanbul ignore next */
        cov_17a5i90kvd().f[5]++;
        cov_17a5i90kvd().s[22]++;
        return p.name === "Professional Basketball";
      }).id);
      const jerseyId =
      /* istanbul ignore next */
      (cov_17a5i90kvd().s[23]++, productsResult.rows.find(p => {
        /* istanbul ignore next */
        cov_17a5i90kvd().f[6]++;
        cov_17a5i90kvd().s[24]++;
        return p.name === "Team Jersey";
      }).id);
      // Create shops
      const shopsResult =
      /* istanbul ignore next */
      (cov_17a5i90kvd().s[25]++, await _db.default.query(`
        INSERT INTO shops (name, location, contact_person, phone, email) 
        VALUES 
          ('MS Sport Main Store', 'Colombo', 'John Doe', '+94123456789', 'main@mssport.lk'),
          ('MS Sport Kandy Branch', 'Kandy', 'Jane Smith', '+94123456790', 'kandy@mssport.lk')
        RETURNING id, name
      `));
      // Get shop IDs
      const mainStoreId =
      /* istanbul ignore next */
      (cov_17a5i90kvd().s[26]++, shopsResult.rows.find(s => {
        /* istanbul ignore next */
        cov_17a5i90kvd().f[7]++;
        cov_17a5i90kvd().s[27]++;
        return s.name === "MS Sport Main Store";
      }).id);
      const kandyStoreId =
      /* istanbul ignore next */
      (cov_17a5i90kvd().s[28]++, shopsResult.rows.find(s => {
        /* istanbul ignore next */
        cov_17a5i90kvd().f[8]++;
        cov_17a5i90kvd().s[29]++;
        return s.name === "MS Sport Kandy Branch";
      }).id);
      // Create inventory items
      /* istanbul ignore next */
      cov_17a5i90kvd().s[30]++;
      await _db.default.query(`
        INSERT INTO inventory_items (shop_id, product_id, quantity, reorder_level) 
        VALUES 
          ($1, $3, 50, 10),
          ($1, $4, 30, 5),
          ($2, $3, 25, 8),
          ($2, $4, 15, 3)
      `, [mainStoreId, kandyStoreId, basketballId, jerseyId]);
      /* istanbul ignore next */
      cov_17a5i90kvd().s[31]++;
      console.log("Data seeded successfully!");
    } else {
      /* istanbul ignore next */
      cov_17a5i90kvd().b[2][1]++;
      cov_17a5i90kvd().s[32]++;
      console.log("Data already exists, skipping seed.");
    }
    /* istanbul ignore next */
    cov_17a5i90kvd().s[33]++;
    return _server.NextResponse.json({
      success: true,
      message: "Database setup completed successfully."
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_17a5i90kvd().s[34]++;
    console.error("Error setting up database:", error);
    /* istanbul ignore next */
    cov_17a5i90kvd().s[35]++;
    return _server.NextResponse.json({
      success: false,
      message: "Error setting up database",
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_17a5i90kvd().b[3][0]++, error.message) :
      /* istanbul ignore next */
      (cov_17a5i90kvd().b[3][1]++, String(error))
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,