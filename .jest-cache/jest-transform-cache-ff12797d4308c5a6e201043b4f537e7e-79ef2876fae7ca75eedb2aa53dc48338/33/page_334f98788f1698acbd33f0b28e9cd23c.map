{"version":3,"names":["AddUserPage","roleTemplates","cov_10lqnyivs7","s","id","name","description","icon","_lucidereact","Users","permissions","color","f","router","_navigation","useRouter","userForm","setUserForm","_react","useState","email","shop","password","confirmPassword","isLoading","setIsLoading","formError","setFormError","formSuccess","setFormSuccess","dynamicShops","setDynamicShops","shopsLoading","setShopsLoading","useEffect","fetchShops","response","fetch","headers","ok","b","Error","data","json","success","console","error","message","availablePermissions","setAvailablePermissions","permissionsLoading","setPermissionsLoading","selectedTemplate","setSelectedTemplate","permissionSearch","setPermissionSearch","showAdvancedPermissions","setShowAdvancedPermissions","fetchPermissions","transformedPermissions","map","permission","module","action","split","toString","charAt","toUpperCase","slice","getPermissionDescription","permissionName","descriptions","handleTemplateSelect","templateId","template","find","t","templatePermissionIds","filter","p","toLowerCase","replace","some","tp","includes","prev","filteredPermissions","groupedPermissions","reduce","acc","push","handleFormChange","e","value","target","handlePermissionChange","permissionId","newPermissions","handleModulePermissions","isChecked","modulePermissionIds","Set","handleSubmit","preventDefault","method","body","JSON","stringify","setTimeout","isModuleSelected","modulePermissions","every","isModulePartiallySelected","_jsxruntime","jsx","className","jsxs","onSubmit","htmlFor","type","onChange","required","disabled","Fragment","length","IconComponent","onClick","Search","placeholder","Loader2","Object","keys","checked","Info","minLength","_Button","Button","variant"],"sources":["/Users/sachin/Documents/md-sports-/src/app/(protected)/settings/users/add/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { Button } from '@/components/ui/Button';\nimport { Loader2, Search, Info, Users, Shield, BarChart3, Settings, Package, CreditCard } from 'lucide-react';\n\ninterface Shop {\n    id: string | number;\n    name: string;\n}\n\ninterface RoleTemplate {\n    id: string;\n    name: string;\n    description: string;\n    icon: React.ElementType;\n    permissions: string[];\n    color: string;\n}\n\nconst roleTemplates: RoleTemplate[] = [\n    {\n        id: 'admin',\n        name: 'Admin',\n        description: 'Full administrative access to all system features',\n        icon: Users,\n        permissions: ['admin:all'],\n        color: 'bg-red-100 text-red-800 border-red-200'\n    },\n    {\n        id: 'shop_staff',\n        name: 'Shop Staff',\n        description: 'Shop operations including sales, customer management, quotations, and shop distribution access for assigned shop only',\n        icon: Users,\n        permissions: [\n            'view_dashboard',\n            'invoice:create',\n            'invoice:view',\n            'customer:create',\n            'customer:view',\n            'quotation:create',\n            'quotation:view',\n            'shop:distribution:view',\n            'inventory:transfer',\n            'shop:assigned_only'\n        ],\n        color: 'bg-blue-100 text-blue-800 border-blue-200'\n    }\n];\n\nexport default function AddUserPage() {\n    const router = useRouter();\n    const [userForm, setUserForm] = useState({\n        name: '',\n        email: '',\n        shop: '',\n        password: '',\n        confirmPassword: '',\n        permissions: [] as string[]\n    });\n    const [isLoading, setIsLoading] = useState(false);\n    const [formError, setFormError] = useState('');\n    const [formSuccess, setFormSuccess] = useState('');\n    const [dynamicShops, setDynamicShops] = useState<Shop[]>([]);\n    const [shopsLoading, setShopsLoading] = useState(true);\n\n    // Available shops - This will be replaced by dynamic fetching\n    // const shops = [\n    //     { id: 1, name: 'All Shops' },\n    //     { id: 2, name: 'Main Store' },\n    //     { id: 3, name: 'Warehouse' }\n    // ];\n\n    useEffect(() => {\n        const fetchShops = async () => {\n            setShopsLoading(true);\n            try {\n                // TODO: Replace with actual token or auth mechanism\n                const response = await fetch('/api/shops', {\n                    headers: {\n                        'Authorization': 'Bearer dev-token', // Example authorization\n                    },\n                });\n                if (!response.ok) {\n                    throw new Error('Failed to fetch shops');\n                }\n                const data = await response.json();\n                if (data.success) {\n                    setDynamicShops(data.data || []);\n                } else {\n                    console.error(\"Failed to fetch shops:\", data.message);\n                    setDynamicShops([]); // Set to empty array on failure\n                }\n            } catch (error) {\n                console.error('Error fetching shops:', error);\n                setDynamicShops([]); // Set to empty array on error\n            } finally {\n                setShopsLoading(false);\n            }\n        };\n\n        fetchShops();\n    }, []);\n\n    // Available permissions - fetched dynamically\n    const [availablePermissions, setAvailablePermissions] = useState<Array<{\n        id: string;\n        name: string;\n        module: string;\n        description?: string;\n    }>>([]);\n    const [permissionsLoading, setPermissionsLoading] = useState(true);\n    const [selectedTemplate, setSelectedTemplate] = useState<string>('');\n    const [permissionSearch, setPermissionSearch] = useState('');\n    const [showAdvancedPermissions, setShowAdvancedPermissions] = useState(false);\n\n    // Fetch permissions from database\n    useEffect(() => {\n        const fetchPermissions = async () => {\n            setPermissionsLoading(true);\n            try {\n                const response = await fetch('/api/permissions', {\n                    headers: {\n                        'Authorization': 'Bearer dev-token',\n                    },\n                });\n                if (!response.ok) {\n                    throw new Error('Failed to fetch permissions');\n                }\n                const data = await response.json();\n                if (data.success) {\n                    // Transform permissions to include module based on name prefix\n                    const transformedPermissions = data.data.map((permission: any) => {\n                        const [module, action] = permission.name.split(':');\n                        return {\n                            id: permission.id.toString(),\n                            name: permission.description || permission.name,\n                            module: module.charAt(0).toUpperCase() + module.slice(1),\n                            description: getPermissionDescription(permission.name)\n                        };\n                    });\n                    setAvailablePermissions(transformedPermissions);\n                } else {\n                    console.error('Failed to fetch permissions:', data.message);\n                    setAvailablePermissions([]);\n                }\n            } catch (error) {\n                console.error('Error fetching permissions:', error);\n                setAvailablePermissions([]);\n            } finally {\n                setPermissionsLoading(false);\n            }\n        };\n\n        fetchPermissions();\n    }, []);\n\n    // Permission descriptions helper\n    const getPermissionDescription = (permissionName: string): string => {\n        const descriptions: Record<string, string> = {\n            'inventory:view': 'View inventory items and stock levels',\n            'inventory:create': 'Add new inventory items',\n            'inventory:update': 'Edit existing inventory items',\n            'inventory:delete': 'Remove inventory items',\n            'inventory:manage': 'Full inventory management access',\n            'sales:view': 'View sales data and transactions',\n            'sales:create': 'Create new sales orders',\n            'sales:update': 'Edit existing sales orders',\n            'sales:manage': 'Full sales management access',\n            'user:view': 'View user accounts',\n            'user:create': 'Create new user accounts',\n            'user:update': 'Edit user accounts',\n            'user:delete': 'Delete user accounts',\n            'reports:view': 'View system reports',\n            'reports:export': 'Export reports to files',\n            'settings:manage': 'Manage system settings',\n            'dashboard:view': 'Access dashboard',\n        };\n        return descriptions[permissionName] || 'Permission access';\n    };\n\n    // Handle role template selection\n    const handleTemplateSelect = (templateId: string) => {\n        setSelectedTemplate(templateId);\n        const template = roleTemplates.find(t => t.id === templateId);\n        if (template) {\n            // Find permission IDs that match the template permission names\n            const templatePermissionIds = availablePermissions\n                .filter(p => {\n                    const permissionName = p.name.toLowerCase().replace(/\\s+/g, ':');\n                    return template.permissions.some(tp => \n                        permissionName.includes(tp.split(':')[0]) && \n                        permissionName.includes(tp.split(':')[1])\n                    );\n                })\n                .map(p => p.id);\n            \n            setUserForm(prev => ({ ...prev, permissions: templatePermissionIds }));\n        }\n    };\n\n    // Filter permissions based on search\n    const filteredPermissions = availablePermissions.filter(permission =>\n        permission.name.toLowerCase().includes(permissionSearch.toLowerCase()) ||\n        permission.module.toLowerCase().includes(permissionSearch.toLowerCase())\n    );\n\n    // Group permissions by module\n    const groupedPermissions = filteredPermissions.reduce((acc, permission) => {\n        const module = permission.module || 'Other';\n        if (!acc[module]) {\n            acc[module] = [];\n        }\n        acc[module].push(permission);\n        return acc;\n    }, {} as Record<string, typeof availablePermissions>);\n\n    const handleFormChange = (e) => {\n        const { name, value } = e.target;\n        setUserForm(prev => ({ ...prev, [name]: value }));\n    };\n\n    const handlePermissionChange = (permissionId: string) => {\n        setUserForm(prev => {\n            const newPermissions = prev.permissions.includes(permissionId)\n                ? prev.permissions.filter(id => id !== permissionId)\n                : [...prev.permissions, permissionId];\n            return { ...prev, permissions: newPermissions };\n        });\n    };\n\n    const handleModulePermissions = (module: string, isChecked: boolean) => {\n        const modulePermissionIds = groupedPermissions[module].map(p => p.id);\n\n        setUserForm(prev => {\n            let newPermissions;\n            if (isChecked) {\n                // Add all module permissions that aren't already selected\n                newPermissions = [...new Set([...prev.permissions, ...modulePermissionIds])];\n            } else {\n                // Remove all module permissions\n                newPermissions = prev.permissions.filter(id => !modulePermissionIds.includes(id));\n            }\n            return { ...prev, permissions: newPermissions };\n        });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setIsLoading(true);\n        setFormError('');\n        setFormSuccess('');\n\n        // Password validation\n        if (userForm.password !== userForm.confirmPassword) {\n            setFormError('Passwords do not match');\n            setIsLoading(false);\n            return;\n        }\n\n        try {\n            const response = await fetch('/api/users', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer dev-token',\n                },\n                body: JSON.stringify(userForm),\n            });\n\n            const data = await response.json();\n\n            if (data.success) {\n                setFormSuccess('User added successfully! Redirecting...');\n                setTimeout(() => {\n                    router.push('/settings?tab=users');\n                }, 1500);\n            } else {\n                setFormError(data.message || 'Failed to add user');\n            }\n        } catch (error) {\n            console.error('Error adding user:', error);\n            setFormError('An error occurred. Please try again.');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    // Check if all permissions in a module are selected\n    const isModuleSelected = (module: string) => {\n        const modulePermissions = groupedPermissions[module].map(p => p.id);\n        return modulePermissions.every(id => userForm.permissions.includes(id));\n    };\n\n    // Check if any permissions in a module are selected\n    const isModulePartiallySelected = (module: string) => {\n        const modulePermissions = groupedPermissions[module].map(p => p.id);\n        return modulePermissions.some(id => userForm.permissions.includes(id)) &&\n            !modulePermissions.every(id => userForm.permissions.includes(id));\n    };\n\n    return (\n        <div className=\"container mx-auto px-4 py-8\">\n            <div className=\"bg-white p-6 rounded-lg shadow-md max-w-3xl mx-auto\">\n                <div className=\"flex justify-between items-center mb-6 pb-4 border-b\">\n                    <h1 className=\"text-xl font-semibold text-gray-900\">Add New User</h1>\n                </div>\n\n                {formError && (\n                    <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md mb-4\">\n                        {formError}\n                    </div>\n                )}\n                {formSuccess && (\n                    <div className=\"bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded-md mb-4\">\n                        {formSuccess}\n                    </div>\n                )}\n\n                <form onSubmit={handleSubmit}>\n                    <div className=\"space-y-6\">\n                        <div>\n                            <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Full Name <span className=\"text-red-500\">*</span>\n                            </label>\n                            <input\n                                type=\"text\"\n                                id=\"name\"\n                                name=\"name\"\n                                value={userForm.name}\n                                onChange={handleFormChange}\n                                className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5\"\n                                required\n                            />\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Email Address <span className=\"text-red-500\">*</span>\n                            </label>\n                            <input\n                                type=\"email\"\n                                id=\"email\"\n                                name=\"email\"\n                                value={userForm.email}\n                                onChange={handleFormChange}\n                                className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5\"\n                                required\n                            />\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"shop\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Shop Assignment <span className=\"text-red-500\">*</span>\n                            </label>\n                            <select\n                                id=\"shop\"\n                                name=\"shop\"\n                                value={userForm.shop}\n                                onChange={handleFormChange}\n                                className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5\"\n                                required\n                                disabled={shopsLoading}\n                            >\n                                {shopsLoading ? (\n                                    <option value=\"\">Loading shops...</option>\n                                ) : (\n                                    <>\n                                        <option value=\"\">Select a shop</option>\n                                        {dynamicShops.length > 0 ? (\n                                            dynamicShops.map(shop => (\n                                                <option key={shop.id} value={shop.id}>{shop.name}</option>\n                                            ))\n                                        ) : (\n                                            <option value=\"\" disabled>No shops available</option>\n                                        )}\n                                    </>\n                                )}\n                            </select>\n                        </div>\n\n                        {/* Role Templates Section */}\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                                Quick Setup with Role Templates\n                            </label>\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 mb-4\">\n                                {roleTemplates.map(template => {\n                                    const IconComponent = template.icon;\n                                    return (\n                                        <div\n                                            key={template.id}\n                                            className={`p-3 rounded-lg border-2 cursor-pointer transition-all ${\n                                                selectedTemplate === template.id\n                                                    ? template.color + ' border-current'\n                                                    : 'border-gray-200 hover:border-gray-300'\n                                            }`}\n                                            onClick={() => handleTemplateSelect(template.id)}\n                                        >\n                                            <div className=\"flex items-start space-x-2\">\n                                                <IconComponent className=\"h-5 w-5 mt-0.5 flex-shrink-0\" />\n                                                <div className=\"flex-1 min-w-0\">\n                                                    <h4 className=\"text-sm font-medium truncate\">{template.name}</h4>\n                                                    <p className=\"text-xs text-gray-600 mt-1\">{template.description}</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n\n                        <div>\n                            <div className=\"flex items-center justify-between mb-3\">\n                                <label className=\"block text-sm font-medium text-gray-700\">\n                                    Permissions\n                                </label>\n                                <button\n                                    type=\"button\"\n                                    onClick={() => setShowAdvancedPermissions(!showAdvancedPermissions)}\n                                    className=\"text-sm text-primary hover:text-primary-dark\"\n                                >\n                                    {showAdvancedPermissions ? 'Hide Advanced' : 'Show Advanced'}\n                                </button>\n                            </div>\n                            \n                            {/* Permission Search */}\n                            <div className=\"relative mb-3\">\n                                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Search permissions...\"\n                                    value={permissionSearch}\n                                    onChange={(e) => setPermissionSearch(e.target.value)}\n                                    className=\"pl-10 pr-4 py-2 w-full border border-gray-300 rounded-lg focus:ring-primary focus:border-primary text-sm\"\n                                />\n                            </div>\n\n                            <div className=\"border border-gray-300 rounded-lg p-4 max-h-80 overflow-y-auto\">\n                                {permissionsLoading ? (\n                                    <div className=\"flex items-center justify-center py-4\">\n                                        <Loader2 className=\"h-5 w-5 animate-spin mr-2\" />\n                                        <span className=\"text-sm text-gray-500\">Loading permissions...</span>\n                                    </div>\n                                ) : Object.keys(groupedPermissions).length === 0 ? (\n                                    <div className=\"text-center py-4\">\n                                        <span className=\"text-sm text-gray-500\">No permissions available</span>\n                                    </div>\n                                ) : (\n                                    Object.keys(groupedPermissions).map(module => (\n                                        <div key={module} className=\"mb-4\">\n                                            <div className=\"flex items-center mb-2\">\n                                                <input\n                                                    type=\"checkbox\"\n                                                    id={`module-${module}`}\n                                                    checked={isModuleSelected(module)}\n                                                    className=\"h-4 w-4 text-primary focus:ring-primary border-gray-300 rounded\"\n                                                    onChange={(e) => handleModulePermissions(module, e.target.checked)}\n                                                />\n                                                <label\n                                                    htmlFor={`module-${module}`}\n                                                    className={`ml-2 text-sm font-medium ${isModulePartiallySelected(module) ? 'text-gray-500' : 'text-gray-700'\n                                                        }`}\n                                                >\n                                                    {module}\n                                                </label>\n                                            </div>\n                                            <div className=\"ml-6 grid grid-cols-1 md:grid-cols-2 gap-2\">\n                                                {groupedPermissions[module].map(permission => (\n                                                    <div key={permission.id} className=\"flex items-start space-x-2 group\">\n                                                        <input\n                                                            type=\"checkbox\"\n                                                            id={permission.id}\n                                                            checked={userForm.permissions.includes(permission.id)}\n                                                            onChange={() => handlePermissionChange(permission.id)}\n                                                            className=\"h-4 w-4 text-primary focus:ring-primary border-gray-300 rounded mt-0.5\"\n                                                        />\n                                                        <div className=\"flex-1 min-w-0\">\n                                                            <label htmlFor={permission.id} className=\"text-sm text-gray-600 cursor-pointer\">\n                                                                {permission.name}\n                                                            </label>\n                                                            {showAdvancedPermissions && permission.description && (\n                                                                <p className=\"text-xs text-gray-500 mt-1\">{permission.description}</p>\n                                                            )}\n                                                        </div>\n                                                        {permission.description && (\n                                                            <div className=\"relative group\">\n                                                                <Info className=\"h-3 w-3 text-gray-400 cursor-help\" />\n                                                                <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-2 py-1 bg-gray-800 text-white text-xs rounded opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\">\n                                                                    {permission.description}\n                                                                </div>\n                                                            </div>\n                                                        )}\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                    ))\n                                )}\n                            </div>\n                        </div>\n\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                            <div>\n                                <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Password <span className=\"text-red-500\">*</span>\n                                </label>\n                                <input\n                                    type=\"password\"\n                                    id=\"password\"\n                                    name=\"password\"\n                                    value={userForm.password}\n                                    onChange={handleFormChange}\n                                    className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5\"\n                                    required\n                                    minLength={8}\n                                />\n                            </div>\n\n                            <div>\n                                <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Confirm Password <span className=\"text-red-500\">*</span>\n                                </label>\n                                <input\n                                    type=\"password\"\n                                    id=\"confirmPassword\"\n                                    name=\"confirmPassword\"\n                                    value={userForm.confirmPassword}\n                                    onChange={handleFormChange}\n                                    className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5\"\n                                    required\n                                    minLength={8}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"flex justify-end space-x-3 mt-6\">\n                            <Button\n                                type=\"button\"\n                                variant=\"outline\"\n                                onClick={() => router.push('/settings?tab=users')}\n                            >\n                                Cancel\n                            </Button>\n                            <Button\n                                type=\"submit\"\n                                disabled={isLoading}\n                                className=\"flex items-center justify-center\"\n                            >\n                                {isLoading ? (\n                                    <>\n                                        <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                                        Creating...\n                                    </>\n                                ) : (\n                                    'Create User'\n                                )}\n                            </Button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}"],"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","ignoreList":[]}