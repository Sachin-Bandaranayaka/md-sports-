2133459af284e68f7d2a0cf899254ef8
"use strict";

/* istanbul ignore next */
function cov_2g8rkm9m8q() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/auth/logout/route.ts";
  var hash = "dcba4bd3a0d75b9dc868bd479653fb0db293c0b7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/auth/logout/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 12,
          column: 80
        }
      },
      "5": {
        start: {
          line: 13,
          column: 22
        },
        end: {
          line: 13,
          column: 59
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 43
        }
      },
      "7": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 83,
          column: 5
        }
      },
      "8": {
        start: {
          line: 17,
          column: 39
        },
        end: {
          line: 17,
          column: 77
        }
      },
      "9": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "10": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 25,
          column: 13
        }
      },
      "11": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 91
        }
      },
      "12": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 116
        }
      },
      "13": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 70
        }
      },
      "14": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 68
        }
      },
      "15": {
        start: {
          line: 29,
          column: 25
        },
        end: {
          line: 32,
          column: 10
        }
      },
      "16": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 42,
          column: 11
        }
      },
      "17": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 52,
          column: 11
        }
      },
      "18": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 45
        }
      },
      "19": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 24
        }
      },
      "20": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 46
        }
      },
      "21": {
        start: {
          line: 58,
          column: 30
        },
        end: {
          line: 63,
          column: 10
        }
      },
      "22": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 72,
          column: 11
        }
      },
      "23": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 81,
          column: 11
        }
      },
      "24": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "POST",
        decl: {
          start: {
            line: 14,
            column: 15
          },
          end: {
            line: 14,
            column: 19
          }
        },
        loc: {
          start: {
            line: 14,
            column: 25
          },
          end: {
            line: 84,
            column: 1
          }
        },
        line: 14
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        }, {
          start: {
            line: 26,
            column: 15
          },
          end: {
            line: 28,
            column: 9
          }
        }],
        line: 18
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/auth/logout/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { revokeRefreshToken } from '@/services/refreshTokenService';\n\nconst COOKIE_SECURE = process.env.NODE_ENV === 'production';\n\nexport async function POST(req: NextRequest) {\n    console.log('Logout request received');\n    try {\n        const refreshTokenFromCookie = req.cookies.get('refreshToken')?.value;\n\n        if (refreshTokenFromCookie) {\n            try {\n                await revokeRefreshToken(refreshTokenFromCookie);\n                console.log('Refresh token revoked successfully:', refreshTokenFromCookie.substring(0, 10) + '...');\n            } catch (error) {\n                // Log the error but continue to clear cookies as a best effort\n                console.error('Error revoking refresh token:', error);\n            }\n        } else {\n            console.log('No refresh token cookie found to revoke.');\n        }\n\n        const response = NextResponse.json({ success: true, message: 'Logged out successfully' });\n\n        // Clear accessToken cookie\n        response.cookies.set({\n            name: 'accessToken',\n            value: '',\n            httpOnly: true,\n            secure: COOKIE_SECURE,\n            sameSite: 'strict',\n            maxAge: -1, // Expire immediately\n            path: '/'\n        });\n\n        // Clear refreshToken cookie\n        response.cookies.set({\n            name: 'refreshToken',\n            value: '',\n            httpOnly: true,\n            secure: COOKIE_SECURE,\n            sameSite: 'strict',\n            maxAge: -1, // Expire immediately\n            path: '/'\n        });\n\n        console.log('Auth cookies cleared.');\n        return response;\n    } catch (error) {\n        console.error('Logout error:', error);\n        // Still attempt to clear cookies in the response even if an unexpected error occurs\n        const errorResponse = NextResponse.json(\n            { success: false, message: 'Logout failed' },\n            { status: 500 }\n        );\n        errorResponse.cookies.set({\n            name: 'accessToken',\n            value: '',\n            httpOnly: true,\n            secure: COOKIE_SECURE,\n            sameSite: 'strict',\n            maxAge: -1,\n            path: '/'\n        });\n        errorResponse.cookies.set({\n            name: 'refreshToken',\n            value: '',\n            httpOnly: true,\n            secure: COOKIE_SECURE,\n            sameSite: 'strict',\n            maxAge: -1,\n            path: '/'\n        });\n        return errorResponse;\n    }\n} "],
      names: ["POST", "COOKIE_SECURE", "process", "env", "NODE_ENV", "req", "console", "log", "refreshTokenFromCookie", "cookies", "get", "value", "revokeRefreshToken", "substring", "error", "response", "NextResponse", "json", "success", "message", "set", "name", "httpOnly", "secure", "sameSite", "maxAge", "path", "errorResponse", "status"],
      mappings: ";;;;+BAKsBA;;;eAAAA;;;wBALoB;qCACP;AAEnC,MAAMC,gBAAgBC,QAAQC,GAAG,CAACC,QAAQ,KAAK;AAExC,eAAeJ,KAAKK,GAAgB;IACvCC,QAAQC,GAAG,CAAC;IACZ,IAAI;QACA,MAAMC,yBAAyBH,IAAII,OAAO,CAACC,GAAG,CAAC,iBAAiBC;QAEhE,IAAIH,wBAAwB;YACxB,IAAI;gBACA,MAAMI,IAAAA,uCAAkB,EAACJ;gBACzBF,QAAQC,GAAG,CAAC,uCAAuCC,uBAAuBK,SAAS,CAAC,GAAG,MAAM;YACjG,EAAE,OAAOC,OAAO;gBACZ,+DAA+D;gBAC/DR,QAAQQ,KAAK,CAAC,iCAAiCA;YACnD;QACJ,OAAO;YACHR,QAAQC,GAAG,CAAC;QAChB;QAEA,MAAMQ,WAAWC,oBAAY,CAACC,IAAI,CAAC;YAAEC,SAAS;YAAMC,SAAS;QAA0B;QAEvF,2BAA2B;QAC3BJ,SAASN,OAAO,CAACW,GAAG,CAAC;YACjBC,MAAM;YACNV,OAAO;YACPW,UAAU;YACVC,QAAQtB;YACRuB,UAAU;YACVC,QAAQ,CAAC;YACTC,MAAM;QACV;QAEA,4BAA4B;QAC5BX,SAASN,OAAO,CAACW,GAAG,CAAC;YACjBC,MAAM;YACNV,OAAO;YACPW,UAAU;YACVC,QAAQtB;YACRuB,UAAU;YACVC,QAAQ,CAAC;YACTC,MAAM;QACV;QAEApB,QAAQC,GAAG,CAAC;QACZ,OAAOQ;IACX,EAAE,OAAOD,OAAO;QACZR,QAAQQ,KAAK,CAAC,iBAAiBA;QAC/B,oFAAoF;QACpF,MAAMa,gBAAgBX,oBAAY,CAACC,IAAI,CACnC;YAAEC,SAAS;YAAOC,SAAS;QAAgB,GAC3C;YAAES,QAAQ;QAAI;QAElBD,cAAclB,OAAO,CAACW,GAAG,CAAC;YACtBC,MAAM;YACNV,OAAO;YACPW,UAAU;YACVC,QAAQtB;YACRuB,UAAU;YACVC,QAAQ,CAAC;YACTC,MAAM;QACV;QACAC,cAAclB,OAAO,CAACW,GAAG,CAAC;YACtBC,MAAM;YACNV,OAAO;YACPW,UAAU;YACVC,QAAQtB;YACRuB,UAAU;YACVC,QAAQ,CAAC;YACTC,MAAM;QACV;QACA,OAAOC;IACX;AACJ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dcba4bd3a0d75b9dc868bd479653fb0db293c0b7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2g8rkm9m8q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2g8rkm9m8q();
cov_2g8rkm9m8q().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2g8rkm9m8q().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2g8rkm9m8q().f[0]++;
    cov_2g8rkm9m8q().s[2]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_2g8rkm9m8q().s[3]++, require("next/server"));
const _refreshTokenService =
/* istanbul ignore next */
(cov_2g8rkm9m8q().s[4]++, require("../../../../services/refreshTokenService"));
const COOKIE_SECURE =
/* istanbul ignore next */
(cov_2g8rkm9m8q().s[5]++, process.env.NODE_ENV === "production");
async function POST(req) {
  /* istanbul ignore next */
  cov_2g8rkm9m8q().f[1]++;
  cov_2g8rkm9m8q().s[6]++;
  console.log("Logout request received");
  /* istanbul ignore next */
  cov_2g8rkm9m8q().s[7]++;
  try {
    const refreshTokenFromCookie =
    /* istanbul ignore next */
    (cov_2g8rkm9m8q().s[8]++, req.cookies.get("refreshToken")?.value);
    /* istanbul ignore next */
    cov_2g8rkm9m8q().s[9]++;
    if (refreshTokenFromCookie) {
      /* istanbul ignore next */
      cov_2g8rkm9m8q().b[0][0]++;
      cov_2g8rkm9m8q().s[10]++;
      try {
        /* istanbul ignore next */
        cov_2g8rkm9m8q().s[11]++;
        await (0, _refreshTokenService.revokeRefreshToken)(refreshTokenFromCookie);
        /* istanbul ignore next */
        cov_2g8rkm9m8q().s[12]++;
        console.log("Refresh token revoked successfully:", refreshTokenFromCookie.substring(0, 10) + "...");
      } catch (error) {
        /* istanbul ignore next */
        cov_2g8rkm9m8q().s[13]++;
        // Log the error but continue to clear cookies as a best effort
        console.error("Error revoking refresh token:", error);
      }
    } else {
      /* istanbul ignore next */
      cov_2g8rkm9m8q().b[0][1]++;
      cov_2g8rkm9m8q().s[14]++;
      console.log("No refresh token cookie found to revoke.");
    }
    const response =
    /* istanbul ignore next */
    (cov_2g8rkm9m8q().s[15]++, _server.NextResponse.json({
      success: true,
      message: "Logged out successfully"
    }));
    // Clear accessToken cookie
    /* istanbul ignore next */
    cov_2g8rkm9m8q().s[16]++;
    response.cookies.set({
      name: "accessToken",
      value: "",
      httpOnly: true,
      secure: COOKIE_SECURE,
      sameSite: "strict",
      maxAge: -1,
      path: "/"
    });
    // Clear refreshToken cookie
    /* istanbul ignore next */
    cov_2g8rkm9m8q().s[17]++;
    response.cookies.set({
      name: "refreshToken",
      value: "",
      httpOnly: true,
      secure: COOKIE_SECURE,
      sameSite: "strict",
      maxAge: -1,
      path: "/"
    });
    /* istanbul ignore next */
    cov_2g8rkm9m8q().s[18]++;
    console.log("Auth cookies cleared.");
    /* istanbul ignore next */
    cov_2g8rkm9m8q().s[19]++;
    return response;
  } catch (error) {
    /* istanbul ignore next */
    cov_2g8rkm9m8q().s[20]++;
    console.error("Logout error:", error);
    // Still attempt to clear cookies in the response even if an unexpected error occurs
    const errorResponse =
    /* istanbul ignore next */
    (cov_2g8rkm9m8q().s[21]++, _server.NextResponse.json({
      success: false,
      message: "Logout failed"
    }, {
      status: 500
    }));
    /* istanbul ignore next */
    cov_2g8rkm9m8q().s[22]++;
    errorResponse.cookies.set({
      name: "accessToken",
      value: "",
      httpOnly: true,
      secure: COOKIE_SECURE,
      sameSite: "strict",
      maxAge: -1,
      path: "/"
    });
    /* istanbul ignore next */
    cov_2g8rkm9m8q().s[23]++;
    errorResponse.cookies.set({
      name: "refreshToken",
      value: "",
      httpOnly: true,
      secure: COOKIE_SECURE,
      sameSite: "strict",
      maxAge: -1,
      path: "/"
    });
    /* istanbul ignore next */
    cov_2g8rkm9m8q().s[24]++;
    return errorResponse;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmc4cmttOW04cSIsImFjdHVhbENvdmVyYWdlIiwicyIsIlBPU1QiLCJDT09LSUVfU0VDVVJFIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwicmVxIiwiZiIsImNvbnNvbGUiLCJsb2ciLCJyZWZyZXNoVG9rZW5Gcm9tQ29va2llIiwiY29va2llcyIsImdldCIsInZhbHVlIiwiYiIsIl9yZWZyZXNoVG9rZW5TZXJ2aWNlIiwicmV2b2tlUmVmcmVzaFRva2VuIiwic3Vic3RyaW5nIiwiZXJyb3IiLCJyZXNwb25zZSIsIl9zZXJ2ZXIiLCJOZXh0UmVzcG9uc2UiLCJqc29uIiwic3VjY2VzcyIsIm1lc3NhZ2UiLCJzZXQiLCJuYW1lIiwiaHR0cE9ubHkiLCJzZWN1cmUiLCJzYW1lU2l0ZSIsIm1heEFnZSIsInBhdGgiLCJlcnJvclJlc3BvbnNlIiwic3RhdHVzIl0sInNvdXJjZXMiOlsiL1VzZXJzL3NhY2hpbi9Eb2N1bWVudHMvbWQtc3BvcnRzLS9zcmMvYXBwL2FwaS9hdXRoL2xvZ291dC9yb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0IHsgcmV2b2tlUmVmcmVzaFRva2VuIH0gZnJvbSAnQC9zZXJ2aWNlcy9yZWZyZXNoVG9rZW5TZXJ2aWNlJztcblxuY29uc3QgQ09PS0lFX1NFQ1VSRSA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbic7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcTogTmV4dFJlcXVlc3QpIHtcbiAgICBjb25zb2xlLmxvZygnTG9nb3V0IHJlcXVlc3QgcmVjZWl2ZWQnKTtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCByZWZyZXNoVG9rZW5Gcm9tQ29va2llID0gcmVxLmNvb2tpZXMuZ2V0KCdyZWZyZXNoVG9rZW4nKT8udmFsdWU7XG5cbiAgICAgICAgaWYgKHJlZnJlc2hUb2tlbkZyb21Db29raWUpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgcmV2b2tlUmVmcmVzaFRva2VuKHJlZnJlc2hUb2tlbkZyb21Db29raWUpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdSZWZyZXNoIHRva2VuIHJldm9rZWQgc3VjY2Vzc2Z1bGx5OicsIHJlZnJlc2hUb2tlbkZyb21Db29raWUuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgLy8gTG9nIHRoZSBlcnJvciBidXQgY29udGludWUgdG8gY2xlYXIgY29va2llcyBhcyBhIGJlc3QgZWZmb3J0XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgcmV2b2tpbmcgcmVmcmVzaCB0b2tlbjonLCBlcnJvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnTm8gcmVmcmVzaCB0b2tlbiBjb29raWUgZm91bmQgdG8gcmV2b2tlLicpO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBOZXh0UmVzcG9uc2UuanNvbih7IHN1Y2Nlc3M6IHRydWUsIG1lc3NhZ2U6ICdMb2dnZWQgb3V0IHN1Y2Nlc3NmdWxseScgfSk7XG5cbiAgICAgICAgLy8gQ2xlYXIgYWNjZXNzVG9rZW4gY29va2llXG4gICAgICAgIHJlc3BvbnNlLmNvb2tpZXMuc2V0KHtcbiAgICAgICAgICAgIG5hbWU6ICdhY2Nlc3NUb2tlbicsXG4gICAgICAgICAgICB2YWx1ZTogJycsXG4gICAgICAgICAgICBodHRwT25seTogdHJ1ZSxcbiAgICAgICAgICAgIHNlY3VyZTogQ09PS0lFX1NFQ1VSRSxcbiAgICAgICAgICAgIHNhbWVTaXRlOiAnc3RyaWN0JyxcbiAgICAgICAgICAgIG1heEFnZTogLTEsIC8vIEV4cGlyZSBpbW1lZGlhdGVseVxuICAgICAgICAgICAgcGF0aDogJy8nXG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIENsZWFyIHJlZnJlc2hUb2tlbiBjb29raWVcbiAgICAgICAgcmVzcG9uc2UuY29va2llcy5zZXQoe1xuICAgICAgICAgICAgbmFtZTogJ3JlZnJlc2hUb2tlbicsXG4gICAgICAgICAgICB2YWx1ZTogJycsXG4gICAgICAgICAgICBodHRwT25seTogdHJ1ZSxcbiAgICAgICAgICAgIHNlY3VyZTogQ09PS0lFX1NFQ1VSRSxcbiAgICAgICAgICAgIHNhbWVTaXRlOiAnc3RyaWN0JyxcbiAgICAgICAgICAgIG1heEFnZTogLTEsIC8vIEV4cGlyZSBpbW1lZGlhdGVseVxuICAgICAgICAgICAgcGF0aDogJy8nXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNvbnNvbGUubG9nKCdBdXRoIGNvb2tpZXMgY2xlYXJlZC4nKTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0xvZ291dCBlcnJvcjonLCBlcnJvcik7XG4gICAgICAgIC8vIFN0aWxsIGF0dGVtcHQgdG8gY2xlYXIgY29va2llcyBpbiB0aGUgcmVzcG9uc2UgZXZlbiBpZiBhbiB1bmV4cGVjdGVkIGVycm9yIG9jY3Vyc1xuICAgICAgICBjb25zdCBlcnJvclJlc3BvbnNlID0gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgICAgICB7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiAnTG9nb3V0IGZhaWxlZCcgfSxcbiAgICAgICAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICAgICApO1xuICAgICAgICBlcnJvclJlc3BvbnNlLmNvb2tpZXMuc2V0KHtcbiAgICAgICAgICAgIG5hbWU6ICdhY2Nlc3NUb2tlbicsXG4gICAgICAgICAgICB2YWx1ZTogJycsXG4gICAgICAgICAgICBodHRwT25seTogdHJ1ZSxcbiAgICAgICAgICAgIHNlY3VyZTogQ09PS0lFX1NFQ1VSRSxcbiAgICAgICAgICAgIHNhbWVTaXRlOiAnc3RyaWN0JyxcbiAgICAgICAgICAgIG1heEFnZTogLTEsXG4gICAgICAgICAgICBwYXRoOiAnLydcbiAgICAgICAgfSk7XG4gICAgICAgIGVycm9yUmVzcG9uc2UuY29va2llcy5zZXQoe1xuICAgICAgICAgICAgbmFtZTogJ3JlZnJlc2hUb2tlbicsXG4gICAgICAgICAgICB2YWx1ZTogJycsXG4gICAgICAgICAgICBodHRwT25seTogdHJ1ZSxcbiAgICAgICAgICAgIHNlY3VyZTogQ09PS0lFX1NFQ1VSRSxcbiAgICAgICAgICAgIHNhbWVTaXRlOiAnc3RyaWN0JyxcbiAgICAgICAgICAgIG1heEFnZTogLTEsXG4gICAgICAgICAgICBwYXRoOiAnLydcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBlcnJvclJlc3BvbnNlO1xuICAgIH1cbn0gIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBT1E7SUFBQUEsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsY0FBQTtBQUFBQSxjQUFBLEdBQUFF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