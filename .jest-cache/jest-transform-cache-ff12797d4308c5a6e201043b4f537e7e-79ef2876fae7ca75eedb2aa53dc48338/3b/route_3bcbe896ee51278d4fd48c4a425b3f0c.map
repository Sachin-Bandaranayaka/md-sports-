{"version":3,"names":["cov_2g8rkm9m8q","actualCoverage","s","POST","COOKIE_SECURE","process","env","NODE_ENV","req","f","console","log","refreshTokenFromCookie","cookies","get","value","b","_refreshTokenService","revokeRefreshToken","substring","error","response","_server","NextResponse","json","success","message","set","name","httpOnly","secure","sameSite","maxAge","path","errorResponse","status"],"sources":["/Users/sachin/Documents/md-sports-/src/app/api/auth/logout/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { revokeRefreshToken } from '@/services/refreshTokenService';\n\nconst COOKIE_SECURE = process.env.NODE_ENV === 'production';\n\nexport async function POST(req: NextRequest) {\n    console.log('Logout request received');\n    try {\n        const refreshTokenFromCookie = req.cookies.get('refreshToken')?.value;\n\n        if (refreshTokenFromCookie) {\n            try {\n                await revokeRefreshToken(refreshTokenFromCookie);\n                console.log('Refresh token revoked successfully:', refreshTokenFromCookie.substring(0, 10) + '...');\n            } catch (error) {\n                // Log the error but continue to clear cookies as a best effort\n                console.error('Error revoking refresh token:', error);\n            }\n        } else {\n            console.log('No refresh token cookie found to revoke.');\n        }\n\n        const response = NextResponse.json({ success: true, message: 'Logged out successfully' });\n\n        // Clear accessToken cookie\n        response.cookies.set({\n            name: 'accessToken',\n            value: '',\n            httpOnly: true,\n            secure: COOKIE_SECURE,\n            sameSite: 'strict',\n            maxAge: -1, // Expire immediately\n            path: '/'\n        });\n\n        // Clear refreshToken cookie\n        response.cookies.set({\n            name: 'refreshToken',\n            value: '',\n            httpOnly: true,\n            secure: COOKIE_SECURE,\n            sameSite: 'strict',\n            maxAge: -1, // Expire immediately\n            path: '/'\n        });\n\n        console.log('Auth cookies cleared.');\n        return response;\n    } catch (error) {\n        console.error('Logout error:', error);\n        // Still attempt to clear cookies in the response even if an unexpected error occurs\n        const errorResponse = NextResponse.json(\n            { success: false, message: 'Logout failed' },\n            { status: 500 }\n        );\n        errorResponse.cookies.set({\n            name: 'accessToken',\n            value: '',\n            httpOnly: true,\n            secure: COOKIE_SECURE,\n            sameSite: 'strict',\n            maxAge: -1,\n            path: '/'\n        });\n        errorResponse.cookies.set({\n            name: 'refreshToken',\n            value: '',\n            httpOnly: true,\n            secure: COOKIE_SECURE,\n            sameSite: 'strict',\n            maxAge: -1,\n            path: '/'\n        });\n        return errorResponse;\n    }\n} "],"mappings":"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","ignoreList":[]}