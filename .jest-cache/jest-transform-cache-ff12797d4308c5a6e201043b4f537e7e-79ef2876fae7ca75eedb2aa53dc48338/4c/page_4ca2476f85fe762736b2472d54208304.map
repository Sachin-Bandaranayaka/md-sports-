{"version":3,"names":["InventoryDistribution","cov_o6p580jko","f","router","s","_navigation","useRouter","hasPermission","_useAuth","useAuth","loading","setLoading","_react","useState","shopList","setShopList","products","setProducts","searchTerm","setSearchTerm","sortBy","setSortBy","sortDirection","setSortDirection","selectedShopForSort","setSelectedShopForSort","canViewCosts","b","error","setError","showFilterPanel","setShowFilterPanel","viewMode","setViewMode","useEffect","fetchData","productsResponse","fetch","ok","Error","productsData","json","success","message","transformedProducts","shopsMap","Map","product","data","inventoryResponse","id","inventoryData","branchStock","totalStock","inventory","forEach","inv","quantity","has","shop_id","set","name","shop_name","push","shopId","shopName","shopSpecificCost","parseFloat","shop_specific_cost","sku","retailPrice","price","weightedAverageCost","shopsList","Array","from","values","sort","a","localeCompare","err","console","filteredProducts","filter","matchesSearch","toLowerCase","includes","getTotalShopCost","shopStock","find","branch","sortedProducts","compareResult","aShopStock","bShopStock","aQuantity","bQuantity","aTotalCost","bTotalCost","goToProductDetails","productId","handleSort","column","clearFilters","getLowestStockShop","length","reduce","lowest","current","getHighestStockShop","highest","_jsxruntime","jsx","_MainLayout","default","className","_lucidereact","Loader2","jsxs","_Button","Button","variant","size","onClick","ArrowLeft","Search","type","placeholder","value","onChange","e","target","Filter","Package","Store","X","Number","map","shop","scope","ArrowUpDown","title","Fragment","lowestStockShop","highestStockShop","stockInShop","isLowestStock","isHighestStock","toLocaleString","some","retailValue","totalShopCost"],"sources":["/Users/sachin/Documents/md-sports-/src/app/inventory/distribution/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport MainLayout from '@/components/layout/MainLayout';\nimport {\n    Package,\n    Store,\n    Search,\n    Loader2,\n    ArrowLeft,\n    Filter,\n    X,\n    ArrowUpDown\n} from 'lucide-react';\nimport { Button } from '@/components/ui/Button';\nimport { useAuth } from '@/hooks/useAuth';\n\n// Define types\ninterface ShopStock {\n    shopId: number;\n    shopName: string;\n    quantity: number;\n    shopSpecificCost: number;\n}\n\ninterface ProductStock {\n    id: number;\n    name: string;\n    sku: string;\n    retailPrice: number;\n    weightedAverageCost: number;\n    totalStock: number;\n    branchStock: ShopStock[];\n}\n\ninterface Shop {\n    id: number;\n    name: string;\n}\n\nexport default function InventoryDistribution() {\n    const router = useRouter();\n    const { hasPermission } = useAuth();\n    const [loading, setLoading] = useState(true);\n    const [shopList, setShopList] = useState<Shop[]>([]);\n    const [products, setProducts] = useState<ProductStock[]>([]);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const [sortBy, setSortBy] = useState<string>('name');\n    const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\n    const [selectedShopForSort, setSelectedShopForSort] = useState<number | null>(null);\n    \n    // Check if user can view cost data\n    const canViewCosts = hasPermission('shop:view_costs') || hasPermission('admin:all');\n    const [error, setError] = useState<string | null>(null);\n    const [showFilterPanel, setShowFilterPanel] = useState(false);\n    const [viewMode, setViewMode] = useState<'product' | 'shop'>('product');\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = async () => {\n        setLoading(true);\n        setError(null);\n\n        try {\n            // Fetch all products with their inventory data\n            const productsResponse = await fetch('/api/products');\n\n            if (!productsResponse.ok) {\n                throw new Error('Failed to fetch products');\n            }\n\n            const productsData = await productsResponse.json();\n\n            if (!productsData.success) {\n                throw new Error(productsData.message || 'Failed to fetch products');\n            }\n\n            // Transform and collect all products with their inventory data\n            const transformedProducts: ProductStock[] = [];\n            const shopsMap = new Map<number, Shop>();\n\n            for (const product of productsData.data) {\n                // Fetch inventory levels for this product\n                const inventoryResponse = await fetch(`/api/products/${product.id}`);\n                const inventoryData = await inventoryResponse.json();\n\n                if (inventoryData.success) {\n                    const branchStock: ShopStock[] = [];\n                    let totalStock = 0;\n\n                    if (inventoryData.data.inventory) {\n                        // Build the shop list while processing inventory\n                        inventoryData.data.inventory.forEach((inv: any) => {\n                            totalStock += inv.quantity;\n\n                            // Add shop to the map if not already present\n                            if (!shopsMap.has(inv.shop_id)) {\n                                shopsMap.set(inv.shop_id, {\n                                    id: inv.shop_id,\n                                    name: inv.shop_name\n                                });\n                            }\n\n                            branchStock.push({\n                                shopId: inv.shop_id,\n                                shopName: inv.shop_name,\n                                quantity: inv.quantity,\n                                shopSpecificCost: parseFloat(inv.shop_specific_cost) || 0\n                            });\n                        });\n                    }\n\n                    transformedProducts.push({\n                        id: product.id,\n                        name: product.name,\n                        sku: product.sku || '',\n                        retailPrice: parseFloat(product.price) || 0,\n                        weightedAverageCost: parseFloat(product.weightedAverageCost) || 0,\n                        totalStock,\n                        branchStock\n                    });\n                }\n            }\n\n            // Convert the shops map to an array and sort by name\n            const shopsList = Array.from(shopsMap.values()).sort((a, b) =>\n                a.name.localeCompare(b.name)\n            );\n\n            setProducts(transformedProducts);\n            setShopList(shopsList);\n        } catch (err) {\n            console.error('Error fetching data:', err);\n            setError('Failed to load inventory distribution data. Please try again later.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Filter products based on search term\n    const filteredProducts = products.filter(product => {\n        const matchesSearch = searchTerm === '' ||\n            product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n            product.sku.toLowerCase().includes(searchTerm.toLowerCase());\n\n        return matchesSearch;\n    });\n\n    // Calculate total shop cost for a product in a specific shop\n    const getTotalShopCost = (product: ProductStock, shopId: number) => {\n        const shopStock = product.branchStock.find(branch => branch.shopId === shopId);\n        if (!shopStock) return 0;\n        return shopStock.quantity * shopStock.shopSpecificCost;\n    };\n\n    // Sort products\n    const sortedProducts = [...filteredProducts].sort((a, b) => {\n        let compareResult = 0;\n\n        if (sortBy === 'name') {\n            compareResult = a.name.localeCompare(b.name);\n        } else if (sortBy === 'totalStock') {\n            compareResult = a.totalStock - b.totalStock;\n        } else if (sortBy === 'sku') {\n            compareResult = a.sku.localeCompare(b.sku);\n        } else if (sortBy === 'shopStock' && selectedShopForSort) {\n            const aShopStock = a.branchStock.find(branch => branch.shopId === selectedShopForSort);\n            const bShopStock = b.branchStock.find(branch => branch.shopId === selectedShopForSort);\n            const aQuantity = aShopStock ? aShopStock.quantity : 0;\n            const bQuantity = bShopStock ? bShopStock.quantity : 0;\n            compareResult = aQuantity - bQuantity;\n        } else if (sortBy === 'shopTotalCost' && selectedShopForSort) {\n            const aTotalCost = getTotalShopCost(a, selectedShopForSort);\n            const bTotalCost = getTotalShopCost(b, selectedShopForSort);\n            compareResult = aTotalCost - bTotalCost;\n        }\n\n        return sortDirection === 'asc' ? compareResult : -compareResult;\n    });\n\n\n\n    // Navigate to product details\n    const goToProductDetails = (productId: number) => {\n        router.push(`/inventory/${productId}`);\n    };\n\n    // Handle sort\n    const handleSort = (column: string, shopId?: number) => {\n        if (sortBy === column && selectedShopForSort === shopId) {\n            setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n        } else {\n            setSortBy(column);\n            setSortDirection('asc');\n            if (shopId) {\n                setSelectedShopForSort(shopId);\n            }\n        }\n    };\n\n    // Clear all filters\n    const clearFilters = () => {\n        setSearchTerm('');\n        setSortBy('name');\n        setSortDirection('asc');\n        setSelectedShopForSort(null);\n        setShowFilterPanel(false);\n    };\n\n    // Calculate the lowest stock shop for a product\n    const getLowestStockShop = (product: ProductStock) => {\n        if (product.branchStock.length === 0) return null;\n\n        return product.branchStock.reduce((lowest, current) =>\n            (current.quantity < lowest.quantity) ? current : lowest\n        );\n    };\n\n    // Calculate the highest stock shop for a product\n    const getHighestStockShop = (product: ProductStock) => {\n        if (product.branchStock.length === 0) return null;\n\n        return product.branchStock.reduce((highest, current) =>\n            (current.quantity > highest.quantity) ? current : highest\n        );\n    };\n\n\n\n    if (loading) {\n        return (\n            <MainLayout>\n                <div className=\"flex items-center justify-center h-96\">\n                    <Loader2 className=\"w-12 h-12 animate-spin text-primary\" />\n                </div>\n            </MainLayout>\n        );\n    }\n\n    return (\n        <MainLayout>\n            <div className=\"space-y-6\">\n                {/* Header */}\n                <div className=\"bg-tertiary p-5 rounded-xl shadow-sm border border-gray-200\">\n                    <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\n                        <div>\n                            <div className=\"flex items-center gap-2\">\n                                <Button\n                                    variant=\"ghost\"\n                                    size=\"sm\"\n                                    className=\"p-0 hover:bg-transparent\"\n                                    onClick={() => router.push('/inventory')}\n                                >\n                                    <ArrowLeft className=\"h-5 w-5 text-black\" />\n                                </Button>\n                                <h1 className=\"text-xl font-semibold text-black\">Product Distribution</h1>\n                            </div>\n                            <p className=\"text-sm text-black\">View how products are distributed across all shops</p>\n                        </div>\n                        <div className=\"flex gap-3\">\n                            <div className=\"relative\">\n                                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Search products...\"\n                                    className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary text-black\"\n                                    value={searchTerm}\n                                    onChange={(e) => setSearchTerm(e.target.value)}\n                                />\n                            </div>\n                            <Button\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={() => setShowFilterPanel(!showFilterPanel)}\n                                className=\"text-black\"\n                            >\n                                <Filter className=\"h-4 w-4 mr-2\" />\n                                Filters\n                            </Button>\n                            <div className=\"flex\">\n                                <Button\n                                    variant={viewMode === 'product' ? 'secondary' : 'outline'}\n                                    size=\"sm\"\n                                    onClick={() => setViewMode('product')}\n                                    className={viewMode === 'product' ? 'text-white' : 'text-black'}\n                                >\n                                    <Package className=\"h-4 w-4 mr-2\" />\n                                    By Product\n                                </Button>\n                                <Button\n                                    variant={viewMode === 'shop' ? 'secondary' : 'outline'}\n                                    size=\"sm\"\n                                    onClick={() => setViewMode('shop')}\n                                    className={viewMode === 'shop' ? 'text-white' : 'text-black'}\n                                >\n                                    <Store className=\"h-4 w-4 mr-2\" />\n                                    By Shop\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Filter Panel */}\n                {showFilterPanel && (\n                    <div className=\"bg-tertiary p-5 rounded-xl shadow-sm border border-gray-200\">\n                        <div className=\"flex justify-between items-center mb-4\">\n                            <h2 className=\"text-lg font-semibold text-black\">Filters</h2>\n                            <Button variant=\"ghost\" size=\"sm\" onClick={() => setShowFilterPanel(false)}>\n                                <X className=\"h-4 w-4 text-black\" />\n                            </Button>\n                        </div>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                            <div>\n                                <label className=\"block text-sm font-medium text-black mb-1\">Sort By</label>\n                                <select\n                                    className=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary text-black\"\n                                    value={sortBy}\n                                    onChange={(e) => {\n                                        setSortBy(e.target.value);\n                                        if (!['shopStock', 'shopTotalCost'].includes(e.target.value) || (e.target.value === 'shopTotalCost' && !canViewCosts)) {\n                                            setSelectedShopForSort(null);\n                                        }\n                                    }}\n                                >\n                                    <option value=\"name\">Product Name</option>\n                                    <option value=\"sku\">SKU</option>\n                                    <option value=\"totalStock\">Total Stock</option>\n                                    <option value=\"shopStock\">Shop Stock Quantity</option>\n                                    {canViewCosts && (\n                                        <option value=\"shopTotalCost\">Shop Total Cost</option>\n                                    )}\n                                </select>\n                            </div>\n                            {(sortBy === 'shopStock' || (sortBy === 'shopTotalCost' && canViewCosts)) && (\n                                <div>\n                                    <label className=\"block text-sm font-medium text-black mb-1\">Select Shop</label>\n                                    <select\n                                        className=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary text-black\"\n                                        value={selectedShopForSort || ''}\n                                        onChange={(e) => setSelectedShopForSort(Number(e.target.value))}\n                                    >\n                                        <option value=\"\">Select a shop</option>\n                                        {shopList.map(shop => (\n                                            <option key={shop.id} value={shop.id}>{shop.name}</option>\n                                        ))}\n                                    </select>\n                                </div>\n                            )}\n                        </div>\n                        <div className=\"flex items-end mt-4\">\n                            <Button variant=\"outline\" onClick={clearFilters} className=\"text-black\">\n                                Clear Filters\n                            </Button>\n                        </div>\n                    </div>\n                )}\n\n                {/* Error Message */}\n                {error && (\n                    <div className=\"bg-red-100 p-4 rounded-lg border border-red-200 text-red-800\">\n                        {error}\n                    </div>\n                )}\n\n                {/* Product-Centric View */}\n                {viewMode === 'product' && (\n                    <div className=\"bg-white p-4 rounded-xl shadow-sm border border-gray-200 overflow-x-auto\">\n                        <table className=\"min-w-full divide-y divide-gray-200\">\n                            <thead className=\"bg-gray-50\">\n                                <tr>\n                                    <th\n                                        scope=\"col\"\n                                        className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                                        onClick={() => handleSort('name')}\n                                    >\n                                        <div className=\"flex items-center\">\n                                            Product\n                                            {sortBy === 'name' && (\n                                                <ArrowUpDown className=\"ml-1 h-4 w-4\" />\n                                            )}\n                                        </div>\n                                    </th>\n                                    <th\n                                        scope=\"col\"\n                                        className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                                        onClick={() => handleSort('sku')}\n                                    >\n                                        <div className=\"flex items-center\">\n                                            SKU\n                                            {sortBy === 'sku' && (\n                                                <ArrowUpDown className=\"ml-1 h-4 w-4\" />\n                                            )}\n                                        </div>\n                                    </th>\n\n                                    <th\n                                        scope=\"col\"\n                                        className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                                        onClick={() => handleSort('totalStock')}\n                                    >\n                                        <div className=\"flex items-center\">\n                                            Total Stock\n                                            {sortBy === 'totalStock' && (\n                                                <ArrowUpDown className=\"ml-1 h-4 w-4\" />\n                                            )}\n                                        </div>\n                                    </th>\n                                    {shopList.map(shop => (\n                                        <th key={shop.id} scope=\"col\" className=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                            <div className=\"text-center\">\n                                                <div className=\"flex flex-col items-center gap-1\">\n                                                    <div>{shop.name}</div>\n                                                    <div className=\"flex gap-2 text-xs\">\n                                                        <button\n                                                            onClick={() => handleSort('shopStock', shop.id)}\n                                                            className=\"text-blue-600 hover:text-blue-800 cursor-pointer flex items-center\"\n                                                            title=\"Sort by quantity\"\n                                                        >\n                                                            Qty\n                                                            {sortBy === 'shopStock' && selectedShopForSort === shop.id && (\n                                                                <ArrowUpDown className=\"ml-1 h-3 w-3\" />\n                                                            )}\n                                                        </button>\n                                                        {canViewCosts && (\n                                                            <>\n                                                                <span className=\"text-gray-400\">|</span>\n                                                                <button\n                                                                    onClick={() => handleSort('shopTotalCost', shop.id)}\n                                                                    className=\"text-green-600 hover:text-green-800 cursor-pointer flex items-center\"\n                                                                    title=\"Sort by total cost\"\n                                                                >\n                                                                    Cost\n                                                                    {sortBy === 'shopTotalCost' && selectedShopForSort === shop.id && (\n                                                                        <ArrowUpDown className=\"ml-1 h-3 w-3\" />\n                                                                    )}\n                                                                </button>\n                                                            </>\n                                                        )}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </th>\n                                    ))}\n\n                                    <th scope=\"col\" className=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                        Actions\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody className=\"bg-white divide-y divide-gray-200\">\n                                {sortedProducts.map(product => {\n                                    const lowestStockShop = getLowestStockShop(product);\n                                    const highestStockShop = getHighestStockShop(product);\n\n                                    return (\n                                        <tr key={product.id} className=\"hover:bg-gray-50\">\n                                            <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-black\">\n                                                {product.name}\n                                            </td>\n                                            <td className=\"px-4 py-3 whitespace-nowrap text-sm text-black\">\n                                                {product.sku}\n                                            </td>\n\n                                            <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-black\">\n                                                {product.totalStock}\n                                            </td>\n\n                                            {/* Dynamic columns for each shop */}\n                                            {shopList.map(shop => {\n                                                const stockInShop = product.branchStock.find(\n                                                    branch => branch.shopId === shop.id\n                                                );\n                                                const quantity = stockInShop ? stockInShop.quantity : 0;\n\n                                                // Determine if this is the lowest or highest stock for highlighting\n                                                const isLowestStock = lowestStockShop && stockInShop &&\n                                                    lowestStockShop.shopId === shop.id && product.branchStock.length > 1;\n                                                const isHighestStock = highestStockShop && stockInShop &&\n                                                    highestStockShop.shopId === shop.id && product.branchStock.length > 1;\n\n                                                return (\n                                                    <td\n                                                        key={shop.id}\n                                                        className={`px-4 py-3 whitespace-nowrap text-sm text-center font-medium\n                                                            ${isLowestStock ? 'text-red-600 bg-red-50' : ''}\n                                                            ${isHighestStock ? 'text-green-600 bg-green-50' : ''}\n                                                            ${!isLowestStock && !isHighestStock ? 'text-black' : ''}\n                                                        `}\n                                                    >\n                                                        <div className=\"text-center\">\n                                                            <div className=\"font-semibold text-blue-600\">{quantity}</div>\n                                                            {canViewCosts && (\n                                                                <div className=\"text-xs text-gray-500 mt-1\">\n                                                                    WAC: Rs. {product.weightedAverageCost.toLocaleString()}\n                                                                </div>\n                                                            )}\n                                                            {canViewCosts && stockInShop && stockInShop.shopSpecificCost > 0 && (\n                                                                <div className=\"text-xs text-blue-600 mt-1\">\n                                                                    Unit Cost: Rs. {stockInShop.shopSpecificCost.toLocaleString()}\n                                                                </div>\n                                                            )}\n                                                            {canViewCosts && stockInShop && stockInShop.shopSpecificCost > 0 && (\n                                                                <div className=\"text-xs font-semibold text-green-600 mt-1 border-t border-gray-200 pt-1\">\n                                                                    Total: Rs. {getTotalShopCost(product, shop.id).toLocaleString()}\n                                                                </div>\n                                                            )}\n                                                        </div>\n                                                    </td>\n                                                );\n                                            })}\n\n\n\n                                            {/* Actions */}\n                                            <td className=\"px-4 py-3 whitespace-nowrap text-sm text-center\">\n                                                <Button\n                                                    variant=\"outline\"\n                                                    size=\"sm\"\n                                                    onClick={() => goToProductDetails(product.id)}\n                                                    className=\"text-black\"\n                                                >\n                                                    View\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </table>\n\n                        {sortedProducts.length === 0 && (\n                            <div className=\"text-center py-8 text-gray-500\">\n                                No products found matching your filters.\n                            </div>\n                        )}\n                    </div>\n                )}\n\n                {/* Shop-Centric View */}\n                {viewMode === 'shop' && (\n                    <div className=\"space-y-6\">\n                        {shopList.length > 0 ? (\n                            shopList.map(shop => (\n                                <div key={shop.id} className=\"bg-white p-4 rounded-xl shadow-sm border border-gray-200\">\n                                    <div className=\"flex items-center gap-2 p-2 border-b border-gray-200\">\n                                        <Store className=\"h-5 w-5 text-primary\" />\n                                        <h2 className=\"font-semibold text-lg text-black\">{shop.name}</h2>\n                                    </div>\n\n                                    <div className=\"mt-4 overflow-x-auto\">\n                                        <table className=\"min-w-full divide-y divide-gray-200\">\n                                            <thead className=\"bg-gray-50\">\n                                                <tr>\n                                                    <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                        Product\n                                                    </th>\n                                                    <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                        SKU\n                                                    </th>\n\n                                                    <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                        Quantity\n                                                    </th>\n                                                    {canViewCosts && (\n                                                        <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                            Cost Info\n                                                        </th>\n                                                    )}\n                                                    <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                        Retail Price\n                                                    </th>\n                                                    <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                        Retail Value\n                                                    </th>\n                                                    {canViewCosts && (\n                                                        <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                            Total Shop Cost\n                                                        </th>\n                                                    )}\n                                                    <th scope=\"col\" className=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                        Actions\n                                                    </th>\n                                                </tr>\n                                            </thead>\n                                            <tbody className=\"bg-white divide-y divide-gray-200\">\n                                                {sortedProducts\n                                                    .filter(product => product.branchStock.some(branch => branch.shopId === shop.id))\n                                                    .map(product => {\n                                                        const shopStock = product.branchStock.find(branch => branch.shopId === shop.id);\n                                                        const quantity = shopStock ? shopStock.quantity : 0;\n                                                        const retailValue = quantity * product.retailPrice;\n                                                        const totalShopCost = getTotalShopCost(product, shop.id);\n\n                                                        return (\n                                                            <tr key={product.id} className=\"hover:bg-gray-50\">\n                                                                <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-black\">\n                                                                    {product.name}\n                                                                </td>\n                                                                <td className=\"px-4 py-3 whitespace-nowrap text-sm text-black\">\n                                                                    {product.sku}\n                                                                </td>\n\n                                                                <td className=\"px-4 py-3 whitespace-nowrap text-sm text-black\">\n                                                                    {quantity}\n                                                                </td>\n                                                                {canViewCosts && (\n                                                                    <td className=\"px-4 py-3 whitespace-nowrap text-sm text-black\">\n                                                                        <div className=\"space-y-1\">\n                                                                            <div className=\"text-xs text-gray-600\">\n                                                                                WAC: Rs. {product.weightedAverageCost.toLocaleString()}\n                                                                            </div>\n                                                                            {shopStock && shopStock.shopSpecificCost > 0 && (\n                                                                                <div className=\"text-xs text-blue-600\">\n                                                                                    Shop Cost: Rs. {shopStock.shopSpecificCost.toLocaleString()}\n                                                                                </div>\n                                                                            )}\n                                                                        </div>\n                                                                    </td>\n                                                                )}\n                                                                <td className=\"px-4 py-3 whitespace-nowrap text-sm text-black\">\n                                                                    Rs. {product.retailPrice.toLocaleString()}\n                                                                </td>\n                                                                <td className=\"px-4 py-3 whitespace-nowrap text-sm text-black\">\n                                                                    Rs. {retailValue.toLocaleString()}\n                                                                </td>\n                                                                {canViewCosts && (\n                                                                    <td className=\"px-4 py-3 whitespace-nowrap text-sm font-semibold text-green-600\">\n                                                                        Rs. {totalShopCost.toLocaleString()}\n                                                                    </td>\n                                                                )}\n                                                                <td className=\"px-4 py-3 whitespace-nowrap text-sm text-center\">\n                                                                    <Button\n                                                                        variant=\"outline\"\n                                                                        size=\"sm\"\n                                                                        onClick={() => goToProductDetails(product.id)}\n                                                                        className=\"text-black\"\n                                                                    >\n                                                                        View\n                                                                    </Button>\n                                                                </td>\n                                                            </tr>\n                                                        );\n                                                    })}\n                                            </tbody>\n                                        </table>\n\n                                        {sortedProducts.filter(product =>\n                                            product.branchStock.some(branch => branch.shopId === shop.id)\n                                        ).length === 0 && (\n                                                <div className=\"text-center py-4 text-gray-500\">\n                                                    No products found in this shop matching your filters.\n                                                </div>\n                                            )}\n                                    </div>\n                                </div>\n                            ))\n                        ) : (\n                            <div className=\"bg-white p-8 rounded-xl shadow-sm border border-gray-200 text-center\">\n                                <Package className=\"h-12 w-12 mx-auto text-gray-400 mb-4\" />\n                                <h3 className=\"text-lg font-medium text-black mb-2\">No shops found</h3>\n                                <p className=\"text-gray-500 mb-4\">There are no shops in the system or you don't have access to any shops.</p>\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        </MainLayout>\n    );\n}"],"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","ignoreList":[]}