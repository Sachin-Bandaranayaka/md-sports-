a184acf7440f5ca8331af30b6fc90cd6
"use strict";

/* istanbul ignore next */
function cov_1whg2y2s1h() {
  var path = "/Users/sachin/Documents/md-sports-/src/middleware.ts";
  var hash = "b23e2c8ab4da4e3bcb57175aa48d99746f3cfa05";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/middleware.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 22
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 26
        }
      },
      "6": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "7": {
        start: {
          line: 20,
          column: 14
        },
        end: {
          line: 20,
          column: 35
        }
      },
      "8": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 49
        }
      },
      "9": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "10": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 35
        }
      },
      "11": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 32,
          column: 7
        }
      },
      "12": {
        start: {
          line: 30,
          column: 18
        },
        end: {
          line: 30,
          column: 40
        }
      },
      "13": {
        start: {
          line: 30,
          column: 46
        },
        end: {
          line: 30,
          column: 75
        }
      },
      "14": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 30
        }
      },
      "15": {
        start: {
          line: 35,
          column: 31
        },
        end: {
          line: 42,
          column: 1
        }
      },
      "16": {
        start: {
          line: 44,
          column: 32
        },
        end: {
          line: 50,
          column: 1
        }
      },
      "17": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "18": {
        start: {
          line: 55,
          column: 27
        },
        end: {
          line: 55,
          column: 67
        }
      },
      "19": {
        start: {
          line: 56,
          column: 24
        },
        end: {
          line: 56,
          column: 64
        }
      },
      "20": {
        start: {
          line: 58,
          column: 22
        },
        end: {
          line: 58,
          column: 69
        }
      },
      "21": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "22": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 24
        }
      },
      "23": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "24": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 24
        }
      },
      "25": {
        start: {
          line: 72,
          column: 32
        },
        end: {
          line: 72,
          column: 104
        }
      },
      "26": {
        start: {
          line: 73,
          column: 30
        },
        end: {
          line: 73,
          column: 96
        }
      },
      "27": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 49
        }
      },
      "28": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 62
        }
      },
      "29": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 21
        }
      },
      "30": {
        start: {
          line: 83,
          column: 23
        },
        end: {
          line: 83,
          column: 63
        }
      },
      "31": {
        start: {
          line: 84,
          column: 19
        },
        end: {
          line: 84,
          column: 59
        }
      },
      "32": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 87,
          column: 5
        }
      },
      "33": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 70
        }
      },
      "34": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "35": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 61
        }
      },
      "36": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 91,
          column: 20
        }
      },
      "37": {
        start: {
          line: 95,
          column: 19
        },
        end: {
          line: 99,
          column: 1
        }
      },
      "38": {
        start: {
          line: 101,
          column: 19
        },
        end: {
          line: 116,
          column: 1
        }
      },
      "39": {
        start: {
          line: 118,
          column: 21
        },
        end: {
          line: 118,
          column: 45
        }
      },
      "40": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "41": {
        start: {
          line: 120,
          column: 32
        },
        end: {
          line: 120,
          column: 84
        }
      },
      "42": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 43
        }
      },
      "43": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 127,
          column: 5
        }
      },
      "44": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 43
        }
      },
      "45": {
        start: {
          line: 128,
          column: 19
        },
        end: {
          line: 128,
          column: 46
        }
      },
      "46": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 154,
          column: 5
        }
      },
      "47": {
        start: {
          line: 132,
          column: 33
        },
        end: {
          line: 132,
          column: 97
        }
      },
      "48": {
        start: {
          line: 132,
          column: 70
        },
        end: {
          line: 132,
          column: 96
        }
      },
      "49": {
        start: {
          line: 133,
          column: 29
        },
        end: {
          line: 133,
          column: 94
        }
      },
      "50": {
        start: {
          line: 133,
          column: 67
        },
        end: {
          line: 133,
          column: 93
        }
      },
      "51": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 151,
          column: 9
        }
      },
      "52": {
        start: {
          line: 136,
          column: 24
        },
        end: {
          line: 136,
          column: 44
        }
      },
      "53": {
        start: {
          line: 137,
          column: 32
        },
        end: {
          line: 137,
          column: 62
        }
      },
      "54": {
        start: {
          line: 139,
          column: 34
        },
        end: {
          line: 139,
          column: 93
        }
      },
      "55": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 150,
          column: 13
        }
      },
      "56": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 149,
          column: 19
        }
      },
      "57": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 59
        }
      },
      "58": {
        start: {
          line: 156,
          column: 15
        },
        end: {
          line: 156,
          column: 38
        }
      },
      "59": {
        start: {
          line: 157,
          column: 31
        },
        end: {
          line: 157,
          column: 83
        }
      },
      "60": {
        start: {
          line: 157,
          column: 56
        },
        end: {
          line: 157,
          column: 82
        }
      },
      "61": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "62": {
        start: {
          line: 159,
          column: 25
        },
        end: {
          line: 159,
          column: 65
        }
      },
      "63": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 124
        }
      },
      "64": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 85
        }
      },
      "65": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 83
        }
      },
      "66": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "67": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 177,
          column: 15
        }
      },
      "68": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 186,
          column: 5
        }
      },
      "69": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 66
        }
      },
      "70": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 56
        }
      },
      "71": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 66
        }
      },
      "72": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 63
        }
      },
      "73": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 209,
          column: 5
        }
      },
      "74": {
        start: {
          line: 189,
          column: 36
        },
        end: {
          line: 189,
          column: 75
        }
      },
      "75": {
        start: {
          line: 190,
          column: 36
        },
        end: {
          line: 190,
          column: 71
        }
      },
      "76": {
        start: {
          line: 192,
          column: 28
        },
        end: {
          line: 197,
          column: 51
        }
      },
      "77": {
        start: {
          line: 197,
          column: 24
        },
        end: {
          line: 197,
          column: 50
        }
      },
      "78": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "79": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 207,
          column: 15
        }
      },
      "80": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 226,
          column: 5
        }
      },
      "81": {
        start: {
          line: 213,
          column: 29
        },
        end: {
          line: 213,
          column: 68
        }
      },
      "82": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "83": {
        start: {
          line: 215,
          column: 30
        },
        end: {
          line: 215,
          column: 44
        }
      },
      "84": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 224,
          column: 15
        }
      },
      "85": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 227,
          column: 20
        }
      },
      "86": {
        start: {
          line: 229,
          column: 15
        },
        end: {
          line: 237,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 13
          }
        },
        loc: {
          start: {
            line: 12,
            column: 23
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 16
          },
          end: {
            line: 15,
            column: 17
          }
        },
        loc: {
          start: {
            line: 15,
            column: 27
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "generateUUID",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 21
          }
        },
        loc: {
          start: {
            line: 23,
            column: 24
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 29,
            column: 67
          },
          end: {
            line: 29,
            column: 68
          }
        },
        loc: {
          start: {
            line: 29,
            column: 79
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 29
      },
      "5": {
        name: "validateShopAccess",
        decl: {
          start: {
            line: 53,
            column: 19
          },
          end: {
            line: 53,
            column: 37
          }
        },
        loc: {
          start: {
            line: 53,
            column: 57
          },
          end: {
            line: 79,
            column: 1
          }
        },
        line: 53
      },
      "6": {
        name: "addShopContext",
        decl: {
          start: {
            line: 82,
            column: 19
          },
          end: {
            line: 82,
            column: 33
          }
        },
        loc: {
          start: {
            line: 82,
            column: 49
          },
          end: {
            line: 92,
            column: 1
          }
        },
        line: 82
      },
      "7": {
        name: "middleware",
        decl: {
          start: {
            line: 117,
            column: 15
          },
          end: {
            line: 117,
            column: 25
          }
        },
        loc: {
          start: {
            line: 117,
            column: 35
          },
          end: {
            line: 228,
            column: 1
          }
        },
        line: 117
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 120,
            column: 24
          },
          end: {
            line: 120,
            column: 25
          }
        },
        loc: {
          start: {
            line: 120,
            column: 32
          },
          end: {
            line: 120,
            column: 84
          }
        },
        line: 120
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 132,
            column: 61
          },
          end: {
            line: 132,
            column: 62
          }
        },
        loc: {
          start: {
            line: 132,
            column: 70
          },
          end: {
            line: 132,
            column: 96
          }
        },
        line: 132
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 133,
            column: 58
          },
          end: {
            line: 133,
            column: 59
          }
        },
        loc: {
          start: {
            line: 133,
            column: 67
          },
          end: {
            line: 133,
            column: 93
          }
        },
        line: 133
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 157,
            column: 47
          },
          end: {
            line: 157,
            column: 48
          }
        },
        loc: {
          start: {
            line: 157,
            column: 56
          },
          end: {
            line: 157,
            column: 82
          }
        },
        line: 157
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 197,
            column: 15
          },
          end: {
            line: 197,
            column: 16
          }
        },
        loc: {
          start: {
            line: 197,
            column: 24
          },
          end: {
            line: 197,
            column: 50
          }
        },
        line: 197
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 37
          }
        }, {
          start: {
            line: 25,
            column: 41
          },
          end: {
            line: 25,
            column: 58
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 30,
            column: 46
          },
          end: {
            line: 30,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 58
          },
          end: {
            line: 30,
            column: 59
          }
        }, {
          start: {
            line: 30,
            column: 62
          },
          end: {
            line: 30,
            column: 75
          }
        }],
        line: 30
      },
      "3": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "4": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "5": {
        loc: {
          start: {
            line: 72,
            column: 32
          },
          end: {
            line: 72,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 72,
            column: 67
          },
          end: {
            line: 72,
            column: 89
          }
        }, {
          start: {
            line: 72,
            column: 92
          },
          end: {
            line: 72,
            column: 104
          }
        }],
        line: 72
      },
      "6": {
        loc: {
          start: {
            line: 73,
            column: 30
          },
          end: {
            line: 73,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 63
          },
          end: {
            line: 73,
            column: 83
          }
        }, {
          start: {
            line: 73,
            column: 86
          },
          end: {
            line: 73,
            column: 96
          }
        }],
        line: 73
      },
      "7": {
        loc: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "8": {
        loc: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "9": {
        loc: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "10": {
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 121,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 120,
            column: 85
          }
        }, {
          start: {
            line: 120,
            column: 89
          },
          end: {
            line: 120,
            column: 118
          }
        }, {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 121,
            column: 59
          }
        }],
        line: 120
      },
      "11": {
        loc: {
          start: {
            line: 120,
            column: 32
          },
          end: {
            line: 120,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 32
          },
          end: {
            line: 120,
            column: 57
          }
        }, {
          start: {
            line: 120,
            column: 61
          },
          end: {
            line: 120,
            column: 84
          }
        }],
        line: 120
      },
      "12": {
        loc: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "13": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 125,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 125,
            column: 46
          }
        }, {
          start: {
            line: 125,
            column: 50
          },
          end: {
            line: 125,
            column: 88
          }
        }],
        line: 125
      },
      "14": {
        loc: {
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "15": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "16": {
        loc: {
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 134,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 134,
            column: 28
          }
        }, {
          start: {
            line: 134,
            column: 32
          },
          end: {
            line: 134,
            column: 45
          }
        }],
        line: 134
      },
      "17": {
        loc: {
          start: {
            line: 139,
            column: 68
          },
          end: {
            line: 139,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 68
          },
          end: {
            line: 139,
            column: 79
          }
        }, {
          start: {
            line: 139,
            column: 83
          },
          end: {
            line: 139,
            column: 92
          }
        }],
        line: 139
      },
      "18": {
        loc: {
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 150,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 150,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "19": {
        loc: {
          start: {
            line: 156,
            column: 15
          },
          end: {
            line: 156,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 15
          },
          end: {
            line: 156,
            column: 25
          }
        }, {
          start: {
            line: 156,
            column: 29
          },
          end: {
            line: 156,
            column: 38
          }
        }],
        line: 156
      },
      "20": {
        loc: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "21": {
        loc: {
          start: {
            line: 161,
            column: 50
          },
          end: {
            line: 161,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 161,
            column: 69
          },
          end: {
            line: 161,
            column: 94
          }
        }, {
          start: {
            line: 161,
            column: 97
          },
          end: {
            line: 161,
            column: 122
          }
        }],
        line: 161
      },
      "22": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "23": {
        loc: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 186,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 186,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "24": {
        loc: {
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 181,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 181,
            column: 37
          }
        }, {
          start: {
            line: 181,
            column: 41
          },
          end: {
            line: 181,
            column: 64
          }
        }],
        line: 181
      },
      "25": {
        loc: {
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 209,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 209,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "26": {
        loc: {
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 188,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 188,
            column: 32
          }
        }, {
          start: {
            line: 188,
            column: 36
          },
          end: {
            line: 188,
            column: 61
          }
        }],
        line: 188
      },
      "27": {
        loc: {
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "28": {
        loc: {
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 198,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 198,
            column: 24
          }
        }, {
          start: {
            line: 198,
            column: 29
          },
          end: {
            line: 198,
            column: 49
          }
        }, {
          start: {
            line: 198,
            column: 53
          },
          end: {
            line: 198,
            column: 96
          }
        }],
        line: 198
      },
      "29": {
        loc: {
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "30": {
        loc: {
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 212,
            column: 126
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 212,
            column: 32
          }
        }, {
          start: {
            line: 212,
            column: 36
          },
          end: {
            line: 212,
            column: 65
          }
        }, {
          start: {
            line: 212,
            column: 69
          },
          end: {
            line: 212,
            column: 92
          }
        }, {
          start: {
            line: 212,
            column: 96
          },
          end: {
            line: 212,
            column: 126
          }
        }],
        line: 212
      },
      "31": {
        loc: {
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0, 0],
      "29": [0, 0],
      "30": [0, 0, 0, 0],
      "31": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/middleware.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { getUserIdFromToken, getShopIdFromToken } from '@/lib/auth';\nimport { rateLimiter } from '@/lib/rateLimiter';\n\n// Generate UUID using Web Crypto API instead of Node.js crypto\nfunction generateUUID() {\n    // This implementation works in Edge Runtime\n    if (typeof crypto !== 'undefined' && crypto.randomUUID) {\n        return crypto.randomUUID();\n    }\n\n    // Fallback implementation\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n\n// Shop-specific API routes that need shop-based filtering\nconst SHOP_RESTRICTED_ROUTES = [\n    '/api/products',\n    '/api/inventory',\n    '/api/invoices',\n    '/api/purchases',\n    '/api/dashboard',\n    '/api/reports'\n];\n\n// Routes that allow cross-shop access for admins\nconst ADMIN_CROSS_SHOP_ROUTES = [\n    '/api/shops',\n    '/api/users',\n    '/api/settings',\n    '/api/reports/shop-performance',\n    '/api/reports/shop-comparison'\n];\n\n/**\n * Check if user has permission to access data from a specific shop\n */\nasync function validateShopAccess(req: NextRequest, targetShopId?: string | number): Promise<boolean> {\n    try {\n        const userShopId = await getShopIdFromToken(req);\n        const _userId = await getUserIdFromToken(req);\n\n        // Development mode - allow all access\n        const token = req.headers.get('authorization')?.split(' ')[1];\n        if (token === 'dev-token') {\n            return true;\n        }\n\n        // If no target shop specified, allow access\n        if (!targetShopId) {\n            return true;\n        }\n\n        // For Edge Runtime compatibility, we'll skip permission checks in middleware\n        // and rely on API route-level permission validation instead\n        // This is a temporary fix to avoid Prisma Edge Runtime issues\n        \n        // Allow access for now - permission checks will happen in API routes\n        // TODO: Implement edge-compatible permission checking if needed\n\n        // Check if user belongs to the target shop\n        const targetShopIdNum = typeof targetShopId === 'string' ? parseInt(targetShopId) : targetShopId;\n        const userShopIdNum = typeof userShopId === 'string' ? parseInt(userShopId) : userShopId;\n        return userShopIdNum === targetShopIdNum;\n\n    } catch (error) {\n        console.error('Error validating shop access:', error);\n        return false;\n    }\n}\n\n/**\n * Add shop context to request headers for API routes\n */\nasync function addShopContext(req: NextRequest, response: NextResponse): Promise<NextResponse> {\n    const userShopId = await getShopIdFromToken(req);\n    const userId = await getUserIdFromToken(req);\n\n    if (userShopId) {\n        response.headers.set('X-User-Shop-Id', userShopId.toString());\n    }\n\n    if (userId) {\n        response.headers.set('X-User-Id', userId.toString());\n    }\n\n    return response;\n}\n\n// Rate limiting configuration is now handled by lib/rateLimiter.ts\n\n// API routes that should be protected\nconst API_ROUTES = [\n    '/api/auth/login',\n    '/api/auth/register',\n    '/api/auth/refresh',\n];\n\n// Static assets and paths to skip middleware processing\nconst SKIP_PATHS = [\n    '/_next',\n    '/images',\n    '/favicon.ico',\n    '/robots.txt',\n    '/manifest.json',\n    '/sitemap.xml',\n    '.svg',\n    '.png',\n    '.jpg',\n    '.jpeg',\n    '.gif',\n    '.webp',\n    '.css',\n    '.js',\n];\n\nexport async function middleware(request: NextRequest) {\n    const pathname = request.nextUrl.pathname;\n\n    // Skip middleware for static assets and non-critical paths\n    if (SKIP_PATHS.some(path => pathname.startsWith(path) || pathname.endsWith(path)) ||\n        pathname.startsWith('/_next') ||  // Skip Next.js internal paths\n        pathname.match(/\\.(svg|png|jpg|jpeg|gif|webp|css|js)$/)) { // Skip static files\n        return NextResponse.next();\n    }\n\n    // Skip middleware in development if needed\n    if (process.env.NODE_ENV === 'development' && process.env.SKIP_MIDDLEWARE === 'true') {\n        return NextResponse.next();\n    }\n\n    let response = NextResponse.next();\n\n    // Add shop-based access control for API routes\n    if (pathname.startsWith('/api/')) {\n        // Check if this is a shop-restricted route\n        const isShopRestricted = SHOP_RESTRICTED_ROUTES.some(route => pathname.startsWith(route));\n        const isAdminRoute = ADMIN_CROSS_SHOP_ROUTES.some(route => pathname.startsWith(route));\n\n        if (isShopRestricted && !isAdminRoute) {\n            // Extract shopId from query parameters if present\n            const url = new URL(request.url);\n            const queryShopId = url.searchParams.get('shopId');\n\n            // Validate shop access\n            const hasShopAccess = await validateShopAccess(request, queryShopId || undefined);\n\n            if (!hasShopAccess) {\n                return new NextResponse(JSON.stringify({\n                    success: false,\n                    message: 'Access denied: You can only access data from your assigned shop'\n                }), {\n                    status: 403,\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n            }\n        }\n\n        // Add shop context to response headers\n        response = await addShopContext(request, response);\n    }\n\n    // Get IP address from X-Forwarded-For header or remote address for rate limiting\n    const ip = request.ip || 'unknown';\n\n    const isRateLimitedRoute = API_ROUTES.some(route => pathname.startsWith(route));\n\n    if (isRateLimitedRoute) {\n        const rlResult = await rateLimiter.check(ip);\n\n        // Set rate-limit headers on every response (success or 429)\n        response.headers.set('X-RateLimit-Limit', rlResult.allowed ? rlResult.count.toString() : rlResult.count.toString());\n        response.headers.set('X-RateLimit-Remaining', rlResult.remaining.toString());\n        response.headers.set('X-RateLimit-Reset', rlResult.resetTimeMs.toString());\n\n        if (!rlResult.allowed) {\n            return new NextResponse(JSON.stringify({\n                success: false,\n                message: 'Too many requests, please try again later.'\n            }), {\n                status: 429,\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Retry-After': Math.ceil((rlResult.resetTimeMs - Date.now()) / 1000).toString(),\n                    'X-RateLimit-Limit': rlResult.count.toString(),\n                    'X-RateLimit-Remaining': '0',\n                    'X-RateLimit-Reset': rlResult.resetTimeMs.toString(),\n                }\n            });\n        }\n    }\n\n    // Set security headers only for HTML responses, not for API or assets\n    if (!pathname.startsWith('/api/') && !pathname.includes('.')) {\n        response.headers.set('X-Content-Type-Options', 'nosniff');\n        response.headers.set('X-Frame-Options', 'DENY');\n        response.headers.set('X-XSS-Protection', '1; mode=block');\n        response.headers.set('Referrer-Policy', 'same-origin');\n    }\n\n    // Add CSRF protection only for non-GET methods that are not static assets\n    if (request.method !== 'GET' && request.method !== 'HEAD') {\n        const csrfTokenFromCookie = request.cookies.get('csrfToken')?.value;\n        const csrfTokenFromHeader = request.headers.get('X-CSRF-Token');\n\n        // Skip CSRF check for login and initial auth routes, and maintenance endpoints\n        const isAuthRoute = ['/api/auth/login', '/api/auth/register', '/api/auth/refresh', '/api/fix-shopstaff-permissions'].some(\n            route => pathname.startsWith(route)\n        );\n\n        if (!isAuthRoute && (!csrfTokenFromCookie || csrfTokenFromHeader !== csrfTokenFromCookie)) {\n            return new NextResponse(JSON.stringify({\n                success: false,\n                message: 'Invalid CSRF token'\n            }), {\n                status: 403,\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n        }\n    }\n\n    // For GET requests to pages, set a new CSRF token if one doesn't exist\n    // Only do this for HTML page requests, not for assets or API calls\n    if (request.method === 'GET' &&\n        !pathname.startsWith('/api/') &&\n        !pathname.includes('.') &&\n        !pathname.startsWith('/_next')) {\n\n        const currentToken = request.cookies.get('csrfToken')?.value;\n        if (!currentToken) {\n            const csrfToken = generateUUID();\n            response.cookies.set({\n                name: 'csrfToken',\n                value: csrfToken,\n                httpOnly: false, // Made accessible to JavaScript\n                sameSite: 'strict',\n                secure: process.env.NODE_ENV === 'production',\n                path: '/',\n                maxAge: 60 * 60 * 24, // 1 day\n            });\n        }\n    }\n\n    return response;\n}\n\nexport const config = {\n    matcher: [\n        // Apply the middleware to all API routes and page routes\n        // Exclude static assets and _next directory\n        '/api/:path*',\n        '/:path*',\n        '/:path*/:subpath*',\n    ],\n};"],
      names: ["config", "middleware", "generateUUID", "crypto", "randomUUID", "replace", "c", "r", "Math", "random", "v", "toString", "SHOP_RESTRICTED_ROUTES", "ADMIN_CROSS_SHOP_ROUTES", "validateShopAccess", "req", "targetShopId", "userShopId", "getShopIdFromToken", "_userId", "getUserIdFromToken", "token", "headers", "get", "split", "targetShopIdNum", "parseInt", "userShopIdNum", "error", "console", "addShopContext", "response", "userId", "set", "API_ROUTES", "SKIP_PATHS", "request", "pathname", "nextUrl", "some", "path", "startsWith", "endsWith", "match", "NextResponse", "next", "process", "env", "NODE_ENV", "SKIP_MIDDLEWARE", "isShopRestricted", "route", "isAdminRoute", "url", "URL", "queryShopId", "searchParams", "hasShopAccess", "undefined", "JSON", "stringify", "success", "message", "status", "ip", "isRateLimitedRoute", "rlResult", "rateLimiter", "check", "allowed", "count", "remaining", "resetTimeMs", "ceil", "Date", "now", "includes", "method", "csrfTokenFromCookie", "cookies", "value", "csrfTokenFromHeader", "isAuthRoute", "currentToken", "csrfToken", "name", "httpOnly", "sameSite", "secure", "maxAge", "matcher"],
      mappings: ";;;;;;;;;;;IA6PaA,MAAM;eAANA;;IAtISC,UAAU;eAAVA;;;wBAvHoB;sBACa;6BAC3B;AAE5B,+DAA+D;AAC/D,SAASC;IACL,4CAA4C;IAC5C,IAAI,OAAOC,WAAW,eAAeA,OAAOC,UAAU,EAAE;QACpD,OAAOD,OAAOC,UAAU;IAC5B;IAEA,0BAA0B;IAC1B,OAAO,uCAAuCC,OAAO,CAAC,SAAS,SAAUC,CAAC;QACtE,MAAMC,IAAIC,KAAKC,MAAM,KAAK,KAAK,GAAGC,IAAIJ,MAAM,MAAMC,IAAKA,IAAI,MAAM;QACjE,OAAOG,EAAEC,QAAQ,CAAC;IACtB;AACJ;AAEA,0DAA0D;AAC1D,MAAMC,yBAAyB;IAC3B;IACA;IACA;IACA;IACA;IACA;CACH;AAED,iDAAiD;AACjD,MAAMC,0BAA0B;IAC5B;IACA;IACA;IACA;IACA;CACH;AAED;;CAEC,GACD,eAAeC,mBAAmBC,GAAgB,EAAEC,YAA8B;IAC9E,IAAI;QACA,MAAMC,aAAa,MAAMC,IAAAA,wBAAkB,EAACH;QAC5C,MAAMI,UAAU,MAAMC,IAAAA,wBAAkB,EAACL;QAEzC,sCAAsC;QACtC,MAAMM,QAAQN,IAAIO,OAAO,CAACC,GAAG,CAAC,kBAAkBC,MAAM,IAAI,CAAC,EAAE;QAC7D,IAAIH,UAAU,aAAa;YACvB,OAAO;QACX;QAEA,4CAA4C;QAC5C,IAAI,CAACL,cAAc;YACf,OAAO;QACX;QAEA,6EAA6E;QAC7E,4DAA4D;QAC5D,8DAA8D;QAE9D,qEAAqE;QACrE,gEAAgE;QAEhE,2CAA2C;QAC3C,MAAMS,kBAAkB,OAAOT,iBAAiB,WAAWU,SAASV,gBAAgBA;QACpF,MAAMW,gBAAgB,OAAOV,eAAe,WAAWS,SAAST,cAAcA;QAC9E,OAAOU,kBAAkBF;IAE7B,EAAE,OAAOG,OAAO;QACZC,QAAQD,KAAK,CAAC,iCAAiCA;QAC/C,OAAO;IACX;AACJ;AAEA;;CAEC,GACD,eAAeE,eAAef,GAAgB,EAAEgB,QAAsB;IAClE,MAAMd,aAAa,MAAMC,IAAAA,wBAAkB,EAACH;IAC5C,MAAMiB,SAAS,MAAMZ,IAAAA,wBAAkB,EAACL;IAExC,IAAIE,YAAY;QACZc,SAAST,OAAO,CAACW,GAAG,CAAC,kBAAkBhB,WAAWN,QAAQ;IAC9D;IAEA,IAAIqB,QAAQ;QACRD,SAAST,OAAO,CAACW,GAAG,CAAC,aAAaD,OAAOrB,QAAQ;IACrD;IAEA,OAAOoB;AACX;AAEA,mEAAmE;AAEnE,sCAAsC;AACtC,MAAMG,aAAa;IACf;IACA;IACA;CACH;AAED,wDAAwD;AACxD,MAAMC,aAAa;IACf;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACH;AAEM,eAAelC,WAAWmC,OAAoB;IACjD,MAAMC,WAAWD,QAAQE,OAAO,CAACD,QAAQ;IAEzC,2DAA2D;IAC3D,IAAIF,WAAWI,IAAI,CAACC,CAAAA,OAAQH,SAASI,UAAU,CAACD,SAASH,SAASK,QAAQ,CAACF,UACvEH,SAASI,UAAU,CAAC,aAAc,8BAA8B;IAChEJ,SAASM,KAAK,CAAC,0CAA0C;QACzD,OAAOC,oBAAY,CAACC,IAAI;IAC5B;IAEA,2CAA2C;IAC3C,IAAIC,QAAQC,GAAG,CAACC,QAAQ,KAAK,iBAAiBF,QAAQC,GAAG,CAACE,eAAe,KAAK,QAAQ;QAClF,OAAOL,oBAAY,CAACC,IAAI;IAC5B;IAEA,IAAId,WAAWa,oBAAY,CAACC,IAAI;IAEhC,+CAA+C;IAC/C,IAAIR,SAASI,UAAU,CAAC,UAAU;QAC9B,2CAA2C;QAC3C,MAAMS,mBAAmBtC,uBAAuB2B,IAAI,CAACY,CAAAA,QAASd,SAASI,UAAU,CAACU;QAClF,MAAMC,eAAevC,wBAAwB0B,IAAI,CAACY,CAAAA,QAASd,SAASI,UAAU,CAACU;QAE/E,IAAID,oBAAoB,CAACE,cAAc;YACnC,kDAAkD;YAClD,MAAMC,MAAM,IAAIC,IAAIlB,QAAQiB,GAAG;YAC/B,MAAME,cAAcF,IAAIG,YAAY,CAACjC,GAAG,CAAC;YAEzC,uBAAuB;YACvB,MAAMkC,gBAAgB,MAAM3C,mBAAmBsB,SAASmB,eAAeG;YAEvE,IAAI,CAACD,eAAe;gBAChB,OAAO,IAAIb,oBAAY,CAACe,KAAKC,SAAS,CAAC;oBACnCC,SAAS;oBACTC,SAAS;gBACb,IAAI;oBACAC,QAAQ;oBACRzC,SAAS;wBACL,gBAAgB;oBACpB;gBACJ;YACJ;QACJ;QAEA,uCAAuC;QACvCS,WAAW,MAAMD,eAAeM,SAASL;IAC7C;IAEA,iFAAiF;IACjF,MAAMiC,KAAK5B,QAAQ4B,EAAE,IAAI;IAEzB,MAAMC,qBAAqB/B,WAAWK,IAAI,CAACY,CAAAA,QAASd,SAASI,UAAU,CAACU;IAExE,IAAIc,oBAAoB;QACpB,MAAMC,WAAW,MAAMC,wBAAW,CAACC,KAAK,CAACJ;QAEzC,4DAA4D;QAC5DjC,SAAST,OAAO,CAACW,GAAG,CAAC,qBAAqBiC,SAASG,OAAO,GAAGH,SAASI,KAAK,CAAC3D,QAAQ,KAAKuD,SAASI,KAAK,CAAC3D,QAAQ;QAChHoB,SAAST,OAAO,CAACW,GAAG,CAAC,yBAAyBiC,SAASK,SAAS,CAAC5D,QAAQ;QACzEoB,SAAST,OAAO,CAACW,GAAG,CAAC,qBAAqBiC,SAASM,WAAW,CAAC7D,QAAQ;QAEvE,IAAI,CAACuD,SAASG,OAAO,EAAE;YACnB,OAAO,IAAIzB,oBAAY,CAACe,KAAKC,SAAS,CAAC;gBACnCC,SAAS;gBACTC,SAAS;YACb,IAAI;gBACAC,QAAQ;gBACRzC,SAAS;oBACL,gBAAgB;oBAChB,eAAed,KAAKiE,IAAI,CAAC,AAACP,CAAAA,SAASM,WAAW,GAAGE,KAAKC,GAAG,EAAC,IAAK,MAAMhE,QAAQ;oBAC7E,qBAAqBuD,SAASI,KAAK,CAAC3D,QAAQ;oBAC5C,yBAAyB;oBACzB,qBAAqBuD,SAASM,WAAW,CAAC7D,QAAQ;gBACtD;YACJ;QACJ;IACJ;IAEA,sEAAsE;IACtE,IAAI,CAAC0B,SAASI,UAAU,CAAC,YAAY,CAACJ,SAASuC,QAAQ,CAAC,MAAM;QAC1D7C,SAAST,OAAO,CAACW,GAAG,CAAC,0BAA0B;QAC/CF,SAAST,OAAO,CAACW,GAAG,CAAC,mBAAmB;QACxCF,SAAST,OAAO,CAACW,GAAG,CAAC,oBAAoB;QACzCF,SAAST,OAAO,CAACW,GAAG,CAAC,mBAAmB;IAC5C;IAEA,0EAA0E;IAC1E,IAAIG,QAAQyC,MAAM,KAAK,SAASzC,QAAQyC,MAAM,KAAK,QAAQ;QACvD,MAAMC,sBAAsB1C,QAAQ2C,OAAO,CAACxD,GAAG,CAAC,cAAcyD;QAC9D,MAAMC,sBAAsB7C,QAAQd,OAAO,CAACC,GAAG,CAAC;QAEhD,+EAA+E;QAC/E,MAAM2D,cAAc;YAAC;YAAmB;YAAsB;YAAqB;SAAiC,CAAC3C,IAAI,CACrHY,CAAAA,QAASd,SAASI,UAAU,CAACU;QAGjC,IAAI,CAAC+B,eAAgB,CAAA,CAACJ,uBAAuBG,wBAAwBH,mBAAkB,GAAI;YACvF,OAAO,IAAIlC,oBAAY,CAACe,KAAKC,SAAS,CAAC;gBACnCC,SAAS;gBACTC,SAAS;YACb,IAAI;gBACAC,QAAQ;gBACRzC,SAAS;oBACL,gBAAgB;gBACpB;YACJ;QACJ;IACJ;IAEA,uEAAuE;IACvE,mEAAmE;IACnE,IAAIc,QAAQyC,MAAM,KAAK,SACnB,CAACxC,SAASI,UAAU,CAAC,YACrB,CAACJ,SAASuC,QAAQ,CAAC,QACnB,CAACvC,SAASI,UAAU,CAAC,WAAW;QAEhC,MAAM0C,eAAe/C,QAAQ2C,OAAO,CAACxD,GAAG,CAAC,cAAcyD;QACvD,IAAI,CAACG,cAAc;YACf,MAAMC,YAAYlF;YAClB6B,SAASgD,OAAO,CAAC9C,GAAG,CAAC;gBACjBoD,MAAM;gBACNL,OAAOI;gBACPE,UAAU;gBACVC,UAAU;gBACVC,QAAQ1C,QAAQC,GAAG,CAACC,QAAQ,KAAK;gBACjCR,MAAM;gBACNiD,QAAQ,KAAK,KAAK;YACtB;QACJ;IACJ;IAEA,OAAO1D;AACX;AAEO,MAAM/B,SAAS;IAClB0F,SAAS;QACL,yDAAyD;QACzD,4CAA4C;QAC5C;QACA;QACA;KACH;AACL"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b23e2c8ab4da4e3bcb57175aa48d99746f3cfa05"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1whg2y2s1h = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1whg2y2s1h();
cov_1whg2y2s1h().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1whg2y2s1h().f[0]++;
  cov_1whg2y2s1h().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1whg2y2s1h().s[3]++;
_export(exports, {
  config: function () {
    /* istanbul ignore next */
    cov_1whg2y2s1h().f[1]++;
    cov_1whg2y2s1h().s[4]++;
    return config;
  },
  middleware: function () {
    /* istanbul ignore next */
    cov_1whg2y2s1h().f[2]++;
    cov_1whg2y2s1h().s[5]++;
    return middleware;
  }
});
const _server =
/* istanbul ignore next */
(cov_1whg2y2s1h().s[6]++, require("next/server"));
const _auth =
/* istanbul ignore next */
(cov_1whg2y2s1h().s[7]++, require("./lib/auth"));
const _rateLimiter =
/* istanbul ignore next */
(cov_1whg2y2s1h().s[8]++, require("./lib/rateLimiter"));
// Generate UUID using Web Crypto API instead of Node.js crypto
function generateUUID() {
  /* istanbul ignore next */
  cov_1whg2y2s1h().f[3]++;
  cov_1whg2y2s1h().s[9]++;
  // This implementation works in Edge Runtime
  if (
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[1][0]++, typeof crypto !== "undefined") &&
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[1][1]++, crypto.randomUUID)) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().b[0][0]++;
    cov_1whg2y2s1h().s[10]++;
    return crypto.randomUUID();
  } else
  /* istanbul ignore next */
  {
    cov_1whg2y2s1h().b[0][1]++;
  }
  // Fallback implementation
  cov_1whg2y2s1h().s[11]++;
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (c) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().f[4]++;
    const r =
      /* istanbul ignore next */
      (cov_1whg2y2s1h().s[12]++, Math.random() * 16 | 0),
      v =
      /* istanbul ignore next */
      (cov_1whg2y2s1h().s[13]++, c === "x" ?
      /* istanbul ignore next */
      (cov_1whg2y2s1h().b[2][0]++, r) :
      /* istanbul ignore next */
      (cov_1whg2y2s1h().b[2][1]++, r & 0x3 | 0x8));
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[14]++;
    return v.toString(16);
  });
}
// Shop-specific API routes that need shop-based filtering
const SHOP_RESTRICTED_ROUTES =
/* istanbul ignore next */
(cov_1whg2y2s1h().s[15]++, ["/api/products", "/api/inventory", "/api/invoices", "/api/purchases", "/api/dashboard", "/api/reports"]);
// Routes that allow cross-shop access for admins
const ADMIN_CROSS_SHOP_ROUTES =
/* istanbul ignore next */
(cov_1whg2y2s1h().s[16]++, ["/api/shops", "/api/users", "/api/settings", "/api/reports/shop-performance", "/api/reports/shop-comparison"]);
/**
 * Check if user has permission to access data from a specific shop
 */
async function validateShopAccess(req, targetShopId) {
  /* istanbul ignore next */
  cov_1whg2y2s1h().f[5]++;
  cov_1whg2y2s1h().s[17]++;
  try {
    const userShopId =
    /* istanbul ignore next */
    (cov_1whg2y2s1h().s[18]++, await (0, _auth.getShopIdFromToken)(req));
    const _userId =
    /* istanbul ignore next */
    (cov_1whg2y2s1h().s[19]++, await (0, _auth.getUserIdFromToken)(req));
    // Development mode - allow all access
    const token =
    /* istanbul ignore next */
    (cov_1whg2y2s1h().s[20]++, req.headers.get("authorization")?.split(" ")[1]);
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[21]++;
    if (token === "dev-token") {
      /* istanbul ignore next */
      cov_1whg2y2s1h().b[3][0]++;
      cov_1whg2y2s1h().s[22]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_1whg2y2s1h().b[3][1]++;
    }
    // If no target shop specified, allow access
    cov_1whg2y2s1h().s[23]++;
    if (!targetShopId) {
      /* istanbul ignore next */
      cov_1whg2y2s1h().b[4][0]++;
      cov_1whg2y2s1h().s[24]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_1whg2y2s1h().b[4][1]++;
    }
    // For Edge Runtime compatibility, we'll skip permission checks in middleware
    // and rely on API route-level permission validation instead
    // This is a temporary fix to avoid Prisma Edge Runtime issues
    // Allow access for now - permission checks will happen in API routes
    // TODO: Implement edge-compatible permission checking if needed
    // Check if user belongs to the target shop
    const targetShopIdNum =
    /* istanbul ignore next */
    (cov_1whg2y2s1h().s[25]++, typeof targetShopId === "string" ?
    /* istanbul ignore next */
    (cov_1whg2y2s1h().b[5][0]++, parseInt(targetShopId)) :
    /* istanbul ignore next */
    (cov_1whg2y2s1h().b[5][1]++, targetShopId));
    const userShopIdNum =
    /* istanbul ignore next */
    (cov_1whg2y2s1h().s[26]++, typeof userShopId === "string" ?
    /* istanbul ignore next */
    (cov_1whg2y2s1h().b[6][0]++, parseInt(userShopId)) :
    /* istanbul ignore next */
    (cov_1whg2y2s1h().b[6][1]++, userShopId));
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[27]++;
    return userShopIdNum === targetShopIdNum;
  } catch (error) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[28]++;
    console.error("Error validating shop access:", error);
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[29]++;
    return false;
  }
}
/**
 * Add shop context to request headers for API routes
 */
async function addShopContext(req, response) {
  /* istanbul ignore next */
  cov_1whg2y2s1h().f[6]++;
  const userShopId =
  /* istanbul ignore next */
  (cov_1whg2y2s1h().s[30]++, await (0, _auth.getShopIdFromToken)(req));
  const userId =
  /* istanbul ignore next */
  (cov_1whg2y2s1h().s[31]++, await (0, _auth.getUserIdFromToken)(req));
  /* istanbul ignore next */
  cov_1whg2y2s1h().s[32]++;
  if (userShopId) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().b[7][0]++;
    cov_1whg2y2s1h().s[33]++;
    response.headers.set("X-User-Shop-Id", userShopId.toString());
  } else
  /* istanbul ignore next */
  {
    cov_1whg2y2s1h().b[7][1]++;
  }
  cov_1whg2y2s1h().s[34]++;
  if (userId) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().b[8][0]++;
    cov_1whg2y2s1h().s[35]++;
    response.headers.set("X-User-Id", userId.toString());
  } else
  /* istanbul ignore next */
  {
    cov_1whg2y2s1h().b[8][1]++;
  }
  cov_1whg2y2s1h().s[36]++;
  return response;
}
// Rate limiting configuration is now handled by lib/rateLimiter.ts
// API routes that should be protected
const API_ROUTES =
/* istanbul ignore next */
(cov_1whg2y2s1h().s[37]++, ["/api/auth/login", "/api/auth/register", "/api/auth/refresh"]);
// Static assets and paths to skip middleware processing
const SKIP_PATHS =
/* istanbul ignore next */
(cov_1whg2y2s1h().s[38]++, ["/_next", "/images", "/favicon.ico", "/robots.txt", "/manifest.json", "/sitemap.xml", ".svg", ".png", ".jpg", ".jpeg", ".gif", ".webp", ".css", ".js"]);
async function middleware(request) {
  /* istanbul ignore next */
  cov_1whg2y2s1h().f[7]++;
  const pathname =
  /* istanbul ignore next */
  (cov_1whg2y2s1h().s[39]++, request.nextUrl.pathname);
  // Skip middleware for static assets and non-critical paths
  /* istanbul ignore next */
  cov_1whg2y2s1h().s[40]++;
  if (
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[10][0]++, SKIP_PATHS.some(path => {
    /* istanbul ignore next */
    cov_1whg2y2s1h().f[8]++;
    cov_1whg2y2s1h().s[41]++;
    return /* istanbul ignore next */(cov_1whg2y2s1h().b[11][0]++, pathname.startsWith(path)) ||
    /* istanbul ignore next */
    (cov_1whg2y2s1h().b[11][1]++, pathname.endsWith(path));
  })) ||
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[10][1]++, pathname.startsWith("/_next")) ||
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[10][2]++,
  // Skip Next.js internal paths
  pathname.match(/\.(svg|png|jpg|jpeg|gif|webp|css|js)$/))) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().b[9][0]++;
    cov_1whg2y2s1h().s[42]++;
    return _server.NextResponse.next();
  } else
  /* istanbul ignore next */
  {
    cov_1whg2y2s1h().b[9][1]++;
  }
  // Skip middleware in development if needed
  cov_1whg2y2s1h().s[43]++;
  if (
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[13][0]++, process.env.NODE_ENV === "development") &&
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[13][1]++, process.env.SKIP_MIDDLEWARE === "true")) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().b[12][0]++;
    cov_1whg2y2s1h().s[44]++;
    return _server.NextResponse.next();
  } else
  /* istanbul ignore next */
  {
    cov_1whg2y2s1h().b[12][1]++;
  }
  let response =
  /* istanbul ignore next */
  (cov_1whg2y2s1h().s[45]++, _server.NextResponse.next());
  // Add shop-based access control for API routes
  /* istanbul ignore next */
  cov_1whg2y2s1h().s[46]++;
  if (pathname.startsWith("/api/")) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().b[14][0]++;
    // Check if this is a shop-restricted route
    const isShopRestricted =
    /* istanbul ignore next */
    (cov_1whg2y2s1h().s[47]++, SHOP_RESTRICTED_ROUTES.some(route => {
      /* istanbul ignore next */
      cov_1whg2y2s1h().f[9]++;
      cov_1whg2y2s1h().s[48]++;
      return pathname.startsWith(route);
    }));
    const isAdminRoute =
    /* istanbul ignore next */
    (cov_1whg2y2s1h().s[49]++, ADMIN_CROSS_SHOP_ROUTES.some(route => {
      /* istanbul ignore next */
      cov_1whg2y2s1h().f[10]++;
      cov_1whg2y2s1h().s[50]++;
      return pathname.startsWith(route);
    }));
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[51]++;
    if (
    /* istanbul ignore next */
    (cov_1whg2y2s1h().b[16][0]++, isShopRestricted) &&
    /* istanbul ignore next */
    (cov_1whg2y2s1h().b[16][1]++, !isAdminRoute)) {
      /* istanbul ignore next */
      cov_1whg2y2s1h().b[15][0]++;
      // Extract shopId from query parameters if present
      const url =
      /* istanbul ignore next */
      (cov_1whg2y2s1h().s[52]++, new URL(request.url));
      const queryShopId =
      /* istanbul ignore next */
      (cov_1whg2y2s1h().s[53]++, url.searchParams.get("shopId"));
      // Validate shop access
      const hasShopAccess =
      /* istanbul ignore next */
      (cov_1whg2y2s1h().s[54]++, await validateShopAccess(request,
      /* istanbul ignore next */
      (cov_1whg2y2s1h().b[17][0]++, queryShopId) ||
      /* istanbul ignore next */
      (cov_1whg2y2s1h().b[17][1]++, undefined)));
      /* istanbul ignore next */
      cov_1whg2y2s1h().s[55]++;
      if (!hasShopAccess) {
        /* istanbul ignore next */
        cov_1whg2y2s1h().b[18][0]++;
        cov_1whg2y2s1h().s[56]++;
        return new _server.NextResponse(JSON.stringify({
          success: false,
          message: "Access denied: You can only access data from your assigned shop"
        }), {
          status: 403,
          headers: {
            "Content-Type": "application/json"
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_1whg2y2s1h().b[18][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1whg2y2s1h().b[15][1]++;
    }
    // Add shop context to response headers
    cov_1whg2y2s1h().s[57]++;
    response = await addShopContext(request, response);
  } else
  /* istanbul ignore next */
  {
    cov_1whg2y2s1h().b[14][1]++;
  }
  // Get IP address from X-Forwarded-For header or remote address for rate limiting
  const ip =
  /* istanbul ignore next */
  (cov_1whg2y2s1h().s[58]++,
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[19][0]++, request.ip) ||
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[19][1]++, "unknown"));
  const isRateLimitedRoute =
  /* istanbul ignore next */
  (cov_1whg2y2s1h().s[59]++, API_ROUTES.some(route => {
    /* istanbul ignore next */
    cov_1whg2y2s1h().f[11]++;
    cov_1whg2y2s1h().s[60]++;
    return pathname.startsWith(route);
  }));
  /* istanbul ignore next */
  cov_1whg2y2s1h().s[61]++;
  if (isRateLimitedRoute) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().b[20][0]++;
    const rlResult =
    /* istanbul ignore next */
    (cov_1whg2y2s1h().s[62]++, await _rateLimiter.rateLimiter.check(ip));
    // Set rate-limit headers on every response (success or 429)
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[63]++;
    response.headers.set("X-RateLimit-Limit", rlResult.allowed ?
    /* istanbul ignore next */
    (cov_1whg2y2s1h().b[21][0]++, rlResult.count.toString()) :
    /* istanbul ignore next */
    (cov_1whg2y2s1h().b[21][1]++, rlResult.count.toString()));
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[64]++;
    response.headers.set("X-RateLimit-Remaining", rlResult.remaining.toString());
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[65]++;
    response.headers.set("X-RateLimit-Reset", rlResult.resetTimeMs.toString());
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[66]++;
    if (!rlResult.allowed) {
      /* istanbul ignore next */
      cov_1whg2y2s1h().b[22][0]++;
      cov_1whg2y2s1h().s[67]++;
      return new _server.NextResponse(JSON.stringify({
        success: false,
        message: "Too many requests, please try again later."
      }), {
        status: 429,
        headers: {
          "Content-Type": "application/json",
          "Retry-After": Math.ceil((rlResult.resetTimeMs - Date.now()) / 1000).toString(),
          "X-RateLimit-Limit": rlResult.count.toString(),
          "X-RateLimit-Remaining": "0",
          "X-RateLimit-Reset": rlResult.resetTimeMs.toString()
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1whg2y2s1h().b[22][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1whg2y2s1h().b[20][1]++;
  }
  // Set security headers only for HTML responses, not for API or assets
  cov_1whg2y2s1h().s[68]++;
  if (
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[24][0]++, !pathname.startsWith("/api/")) &&
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[24][1]++, !pathname.includes("."))) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().b[23][0]++;
    cov_1whg2y2s1h().s[69]++;
    response.headers.set("X-Content-Type-Options", "nosniff");
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[70]++;
    response.headers.set("X-Frame-Options", "DENY");
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[71]++;
    response.headers.set("X-XSS-Protection", "1; mode=block");
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[72]++;
    response.headers.set("Referrer-Policy", "same-origin");
  } else
  /* istanbul ignore next */
  {
    cov_1whg2y2s1h().b[23][1]++;
  }
  // Add CSRF protection only for non-GET methods that are not static assets
  cov_1whg2y2s1h().s[73]++;
  if (
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[26][0]++, request.method !== "GET") &&
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[26][1]++, request.method !== "HEAD")) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().b[25][0]++;
    const csrfTokenFromCookie =
    /* istanbul ignore next */
    (cov_1whg2y2s1h().s[74]++, request.cookies.get("csrfToken")?.value);
    const csrfTokenFromHeader =
    /* istanbul ignore next */
    (cov_1whg2y2s1h().s[75]++, request.headers.get("X-CSRF-Token"));
    // Skip CSRF check for login and initial auth routes, and maintenance endpoints
    const isAuthRoute =
    /* istanbul ignore next */
    (cov_1whg2y2s1h().s[76]++, ["/api/auth/login", "/api/auth/register", "/api/auth/refresh", "/api/fix-shopstaff-permissions"].some(route => {
      /* istanbul ignore next */
      cov_1whg2y2s1h().f[12]++;
      cov_1whg2y2s1h().s[77]++;
      return pathname.startsWith(route);
    }));
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[78]++;
    if (
    /* istanbul ignore next */
    (cov_1whg2y2s1h().b[28][0]++, !isAuthRoute) && (
    /* istanbul ignore next */
    (cov_1whg2y2s1h().b[28][1]++, !csrfTokenFromCookie) ||
    /* istanbul ignore next */
    (cov_1whg2y2s1h().b[28][2]++, csrfTokenFromHeader !== csrfTokenFromCookie))) {
      /* istanbul ignore next */
      cov_1whg2y2s1h().b[27][0]++;
      cov_1whg2y2s1h().s[79]++;
      return new _server.NextResponse(JSON.stringify({
        success: false,
        message: "Invalid CSRF token"
      }), {
        status: 403,
        headers: {
          "Content-Type": "application/json"
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1whg2y2s1h().b[27][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1whg2y2s1h().b[25][1]++;
  }
  // For GET requests to pages, set a new CSRF token if one doesn't exist
  // Only do this for HTML page requests, not for assets or API calls
  cov_1whg2y2s1h().s[80]++;
  if (
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[30][0]++, request.method === "GET") &&
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[30][1]++, !pathname.startsWith("/api/")) &&
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[30][2]++, !pathname.includes(".")) &&
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[30][3]++, !pathname.startsWith("/_next"))) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().b[29][0]++;
    const currentToken =
    /* istanbul ignore next */
    (cov_1whg2y2s1h().s[81]++, request.cookies.get("csrfToken")?.value);
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[82]++;
    if (!currentToken) {
      /* istanbul ignore next */
      cov_1whg2y2s1h().b[31][0]++;
      const csrfToken =
      /* istanbul ignore next */
      (cov_1whg2y2s1h().s[83]++, generateUUID());
      /* istanbul ignore next */
      cov_1whg2y2s1h().s[84]++;
      response.cookies.set({
        name: "csrfToken",
        value: csrfToken,
        httpOnly: false,
        sameSite: "strict",
        secure: process.env.NODE_ENV === "production",
        path: "/",
        maxAge: 60 * 60 * 24
      });
    } else
    /* istanbul ignore next */
    {
      cov_1whg2y2s1h().b[31][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1whg2y2s1h().b[29][1]++;
  }
  cov_1whg2y2s1h().s[85]++;
  return response;
}
const config =
/* istanbul ignore next */
(cov_1whg2y2s1h().s[86]++, {
  matcher: [
  // Apply the middleware to all API routes and page routes
  // Exclude static assets and _next directory
  "/api/:path*", "/:path*", "/:path*/:subpath*"]
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,