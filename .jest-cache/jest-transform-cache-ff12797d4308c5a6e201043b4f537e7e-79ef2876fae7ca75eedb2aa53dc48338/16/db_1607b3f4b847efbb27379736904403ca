bde4471e3a605f5142ed3759b4462a62
"use strict";

/* istanbul ignore next */
function cov_2q806zh4u1() {
  var path = "/Users/sachin/Documents/md-sports-/src/lib/db.ts";
  var hash = "26a3a5d6079c815724357f232e260a1704c3465d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/lib/db.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 18
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 30
        }
      },
      "7": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 35
        }
      },
      "8": {
        start: {
          line: 24,
          column: 19
        },
        end: {
          line: 24,
          column: 39
        }
      },
      "9": {
        start: {
          line: 25,
          column: 11
        },
        end: {
          line: 25,
          column: 25
        }
      },
      "10": {
        start: {
          line: 27,
          column: 18
        },
        end: {
          line: 36,
          column: 2
        }
      },
      "11": {
        start: {
          line: 37,
          column: 17
        },
        end: {
          line: 37,
          column: 26
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 12,
            column: 9
          }
        },
        loc: {
          start: {
            line: 12,
            column: 19
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 13
          },
          end: {
            line: 16,
            column: 14
          }
        },
        loc: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 13
          }
        },
        loc: {
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 43
          },
          end: {
            line: 27,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 43
          },
          end: {
            line: 27,
            column: 67
          }
        }, {
          start: {
            line: 27,
            column: 71
          },
          end: {
            line: 27,
            column: 108
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 13
          },
          end: {
            line: 29,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 54
          },
          end: {
            line: 29,
            column: 65
          }
        }, {
          start: {
            line: 29,
            column: 68
          },
          end: {
            line: 29,
            column: 73
          }
        }],
        line: 29
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/lib/db.ts"],
      sourcesContent: ["import { prisma } from './prisma';\nimport { Sequelize } from 'sequelize';\n\n// Export prisma client as db for consistency with import patterns\nexport const db = prisma;\n\n// Re-export prisma for backward compatibility\nexport { prisma };\n\n// Create Sequelize instance for legacy models\nconst sequelize = new Sequelize(process.env.DATABASE_URL || 'postgresql://localhost:5432/mssport', {\n  dialect: 'postgres',\n  logging: process.env.NODE_ENV === 'development' ? console.log : false,\n  pool: {\n    max: 5,\n    min: 0,\n    acquire: 30000,\n    idle: 10000\n  }\n});\n\n// Export Sequelize instance for models\nexport default sequelize;\n\n// Also export db for Prisma compatibility\nexport { db };"],
      names: ["db", "prisma", "sequelize", "Sequelize", "process", "env", "DATABASE_URL", "dialect", "logging", "NODE_ENV", "console", "log", "pool", "max", "min", "acquire", "idle"],
      mappings: ";;;;;;;;;;;IAyBSA,EAAE;eAAFA;;IAJT,uCAAuC;IACvC,OAAyB;eAAzB;;IAfSC,MAAM;eAANA,cAAM;;;wBAPQ;2BACG;AAGnB,MAAMD,KAAKC,cAAM;AAKxB,8CAA8C;AAC9C,MAAMC,YAAY,IAAIC,oBAAS,CAACC,QAAQC,GAAG,CAACC,YAAY,IAAI,uCAAuC;IACjGC,SAAS;IACTC,SAASJ,QAAQC,GAAG,CAACI,QAAQ,KAAK,gBAAgBC,QAAQC,GAAG,GAAG;IAChEC,MAAM;QACJC,KAAK;QACLC,KAAK;QACLC,SAAS;QACTC,MAAM;IACR;AACF;MAGA,WAAed"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "26a3a5d6079c815724357f232e260a1704c3465d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2q806zh4u1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2q806zh4u1();
cov_2q806zh4u1().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2q806zh4u1().f[0]++;
  cov_2q806zh4u1().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2q806zh4u1().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2q806zh4u1().s[3]++;
_export(exports, {
  db: function () {
    /* istanbul ignore next */
    cov_2q806zh4u1().f[1]++;
    cov_2q806zh4u1().s[4]++;
    return db;
  },
  // Export Sequelize instance for models
  default: function () {
    /* istanbul ignore next */
    cov_2q806zh4u1().f[2]++;
    cov_2q806zh4u1().s[5]++;
    return _default;
  },
  prisma: function () {
    /* istanbul ignore next */
    cov_2q806zh4u1().f[3]++;
    cov_2q806zh4u1().s[6]++;
    return _prisma.prisma;
  }
});
const _prisma =
/* istanbul ignore next */
(cov_2q806zh4u1().s[7]++, require("./prisma"));
const _sequelize =
/* istanbul ignore next */
(cov_2q806zh4u1().s[8]++, require("sequelize"));
const db =
/* istanbul ignore next */
(cov_2q806zh4u1().s[9]++, _prisma.prisma);
// Create Sequelize instance for legacy models
const sequelize =
/* istanbul ignore next */
(cov_2q806zh4u1().s[10]++, new _sequelize.Sequelize(
/* istanbul ignore next */
(cov_2q806zh4u1().b[0][0]++, process.env.DATABASE_URL) ||
/* istanbul ignore next */
(cov_2q806zh4u1().b[0][1]++, "postgresql://localhost:5432/mssport"), {
  dialect: "postgres",
  logging: process.env.NODE_ENV === "development" ?
  /* istanbul ignore next */
  (cov_2q806zh4u1().b[1][0]++, console.log) :
  /* istanbul ignore next */
  (cov_2q806zh4u1().b[1][1]++, false),
  pool: {
    max: 5,
    min: 0,
    acquire: 30000,
    idle: 10000
  }
}));
const _default =
/* istanbul ignore next */
(cov_2q806zh4u1().s[11]++, sequelize);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMnE4MDZ6aDR1MSIsImFjdHVhbENvdmVyYWdlIiwicyIsImRiIiwiZiIsImRlZmF1bHQiLCJfZGVmYXVsdCIsInByaXNtYSIsIl9wcmlzbWEiLCJzZXF1ZWxpemUiLCJfc2VxdWVsaXplIiwiU2VxdWVsaXplIiwiYiIsInByb2Nlc3MiLCJlbnYiLCJEQVRBQkFTRV9VUkwiLCJkaWFsZWN0IiwibG9nZ2luZyIsIk5PREVfRU5WIiwiY29uc29sZSIsImxvZyIsInBvb2wiLCJtYXgiLCJtaW4iLCJhY3F1aXJlIiwiaWRsZSJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWNoaW4vRG9jdW1lbnRzL21kLXNwb3J0cy0vc3JjL2xpYi9kYi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwcmlzbWEgfSBmcm9tICcuL3ByaXNtYSc7XG5pbXBvcnQgeyBTZXF1ZWxpemUgfSBmcm9tICdzZXF1ZWxpemUnO1xuXG4vLyBFeHBvcnQgcHJpc21hIGNsaWVudCBhcyBkYiBmb3IgY29uc2lzdGVuY3kgd2l0aCBpbXBvcnQgcGF0dGVybnNcbmV4cG9ydCBjb25zdCBkYiA9IHByaXNtYTtcblxuLy8gUmUtZXhwb3J0IHByaXNtYSBmb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eVxuZXhwb3J0IHsgcHJpc21hIH07XG5cbi8vIENyZWF0ZSBTZXF1ZWxpemUgaW5zdGFuY2UgZm9yIGxlZ2FjeSBtb2RlbHNcbmNvbnN0IHNlcXVlbGl6ZSA9IG5ldyBTZXF1ZWxpemUocHJvY2Vzcy5lbnYuREFUQUJBU0VfVVJMIHx8ICdwb3N0Z3Jlc3FsOi8vbG9jYWxob3N0OjU0MzIvbXNzcG9ydCcsIHtcbiAgZGlhbGVjdDogJ3Bvc3RncmVzJyxcbiAgbG9nZ2luZzogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcgPyBjb25zb2xlLmxvZyA6IGZhbHNlLFxuICBwb29sOiB7XG4gICAgbWF4OiA1LFxuICAgIG1pbjogMCxcbiAgICBhY3F1aXJlOiAzMDAwMCxcbiAgICBpZGxlOiAxMDAwMFxuICB9XG59KTtcblxuLy8gRXhwb3J0IFNlcXVlbGl6ZSBpbnN0YW5jZSBmb3IgbW9kZWxzXG5leHBvcnQgZGVmYXVsdCBzZXF1ZWxpemU7XG5cbi8vIEFsc28gZXhwb3J0IGRiIGZvciBQcmlzbWEgY29tcGF0aWJpbGl0eVxuZXhwb3J0IHsgZGIgfTsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBc0J5QjtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBQUFBLGNBQUEsR0FBQUUsQ0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUFHaEJDLEVBQUUsV0FBQUEsQ0FBQTtJQUFBO0lBQUFILGNBQUEsR0FBQUksQ0FBQTtJQUFBSixjQUFBLEdBQUFFLENBQUE7V0FBRkMsRUFBQTs7RUFKVDtFQUNBRSxPQUF5QixXQUFBQSxDQUFBO0lBQUE7SUFBQUwsY0FBQSxHQUFBSSxDQUFBO0lBQUFKLGNBQUEsR0FBQUUsQ0FBQTtXQUF6QkksUUFBQTs7RUFmU0MsTUFBTSxXQUFBQSxDQUFBO0lBQUE7SUFBQVAsY0FBQSxHQUFBSSxDQUFBO0lBQUFKLGNBQUEsR0FBQUUsQ0FBQTtXQUFOTSxPQUFBLENBQUFELE1BQU07Ozs7O2tDQVBROzs7a0NBQ0c7QUFHbkIsTUFBTUosRUFBQTtBQUFBO0FBQUEsQ0FBQUgsY0FBQSxHQUFBRSxDQUFBLE9BQUtNLE9BQUEsQ0FBQUQsTUFBTTtBQUt4QjtBQUNBLE1BQU1FLFNBQUE7QUFBQTtBQUFBLENBQUFULGNBQUEsR0FBQUUsQ0FBQSxRQUFZLElBQUlRLFVBQUEsQ0FBQUMsU0FBUztBQUFDO0FBQUEsQ0FBQVgsY0FBQSxHQUFBWSxDQUFBLFVBQUFDLE9BQUEsQ0FBUUMsR0FBRyxDQUFDQyxZQUFZO0FBQUE7QUFBQSxDQUFBZixjQUFBLEdBQUFZLENBQUEsVUFBSSx3Q0FBdUM7RUFDakdJLE9BQUEsRUFBUztFQUNUQyxPQUFBLEVBQVNKLE9BQUEsQ0FBUUMsR0FBRyxDQUFDSSxRQUFRLEtBQUs7RUFBQTtFQUFBLENBQUFsQixjQUFBLEdBQUFZLENBQUEsVUFBZ0JPLE9BQUEsQ0FBUUMsR0FBRztFQUFBO0VBQUEsQ0FBQXBCLGNBQUEsR0FBQVksQ0FBQSxVQUFHO0VBQ2hFUyxJQUFBLEVBQU07SUFDSkMsR0FBQSxFQUFLO0lBQ0xDLEdBQUEsRUFBSztJQUNMQyxPQUFBLEVBQVM7SUFDVEMsSUFBQSxFQUFNO0VBQ1I7QUFDRjtNQUdBbkIsUUFBQTtBQUFBO0FBQUEsQ0FBQU4sY0FBQSxHQUFBRSxDQUFBLFFBQWVPLFNBQUEiLCJpZ25vcmVMaXN0IjpbXX0=