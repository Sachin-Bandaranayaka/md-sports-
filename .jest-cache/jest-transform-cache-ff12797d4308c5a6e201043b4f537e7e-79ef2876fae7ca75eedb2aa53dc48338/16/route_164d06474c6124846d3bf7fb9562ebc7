cdb144d7e0044a4af1a9d548df79d722
"use strict";

/* istanbul ignore next */
function cov_39x6d23tp() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/purchases/[id]/route.ts";
  var hash = "75f1caf5e69295673659ef32ed8e535b0071f4cd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/purchases/[id]/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 22
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 19
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 19
        }
      },
      "7": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "8": {
        start: {
          line: 23,
          column: 15
        },
        end: {
          line: 23,
          column: 36
        }
      },
      "9": {
        start: {
          line: 24,
          column: 30
        },
        end: {
          line: 24,
          column: 89
        }
      },
      "10": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 48
        }
      },
      "11": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 6
        }
      },
      "12": {
        start: {
          line: 32,
          column: 15
        },
        end: {
          line: 32,
          column: 24
        }
      },
      "13": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "14": {
        start: {
          line: 34,
          column: 27
        },
        end: {
          line: 34,
          column: 39
        }
      },
      "15": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "16": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 42,
          column: 15
        }
      },
      "17": {
        start: {
          line: 44,
          column: 25
        },
        end: {
          line: 56,
          column: 10
        }
      },
      "18": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "19": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 64,
          column: 15
        }
      },
      "20": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 51
        }
      },
      "21": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 71
        }
      },
      "22": {
        start: {
          line: 69,
          column: 24
        },
        end: {
          line: 69,
          column: 92
        }
      },
      "23": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 77,
          column: 11
        }
      },
      "24": {
        start: {
          line: 81,
          column: 15
        },
        end: {
          line: 81,
          column: 24
        }
      },
      "25": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 509,
          column: 5
        }
      },
      "26": {
        start: {
          line: 83,
          column: 27
        },
        end: {
          line: 83,
          column: 39
        }
      },
      "27": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "28": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 91,
          column: 15
        }
      },
      "29": {
        start: {
          line: 93,
          column: 21
        },
        end: {
          line: 93,
          column: 41
        }
      },
      "30": {
        start: {
          line: 94,
          column: 33
        },
        end: {
          line: 105,
          column: 10
        }
      },
      "31": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "32": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 113,
          column: 15
        }
      },
      "33": {
        start: {
          line: 115,
          column: 93
        },
        end: {
          line: 115,
          column: 97
        }
      },
      "34": {
        start: {
          line: 116,
          column: 79
        },
        end: {
          line: 116,
          column: 90
        }
      },
      "35": {
        start: {
          line: 117,
          column: 35
        },
        end: {
          line: 117,
          column: 37
        }
      },
      "36": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 96
        }
      },
      "37": {
        start: {
          line: 118,
          column: 37
        },
        end: {
          line: 118,
          column: 96
        }
      },
      "38": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 75
        }
      },
      "39": {
        start: {
          line: 119,
          column: 30
        },
        end: {
          line: 119,
          column: 75
        }
      },
      "40": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 79
        }
      },
      "41": {
        start: {
          line: 120,
          column: 28
        },
        end: {
          line: 120,
          column: 79
        }
      },
      "42": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 129
        }
      },
      "43": {
        start: {
          line: 121,
          column: 45
        },
        end: {
          line: 121,
          column: 129
        }
      },
      "44": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 123,
          column: 99
        }
      },
      "45": {
        start: {
          line: 122,
          column: 49
        },
        end: {
          line: 122,
          column: 106
        }
      },
      "46": {
        start: {
          line: 123,
          column: 13
        },
        end: {
          line: 123,
          column: 99
        }
      },
      "47": {
        start: {
          line: 123,
          column: 48
        },
        end: {
          line: 123,
          column: 99
        }
      },
      "48": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 134
        }
      },
      "49": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 132,
          column: 10
        }
      },
      "50": {
        start: {
          line: 125,
          column: 34
        },
        end: {
          line: 129,
          column: 10
        }
      },
      "51": {
        start: {
          line: 130,
          column: 13
        },
        end: {
          line: 132,
          column: 10
        }
      },
      "52": {
        start: {
          line: 130,
          column: 79
        },
        end: {
          line: 132,
          column: 10
        }
      },
      "53": {
        start: {
          line: 133,
          column: 23
        },
        end: {
          line: 462,
          column: 10
        }
      },
      "54": {
        start: {
          line: 134,
          column: 37
        },
        end: {
          line: 134,
          column: 39
        }
      },
      "55": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 247,
          column: 13
        }
      },
      "56": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 246,
          column: 17
        }
      },
      "57": {
        start: {
          line: 137,
          column: 44
        },
        end: {
          line: 141,
          column: 22
        }
      },
      "58": {
        start: {
          line: 142,
          column: 20
        },
        end: {
          line: 142,
          column: 51
        }
      },
      "59": {
        start: {
          line: 142,
          column: 42
        },
        end: {
          line: 142,
          column: 51
        }
      },
      "60": {
        start: {
          line: 143,
          column: 48
        },
        end: {
          line: 143,
          column: 461
        }
      },
      "61": {
        start: {
          line: 144,
          column: 20
        },
        end: {
          line: 211,
          column: 21
        }
      },
      "62": {
        start: {
          line: 145,
          column: 24
        },
        end: {
          line: 175,
          column: 25
        }
      },
      "63": {
        start: {
          line: 146,
          column: 43
        },
        end: {
          line: 146,
          column: 52
        }
      },
      "64": {
        start: {
          line: 147,
          column: 48
        },
        end: {
          line: 147,
          column: 70
        }
      },
      "65": {
        start: {
          line: 148,
          column: 28
        },
        end: {
          line: 148,
          column: 81
        }
      },
      "66": {
        start: {
          line: 148,
          column: 72
        },
        end: {
          line: 148,
          column: 81
        }
      },
      "67": {
        start: {
          line: 149,
          column: 46
        },
        end: {
          line: 154,
          column: 30
        }
      },
      "68": {
        start: {
          line: 155,
          column: 28
        },
        end: {
          line: 174,
          column: 29
        }
      },
      "69": {
        start: {
          line: 156,
          column: 56
        },
        end: {
          line: 156,
          column: 74
        }
      },
      "70": {
        start: {
          line: 157,
          column: 52
        },
        end: {
          line: 157,
          column: 97
        }
      },
      "71": {
        start: {
          line: 158,
          column: 32
        },
        end: {
          line: 167,
          column: 35
        }
      },
      "72": {
        start: {
          line: 168,
          column: 32
        },
        end: {
          line: 173,
          column: 35
        }
      },
      "73": {
        start: {
          line: 178,
          column: 24
        },
        end: {
          line: 178,
          column: 162
        }
      },
      "74": {
        start: {
          line: 179,
          column: 62
        },
        end: {
          line: 183,
          column: 26
        }
      },
      "75": {
        start: {
          line: 184,
          column: 24
        },
        end: {
          line: 210,
          column: 25
        }
      },
      "76": {
        start: {
          line: 185,
          column: 56
        },
        end: {
          line: 185,
          column: 95
        }
      },
      "77": {
        start: {
          line: 186,
          column: 46
        },
        end: {
          line: 186,
          column: 78
        }
      },
      "78": {
        start: {
          line: 187,
          column: 52
        },
        end: {
          line: 187,
          column: 70
        }
      },
      "79": {
        start: {
          line: 188,
          column: 48
        },
        end: {
          line: 188,
          column: 98
        }
      },
      "80": {
        start: {
          line: 189,
          column: 28
        },
        end: {
          line: 198,
          column: 31
        }
      },
      "81": {
        start: {
          line: 199,
          column: 28
        },
        end: {
          line: 204,
          column: 31
        }
      },
      "82": {
        start: {
          line: 205,
          column: 28
        },
        end: {
          line: 205,
          column: 147
        }
      },
      "83": {
        start: {
          line: 206,
          column: 31
        },
        end: {
          line: 210,
          column: 25
        }
      },
      "84": {
        start: {
          line: 207,
          column: 28
        },
        end: {
          line: 207,
          column: 165
        }
      },
      "85": {
        start: {
          line: 209,
          column: 28
        },
        end: {
          line: 209,
          column: 214
        }
      },
      "86": {
        start: {
          line: 212,
          column: 54
        },
        end: {
          line: 212,
          column: 55
        }
      },
      "87": {
        start: {
          line: 213,
          column: 64
        },
        end: {
          line: 217,
          column: 22
        }
      },
      "88": {
        start: {
          line: 218,
          column: 20
        },
        end: {
          line: 218,
          column: 128
        }
      },
      "89": {
        start: {
          line: 218,
          column: 105
        },
        end: {
          line: 218,
          column: 123
        }
      },
      "90": {
        start: {
          line: 220,
          column: 51
        },
        end: {
          line: 227,
          column: 22
        }
      },
      "91": {
        start: {
          line: 228,
          column: 49
        },
        end: {
          line: 228,
          column: 50
        }
      },
      "92": {
        start: {
          line: 229,
          column: 46
        },
        end: {
          line: 229,
          column: 47
        }
      },
      "93": {
        start: {
          line: 230,
          column: 20
        },
        end: {
          line: 233,
          column: 23
        }
      },
      "94": {
        start: {
          line: 231,
          column: 24
        },
        end: {
          line: 231,
          column: 72
        }
      },
      "95": {
        start: {
          line: 232,
          column: 24
        },
        end: {
          line: 232,
          column: 90
        }
      },
      "96": {
        start: {
          line: 234,
          column: 33
        },
        end: {
          line: 234,
          column: 34
        }
      },
      "97": {
        start: {
          line: 235,
          column: 20
        },
        end: {
          line: 237,
          column: 21
        }
      },
      "98": {
        start: {
          line: 236,
          column: 24
        },
        end: {
          line: 236,
          column: 78
        }
      },
      "99": {
        start: {
          line: 238,
          column: 20
        },
        end: {
          line: 245,
          column: 23
        }
      },
      "100": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 252,
          column: 15
        }
      },
      "101": {
        start: {
          line: 254,
          column: 40
        },
        end: {
          line: 254,
          column: 41
        }
      },
      "102": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 259,
          column: 13
        }
      },
      "103": {
        start: {
          line: 256,
          column: 16
        },
        end: {
          line: 258,
          column: 19
        }
      },
      "104": {
        start: {
          line: 257,
          column: 20
        },
        end: {
          line: 257,
          column: 93
        }
      },
      "105": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 61
        }
      },
      "106": {
        start: {
          line: 261,
          column: 35
        },
        end: {
          line: 266,
          column: 14
        }
      },
      "107": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 442,
          column: 13
        }
      },
      "108": {
        start: {
          line: 268,
          column: 16
        },
        end: {
          line: 441,
          column: 17
        }
      },
      "109": {
        start: {
          line: 268,
          column: 28
        },
        end: {
          line: 268,
          column: 29
        }
      },
      "110": {
        start: {
          line: 269,
          column: 36
        },
        end: {
          line: 269,
          column: 51
        }
      },
      "111": {
        start: {
          line: 270,
          column: 20
        },
        end: {
          line: 270,
          column: 99
        }
      },
      "112": {
        start: {
          line: 270,
          column: 90
        },
        end: {
          line: 270,
          column: 99
        }
      },
      "113": {
        start: {
          line: 271,
          column: 20
        },
        end: {
          line: 279,
          column: 23
        }
      },
      "114": {
        start: {
          line: 280,
          column: 44
        },
        end: {
          line: 284,
          column: 22
        }
      },
      "115": {
        start: {
          line: 285,
          column: 20
        },
        end: {
          line: 285,
          column: 51
        }
      },
      "116": {
        start: {
          line: 285,
          column: 42
        },
        end: {
          line: 285,
          column: 51
        }
      },
      "117": {
        start: {
          line: 286,
          column: 48
        },
        end: {
          line: 286,
          column: 297
        }
      },
      "118": {
        start: {
          line: 287,
          column: 46
        },
        end: {
          line: 287,
          column: 70
        }
      },
      "119": {
        start: {
          line: 288,
          column: 20
        },
        end: {
          line: 411,
          column: 21
        }
      },
      "120": {
        start: {
          line: 289,
          column: 24
        },
        end: {
          line: 339,
          column: 25
        }
      },
      "121": {
        start: {
          line: 290,
          column: 43
        },
        end: {
          line: 290,
          column: 52
        }
      },
      "122": {
        start: {
          line: 291,
          column: 45
        },
        end: {
          line: 291,
          column: 67
        }
      },
      "123": {
        start: {
          line: 292,
          column: 28
        },
        end: {
          line: 292,
          column: 75
        }
      },
      "124": {
        start: {
          line: 292,
          column: 66
        },
        end: {
          line: 292,
          column: 75
        }
      },
      "125": {
        start: {
          line: 293,
          column: 46
        },
        end: {
          line: 298,
          column: 30
        }
      },
      "126": {
        start: {
          line: 299,
          column: 48
        },
        end: {
          line: 299,
          column: 49
        }
      },
      "127": {
        start: {
          line: 300,
          column: 46
        },
        end: {
          line: 300,
          column: 70
        }
      },
      "128": {
        start: {
          line: 301,
          column: 59
        },
        end: {
          line: 301,
          column: 60
        }
      },
      "129": {
        start: {
          line: 302,
          column: 46
        },
        end: {
          line: 302,
          column: 72
        }
      },
      "130": {
        start: {
          line: 303,
          column: 28
        },
        end: {
          line: 332,
          column: 29
        }
      },
      "131": {
        start: {
          line: 304,
          column: 32
        },
        end: {
          line: 304,
          column: 78
        }
      },
      "132": {
        start: {
          line: 305,
          column: 58
        },
        end: {
          line: 305,
          column: 119
        }
      },
      "133": {
        start: {
          line: 306,
          column: 57
        },
        end: {
          line: 306,
          column: 77
        }
      },
      "134": {
        start: {
          line: 307,
          column: 32
        },
        end: {
          line: 311,
          column: 33
        }
      },
      "135": {
        start: {
          line: 308,
          column: 36
        },
        end: {
          line: 308,
          column: 118
        }
      },
      "136": {
        start: {
          line: 310,
          column: 36
        },
        end: {
          line: 310,
          column: 65
        }
      },
      "137": {
        start: {
          line: 312,
          column: 32
        },
        end: {
          line: 320,
          column: 35
        }
      },
      "138": {
        start: {
          line: 322,
          column: 32
        },
        end: {
          line: 322,
          column: 57
        }
      },
      "139": {
        start: {
          line: 323,
          column: 32
        },
        end: {
          line: 323,
          column: 69
        }
      },
      "140": {
        start: {
          line: 324,
          column: 32
        },
        end: {
          line: 331,
          column: 35
        }
      },
      "141": {
        start: {
          line: 333,
          column: 28
        },
        end: {
          line: 338,
          column: 31
        }
      },
      "142": {
        start: {
          line: 342,
          column: 24
        },
        end: {
          line: 342,
          column: 195
        }
      },
      "143": {
        start: {
          line: 343,
          column: 55
        },
        end: {
          line: 347,
          column: 26
        }
      },
      "144": {
        start: {
          line: 348,
          column: 43
        },
        end: {
          line: 348,
          column: 47
        }
      },
      "145": {
        start: {
          line: 349,
          column: 24
        },
        end: {
          line: 356,
          column: 25
        }
      },
      "146": {
        start: {
          line: 350,
          column: 28
        },
        end: {
          line: 350,
          column: 76
        }
      },
      "147": {
        start: {
          line: 351,
          column: 28
        },
        end: {
          line: 351,
          column: 139
        }
      },
      "148": {
        start: {
          line: 352,
          column: 31
        },
        end: {
          line: 356,
          column: 25
        }
      },
      "149": {
        start: {
          line: 353,
          column: 28
        },
        end: {
          line: 353,
          column: 205
        }
      },
      "150": {
        start: {
          line: 355,
          column: 28
        },
        end: {
          line: 355,
          column: 186
        }
      },
      "151": {
        start: {
          line: 357,
          column: 24
        },
        end: {
          line: 410,
          column: 25
        }
      },
      "152": {
        start: {
          line: 358,
          column: 45
        },
        end: {
          line: 358,
          column: 62
        }
      },
      "153": {
        start: {
          line: 359,
          column: 28
        },
        end: {
          line: 409,
          column: 29
        }
      },
      "154": {
        start: {
          line: 360,
          column: 50
        },
        end: {
          line: 365,
          column: 34
        }
      },
      "155": {
        start: {
          line: 366,
          column: 52
        },
        end: {
          line: 366,
          column: 53
        }
      },
      "156": {
        start: {
          line: 367,
          column: 50
        },
        end: {
          line: 367,
          column: 74
        }
      },
      "157": {
        start: {
          line: 368,
          column: 63
        },
        end: {
          line: 368,
          column: 64
        }
      },
      "158": {
        start: {
          line: 369,
          column: 50
        },
        end: {
          line: 369,
          column: 76
        }
      },
      "159": {
        start: {
          line: 370,
          column: 32
        },
        end: {
          line: 400,
          column: 33
        }
      },
      "160": {
        start: {
          line: 371,
          column: 36
        },
        end: {
          line: 371,
          column: 82
        }
      },
      "161": {
        start: {
          line: 372,
          column: 62
        },
        end: {
          line: 372,
          column: 123
        }
      },
      "162": {
        start: {
          line: 373,
          column: 61
        },
        end: {
          line: 373,
          column: 81
        }
      },
      "163": {
        start: {
          line: 374,
          column: 36
        },
        end: {
          line: 378,
          column: 37
        }
      },
      "164": {
        start: {
          line: 375,
          column: 40
        },
        end: {
          line: 375,
          column: 122
        }
      },
      "165": {
        start: {
          line: 377,
          column: 40
        },
        end: {
          line: 377,
          column: 69
        }
      },
      "166": {
        start: {
          line: 379,
          column: 36
        },
        end: {
          line: 387,
          column: 39
        }
      },
      "167": {
        start: {
          line: 389,
          column: 36
        },
        end: {
          line: 389,
          column: 61
        }
      },
      "168": {
        start: {
          line: 390,
          column: 36
        },
        end: {
          line: 390,
          column: 73
        }
      },
      "169": {
        start: {
          line: 391,
          column: 36
        },
        end: {
          line: 391,
          column: 175
        }
      },
      "170": {
        start: {
          line: 392,
          column: 36
        },
        end: {
          line: 399,
          column: 39
        }
      },
      "171": {
        start: {
          line: 401,
          column: 32
        },
        end: {
          line: 406,
          column: 35
        }
      },
      "172": {
        start: {
          line: 408,
          column: 32
        },
        end: {
          line: 408,
          column: 156
        }
      },
      "173": {
        start: {
          line: 414,
          column: 45
        },
        end: {
          line: 418,
          column: 22
        }
      },
      "174": {
        start: {
          line: 419,
          column: 48
        },
        end: {
          line: 419,
          column: 49
        }
      },
      "175": {
        start: {
          line: 420,
          column: 45
        },
        end: {
          line: 420,
          column: 46
        }
      },
      "176": {
        start: {
          line: 421,
          column: 20
        },
        end: {
          line: 424,
          column: 23
        }
      },
      "177": {
        start: {
          line: 422,
          column: 24
        },
        end: {
          line: 422,
          column: 71
        }
      },
      "178": {
        start: {
          line: 423,
          column: 24
        },
        end: {
          line: 423,
          column: 89
        }
      },
      "179": {
        start: {
          line: 425,
          column: 49
        },
        end: {
          line: 425,
          column: 50
        }
      },
      "180": {
        start: {
          line: 426,
          column: 20
        },
        end: {
          line: 428,
          column: 21
        }
      },
      "181": {
        start: {
          line: 427,
          column: 24
        },
        end: {
          line: 427,
          column: 92
        }
      },
      "182": {
        start: {
          line: 430,
          column: 20
        },
        end: {
          line: 432,
          column: 21
        }
      },
      "183": {
        start: {
          line: 431,
          column: 24
        },
        end: {
          line: 431,
          column: 71
        }
      },
      "184": {
        start: {
          line: 433,
          column: 20
        },
        end: {
          line: 440,
          column: 23
        }
      },
      "185": {
        start: {
          line: 443,
          column: 39
        },
        end: {
          line: 455,
          column: 14
        }
      },
      "186": {
        start: {
          line: 456,
          column: 12
        },
        end: {
          line: 459,
          column: 14
        }
      },
      "187": {
        start: {
          line: 464,
          column: 8
        },
        end: {
          line: 466,
          column: 9
        }
      },
      "188": {
        start: {
          line: 465,
          column: 12
        },
        end: {
          line: 465,
          column: 65
        }
      },
      "189": {
        start: {
          line: 468,
          column: 8
        },
        end: {
          line: 482,
          column: 9
        }
      },
      "190": {
        start: {
          line: 469,
          column: 12
        },
        end: {
          line: 469,
          column: 61
        }
      },
      "191": {
        start: {
          line: 470,
          column: 12
        },
        end: {
          line: 470,
          column: 66
        }
      },
      "192": {
        start: {
          line: 471,
          column: 12
        },
        end: {
          line: 471,
          column: 72
        }
      },
      "193": {
        start: {
          line: 472,
          column: 12
        },
        end: {
          line: 472,
          column: 62
        }
      },
      "194": {
        start: {
          line: 473,
          column: 12
        },
        end: {
          line: 473,
          column: 60
        }
      },
      "195": {
        start: {
          line: 474,
          column: 12
        },
        end: {
          line: 474,
          column: 64
        }
      },
      "196": {
        start: {
          line: 476,
          column: 12
        },
        end: {
          line: 476,
          column: 81
        }
      },
      "197": {
        start: {
          line: 477,
          column: 12
        },
        end: {
          line: 477,
          column: 76
        }
      },
      "198": {
        start: {
          line: 478,
          column: 12
        },
        end: {
          line: 478,
          column: 78
        }
      },
      "199": {
        start: {
          line: 480,
          column: 12
        },
        end: {
          line: 480,
          column: 90
        }
      },
      "200": {
        start: {
          line: 484,
          column: 8
        },
        end: {
          line: 493,
          column: 9
        }
      },
      "201": {
        start: {
          line: 485,
          column: 12
        },
        end: {
          line: 485,
          column: 59
        }
      },
      "202": {
        start: {
          line: 486,
          column: 12
        },
        end: {
          line: 486,
          column: 64
        }
      },
      "203": {
        start: {
          line: 487,
          column: 12
        },
        end: {
          line: 487,
          column: 67
        }
      },
      "204": {
        start: {
          line: 488,
          column: 12
        },
        end: {
          line: 488,
          column: 72
        }
      },
      "205": {
        start: {
          line: 489,
          column: 12
        },
        end: {
          line: 489,
          column: 53
        }
      },
      "206": {
        start: {
          line: 490,
          column: 12
        },
        end: {
          line: 490,
          column: 76
        }
      },
      "207": {
        start: {
          line: 492,
          column: 12
        },
        end: {
          line: 492,
          column: 102
        }
      },
      "208": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 497,
          column: 11
        }
      },
      "209": {
        start: {
          line: 499,
          column: 8
        },
        end: {
          line: 499,
          column: 71
        }
      },
      "210": {
        start: {
          line: 500,
          column: 24
        },
        end: {
          line: 500,
          column: 78
        }
      },
      "211": {
        start: {
          line: 501,
          column: 8
        },
        end: {
          line: 508,
          column: 11
        }
      },
      "212": {
        start: {
          line: 512,
          column: 26
        },
        end: {
          line: 512,
          column: 35
        }
      },
      "213": {
        start: {
          line: 513,
          column: 4
        },
        end: {
          line: 728,
          column: 5
        }
      },
      "214": {
        start: {
          line: 514,
          column: 27
        },
        end: {
          line: 514,
          column: 50
        }
      },
      "215": {
        start: {
          line: 515,
          column: 8
        },
        end: {
          line: 523,
          column: 9
        }
      },
      "216": {
        start: {
          line: 516,
          column: 12
        },
        end: {
          line: 522,
          column: 15
        }
      },
      "217": {
        start: {
          line: 524,
          column: 33
        },
        end: {
          line: 535,
          column: 10
        }
      },
      "218": {
        start: {
          line: 536,
          column: 8
        },
        end: {
          line: 544,
          column: 9
        }
      },
      "219": {
        start: {
          line: 537,
          column: 12
        },
        end: {
          line: 543,
          column: 15
        }
      },
      "220": {
        start: {
          line: 545,
          column: 23
        },
        end: {
          line: 682,
          column: 10
        }
      },
      "221": {
        start: {
          line: 546,
          column: 37
        },
        end: {
          line: 546,
          column: 39
        }
      },
      "222": {
        start: {
          line: 547,
          column: 12
        },
        end: {
          line: 667,
          column: 13
        }
      },
      "223": {
        start: {
          line: 548,
          column: 16
        },
        end: {
          line: 666,
          column: 17
        }
      },
      "224": {
        start: {
          line: 549,
          column: 20
        },
        end: {
          line: 552,
          column: 21
        }
      },
      "225": {
        start: {
          line: 550,
          column: 24
        },
        end: {
          line: 550,
          column: 135
        }
      },
      "226": {
        start: {
          line: 551,
          column: 24
        },
        end: {
          line: 551,
          column: 33
        }
      },
      "227": {
        start: {
          line: 553,
          column: 38
        },
        end: {
          line: 553,
          column: 52
        }
      },
      "228": {
        start: {
          line: 554,
          column: 57
        },
        end: {
          line: 554,
          column: 70
        }
      },
      "229": {
        start: {
          line: 555,
          column: 47
        },
        end: {
          line: 555,
          column: 51
        }
      },
      "230": {
        start: {
          line: 556,
          column: 51
        },
        end: {
          line: 556,
          column: 81
        }
      },
      "231": {
        start: {
          line: 558,
          column: 20
        },
        end: {
          line: 563,
          column: 21
        }
      },
      "232": {
        start: {
          line: 559,
          column: 41
        },
        end: {
          line: 559,
          column: 101
        }
      },
      "233": {
        start: {
          line: 560,
          column: 24
        },
        end: {
          line: 562,
          column: 25
        }
      },
      "234": {
        start: {
          line: 561,
          column: 28
        },
        end: {
          line: 561,
          column: 60
        }
      },
      "235": {
        start: {
          line: 564,
          column: 20
        },
        end: {
          line: 637,
          column: 21
        }
      },
      "236": {
        start: {
          line: 566,
          column: 24
        },
        end: {
          line: 566,
          column: 125
        }
      },
      "237": {
        start: {
          line: 567,
          column: 24
        },
        end: {
          line: 600,
          column: 25
        }
      },
      "238": {
        start: {
          line: 568,
          column: 43
        },
        end: {
          line: 568,
          column: 52
        }
      },
      "239": {
        start: {
          line: 569,
          column: 54
        },
        end: {
          line: 569,
          column: 84
        }
      },
      "240": {
        start: {
          line: 570,
          column: 28
        },
        end: {
          line: 570,
          column: 93
        }
      },
      "241": {
        start: {
          line: 570,
          column: 84
        },
        end: {
          line: 570,
          column: 93
        }
      },
      "242": {
        start: {
          line: 571,
          column: 50
        },
        end: {
          line: 576,
          column: 30
        }
      },
      "243": {
        start: {
          line: 577,
          column: 28
        },
        end: {
          line: 599,
          column: 29
        }
      },
      "244": {
        start: {
          line: 578,
          column: 56
        },
        end: {
          line: 578,
          column: 78
        }
      },
      "245": {
        start: {
          line: 579,
          column: 56
        },
        end: {
          line: 579,
          column: 111
        }
      },
      "246": {
        start: {
          line: 580,
          column: 51
        },
        end: {
          line: 583,
          column: 33
        }
      },
      "247": {
        start: {
          line: 584,
          column: 32
        },
        end: {
          line: 589,
          column: 35
        }
      },
      "248": {
        start: {
          line: 590,
          column: 32
        },
        end: {
          line: 595,
          column: 35
        }
      },
      "249": {
        start: {
          line: 596,
          column: 32
        },
        end: {
          line: 596,
          column: 186
        }
      },
      "250": {
        start: {
          line: 598,
          column: 32
        },
        end: {
          line: 598,
          column: 198
        }
      },
      "251": {
        start: {
          line: 603,
          column: 24
        },
        end: {
          line: 603,
          column: 226
        }
      },
      "252": {
        start: {
          line: 604,
          column: 59
        },
        end: {
          line: 608,
          column: 26
        }
      },
      "253": {
        start: {
          line: 609,
          column: 24
        },
        end: {
          line: 636,
          column: 25
        }
      },
      "254": {
        start: {
          line: 610,
          column: 56
        },
        end: {
          line: 610,
          column: 85
        }
      },
      "255": {
        start: {
          line: 611,
          column: 55
        },
        end: {
          line: 611,
          column: 81
        }
      },
      "256": {
        start: {
          line: 612,
          column: 28
        },
        end: {
          line: 612,
          column: 171
        }
      },
      "257": {
        start: {
          line: 613,
          column: 52
        },
        end: {
          line: 613,
          column: 80
        }
      },
      "258": {
        start: {
          line: 614,
          column: 52
        },
        end: {
          line: 614,
          column: 124
        }
      },
      "259": {
        start: {
          line: 615,
          column: 55
        },
        end: {
          line: 618,
          column: 29
        }
      },
      "260": {
        start: {
          line: 619,
          column: 28
        },
        end: {
          line: 624,
          column: 31
        }
      },
      "261": {
        start: {
          line: 625,
          column: 28
        },
        end: {
          line: 630,
          column: 31
        }
      },
      "262": {
        start: {
          line: 631,
          column: 28
        },
        end: {
          line: 631,
          column: 214
        }
      },
      "263": {
        start: {
          line: 632,
          column: 31
        },
        end: {
          line: 636,
          column: 25
        }
      },
      "264": {
        start: {
          line: 633,
          column: 28
        },
        end: {
          line: 633,
          column: 168
        }
      },
      "265": {
        start: {
          line: 635,
          column: 28
        },
        end: {
          line: 635,
          column: 295
        }
      },
      "266": {
        start: {
          line: 639,
          column: 51
        },
        end: {
          line: 646,
          column: 22
        }
      },
      "267": {
        start: {
          line: 647,
          column: 49
        },
        end: {
          line: 647,
          column: 50
        }
      },
      "268": {
        start: {
          line: 648,
          column: 46
        },
        end: {
          line: 648,
          column: 47
        }
      },
      "269": {
        start: {
          line: 649,
          column: 20
        },
        end: {
          line: 652,
          column: 23
        }
      },
      "270": {
        start: {
          line: 650,
          column: 24
        },
        end: {
          line: 650,
          column: 65
        }
      },
      "271": {
        start: {
          line: 651,
          column: 24
        },
        end: {
          line: 651,
          column: 76
        }
      },
      "272": {
        start: {
          line: 653,
          column: 43
        },
        end: {
          line: 653,
          column: 44
        }
      },
      "273": {
        start: {
          line: 654,
          column: 20
        },
        end: {
          line: 656,
          column: 21
        }
      },
      "274": {
        start: {
          line: 655,
          column: 24
        },
        end: {
          line: 655,
          column: 88
        }
      },
      "275": {
        start: {
          line: 657,
          column: 20
        },
        end: {
          line: 664,
          column: 23
        }
      },
      "276": {
        start: {
          line: 668,
          column: 12
        },
        end: {
          line: 672,
          column: 15
        }
      },
      "277": {
        start: {
          line: 673,
          column: 12
        },
        end: {
          line: 677,
          column: 15
        }
      },
      "278": {
        start: {
          line: 678,
          column: 12
        },
        end: {
          line: 681,
          column: 14
        }
      },
      "279": {
        start: {
          line: 684,
          column: 8
        },
        end: {
          line: 686,
          column: 9
        }
      },
      "280": {
        start: {
          line: 685,
          column: 12
        },
        end: {
          line: 685,
          column: 92
        }
      },
      "281": {
        start: {
          line: 688,
          column: 8
        },
        end: {
          line: 702,
          column: 9
        }
      },
      "282": {
        start: {
          line: 689,
          column: 12
        },
        end: {
          line: 689,
          column: 61
        }
      },
      "283": {
        start: {
          line: 690,
          column: 12
        },
        end: {
          line: 690,
          column: 66
        }
      },
      "284": {
        start: {
          line: 691,
          column: 12
        },
        end: {
          line: 691,
          column: 72
        }
      },
      "285": {
        start: {
          line: 692,
          column: 12
        },
        end: {
          line: 692,
          column: 62
        }
      },
      "286": {
        start: {
          line: 693,
          column: 12
        },
        end: {
          line: 693,
          column: 60
        }
      },
      "287": {
        start: {
          line: 694,
          column: 12
        },
        end: {
          line: 694,
          column: 64
        }
      },
      "288": {
        start: {
          line: 696,
          column: 12
        },
        end: {
          line: 696,
          column: 81
        }
      },
      "289": {
        start: {
          line: 697,
          column: 12
        },
        end: {
          line: 697,
          column: 76
        }
      },
      "290": {
        start: {
          line: 698,
          column: 12
        },
        end: {
          line: 698,
          column: 80
        }
      },
      "291": {
        start: {
          line: 700,
          column: 12
        },
        end: {
          line: 700,
          column: 92
        }
      },
      "292": {
        start: {
          line: 704,
          column: 8
        },
        end: {
          line: 713,
          column: 9
        }
      },
      "293": {
        start: {
          line: 705,
          column: 12
        },
        end: {
          line: 705,
          column: 59
        }
      },
      "294": {
        start: {
          line: 706,
          column: 12
        },
        end: {
          line: 706,
          column: 64
        }
      },
      "295": {
        start: {
          line: 707,
          column: 12
        },
        end: {
          line: 707,
          column: 67
        }
      },
      "296": {
        start: {
          line: 708,
          column: 12
        },
        end: {
          line: 708,
          column: 72
        }
      },
      "297": {
        start: {
          line: 709,
          column: 12
        },
        end: {
          line: 709,
          column: 53
        }
      },
      "298": {
        start: {
          line: 710,
          column: 12
        },
        end: {
          line: 710,
          column: 78
        }
      },
      "299": {
        start: {
          line: 712,
          column: 12
        },
        end: {
          line: 712,
          column: 104
        }
      },
      "300": {
        start: {
          line: 714,
          column: 8
        },
        end: {
          line: 716,
          column: 11
        }
      },
      "301": {
        start: {
          line: 718,
          column: 8
        },
        end: {
          line: 718,
          column: 82
        }
      },
      "302": {
        start: {
          line: 719,
          column: 24
        },
        end: {
          line: 719,
          column: 92
        }
      },
      "303": {
        start: {
          line: 720,
          column: 8
        },
        end: {
          line: 727,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 13
          }
        },
        loc: {
          start: {
            line: 12,
            column: 23
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 10
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 10
          }
        },
        loc: {
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 33
          }
        },
        loc: {
          start: {
            line: 26,
            column: 39
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 26
      },
      "5": {
        name: "GET",
        decl: {
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 18
          }
        },
        loc: {
          start: {
            line: 31,
            column: 40
          },
          end: {
            line: 79,
            column: 1
          }
        },
        line: 31
      },
      "6": {
        name: "PUT",
        decl: {
          start: {
            line: 80,
            column: 15
          },
          end: {
            line: 80,
            column: 18
          }
        },
        loc: {
          start: {
            line: 80,
            column: 40
          },
          end: {
            line: 510,
            column: 1
          }
        },
        line: 80
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 133,
            column: 58
          },
          end: {
            line: 133,
            column: 59
          }
        },
        loc: {
          start: {
            line: 133,
            column: 70
          },
          end: {
            line: 460,
            column: 9
          }
        },
        line: 133
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 218,
            column: 93
          },
          end: {
            line: 218,
            column: 94
          }
        },
        loc: {
          start: {
            line: 218,
            column: 105
          },
          end: {
            line: 218,
            column: 123
          }
        },
        line: 218
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 230,
            column: 51
          },
          end: {
            line: 230,
            column: 52
          }
        },
        loc: {
          start: {
            line: 230,
            column: 67
          },
          end: {
            line: 233,
            column: 21
          }
        },
        line: 230
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 256,
            column: 37
          },
          end: {
            line: 256,
            column: 38
          }
        },
        loc: {
          start: {
            line: 256,
            column: 45
          },
          end: {
            line: 258,
            column: 17
          }
        },
        line: 256
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 421,
            column: 45
          },
          end: {
            line: 421,
            column: 46
          }
        },
        loc: {
          start: {
            line: 421,
            column: 61
          },
          end: {
            line: 424,
            column: 21
          }
        },
        line: 421
      },
      "12": {
        name: "DELETE",
        decl: {
          start: {
            line: 511,
            column: 15
          },
          end: {
            line: 511,
            column: 21
          }
        },
        loc: {
          start: {
            line: 511,
            column: 43
          },
          end: {
            line: 729,
            column: 1
          }
        },
        line: 511
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 545,
            column: 58
          },
          end: {
            line: 545,
            column: 59
          }
        },
        loc: {
          start: {
            line: 545,
            column: 70
          },
          end: {
            line: 682,
            column: 9
          }
        },
        line: 545
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 649,
            column: 51
          },
          end: {
            line: 649,
            column: 52
          }
        },
        loc: {
          start: {
            line: 649,
            column: 60
          },
          end: {
            line: 652,
            column: 21
          }
        },
        line: 649
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 35
          },
          end: {
            line: 27,
            column: 38
          }
        }, {
          start: {
            line: 27,
            column: 41
          },
          end: {
            line: 29,
            column: 5
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 14
          }
        }, {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 32
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "4": {
        loc: {
          start: {
            line: 69,
            column: 24
          },
          end: {
            line: 69,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 69,
            column: 49
          },
          end: {
            line: 69,
            column: 62
          }
        }, {
          start: {
            line: 69,
            column: 65
          },
          end: {
            line: 69,
            column: 92
          }
        }],
        line: 69
      },
      "5": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "6": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "7": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 118,
            column: 96
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 118,
            column: 96
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "8": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 119,
            column: 75
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 119,
            column: 75
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "9": {
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 120,
            column: 79
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 120,
            column: 79
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "10": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 121,
            column: 129
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 121,
            column: 129
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "11": {
        loc: {
          start: {
            line: 121,
            column: 74
          },
          end: {
            line: 121,
            column: 128
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 121,
            column: 94
          },
          end: {
            line: 121,
            column: 121
          }
        }, {
          start: {
            line: 121,
            column: 124
          },
          end: {
            line: 121,
            column: 128
          }
        }],
        line: 121
      },
      "12": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 123,
            column: 99
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 123,
            column: 99
          }
        }, {
          start: {
            line: 123,
            column: 13
          },
          end: {
            line: 123,
            column: 99
          }
        }],
        line: 122
      },
      "13": {
        loc: {
          start: {
            line: 123,
            column: 13
          },
          end: {
            line: 123,
            column: 99
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 13
          },
          end: {
            line: 123,
            column: 99
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "14": {
        loc: {
          start: {
            line: 124,
            column: 43
          },
          end: {
            line: 124,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 124,
            column: 80
          },
          end: {
            line: 124,
            column: 100
          }
        }, {
          start: {
            line: 124,
            column: 103
          },
          end: {
            line: 124,
            column: 133
          }
        }],
        line: 124
      },
      "15": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 132,
            column: 10
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 132,
            column: 10
          }
        }, {
          start: {
            line: 130,
            column: 13
          },
          end: {
            line: 132,
            column: 10
          }
        }],
        line: 125
      },
      "16": {
        loc: {
          start: {
            line: 130,
            column: 13
          },
          end: {
            line: 132,
            column: 10
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 13
          },
          end: {
            line: 132,
            column: 10
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "17": {
        loc: {
          start: {
            line: 130,
            column: 17
          },
          end: {
            line: 130,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 17
          },
          end: {
            line: 130,
            column: 46
          }
        }, {
          start: {
            line: 130,
            column: 50
          },
          end: {
            line: 130,
            column: 77
          }
        }],
        line: 130
      },
      "18": {
        loc: {
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 247,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 247,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "19": {
        loc: {
          start: {
            line: 135,
            column: 16
          },
          end: {
            line: 135,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 16
          },
          end: {
            line: 135,
            column: 38
          }
        }, {
          start: {
            line: 135,
            column: 42
          },
          end: {
            line: 135,
            column: 75
          }
        }],
        line: 135
      },
      "20": {
        loc: {
          start: {
            line: 142,
            column: 20
          },
          end: {
            line: 142,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 20
          },
          end: {
            line: 142,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "21": {
        loc: {
          start: {
            line: 143,
            column: 48
          },
          end: {
            line: 143,
            column: 461
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 143,
            column: 213
          },
          end: {
            line: 143,
            column: 284
          }
        }, {
          start: {
            line: 143,
            column: 287
          },
          end: {
            line: 143,
            column: 461
          }
        }],
        line: 143
      },
      "22": {
        loc: {
          start: {
            line: 143,
            column: 48
          },
          end: {
            line: 143,
            column: 210
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 143,
            column: 48
          },
          end: {
            line: 143,
            column: 78
          }
        }, {
          start: {
            line: 143,
            column: 82
          },
          end: {
            line: 143,
            column: 127
          }
        }, {
          start: {
            line: 143,
            column: 131
          },
          end: {
            line: 143,
            column: 210
          }
        }],
        line: 143
      },
      "23": {
        loc: {
          start: {
            line: 143,
            column: 287
          },
          end: {
            line: 143,
            column: 461
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 143,
            column: 424
          },
          end: {
            line: 143,
            column: 454
          }
        }, {
          start: {
            line: 143,
            column: 457
          },
          end: {
            line: 143,
            column: 461
          }
        }],
        line: 143
      },
      "24": {
        loc: {
          start: {
            line: 143,
            column: 287
          },
          end: {
            line: 143,
            column: 421
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 143,
            column: 287
          },
          end: {
            line: 143,
            column: 317
          }
        }, {
          start: {
            line: 143,
            column: 321
          },
          end: {
            line: 143,
            column: 371
          }
        }, {
          start: {
            line: 143,
            column: 375
          },
          end: {
            line: 143,
            column: 421
          }
        }],
        line: 143
      },
      "25": {
        loc: {
          start: {
            line: 144,
            column: 20
          },
          end: {
            line: 211,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 20
          },
          end: {
            line: 211,
            column: 21
          }
        }, {
          start: {
            line: 176,
            column: 27
          },
          end: {
            line: 211,
            column: 21
          }
        }],
        line: 144
      },
      "26": {
        loc: {
          start: {
            line: 144,
            column: 24
          },
          end: {
            line: 144,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 144,
            column: 24
          },
          end: {
            line: 144,
            column: 43
          }
        }, {
          start: {
            line: 144,
            column: 47
          },
          end: {
            line: 144,
            column: 90
          }
        }],
        line: 144
      },
      "27": {
        loc: {
          start: {
            line: 148,
            column: 28
          },
          end: {
            line: 148,
            column: 81
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 28
          },
          end: {
            line: 148,
            column: 81
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "28": {
        loc: {
          start: {
            line: 148,
            column: 32
          },
          end: {
            line: 148,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 32
          },
          end: {
            line: 148,
            column: 48
          }
        }, {
          start: {
            line: 148,
            column: 52
          },
          end: {
            line: 148,
            column: 70
          }
        }],
        line: 148
      },
      "29": {
        loc: {
          start: {
            line: 155,
            column: 28
          },
          end: {
            line: 174,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 28
          },
          end: {
            line: 174,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "30": {
        loc: {
          start: {
            line: 165,
            column: 58
          },
          end: {
            line: 165,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 78
          },
          end: {
            line: 165,
            column: 79
          }
        }, {
          start: {
            line: 165,
            column: 82
          },
          end: {
            line: 165,
            column: 108
          }
        }],
        line: 165
      },
      "31": {
        loc: {
          start: {
            line: 184,
            column: 24
          },
          end: {
            line: 210,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 24
          },
          end: {
            line: 210,
            column: 25
          }
        }, {
          start: {
            line: 206,
            column: 31
          },
          end: {
            line: 210,
            column: 25
          }
        }],
        line: 184
      },
      "32": {
        loc: {
          start: {
            line: 196,
            column: 54
          },
          end: {
            line: 196,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 196,
            column: 74
          },
          end: {
            line: 196,
            column: 75
          }
        }, {
          start: {
            line: 196,
            column: 78
          },
          end: {
            line: 196,
            column: 104
          }
        }],
        line: 196
      },
      "33": {
        loc: {
          start: {
            line: 206,
            column: 31
          },
          end: {
            line: 210,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 31
          },
          end: {
            line: 210,
            column: 25
          }
        }, {
          start: {
            line: 208,
            column: 31
          },
          end: {
            line: 210,
            column: 25
          }
        }],
        line: 206
      },
      "34": {
        loc: {
          start: {
            line: 235,
            column: 20
          },
          end: {
            line: 237,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 20
          },
          end: {
            line: 237,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "35": {
        loc: {
          start: {
            line: 243,
            column: 49
          },
          end: {
            line: 243,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 243,
            column: 63
          },
          end: {
            line: 243,
            column: 69
          }
        }, {
          start: {
            line: 243,
            column: 72
          },
          end: {
            line: 243,
            column: 73
          }
        }],
        line: 243
      },
      "36": {
        loc: {
          start: {
            line: 255,
            column: 12
          },
          end: {
            line: 259,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 12
          },
          end: {
            line: 259,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "37": {
        loc: {
          start: {
            line: 255,
            column: 16
          },
          end: {
            line: 255,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 255,
            column: 16
          },
          end: {
            line: 255,
            column: 28
          }
        }, {
          start: {
            line: 255,
            column: 32
          },
          end: {
            line: 255,
            column: 59
          }
        }],
        line: 255
      },
      "38": {
        loc: {
          start: {
            line: 257,
            column: 76
          },
          end: {
            line: 257,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 257,
            column: 76
          },
          end: {
            line: 257,
            column: 86
          }
        }, {
          start: {
            line: 257,
            column: 90
          },
          end: {
            line: 257,
            column: 91
          }
        }],
        line: 257
      },
      "39": {
        loc: {
          start: {
            line: 267,
            column: 12
          },
          end: {
            line: 442,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 267,
            column: 12
          },
          end: {
            line: 442,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 267
      },
      "40": {
        loc: {
          start: {
            line: 267,
            column: 16
          },
          end: {
            line: 267,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 267,
            column: 16
          },
          end: {
            line: 267,
            column: 28
          }
        }, {
          start: {
            line: 267,
            column: 32
          },
          end: {
            line: 267,
            column: 59
          }
        }],
        line: 267
      },
      "41": {
        loc: {
          start: {
            line: 270,
            column: 20
          },
          end: {
            line: 270,
            column: 99
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 20
          },
          end: {
            line: 270,
            column: 99
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "42": {
        loc: {
          start: {
            line: 270,
            column: 24
          },
          end: {
            line: 270,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 270,
            column: 24
          },
          end: {
            line: 270,
            column: 42
          }
        }, {
          start: {
            line: 270,
            column: 46
          },
          end: {
            line: 270,
            column: 63
          }
        }, {
          start: {
            line: 270,
            column: 67
          },
          end: {
            line: 270,
            column: 88
          }
        }],
        line: 270
      },
      "43": {
        loc: {
          start: {
            line: 276,
            column: 42
          },
          end: {
            line: 276,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 276,
            column: 42
          },
          end: {
            line: 276,
            column: 55
          }
        }, {
          start: {
            line: 276,
            column: 59
          },
          end: {
            line: 276,
            column: 60
          }
        }],
        line: 276
      },
      "44": {
        loc: {
          start: {
            line: 277,
            column: 69
          },
          end: {
            line: 277,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 277,
            column: 69
          },
          end: {
            line: 277,
            column: 82
          }
        }, {
          start: {
            line: 277,
            column: 86
          },
          end: {
            line: 277,
            column: 87
          }
        }],
        line: 277
      },
      "45": {
        loc: {
          start: {
            line: 285,
            column: 20
          },
          end: {
            line: 285,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 285,
            column: 20
          },
          end: {
            line: 285,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 285
      },
      "46": {
        loc: {
          start: {
            line: 286,
            column: 48
          },
          end: {
            line: 286,
            column: 297
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 286,
            column: 137
          },
          end: {
            line: 286,
            column: 160
          }
        }, {
          start: {
            line: 286,
            column: 163
          },
          end: {
            line: 286,
            column: 297
          }
        }],
        line: 286
      },
      "47": {
        loc: {
          start: {
            line: 286,
            column: 48
          },
          end: {
            line: 286,
            column: 134
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 286,
            column: 48
          },
          end: {
            line: 286,
            column: 68
          }
        }, {
          start: {
            line: 286,
            column: 72
          },
          end: {
            line: 286,
            column: 107
          }
        }, {
          start: {
            line: 286,
            column: 111
          },
          end: {
            line: 286,
            column: 134
          }
        }],
        line: 286
      },
      "48": {
        loc: {
          start: {
            line: 286,
            column: 163
          },
          end: {
            line: 286,
            column: 297
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 286,
            column: 270
          },
          end: {
            line: 286,
            column: 290
          }
        }, {
          start: {
            line: 286,
            column: 293
          },
          end: {
            line: 286,
            column: 297
          }
        }],
        line: 286
      },
      "49": {
        loc: {
          start: {
            line: 286,
            column: 163
          },
          end: {
            line: 286,
            column: 267
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 286,
            column: 163
          },
          end: {
            line: 286,
            column: 183
          }
        }, {
          start: {
            line: 286,
            column: 187
          },
          end: {
            line: 286,
            column: 227
          }
        }, {
          start: {
            line: 286,
            column: 231
          },
          end: {
            line: 286,
            column: 267
          }
        }],
        line: 286
      },
      "50": {
        loc: {
          start: {
            line: 288,
            column: 20
          },
          end: {
            line: 411,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 20
          },
          end: {
            line: 411,
            column: 21
          }
        }, {
          start: {
            line: 340,
            column: 27
          },
          end: {
            line: 411,
            column: 21
          }
        }],
        line: 288
      },
      "51": {
        loc: {
          start: {
            line: 288,
            column: 24
          },
          end: {
            line: 288,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 288,
            column: 24
          },
          end: {
            line: 288,
            column: 43
          }
        }, {
          start: {
            line: 288,
            column: 47
          },
          end: {
            line: 288,
            column: 90
          }
        }],
        line: 288
      },
      "52": {
        loc: {
          start: {
            line: 292,
            column: 28
          },
          end: {
            line: 292,
            column: 75
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 28
          },
          end: {
            line: 292,
            column: 75
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "53": {
        loc: {
          start: {
            line: 292,
            column: 32
          },
          end: {
            line: 292,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 292,
            column: 32
          },
          end: {
            line: 292,
            column: 45
          }
        }, {
          start: {
            line: 292,
            column: 49
          },
          end: {
            line: 292,
            column: 64
          }
        }],
        line: 292
      },
      "54": {
        loc: {
          start: {
            line: 300,
            column: 46
          },
          end: {
            line: 300,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 300,
            column: 46
          },
          end: {
            line: 300,
            column: 65
          }
        }, {
          start: {
            line: 300,
            column: 69
          },
          end: {
            line: 300,
            column: 70
          }
        }],
        line: 300
      },
      "55": {
        loc: {
          start: {
            line: 302,
            column: 53
          },
          end: {
            line: 302,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 302,
            column: 53
          },
          end: {
            line: 302,
            column: 66
          }
        }, {
          start: {
            line: 302,
            column: 70
          },
          end: {
            line: 302,
            column: 71
          }
        }],
        line: 302
      },
      "56": {
        loc: {
          start: {
            line: 303,
            column: 28
          },
          end: {
            line: 332,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 28
          },
          end: {
            line: 332,
            column: 29
          }
        }, {
          start: {
            line: 321,
            column: 35
          },
          end: {
            line: 332,
            column: 29
          }
        }],
        line: 303
      },
      "57": {
        loc: {
          start: {
            line: 305,
            column: 59
          },
          end: {
            line: 305,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 305,
            column: 59
          },
          end: {
            line: 305,
            column: 77
          }
        }, {
          start: {
            line: 305,
            column: 81
          },
          end: {
            line: 305,
            column: 82
          }
        }],
        line: 305
      },
      "58": {
        loc: {
          start: {
            line: 305,
            column: 87
          },
          end: {
            line: 305,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 305,
            column: 87
          },
          end: {
            line: 305,
            column: 113
          }
        }, {
          start: {
            line: 305,
            column: 117
          },
          end: {
            line: 305,
            column: 118
          }
        }],
        line: 305
      },
      "59": {
        loc: {
          start: {
            line: 307,
            column: 32
          },
          end: {
            line: 311,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 307,
            column: 32
          },
          end: {
            line: 311,
            column: 33
          }
        }, {
          start: {
            line: 309,
            column: 39
          },
          end: {
            line: 311,
            column: 33
          }
        }],
        line: 307
      },
      "60": {
        loc: {
          start: {
            line: 318,
            column: 58
          },
          end: {
            line: 318,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 318,
            column: 90
          },
          end: {
            line: 318,
            column: 114
          }
        }, {
          start: {
            line: 318,
            column: 117
          },
          end: {
            line: 318,
            column: 118
          }
        }],
        line: 318
      },
      "61": {
        loc: {
          start: {
            line: 329,
            column: 58
          },
          end: {
            line: 329,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 329,
            column: 90
          },
          end: {
            line: 329,
            column: 114
          }
        }, {
          start: {
            line: 329,
            column: 117
          },
          end: {
            line: 329,
            column: 118
          }
        }],
        line: 329
      },
      "62": {
        loc: {
          start: {
            line: 349,
            column: 24
          },
          end: {
            line: 356,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 349,
            column: 24
          },
          end: {
            line: 356,
            column: 25
          }
        }, {
          start: {
            line: 352,
            column: 31
          },
          end: {
            line: 356,
            column: 25
          }
        }],
        line: 349
      },
      "63": {
        loc: {
          start: {
            line: 352,
            column: 31
          },
          end: {
            line: 356,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 352,
            column: 31
          },
          end: {
            line: 356,
            column: 25
          }
        }, {
          start: {
            line: 354,
            column: 31
          },
          end: {
            line: 356,
            column: 25
          }
        }],
        line: 352
      },
      "64": {
        loc: {
          start: {
            line: 357,
            column: 24
          },
          end: {
            line: 410,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 357,
            column: 24
          },
          end: {
            line: 410,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 357
      },
      "65": {
        loc: {
          start: {
            line: 359,
            column: 28
          },
          end: {
            line: 409,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 359,
            column: 28
          },
          end: {
            line: 409,
            column: 29
          }
        }, {
          start: {
            line: 407,
            column: 35
          },
          end: {
            line: 409,
            column: 29
          }
        }],
        line: 359
      },
      "66": {
        loc: {
          start: {
            line: 367,
            column: 50
          },
          end: {
            line: 367,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 367,
            column: 50
          },
          end: {
            line: 367,
            column: 69
          }
        }, {
          start: {
            line: 367,
            column: 73
          },
          end: {
            line: 367,
            column: 74
          }
        }],
        line: 367
      },
      "67": {
        loc: {
          start: {
            line: 369,
            column: 57
          },
          end: {
            line: 369,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 369,
            column: 57
          },
          end: {
            line: 369,
            column: 70
          }
        }, {
          start: {
            line: 369,
            column: 74
          },
          end: {
            line: 369,
            column: 75
          }
        }],
        line: 369
      },
      "68": {
        loc: {
          start: {
            line: 370,
            column: 32
          },
          end: {
            line: 400,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 32
          },
          end: {
            line: 400,
            column: 33
          }
        }, {
          start: {
            line: 388,
            column: 39
          },
          end: {
            line: 400,
            column: 33
          }
        }],
        line: 370
      },
      "69": {
        loc: {
          start: {
            line: 372,
            column: 63
          },
          end: {
            line: 372,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 372,
            column: 63
          },
          end: {
            line: 372,
            column: 81
          }
        }, {
          start: {
            line: 372,
            column: 85
          },
          end: {
            line: 372,
            column: 86
          }
        }],
        line: 372
      },
      "70": {
        loc: {
          start: {
            line: 372,
            column: 91
          },
          end: {
            line: 372,
            column: 122
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 372,
            column: 91
          },
          end: {
            line: 372,
            column: 117
          }
        }, {
          start: {
            line: 372,
            column: 121
          },
          end: {
            line: 372,
            column: 122
          }
        }],
        line: 372
      },
      "71": {
        loc: {
          start: {
            line: 374,
            column: 36
          },
          end: {
            line: 378,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 374,
            column: 36
          },
          end: {
            line: 378,
            column: 37
          }
        }, {
          start: {
            line: 376,
            column: 43
          },
          end: {
            line: 378,
            column: 37
          }
        }],
        line: 374
      },
      "72": {
        loc: {
          start: {
            line: 385,
            column: 62
          },
          end: {
            line: 385,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 385,
            column: 94
          },
          end: {
            line: 385,
            column: 118
          }
        }, {
          start: {
            line: 385,
            column: 121
          },
          end: {
            line: 385,
            column: 122
          }
        }],
        line: 385
      },
      "73": {
        loc: {
          start: {
            line: 397,
            column: 62
          },
          end: {
            line: 397,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 397,
            column: 94
          },
          end: {
            line: 397,
            column: 118
          }
        }, {
          start: {
            line: 397,
            column: 121
          },
          end: {
            line: 397,
            column: 122
          }
        }],
        line: 397
      },
      "74": {
        loc: {
          start: {
            line: 426,
            column: 20
          },
          end: {
            line: 428,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 426,
            column: 20
          },
          end: {
            line: 428,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 426
      },
      "75": {
        loc: {
          start: {
            line: 430,
            column: 20
          },
          end: {
            line: 432,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 430,
            column: 20
          },
          end: {
            line: 432,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 430
      },
      "76": {
        loc: {
          start: {
            line: 430,
            column: 24
          },
          end: {
            line: 430,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 430,
            column: 24
          },
          end: {
            line: 430,
            column: 51
          }
        }, {
          start: {
            line: 430,
            column: 55
          },
          end: {
            line: 430,
            column: 84
          }
        }],
        line: 430
      },
      "77": {
        loc: {
          start: {
            line: 464,
            column: 8
          },
          end: {
            line: 466,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 464,
            column: 8
          },
          end: {
            line: 466,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 464
      },
      "78": {
        loc: {
          start: {
            line: 464,
            column: 12
          },
          end: {
            line: 464,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 464,
            column: 12
          },
          end: {
            line: 464,
            column: 18
          }
        }, {
          start: {
            line: 464,
            column: 22
          },
          end: {
            line: 464,
            column: 47
          }
        }],
        line: 464
      },
      "79": {
        loc: {
          start: {
            line: 500,
            column: 24
          },
          end: {
            line: 500,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 500,
            column: 49
          },
          end: {
            line: 500,
            column: 62
          }
        }, {
          start: {
            line: 500,
            column: 65
          },
          end: {
            line: 500,
            column: 78
          }
        }],
        line: 500
      },
      "80": {
        loc: {
          start: {
            line: 515,
            column: 8
          },
          end: {
            line: 523,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 515,
            column: 8
          },
          end: {
            line: 523,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 515
      },
      "81": {
        loc: {
          start: {
            line: 536,
            column: 8
          },
          end: {
            line: 544,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 536,
            column: 8
          },
          end: {
            line: 544,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 536
      },
      "82": {
        loc: {
          start: {
            line: 547,
            column: 12
          },
          end: {
            line: 667,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 547,
            column: 12
          },
          end: {
            line: 667,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 547
      },
      "83": {
        loc: {
          start: {
            line: 547,
            column: 16
          },
          end: {
            line: 547,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 547,
            column: 16
          },
          end: {
            line: 547,
            column: 38
          }
        }, {
          start: {
            line: 547,
            column: 42
          },
          end: {
            line: 547,
            column: 75
          }
        }],
        line: 547
      },
      "84": {
        loc: {
          start: {
            line: 549,
            column: 20
          },
          end: {
            line: 552,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 549,
            column: 20
          },
          end: {
            line: 552,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 549
      },
      "85": {
        loc: {
          start: {
            line: 558,
            column: 20
          },
          end: {
            line: 563,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 558,
            column: 20
          },
          end: {
            line: 563,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 558
      },
      "86": {
        loc: {
          start: {
            line: 558,
            column: 24
          },
          end: {
            line: 558,
            column: 159
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 558,
            column: 24
          },
          end: {
            line: 558,
            column: 46
          }
        }, {
          start: {
            line: 558,
            column: 50
          },
          end: {
            line: 558,
            column: 87
          }
        }, {
          start: {
            line: 558,
            column: 91
          },
          end: {
            line: 558,
            column: 159
          }
        }],
        line: 558
      },
      "87": {
        loc: {
          start: {
            line: 560,
            column: 24
          },
          end: {
            line: 562,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 560,
            column: 24
          },
          end: {
            line: 562,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 560
      },
      "88": {
        loc: {
          start: {
            line: 560,
            column: 28
          },
          end: {
            line: 560,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 560,
            column: 28
          },
          end: {
            line: 560,
            column: 36
          }
        }, {
          start: {
            line: 560,
            column: 40
          },
          end: {
            line: 560,
            column: 68
          }
        }, {
          start: {
            line: 560,
            column: 72
          },
          end: {
            line: 560,
            column: 104
          }
        }],
        line: 560
      },
      "89": {
        loc: {
          start: {
            line: 564,
            column: 20
          },
          end: {
            line: 637,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 564,
            column: 20
          },
          end: {
            line: 637,
            column: 21
          }
        }, {
          start: {
            line: 601,
            column: 27
          },
          end: {
            line: 637,
            column: 21
          }
        }],
        line: 564
      },
      "90": {
        loc: {
          start: {
            line: 570,
            column: 28
          },
          end: {
            line: 570,
            column: 93
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 570,
            column: 28
          },
          end: {
            line: 570,
            column: 93
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 570
      },
      "91": {
        loc: {
          start: {
            line: 570,
            column: 32
          },
          end: {
            line: 570,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 570,
            column: 32
          },
          end: {
            line: 570,
            column: 56
          }
        }, {
          start: {
            line: 570,
            column: 60
          },
          end: {
            line: 570,
            column: 82
          }
        }],
        line: 570
      },
      "92": {
        loc: {
          start: {
            line: 577,
            column: 28
          },
          end: {
            line: 599,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 577,
            column: 28
          },
          end: {
            line: 599,
            column: 29
          }
        }, {
          start: {
            line: 597,
            column: 35
          },
          end: {
            line: 599,
            column: 29
          }
        }],
        line: 577
      },
      "93": {
        loc: {
          start: {
            line: 582,
            column: 54
          },
          end: {
            line: 582,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 582,
            column: 78
          },
          end: {
            line: 582,
            column: 79
          }
        }, {
          start: {
            line: 582,
            column: 82
          },
          end: {
            line: 582,
            column: 112
          }
        }],
        line: 582
      },
      "94": {
        loc: {
          start: {
            line: 609,
            column: 24
          },
          end: {
            line: 636,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 609,
            column: 24
          },
          end: {
            line: 636,
            column: 25
          }
        }, {
          start: {
            line: 632,
            column: 31
          },
          end: {
            line: 636,
            column: 25
          }
        }],
        line: 609
      },
      "95": {
        loc: {
          start: {
            line: 617,
            column: 50
          },
          end: {
            line: 617,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 617,
            column: 74
          },
          end: {
            line: 617,
            column: 75
          }
        }, {
          start: {
            line: 617,
            column: 78
          },
          end: {
            line: 617,
            column: 114
          }
        }],
        line: 617
      },
      "96": {
        loc: {
          start: {
            line: 632,
            column: 31
          },
          end: {
            line: 636,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 632,
            column: 31
          },
          end: {
            line: 636,
            column: 25
          }
        }, {
          start: {
            line: 634,
            column: 31
          },
          end: {
            line: 636,
            column: 25
          }
        }],
        line: 632
      },
      "97": {
        loc: {
          start: {
            line: 654,
            column: 20
          },
          end: {
            line: 656,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 654,
            column: 20
          },
          end: {
            line: 656,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 654
      },
      "98": {
        loc: {
          start: {
            line: 662,
            column: 49
          },
          end: {
            line: 662,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 662,
            column: 73
          },
          end: {
            line: 662,
            column: 89
          }
        }, {
          start: {
            line: 662,
            column: 92
          },
          end: {
            line: 662,
            column: 93
          }
        }],
        line: 662
      },
      "99": {
        loc: {
          start: {
            line: 684,
            column: 8
          },
          end: {
            line: 686,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 684,
            column: 8
          },
          end: {
            line: 686,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 684
      },
      "100": {
        loc: {
          start: {
            line: 684,
            column: 12
          },
          end: {
            line: 684,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 684,
            column: 12
          },
          end: {
            line: 684,
            column: 18
          }
        }, {
          start: {
            line: 684,
            column: 22
          },
          end: {
            line: 684,
            column: 45
          }
        }],
        line: 684
      },
      "101": {
        loc: {
          start: {
            line: 719,
            column: 24
          },
          end: {
            line: 719,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 719,
            column: 49
          },
          end: {
            line: 719,
            column: 62
          }
        }, {
          start: {
            line: 719,
            column: 65
          },
          end: {
            line: 719,
            column: 92
          }
        }],
        line: 719
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0, 0],
      "23": [0, 0],
      "24": [0, 0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0, 0],
      "48": [0, 0],
      "49": [0, 0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0, 0],
      "87": [0, 0],
      "88": [0, 0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0],
      "96": [0, 0],
      "97": [0, 0],
      "98": [0, 0],
      "99": [0, 0],
      "100": [0, 0],
      "101": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/purchases/[id]/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { revalidateTag, revalidatePath } from 'next/cache';\nimport prisma from '@/lib/prisma';\nimport { PrismaClientKnownRequestError } from '@prisma/client/runtime/library';\nimport { getToken } from 'next-auth/jwt';\nimport { cacheService } from '@/lib/cache';\n\n// GET /api/purchases/[id] - Get a specific purchase invoice\nexport async function GET(\n    request: NextRequest,\n    { params }: { params: { id: string } }\n) {\n    const id = params.id; // Store params.id early to avoid async issues\n    try {\n        const purchaseId = parseInt(id);\n\n        if (isNaN(purchaseId)) {\n            return NextResponse.json(\n                { error: { message: 'Invalid purchase ID format' } },\n                { status: 400 }\n            );\n        }\n\n        const purchase = await prisma.purchaseInvoice.findUnique({\n            where: {\n                id: purchaseId\n            },\n            include: {\n                supplier: true,\n                items: {\n                    include: {\n                        product: true\n                    }\n                }\n            }\n        });\n\n        if (!purchase) {\n            return NextResponse.json(\n                { error: { message: 'Purchase invoice not found' } },\n                { status: 404 }\n            );\n        }\n\n        return NextResponse.json(purchase);\n    } catch (error) {\n        console.error(`Error fetching purchase invoice ${id}:`, error);\n        const details = error instanceof Error ? error.message : 'An unknown error occurred';\n        return NextResponse.json(\n            { error: { message: 'Failed to fetch purchase invoice', details: details } },\n            { status: 500 }\n        );\n    }\n}\n\n// PUT /api/purchases/[id] - Update a purchase invoice\nexport async function PUT(\n    request: NextRequest,\n    { params }: { params: { id: string } }\n) {\n    const id = params.id;\n    try {\n        const purchaseId = parseInt(id);\n        if (isNaN(purchaseId)) {\n            return NextResponse.json(\n                { error: { message: 'Invalid purchase ID format' } },\n                { status: 400 });\n        }\n        const body = await request.json();\n        const originalPurchase = await prisma.purchaseInvoice.findUnique({\n            where: { id: purchaseId },\n            include: { items: { include: { product: true } } },\n        });\n        if (!originalPurchase) {\n            return NextResponse.json(\n                { error: { message: 'Purchase invoice not found to update' } },\n                { status: 404 });\n        }\n        const { items: newItemsData, distributions: newDistributionsData, ...invoiceData } = body;\n        const { id: _, createdAt, updatedAt, supplier, notes, ...dirtyData } = invoiceData;\n        const cleanedInvoiceData: any = {};\n        if (dirtyData.invoiceNumber) cleanedInvoiceData.invoiceNumber = dirtyData.invoiceNumber;\n        if (dirtyData.status) cleanedInvoiceData.status = dirtyData.status;\n        if (dirtyData.date) cleanedInvoiceData.date = new Date(dirtyData.date);\n        if (dirtyData.dueDate !== undefined) cleanedInvoiceData.dueDate = dirtyData.dueDate ? new Date(dirtyData.dueDate) : null;\n        if (dirtyData.totalAmount !== undefined) cleanedInvoiceData.total = Number(dirtyData.totalAmount);\n        else if (dirtyData.total !== undefined) cleanedInvoiceData.total = Number(dirtyData.total);\n        cleanedInvoiceData.distributions = newDistributionsData !== undefined ? newDistributionsData : originalPurchase.distributions;\n        if (dirtyData.supplierId) cleanedInvoiceData.supplier = { connect: { id: Number(dirtyData.supplierId) } };\n        else if (dirtyData.supplierId === null && originalPurchase.supplierId) cleanedInvoiceData.supplier = { disconnect: true };\n\n        const result = await prisma.$transaction(async (tx) => {\n            const inventoryUpdates: Array<{ productId: number, shopId: number, newQuantity: number, oldQuantity?: number }> = [];\n\n            if (originalPurchase.items && originalPurchase.items.length > 0) {\n                for (const oldItem of originalPurchase.items) {\n                    const productToUpdate = await tx.product.findUnique({ where: { id: oldItem.productId } });\n                    if (!productToUpdate) continue;\n\n                    const oldItemDistribution = originalPurchase.distributions && Array.isArray(originalPurchase.distributions) && originalPurchase.items.indexOf(oldItem) < originalPurchase.distributions.length\n                        ? originalPurchase.distributions[originalPurchase.items.indexOf(oldItem)]\n                        : (originalPurchase.distributions && typeof originalPurchase.distributions === 'object' && !Array.isArray(originalPurchase.distributions) ? originalPurchase.distributions : null);\n\n                    if (oldItemDistribution && Object.keys(oldItemDistribution).length > 0) {\n                        for (const [shopIdStr, quantityInShop] of Object.entries(oldItemDistribution as any)) {\n                            const shopId = shopIdStr;\n                            const qtyToRemove = Number(quantityInShop);\n                            if (qtyToRemove <= 0 || isNaN(qtyToRemove)) continue;\n                            const inventory = await tx.inventoryItem.findFirst({ where: { productId: oldItem.productId, shopId: shopId } });\n                            if (inventory) {\n                                const oldShopQuantity = inventory.quantity;\n                                const newQuantity = Math.max(0, inventory.quantity - qtyToRemove);\n                                await tx.inventoryItem.update({\n                                    where: { id: inventory.id },\n                                    data: {\n                                        quantity: newQuantity,\n                                        // If new quantity is 0, reset shopSpecificCost, else keep existing\n                                        shopSpecificCost: newQuantity === 0 ? 0 : inventory.shopSpecificCost\n                                    }\n                                });\n                                inventoryUpdates.push({ productId: oldItem.productId, shopId: Number(shopId), newQuantity, oldQuantity: oldShopQuantity });\n                            }\n                        }\n                    } else {\n                        // oldItemDistribution is missing. Attempt to infer shop for stock reversal.\n                        console.warn(`Old item ${oldItem.productId} in purchase ${purchaseId} has no distribution. Attempting to infer shop for stock reversal.`);\n                        const existingInventoriesForOldItem = await tx.inventoryItem.findMany({\n                            where: { productId: oldItem.productId }\n                        });\n                        if (existingInventoriesForOldItem.length === 1) {\n                            const shopIdToReverseFrom = existingInventoriesForOldItem[0].shopId;\n                            const inventory = existingInventoriesForOldItem[0]; // Already fetched\n                            const oldShopQuantity = inventory.quantity;\n                            const newQuantity = Math.max(0, inventory.quantity - oldItem.quantity); // Use total oldItem.quantity\n                            await tx.inventoryItem.update({\n                                where: { id: inventory.id },\n                                data: {\n                                    quantity: newQuantity,\n                                    // If new quantity is 0, reset shopSpecificCost, else keep existing\n                                    shopSpecificCost: newQuantity === 0 ? 0 : inventory.shopSpecificCost\n                                }\n                            });\n                            inventoryUpdates.push({ productId: oldItem.productId, shopId: Number(shopIdToReverseFrom), newQuantity, oldQuantity: oldShopQuantity });\n                            console.log(`Reversed ${oldItem.quantity} from product ${oldItem.productId} in inferred shop ${shopIdToReverseFrom}.`);\n                        } else if (existingInventoriesForOldItem.length === 0) {\n                            console.error(`Old item ${oldItem.productId} not found in any inventory. Cannot reverse stock for this item line from a specific shop.`);\n                        } else { // Multiple shops\n                            console.error(`Old item ${oldItem.productId} exists in multiple shops and no specific distribution for reversal. Ambiguous. Stock not reversed from a specific shop for this item line.`);\n                        }\n                    }\n\n                    let currentTotalProductQuantity = 0;\n                    const allInventoryForProductAfterReversal = await tx.inventoryItem.findMany({ where: { productId: oldItem.productId } });\n                    currentTotalProductQuantity = allInventoryForProductAfterReversal.reduce((sum, inv) => sum + inv.quantity, 0);\n\n                    // Recalculate WAC based on remaining purchase history after removing this item\n                    const remainingPurchaseItems = await tx.purchaseInvoiceItem.findMany({\n                        where: {\n                            productId: oldItem.productId,\n                            purchaseInvoiceId: { not: purchaseId } // Exclude current invoice being updated\n                        }\n                    });\n\n                    let totalRemainingQuantity = 0;\n                    let totalRemainingValue = 0;\n\n                    remainingPurchaseItems.forEach(purchaseItem => {\n                        totalRemainingQuantity += purchaseItem.quantity;\n                        totalRemainingValue += purchaseItem.quantity * purchaseItem.price;\n                    });\n\n                    let newWAC = 0;\n                    if (totalRemainingQuantity > 0) {\n                        newWAC = totalRemainingValue / totalRemainingQuantity;\n                    }\n\n                    await tx.product.update({\n                        where: { id: oldItem.productId },\n                        data: { weightedAverageCost: newWAC >= 0 ? newWAC : 0 }\n                    });\n                }\n            }\n\n            await tx.purchaseInvoiceItem.deleteMany({ where: { purchaseInvoiceId: purchaseId } });\n\n            // Recalculate totalAmount for the invoice based on new/updated items\n            let newTotalInvoiceAmount = 0;\n            if (newItemsData && Array.isArray(newItemsData)) {\n                newItemsData.forEach(item => {\n                    newTotalInvoiceAmount += Number(item.quantity) * Number(item.price || 0);\n                });\n            }\n            cleanedInvoiceData.total = newTotalInvoiceAmount; // Ensure this is assigned to the correct field for DB update\n\n            const updatedInvoice = await tx.purchaseInvoice.update({ where: { id: purchaseId }, data: cleanedInvoiceData });\n\n            if (newItemsData && Array.isArray(newItemsData)) {\n                for (let i = 0; i < newItemsData.length; i++) {\n                    const newItem = newItemsData[i];\n                    if (!newItem.productId || !newItem.quantity || newItem.quantity <= 0) continue;\n                    await tx.purchaseInvoiceItem.create({\n                        data: {\n                            purchaseInvoiceId: purchaseId, productId: Number(newItem.productId),\n                            quantity: Number(newItem.quantity), price: Number(newItem.price || 0),\n                            total: Number(newItem.quantity) * Number(newItem.price || 0)\n                        }\n                    });\n                    const productToUpdate = await tx.product.findUnique({ where: { id: Number(newItem.productId) } });\n                    if (!productToUpdate) continue;\n\n                    const newItemDistribution = newDistributionsData && Array.isArray(newDistributionsData) && newDistributionsData[i]\n                        ? newDistributionsData[i]\n                        : (newDistributionsData && typeof newDistributionsData === 'object' && !Array.isArray(newDistributionsData) ? newDistributionsData : null);\n\n                    const itemQuantityTotal = Number(newItem.quantity);\n\n                    if (newItemDistribution && Object.keys(newItemDistribution).length > 0) {\n                        for (const [shopIdStr, quantityInShop] of Object.entries(newItemDistribution as any)) {\n                            const shopId = shopIdStr;\n                            const qtyToAdd = Number(quantityInShop);\n                            if (qtyToAdd <= 0 || isNaN(qtyToAdd)) continue;\n\n                            const inventory = await tx.inventoryItem.findFirst({ where: { productId: Number(newItem.productId), shopId: shopId } });\n                            let finalQuantity = 0;\n                            const oldInvQty = inventory?.quantity || 0;\n                            let newShopSpecificCostValue = 0;\n                            const itemPrice = Number(newItem.price || 0);\n\n                            if (inventory) {\n                                finalQuantity = inventory.quantity + qtyToAdd;\n                                const oldShopTotalValue = (inventory.quantity || 0) * (inventory.shopSpecificCost || 0);\n                                const valueOfThisBatch = qtyToAdd * itemPrice;\n                                if (finalQuantity > 0) {\n                                    newShopSpecificCostValue = (oldShopTotalValue + valueOfThisBatch) / finalQuantity;\n                                } else {\n                                    newShopSpecificCostValue = 0;\n                                }\n                                await tx.inventoryItem.update({\n                                    where: { id: inventory.id },\n                                    data: { quantity: finalQuantity, shopSpecificCost: newShopSpecificCostValue >= 0 ? newShopSpecificCostValue : 0 }\n                                });\n                            } else {\n                                finalQuantity = qtyToAdd;\n                                newShopSpecificCostValue = itemPrice;\n                                await tx.inventoryItem.create({\n                                    data: {\n                                        productId: Number(newItem.productId),\n                                        shopId: shopId,\n                                        quantity: finalQuantity,\n                                        shopSpecificCost: newShopSpecificCostValue >= 0 ? newShopSpecificCostValue : 0\n                                    }\n                                });\n                            }\n                            inventoryUpdates.push({ productId: Number(newItem.productId), shopId: Number(shopId), newQuantity: finalQuantity, oldQuantity: oldInvQty });\n                        }\n                    } else {\n                        // newItemDistribution is missing or empty. Try to infer shop or log error.\n                        console.warn(`Purchase item with productId ${newItem.productId} in invoice ${purchaseId} does not have explicit shop distribution data. Attempting to infer target shop.`);\n                        const existingInventoryItems = await tx.inventoryItem.findMany({\n                            where: { productId: Number(newItem.productId) }\n                        });\n\n                        let targetShopId: string | null = null;\n\n                        if (existingInventoryItems.length === 1) {\n                            targetShopId = existingInventoryItems[0].shopId;\n                            console.log(`Product ${newItem.productId} exists in one shop (${targetShopId}). Attributing new stock there.`);\n                        } else if (existingInventoryItems.length === 0) {\n                            console.error(`Product ${newItem.productId} is new to inventory and no shop distribution provided. Cannot automatically assign to a shop. Inventory not updated for this item.`);\n                        } else { // existingInventoryItems.length > 1\n                            console.error(`Product ${newItem.productId} exists in multiple shops and no specific distribution provided. Ambiguous. Inventory not updated for this item.`);\n                        }\n\n                        if (targetShopId) {\n                            const qtyToAdd = itemQuantityTotal; // The total quantity for this newItem.\n                            if (qtyToAdd > 0) {\n                                const inventory = await tx.inventoryItem.findFirst({ where: { productId: Number(newItem.productId), shopId: targetShopId } });\n                                let finalQuantity = 0;\n                                const oldInvQty = inventory?.quantity || 0;\n                                let newShopSpecificCostValue = 0;\n                                const itemPrice = Number(newItem.price || 0);\n\n                                if (inventory) {\n                                    finalQuantity = inventory.quantity + qtyToAdd;\n                                    const oldShopTotalValue = (inventory.quantity || 0) * (inventory.shopSpecificCost || 0);\n                                    const valueOfThisBatch = qtyToAdd * itemPrice;\n                                    if (finalQuantity > 0) {\n                                        newShopSpecificCostValue = (oldShopTotalValue + valueOfThisBatch) / finalQuantity;\n                                    } else {\n                                        newShopSpecificCostValue = 0;\n                                    }\n                                    await tx.inventoryItem.update({\n                                        where: { id: inventory.id },\n                                        data: { quantity: finalQuantity, shopSpecificCost: newShopSpecificCostValue >= 0 ? newShopSpecificCostValue : 0 }\n                                    });\n                                } else {\n                                    finalQuantity = qtyToAdd;\n                                    newShopSpecificCostValue = itemPrice;\n                                    console.warn(`InventoryItem for product ${newItem.productId} in targetShopId ${targetShopId} not found during update, attempting create.`);\n                                    await tx.inventoryItem.create({\n                                        data: {\n                                            productId: Number(newItem.productId),\n                                            shopId: targetShopId,\n                                            quantity: finalQuantity,\n                                            shopSpecificCost: newShopSpecificCostValue >= 0 ? newShopSpecificCostValue : 0\n                                        }\n                                    });\n                                }\n                                inventoryUpdates.push({ productId: Number(newItem.productId), shopId: Number(targetShopId), newQuantity: finalQuantity, oldQuantity: oldInvQty });\n                            } else {\n                                console.warn(`Quantity for product ${newItem.productId} is zero or negative. No inventory update performed for this item.`);\n                            }\n                        }\n                    }\n\n                    // Recalculate WAC based on all purchase history for this product\n                    // This ensures accuracy regardless of update order\n                    const allPurchaseItems = await tx.purchaseInvoiceItem.findMany({\n                        where: { productId: Number(newItem.productId) }\n                    });\n\n                    let totalPurchaseQuantity = 0;\n                    let totalPurchaseValue = 0;\n\n                    allPurchaseItems.forEach(purchaseItem => {\n                        totalPurchaseQuantity += purchaseItem.quantity;\n                        totalPurchaseValue += purchaseItem.quantity * purchaseItem.price;\n                    });\n\n                    let newWeightedAverageCost = 0;\n                    if (totalPurchaseQuantity > 0) {\n                        newWeightedAverageCost = totalPurchaseValue / totalPurchaseQuantity;\n                    }\n\n                    // Ensure WAC is valid\n                    if (newWeightedAverageCost <= 0 || isNaN(newWeightedAverageCost)) {\n                        newWeightedAverageCost = Number(newItem.price);\n                    }\n\n                    await tx.product.update({\n                        where: { id: Number(newItem.productId) },\n                        data: { weightedAverageCost: newWeightedAverageCost }\n                    });\n                }\n            }\n            const fullUpdatedInvoice = await tx.purchaseInvoice.findUnique({\n                where: { id: purchaseId },\n                include: { supplier: true, items: { include: { product: true } } }\n            });\n            return { fullUpdatedInvoice, inventoryUpdates };\n        }, { timeout: 30000 });\n\n        // Real-time updates now handled by polling system\n        if (result && result.fullUpdatedInvoice) {\n            console.log('Purchase invoice updated successfully');\n        }\n\n        // After successful transaction, invalidate relevant caches\n        try {\n            await cacheService.invalidateInventory(); // Handles 'inventory:summary:*' and 'products:*'\n            await cacheService.del('dashboard:inventory');\n            await cacheService.del('dashboard:inventory-value');\n            await cacheService.del('dashboard:shops');\n            await cacheService.del('dashboard:all');\n            await cacheService.del('dashboard:summary');\n            // Invalidate purchases-specific caches\n            await cacheService.invalidatePattern('purchases-optimized*');\n            await cacheService.invalidatePattern('purchase-stats*');\n            console.log('Relevant caches invalidated after purchase update.');\n        } catch (cacheError) {\n            console.error('Error invalidating caches after purchase update:', cacheError);\n            // Do not let cache invalidation error fail the main operation\n        }\n\n        // Revalidate Next.js cached pages\n        try {\n            revalidateTag('purchase-invoices');\n            revalidateTag(`purchase-${purchaseId}`);\n            revalidatePath(`/purchases/${purchaseId}`);\n            revalidatePath(`/purchases/${purchaseId}/edit`);\n            revalidatePath('/purchases');\n            console.log('Next.js pages revalidated after purchase update.');\n        } catch (revalidateError) {\n            console.error('Error revalidating Next.js pages after purchase update:', revalidateError);\n        }\n\n        return NextResponse.json({\n            message: 'Purchase invoice updated successfully',\n            data: result.fullUpdatedInvoice\n        });\n    } catch (error) {\n        console.error(`Error updating purchase invoice ${id}:`, error);\n        const details = error instanceof Error ? error.message : String(error);\n        return NextResponse.json(\n            { error: { message: 'Failed to update purchase invoice', details: details } },\n            { status: 500 });\n    }\n}\n\n// DELETE /api/purchases/[id] - Delete a purchase invoice\nexport async function DELETE(\n    request: NextRequest,\n    { params }: { params: { id: string } }\n) {\n    const purchaseIdStr = params.id;\n    try {\n        const purchaseId = parseInt(purchaseIdStr);\n        if (isNaN(purchaseId)) {\n            return NextResponse.json(\n                { error: { message: 'Invalid purchase ID format' } },\n                { status: 400 });\n        }\n\n        const purchaseToDelete = await prisma.purchaseInvoice.findUnique({\n            where: { id: purchaseId },\n            include: {\n                items: { include: { product: true } },\n                // Ensure 'distributions' is included if it's a relation,\n                // or directly accessible if it's a JSON field on PurchaseInvoice\n            },\n        });\n\n        if (!purchaseToDelete) {\n            return NextResponse.json(\n                { error: { message: 'Purchase invoice not found to delete' } },\n                { status: 404 });\n        }\n\n        const result = await prisma.$transaction(async (tx) => {\n            const inventoryUpdates: Array<{ productId: number, shopId: number, newQuantity: number, oldQuantity?: number }> = [];\n\n            if (purchaseToDelete.items && purchaseToDelete.items.length > 0) {\n                for (const item of purchaseToDelete.items) {\n                    if (!item.product) {\n                        console.warn(`Item ${item.id} for purchase ${purchaseId} is missing product data. Skipping stock adjustment.`);\n                        continue;\n                    }\n\n                    const productId = item.productId;\n                    const quantityToRemoveForItemTotal = item.quantity; // Total quantity for this item line\n\n                    let itemDistributionInfo: { [shopId: string]: number } | null = null;\n                    const distributionsOnInvoice = (purchaseToDelete as any).distributions;\n\n                    // Attempt to get specific distribution for this item\n                    if (\n                        distributionsOnInvoice &&\n                        Array.isArray(distributionsOnInvoice) &&\n                        purchaseToDelete.items.indexOf(item) < distributionsOnInvoice.length\n                    ) {\n                        const distData = distributionsOnInvoice[purchaseToDelete.items.indexOf(item)];\n                        if (distData && typeof distData === 'object' && Object.keys(distData).length > 0) {\n                            itemDistributionInfo = distData as { [shopId: string]: number };\n                        }\n                    }\n\n                    if (itemDistributionInfo) {\n                        // Case 1: Explicit distribution data found for the item\n                        console.log(`Reversing item-specific distribution for product ${productId}, purchase ${purchaseId}`);\n                        for (const [shopIdStr, distributedQuantityStr] of Object.entries(itemDistributionInfo)) {\n                            const shopId = shopIdStr;\n                            const qtyInShopToRemove = Number(distributedQuantityStr);\n\n                            if (isNaN(qtyInShopToRemove) || qtyInShopToRemove <= 0) continue;\n\n                            const inventoryItem = await tx.inventoryItem.findFirst({ where: { productId, shopId: shopId } });\n                            if (inventoryItem) {\n                                const oldShopQuantity = inventoryItem.quantity;\n                                const newShopQuantity = Math.max(0, inventoryItem.quantity - qtyInShopToRemove);\n                                const updateData = {\n                                    quantity: newShopQuantity,\n                                    shopSpecificCost: newShopQuantity === 0 ? 0 : inventoryItem.shopSpecificCost\n                                };\n                                await tx.inventoryItem.update({\n                                    where: { id: inventoryItem.id },\n                                    data: updateData,\n                                });\n                                inventoryUpdates.push({ productId, shopId: Number(shopId), newQuantity: newShopQuantity, oldQuantity: oldShopQuantity });\n                                console.log(`  - Reduced inventory for product ${productId} in shop ${shopId} by ${qtyInShopToRemove}. Old: ${oldShopQuantity}, New: ${newShopQuantity}`);\n                            } else {\n                                console.warn(`  - Inventory item not found for product ${productId} in shop ${shopId} during purchase deletion with explicit distribution. Stock may be inaccurate.`);\n                            }\n                        }\n                    } else {\n                        // Case 2: No explicit distribution for this item. Attempt to infer.\n                        console.warn(`No specific distribution found for item ${productId} in deleted purchase ${purchaseId}. Attempting to infer shop(s) for stock reversal of total quantity ${quantityToRemoveForItemTotal}.`);\n                        const existingInventoriesForItem = await tx.inventoryItem.findMany({\n                            where: { productId: productId }\n                        });\n\n                        if (existingInventoriesForItem.length === 1) {\n                            const singleShopInventory = existingInventoriesForItem[0];\n                            const shopIdToDeductFrom = singleShopInventory.shopId;\n\n                            console.log(`Product ${productId} found in single shop ${shopIdToDeductFrom}. Deducting total item quantity ${quantityToRemoveForItemTotal}.`);\n                            const oldShopQuantity = singleShopInventory.quantity;\n                            const newShopQuantity = Math.max(0, singleShopInventory.quantity - quantityToRemoveForItemTotal);\n                            const updateDataInferred = {\n                                quantity: newShopQuantity,\n                                shopSpecificCost: newShopQuantity === 0 ? 0 : singleShopInventory.shopSpecificCost\n                            };\n                            await tx.inventoryItem.update({\n                                where: { id: singleShopInventory.id },\n                                data: updateDataInferred,\n                            });\n                            inventoryUpdates.push({ productId, shopId: Number(shopIdToDeductFrom), newQuantity: newShopQuantity, oldQuantity: oldShopQuantity });\n                            console.log(`  - Reduced inventory for product ${productId} in inferred shop ${shopIdToDeductFrom} by ${quantityToRemoveForItemTotal}. Old: ${oldShopQuantity}, New: ${newShopQuantity}`);\n                        } else if (existingInventoriesForItem.length === 0) {\n                            console.error(`Product ${productId} (from deleted purchase ${purchaseId}) not found in any inventory. Cannot reverse stock for this item.`);\n                        } else { // Product exists in multiple shops\n                            console.error(`Product ${productId} (from deleted purchase ${purchaseId}) exists in multiple shops, but no specific distribution data was found on the invoice for reversal. Ambiguous. Stock not automatically reversed for this item. Manual adjustment may be needed.`);\n                        }\n                    }\n\n                    // ---- BEGIN WAC Recalculation for the deleted item ----\n                    const remainingPurchaseItems = await tx.purchaseInvoiceItem.findMany({\n                        where: {\n                            productId: productId,\n                            purchaseInvoiceId: { not: purchaseId }\n                        }\n                    });\n\n                    let totalRemainingQuantity = 0;\n                    let totalRemainingValue = 0;\n                    remainingPurchaseItems.forEach(pItem => {\n                        totalRemainingQuantity += pItem.quantity;\n                        totalRemainingValue += pItem.quantity * pItem.price;\n                    });\n\n                    let newCalculatedWAC = 0;\n                    if (totalRemainingQuantity > 0) {\n                        newCalculatedWAC = totalRemainingValue / totalRemainingQuantity;\n                    }\n                    await tx.product.update({\n                        where: { id: productId },\n                        data: { weightedAverageCost: newCalculatedWAC >= 0 ? newCalculatedWAC : 0 }\n                    });\n                    // ---- END WAC Recalculation ----\n                }\n            }\n\n            await tx.purchaseInvoiceItem.deleteMany({ where: { purchaseInvoiceId: purchaseId } });\n            await tx.purchaseInvoice.delete({ where: { id: purchaseId } });\n\n            return { deletedInvoiceId: purchaseId, inventoryUpdates };\n        });\n\n        // Real-time updates now handled by polling system\n        if (result && result.deletedInvoiceId) {\n            console.log(`Purchase invoice ${result.deletedInvoiceId} deleted successfully`);\n        }\n\n        // After successful transaction, invalidate relevant caches\n        try {\n            await cacheService.invalidateInventory(); // Handles 'inventory:summary:*' and 'products:*'\n            await cacheService.del('dashboard:inventory');\n            await cacheService.del('dashboard:inventory-value');\n            await cacheService.del('dashboard:shops');\n            await cacheService.del('dashboard:all');\n            await cacheService.del('dashboard:summary');\n            // Invalidate purchases-specific caches\n            await cacheService.invalidatePattern('purchases-optimized*');\n            await cacheService.invalidatePattern('purchase-stats*');\n            console.log('Relevant caches invalidated after purchase deletion.');\n        } catch (cacheError) {\n            console.error('Error invalidating caches after purchase deletion:', cacheError);\n            // Do not let cache invalidation error fail the main operation\n        }\n\n        // Revalidate Next.js cached pages\n        try {\n            revalidateTag('purchase-invoices');\n            revalidateTag(`purchase-${purchaseId}`);\n            revalidatePath(`/purchases/${purchaseId}`);\n            revalidatePath(`/purchases/${purchaseId}/edit`);\n            revalidatePath('/purchases');\n            console.log('Next.js pages revalidated after purchase deletion.');\n        } catch (revalidateError) {\n            console.error('Error revalidating Next.js pages after purchase deletion:', revalidateError);\n        }\n\n        return NextResponse.json({ message: 'Purchase invoice deleted successfully' });\n\n    } catch (error) {\n        console.error(`Error deleting purchase invoice ${purchaseIdStr}:`, error);\n        const details = error instanceof Error ? error.message : 'An unknown error occurred';\n        return NextResponse.json(\n            { error: { message: 'Failed to delete purchase invoice', details: details } },\n            { status: 500 });\n    }\n}"],
      names: ["DELETE", "GET", "PUT", "request", "params", "id", "purchaseId", "parseInt", "isNaN", "NextResponse", "json", "error", "message", "status", "purchase", "prisma", "purchaseInvoice", "findUnique", "where", "include", "supplier", "items", "product", "console", "details", "Error", "body", "originalPurchase", "newItemsData", "distributions", "newDistributionsData", "invoiceData", "_", "createdAt", "updatedAt", "notes", "dirtyData", "cleanedInvoiceData", "invoiceNumber", "date", "Date", "dueDate", "undefined", "totalAmount", "total", "Number", "supplierId", "connect", "disconnect", "result", "$transaction", "tx", "inventoryUpdates", "length", "oldItem", "productToUpdate", "productId", "oldItemDistribution", "Array", "isArray", "indexOf", "Object", "keys", "shopIdStr", "quantityInShop", "entries", "shopId", "qtyToRemove", "inventory", "inventoryItem", "findFirst", "oldShopQuantity", "quantity", "newQuantity", "Math", "max", "update", "data", "shopSpecificCost", "push", "oldQuantity", "warn", "existingInventoriesForOldItem", "findMany", "shopIdToReverseFrom", "log", "currentTotalProductQuantity", "allInventoryForProductAfterReversal", "reduce", "sum", "inv", "remainingPurchaseItems", "purchaseInvoiceItem", "purchaseInvoiceId", "not", "totalRemainingQuantity", "totalRemainingValue", "forEach", "purchaseItem", "price", "newWAC", "weightedAverageCost", "deleteMany", "newTotalInvoiceAmount", "item", "updatedInvoice", "i", "newItem", "create", "newItemDistribution", "itemQuantityTotal", "qtyToAdd", "finalQuantity", "oldInvQty", "newShopSpecificCostValue", "itemPrice", "oldShopTotalValue", "valueOfThisBatch", "existingInventoryItems", "targetShopId", "allPurchaseItems", "totalPurchaseQuantity", "totalPurchaseValue", "newWeightedAverageCost", "fullUpdatedInvoice", "timeout", "cacheService", "invalidateInventory", "del", "invalidatePattern", "cacheError", "revalidateTag", "revalidatePath", "revalidateError", "String", "purchaseIdStr", "purchaseToDelete", "quantityToRemoveForItemTotal", "itemDistributionInfo", "distributionsOnInvoice", "distData", "distributedQuantityStr", "qtyInShopToRemove", "newShopQuantity", "updateData", "existingInventoriesForItem", "singleShopInventory", "shopIdToDeductFrom", "updateDataInferred", "pItem", "newCalculatedWAC", "delete", "deletedInvoiceId"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "75f1caf5e69295673659ef32ed8e535b0071f4cd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_39x6d23tp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_39x6d23tp();
cov_39x6d23tp().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_39x6d23tp().f[0]++;
  cov_39x6d23tp().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_39x6d23tp().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_39x6d23tp().s[3]++;
_export(exports, {
  DELETE: function () {
    /* istanbul ignore next */
    cov_39x6d23tp().f[1]++;
    cov_39x6d23tp().s[4]++;
    return DELETE;
  },
  GET: function () {
    /* istanbul ignore next */
    cov_39x6d23tp().f[2]++;
    cov_39x6d23tp().s[5]++;
    return GET;
  },
  PUT: function () {
    /* istanbul ignore next */
    cov_39x6d23tp().f[3]++;
    cov_39x6d23tp().s[6]++;
    return PUT;
  }
});
const _server =
/* istanbul ignore next */
(cov_39x6d23tp().s[7]++, require("next/server"));
const _cache =
/* istanbul ignore next */
(cov_39x6d23tp().s[8]++, require("next/cache"));
const _prisma =
/* istanbul ignore next */
(/*#__PURE__*/cov_39x6d23tp().s[9]++, _interop_require_default(require("../../../../lib/prisma")));
const _cache1 =
/* istanbul ignore next */
(cov_39x6d23tp().s[10]++, require("../../../../lib/cache"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_39x6d23tp().f[4]++;
  cov_39x6d23tp().s[11]++;
  return /* istanbul ignore next */(cov_39x6d23tp().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_39x6d23tp().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_39x6d23tp().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_39x6d23tp().b[0][1]++, {
    default: obj
  });
}
async function GET(request, {
  params
}) {
  /* istanbul ignore next */
  cov_39x6d23tp().f[5]++;
  const id =
  /* istanbul ignore next */
  (cov_39x6d23tp().s[12]++, params.id); // Store params.id early to avoid async issues
  /* istanbul ignore next */
  cov_39x6d23tp().s[13]++;
  try {
    const purchaseId =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[14]++, parseInt(id));
    /* istanbul ignore next */
    cov_39x6d23tp().s[15]++;
    if (isNaN(purchaseId)) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[2][0]++;
      cov_39x6d23tp().s[16]++;
      return _server.NextResponse.json({
        error: {
          message: "Invalid purchase ID format"
        }
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_39x6d23tp().b[2][1]++;
    }
    const purchase =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[17]++, await _prisma.default.purchaseInvoice.findUnique({
      where: {
        id: purchaseId
      },
      include: {
        supplier: true,
        items: {
          include: {
            product: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_39x6d23tp().s[18]++;
    if (!purchase) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[3][0]++;
      cov_39x6d23tp().s[19]++;
      return _server.NextResponse.json({
        error: {
          message: "Purchase invoice not found"
        }
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_39x6d23tp().b[3][1]++;
    }
    cov_39x6d23tp().s[20]++;
    return _server.NextResponse.json(purchase);
  } catch (error) {
    /* istanbul ignore next */
    cov_39x6d23tp().s[21]++;
    console.error(`Error fetching purchase invoice ${id}:`, error);
    const details =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[22]++, error instanceof Error ?
    /* istanbul ignore next */
    (cov_39x6d23tp().b[4][0]++, error.message) :
    /* istanbul ignore next */
    (cov_39x6d23tp().b[4][1]++, "An unknown error occurred"));
    /* istanbul ignore next */
    cov_39x6d23tp().s[23]++;
    return _server.NextResponse.json({
      error: {
        message: "Failed to fetch purchase invoice",
        details: details
      }
    }, {
      status: 500
    });
  }
}
async function PUT(request, {
  params
}) {
  /* istanbul ignore next */
  cov_39x6d23tp().f[6]++;
  const id =
  /* istanbul ignore next */
  (cov_39x6d23tp().s[24]++, params.id);
  /* istanbul ignore next */
  cov_39x6d23tp().s[25]++;
  try {
    const purchaseId =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[26]++, parseInt(id));
    /* istanbul ignore next */
    cov_39x6d23tp().s[27]++;
    if (isNaN(purchaseId)) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[5][0]++;
      cov_39x6d23tp().s[28]++;
      return _server.NextResponse.json({
        error: {
          message: "Invalid purchase ID format"
        }
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_39x6d23tp().b[5][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[29]++, await request.json());
    const originalPurchase =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[30]++, await _prisma.default.purchaseInvoice.findUnique({
      where: {
        id: purchaseId
      },
      include: {
        items: {
          include: {
            product: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_39x6d23tp().s[31]++;
    if (!originalPurchase) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[6][0]++;
      cov_39x6d23tp().s[32]++;
      return _server.NextResponse.json({
        error: {
          message: "Purchase invoice not found to update"
        }
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_39x6d23tp().b[6][1]++;
    }
    const {
      items: newItemsData,
      distributions: newDistributionsData,
      ...invoiceData
    } =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[33]++, body);
    const {
      id: _,
      createdAt,
      updatedAt,
      supplier,
      notes,
      ...dirtyData
    } =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[34]++, invoiceData);
    const cleanedInvoiceData =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[35]++, {});
    /* istanbul ignore next */
    cov_39x6d23tp().s[36]++;
    if (dirtyData.invoiceNumber) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[7][0]++;
      cov_39x6d23tp().s[37]++;
      cleanedInvoiceData.invoiceNumber = dirtyData.invoiceNumber;
    } else
    /* istanbul ignore next */
    {
      cov_39x6d23tp().b[7][1]++;
    }
    cov_39x6d23tp().s[38]++;
    if (dirtyData.status) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[8][0]++;
      cov_39x6d23tp().s[39]++;
      cleanedInvoiceData.status = dirtyData.status;
    } else
    /* istanbul ignore next */
    {
      cov_39x6d23tp().b[8][1]++;
    }
    cov_39x6d23tp().s[40]++;
    if (dirtyData.date) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[9][0]++;
      cov_39x6d23tp().s[41]++;
      cleanedInvoiceData.date = new Date(dirtyData.date);
    } else
    /* istanbul ignore next */
    {
      cov_39x6d23tp().b[9][1]++;
    }
    cov_39x6d23tp().s[42]++;
    if (dirtyData.dueDate !== undefined) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[10][0]++;
      cov_39x6d23tp().s[43]++;
      cleanedInvoiceData.dueDate = dirtyData.dueDate ?
      /* istanbul ignore next */
      (cov_39x6d23tp().b[11][0]++, new Date(dirtyData.dueDate)) :
      /* istanbul ignore next */
      (cov_39x6d23tp().b[11][1]++, null);
    } else
    /* istanbul ignore next */
    {
      cov_39x6d23tp().b[10][1]++;
    }
    cov_39x6d23tp().s[44]++;
    if (dirtyData.totalAmount !== undefined) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[12][0]++;
      cov_39x6d23tp().s[45]++;
      cleanedInvoiceData.total = Number(dirtyData.totalAmount);
    } else {
      /* istanbul ignore next */
      cov_39x6d23tp().b[12][1]++;
      cov_39x6d23tp().s[46]++;
      if (dirtyData.total !== undefined) {
        /* istanbul ignore next */
        cov_39x6d23tp().b[13][0]++;
        cov_39x6d23tp().s[47]++;
        cleanedInvoiceData.total = Number(dirtyData.total);
      } else
      /* istanbul ignore next */
      {
        cov_39x6d23tp().b[13][1]++;
      }
    }
    /* istanbul ignore next */
    cov_39x6d23tp().s[48]++;
    cleanedInvoiceData.distributions = newDistributionsData !== undefined ?
    /* istanbul ignore next */
    (cov_39x6d23tp().b[14][0]++, newDistributionsData) :
    /* istanbul ignore next */
    (cov_39x6d23tp().b[14][1]++, originalPurchase.distributions);
    /* istanbul ignore next */
    cov_39x6d23tp().s[49]++;
    if (dirtyData.supplierId) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[15][0]++;
      cov_39x6d23tp().s[50]++;
      cleanedInvoiceData.supplier = {
        connect: {
          id: Number(dirtyData.supplierId)
        }
      };
    } else {
      /* istanbul ignore next */
      cov_39x6d23tp().b[15][1]++;
      cov_39x6d23tp().s[51]++;
      if (
      /* istanbul ignore next */
      (cov_39x6d23tp().b[17][0]++, dirtyData.supplierId === null) &&
      /* istanbul ignore next */
      (cov_39x6d23tp().b[17][1]++, originalPurchase.supplierId)) {
        /* istanbul ignore next */
        cov_39x6d23tp().b[16][0]++;
        cov_39x6d23tp().s[52]++;
        cleanedInvoiceData.supplier = {
          disconnect: true
        };
      } else
      /* istanbul ignore next */
      {
        cov_39x6d23tp().b[16][1]++;
      }
    }
    const result =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[53]++, await _prisma.default.$transaction(async tx => {
      /* istanbul ignore next */
      cov_39x6d23tp().f[7]++;
      const inventoryUpdates =
      /* istanbul ignore next */
      (cov_39x6d23tp().s[54]++, []);
      /* istanbul ignore next */
      cov_39x6d23tp().s[55]++;
      if (
      /* istanbul ignore next */
      (cov_39x6d23tp().b[19][0]++, originalPurchase.items) &&
      /* istanbul ignore next */
      (cov_39x6d23tp().b[19][1]++, originalPurchase.items.length > 0)) {
        /* istanbul ignore next */
        cov_39x6d23tp().b[18][0]++;
        cov_39x6d23tp().s[56]++;
        for (const oldItem of originalPurchase.items) {
          const productToUpdate =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[57]++, await tx.product.findUnique({
            where: {
              id: oldItem.productId
            }
          }));
          /* istanbul ignore next */
          cov_39x6d23tp().s[58]++;
          if (!productToUpdate) {
            /* istanbul ignore next */
            cov_39x6d23tp().b[20][0]++;
            cov_39x6d23tp().s[59]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_39x6d23tp().b[20][1]++;
          }
          const oldItemDistribution =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[60]++,
          /* istanbul ignore next */
          (cov_39x6d23tp().b[22][0]++, originalPurchase.distributions) &&
          /* istanbul ignore next */
          (cov_39x6d23tp().b[22][1]++, Array.isArray(originalPurchase.distributions)) &&
          /* istanbul ignore next */
          (cov_39x6d23tp().b[22][2]++, originalPurchase.items.indexOf(oldItem) < originalPurchase.distributions.length) ?
          /* istanbul ignore next */
          (cov_39x6d23tp().b[21][0]++, originalPurchase.distributions[originalPurchase.items.indexOf(oldItem)]) :
          /* istanbul ignore next */
          (cov_39x6d23tp().b[21][1]++,
          /* istanbul ignore next */
          (cov_39x6d23tp().b[24][0]++, originalPurchase.distributions) &&
          /* istanbul ignore next */
          (cov_39x6d23tp().b[24][1]++, typeof originalPurchase.distributions === "object") &&
          /* istanbul ignore next */
          (cov_39x6d23tp().b[24][2]++, !Array.isArray(originalPurchase.distributions)) ?
          /* istanbul ignore next */
          (cov_39x6d23tp().b[23][0]++, originalPurchase.distributions) :
          /* istanbul ignore next */
          (cov_39x6d23tp().b[23][1]++, null)));
          /* istanbul ignore next */
          cov_39x6d23tp().s[61]++;
          if (
          /* istanbul ignore next */
          (cov_39x6d23tp().b[26][0]++, oldItemDistribution) &&
          /* istanbul ignore next */
          (cov_39x6d23tp().b[26][1]++, Object.keys(oldItemDistribution).length > 0)) {
            /* istanbul ignore next */
            cov_39x6d23tp().b[25][0]++;
            cov_39x6d23tp().s[62]++;
            for (const [shopIdStr, quantityInShop] of Object.entries(oldItemDistribution)) {
              const shopId =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[63]++, shopIdStr);
              const qtyToRemove =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[64]++, Number(quantityInShop));
              /* istanbul ignore next */
              cov_39x6d23tp().s[65]++;
              if (
              /* istanbul ignore next */
              (cov_39x6d23tp().b[28][0]++, qtyToRemove <= 0) ||
              /* istanbul ignore next */
              (cov_39x6d23tp().b[28][1]++, isNaN(qtyToRemove))) {
                /* istanbul ignore next */
                cov_39x6d23tp().b[27][0]++;
                cov_39x6d23tp().s[66]++;
                continue;
              } else
              /* istanbul ignore next */
              {
                cov_39x6d23tp().b[27][1]++;
              }
              const inventory =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[67]++, await tx.inventoryItem.findFirst({
                where: {
                  productId: oldItem.productId,
                  shopId: shopId
                }
              }));
              /* istanbul ignore next */
              cov_39x6d23tp().s[68]++;
              if (inventory) {
                /* istanbul ignore next */
                cov_39x6d23tp().b[29][0]++;
                const oldShopQuantity =
                /* istanbul ignore next */
                (cov_39x6d23tp().s[69]++, inventory.quantity);
                const newQuantity =
                /* istanbul ignore next */
                (cov_39x6d23tp().s[70]++, Math.max(0, inventory.quantity - qtyToRemove));
                /* istanbul ignore next */
                cov_39x6d23tp().s[71]++;
                await tx.inventoryItem.update({
                  where: {
                    id: inventory.id
                  },
                  data: {
                    quantity: newQuantity,
                    // If new quantity is 0, reset shopSpecificCost, else keep existing
                    shopSpecificCost: newQuantity === 0 ?
                    /* istanbul ignore next */
                    (cov_39x6d23tp().b[30][0]++, 0) :
                    /* istanbul ignore next */
                    (cov_39x6d23tp().b[30][1]++, inventory.shopSpecificCost)
                  }
                });
                /* istanbul ignore next */
                cov_39x6d23tp().s[72]++;
                inventoryUpdates.push({
                  productId: oldItem.productId,
                  shopId: Number(shopId),
                  newQuantity,
                  oldQuantity: oldShopQuantity
                });
              } else
              /* istanbul ignore next */
              {
                cov_39x6d23tp().b[29][1]++;
              }
            }
          } else {
            /* istanbul ignore next */
            cov_39x6d23tp().b[25][1]++;
            cov_39x6d23tp().s[73]++;
            // oldItemDistribution is missing. Attempt to infer shop for stock reversal.
            console.warn(`Old item ${oldItem.productId} in purchase ${purchaseId} has no distribution. Attempting to infer shop for stock reversal.`);
            const existingInventoriesForOldItem =
            /* istanbul ignore next */
            (cov_39x6d23tp().s[74]++, await tx.inventoryItem.findMany({
              where: {
                productId: oldItem.productId
              }
            }));
            /* istanbul ignore next */
            cov_39x6d23tp().s[75]++;
            if (existingInventoriesForOldItem.length === 1) {
              /* istanbul ignore next */
              cov_39x6d23tp().b[31][0]++;
              const shopIdToReverseFrom =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[76]++, existingInventoriesForOldItem[0].shopId);
              const inventory =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[77]++, existingInventoriesForOldItem[0]); // Already fetched
              const oldShopQuantity =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[78]++, inventory.quantity);
              const newQuantity =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[79]++, Math.max(0, inventory.quantity - oldItem.quantity)); // Use total oldItem.quantity
              /* istanbul ignore next */
              cov_39x6d23tp().s[80]++;
              await tx.inventoryItem.update({
                where: {
                  id: inventory.id
                },
                data: {
                  quantity: newQuantity,
                  // If new quantity is 0, reset shopSpecificCost, else keep existing
                  shopSpecificCost: newQuantity === 0 ?
                  /* istanbul ignore next */
                  (cov_39x6d23tp().b[32][0]++, 0) :
                  /* istanbul ignore next */
                  (cov_39x6d23tp().b[32][1]++, inventory.shopSpecificCost)
                }
              });
              /* istanbul ignore next */
              cov_39x6d23tp().s[81]++;
              inventoryUpdates.push({
                productId: oldItem.productId,
                shopId: Number(shopIdToReverseFrom),
                newQuantity,
                oldQuantity: oldShopQuantity
              });
              /* istanbul ignore next */
              cov_39x6d23tp().s[82]++;
              console.log(`Reversed ${oldItem.quantity} from product ${oldItem.productId} in inferred shop ${shopIdToReverseFrom}.`);
            } else {
              /* istanbul ignore next */
              cov_39x6d23tp().b[31][1]++;
              cov_39x6d23tp().s[83]++;
              if (existingInventoriesForOldItem.length === 0) {
                /* istanbul ignore next */
                cov_39x6d23tp().b[33][0]++;
                cov_39x6d23tp().s[84]++;
                console.error(`Old item ${oldItem.productId} not found in any inventory. Cannot reverse stock for this item line from a specific shop.`);
              } else {
                /* istanbul ignore next */
                cov_39x6d23tp().b[33][1]++;
                cov_39x6d23tp().s[85]++;
                console.error(`Old item ${oldItem.productId} exists in multiple shops and no specific distribution for reversal. Ambiguous. Stock not reversed from a specific shop for this item line.`);
              }
            }
          }
          let currentTotalProductQuantity =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[86]++, 0);
          const allInventoryForProductAfterReversal =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[87]++, await tx.inventoryItem.findMany({
            where: {
              productId: oldItem.productId
            }
          }));
          /* istanbul ignore next */
          cov_39x6d23tp().s[88]++;
          currentTotalProductQuantity = allInventoryForProductAfterReversal.reduce((sum, inv) => {
            /* istanbul ignore next */
            cov_39x6d23tp().f[8]++;
            cov_39x6d23tp().s[89]++;
            return sum + inv.quantity;
          }, 0);
          // Recalculate WAC based on remaining purchase history after removing this item
          const remainingPurchaseItems =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[90]++, await tx.purchaseInvoiceItem.findMany({
            where: {
              productId: oldItem.productId,
              purchaseInvoiceId: {
                not: purchaseId
              } // Exclude current invoice being updated
            }
          }));
          let totalRemainingQuantity =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[91]++, 0);
          let totalRemainingValue =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[92]++, 0);
          /* istanbul ignore next */
          cov_39x6d23tp().s[93]++;
          remainingPurchaseItems.forEach(purchaseItem => {
            /* istanbul ignore next */
            cov_39x6d23tp().f[9]++;
            cov_39x6d23tp().s[94]++;
            totalRemainingQuantity += purchaseItem.quantity;
            /* istanbul ignore next */
            cov_39x6d23tp().s[95]++;
            totalRemainingValue += purchaseItem.quantity * purchaseItem.price;
          });
          let newWAC =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[96]++, 0);
          /* istanbul ignore next */
          cov_39x6d23tp().s[97]++;
          if (totalRemainingQuantity > 0) {
            /* istanbul ignore next */
            cov_39x6d23tp().b[34][0]++;
            cov_39x6d23tp().s[98]++;
            newWAC = totalRemainingValue / totalRemainingQuantity;
          } else
          /* istanbul ignore next */
          {
            cov_39x6d23tp().b[34][1]++;
          }
          cov_39x6d23tp().s[99]++;
          await tx.product.update({
            where: {
              id: oldItem.productId
            },
            data: {
              weightedAverageCost: newWAC >= 0 ?
              /* istanbul ignore next */
              (cov_39x6d23tp().b[35][0]++, newWAC) :
              /* istanbul ignore next */
              (cov_39x6d23tp().b[35][1]++, 0)
            }
          });
        }
      } else
      /* istanbul ignore next */
      {
        cov_39x6d23tp().b[18][1]++;
      }
      cov_39x6d23tp().s[100]++;
      await tx.purchaseInvoiceItem.deleteMany({
        where: {
          purchaseInvoiceId: purchaseId
        }
      });
      // Recalculate totalAmount for the invoice based on new/updated items
      let newTotalInvoiceAmount =
      /* istanbul ignore next */
      (cov_39x6d23tp().s[101]++, 0);
      /* istanbul ignore next */
      cov_39x6d23tp().s[102]++;
      if (
      /* istanbul ignore next */
      (cov_39x6d23tp().b[37][0]++, newItemsData) &&
      /* istanbul ignore next */
      (cov_39x6d23tp().b[37][1]++, Array.isArray(newItemsData))) {
        /* istanbul ignore next */
        cov_39x6d23tp().b[36][0]++;
        cov_39x6d23tp().s[103]++;
        newItemsData.forEach(item => {
          /* istanbul ignore next */
          cov_39x6d23tp().f[10]++;
          cov_39x6d23tp().s[104]++;
          newTotalInvoiceAmount += Number(item.quantity) * Number(
          /* istanbul ignore next */
          (cov_39x6d23tp().b[38][0]++, item.price) ||
          /* istanbul ignore next */
          (cov_39x6d23tp().b[38][1]++, 0));
        });
      } else
      /* istanbul ignore next */
      {
        cov_39x6d23tp().b[36][1]++;
      }
      cov_39x6d23tp().s[105]++;
      cleanedInvoiceData.total = newTotalInvoiceAmount; // Ensure this is assigned to the correct field for DB update
      const updatedInvoice =
      /* istanbul ignore next */
      (cov_39x6d23tp().s[106]++, await tx.purchaseInvoice.update({
        where: {
          id: purchaseId
        },
        data: cleanedInvoiceData
      }));
      /* istanbul ignore next */
      cov_39x6d23tp().s[107]++;
      if (
      /* istanbul ignore next */
      (cov_39x6d23tp().b[40][0]++, newItemsData) &&
      /* istanbul ignore next */
      (cov_39x6d23tp().b[40][1]++, Array.isArray(newItemsData))) {
        /* istanbul ignore next */
        cov_39x6d23tp().b[39][0]++;
        cov_39x6d23tp().s[108]++;
        for (let i =
        /* istanbul ignore next */
        (cov_39x6d23tp().s[109]++, 0); i < newItemsData.length; i++) {
          const newItem =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[110]++, newItemsData[i]);
          /* istanbul ignore next */
          cov_39x6d23tp().s[111]++;
          if (
          /* istanbul ignore next */
          (cov_39x6d23tp().b[42][0]++, !newItem.productId) ||
          /* istanbul ignore next */
          (cov_39x6d23tp().b[42][1]++, !newItem.quantity) ||
          /* istanbul ignore next */
          (cov_39x6d23tp().b[42][2]++, newItem.quantity <= 0)) {
            /* istanbul ignore next */
            cov_39x6d23tp().b[41][0]++;
            cov_39x6d23tp().s[112]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_39x6d23tp().b[41][1]++;
          }
          cov_39x6d23tp().s[113]++;
          await tx.purchaseInvoiceItem.create({
            data: {
              purchaseInvoiceId: purchaseId,
              productId: Number(newItem.productId),
              quantity: Number(newItem.quantity),
              price: Number(
              /* istanbul ignore next */
              (cov_39x6d23tp().b[43][0]++, newItem.price) ||
              /* istanbul ignore next */
              (cov_39x6d23tp().b[43][1]++, 0)),
              total: Number(newItem.quantity) * Number(
              /* istanbul ignore next */
              (cov_39x6d23tp().b[44][0]++, newItem.price) ||
              /* istanbul ignore next */
              (cov_39x6d23tp().b[44][1]++, 0))
            }
          });
          const productToUpdate =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[114]++, await tx.product.findUnique({
            where: {
              id: Number(newItem.productId)
            }
          }));
          /* istanbul ignore next */
          cov_39x6d23tp().s[115]++;
          if (!productToUpdate) {
            /* istanbul ignore next */
            cov_39x6d23tp().b[45][0]++;
            cov_39x6d23tp().s[116]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_39x6d23tp().b[45][1]++;
          }
          const newItemDistribution =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[117]++,
          /* istanbul ignore next */
          (cov_39x6d23tp().b[47][0]++, newDistributionsData) &&
          /* istanbul ignore next */
          (cov_39x6d23tp().b[47][1]++, Array.isArray(newDistributionsData)) &&
          /* istanbul ignore next */
          (cov_39x6d23tp().b[47][2]++, newDistributionsData[i]) ?
          /* istanbul ignore next */
          (cov_39x6d23tp().b[46][0]++, newDistributionsData[i]) :
          /* istanbul ignore next */
          (cov_39x6d23tp().b[46][1]++,
          /* istanbul ignore next */
          (cov_39x6d23tp().b[49][0]++, newDistributionsData) &&
          /* istanbul ignore next */
          (cov_39x6d23tp().b[49][1]++, typeof newDistributionsData === "object") &&
          /* istanbul ignore next */
          (cov_39x6d23tp().b[49][2]++, !Array.isArray(newDistributionsData)) ?
          /* istanbul ignore next */
          (cov_39x6d23tp().b[48][0]++, newDistributionsData) :
          /* istanbul ignore next */
          (cov_39x6d23tp().b[48][1]++, null)));
          const itemQuantityTotal =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[118]++, Number(newItem.quantity));
          /* istanbul ignore next */
          cov_39x6d23tp().s[119]++;
          if (
          /* istanbul ignore next */
          (cov_39x6d23tp().b[51][0]++, newItemDistribution) &&
          /* istanbul ignore next */
          (cov_39x6d23tp().b[51][1]++, Object.keys(newItemDistribution).length > 0)) {
            /* istanbul ignore next */
            cov_39x6d23tp().b[50][0]++;
            cov_39x6d23tp().s[120]++;
            for (const [shopIdStr, quantityInShop] of Object.entries(newItemDistribution)) {
              const shopId =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[121]++, shopIdStr);
              const qtyToAdd =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[122]++, Number(quantityInShop));
              /* istanbul ignore next */
              cov_39x6d23tp().s[123]++;
              if (
              /* istanbul ignore next */
              (cov_39x6d23tp().b[53][0]++, qtyToAdd <= 0) ||
              /* istanbul ignore next */
              (cov_39x6d23tp().b[53][1]++, isNaN(qtyToAdd))) {
                /* istanbul ignore next */
                cov_39x6d23tp().b[52][0]++;
                cov_39x6d23tp().s[124]++;
                continue;
              } else
              /* istanbul ignore next */
              {
                cov_39x6d23tp().b[52][1]++;
              }
              const inventory =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[125]++, await tx.inventoryItem.findFirst({
                where: {
                  productId: Number(newItem.productId),
                  shopId: shopId
                }
              }));
              let finalQuantity =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[126]++, 0);
              const oldInvQty =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[127]++,
              /* istanbul ignore next */
              (cov_39x6d23tp().b[54][0]++, inventory?.quantity) ||
              /* istanbul ignore next */
              (cov_39x6d23tp().b[54][1]++, 0));
              let newShopSpecificCostValue =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[128]++, 0);
              const itemPrice =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[129]++, Number(
              /* istanbul ignore next */
              (cov_39x6d23tp().b[55][0]++, newItem.price) ||
              /* istanbul ignore next */
              (cov_39x6d23tp().b[55][1]++, 0)));
              /* istanbul ignore next */
              cov_39x6d23tp().s[130]++;
              if (inventory) {
                /* istanbul ignore next */
                cov_39x6d23tp().b[56][0]++;
                cov_39x6d23tp().s[131]++;
                finalQuantity = inventory.quantity + qtyToAdd;
                const oldShopTotalValue =
                /* istanbul ignore next */
                (cov_39x6d23tp().s[132]++, (
                /* istanbul ignore next */
                (cov_39x6d23tp().b[57][0]++, inventory.quantity) ||
                /* istanbul ignore next */
                (cov_39x6d23tp().b[57][1]++, 0)) * (
                /* istanbul ignore next */
                (cov_39x6d23tp().b[58][0]++, inventory.shopSpecificCost) ||
                /* istanbul ignore next */
                (cov_39x6d23tp().b[58][1]++, 0)));
                const valueOfThisBatch =
                /* istanbul ignore next */
                (cov_39x6d23tp().s[133]++, qtyToAdd * itemPrice);
                /* istanbul ignore next */
                cov_39x6d23tp().s[134]++;
                if (finalQuantity > 0) {
                  /* istanbul ignore next */
                  cov_39x6d23tp().b[59][0]++;
                  cov_39x6d23tp().s[135]++;
                  newShopSpecificCostValue = (oldShopTotalValue + valueOfThisBatch) / finalQuantity;
                } else {
                  /* istanbul ignore next */
                  cov_39x6d23tp().b[59][1]++;
                  cov_39x6d23tp().s[136]++;
                  newShopSpecificCostValue = 0;
                }
                /* istanbul ignore next */
                cov_39x6d23tp().s[137]++;
                await tx.inventoryItem.update({
                  where: {
                    id: inventory.id
                  },
                  data: {
                    quantity: finalQuantity,
                    shopSpecificCost: newShopSpecificCostValue >= 0 ?
                    /* istanbul ignore next */
                    (cov_39x6d23tp().b[60][0]++, newShopSpecificCostValue) :
                    /* istanbul ignore next */
                    (cov_39x6d23tp().b[60][1]++, 0)
                  }
                });
              } else {
                /* istanbul ignore next */
                cov_39x6d23tp().b[56][1]++;
                cov_39x6d23tp().s[138]++;
                finalQuantity = qtyToAdd;
                /* istanbul ignore next */
                cov_39x6d23tp().s[139]++;
                newShopSpecificCostValue = itemPrice;
                /* istanbul ignore next */
                cov_39x6d23tp().s[140]++;
                await tx.inventoryItem.create({
                  data: {
                    productId: Number(newItem.productId),
                    shopId: shopId,
                    quantity: finalQuantity,
                    shopSpecificCost: newShopSpecificCostValue >= 0 ?
                    /* istanbul ignore next */
                    (cov_39x6d23tp().b[61][0]++, newShopSpecificCostValue) :
                    /* istanbul ignore next */
                    (cov_39x6d23tp().b[61][1]++, 0)
                  }
                });
              }
              /* istanbul ignore next */
              cov_39x6d23tp().s[141]++;
              inventoryUpdates.push({
                productId: Number(newItem.productId),
                shopId: Number(shopId),
                newQuantity: finalQuantity,
                oldQuantity: oldInvQty
              });
            }
          } else {
            /* istanbul ignore next */
            cov_39x6d23tp().b[50][1]++;
            cov_39x6d23tp().s[142]++;
            // newItemDistribution is missing or empty. Try to infer shop or log error.
            console.warn(`Purchase item with productId ${newItem.productId} in invoice ${purchaseId} does not have explicit shop distribution data. Attempting to infer target shop.`);
            const existingInventoryItems =
            /* istanbul ignore next */
            (cov_39x6d23tp().s[143]++, await tx.inventoryItem.findMany({
              where: {
                productId: Number(newItem.productId)
              }
            }));
            let targetShopId =
            /* istanbul ignore next */
            (cov_39x6d23tp().s[144]++, null);
            /* istanbul ignore next */
            cov_39x6d23tp().s[145]++;
            if (existingInventoryItems.length === 1) {
              /* istanbul ignore next */
              cov_39x6d23tp().b[62][0]++;
              cov_39x6d23tp().s[146]++;
              targetShopId = existingInventoryItems[0].shopId;
              /* istanbul ignore next */
              cov_39x6d23tp().s[147]++;
              console.log(`Product ${newItem.productId} exists in one shop (${targetShopId}). Attributing new stock there.`);
            } else {
              /* istanbul ignore next */
              cov_39x6d23tp().b[62][1]++;
              cov_39x6d23tp().s[148]++;
              if (existingInventoryItems.length === 0) {
                /* istanbul ignore next */
                cov_39x6d23tp().b[63][0]++;
                cov_39x6d23tp().s[149]++;
                console.error(`Product ${newItem.productId} is new to inventory and no shop distribution provided. Cannot automatically assign to a shop. Inventory not updated for this item.`);
              } else {
                /* istanbul ignore next */
                cov_39x6d23tp().b[63][1]++;
                cov_39x6d23tp().s[150]++;
                console.error(`Product ${newItem.productId} exists in multiple shops and no specific distribution provided. Ambiguous. Inventory not updated for this item.`);
              }
            }
            /* istanbul ignore next */
            cov_39x6d23tp().s[151]++;
            if (targetShopId) {
              /* istanbul ignore next */
              cov_39x6d23tp().b[64][0]++;
              const qtyToAdd =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[152]++, itemQuantityTotal); // The total quantity for this newItem.
              /* istanbul ignore next */
              cov_39x6d23tp().s[153]++;
              if (qtyToAdd > 0) {
                /* istanbul ignore next */
                cov_39x6d23tp().b[65][0]++;
                const inventory =
                /* istanbul ignore next */
                (cov_39x6d23tp().s[154]++, await tx.inventoryItem.findFirst({
                  where: {
                    productId: Number(newItem.productId),
                    shopId: targetShopId
                  }
                }));
                let finalQuantity =
                /* istanbul ignore next */
                (cov_39x6d23tp().s[155]++, 0);
                const oldInvQty =
                /* istanbul ignore next */
                (cov_39x6d23tp().s[156]++,
                /* istanbul ignore next */
                (cov_39x6d23tp().b[66][0]++, inventory?.quantity) ||
                /* istanbul ignore next */
                (cov_39x6d23tp().b[66][1]++, 0));
                let newShopSpecificCostValue =
                /* istanbul ignore next */
                (cov_39x6d23tp().s[157]++, 0);
                const itemPrice =
                /* istanbul ignore next */
                (cov_39x6d23tp().s[158]++, Number(
                /* istanbul ignore next */
                (cov_39x6d23tp().b[67][0]++, newItem.price) ||
                /* istanbul ignore next */
                (cov_39x6d23tp().b[67][1]++, 0)));
                /* istanbul ignore next */
                cov_39x6d23tp().s[159]++;
                if (inventory) {
                  /* istanbul ignore next */
                  cov_39x6d23tp().b[68][0]++;
                  cov_39x6d23tp().s[160]++;
                  finalQuantity = inventory.quantity + qtyToAdd;
                  const oldShopTotalValue =
                  /* istanbul ignore next */
                  (cov_39x6d23tp().s[161]++, (
                  /* istanbul ignore next */
                  (cov_39x6d23tp().b[69][0]++, inventory.quantity) ||
                  /* istanbul ignore next */
                  (cov_39x6d23tp().b[69][1]++, 0)) * (
                  /* istanbul ignore next */
                  (cov_39x6d23tp().b[70][0]++, inventory.shopSpecificCost) ||
                  /* istanbul ignore next */
                  (cov_39x6d23tp().b[70][1]++, 0)));
                  const valueOfThisBatch =
                  /* istanbul ignore next */
                  (cov_39x6d23tp().s[162]++, qtyToAdd * itemPrice);
                  /* istanbul ignore next */
                  cov_39x6d23tp().s[163]++;
                  if (finalQuantity > 0) {
                    /* istanbul ignore next */
                    cov_39x6d23tp().b[71][0]++;
                    cov_39x6d23tp().s[164]++;
                    newShopSpecificCostValue = (oldShopTotalValue + valueOfThisBatch) / finalQuantity;
                  } else {
                    /* istanbul ignore next */
                    cov_39x6d23tp().b[71][1]++;
                    cov_39x6d23tp().s[165]++;
                    newShopSpecificCostValue = 0;
                  }
                  /* istanbul ignore next */
                  cov_39x6d23tp().s[166]++;
                  await tx.inventoryItem.update({
                    where: {
                      id: inventory.id
                    },
                    data: {
                      quantity: finalQuantity,
                      shopSpecificCost: newShopSpecificCostValue >= 0 ?
                      /* istanbul ignore next */
                      (cov_39x6d23tp().b[72][0]++, newShopSpecificCostValue) :
                      /* istanbul ignore next */
                      (cov_39x6d23tp().b[72][1]++, 0)
                    }
                  });
                } else {
                  /* istanbul ignore next */
                  cov_39x6d23tp().b[68][1]++;
                  cov_39x6d23tp().s[167]++;
                  finalQuantity = qtyToAdd;
                  /* istanbul ignore next */
                  cov_39x6d23tp().s[168]++;
                  newShopSpecificCostValue = itemPrice;
                  /* istanbul ignore next */
                  cov_39x6d23tp().s[169]++;
                  console.warn(`InventoryItem for product ${newItem.productId} in targetShopId ${targetShopId} not found during update, attempting create.`);
                  /* istanbul ignore next */
                  cov_39x6d23tp().s[170]++;
                  await tx.inventoryItem.create({
                    data: {
                      productId: Number(newItem.productId),
                      shopId: targetShopId,
                      quantity: finalQuantity,
                      shopSpecificCost: newShopSpecificCostValue >= 0 ?
                      /* istanbul ignore next */
                      (cov_39x6d23tp().b[73][0]++, newShopSpecificCostValue) :
                      /* istanbul ignore next */
                      (cov_39x6d23tp().b[73][1]++, 0)
                    }
                  });
                }
                /* istanbul ignore next */
                cov_39x6d23tp().s[171]++;
                inventoryUpdates.push({
                  productId: Number(newItem.productId),
                  shopId: Number(targetShopId),
                  newQuantity: finalQuantity,
                  oldQuantity: oldInvQty
                });
              } else {
                /* istanbul ignore next */
                cov_39x6d23tp().b[65][1]++;
                cov_39x6d23tp().s[172]++;
                console.warn(`Quantity for product ${newItem.productId} is zero or negative. No inventory update performed for this item.`);
              }
            } else
            /* istanbul ignore next */
            {
              cov_39x6d23tp().b[64][1]++;
            }
          }
          // Recalculate WAC based on all purchase history for this product
          // This ensures accuracy regardless of update order
          const allPurchaseItems =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[173]++, await tx.purchaseInvoiceItem.findMany({
            where: {
              productId: Number(newItem.productId)
            }
          }));
          let totalPurchaseQuantity =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[174]++, 0);
          let totalPurchaseValue =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[175]++, 0);
          /* istanbul ignore next */
          cov_39x6d23tp().s[176]++;
          allPurchaseItems.forEach(purchaseItem => {
            /* istanbul ignore next */
            cov_39x6d23tp().f[11]++;
            cov_39x6d23tp().s[177]++;
            totalPurchaseQuantity += purchaseItem.quantity;
            /* istanbul ignore next */
            cov_39x6d23tp().s[178]++;
            totalPurchaseValue += purchaseItem.quantity * purchaseItem.price;
          });
          let newWeightedAverageCost =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[179]++, 0);
          /* istanbul ignore next */
          cov_39x6d23tp().s[180]++;
          if (totalPurchaseQuantity > 0) {
            /* istanbul ignore next */
            cov_39x6d23tp().b[74][0]++;
            cov_39x6d23tp().s[181]++;
            newWeightedAverageCost = totalPurchaseValue / totalPurchaseQuantity;
          } else
          /* istanbul ignore next */
          {
            cov_39x6d23tp().b[74][1]++;
          }
          // Ensure WAC is valid
          cov_39x6d23tp().s[182]++;
          if (
          /* istanbul ignore next */
          (cov_39x6d23tp().b[76][0]++, newWeightedAverageCost <= 0) ||
          /* istanbul ignore next */
          (cov_39x6d23tp().b[76][1]++, isNaN(newWeightedAverageCost))) {
            /* istanbul ignore next */
            cov_39x6d23tp().b[75][0]++;
            cov_39x6d23tp().s[183]++;
            newWeightedAverageCost = Number(newItem.price);
          } else
          /* istanbul ignore next */
          {
            cov_39x6d23tp().b[75][1]++;
          }
          cov_39x6d23tp().s[184]++;
          await tx.product.update({
            where: {
              id: Number(newItem.productId)
            },
            data: {
              weightedAverageCost: newWeightedAverageCost
            }
          });
        }
      } else
      /* istanbul ignore next */
      {
        cov_39x6d23tp().b[39][1]++;
      }
      const fullUpdatedInvoice =
      /* istanbul ignore next */
      (cov_39x6d23tp().s[185]++, await tx.purchaseInvoice.findUnique({
        where: {
          id: purchaseId
        },
        include: {
          supplier: true,
          items: {
            include: {
              product: true
            }
          }
        }
      }));
      /* istanbul ignore next */
      cov_39x6d23tp().s[186]++;
      return {
        fullUpdatedInvoice,
        inventoryUpdates
      };
    }, {
      timeout: 30000
    }));
    // Real-time updates now handled by polling system
    /* istanbul ignore next */
    cov_39x6d23tp().s[187]++;
    if (
    /* istanbul ignore next */
    (cov_39x6d23tp().b[78][0]++, result) &&
    /* istanbul ignore next */
    (cov_39x6d23tp().b[78][1]++, result.fullUpdatedInvoice)) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[77][0]++;
      cov_39x6d23tp().s[188]++;
      console.log("Purchase invoice updated successfully");
    } else
    /* istanbul ignore next */
    {
      cov_39x6d23tp().b[77][1]++;
    }
    // After successful transaction, invalidate relevant caches
    cov_39x6d23tp().s[189]++;
    try {
      /* istanbul ignore next */
      cov_39x6d23tp().s[190]++;
      await _cache1.cacheService.invalidateInventory(); // Handles 'inventory:summary:*' and 'products:*'
      /* istanbul ignore next */
      cov_39x6d23tp().s[191]++;
      await _cache1.cacheService.del("dashboard:inventory");
      /* istanbul ignore next */
      cov_39x6d23tp().s[192]++;
      await _cache1.cacheService.del("dashboard:inventory-value");
      /* istanbul ignore next */
      cov_39x6d23tp().s[193]++;
      await _cache1.cacheService.del("dashboard:shops");
      /* istanbul ignore next */
      cov_39x6d23tp().s[194]++;
      await _cache1.cacheService.del("dashboard:all");
      /* istanbul ignore next */
      cov_39x6d23tp().s[195]++;
      await _cache1.cacheService.del("dashboard:summary");
      // Invalidate purchases-specific caches
      /* istanbul ignore next */
      cov_39x6d23tp().s[196]++;
      await _cache1.cacheService.invalidatePattern("purchases-optimized*");
      /* istanbul ignore next */
      cov_39x6d23tp().s[197]++;
      await _cache1.cacheService.invalidatePattern("purchase-stats*");
      /* istanbul ignore next */
      cov_39x6d23tp().s[198]++;
      console.log("Relevant caches invalidated after purchase update.");
    } catch (cacheError) {
      /* istanbul ignore next */
      cov_39x6d23tp().s[199]++;
      console.error("Error invalidating caches after purchase update:", cacheError);
      // Do not let cache invalidation error fail the main operation
    }
    // Revalidate Next.js cached pages
    /* istanbul ignore next */
    cov_39x6d23tp().s[200]++;
    try {
      /* istanbul ignore next */
      cov_39x6d23tp().s[201]++;
      (0, _cache.revalidateTag)("purchase-invoices");
      /* istanbul ignore next */
      cov_39x6d23tp().s[202]++;
      (0, _cache.revalidateTag)(`purchase-${purchaseId}`);
      /* istanbul ignore next */
      cov_39x6d23tp().s[203]++;
      (0, _cache.revalidatePath)(`/purchases/${purchaseId}`);
      /* istanbul ignore next */
      cov_39x6d23tp().s[204]++;
      (0, _cache.revalidatePath)(`/purchases/${purchaseId}/edit`);
      /* istanbul ignore next */
      cov_39x6d23tp().s[205]++;
      (0, _cache.revalidatePath)("/purchases");
      /* istanbul ignore next */
      cov_39x6d23tp().s[206]++;
      console.log("Next.js pages revalidated after purchase update.");
    } catch (revalidateError) {
      /* istanbul ignore next */
      cov_39x6d23tp().s[207]++;
      console.error("Error revalidating Next.js pages after purchase update:", revalidateError);
    }
    /* istanbul ignore next */
    cov_39x6d23tp().s[208]++;
    return _server.NextResponse.json({
      message: "Purchase invoice updated successfully",
      data: result.fullUpdatedInvoice
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_39x6d23tp().s[209]++;
    console.error(`Error updating purchase invoice ${id}:`, error);
    const details =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[210]++, error instanceof Error ?
    /* istanbul ignore next */
    (cov_39x6d23tp().b[79][0]++, error.message) :
    /* istanbul ignore next */
    (cov_39x6d23tp().b[79][1]++, String(error)));
    /* istanbul ignore next */
    cov_39x6d23tp().s[211]++;
    return _server.NextResponse.json({
      error: {
        message: "Failed to update purchase invoice",
        details: details
      }
    }, {
      status: 500
    });
  }
}
async function DELETE(request, {
  params
}) {
  /* istanbul ignore next */
  cov_39x6d23tp().f[12]++;
  const purchaseIdStr =
  /* istanbul ignore next */
  (cov_39x6d23tp().s[212]++, params.id);
  /* istanbul ignore next */
  cov_39x6d23tp().s[213]++;
  try {
    const purchaseId =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[214]++, parseInt(purchaseIdStr));
    /* istanbul ignore next */
    cov_39x6d23tp().s[215]++;
    if (isNaN(purchaseId)) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[80][0]++;
      cov_39x6d23tp().s[216]++;
      return _server.NextResponse.json({
        error: {
          message: "Invalid purchase ID format"
        }
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_39x6d23tp().b[80][1]++;
    }
    const purchaseToDelete =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[217]++, await _prisma.default.purchaseInvoice.findUnique({
      where: {
        id: purchaseId
      },
      include: {
        items: {
          include: {
            product: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_39x6d23tp().s[218]++;
    if (!purchaseToDelete) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[81][0]++;
      cov_39x6d23tp().s[219]++;
      return _server.NextResponse.json({
        error: {
          message: "Purchase invoice not found to delete"
        }
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_39x6d23tp().b[81][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[220]++, await _prisma.default.$transaction(async tx => {
      /* istanbul ignore next */
      cov_39x6d23tp().f[13]++;
      const inventoryUpdates =
      /* istanbul ignore next */
      (cov_39x6d23tp().s[221]++, []);
      /* istanbul ignore next */
      cov_39x6d23tp().s[222]++;
      if (
      /* istanbul ignore next */
      (cov_39x6d23tp().b[83][0]++, purchaseToDelete.items) &&
      /* istanbul ignore next */
      (cov_39x6d23tp().b[83][1]++, purchaseToDelete.items.length > 0)) {
        /* istanbul ignore next */
        cov_39x6d23tp().b[82][0]++;
        cov_39x6d23tp().s[223]++;
        for (const item of purchaseToDelete.items) {
          /* istanbul ignore next */
          cov_39x6d23tp().s[224]++;
          if (!item.product) {
            /* istanbul ignore next */
            cov_39x6d23tp().b[84][0]++;
            cov_39x6d23tp().s[225]++;
            console.warn(`Item ${item.id} for purchase ${purchaseId} is missing product data. Skipping stock adjustment.`);
            /* istanbul ignore next */
            cov_39x6d23tp().s[226]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_39x6d23tp().b[84][1]++;
          }
          const productId =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[227]++, item.productId);
          const quantityToRemoveForItemTotal =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[228]++, item.quantity); // Total quantity for this item line
          let itemDistributionInfo =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[229]++, null);
          const distributionsOnInvoice =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[230]++, purchaseToDelete.distributions);
          // Attempt to get specific distribution for this item
          /* istanbul ignore next */
          cov_39x6d23tp().s[231]++;
          if (
          /* istanbul ignore next */
          (cov_39x6d23tp().b[86][0]++, distributionsOnInvoice) &&
          /* istanbul ignore next */
          (cov_39x6d23tp().b[86][1]++, Array.isArray(distributionsOnInvoice)) &&
          /* istanbul ignore next */
          (cov_39x6d23tp().b[86][2]++, purchaseToDelete.items.indexOf(item) < distributionsOnInvoice.length)) {
            /* istanbul ignore next */
            cov_39x6d23tp().b[85][0]++;
            const distData =
            /* istanbul ignore next */
            (cov_39x6d23tp().s[232]++, distributionsOnInvoice[purchaseToDelete.items.indexOf(item)]);
            /* istanbul ignore next */
            cov_39x6d23tp().s[233]++;
            if (
            /* istanbul ignore next */
            (cov_39x6d23tp().b[88][0]++, distData) &&
            /* istanbul ignore next */
            (cov_39x6d23tp().b[88][1]++, typeof distData === "object") &&
            /* istanbul ignore next */
            (cov_39x6d23tp().b[88][2]++, Object.keys(distData).length > 0)) {
              /* istanbul ignore next */
              cov_39x6d23tp().b[87][0]++;
              cov_39x6d23tp().s[234]++;
              itemDistributionInfo = distData;
            } else
            /* istanbul ignore next */
            {
              cov_39x6d23tp().b[87][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_39x6d23tp().b[85][1]++;
          }
          cov_39x6d23tp().s[235]++;
          if (itemDistributionInfo) {
            /* istanbul ignore next */
            cov_39x6d23tp().b[89][0]++;
            cov_39x6d23tp().s[236]++;
            // Case 1: Explicit distribution data found for the item
            console.log(`Reversing item-specific distribution for product ${productId}, purchase ${purchaseId}`);
            /* istanbul ignore next */
            cov_39x6d23tp().s[237]++;
            for (const [shopIdStr, distributedQuantityStr] of Object.entries(itemDistributionInfo)) {
              const shopId =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[238]++, shopIdStr);
              const qtyInShopToRemove =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[239]++, Number(distributedQuantityStr));
              /* istanbul ignore next */
              cov_39x6d23tp().s[240]++;
              if (
              /* istanbul ignore next */
              (cov_39x6d23tp().b[91][0]++, isNaN(qtyInShopToRemove)) ||
              /* istanbul ignore next */
              (cov_39x6d23tp().b[91][1]++, qtyInShopToRemove <= 0)) {
                /* istanbul ignore next */
                cov_39x6d23tp().b[90][0]++;
                cov_39x6d23tp().s[241]++;
                continue;
              } else
              /* istanbul ignore next */
              {
                cov_39x6d23tp().b[90][1]++;
              }
              const inventoryItem =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[242]++, await tx.inventoryItem.findFirst({
                where: {
                  productId,
                  shopId: shopId
                }
              }));
              /* istanbul ignore next */
              cov_39x6d23tp().s[243]++;
              if (inventoryItem) {
                /* istanbul ignore next */
                cov_39x6d23tp().b[92][0]++;
                const oldShopQuantity =
                /* istanbul ignore next */
                (cov_39x6d23tp().s[244]++, inventoryItem.quantity);
                const newShopQuantity =
                /* istanbul ignore next */
                (cov_39x6d23tp().s[245]++, Math.max(0, inventoryItem.quantity - qtyInShopToRemove));
                const updateData =
                /* istanbul ignore next */
                (cov_39x6d23tp().s[246]++, {
                  quantity: newShopQuantity,
                  shopSpecificCost: newShopQuantity === 0 ?
                  /* istanbul ignore next */
                  (cov_39x6d23tp().b[93][0]++, 0) :
                  /* istanbul ignore next */
                  (cov_39x6d23tp().b[93][1]++, inventoryItem.shopSpecificCost)
                });
                /* istanbul ignore next */
                cov_39x6d23tp().s[247]++;
                await tx.inventoryItem.update({
                  where: {
                    id: inventoryItem.id
                  },
                  data: updateData
                });
                /* istanbul ignore next */
                cov_39x6d23tp().s[248]++;
                inventoryUpdates.push({
                  productId,
                  shopId: Number(shopId),
                  newQuantity: newShopQuantity,
                  oldQuantity: oldShopQuantity
                });
                /* istanbul ignore next */
                cov_39x6d23tp().s[249]++;
                console.log(`  - Reduced inventory for product ${productId} in shop ${shopId} by ${qtyInShopToRemove}. Old: ${oldShopQuantity}, New: ${newShopQuantity}`);
              } else {
                /* istanbul ignore next */
                cov_39x6d23tp().b[92][1]++;
                cov_39x6d23tp().s[250]++;
                console.warn(`  - Inventory item not found for product ${productId} in shop ${shopId} during purchase deletion with explicit distribution. Stock may be inaccurate.`);
              }
            }
          } else {
            /* istanbul ignore next */
            cov_39x6d23tp().b[89][1]++;
            cov_39x6d23tp().s[251]++;
            // Case 2: No explicit distribution for this item. Attempt to infer.
            console.warn(`No specific distribution found for item ${productId} in deleted purchase ${purchaseId}. Attempting to infer shop(s) for stock reversal of total quantity ${quantityToRemoveForItemTotal}.`);
            const existingInventoriesForItem =
            /* istanbul ignore next */
            (cov_39x6d23tp().s[252]++, await tx.inventoryItem.findMany({
              where: {
                productId: productId
              }
            }));
            /* istanbul ignore next */
            cov_39x6d23tp().s[253]++;
            if (existingInventoriesForItem.length === 1) {
              /* istanbul ignore next */
              cov_39x6d23tp().b[94][0]++;
              const singleShopInventory =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[254]++, existingInventoriesForItem[0]);
              const shopIdToDeductFrom =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[255]++, singleShopInventory.shopId);
              /* istanbul ignore next */
              cov_39x6d23tp().s[256]++;
              console.log(`Product ${productId} found in single shop ${shopIdToDeductFrom}. Deducting total item quantity ${quantityToRemoveForItemTotal}.`);
              const oldShopQuantity =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[257]++, singleShopInventory.quantity);
              const newShopQuantity =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[258]++, Math.max(0, singleShopInventory.quantity - quantityToRemoveForItemTotal));
              const updateDataInferred =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[259]++, {
                quantity: newShopQuantity,
                shopSpecificCost: newShopQuantity === 0 ?
                /* istanbul ignore next */
                (cov_39x6d23tp().b[95][0]++, 0) :
                /* istanbul ignore next */
                (cov_39x6d23tp().b[95][1]++, singleShopInventory.shopSpecificCost)
              });
              /* istanbul ignore next */
              cov_39x6d23tp().s[260]++;
              await tx.inventoryItem.update({
                where: {
                  id: singleShopInventory.id
                },
                data: updateDataInferred
              });
              /* istanbul ignore next */
              cov_39x6d23tp().s[261]++;
              inventoryUpdates.push({
                productId,
                shopId: Number(shopIdToDeductFrom),
                newQuantity: newShopQuantity,
                oldQuantity: oldShopQuantity
              });
              /* istanbul ignore next */
              cov_39x6d23tp().s[262]++;
              console.log(`  - Reduced inventory for product ${productId} in inferred shop ${shopIdToDeductFrom} by ${quantityToRemoveForItemTotal}. Old: ${oldShopQuantity}, New: ${newShopQuantity}`);
            } else {
              /* istanbul ignore next */
              cov_39x6d23tp().b[94][1]++;
              cov_39x6d23tp().s[263]++;
              if (existingInventoriesForItem.length === 0) {
                /* istanbul ignore next */
                cov_39x6d23tp().b[96][0]++;
                cov_39x6d23tp().s[264]++;
                console.error(`Product ${productId} (from deleted purchase ${purchaseId}) not found in any inventory. Cannot reverse stock for this item.`);
              } else {
                /* istanbul ignore next */
                cov_39x6d23tp().b[96][1]++;
                cov_39x6d23tp().s[265]++;
                console.error(`Product ${productId} (from deleted purchase ${purchaseId}) exists in multiple shops, but no specific distribution data was found on the invoice for reversal. Ambiguous. Stock not automatically reversed for this item. Manual adjustment may be needed.`);
              }
            }
          }
          // ---- BEGIN WAC Recalculation for the deleted item ----
          const remainingPurchaseItems =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[266]++, await tx.purchaseInvoiceItem.findMany({
            where: {
              productId: productId,
              purchaseInvoiceId: {
                not: purchaseId
              }
            }
          }));
          let totalRemainingQuantity =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[267]++, 0);
          let totalRemainingValue =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[268]++, 0);
          /* istanbul ignore next */
          cov_39x6d23tp().s[269]++;
          remainingPurchaseItems.forEach(pItem => {
            /* istanbul ignore next */
            cov_39x6d23tp().f[14]++;
            cov_39x6d23tp().s[270]++;
            totalRemainingQuantity += pItem.quantity;
            /* istanbul ignore next */
            cov_39x6d23tp().s[271]++;
            totalRemainingValue += pItem.quantity * pItem.price;
          });
          let newCalculatedWAC =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[272]++, 0);
          /* istanbul ignore next */
          cov_39x6d23tp().s[273]++;
          if (totalRemainingQuantity > 0) {
            /* istanbul ignore next */
            cov_39x6d23tp().b[97][0]++;
            cov_39x6d23tp().s[274]++;
            newCalculatedWAC = totalRemainingValue / totalRemainingQuantity;
          } else
          /* istanbul ignore next */
          {
            cov_39x6d23tp().b[97][1]++;
          }
          cov_39x6d23tp().s[275]++;
          await tx.product.update({
            where: {
              id: productId
            },
            data: {
              weightedAverageCost: newCalculatedWAC >= 0 ?
              /* istanbul ignore next */
              (cov_39x6d23tp().b[98][0]++, newCalculatedWAC) :
              /* istanbul ignore next */
              (cov_39x6d23tp().b[98][1]++, 0)
            }
          });
          // ---- END WAC Recalculation ----
        }
      } else
      /* istanbul ignore next */
      {
        cov_39x6d23tp().b[82][1]++;
      }
      cov_39x6d23tp().s[276]++;
      await tx.purchaseInvoiceItem.deleteMany({
        where: {
          purchaseInvoiceId: purchaseId
        }
      });
      /* istanbul ignore next */
      cov_39x6d23tp().s[277]++;
      await tx.purchaseInvoice.delete({
        where: {
          id: purchaseId
        }
      });
      /* istanbul ignore next */
      cov_39x6d23tp().s[278]++;
      return {
        deletedInvoiceId: purchaseId,
        inventoryUpdates
      };
    }));
    // Real-time updates now handled by polling system
    /* istanbul ignore next */
    cov_39x6d23tp().s[279]++;
    if (
    /* istanbul ignore next */
    (cov_39x6d23tp().b[100][0]++, result) &&
    /* istanbul ignore next */
    (cov_39x6d23tp().b[100][1]++, result.deletedInvoiceId)) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[99][0]++;
      cov_39x6d23tp().s[280]++;
      console.log(`Purchase invoice ${result.deletedInvoiceId} deleted successfully`);
    } else
    /* istanbul ignore next */
    {
      cov_39x6d23tp().b[99][1]++;
    }
    // After successful transaction, invalidate relevant caches
    cov_39x6d23tp().s[281]++;
    try {
      /* istanbul ignore next */
      cov_39x6d23tp().s[282]++;
      await _cache1.cacheService.invalidateInventory(); // Handles 'inventory:summary:*' and 'products:*'
      /* istanbul ignore next */
      cov_39x6d23tp().s[283]++;
      await _cache1.cacheService.del("dashboard:inventory");
      /* istanbul ignore next */
      cov_39x6d23tp().s[284]++;
      await _cache1.cacheService.del("dashboard:inventory-value");
      /* istanbul ignore next */
      cov_39x6d23tp().s[285]++;
      await _cache1.cacheService.del("dashboard:shops");
      /* istanbul ignore next */
      cov_39x6d23tp().s[286]++;
      await _cache1.cacheService.del("dashboard:all");
      /* istanbul ignore next */
      cov_39x6d23tp().s[287]++;
      await _cache1.cacheService.del("dashboard:summary");
      // Invalidate purchases-specific caches
      /* istanbul ignore next */
      cov_39x6d23tp().s[288]++;
      await _cache1.cacheService.invalidatePattern("purchases-optimized*");
      /* istanbul ignore next */
      cov_39x6d23tp().s[289]++;
      await _cache1.cacheService.invalidatePattern("purchase-stats*");
      /* istanbul ignore next */
      cov_39x6d23tp().s[290]++;
      console.log("Relevant caches invalidated after purchase deletion.");
    } catch (cacheError) {
      /* istanbul ignore next */
      cov_39x6d23tp().s[291]++;
      console.error("Error invalidating caches after purchase deletion:", cacheError);
      // Do not let cache invalidation error fail the main operation
    }
    // Revalidate Next.js cached pages
    /* istanbul ignore next */
    cov_39x6d23tp().s[292]++;
    try {
      /* istanbul ignore next */
      cov_39x6d23tp().s[293]++;
      (0, _cache.revalidateTag)("purchase-invoices");
      /* istanbul ignore next */
      cov_39x6d23tp().s[294]++;
      (0, _cache.revalidateTag)(`purchase-${purchaseId}`);
      /* istanbul ignore next */
      cov_39x6d23tp().s[295]++;
      (0, _cache.revalidatePath)(`/purchases/${purchaseId}`);
      /* istanbul ignore next */
      cov_39x6d23tp().s[296]++;
      (0, _cache.revalidatePath)(`/purchases/${purchaseId}/edit`);
      /* istanbul ignore next */
      cov_39x6d23tp().s[297]++;
      (0, _cache.revalidatePath)("/purchases");
      /* istanbul ignore next */
      cov_39x6d23tp().s[298]++;
      console.log("Next.js pages revalidated after purchase deletion.");
    } catch (revalidateError) {
      /* istanbul ignore next */
      cov_39x6d23tp().s[299]++;
      console.error("Error revalidating Next.js pages after purchase deletion:", revalidateError);
    }
    /* istanbul ignore next */
    cov_39x6d23tp().s[300]++;
    return _server.NextResponse.json({
      message: "Purchase invoice deleted successfully"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_39x6d23tp().s[301]++;
    console.error(`Error deleting purchase invoice ${purchaseIdStr}:`, error);
    const details =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[302]++, error instanceof Error ?
    /* istanbul ignore next */
    (cov_39x6d23tp().b[101][0]++, error.message) :
    /* istanbul ignore next */
    (cov_39x6d23tp().b[101][1]++, "An unknown error occurred"));
    /* istanbul ignore next */
    cov_39x6d23tp().s[303]++;
    return _server.NextResponse.json({
      error: {
        message: "Failed to delete purchase invoice",
        details: details
      }
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,