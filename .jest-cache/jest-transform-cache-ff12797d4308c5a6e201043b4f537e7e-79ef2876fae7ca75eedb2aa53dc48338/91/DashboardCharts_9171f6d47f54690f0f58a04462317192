4c6784afeaca7864354e735fc6dc323b
"use client";
"use strict";

/* istanbul ignore next */
function cov_18kbsl426e() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/(protected)/dashboard/components/DashboardCharts.tsx";
  var hash = "af238e651cc37dde967a244e912c6686b198ec2b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/(protected)/dashboard/components/DashboardCharts.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 31
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 18
        },
        end: {
          line: 13,
          column: 37
        }
      },
      "5": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 21,
          column: 1
        }
      },
      "6": {
        start: {
          line: 23,
          column: 29
        },
        end: {
          line: 44,
          column: 1
        }
      },
      "7": {
        start: {
          line: 45,
          column: 35
        },
        end: {
          line: 66,
          column: 1
        }
      },
      "8": {
        start: {
          line: 67,
          column: 26
        },
        end: {
          line: 92,
          column: 1
        }
      },
      "9": {
        start: {
          line: 95,
          column: 22
        },
        end: {
          line: 95,
          column: 61
        }
      },
      "10": {
        start: {
          line: 96,
          column: 26
        },
        end: {
          line: 96,
          column: 77
        }
      },
      "11": {
        start: {
          line: 97,
          column: 22
        },
        end: {
          line: 97,
          column: 55
        }
      },
      "12": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 307,
          column: 7
        }
      },
      "13": {
        start: {
          line: 163,
          column: 76
        },
        end: {
          line: 163,
          column: 117
        }
      },
      "14": {
        start: {
          line: 167,
          column: 106
        },
        end: {
          line: 169,
          column: 71
        }
      },
      "15": {
        start: {
          line: 272,
          column: 89
        },
        end: {
          line: 299,
          column: 49
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "DashboardCharts",
        decl: {
          start: {
            line: 93,
            column: 9
          },
          end: {
            line: 93,
            column: 24
          }
        },
        loc: {
          start: {
            line: 93,
            column: 83
          },
          end: {
            line: 308,
            column: 1
          }
        },
        line: 93
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 163,
            column: 55
          },
          end: {
            line: 163,
            column: 56
          }
        },
        loc: {
          start: {
            line: 163,
            column: 76
          },
          end: {
            line: 163,
            column: 117
          }
        },
        line: 163
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 167,
            column: 76
          },
          end: {
            line: 167,
            column: 77
          }
        },
        loc: {
          start: {
            line: 167,
            column: 106
          },
          end: {
            line: 169,
            column: 71
          }
        },
        line: 167
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 272,
            column: 60
          },
          end: {
            line: 272,
            column: 61
          }
        },
        loc: {
          start: {
            line: 272,
            column: 89
          },
          end: {
            line: 299,
            column: 49
          }
        },
        line: 272
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 95,
            column: 22
          },
          end: {
            line: 95,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 22
          },
          end: {
            line: 95,
            column: 37
          }
        }, {
          start: {
            line: 95,
            column: 41
          },
          end: {
            line: 95,
            column: 61
          }
        }],
        line: 95
      },
      "1": {
        loc: {
          start: {
            line: 96,
            column: 26
          },
          end: {
            line: 96,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 26
          },
          end: {
            line: 96,
            column: 47
          }
        }, {
          start: {
            line: 96,
            column: 51
          },
          end: {
            line: 96,
            column: 77
          }
        }],
        line: 96
      },
      "2": {
        loc: {
          start: {
            line: 97,
            column: 22
          },
          end: {
            line: 97,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 22
          },
          end: {
            line: 97,
            column: 34
          }
        }, {
          start: {
            line: 97,
            column: 38
          },
          end: {
            line: 97,
            column: 55
          }
        }],
        line: 97
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/(protected)/dashboard/components/DashboardCharts.tsx"],
      sourcesContent: ["'use client';\n\nimport {\n    BarChart,\n    Bar,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    ResponsiveContainer,\n    PieChart,\n    Pie,\n    Cell,\n    LineChart,\n    Line\n} from 'recharts';\n\n// Types for our data\ninterface ShopPerformance {\n    name: string;\n    sales: number;\n    stock: number;\n}\n\ninterface InventoryCategory {\n    name: string;\n    value: number;\n}\n\ninterface MonthlySales {\n    month: string;\n    sales: number;\n}\n\ninterface DashboardChartsProps {\n    shopPerformance: ShopPerformance[] | null;\n    inventoryDistribution: InventoryCategory[] | null;\n    monthlySales: MonthlySales[] | null;\n}\n\n// Colors for pie chart\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\n\n// Dummy data for fallbacks\nconst dummyShopPerformance: ShopPerformance[] = [\n    { name: 'Colombo Shop', sales: 125000, stock: 450 },\n    { name: 'Kandy Shop', sales: 98500, stock: 320 },\n    { name: 'Galle Shop', sales: 75200, stock: 280 },\n    { name: 'Jaffna Shop', sales: 62800, stock: 210 },\n];\n\nconst dummyInventoryDistribution: InventoryCategory[] = [\n    { name: 'Cricket', value: 350 },\n    { name: 'Football', value: 280 },\n    { name: 'Basketball', value: 200 },\n    { name: 'Tennis', value: 150 },\n    { name: 'Swimming', value: 100 },\n];\n\nconst dummyMonthlySales: MonthlySales[] = [\n    { month: 'Jan', sales: 85000 },\n    { month: 'Feb', sales: 92000 },\n    { month: 'Mar', sales: 88000 },\n    { month: 'Apr', sales: 99000 },\n    { month: 'May', sales: 115000 },\n    { month: 'Jun', sales: 125000 },\n];\n\nexport default function DashboardCharts({\n    shopPerformance,\n    inventoryDistribution,\n    monthlySales\n}: DashboardChartsProps) {\n    // Use provided data or fallback to dummy data\n    const shopsData = shopPerformance || dummyShopPerformance;\n    const inventoryData = inventoryDistribution || dummyInventoryDistribution;\n    const salesData = monthlySales || dummyMonthlySales;\n\n    return (\n        <>\n            {/* Charts Row */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                {/* Shop Sales Chart */}\n                <div className=\"bg-tertiary p-6 rounded-lg shadow-sm border border-gray-200\">\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Shop Sales Performance</h3>\n                    <div className=\"h-80\">\n                        <ResponsiveContainer width=\"100%\" height=\"100%\">\n                            <BarChart\n                                data={shopsData}\n                                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                            >\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"name\" />\n                                <YAxis />\n                                <Tooltip />\n                                <Legend />\n                                <Bar dataKey=\"sales\" name=\"Sales (Rs.)\" fill=\"#8884d8\" />\n                            </BarChart>\n                        </ResponsiveContainer>\n                    </div>\n                </div>\n\n                {/* Inventory Distribution */}\n                <div className=\"bg-tertiary p-6 rounded-lg shadow-sm border border-gray-200\">\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Inventory Distribution</h3>\n                    <div className=\"h-80\">\n                        <ResponsiveContainer width=\"100%\" height=\"100%\">\n                            <PieChart>\n                                <Pie\n                                    data={inventoryData}\n                                    cx=\"50%\"\n                                    cy=\"50%\"\n                                    labelLine={false}\n                                    label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\n                                    outerRadius={80}\n                                    fill=\"#8884d8\"\n                                    dataKey=\"value\"\n                                >\n                                    {inventoryData.map((entry, index) => (\n                                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                                    ))}\n                                </Pie>\n                                <Tooltip />\n                                <Legend />\n                            </PieChart>\n                        </ResponsiveContainer>\n                    </div>\n                </div>\n            </div>\n\n            {/* Monthly Sales Trend */}\n            <div className=\"bg-tertiary p-6 rounded-lg shadow-sm border border-gray-200\">\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Monthly Sales Trend</h3>\n                <div className=\"h-80\">\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <LineChart\n                            data={salesData}\n                            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                        >\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"month\" />\n                            <YAxis />\n                            <Tooltip />\n                            <Legend />\n                            <Line\n                                type=\"monotone\"\n                                dataKey=\"sales\"\n                                name=\"Monthly Sales (Rs.)\"\n                                stroke=\"#4ade80\"\n                                activeDot={{ r: 8 }}\n                            />\n                        </LineChart>\n                    </ResponsiveContainer>\n                </div>\n            </div>\n\n            {/* Shop Performance Table */}\n            <div className=\"bg-tertiary rounded-lg shadow-sm border border-gray-200\">\n                <div className=\"flex justify-between items-center p-6 border-b border-gray-200\">\n                    <h3 className=\"text-lg font-medium text-gray-900\">Shop Performance</h3>\n                    <button className=\"text-sm text-primary hover:text-primary-dark\">View All Shops</button>\n                </div>\n                <div className=\"overflow-x-auto\">\n                    <table className=\"w-full\">\n                        <thead className=\"bg-gray-50\">\n                            <tr>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Shop Name</th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Sales (Last 30 days)</th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Current Stock</th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"bg-tertiary divide-y divide-gray-200\">\n                            {shopsData.map((shop, index) => (\n                                <tr key={index}>\n                                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{shop.name}</td>\n                                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">Rs. {shop.sales.toLocaleString()}</td>\n                                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{shop.stock} items</td>\n                                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-primary hover:text-primary-dark\"><button>View</button></td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </>\n    );\n} "],
      names: ["DashboardCharts", "COLORS", "dummyShopPerformance", "name", "sales", "stock", "dummyInventoryDistribution", "value", "dummyMonthlySales", "month", "shopPerformance", "inventoryDistribution", "monthlySales", "shopsData", "inventoryData", "salesData", "div", "className", "h3", "ResponsiveContainer", "width", "height", "BarChart", "data", "margin", "top", "right", "left", "bottom", "CartesianGrid", "strokeDasharray", "XAxis", "dataKey", "YAxis", "Tooltip", "Legend", "Bar", "fill", "PieChart", "Pie", "cx", "cy", "labelLine", "label", "percent", "toFixed", "outerRadius", "map", "entry", "index", "Cell", "length", "LineChart", "Line", "type", "stroke", "activeDot", "r", "button", "table", "thead", "tr", "th", "tbody", "shop", "td", "toLocaleString"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "af238e651cc37dde967a244e912c6686b198ec2b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_18kbsl426e = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_18kbsl426e();
cov_18kbsl426e().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_18kbsl426e().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_18kbsl426e().f[0]++;
    cov_18kbsl426e().s[2]++;
    return DashboardCharts;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_18kbsl426e().s[3]++, require("react/jsx-runtime"));
const _recharts =
/* istanbul ignore next */
(cov_18kbsl426e().s[4]++, require("recharts"));
// Colors for pie chart
const COLORS =
/* istanbul ignore next */
(cov_18kbsl426e().s[5]++, ["#0088FE", "#00C49F", "#FFBB28", "#FF8042", "#8884D8"]);
// Dummy data for fallbacks
const dummyShopPerformance =
/* istanbul ignore next */
(cov_18kbsl426e().s[6]++, [{
  name: "Colombo Shop",
  sales: 125000,
  stock: 450
}, {
  name: "Kandy Shop",
  sales: 98500,
  stock: 320
}, {
  name: "Galle Shop",
  sales: 75200,
  stock: 280
}, {
  name: "Jaffna Shop",
  sales: 62800,
  stock: 210
}]);
const dummyInventoryDistribution =
/* istanbul ignore next */
(cov_18kbsl426e().s[7]++, [{
  name: "Cricket",
  value: 350
}, {
  name: "Football",
  value: 280
}, {
  name: "Basketball",
  value: 200
}, {
  name: "Tennis",
  value: 150
}, {
  name: "Swimming",
  value: 100
}]);
const dummyMonthlySales =
/* istanbul ignore next */
(cov_18kbsl426e().s[8]++, [{
  month: "Jan",
  sales: 85000
}, {
  month: "Feb",
  sales: 92000
}, {
  month: "Mar",
  sales: 88000
}, {
  month: "Apr",
  sales: 99000
}, {
  month: "May",
  sales: 115000
}, {
  month: "Jun",
  sales: 125000
}]);
function DashboardCharts({
  shopPerformance,
  inventoryDistribution,
  monthlySales
}) {
  /* istanbul ignore next */
  cov_18kbsl426e().f[1]++;
  // Use provided data or fallback to dummy data
  const shopsData =
  /* istanbul ignore next */
  (cov_18kbsl426e().s[9]++,
  /* istanbul ignore next */
  (cov_18kbsl426e().b[0][0]++, shopPerformance) ||
  /* istanbul ignore next */
  (cov_18kbsl426e().b[0][1]++, dummyShopPerformance));
  const inventoryData =
  /* istanbul ignore next */
  (cov_18kbsl426e().s[10]++,
  /* istanbul ignore next */
  (cov_18kbsl426e().b[1][0]++, inventoryDistribution) ||
  /* istanbul ignore next */
  (cov_18kbsl426e().b[1][1]++, dummyInventoryDistribution));
  const salesData =
  /* istanbul ignore next */
  (cov_18kbsl426e().s[11]++,
  /* istanbul ignore next */
  (cov_18kbsl426e().b[2][0]++, monthlySales) ||
  /* istanbul ignore next */
  (cov_18kbsl426e().b[2][1]++, dummyMonthlySales));
  /* istanbul ignore next */
  cov_18kbsl426e().s[12]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "grid grid-cols-1 lg:grid-cols-2 gap-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-tertiary p-6 rounded-lg shadow-sm border border-gray-200",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
          className: "text-lg font-medium text-gray-900 mb-4",
          children: "Shop Sales Performance"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "h-80",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.ResponsiveContainer, {
            width: "100%",
            height: "100%",
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_recharts.BarChart, {
              data: shopsData,
              margin: {
                top: 5,
                right: 30,
                left: 20,
                bottom: 5
              },
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.CartesianGrid, {
                strokeDasharray: "3 3"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.XAxis, {
                dataKey: "name"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.YAxis, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Tooltip, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Legend, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Bar, {
                dataKey: "sales",
                name: "Sales (Rs.)",
                fill: "#8884d8"
              })]
            })
          })
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-tertiary p-6 rounded-lg shadow-sm border border-gray-200",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
          className: "text-lg font-medium text-gray-900 mb-4",
          children: "Inventory Distribution"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "h-80",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.ResponsiveContainer, {
            width: "100%",
            height: "100%",
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_recharts.PieChart, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Pie, {
                data: inventoryData,
                cx: "50%",
                cy: "50%",
                labelLine: false,
                label: ({
                  name,
                  percent
                }) => {
                  /* istanbul ignore next */
                  cov_18kbsl426e().f[2]++;
                  cov_18kbsl426e().s[13]++;
                  return `${name}: ${(percent * 100).toFixed(0)}%`;
                },
                outerRadius: 80,
                fill: "#8884d8",
                dataKey: "value",
                children: inventoryData.map((entry, index) => {
                  /* istanbul ignore next */
                  cov_18kbsl426e().f[3]++;
                  cov_18kbsl426e().s[14]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Cell, {
                    fill: COLORS[index % COLORS.length]
                  }, `cell-${index}`);
                })
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Tooltip, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Legend, {})]
            })
          })
        })]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "bg-tertiary p-6 rounded-lg shadow-sm border border-gray-200",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
        className: "text-lg font-medium text-gray-900 mb-4",
        children: "Monthly Sales Trend"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "h-80",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.ResponsiveContainer, {
          width: "100%",
          height: "100%",
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_recharts.LineChart, {
            data: salesData,
            margin: {
              top: 5,
              right: 30,
              left: 20,
              bottom: 5
            },
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.CartesianGrid, {
              strokeDasharray: "3 3"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.XAxis, {
              dataKey: "month"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.YAxis, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Tooltip, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Legend, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Line, {
              type: "monotone",
              dataKey: "sales",
              name: "Monthly Sales (Rs.)",
              stroke: "#4ade80",
              activeDot: {
                r: 8
              }
            })]
          })
        })
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "bg-tertiary rounded-lg shadow-sm border border-gray-200",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex justify-between items-center p-6 border-b border-gray-200",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
          className: "text-lg font-medium text-gray-900",
          children: "Shop Performance"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          className: "text-sm text-primary hover:text-primary-dark",
          children: "View All Shops"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "overflow-x-auto",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("table", {
          className: "w-full",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("thead", {
            className: "bg-gray-50",
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("tr", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("th", {
                className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",
                children: "Shop Name"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("th", {
                className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",
                children: "Sales (Last 30 days)"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("th", {
                className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",
                children: "Current Stock"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("th", {
                className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",
                children: "Actions"
              })]
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("tbody", {
            className: "bg-tertiary divide-y divide-gray-200",
            children: shopsData.map((shop, index) => {
              /* istanbul ignore next */
              cov_18kbsl426e().f[4]++;
              cov_18kbsl426e().s[15]++;
              return /*#__PURE__*/(0, _jsxruntime.jsxs)("tr", {
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("td", {
                  className: "px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900",
                  children: shop.name
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("td", {
                  className: "px-6 py-4 whitespace-nowrap text-sm text-gray-500",
                  children: ["Rs. ", shop.sales.toLocaleString()]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("td", {
                  className: "px-6 py-4 whitespace-nowrap text-sm text-gray-500",
                  children: [shop.stock, " items"]
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("td", {
                  className: "px-6 py-4 whitespace-nowrap text-sm text-primary hover:text-primary-dark",
                  children: /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                    children: "View"
                  })
                })]
              }, index);
            })
          })]
        })
      })]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,