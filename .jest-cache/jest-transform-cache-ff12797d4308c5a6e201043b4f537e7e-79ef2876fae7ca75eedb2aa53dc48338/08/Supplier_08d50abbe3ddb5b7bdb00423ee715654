e1e7cebd9bd4d5599fcca869b8884b60
"use strict";

/* istanbul ignore next */
function cov_2oblxw69ej() {
  var path = "/Users/sachin/Documents/md-sports-/src/lib/models/Supplier.ts";
  var hash = "1c70e0133b11e3b62da104ed691f8ba2318b76a8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/lib/models/Supplier.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 19
        },
        end: {
          line: 11,
          column: 39
        }
      },
      "4": {
        start: {
          line: 12,
          column: 26
        },
        end: {
          line: 12,
          column: 68
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "6": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 83,
          column: 3
        }
      },
      "7": {
        start: {
          line: 24,
          column: 26
        },
        end: {
          line: 24,
          column: 95
        }
      },
      "8": {
        start: {
          line: 84,
          column: 17
        },
        end: {
          line: 84,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 22
          },
          end: {
            line: 24,
            column: 23
          }
        },
        loc: {
          start: {
            line: 24,
            column: 26
          },
          end: {
            line: 24,
            column: 95
          }
        },
        line: 24
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 35
          },
          end: {
            line: 14,
            column: 38
          }
        }, {
          start: {
            line: 14,
            column: 41
          },
          end: {
            line: 16,
            column: 5
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 14
          }
        }, {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 14,
            column: 32
          }
        }],
        line: 14
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/lib/models/Supplier.ts"],
      sourcesContent: ["import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../db';\n\ninterface SupplierAttributes {\n    id: string;\n    name: string;\n    contactPerson: string;\n    email: string;\n    phone: string;\n    address: string;\n    city: string;\n    notes?: string;\n    createdAt: Date;\n    updatedAt: Date;\n    totalPurchases: number;\n    status: 'active' | 'inactive';\n}\n\ninterface SupplierCreationAttributes extends Optional<SupplierAttributes, 'id' | 'createdAt' | 'updatedAt' | 'totalPurchases'> { }\n\nclass Supplier extends Model<SupplierAttributes, SupplierCreationAttributes> implements SupplierAttributes {\n    public id!: string;\n    public name!: string;\n    public contactPerson!: string;\n    public email!: string;\n    public phone!: string;\n    public address!: string;\n    public city!: string;\n    public notes!: string;\n    public createdAt!: Date;\n    public updatedAt!: Date;\n    public totalPurchases!: number;\n    public status!: 'active' | 'inactive';\n}\n\nSupplier.init({\n    id: {\n        type: DataTypes.STRING,\n        primaryKey: true,\n        defaultValue: () => `SUP${Math.floor(Math.random() * 10000).toString().padStart(4, '0')}`\n    },\n    name: {\n        type: DataTypes.STRING,\n        allowNull: false\n    },\n    contactPerson: {\n        type: DataTypes.STRING,\n        allowNull: true\n    },\n    email: {\n        type: DataTypes.STRING,\n        allowNull: true,\n        validate: {\n            isEmail: true\n        }\n    },\n    phone: {\n        type: DataTypes.STRING,\n        allowNull: true\n    },\n    address: {\n        type: DataTypes.STRING,\n        allowNull: true\n    },\n    city: {\n        type: DataTypes.STRING,\n        allowNull: true\n    },\n    notes: {\n        type: DataTypes.TEXT,\n        allowNull: true\n    },\n    totalPurchases: {\n        type: DataTypes.FLOAT,\n        allowNull: false,\n        defaultValue: 0\n    },\n    status: {\n        type: DataTypes.ENUM('active', 'inactive'),\n        allowNull: false,\n        defaultValue: 'active'\n    },\n    createdAt: {\n        type: DataTypes.DATE,\n        allowNull: false,\n        defaultValue: DataTypes.NOW\n    },\n    updatedAt: {\n        type: DataTypes.DATE,\n        allowNull: false,\n        defaultValue: DataTypes.NOW\n    }\n}, {\n    sequelize,\n    modelName: 'Supplier',\n    tableName: 'suppliers',\n    timestamps: true,\n    underscored: true\n});\n\nexport default Supplier; "],
      names: ["Supplier", "Model", "init", "id", "type", "DataTypes", "STRING", "primaryKey", "defaultValue", "Math", "floor", "random", "toString", "padStart", "name", "allowNull", "contactPerson", "email", "validate", "isEmail", "phone", "address", "city", "notes", "TEXT", "totalPurchases", "FLOAT", "status", "ENUM", "createdAt", "DATE", "NOW", "updatedAt", "sequelize", "modelName", "tableName", "timestamps", "underscored"],
      mappings: ";;;;+BAoGA;;;eAAA;;;2BApG2C;2DACrB;;;;;;AAmBtB,MAAMA,iBAAiBC,gBAAK;AAa5B;AAEAD,SAASE,IAAI,CAAC;IACVC,IAAI;QACAC,MAAMC,oBAAS,CAACC,MAAM;QACtBC,YAAY;QACZC,cAAc,IAAM,CAAC,GAAG,EAAEC,KAAKC,KAAK,CAACD,KAAKE,MAAM,KAAK,OAAOC,QAAQ,GAAGC,QAAQ,CAAC,GAAG,KAAK,CAAC;IAC7F;IACAC,MAAM;QACFV,MAAMC,oBAAS,CAACC,MAAM;QACtBS,WAAW;IACf;IACAC,eAAe;QACXZ,MAAMC,oBAAS,CAACC,MAAM;QACtBS,WAAW;IACf;IACAE,OAAO;QACHb,MAAMC,oBAAS,CAACC,MAAM;QACtBS,WAAW;QACXG,UAAU;YACNC,SAAS;QACb;IACJ;IACAC,OAAO;QACHhB,MAAMC,oBAAS,CAACC,MAAM;QACtBS,WAAW;IACf;IACAM,SAAS;QACLjB,MAAMC,oBAAS,CAACC,MAAM;QACtBS,WAAW;IACf;IACAO,MAAM;QACFlB,MAAMC,oBAAS,CAACC,MAAM;QACtBS,WAAW;IACf;IACAQ,OAAO;QACHnB,MAAMC,oBAAS,CAACmB,IAAI;QACpBT,WAAW;IACf;IACAU,gBAAgB;QACZrB,MAAMC,oBAAS,CAACqB,KAAK;QACrBX,WAAW;QACXP,cAAc;IAClB;IACAmB,QAAQ;QACJvB,MAAMC,oBAAS,CAACuB,IAAI,CAAC,UAAU;QAC/Bb,WAAW;QACXP,cAAc;IAClB;IACAqB,WAAW;QACPzB,MAAMC,oBAAS,CAACyB,IAAI;QACpBf,WAAW;QACXP,cAAcH,oBAAS,CAAC0B,GAAG;IAC/B;IACAC,WAAW;QACP5B,MAAMC,oBAAS,CAACyB,IAAI;QACpBf,WAAW;QACXP,cAAcH,oBAAS,CAAC0B,GAAG;IAC/B;AACJ,GAAG;IACCE,WAAAA,WAAS;IACTC,WAAW;IACXC,WAAW;IACXC,YAAY;IACZC,aAAa;AACjB;MAEA,WAAerC"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1c70e0133b11e3b62da104ed691f8ba2318b76a8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2oblxw69ej = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2oblxw69ej();
cov_2oblxw69ej().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2oblxw69ej().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2oblxw69ej().f[0]++;
    cov_2oblxw69ej().s[2]++;
    return _default;
  }
});
const _sequelize =
/* istanbul ignore next */
(cov_2oblxw69ej().s[3]++, require("sequelize"));
const _db =
/* istanbul ignore next */
(/*#__PURE__*/cov_2oblxw69ej().s[4]++, _interop_require_default(require("../db")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2oblxw69ej().f[1]++;
  cov_2oblxw69ej().s[5]++;
  return /* istanbul ignore next */(cov_2oblxw69ej().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2oblxw69ej().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2oblxw69ej().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2oblxw69ej().b[0][1]++, {
    default: obj
  });
}
class Supplier extends
/* istanbul ignore next */
(_sequelize.Model) {}
/* istanbul ignore next */
cov_2oblxw69ej().s[6]++;
Supplier.init({
  id: {
    type: _sequelize.DataTypes.STRING,
    primaryKey: true,
    defaultValue: () => {
      /* istanbul ignore next */
      cov_2oblxw69ej().f[2]++;
      cov_2oblxw69ej().s[7]++;
      return `SUP${Math.floor(Math.random() * 10000).toString().padStart(4, "0")}`;
    }
  },
  name: {
    type: _sequelize.DataTypes.STRING,
    allowNull: false
  },
  contactPerson: {
    type: _sequelize.DataTypes.STRING,
    allowNull: true
  },
  email: {
    type: _sequelize.DataTypes.STRING,
    allowNull: true,
    validate: {
      isEmail: true
    }
  },
  phone: {
    type: _sequelize.DataTypes.STRING,
    allowNull: true
  },
  address: {
    type: _sequelize.DataTypes.STRING,
    allowNull: true
  },
  city: {
    type: _sequelize.DataTypes.STRING,
    allowNull: true
  },
  notes: {
    type: _sequelize.DataTypes.TEXT,
    allowNull: true
  },
  totalPurchases: {
    type: _sequelize.DataTypes.FLOAT,
    allowNull: false,
    defaultValue: 0
  },
  status: {
    type: _sequelize.DataTypes.ENUM("active", "inactive"),
    allowNull: false,
    defaultValue: "active"
  },
  createdAt: {
    type: _sequelize.DataTypes.DATE,
    allowNull: false,
    defaultValue: _sequelize.DataTypes.NOW
  },
  updatedAt: {
    type: _sequelize.DataTypes.DATE,
    allowNull: false,
    defaultValue: _sequelize.DataTypes.NOW
  }
}, {
  sequelize: _db.default,
  modelName: "Supplier",
  tableName: "suppliers",
  timestamps: true,
  underscored: true
});
const _default =
/* istanbul ignore next */
(cov_2oblxw69ej().s[8]++, Supplier);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGVmYXVsdCIsIlN1cHBsaWVyIiwiX3NlcXVlbGl6ZSIsIk1vZGVsIiwiY292XzJvYmx4dzY5ZWoiLCJzIiwiaW5pdCIsImlkIiwidHlwZSIsIkRhdGFUeXBlcyIsIlNUUklORyIsInByaW1hcnlLZXkiLCJkZWZhdWx0VmFsdWUiLCJmIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwidG9TdHJpbmciLCJwYWRTdGFydCIsIm5hbWUiLCJhbGxvd051bGwiLCJjb250YWN0UGVyc29uIiwiZW1haWwiLCJ2YWxpZGF0ZSIsImlzRW1haWwiLCJwaG9uZSIsImFkZHJlc3MiLCJjaXR5Iiwibm90ZXMiLCJURVhUIiwidG90YWxQdXJjaGFzZXMiLCJGTE9BVCIsInN0YXR1cyIsIkVOVU0iLCJjcmVhdGVkQXQiLCJEQVRFIiwiTk9XIiwidXBkYXRlZEF0Iiwic2VxdWVsaXplIiwiX2RiIiwiZGVmYXVsdCIsIm1vZGVsTmFtZSIsInRhYmxlTmFtZSIsInRpbWVzdGFtcHMiLCJ1bmRlcnNjb3JlZCJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWNoaW4vRG9jdW1lbnRzL21kLXNwb3J0cy0vc3JjL2xpYi9tb2RlbHMvU3VwcGxpZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGF0YVR5cGVzLCBNb2RlbCwgT3B0aW9uYWwgfSBmcm9tICdzZXF1ZWxpemUnO1xuaW1wb3J0IHNlcXVlbGl6ZSBmcm9tICcuLi9kYic7XG5cbmludGVyZmFjZSBTdXBwbGllckF0dHJpYnV0ZXMge1xuICAgIGlkOiBzdHJpbmc7XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIGNvbnRhY3RQZXJzb246IHN0cmluZztcbiAgICBlbWFpbDogc3RyaW5nO1xuICAgIHBob25lOiBzdHJpbmc7XG4gICAgYWRkcmVzczogc3RyaW5nO1xuICAgIGNpdHk6IHN0cmluZztcbiAgICBub3Rlcz86IHN0cmluZztcbiAgICBjcmVhdGVkQXQ6IERhdGU7XG4gICAgdXBkYXRlZEF0OiBEYXRlO1xuICAgIHRvdGFsUHVyY2hhc2VzOiBudW1iZXI7XG4gICAgc3RhdHVzOiAnYWN0aXZlJyB8ICdpbmFjdGl2ZSc7XG59XG5cbmludGVyZmFjZSBTdXBwbGllckNyZWF0aW9uQXR0cmlidXRlcyBleHRlbmRzIE9wdGlvbmFsPFN1cHBsaWVyQXR0cmlidXRlcywgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ3VwZGF0ZWRBdCcgfCAndG90YWxQdXJjaGFzZXMnPiB7IH1cblxuY2xhc3MgU3VwcGxpZXIgZXh0ZW5kcyBNb2RlbDxTdXBwbGllckF0dHJpYnV0ZXMsIFN1cHBsaWVyQ3JlYXRpb25BdHRyaWJ1dGVzPiBpbXBsZW1lbnRzIFN1cHBsaWVyQXR0cmlidXRlcyB7XG4gICAgcHVibGljIGlkITogc3RyaW5nO1xuICAgIHB1YmxpYyBuYW1lITogc3RyaW5nO1xuICAgIHB1YmxpYyBjb250YWN0UGVyc29uITogc3RyaW5nO1xuICAgIHB1YmxpYyBlbWFpbCE6IHN0cmluZztcbiAgICBwdWJsaWMgcGhvbmUhOiBzdHJpbmc7XG4gICAgcHVibGljIGFkZHJlc3MhOiBzdHJpbmc7XG4gICAgcHVibGljIGNpdHkhOiBzdHJpbmc7XG4gICAgcHVibGljIG5vdGVzITogc3RyaW5nO1xuICAgIHB1YmxpYyBjcmVhdGVkQXQhOiBEYXRlO1xuICAgIHB1YmxpYyB1cGRhdGVkQXQhOiBEYXRlO1xuICAgIHB1YmxpYyB0b3RhbFB1cmNoYXNlcyE6IG51bWJlcjtcbiAgICBwdWJsaWMgc3RhdHVzITogJ2FjdGl2ZScgfCAnaW5hY3RpdmUnO1xufVxuXG5TdXBwbGllci5pbml0KHtcbiAgICBpZDoge1xuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgICAgICBwcmltYXJ5S2V5OiB0cnVlLFxuICAgICAgICBkZWZhdWx0VmFsdWU6ICgpID0+IGBTVVAke01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMDAwKS50b1N0cmluZygpLnBhZFN0YXJ0KDQsICcwJyl9YFxuICAgIH0sXG4gICAgbmFtZToge1xuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGw6IGZhbHNlXG4gICAgfSxcbiAgICBjb250YWN0UGVyc29uOiB7XG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbDogdHJ1ZVxuICAgIH0sXG4gICAgZW1haWw6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsOiB0cnVlLFxuICAgICAgICB2YWxpZGF0ZToge1xuICAgICAgICAgICAgaXNFbWFpbDogdHJ1ZVxuICAgICAgICB9XG4gICAgfSxcbiAgICBwaG9uZToge1xuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGw6IHRydWVcbiAgICB9LFxuICAgIGFkZHJlc3M6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsOiB0cnVlXG4gICAgfSxcbiAgICBjaXR5OiB7XG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbDogdHJ1ZVxuICAgIH0sXG4gICAgbm90ZXM6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLlRFWFQsXG4gICAgICAgIGFsbG93TnVsbDogdHJ1ZVxuICAgIH0sXG4gICAgdG90YWxQdXJjaGFzZXM6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLkZMT0FULFxuICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgICBkZWZhdWx0VmFsdWU6IDBcbiAgICB9LFxuICAgIHN0YXR1czoge1xuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuRU5VTSgnYWN0aXZlJywgJ2luYWN0aXZlJyksXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogJ2FjdGl2ZSdcbiAgICB9LFxuICAgIGNyZWF0ZWRBdDoge1xuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuREFURSxcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgICAgZGVmYXVsdFZhbHVlOiBEYXRhVHlwZXMuTk9XXG4gICAgfSxcbiAgICB1cGRhdGVkQXQ6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLkRBVEUsXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogRGF0YVR5cGVzLk5PV1xuICAgIH1cbn0sIHtcbiAgICBzZXF1ZWxpemUsXG4gICAgbW9kZWxOYW1lOiAnU3VwcGxpZXInLFxuICAgIHRhYmxlTmFtZTogJ3N1cHBsaWVycycsXG4gICAgdGltZXN0YW1wczogdHJ1ZSxcbiAgICB1bmRlcnNjb3JlZDogdHJ1ZVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IFN1cHBsaWVyOyAiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrQkFvR0E7Ozs7OztXQUFBQSxRQUFBOzs7OztrQ0FwRzJDOzs7d0VBQ3JCOzs7Ozs7Ozs7Ozs7Ozs7QUFtQnRCLE1BQU1DLFFBQUE7QUFBQTtBQUFBLENBQWlCQyxVQUFBLENBQUFDLEtBQUs7QUFhNUI7QUFBQUMsY0FBQSxHQUFBQyxDQUFBO0FBRUFKLFFBQUEsQ0FBU0ssSUFBSSxDQUFDO0VBQ1ZDLEVBQUEsRUFBSTtJQUNBQyxJQUFBLEVBQU1OLFVBQUEsQ0FBQU8sU0FBUyxDQUFDQyxNQUFNO0lBQ3RCQyxVQUFBLEVBQVk7SUFDWkMsWUFBQSxFQUFjQSxDQUFBLEtBQU07TUFBQTtNQUFBUixjQUFBLEdBQUFTLENBQUE7TUFBQVQsY0FBQSxHQUFBQyxDQUFBO01BQUEsYUFBTVMsSUFBQSxDQUFLQyxLQUFLLENBQUNELElBQUEsQ0FBS0UsTUFBTSxLQUFLLE9BQU9DLFFBQVEsR0FBR0MsUUFBUSxDQUFDLEdBQUcsTUFBTTtJQUFEO0VBQzVGO0VBQ0FDLElBQUEsRUFBTTtJQUNGWCxJQUFBLEVBQU1OLFVBQUEsQ0FBQU8sU0FBUyxDQUFDQyxNQUFNO0lBQ3RCVSxTQUFBLEVBQVc7RUFDZjtFQUNBQyxhQUFBLEVBQWU7SUFDWGIsSUFBQSxFQUFNTixVQUFBLENBQUFPLFNBQVMsQ0FBQ0MsTUFBTTtJQUN0QlUsU0FBQSxFQUFXO0VBQ2Y7RUFDQUUsS0FBQSxFQUFPO0lBQ0hkLElBQUEsRUFBTU4sVUFBQSxDQUFBTyxTQUFTLENBQUNDLE1BQU07SUFDdEJVLFNBQUEsRUFBVztJQUNYRyxRQUFBLEVBQVU7TUFDTkMsT0FBQSxFQUFTO0lBQ2I7RUFDSjtFQUNBQyxLQUFBLEVBQU87SUFDSGpCLElBQUEsRUFBTU4sVUFBQSxDQUFBTyxTQUFTLENBQUNDLE1BQU07SUFDdEJVLFNBQUEsRUFBVztFQUNmO0VBQ0FNLE9BQUEsRUFBUztJQUNMbEIsSUFBQSxFQUFNTixVQUFBLENBQUFPLFNBQVMsQ0FBQ0MsTUFBTTtJQUN0QlUsU0FBQSxFQUFXO0VBQ2Y7RUFDQU8sSUFBQSxFQUFNO0lBQ0ZuQixJQUFBLEVBQU1OLFVBQUEsQ0FBQU8sU0FBUyxDQUFDQyxNQUFNO0lBQ3RCVSxTQUFBLEVBQVc7RUFDZjtFQUNBUSxLQUFBLEVBQU87SUFDSHBCLElBQUEsRUFBTU4sVUFBQSxDQUFBTyxTQUFTLENBQUNvQixJQUFJO0lBQ3BCVCxTQUFBLEVBQVc7RUFDZjtFQUNBVSxjQUFBLEVBQWdCO0lBQ1p0QixJQUFBLEVBQU1OLFVBQUEsQ0FBQU8sU0FBUyxDQUFDc0IsS0FBSztJQUNyQlgsU0FBQSxFQUFXO0lBQ1hSLFlBQUEsRUFBYztFQUNsQjtFQUNBb0IsTUFBQSxFQUFRO0lBQ0p4QixJQUFBLEVBQU1OLFVBQUEsQ0FBQU8sU0FBUyxDQUFDd0IsSUFBSSxDQUFDLFVBQVU7SUFDL0JiLFNBQUEsRUFBVztJQUNYUixZQUFBLEVBQWM7RUFDbEI7RUFDQXNCLFNBQUEsRUFBVztJQUNQMUIsSUFBQSxFQUFNTixVQUFBLENBQUFPLFNBQVMsQ0FBQzBCLElBQUk7SUFDcEJmLFNBQUEsRUFBVztJQUNYUixZQUFBLEVBQWNWLFVBQUEsQ0FBQU8sU0FBUyxDQUFDMkI7RUFDNUI7RUFDQUMsU0FBQSxFQUFXO0lBQ1A3QixJQUFBLEVBQU1OLFVBQUEsQ0FBQU8sU0FBUyxDQUFDMEIsSUFBSTtJQUNwQmYsU0FBQSxFQUFXO0lBQ1hSLFlBQUEsRUFBY1YsVUFBQSxDQUFBTyxTQUFTLENBQUMyQjtFQUM1QjtBQUNKLEdBQUc7RUFDQ0UsU0FBQSxFQUFBQyxHQUFBLENBQUFDLE9BQVM7RUFDVEMsU0FBQSxFQUFXO0VBQ1hDLFNBQUEsRUFBVztFQUNYQyxVQUFBLEVBQVk7RUFDWkMsV0FBQSxFQUFhO0FBQ2pCO01BRUE1QyxRQUFBO0FBQUE7QUFBQSxDQUFBSSxjQUFBLEdBQUFDLENBQUEsT0FBZUosUUFBQSIsImlnbm9yZUxpc3QiOltdfQ==