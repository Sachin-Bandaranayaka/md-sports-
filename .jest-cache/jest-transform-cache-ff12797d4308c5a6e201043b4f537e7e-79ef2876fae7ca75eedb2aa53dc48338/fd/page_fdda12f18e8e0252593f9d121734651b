899edeb86d55b96de879c6cfdee64c06
"use strict";

/* istanbul ignore next */
function cov_1wzwe2l5ja() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/inventory/page.tsx";
  var hash = "7d2e821ac11680a7899e20741194300f8366c321";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/inventory/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 25
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 26
        }
      },
      "6": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 48
        }
      },
      "7": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "8": {
        start: {
          line: 21,
          column: 17
        },
        end: {
          line: 21,
          column: 40
        }
      },
      "9": {
        start: {
          line: 22,
          column: 34
        },
        end: {
          line: 22,
          column: 105
        }
      },
      "10": {
        start: {
          line: 23,
          column: 46
        },
        end: {
          line: 23,
          column: 132
        }
      },
      "11": {
        start: {
          line: 24,
          column: 46
        },
        end: {
          line: 24,
          column: 132
        }
      },
      "12": {
        start: {
          line: 25,
          column: 25
        },
        end: {
          line: 25,
          column: 73
        }
      },
      "13": {
        start: {
          line: 26,
          column: 21
        },
        end: {
          line: 26,
          column: 63
        }
      },
      "14": {
        start: {
          line: 27,
          column: 22
        },
        end: {
          line: 27,
          column: 65
        }
      },
      "15": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 31,
          column: 6
        }
      },
      "16": {
        start: {
          line: 33,
          column: 19
        },
        end: {
          line: 33,
          column: 20
        }
      },
      "17": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "18": {
        start: {
          line: 36,
          column: 35
        },
        end: {
          line: 44,
          column: 10
        }
      },
      "19": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "20": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 117
        }
      },
      "21": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 22
        }
      },
      "22": {
        start: {
          line: 49,
          column: 31
        },
        end: {
          line: 49,
          column: 62
        }
      },
      "23": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 65
        }
      },
      "24": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 58
        }
      },
      "25": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 18
        }
      },
      "26": {
        start: {
          line: 57,
          column: 24
        },
        end: {
          line: 57,
          column: 53
        }
      },
      "27": {
        start: {
          line: 58,
          column: 17
        },
        end: {
          line: 58,
          column: 60
        }
      },
      "28": {
        start: {
          line: 59,
          column: 21
        },
        end: {
          line: 59,
          column: 80
        }
      },
      "29": {
        start: {
          line: 60,
          column: 20
        },
        end: {
          line: 60,
          column: 43
        }
      },
      "30": {
        start: {
          line: 61,
          column: 25
        },
        end: {
          line: 61,
          column: 49
        }
      },
      "31": {
        start: {
          line: 62,
          column: 17
        },
        end: {
          line: 62,
          column: 52
        }
      },
      "32": {
        start: {
          line: 63,
          column: 18
        },
        end: {
          line: 63,
          column: 55
        }
      },
      "33": {
        start: {
          line: 64,
          column: 19
        },
        end: {
          line: 64,
          column: 45
        }
      },
      "34": {
        start: {
          line: 65,
          column: 27
        },
        end: {
          line: 65,
          column: 55
        }
      },
      "35": {
        start: {
          line: 66,
          column: 25
        },
        end: {
          line: 66,
          column: 51
        }
      },
      "36": {
        start: {
          line: 67,
          column: 24
        },
        end: {
          line: 70,
          column: 6
        }
      },
      "37": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 53
        }
      },
      "38": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 71,
          column: 53
        }
      },
      "39": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 71
        }
      },
      "40": {
        start: {
          line: 72,
          column: 24
        },
        end: {
          line: 72,
          column: 71
        }
      },
      "41": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 65
        }
      },
      "42": {
        start: {
          line: 73,
          column: 22
        },
        end: {
          line: 73,
          column: 65
        }
      },
      "43": {
        start: {
          line: 75,
          column: 24
        },
        end: {
          line: 75,
          column: 53
        }
      },
      "44": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 83
        }
      },
      "45": {
        start: {
          line: 77,
          column: 24
        },
        end: {
          line: 77,
          column: 61
        }
      },
      "46": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 78,
          column: 111
        }
      },
      "47": {
        start: {
          line: 80,
          column: 27
        },
        end: {
          line: 82,
          column: 5
        }
      },
      "48": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "49": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 66
        }
      },
      "50": {
        start: {
          line: 87,
          column: 23
        },
        end: {
          line: 87,
          column: 69
        }
      },
      "51": {
        start: {
          line: 89,
          column: 30
        },
        end: {
          line: 98,
          column: 6
        }
      },
      "52": {
        start: {
          line: 99,
          column: 25
        },
        end: {
          line: 99,
          column: 27
        }
      },
      "53": {
        start: {
          line: 100,
          column: 21
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "54": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 121,
          column: 5
        }
      },
      "55": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 115
        }
      },
      "56": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "57": {
        start: {
          line: 111,
          column: 34
        },
        end: {
          line: 111,
          column: 64
        }
      },
      "58": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 117,
          column: 13
        }
      },
      "59": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 113,
          column: 52
        }
      },
      "60": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 68
        }
      },
      "61": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 116,
          column: 96
        }
      },
      "62": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 69
        }
      },
      "63": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 165,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 13
          },
          end: {
            line: 12,
            column: 14
          }
        },
        loc: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 16
          },
          end: {
            line: 15,
            column: 17
          }
        },
        loc: {
          start: {
            line: 15,
            column: 27
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 28,
            column: 9
          },
          end: {
            line: 28,
            column: 33
          }
        },
        loc: {
          start: {
            line: 28,
            column: 39
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 28
      },
      "4": {
        name: "fetchCategories",
        decl: {
          start: {
            line: 34,
            column: 15
          },
          end: {
            line: 34,
            column: 30
          }
        },
        loc: {
          start: {
            line: 34,
            column: 49
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 34
      },
      "5": {
        name: "Inventory",
        decl: {
          start: {
            line: 56,
            column: 15
          },
          end: {
            line: 56,
            column: 24
          }
        },
        loc: {
          start: {
            line: 56,
            column: 63
          },
          end: {
            line: 166,
            column: 1
          }
        },
        line: 56
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 11
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 35
          },
          end: {
            line: 29,
            column: 38
          }
        }, {
          start: {
            line: 29,
            column: 41
          },
          end: {
            line: 31,
            column: 5
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 11
          },
          end: {
            line: 29,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 11
          },
          end: {
            line: 29,
            column: 14
          }
        }, {
          start: {
            line: 29,
            column: 18
          },
          end: {
            line: 29,
            column: 32
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "3": {
        loc: {
          start: {
            line: 50,
            column: 15
          },
          end: {
            line: 50,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 50,
            column: 40
          },
          end: {
            line: 50,
            column: 59
          }
        }, {
          start: {
            line: 50,
            column: 62
          },
          end: {
            line: 50,
            column: 64
          }
        }],
        line: 50
      },
      "4": {
        loc: {
          start: {
            line: 58,
            column: 17
          },
          end: {
            line: 58,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 17
          },
          end: {
            line: 58,
            column: 40
          }
        }, {
          start: {
            line: 58,
            column: 44
          },
          end: {
            line: 58,
            column: 60
          }
        }],
        line: 58
      },
      "5": {
        loc: {
          start: {
            line: 59,
            column: 21
          },
          end: {
            line: 59,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 64
          },
          end: {
            line: 59,
            column: 70
          }
        }, {
          start: {
            line: 59,
            column: 73
          },
          end: {
            line: 59,
            column: 80
          }
        }],
        line: 59
      },
      "6": {
        loc: {
          start: {
            line: 62,
            column: 26
          },
          end: {
            line: 62,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 26
          },
          end: {
            line: 62,
            column: 44
          }
        }, {
          start: {
            line: 62,
            column: 48
          },
          end: {
            line: 62,
            column: 51
          }
        }],
        line: 62
      },
      "7": {
        loc: {
          start: {
            line: 63,
            column: 27
          },
          end: {
            line: 63,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 27
          },
          end: {
            line: 63,
            column: 46
          }
        }, {
          start: {
            line: 63,
            column: 50
          },
          end: {
            line: 63,
            column: 54
          }
        }],
        line: 63
      },
      "8": {
        loc: {
          start: {
            line: 64,
            column: 19
          },
          end: {
            line: 64,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 19
          },
          end: {
            line: 64,
            column: 39
          }
        }, {
          start: {
            line: 64,
            column: 43
          },
          end: {
            line: 64,
            column: 45
          }
        }],
        line: 64
      },
      "9": {
        loc: {
          start: {
            line: 65,
            column: 27
          },
          end: {
            line: 65,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 27
          },
          end: {
            line: 65,
            column: 49
          }
        }, {
          start: {
            line: 65,
            column: 53
          },
          end: {
            line: 65,
            column: 55
          }
        }],
        line: 65
      },
      "10": {
        loc: {
          start: {
            line: 66,
            column: 25
          },
          end: {
            line: 66,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 25
          },
          end: {
            line: 66,
            column: 45
          }
        }, {
          start: {
            line: 66,
            column: 49
          },
          end: {
            line: 66,
            column: 51
          }
        }],
        line: 66
      },
      "11": {
        loc: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 53
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "12": {
        loc: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 72,
            column: 71
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 72,
            column: 71
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "13": {
        loc: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "14": {
        loc: {
          start: {
            line: 78,
            column: 45
          },
          end: {
            line: 78,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 78,
            column: 59
          },
          end: {
            line: 78,
            column: 95
          }
        }, {
          start: {
            line: 78,
            column: 98
          },
          end: {
            line: 78,
            column: 109
          }
        }],
        line: 78
      },
      "15": {
        loc: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "16": {
        loc: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        }, {
          start: {
            line: 109,
            column: 11
          },
          end: {
            line: 121,
            column: 5
          }
        }],
        line: 106
      },
      "17": {
        loc: {
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 117,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 117,
            column: 13
          }
        }, {
          start: {
            line: 115,
            column: 19
          },
          end: {
            line: 117,
            column: 13
          }
        }],
        line: 112
      },
      "18": {
        loc: {
          start: {
            line: 114,
            column: 29
          },
          end: {
            line: 114,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 29
          },
          end: {
            line: 114,
            column: 53
          }
        }, {
          start: {
            line: 114,
            column: 57
          },
          end: {
            line: 114,
            column: 67
          }
        }],
        line: 114
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/inventory/page.tsx"],
      sourcesContent: ["import { Suspense } from 'react';\nimport { headers, cookies } from 'next/headers';\nimport MainLayout from '@/components/layout/MainLayout';\nimport InventoryClientWrapper from '@/components/inventory/InventoryClientWrapper';\nimport InventoryHeaderActions from '@/components/inventory/InventoryHeaderActions';\nimport { PermissionGuard } from '@/components/auth/PermissionGuard';\nimport { PERMISSIONS } from '@/lib/constants/permissions';\nimport { AccessDenied } from '@/components/ui/AccessDenied';\n\n// Add revalidation - cache inventory page for 5 seconds (reduced from 10)\nexport const revalidate = 5;\n\n// Define proper types for our data\ninterface BranchStock {\n    shopId: number;\n    shopName: string;\n    quantity: number;\n}\n\ninterface InventoryItem {\n    id: number;\n    sku: string;\n    name: string;\n    category: string;\n    stock: number;\n    retailPrice: number;\n    weightedAverageCost: number;\n    status: string;\n    branchStock: BranchStock[];\n}\n\ninterface Category {\n    id: number;\n    name: string;\n}\n\ninterface InventorySearchParams {\n    page?: string;\n    limit?: string;\n    search?: string;\n    category?: string;\n    status?: string;\n}\n\nasync function fetchCategories(baseUrl: string, headers?: HeadersInit) {\n    try {\n        const categoriesResponse = await fetch(`${baseUrl}/api/categories`, {\n            headers,\n            next: { \n                revalidate: 30, // Revalidate every 30 seconds\n                tags: ['categories'] // Add tags for revalidation\n            }\n        });\n        if (!categoriesResponse.ok) {\n            console.error('Failed to fetch categories:', categoriesResponse.status, await categoriesResponse.text());\n            return []; // Return empty array on error\n        }\n        const categoriesData = await categoriesResponse.json();\n        return categoriesData.success ? categoriesData.data : [];\n    } catch (error) {\n        console.error('Error in fetchCategories:', error);\n        return [];\n    }\n}\n\nexport default async function Inventory({\n    searchParams: passedSearchParams\n}: {\n    searchParams: InventorySearchParams\n}) {\n    const headersList = await headers();\n    const host = headersList.get('host') || 'localhost:3000';\n    const protocol = process?.env?.NODE_ENV === 'development' ? 'http' : 'https';\n    const baseUrl = `${protocol}://${host}`;\n\n    const searchParams = await passedSearchParams;\n\n    const page = parseInt(searchParams?.page || '1');\n    const limit = parseInt(searchParams?.limit || '10');\n    const search = searchParams?.search || '';\n    const categoryFilter = searchParams?.category || '';\n    const statusFilter = searchParams?.status || '';\n\n    const queryParams = new URLSearchParams({\n        page: page.toString(),\n        limit: limit.toString()\n    });\n    if (search) queryParams.append('search', search);\n    if (categoryFilter) queryParams.append('category', categoryFilter);\n    if (statusFilter) queryParams.append('status', statusFilter);\n\n    // Get access token from cookies for authentication\n    const cookieStore = await cookies();\n    console.log('All cookies received on server component:', cookieStore.getAll());\n    const accessToken = cookieStore.get('accessToken')?.value;\n    console.log('Access token from cookie:', accessToken ? `${accessToken.substring(0, 10)}...` : 'Not Found');\n\n    // Prepare headers for authenticated requests\n    const requestHeaders: HeadersInit = {\n        'Content-Type': 'application/json',\n    };\n\n    if (accessToken) {\n        requestHeaders['Authorization'] = `Bearer ${accessToken}`;\n    }\n\n    // Fetch categories from the new API route with caching\n    const categories: Category[] = await fetchCategories(baseUrl, requestHeaders);\n\n    // Fetch inventory data with pagination and filters\n    const inventoryResponse = await fetch(\n        `${baseUrl}/api/inventory/summary?${queryParams.toString()}`,\n        {\n            headers: requestHeaders,\n            next: { \n                revalidate: 10, // Revalidate every 10 seconds to match page revalidation time\n                tags: ['inventory', 'products'] // Add tags for revalidation\n            }\n        }\n    );\n\n    let inventoryItems: InventoryItem[] = [];\n    let pagination = {\n        total: 0,\n        page: 1,\n        limit: 10,\n        totalPages: 0\n    };\n\n    if (!inventoryResponse.ok) {\n        console.error('Failed to fetch inventory data:', inventoryResponse.status, await inventoryResponse.text());\n        // Potentially set an error state to display to the user\n    } else {\n        try {\n            const inventoryData = await inventoryResponse.json();\n            if (inventoryData.success) {\n                inventoryItems = inventoryData.data;\n                pagination = inventoryData.pagination || pagination;\n            } else {\n                console.error('Inventory data API call not successful:', inventoryData.message);\n            }\n        } catch (e) {\n            console.error('Failed to parse inventory data JSON:', e);\n        }\n    }\n\n    return (\n        <MainLayout>\n            <PermissionGuard\n                permission={PERMISSIONS.INVENTORY_VIEW}\n                fallback={<AccessDenied message=\"You do not have permission to view the inventory.\" />}\n            >\n                <div className=\"space-y-6\">\n                    <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\n                        <div>\n                            <h1 className=\"text-2xl font-bold text-gray-900\">Inventory Management</h1>\n                            <p className=\"text-gray-500\">Manage your product inventory across all shops</p>\n                        </div>\n                        <InventoryHeaderActions />\n                    </div>\n\n                    <Suspense fallback={<div>Loading inventory...</div>}>\n                        <InventoryClientWrapper\n                            initialInventoryItems={inventoryItems}\n                            initialCategories={categories}\n                            initialPagination={pagination}\n                            initialSearchTerm={search}\n                            initialCategoryFilter={categoryFilter}\n                            initialStatusFilter={statusFilter}\n                        />\n                    </Suspense>\n                </div>\n            </PermissionGuard>\n        </MainLayout>\n    );\n}"],
      names: ["Inventory", "revalidate", "fetchCategories", "baseUrl", "headers", "categoriesResponse", "fetch", "next", "tags", "ok", "console", "error", "status", "text", "categoriesData", "json", "success", "data", "searchParams", "passedSearchParams", "headersList", "host", "get", "protocol", "process", "env", "NODE_ENV", "page", "parseInt", "limit", "search", "categoryFilter", "category", "statusFilter", "queryParams", "URLSearchParams", "toString", "append", "cookieStore", "cookies", "log", "getAll", "accessToken", "value", "substring", "requestHeaders", "categories", "inventoryResponse", "inventoryItems", "pagination", "total", "totalPages", "inventoryData", "message", "e", "MainLayout", "PermissionGuard", "permission", "PERMISSIONS", "INVENTORY_VIEW", "fallback", "AccessDenied", "div", "className", "h1", "p", "InventoryHeaderActions", "Suspense", "InventoryClientWrapper", "initialInventoryItems", "initialCategories", "initialPagination", "initialSearchTerm", "initialCategoryFilter", "initialStatusFilter"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7d2e821ac11680a7899e20741194300f8366c321"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1wzwe2l5ja = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1wzwe2l5ja();
cov_1wzwe2l5ja().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1wzwe2l5ja().f[0]++;
  cov_1wzwe2l5ja().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1wzwe2l5ja().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1wzwe2l5ja().s[3]++;
_export(exports, {
  default: function () {
    /* istanbul ignore next */
    cov_1wzwe2l5ja().f[1]++;
    cov_1wzwe2l5ja().s[4]++;
    return Inventory;
  },
  revalidate: function () {
    /* istanbul ignore next */
    cov_1wzwe2l5ja().f[2]++;
    cov_1wzwe2l5ja().s[5]++;
    return revalidate;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1wzwe2l5ja().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_1wzwe2l5ja().s[7]++, require("react"));
const _headers =
/* istanbul ignore next */
(cov_1wzwe2l5ja().s[8]++, require("next/headers"));
const _MainLayout =
/* istanbul ignore next */
(/*#__PURE__*/cov_1wzwe2l5ja().s[9]++, _interop_require_default(require("../../components/layout/MainLayout")));
const _InventoryClientWrapper =
/* istanbul ignore next */
(/*#__PURE__*/cov_1wzwe2l5ja().s[10]++, _interop_require_default(require("../../components/inventory/InventoryClientWrapper")));
const _InventoryHeaderActions =
/* istanbul ignore next */
(/*#__PURE__*/cov_1wzwe2l5ja().s[11]++, _interop_require_default(require("../../components/inventory/InventoryHeaderActions")));
const _PermissionGuard =
/* istanbul ignore next */
(cov_1wzwe2l5ja().s[12]++, require("../../components/auth/PermissionGuard"));
const _permissions =
/* istanbul ignore next */
(cov_1wzwe2l5ja().s[13]++, require("../../lib/constants/permissions"));
const _AccessDenied =
/* istanbul ignore next */
(cov_1wzwe2l5ja().s[14]++, require("../../components/ui/AccessDenied"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1wzwe2l5ja().f[3]++;
  cov_1wzwe2l5ja().s[15]++;
  return /* istanbul ignore next */(cov_1wzwe2l5ja().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[0][1]++, {
    default: obj
  });
}
const revalidate =
/* istanbul ignore next */
(cov_1wzwe2l5ja().s[16]++, 5);
async function fetchCategories(baseUrl, headers) {
  /* istanbul ignore next */
  cov_1wzwe2l5ja().f[4]++;
  cov_1wzwe2l5ja().s[17]++;
  try {
    const categoriesResponse =
    /* istanbul ignore next */
    (cov_1wzwe2l5ja().s[18]++, await fetch(`${baseUrl}/api/categories`, {
      headers,
      next: {
        revalidate: 30,
        tags: ["categories"] // Add tags for revalidation
      }
    }));
    /* istanbul ignore next */
    cov_1wzwe2l5ja().s[19]++;
    if (!categoriesResponse.ok) {
      /* istanbul ignore next */
      cov_1wzwe2l5ja().b[2][0]++;
      cov_1wzwe2l5ja().s[20]++;
      console.error("Failed to fetch categories:", categoriesResponse.status, await categoriesResponse.text());
      /* istanbul ignore next */
      cov_1wzwe2l5ja().s[21]++;
      return []; // Return empty array on error
    } else
    /* istanbul ignore next */
    {
      cov_1wzwe2l5ja().b[2][1]++;
    }
    const categoriesData =
    /* istanbul ignore next */
    (cov_1wzwe2l5ja().s[22]++, await categoriesResponse.json());
    /* istanbul ignore next */
    cov_1wzwe2l5ja().s[23]++;
    return categoriesData.success ?
    /* istanbul ignore next */
    (cov_1wzwe2l5ja().b[3][0]++, categoriesData.data) :
    /* istanbul ignore next */
    (cov_1wzwe2l5ja().b[3][1]++, []);
  } catch (error) {
    /* istanbul ignore next */
    cov_1wzwe2l5ja().s[24]++;
    console.error("Error in fetchCategories:", error);
    /* istanbul ignore next */
    cov_1wzwe2l5ja().s[25]++;
    return [];
  }
}
async function Inventory({
  searchParams: passedSearchParams
}) {
  /* istanbul ignore next */
  cov_1wzwe2l5ja().f[5]++;
  const headersList =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[26]++, await (0, _headers.headers)());
  const host =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[27]++,
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[4][0]++, headersList.get("host")) ||
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[4][1]++, "localhost:3000"));
  const protocol =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[28]++, process?.env?.NODE_ENV === "development" ?
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[5][0]++, "http") :
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[5][1]++, "https"));
  const baseUrl =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[29]++, `${protocol}://${host}`);
  const searchParams =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[30]++, await passedSearchParams);
  const page =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[31]++, parseInt(
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[6][0]++, searchParams?.page) ||
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[6][1]++, "1")));
  const limit =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[32]++, parseInt(
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[7][0]++, searchParams?.limit) ||
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[7][1]++, "10")));
  const search =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[33]++,
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[8][0]++, searchParams?.search) ||
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[8][1]++, ""));
  const categoryFilter =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[34]++,
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[9][0]++, searchParams?.category) ||
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[9][1]++, ""));
  const statusFilter =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[35]++,
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[10][0]++, searchParams?.status) ||
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[10][1]++, ""));
  const queryParams =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[36]++, new URLSearchParams({
    page: page.toString(),
    limit: limit.toString()
  }));
  /* istanbul ignore next */
  cov_1wzwe2l5ja().s[37]++;
  if (search) {
    /* istanbul ignore next */
    cov_1wzwe2l5ja().b[11][0]++;
    cov_1wzwe2l5ja().s[38]++;
    queryParams.append("search", search);
  } else
  /* istanbul ignore next */
  {
    cov_1wzwe2l5ja().b[11][1]++;
  }
  cov_1wzwe2l5ja().s[39]++;
  if (categoryFilter) {
    /* istanbul ignore next */
    cov_1wzwe2l5ja().b[12][0]++;
    cov_1wzwe2l5ja().s[40]++;
    queryParams.append("category", categoryFilter);
  } else
  /* istanbul ignore next */
  {
    cov_1wzwe2l5ja().b[12][1]++;
  }
  cov_1wzwe2l5ja().s[41]++;
  if (statusFilter) {
    /* istanbul ignore next */
    cov_1wzwe2l5ja().b[13][0]++;
    cov_1wzwe2l5ja().s[42]++;
    queryParams.append("status", statusFilter);
  } else
  /* istanbul ignore next */
  {
    cov_1wzwe2l5ja().b[13][1]++;
  }
  // Get access token from cookies for authentication
  const cookieStore =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[43]++, await (0, _headers.cookies)());
  /* istanbul ignore next */
  cov_1wzwe2l5ja().s[44]++;
  console.log("All cookies received on server component:", cookieStore.getAll());
  const accessToken =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[45]++, cookieStore.get("accessToken")?.value);
  /* istanbul ignore next */
  cov_1wzwe2l5ja().s[46]++;
  console.log("Access token from cookie:", accessToken ?
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[14][0]++, `${accessToken.substring(0, 10)}...`) :
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().b[14][1]++, "Not Found"));
  // Prepare headers for authenticated requests
  const requestHeaders =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[47]++, {
    "Content-Type": "application/json"
  });
  /* istanbul ignore next */
  cov_1wzwe2l5ja().s[48]++;
  if (accessToken) {
    /* istanbul ignore next */
    cov_1wzwe2l5ja().b[15][0]++;
    cov_1wzwe2l5ja().s[49]++;
    requestHeaders["Authorization"] = `Bearer ${accessToken}`;
  } else
  /* istanbul ignore next */
  {
    cov_1wzwe2l5ja().b[15][1]++;
  }
  // Fetch categories from the new API route with caching
  const categories =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[50]++, await fetchCategories(baseUrl, requestHeaders));
  // Fetch inventory data with pagination and filters
  const inventoryResponse =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[51]++, await fetch(`${baseUrl}/api/inventory/summary?${queryParams.toString()}`, {
    headers: requestHeaders,
    next: {
      revalidate: 10,
      tags: ["inventory", "products"] // Add tags for revalidation
    }
  }));
  let inventoryItems =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[52]++, []);
  let pagination =
  /* istanbul ignore next */
  (cov_1wzwe2l5ja().s[53]++, {
    total: 0,
    page: 1,
    limit: 10,
    totalPages: 0
  });
  /* istanbul ignore next */
  cov_1wzwe2l5ja().s[54]++;
  if (!inventoryResponse.ok) {
    /* istanbul ignore next */
    cov_1wzwe2l5ja().b[16][0]++;
    cov_1wzwe2l5ja().s[55]++;
    console.error("Failed to fetch inventory data:", inventoryResponse.status, await inventoryResponse.text());
    // Potentially set an error state to display to the user
  } else {
    /* istanbul ignore next */
    cov_1wzwe2l5ja().b[16][1]++;
    cov_1wzwe2l5ja().s[56]++;
    try {
      const inventoryData =
      /* istanbul ignore next */
      (cov_1wzwe2l5ja().s[57]++, await inventoryResponse.json());
      /* istanbul ignore next */
      cov_1wzwe2l5ja().s[58]++;
      if (inventoryData.success) {
        /* istanbul ignore next */
        cov_1wzwe2l5ja().b[17][0]++;
        cov_1wzwe2l5ja().s[59]++;
        inventoryItems = inventoryData.data;
        /* istanbul ignore next */
        cov_1wzwe2l5ja().s[60]++;
        pagination =
        /* istanbul ignore next */
        (cov_1wzwe2l5ja().b[18][0]++, inventoryData.pagination) ||
        /* istanbul ignore next */
        (cov_1wzwe2l5ja().b[18][1]++, pagination);
      } else {
        /* istanbul ignore next */
        cov_1wzwe2l5ja().b[17][1]++;
        cov_1wzwe2l5ja().s[61]++;
        console.error("Inventory data API call not successful:", inventoryData.message);
      }
    } catch (e) {
      /* istanbul ignore next */
      cov_1wzwe2l5ja().s[62]++;
      console.error("Failed to parse inventory data JSON:", e);
    }
  }
  /* istanbul ignore next */
  cov_1wzwe2l5ja().s[63]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_MainLayout.default, {
    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_PermissionGuard.PermissionGuard, {
      permission: _permissions.PERMISSIONS.INVENTORY_VIEW,
      fallback: /*#__PURE__*/(0, _jsxruntime.jsx)(_AccessDenied.AccessDenied, {
        message: "You do not have permission to view the inventory."
      }),
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-6",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex flex-col md:flex-row md:items-center md:justify-between gap-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
              className: "text-2xl font-bold text-gray-900",
              children: "Inventory Management"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-gray-500",
              children: "Manage your product inventory across all shops"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_InventoryHeaderActions.default, {})]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_react.Suspense, {
          fallback: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            children: "Loading inventory..."
          }),
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_InventoryClientWrapper.default, {
            initialInventoryItems: inventoryItems,
            initialCategories: categories,
            initialPagination: pagination,
            initialSearchTerm: search,
            initialCategoryFilter: categoryFilter,
            initialStatusFilter: statusFilter
          })
        })]
      })
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,