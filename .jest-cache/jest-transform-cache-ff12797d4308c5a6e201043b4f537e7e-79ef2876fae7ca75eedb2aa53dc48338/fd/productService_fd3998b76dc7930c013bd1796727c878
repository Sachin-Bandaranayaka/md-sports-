57059fc427d6aac2c834334b46b150b7
"use strict";

/* istanbul ignore next */
function cov_271uo7og8w() {
  var path = "/Users/sachin/Documents/md-sports-/src/services/productService.ts";
  var hash = "ae338a3259fda287db20ab4ce46fef03f08acd2b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/services/productService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 30
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 40
        }
      },
      "4": {
        start: {
          line: 12,
          column: 23
        },
        end: {
          line: 82,
          column: 1
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 25,
          column: 9
        }
      },
      "6": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 21,
          column: 15
        }
      },
      "7": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 61
        }
      },
      "8": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 24
        }
      },
      "9": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "10": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 36,
          column: 15
        }
      },
      "11": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 74
        }
      },
      "12": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 24
        }
      },
      "13": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "14": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 61
        }
      },
      "15": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 60
        }
      },
      "16": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 24
        }
      },
      "17": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "18": {
        start: {
          line: 56,
          column: 28
        },
        end: {
          line: 56,
          column: 62
        }
      },
      "19": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 59,
          column: 13
        }
      },
      "20": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 67
        }
      },
      "21": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 53
        }
      },
      "22": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 74
        }
      },
      "23": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 24
        }
      },
      "24": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "25": {
        start: {
          line: 70,
          column: 28
        },
        end: {
          line: 70,
          column: 62
        }
      },
      "26": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 73,
          column: 13
        }
      },
      "27": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 72,
          column: 67
        }
      },
      "28": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 76,
          column: 15
        }
      },
      "29": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 74
        }
      },
      "30": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 24
          },
          end: {
            line: 15,
            column: 25
          }
        },
        loc: {
          start: {
            line: 15,
            column: 34
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 29,
            column: 24
          },
          end: {
            line: 29,
            column: 25
          }
        },
        loc: {
          start: {
            line: 29,
            column: 36
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 29
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 44,
            column: 23
          },
          end: {
            line: 44,
            column: 24
          }
        },
        loc: {
          start: {
            line: 44,
            column: 44
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 44
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 54,
            column: 23
          },
          end: {
            line: 54,
            column: 24
          }
        },
        loc: {
          start: {
            line: 54,
            column: 48
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 54
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 68,
            column: 23
          },
          end: {
            line: 68,
            column: 24
          }
        },
        loc: {
          start: {
            line: 68,
            column: 35
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 68
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "1": {
        loc: {
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 73,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 73,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/services/productService.ts"],
      sourcesContent: ["import { Product } from '@/lib/models';\n\nexport const productService = {\n    /**\n     * Get all products\n     */\n    getAllProducts: async () => {\n        try {\n            return await Product.findAll({\n                where: { isActive: true }\n            });\n        } catch (error) {\n            console.error('Error fetching products:', error);\n            throw error;\n        }\n    },\n\n    /**\n     * Get a product by ID\n     */\n    getProductById: async (id: number) => {\n        try {\n            return await Product.findOne({\n                where: { id, isActive: true }\n            });\n        } catch (error) {\n            console.error(`Error fetching product with ID ${id}:`, error);\n            throw error;\n        }\n    },\n\n    /**\n     * Create a new product\n     */\n    createProduct: async (productData: any) => {\n        try {\n            return await Product.create(productData);\n        } catch (error) {\n            console.error('Error creating product:', error);\n            throw error;\n        }\n    },\n\n    /**\n     * Update a product\n     */\n    updateProduct: async (id: number, productData: any) => {\n        try {\n            const product = await Product.findByPk(id);\n\n            if (!product) {\n                throw new Error(`Product with ID ${id} not found`);\n            }\n\n            return await product.update(productData);\n        } catch (error) {\n            console.error(`Error updating product with ID ${id}:`, error);\n            throw error;\n        }\n    },\n\n    /**\n     * Delete a product (soft delete)\n     */\n    deleteProduct: async (id: number) => {\n        try {\n            const product = await Product.findByPk(id);\n\n            if (!product) {\n                throw new Error(`Product with ID ${id} not found`);\n            }\n\n            return await product.update({ isActive: false });\n        } catch (error) {\n            console.error(`Error deleting product with ID ${id}:`, error);\n            throw error;\n        }\n    }\n}; "],
      names: ["productService", "getAllProducts", "Product", "findAll", "where", "isActive", "error", "console", "getProductById", "id", "findOne", "createProduct", "productData", "create", "updateProduct", "product", "findByPk", "Error", "update", "deleteProduct"],
      mappings: ";;;;+BAEaA;;;eAAAA;;;wBAFW;AAEjB,MAAMA,iBAAiB;IAC1B;;KAEC,GACDC,gBAAgB;QACZ,IAAI;YACA,OAAO,MAAMC,eAAO,CAACC,OAAO,CAAC;gBACzBC,OAAO;oBAAEC,UAAU;gBAAK;YAC5B;QACJ,EAAE,OAAOC,OAAO;YACZC,QAAQD,KAAK,CAAC,4BAA4BA;YAC1C,MAAMA;QACV;IACJ;IAEA;;KAEC,GACDE,gBAAgB,OAAOC;QACnB,IAAI;YACA,OAAO,MAAMP,eAAO,CAACQ,OAAO,CAAC;gBACzBN,OAAO;oBAAEK;oBAAIJ,UAAU;gBAAK;YAChC;QACJ,EAAE,OAAOC,OAAO;YACZC,QAAQD,KAAK,CAAC,CAAC,+BAA+B,EAAEG,GAAG,CAAC,CAAC,EAAEH;YACvD,MAAMA;QACV;IACJ;IAEA;;KAEC,GACDK,eAAe,OAAOC;QAClB,IAAI;YACA,OAAO,MAAMV,eAAO,CAACW,MAAM,CAACD;QAChC,EAAE,OAAON,OAAO;YACZC,QAAQD,KAAK,CAAC,2BAA2BA;YACzC,MAAMA;QACV;IACJ;IAEA;;KAEC,GACDQ,eAAe,OAAOL,IAAYG;QAC9B,IAAI;YACA,MAAMG,UAAU,MAAMb,eAAO,CAACc,QAAQ,CAACP;YAEvC,IAAI,CAACM,SAAS;gBACV,MAAM,IAAIE,MAAM,CAAC,gBAAgB,EAAER,GAAG,UAAU,CAAC;YACrD;YAEA,OAAO,MAAMM,QAAQG,MAAM,CAACN;QAChC,EAAE,OAAON,OAAO;YACZC,QAAQD,KAAK,CAAC,CAAC,+BAA+B,EAAEG,GAAG,CAAC,CAAC,EAAEH;YACvD,MAAMA;QACV;IACJ;IAEA;;KAEC,GACDa,eAAe,OAAOV;QAClB,IAAI;YACA,MAAMM,UAAU,MAAMb,eAAO,CAACc,QAAQ,CAACP;YAEvC,IAAI,CAACM,SAAS;gBACV,MAAM,IAAIE,MAAM,CAAC,gBAAgB,EAAER,GAAG,UAAU,CAAC;YACrD;YAEA,OAAO,MAAMM,QAAQG,MAAM,CAAC;gBAAEb,UAAU;YAAM;QAClD,EAAE,OAAOC,OAAO;YACZC,QAAQD,KAAK,CAAC,CAAC,+BAA+B,EAAEG,GAAG,CAAC,CAAC,EAAEH;YACvD,MAAMA;QACV;IACJ;AACJ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ae338a3259fda287db20ab4ce46fef03f08acd2b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_271uo7og8w = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_271uo7og8w();
cov_271uo7og8w().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_271uo7og8w().s[1]++;
Object.defineProperty(exports, "productService", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_271uo7og8w().f[0]++;
    cov_271uo7og8w().s[2]++;
    return productService;
  }
});
const _models =
/* istanbul ignore next */
(cov_271uo7og8w().s[3]++, require("../lib/models"));
const productService =
/* istanbul ignore next */
(cov_271uo7og8w().s[4]++, {
  /**
   * Get all products
   */
  getAllProducts: async () => {
    /* istanbul ignore next */
    cov_271uo7og8w().f[1]++;
    cov_271uo7og8w().s[5]++;
    try {
      /* istanbul ignore next */
      cov_271uo7og8w().s[6]++;
      return await _models.Product.findAll({
        where: {
          isActive: true
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_271uo7og8w().s[7]++;
      console.error("Error fetching products:", error);
      /* istanbul ignore next */
      cov_271uo7og8w().s[8]++;
      throw error;
    }
  },
  /**
   * Get a product by ID
   */
  getProductById: async id => {
    /* istanbul ignore next */
    cov_271uo7og8w().f[2]++;
    cov_271uo7og8w().s[9]++;
    try {
      /* istanbul ignore next */
      cov_271uo7og8w().s[10]++;
      return await _models.Product.findOne({
        where: {
          id,
          isActive: true
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_271uo7og8w().s[11]++;
      console.error(`Error fetching product with ID ${id}:`, error);
      /* istanbul ignore next */
      cov_271uo7og8w().s[12]++;
      throw error;
    }
  },
  /**
   * Create a new product
   */
  createProduct: async productData => {
    /* istanbul ignore next */
    cov_271uo7og8w().f[3]++;
    cov_271uo7og8w().s[13]++;
    try {
      /* istanbul ignore next */
      cov_271uo7og8w().s[14]++;
      return await _models.Product.create(productData);
    } catch (error) {
      /* istanbul ignore next */
      cov_271uo7og8w().s[15]++;
      console.error("Error creating product:", error);
      /* istanbul ignore next */
      cov_271uo7og8w().s[16]++;
      throw error;
    }
  },
  /**
   * Update a product
   */
  updateProduct: async (id, productData) => {
    /* istanbul ignore next */
    cov_271uo7og8w().f[4]++;
    cov_271uo7og8w().s[17]++;
    try {
      const product =
      /* istanbul ignore next */
      (cov_271uo7og8w().s[18]++, await _models.Product.findByPk(id));
      /* istanbul ignore next */
      cov_271uo7og8w().s[19]++;
      if (!product) {
        /* istanbul ignore next */
        cov_271uo7og8w().b[0][0]++;
        cov_271uo7og8w().s[20]++;
        throw new Error(`Product with ID ${id} not found`);
      } else
      /* istanbul ignore next */
      {
        cov_271uo7og8w().b[0][1]++;
      }
      cov_271uo7og8w().s[21]++;
      return await product.update(productData);
    } catch (error) {
      /* istanbul ignore next */
      cov_271uo7og8w().s[22]++;
      console.error(`Error updating product with ID ${id}:`, error);
      /* istanbul ignore next */
      cov_271uo7og8w().s[23]++;
      throw error;
    }
  },
  /**
   * Delete a product (soft delete)
   */
  deleteProduct: async id => {
    /* istanbul ignore next */
    cov_271uo7og8w().f[5]++;
    cov_271uo7og8w().s[24]++;
    try {
      const product =
      /* istanbul ignore next */
      (cov_271uo7og8w().s[25]++, await _models.Product.findByPk(id));
      /* istanbul ignore next */
      cov_271uo7og8w().s[26]++;
      if (!product) {
        /* istanbul ignore next */
        cov_271uo7og8w().b[1][0]++;
        cov_271uo7og8w().s[27]++;
        throw new Error(`Product with ID ${id} not found`);
      } else
      /* istanbul ignore next */
      {
        cov_271uo7og8w().b[1][1]++;
      }
      cov_271uo7og8w().s[28]++;
      return await product.update({
        isActive: false
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_271uo7og8w().s[29]++;
      console.error(`Error deleting product with ID ${id}:`, error);
      /* istanbul ignore next */
      cov_271uo7og8w().s[30]++;
      throw error;
    }
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjcxdW83b2c4dyIsImFjdHVhbENvdmVyYWdlIiwicyIsInByb2R1Y3RTZXJ2aWNlIiwiZ2V0QWxsUHJvZHVjdHMiLCJmIiwiX21vZGVscyIsIlByb2R1Y3QiLCJmaW5kQWxsIiwid2hlcmUiLCJpc0FjdGl2ZSIsImVycm9yIiwiY29uc29sZSIsImdldFByb2R1Y3RCeUlkIiwiaWQiLCJmaW5kT25lIiwiY3JlYXRlUHJvZHVjdCIsInByb2R1Y3REYXRhIiwiY3JlYXRlIiwidXBkYXRlUHJvZHVjdCIsInByb2R1Y3QiLCJmaW5kQnlQayIsImIiLCJFcnJvciIsInVwZGF0ZSIsImRlbGV0ZVByb2R1Y3QiXSwic291cmNlcyI6WyIvVXNlcnMvc2FjaGluL0RvY3VtZW50cy9tZC1zcG9ydHMtL3NyYy9zZXJ2aWNlcy9wcm9kdWN0U2VydmljZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcm9kdWN0IH0gZnJvbSAnQC9saWIvbW9kZWxzJztcblxuZXhwb3J0IGNvbnN0IHByb2R1Y3RTZXJ2aWNlID0ge1xuICAgIC8qKlxuICAgICAqIEdldCBhbGwgcHJvZHVjdHNcbiAgICAgKi9cbiAgICBnZXRBbGxQcm9kdWN0czogYXN5bmMgKCkgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IFByb2R1Y3QuZmluZEFsbCh7XG4gICAgICAgICAgICAgICAgd2hlcmU6IHsgaXNBY3RpdmU6IHRydWUgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBwcm9kdWN0czonLCBlcnJvcik7XG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBHZXQgYSBwcm9kdWN0IGJ5IElEXG4gICAgICovXG4gICAgZ2V0UHJvZHVjdEJ5SWQ6IGFzeW5jIChpZDogbnVtYmVyKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgUHJvZHVjdC5maW5kT25lKHtcbiAgICAgICAgICAgICAgICB3aGVyZTogeyBpZCwgaXNBY3RpdmU6IHRydWUgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGBFcnJvciBmZXRjaGluZyBwcm9kdWN0IHdpdGggSUQgJHtpZH06YCwgZXJyb3IpO1xuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IHByb2R1Y3RcbiAgICAgKi9cbiAgICBjcmVhdGVQcm9kdWN0OiBhc3luYyAocHJvZHVjdERhdGE6IGFueSkgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IFByb2R1Y3QuY3JlYXRlKHByb2R1Y3REYXRhKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNyZWF0aW5nIHByb2R1Y3Q6JywgZXJyb3IpO1xuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogVXBkYXRlIGEgcHJvZHVjdFxuICAgICAqL1xuICAgIHVwZGF0ZVByb2R1Y3Q6IGFzeW5jIChpZDogbnVtYmVyLCBwcm9kdWN0RGF0YTogYW55KSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBwcm9kdWN0ID0gYXdhaXQgUHJvZHVjdC5maW5kQnlQayhpZCk7XG5cbiAgICAgICAgICAgIGlmICghcHJvZHVjdCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgUHJvZHVjdCB3aXRoIElEICR7aWR9IG5vdCBmb3VuZGApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgcHJvZHVjdC51cGRhdGUocHJvZHVjdERhdGEpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihgRXJyb3IgdXBkYXRpbmcgcHJvZHVjdCB3aXRoIElEICR7aWR9OmAsIGVycm9yKTtcbiAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIERlbGV0ZSBhIHByb2R1Y3QgKHNvZnQgZGVsZXRlKVxuICAgICAqL1xuICAgIGRlbGV0ZVByb2R1Y3Q6IGFzeW5jIChpZDogbnVtYmVyKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBwcm9kdWN0ID0gYXdhaXQgUHJvZHVjdC5maW5kQnlQayhpZCk7XG5cbiAgICAgICAgICAgIGlmICghcHJvZHVjdCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgUHJvZHVjdCB3aXRoIElEICR7aWR9IG5vdCBmb3VuZGApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgcHJvZHVjdC51cGRhdGUoeyBpc0FjdGl2ZTogZmFsc2UgfSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGBFcnJvciBkZWxldGluZyBwcm9kdWN0IHdpdGggSUQgJHtpZH06YCwgZXJyb3IpO1xuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICB9XG59OyAiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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