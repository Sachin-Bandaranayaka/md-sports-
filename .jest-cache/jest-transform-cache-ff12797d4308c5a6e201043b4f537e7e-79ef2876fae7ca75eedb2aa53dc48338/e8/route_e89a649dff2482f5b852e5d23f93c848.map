{"version":3,"names":["cov_1uv06wo8pi","actualCoverage","s","POST","request","f","token","_jwt","getToken","req","b","_server","NextResponse","json","error","status","body","tags","paths","Array","isArray","tag","_cache","revalidateTag","console","log","path","revalidatePath","success","message","revalidated"],"sources":["/Users/sachin/Documents/md-sports-/src/app/api/revalidate/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { revalidateTag, revalidatePath } from 'next/cache';\nimport { getToken } from 'next-auth/jwt';\n\nexport async function POST(request: NextRequest) {\n    try {\n        // Verify authentication\n        const token = await getToken({ req: request });\n        if (!token) {\n            return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n        }\n\n        const body = await request.json();\n        const { tags, paths } = body;\n\n        // Revalidate specified tags\n        if (tags && Array.isArray(tags)) {\n            for (const tag of tags) {\n                revalidateTag(tag);\n                console.log(`Revalidated tag: ${tag}`);\n            }\n        }\n\n        // Revalidate specified paths\n        if (paths && Array.isArray(paths)) {\n            for (const path of paths) {\n                revalidatePath(path);\n                console.log(`Revalidated path: ${path}`);\n            }\n        }\n\n        return NextResponse.json({ \n            success: true, \n            message: 'Cache revalidated successfully',\n            revalidated: { tags, paths }\n        });\n    } catch (error) {\n        console.error('Error revalidating cache:', error);\n        return NextResponse.json(\n            { error: 'Failed to revalidate cache' },\n            { status: 500 }\n        );\n    }\n} "],"mappingscAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;;;+BAFc;;;;;;WAAAC,IAAA;;;;;kCAJoB;;;kCACI;;;kCACrB;AAElB,eAAeA,KAAKC,OAAoB;EAAA;EAAAJ,cAAA,GAAAK,CAAA;EAAAL,cAAA,GAAAE,CAAA;EAC3C,IAAI;IACA;IACA,MAAMI,KAAA;IAAA;IAAA,CAAAN,cAAA,GAAAE,CAAA,OAAQ,MAAM,IAAAK,IAAA,CAAAC,QAAQ,EAAC;MAAEC,GAAA,EAAKL;IAAQ;IAAA;IAAAJ,cAAA,GAAAE,CAAA;IAC5C,IAAI,CAACI,KAAA,EAAO;MAAA;MAAAN,cAAA,GAAAU,CAAA;MAAAV,cAAA,GAAAE,CAAA;MACR,OAAOS,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;QAAEC,KAAA,EAAO;MAAe,GAAG;QAAEC,MAAA,EAAQ;MAAI;IACtE;IAAA;IAAA;MAAAf,cAAA,GAAAU,CAAA;IAAA;IAEA,MAAMM,IAAA;IAAA;IAAA,CAAAhB,cAAA,GAAAE,CAAA,QAAO,MAAME,OAAA,CAAQS,IAAI;IAC/B,MAAM;MAAEI,IAAI;MAAEC;IAAK,CAAE;IAAA;IAAA,CAAAlB,cAAA,GAAAE,CAAA,QAAGc,IAAA;IAExB;IAAA;IAAAhB,cAAA,GAAAE,CAAA;IACA;IAAI;IAAA,CAAAF,cAAA,GAAAU,CAAA,UAAAO,IAAA;IAAA;IAAA,CAAAjB,cAAA,GAAAU,CAAA,UAAQS,KAAA,CAAMC,OAAO,CAACH,IAAA,IAAO;MAAA;MAAAjB,cAAA,GAAAU,CAAA;MAAAV,cAAA,GAAAE,CAAA;MAC7B,KAAK,MAAMmB,GAAA,IAAOJ,IAAA,EAAM;QAAA;QAAAjB,cAAA,GAAAE,CAAA;QACpB,IAAAoB,MAAA,CAAAC,aAAa,EAACF,GAAA;QAAA;QAAArB,cAAA,GAAAE,CAAA;QACdsB,OAAA,CAAQC,GAAG,CAAC,oBAAoBJ,GAAA,EAAK;MACzC;IACJ;IAAA;IAAA;MAAArB,cAAA,GAAAU,CAAA;IAAA;IAEA;IAAAV,cAAA,GAAAE,CAAA;IACA;IAAI;IAAA,CAAAF,cAAA,GAAAU,CAAA,UAAAQ,KAAA;IAAA;IAAA,CAAAlB,cAAA,GAAAU,CAAA,UAASS,KAAA,CAAMC,OAAO,CAACF,KAAA,IAAQ;MAAA;MAAAlB,cAAA,GAAAU,CAAA;MAAAV,cAAA,GAAAE,CAAA;MAC/B,KAAK,MAAMwB,IAAA,IAAQR,KAAA,EAAO;QAAA;QAAAlB,cAAA,GAAAE,CAAA;QACtB,IAAAoB,MAAA,CAAAK,cAAc,EAACD,IAAA;QAAA;QAAA1B,cAAA,GAAAE,CAAA;QACfsB,OAAA,CAAQC,GAAG,CAAC,qBAAqBC,IAAA,EAAM;MAC3C;IACJ;IAAA;IAAA;MAAA1B,cAAA,GAAAU,CAAA;IAAA;IAAAV,cAAA,GAAAE,CAAA;IAEA,OAAOS,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MACrBe,OAAA,EAAS;MACTC,OAAA,EAAS;MACTC,WAAA,EAAa;QAAEb,IAAA;QAAMC;MAAM;IAC/B;EACJ,EAAE,OAAOJ,KAAA,EAAO;IAAA;IAAAd,cAAA,GAAAE,CAAA;IACZsB,OAAA,CAAQV,KAAK,CAAC,6BAA6BA,KAAA;IAAA;IAAAd,cAAA,GAAAE,CAAA;IAC3C,OAAOS,OAAA,CAAAC,YAAY,CAACC,IAAI,CACpB;MAAEC,KAAA,EAAO;IAA6B,GACtC;MAAEC,MAAA,EAAQ;IAAI;EAEtB;AACJ","ignoreList":[]}