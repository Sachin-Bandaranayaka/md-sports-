4db6076decf3c7967ade71166b121bf6
"use client";
"use strict";

/* istanbul ignore next */
function cov_2cakosrv3() {
  var path = "/Users/sachin/Documents/md-sports-/src/components/chatbot/ChatMessage.tsx";
  var hash = "3bd39edd817b307fc22763e6197047ed16ebd368";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/components/chatbot/ChatMessage.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 27
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 71
        }
      },
      "5": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 14,
          column: 41
        }
      },
      "6": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 18,
          column: 6
        }
      },
      "7": {
        start: {
          line: 21,
          column: 19
        },
        end: {
          line: 21,
          column: 42
        }
      },
      "8": {
        start: {
          line: 23,
          column: 26
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "9": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 35
        }
      },
      "10": {
        start: {
          line: 24,
          column: 20
        },
        end: {
          line: 24,
          column: 35
        }
      },
      "11": {
        start: {
          line: 26,
          column: 31
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "12": {
        start: {
          line: 28,
          column: 25
        },
        end: {
          line: 28,
          column: 66
        }
      },
      "13": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "14": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 27
        }
      },
      "15": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 41,
          column: 13
        }
      },
      "16": {
        start: {
          line: 31,
          column: 24
        },
        end: {
          line: 31,
          column: 25
        }
      },
      "17": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 40,
          column: 17
        }
      },
      "18": {
        start: {
          line: 34,
          column: 20
        },
        end: {
          line: 36,
          column: 21
        }
      },
      "19": {
        start: {
          line: 35,
          column: 24
        },
        end: {
          line: 35,
          column: 77
        }
      },
      "20": {
        start: {
          line: 39,
          column: 20
        },
        end: {
          line: 39,
          column: 94
        }
      },
      "21": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 26
        }
      },
      "22": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 47
        }
      },
      "23": {
        start: {
          line: 47,
          column: 26
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "24": {
        start: {
          line: 48,
          column: 24
        },
        end: {
          line: 48,
          column: 28
        }
      },
      "25": {
        start: {
          line: 50,
          column: 36
        },
        end: {
          line: 50,
          column: 59
        }
      },
      "26": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 54,
          column: 11
        }
      },
      "27": {
        start: {
          line: 52,
          column: 26
        },
        end: {
          line: 52,
          column: 65
        }
      },
      "28": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 118
        }
      },
      "29": {
        start: {
          line: 53,
          column: 75
        },
        end: {
          line: 53,
          column: 100
        }
      },
      "30": {
        start: {
          line: 56,
          column: 34
        },
        end: {
          line: 56,
          column: 64
        }
      },
      "31": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 60,
          column: 11
        }
      },
      "32": {
        start: {
          line: 58,
          column: 26
        },
        end: {
          line: 58,
          column: 72
        }
      },
      "33": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 115
        }
      },
      "34": {
        start: {
          line: 59,
          column: 72
        },
        end: {
          line: 59,
          column: 97
        }
      },
      "35": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 81
        }
      },
      "36": {
        start: {
          line: 64,
          column: 27
        },
        end: {
          line: 64,
          column: 51
        }
      },
      "37": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "38": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 71,
          column: 24
        }
      },
      "39": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 69,
          column: 17
        }
      },
      "40": {
        start: {
          line: 68,
          column: 20
        },
        end: {
          line: 68,
          column: 61
        }
      },
      "41": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 25
        }
      },
      "42": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "43": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 46
        }
      },
      "44": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 25
        }
      },
      "45": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 93,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 33
          }
        },
        loc: {
          start: {
            line: 15,
            column: 39
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "ChatMessage",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 20
          }
        },
        loc: {
          start: {
            line: 20,
            column: 34
          },
          end: {
            line: 94,
            column: 1
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 26
          },
          end: {
            line: 23,
            column: 27
          }
        },
        loc: {
          start: {
            line: 23,
            column: 37
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 47,
            column: 26
          },
          end: {
            line: 47,
            column: 27
          }
        },
        loc: {
          start: {
            line: 47,
            column: 34
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 47
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 51,
            column: 59
          },
          end: {
            line: 51,
            column: 60
          }
        },
        loc: {
          start: {
            line: 51,
            column: 68
          },
          end: {
            line: 54,
            column: 9
          }
        },
        line: 51
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 53,
            column: 67
          },
          end: {
            line: 53,
            column: 68
          }
        },
        loc: {
          start: {
            line: 53,
            column: 75
          },
          end: {
            line: 53,
            column: 100
          }
        },
        line: 53
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 57,
            column: 57
          },
          end: {
            line: 57,
            column: 58
          }
        },
        loc: {
          start: {
            line: 57,
            column: 66
          },
          end: {
            line: 60,
            column: 9
          }
        },
        line: 57
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 59,
            column: 64
          },
          end: {
            line: 59,
            column: 65
          }
        },
        loc: {
          start: {
            line: 59,
            column: 72
          },
          end: {
            line: 59,
            column: 97
          }
        },
        line: 59
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 66,
            column: 34
          },
          end: {
            line: 66,
            column: 35
          }
        },
        loc: {
          start: {
            line: 66,
            column: 39
          },
          end: {
            line: 71,
            column: 13
          }
        },
        line: 66
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 18,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 16,
            column: 35
          },
          end: {
            line: 16,
            column: 38
          }
        }, {
          start: {
            line: 16,
            column: 41
          },
          end: {
            line: 18,
            column: 5
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 14
          }
        }, {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 16,
            column: 32
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "4": {
        loc: {
          start: {
            line: 32,
            column: 16
          },
          end: {
            line: 40,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 16
          },
          end: {
            line: 40,
            column: 17
          }
        }, {
          start: {
            line: 37,
            column: 23
          },
          end: {
            line: 40,
            column: 17
          }
        }],
        line: 32
      },
      "5": {
        loc: {
          start: {
            line: 34,
            column: 20
          },
          end: {
            line: 36,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 20
          },
          end: {
            line: 36,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "6": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "7": {
        loc: {
          start: {
            line: 67,
            column: 16
          },
          end: {
            line: 69,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 16
          },
          end: {
            line: 69,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "8": {
        loc: {
          start: {
            line: 67,
            column: 20
          },
          end: {
            line: 67,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 20
          },
          end: {
            line: 67,
            column: 28
          }
        }, {
          start: {
            line: 67,
            column: 32
          },
          end: {
            line: 67,
            column: 50
          }
        }, {
          start: {
            line: 67,
            column: 54
          },
          end: {
            line: 67,
            column: 72
          }
        }],
        line: 67
      },
      "9": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "10": {
        loc: {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 38
          }
        }, {
          start: {
            line: 74,
            column: 42
          },
          end: {
            line: 74,
            column: 68
          }
        }],
        line: 74
      },
      "11": {
        loc: {
          start: {
            line: 80,
            column: 51
          },
          end: {
            line: 80,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 80,
            column: 60
          },
          end: {
            line: 80,
            column: 73
          }
        }, {
          start: {
            line: 80,
            column: 76
          },
          end: {
            line: 80,
            column: 91
          }
        }],
        line: 80
      },
      "12": {
        loc: {
          start: {
            line: 82,
            column: 71
          },
          end: {
            line: 82,
            column: 162
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 82,
            column: 80
          },
          end: {
            line: 82,
            column: 119
          }
        }, {
          start: {
            line: 82,
            column: 122
          },
          end: {
            line: 82,
            column: 162
          }
        }],
        line: 82
      },
      "13": {
        loc: {
          start: {
            line: 83,
            column: 22
          },
          end: {
            line: 91,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 83,
            column: 45
          },
          end: {
            line: 86,
            column: 14
          }
        }, {
          start: {
            line: 86,
            column: 31
          },
          end: {
            line: 91,
            column: 14
          }
        }],
        line: 83
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/components/chatbot/ChatMessage.tsx"],
      sourcesContent: ["'use client';\n\nimport React from 'react';\nimport { cn } from '@/lib/utils/cn';\nimport { ChatMessage as ChatMessageType } from '@/services/chatbotService';\n\ninterface ChatMessageProps {\n    message: ChatMessageType;\n}\n\nexport function ChatMessage({ message }: ChatMessageProps) {\n    const isUser = message.role === 'user';\n\n    // Function to format the message content with markdown-like styling\n    const formatContent = (content: string) => {\n        if (isUser) return content; // Don't format user messages\n\n        // Process content for formatting\n        let formattedContent = content;\n\n        // Find sections separated by ### headers\n        const sections = formattedContent.split(/###\\s+([^#\\n]+)/);\n        if (sections.length > 1) {\n            let result = '';\n            for (let i = 0; i < sections.length; i++) {\n                if (i % 2 === 0) {\n                    // Even indexes are content between headers\n                    if (sections[i]) {\n                        result += `<div>${formatSection(sections[i])}</div>`;\n                    }\n                } else {\n                    // Odd indexes are headers\n                    result += `<h3 class=\"font-bold text-base mt-3 mb-2\">${sections[i]}</h3>`;\n                }\n            }\n            return result;\n        }\n\n        return formatSection(formattedContent);\n    };\n\n    // Helper function to format a section of content\n    const formatSection = (text: string) => {\n        let formatted = text;\n\n        // Extract numbered lists (1. Item, 2. Item, etc.)\n        const numberedListPattern = /(\\d+\\.\\s+[^\\n]+\\n?)+/g;\n        formatted = formatted.replace(numberedListPattern, (match) => {\n            const items = match.split(/\\d+\\.\\s+/).filter(Boolean);\n            return `<ol class=\"list-decimal pl-5 my-2\">${items.map(item =>\n                `<li>${item.trim()}</li>`).join('')}</ol>`;\n        });\n\n        // Extract bullet lists (\u2022 Item, * Item)\n        const bulletListPattern = /((?:\\*\\s+|\\\u2022\\s+)[^\\n]+\\n?)+/g;\n        formatted = formatted.replace(bulletListPattern, (match) => {\n            const items = match.split(/(?:\\*\\s+|\\\u2022\\s+)/).filter(Boolean);\n            return `<ul class=\"list-disc pl-5 my-2\">${items.map(item =>\n                `<li>${item.trim()}</li>`).join('')}</ul>`;\n        });\n\n        // Handle bold text with ** markers\n        formatted = formatted.replace(/\\*\\*([^*]+)\\*\\*/g, '<strong>$1</strong>');\n\n        // Handle paragraphs\n        const paragraphs = formatted.split(/\\n\\n+/);\n        if (paragraphs.length > 1) {\n            return paragraphs.map(p => {\n                if (p.trim() && !p.includes('<ol') && !p.includes('<ul')) {\n                    return `<p class=\"my-2\">${p.trim()}</p>`;\n                }\n                return p;\n            }).join('');\n        }\n\n        // If no paragraphs were found, and it's not a list, wrap in a paragraph\n        if (!formatted.includes('<ol') && !formatted.includes('<ul')) {\n            formatted = `<p>${formatted}</p>`;\n        }\n\n        return formatted;\n    };\n\n    return (\n        <div\n            className={cn(\n                'flex w-full mb-4',\n                isUser ? 'justify-end' : 'justify-start'\n            )}\n        >\n            <div\n                className={cn(\n                    'max-w-[80%] rounded-lg px-4 py-2',\n                    isUser\n                        ? 'bg-primary text-white rounded-br-none'\n                        : 'bg-gray-100 text-black rounded-bl-none'\n                )}\n            >\n                {isUser ? (\n                    <p className=\"text-sm\">{message.content}</p>\n                ) : (\n                    <div\n                        className=\"text-sm prose prose-sm max-w-none\"\n                        dangerouslySetInnerHTML={{ __html: formatContent(message.content) }}\n                    />\n                )}\n            </div>\n        </div>\n    );\n} "],
      names: ["ChatMessage", "message", "isUser", "role", "formatContent", "content", "formattedContent", "sections", "split", "length", "result", "i", "formatSection", "text", "formatted", "numberedListPattern", "replace", "match", "items", "filter", "Boolean", "map", "item", "trim", "join", "bulletListPattern", "paragraphs", "p", "includes", "div", "className", "cn", "dangerouslySetInnerHTML", "__html"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3bd39edd817b307fc22763e6197047ed16ebd368"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2cakosrv3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2cakosrv3();
cov_2cakosrv3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2cakosrv3().s[1]++;
Object.defineProperty(exports, "ChatMessage", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2cakosrv3().f[0]++;
    cov_2cakosrv3().s[2]++;
    return ChatMessage;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2cakosrv3().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2cakosrv3().s[4]++, _interop_require_default(require("react")));
const _cn =
/* istanbul ignore next */
(cov_2cakosrv3().s[5]++, require("../../lib/utils/cn"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2cakosrv3().f[1]++;
  cov_2cakosrv3().s[6]++;
  return /* istanbul ignore next */(cov_2cakosrv3().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2cakosrv3().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2cakosrv3().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2cakosrv3().b[0][1]++, {
    default: obj
  });
}
function ChatMessage({
  message
}) {
  /* istanbul ignore next */
  cov_2cakosrv3().f[2]++;
  const isUser =
  /* istanbul ignore next */
  (cov_2cakosrv3().s[7]++, message.role === "user");
  // Function to format the message content with markdown-like styling
  /* istanbul ignore next */
  cov_2cakosrv3().s[8]++;
  const formatContent = content => {
    /* istanbul ignore next */
    cov_2cakosrv3().f[3]++;
    cov_2cakosrv3().s[9]++;
    if (isUser) {
      /* istanbul ignore next */
      cov_2cakosrv3().b[2][0]++;
      cov_2cakosrv3().s[10]++;
      return content;
    } else
    /* istanbul ignore next */
    {
      cov_2cakosrv3().b[2][1]++;
    } // Don't format user messages
    // Process content for formatting
    let formattedContent =
    /* istanbul ignore next */
    (cov_2cakosrv3().s[11]++, content);
    // Find sections separated by ### headers
    const sections =
    /* istanbul ignore next */
    (cov_2cakosrv3().s[12]++, formattedContent.split(/###\s+([^#\n]+)/));
    /* istanbul ignore next */
    cov_2cakosrv3().s[13]++;
    if (sections.length > 1) {
      /* istanbul ignore next */
      cov_2cakosrv3().b[3][0]++;
      let result =
      /* istanbul ignore next */
      (cov_2cakosrv3().s[14]++, "");
      /* istanbul ignore next */
      cov_2cakosrv3().s[15]++;
      for (let i =
      /* istanbul ignore next */
      (cov_2cakosrv3().s[16]++, 0); i < sections.length; i++) {
        /* istanbul ignore next */
        cov_2cakosrv3().s[17]++;
        if (i % 2 === 0) {
          /* istanbul ignore next */
          cov_2cakosrv3().b[4][0]++;
          cov_2cakosrv3().s[18]++;
          // Even indexes are content between headers
          if (sections[i]) {
            /* istanbul ignore next */
            cov_2cakosrv3().b[5][0]++;
            cov_2cakosrv3().s[19]++;
            result += `<div>${formatSection(sections[i])}</div>`;
          } else
          /* istanbul ignore next */
          {
            cov_2cakosrv3().b[5][1]++;
          }
        } else {
          /* istanbul ignore next */
          cov_2cakosrv3().b[4][1]++;
          cov_2cakosrv3().s[20]++;
          // Odd indexes are headers
          result += `<h3 class="font-bold text-base mt-3 mb-2">${sections[i]}</h3>`;
        }
      }
      /* istanbul ignore next */
      cov_2cakosrv3().s[21]++;
      return result;
    } else
    /* istanbul ignore next */
    {
      cov_2cakosrv3().b[3][1]++;
    }
    cov_2cakosrv3().s[22]++;
    return formatSection(formattedContent);
  };
  // Helper function to format a section of content
  /* istanbul ignore next */
  cov_2cakosrv3().s[23]++;
  const formatSection = text => {
    /* istanbul ignore next */
    cov_2cakosrv3().f[4]++;
    let formatted =
    /* istanbul ignore next */
    (cov_2cakosrv3().s[24]++, text);
    // Extract numbered lists (1. Item, 2. Item, etc.)
    const numberedListPattern =
    /* istanbul ignore next */
    (cov_2cakosrv3().s[25]++, /(\d+\.\s+[^\n]+\n?)+/g);
    /* istanbul ignore next */
    cov_2cakosrv3().s[26]++;
    formatted = formatted.replace(numberedListPattern, match => {
      /* istanbul ignore next */
      cov_2cakosrv3().f[5]++;
      const items =
      /* istanbul ignore next */
      (cov_2cakosrv3().s[27]++, match.split(/\d+\.\s+/).filter(Boolean));
      /* istanbul ignore next */
      cov_2cakosrv3().s[28]++;
      return `<ol class="list-decimal pl-5 my-2">${items.map(item => {
        /* istanbul ignore next */
        cov_2cakosrv3().f[6]++;
        cov_2cakosrv3().s[29]++;
        return `<li>${item.trim()}</li>`;
      }).join("")}</ol>`;
    });
    // Extract bullet lists (• Item, * Item)
    const bulletListPattern =
    /* istanbul ignore next */
    (cov_2cakosrv3().s[30]++, /((?:\*\s+|\•\s+)[^\n]+\n?)+/g);
    /* istanbul ignore next */
    cov_2cakosrv3().s[31]++;
    formatted = formatted.replace(bulletListPattern, match => {
      /* istanbul ignore next */
      cov_2cakosrv3().f[7]++;
      const items =
      /* istanbul ignore next */
      (cov_2cakosrv3().s[32]++, match.split(/(?:\*\s+|\•\s+)/).filter(Boolean));
      /* istanbul ignore next */
      cov_2cakosrv3().s[33]++;
      return `<ul class="list-disc pl-5 my-2">${items.map(item => {
        /* istanbul ignore next */
        cov_2cakosrv3().f[8]++;
        cov_2cakosrv3().s[34]++;
        return `<li>${item.trim()}</li>`;
      }).join("")}</ul>`;
    });
    // Handle bold text with ** markers
    /* istanbul ignore next */
    cov_2cakosrv3().s[35]++;
    formatted = formatted.replace(/\*\*([^*]+)\*\*/g, "<strong>$1</strong>");
    // Handle paragraphs
    const paragraphs =
    /* istanbul ignore next */
    (cov_2cakosrv3().s[36]++, formatted.split(/\n\n+/));
    /* istanbul ignore next */
    cov_2cakosrv3().s[37]++;
    if (paragraphs.length > 1) {
      /* istanbul ignore next */
      cov_2cakosrv3().b[6][0]++;
      cov_2cakosrv3().s[38]++;
      return paragraphs.map(p => {
        /* istanbul ignore next */
        cov_2cakosrv3().f[9]++;
        cov_2cakosrv3().s[39]++;
        if (
        /* istanbul ignore next */
        (cov_2cakosrv3().b[8][0]++, p.trim()) &&
        /* istanbul ignore next */
        (cov_2cakosrv3().b[8][1]++, !p.includes("<ol")) &&
        /* istanbul ignore next */
        (cov_2cakosrv3().b[8][2]++, !p.includes("<ul"))) {
          /* istanbul ignore next */
          cov_2cakosrv3().b[7][0]++;
          cov_2cakosrv3().s[40]++;
          return `<p class="my-2">${p.trim()}</p>`;
        } else
        /* istanbul ignore next */
        {
          cov_2cakosrv3().b[7][1]++;
        }
        cov_2cakosrv3().s[41]++;
        return p;
      }).join("");
    } else
    /* istanbul ignore next */
    {
      cov_2cakosrv3().b[6][1]++;
    }
    // If no paragraphs were found, and it's not a list, wrap in a paragraph
    cov_2cakosrv3().s[42]++;
    if (
    /* istanbul ignore next */
    (cov_2cakosrv3().b[10][0]++, !formatted.includes("<ol")) &&
    /* istanbul ignore next */
    (cov_2cakosrv3().b[10][1]++, !formatted.includes("<ul"))) {
      /* istanbul ignore next */
      cov_2cakosrv3().b[9][0]++;
      cov_2cakosrv3().s[43]++;
      formatted = `<p>${formatted}</p>`;
    } else
    /* istanbul ignore next */
    {
      cov_2cakosrv3().b[9][1]++;
    }
    cov_2cakosrv3().s[44]++;
    return formatted;
  };
  /* istanbul ignore next */
  cov_2cakosrv3().s[45]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: (0, _cn.cn)("flex w-full mb-4", isUser ?
    /* istanbul ignore next */
    (cov_2cakosrv3().b[11][0]++, "justify-end") :
    /* istanbul ignore next */
    (cov_2cakosrv3().b[11][1]++, "justify-start")),
    children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: (0, _cn.cn)("max-w-[80%] rounded-lg px-4 py-2", isUser ?
      /* istanbul ignore next */
      (cov_2cakosrv3().b[12][0]++, "bg-primary text-white rounded-br-none") :
      /* istanbul ignore next */
      (cov_2cakosrv3().b[12][1]++, "bg-gray-100 text-black rounded-bl-none")),
      children: isUser ?
      /* istanbul ignore next */
      (/*#__PURE__*/cov_2cakosrv3().b[13][0]++, (0, _jsxruntime.jsx)("p", {
        className: "text-sm",
        children: message.content
      })) :
      /* istanbul ignore next */
      (/*#__PURE__*/cov_2cakosrv3().b[13][1]++, (0, _jsxruntime.jsx)("div", {
        className: "text-sm prose prose-sm max-w-none",
        dangerouslySetInnerHTML: {
          __html: formatContent(message.content)
        }
      }))
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,