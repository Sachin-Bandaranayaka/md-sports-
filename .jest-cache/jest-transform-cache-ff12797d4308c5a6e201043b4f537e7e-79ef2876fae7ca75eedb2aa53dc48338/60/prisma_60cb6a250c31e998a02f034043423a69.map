{"version":3,"sources":["/Users/sachin/Documents/md-sports-/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\n\n// Use a single instance of Prisma Client across the entire app\nconst globalForPrisma = global as unknown as { prisma: PrismaClient };\n\n// Optimized connection options for Vercel serverless\nconst prismaOptions = {\n    datasources: {\n        db: {\n            url: process.env.DATABASE_URL ? \n                `${process.env.DATABASE_URL}?connection_limit=1&pool_timeout=900&connect_timeout=900` :\n                'postgresql://localhost:5432/mssport',\n        },\n    },\n    // Optimized logging for production\n    log: process.env.NODE_ENV === 'production' ? ['error'] : ['error', 'warn'],\n    errorFormat: 'minimal' as const,\n};\n\nconsole.log('Initializing Prisma client with DATABASE_URL:',\n    process.env.DATABASE_URL ?\n        `${process.env.DATABASE_URL.substring(0, 20)}...` :\n        'Not set (using default)'\n);\n\n// Create the Prisma client instance or reuse the existing one\nexport const prisma = globalForPrisma.prisma || new PrismaClient(prismaOptions);\n\n// For development, save the instance to avoid too many client instances\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma;\n\n// Helper function to safely execute database operations with fallback\nexport async function safeQuery<T>(\n    queryFn: () => Promise<T>,\n    fallback: T,\n    logMessage = 'Database operation failed'\n): Promise<T> {\n    try {\n        return await queryFn();\n    } catch (error) {\n        console.error(`${logMessage}:`, error);\n        return fallback;\n    }\n}\n\nexport default prisma;"],"names":["prisma","safeQuery","globalForPrisma","global","prismaOptions","datasources","db","url","process","env","DATABASE_URL","log","NODE_ENV","errorFormat","console","substring","PrismaClient","queryFn","fallback","logMessage","error"],"mappings":";;;;;;;;;;;IA6CA,OAAsB;eAAtB;;IAnBaA,MAAM;eAANA;;IAMSC,SAAS;eAATA;;;wBAhCO;AAE7B,+DAA+D;AAC/D,MAAMC,kBAAkBC;AAExB,qDAAqD;AACrD,MAAMC,gBAAgB;IAClBC,aAAa;QACTC,IAAI;YACAC,KAAKC,QAAQC,GAAG,CAACC,YAAY,GACzB,CAAC,EAAEF,QAAQC,GAAG,CAACC,YAAY,CAAC,wDAAwD,CAAC,GACrF;QACR;IACJ;IACA,mCAAmC;IACnCC,KAAKH,QAAQC,GAAG,CAACG,QAAQ,KAAK,eAAe;QAAC;KAAQ,GAAG;QAAC;QAAS;KAAO;IAC1EC,aAAa;AACjB;AAEAC,QAAQH,GAAG,CAAC,iDACRH,QAAQC,GAAG,CAACC,YAAY,GACpB,CAAC,EAAEF,QAAQC,GAAG,CAACC,YAAY,CAACK,SAAS,CAAC,GAAG,IAAI,GAAG,CAAC,GACjD;AAID,MAAMf,SAASE,gBAAgBF,MAAM,IAAI,IAAIgB,oBAAY,CAACZ;AAEjE,wEAAwE;AACxE,IAAII,QAAQC,GAAG,CAACG,QAAQ,KAAK,cAAcV,gBAAgBF,MAAM,GAAGA;AAG7D,eAAeC,UAClBgB,OAAyB,EACzBC,QAAW,EACXC,aAAa,2BAA2B;IAExC,IAAI;QACA,OAAO,MAAMF;IACjB,EAAE,OAAOG,OAAO;QACZN,QAAQM,KAAK,CAAC,CAAC,EAAED,WAAW,CAAC,CAAC,EAAEC;QAChC,OAAOF;IACX;AACJ;MAEA,WAAelB"}