{"version":3,"names":["generateInvoicePDF","cov_3ipowl5zd","s","formatDate","dateString","f","date","Date","toLocaleDateString","year","month","day","invoice","doc","_jspdf","default","paidAmount","b","payments","reduce","sum","payment","amount","remainingBalance","total","createdDate","createdAt","dueDate","setDate","getDate","setFontSize","setFont","text","invoiceNumber","shopName","shop","name","align","shopYPos","email","address_line1","address_line2","city","postal_code","cityPostal","filter","Boolean","join","state","phone","contact_person","line","customer","billingYPos","address","postalCode","toISOString","status","tableColumn","tableRows","items","forEach","item","itemData","product","quantity","_formatters","formatCurrency","price","push","_jspdfautotable","head","body","startY","theme","headStyles","fillColor","textColor","fontStyle","columnStyles","cellWidth","halign","finalY","lastAutoTable","length","paymentY","addPage","paymentColumns","paymentRows","paymentData","paymentMethod","referenceNumber","save"],"sources":["/Users/sachin/Documents/md-sports-/src/utils/pdfGenerator.ts"],"sourcesContent":["import jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport { formatCurrency } from './formatters';\n\n// Interface definitions\ninterface Product {\n    id: number;\n    name: string;\n    description?: string;\n    price: number;\n}\n\ninterface InvoiceItem {\n    id: number;\n    productId: number;\n    invoiceId: number;\n    quantity: number;\n    price: number;\n    total: number;\n    product: Product;\n}\n\ninterface Customer {\n    id: number;\n    name: string;\n    email?: string | null;\n    phone?: string | null;\n    address?: string | null;\n    city?: string | null;\n    postalCode?: string | null;\n    contactPerson?: string | null;\n    contactPersonPhone?: string | null;\n}\n\ninterface Payment {\n    id: number;\n    invoiceId: number;\n    customerId: number;\n    amount: number;\n    paymentMethod: string;\n    referenceNumber?: string | null;\n    createdAt: string;\n}\n\ninterface Shop {\n    id: string;\n    name: string;\n    location: string;\n    contact_person?: string | null;\n    phone?: string | null;\n    email?: string | null;\n    address_line1?: string | null;\n    address_line2?: string | null;\n    city?: string | null;\n    state?: string | null;\n    postal_code?: string | null;\n    country?: string | null;\n}\n\ninterface Invoice {\n    id: number;\n    invoiceNumber: string;\n    customerId: number;\n    shopId?: string | null;\n    total: number;\n    status: string;\n    createdAt: string;\n    updatedAt: string;\n    customer: Customer;\n    shop?: Shop | null;\n    items: InvoiceItem[];\n    payments: Payment[];\n}\n\n/**\n * Format date for display\n */\nconst formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n    });\n};\n\n/**\n * Generate PDF for an invoice\n */\nexport const generateInvoicePDF = (invoice: Invoice): void => {\n    // Create a new PDF document\n    const doc = new jsPDF();\n\n    // Calculate totals\n    const paidAmount = invoice.payments?.reduce((sum, payment) => sum + payment.amount, 0) || 0;\n    const remainingBalance = invoice.total - paidAmount;\n\n    // Generate due date (30 days after creation)\n    const createdDate = new Date(invoice.createdAt);\n    const dueDate = new Date(createdDate);\n    dueDate.setDate(dueDate.getDate() + 30);\n\n    // Set company info at the top\n    doc.setFontSize(20);\n    doc.setFont('helvetica', 'bold');\n    doc.text('INVOICE', 20, 20);\n\n    doc.setFontSize(10);\n    doc.setFont('helvetica', 'normal');\n    doc.text(`#${invoice.invoiceNumber}`, 20, 27);\n\n    // Shop/Company details on the right\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'bold');\n    const shopName = invoice.shop?.name || 'MD Sports';\n    doc.text(shopName, 150, 20, { align: 'right' });\n\n    doc.setFontSize(10);\n    doc.setFont('helvetica', 'normal');\n    \n    let shopYPos = 27;\n    if (invoice.shop?.email) {\n        doc.text(invoice.shop.email, 150, shopYPos, { align: 'right' });\n        shopYPos += 7;\n    }\n    \n    // Shop address\n    if (invoice.shop?.address_line1) {\n        doc.text(invoice.shop.address_line1, 150, shopYPos, { align: 'right' });\n        shopYPos += 7;\n    }\n    \n    if (invoice.shop?.address_line2) {\n        doc.text(invoice.shop.address_line2, 150, shopYPos, { align: 'right' });\n        shopYPos += 7;\n    }\n    \n    if (invoice.shop?.city || invoice.shop?.postal_code) {\n        const cityPostal = [invoice.shop?.city, invoice.shop?.postal_code].filter(Boolean).join(', ');\n        if (cityPostal) {\n            doc.text(cityPostal, 150, shopYPos, { align: 'right' });\n            shopYPos += 7;\n        }\n    }\n    \n    if (invoice.shop?.state) {\n        doc.text(invoice.shop.state, 150, shopYPos, { align: 'right' });\n        shopYPos += 7;\n    }\n    \n    if (invoice.shop?.phone) {\n        doc.text(`Phone: ${invoice.shop.phone}`, 150, shopYPos, { align: 'right' });\n        shopYPos += 7;\n    }\n    \n    if (invoice.shop?.contact_person) {\n        doc.text(`Contact: ${invoice.shop.contact_person}`, 150, shopYPos, { align: 'right' });\n    }\n\n    // Add a line separator\n    doc.line(20, 48, 190, 48);\n\n    // Add billing information\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Bill To:', 20, 60);\n\n    doc.setFontSize(10);\n    doc.setFont('helvetica', 'normal');\n    doc.text(invoice.customer.name, 20, 67);\n\n    let billingYPos = 67;\n    if (invoice.customer.address) {\n        billingYPos += 7;\n        doc.text(invoice.customer.address, 20, billingYPos);\n    }\n\n    if (invoice.customer.city && invoice.customer.postalCode) {\n        billingYPos += 7;\n        doc.text(`${invoice.customer.city}, ${invoice.customer.postalCode}`, 20, billingYPos);\n    }\n\n    if (invoice.customer.phone) {\n        billingYPos += 7;\n        doc.text(`Phone: ${invoice.customer.phone}`, 20, billingYPos);\n    }\n\n    if (invoice.customer.email) {\n        billingYPos += 7;\n        doc.text(`Email: ${invoice.customer.email}`, 20, billingYPos);\n    }\n\n    // Add invoice details\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Invoice Details:', 120, 60);\n\n    doc.setFontSize(10);\n    doc.setFont('helvetica', 'normal');\n\n    doc.text('Invoice Number:', 120, 67);\n    doc.text(invoice.invoiceNumber, 175, 67, { align: 'right' });\n\n    doc.text('Invoice Date:', 120, 74);\n    doc.text(formatDate(invoice.createdAt), 175, 74, { align: 'right' });\n\n    doc.text('Due Date:', 120, 81);\n    doc.text(formatDate(dueDate.toISOString()), 175, 81, { align: 'right' });\n\n    doc.text('Status:', 120, 88);\n    doc.text(invoice.status, 175, 88, { align: 'right' });\n\n    // Add another line separator\n    doc.line(20, 100, 190, 100);\n\n    // Add invoice items table\n    const tableColumn = [\"Item\", \"Qty\", \"Price\", \"Total\"];\n    const tableRows: (string | number)[][] = [];\n\n    // Add invoice items\n    invoice.items.forEach(item => {\n        const itemData = [\n            item.product.name,\n            item.quantity,\n            formatCurrency(item.price),\n            formatCurrency(item.total)\n        ];\n        tableRows.push(itemData);\n    });\n\n    // Generate the table\n    autoTable(doc, {\n        head: [tableColumn],\n        body: tableRows,\n        startY: 110,\n        theme: 'grid',\n        headStyles: {\n            fillColor: [220, 220, 220],\n            textColor: [50, 50, 50],\n            fontStyle: 'bold',\n        },\n        columnStyles: {\n            0: { cellWidth: 80 },\n            1: { cellWidth: 20, halign: 'center' },\n            2: { cellWidth: 40, halign: 'right' },\n            3: { cellWidth: 40, halign: 'right' },\n        },\n    });\n\n    // Get the final Y position after the table\n    const finalY = (doc as any).lastAutoTable.finalY + 10;\n\n    // Add totals\n    doc.setFontSize(10);\n    doc.setFont('helvetica', 'normal');\n\n    doc.text('Subtotal:', 120, finalY);\n    doc.text(formatCurrency(invoice.total), 175, finalY, { align: 'right' });\n\n    doc.text('Tax (0%):', 120, finalY + 7);\n    doc.text(formatCurrency(0), 175, finalY + 7, { align: 'right' });\n\n    // Add a line before the total\n    doc.line(120, finalY + 10, 175, finalY + 10);\n\n    doc.setFont('helvetica', 'bold');\n    doc.text('Total:', 120, finalY + 17);\n    doc.text(formatCurrency(invoice.total), 175, finalY + 17, { align: 'right' });\n\n    doc.setFont('helvetica', 'normal');\n    doc.text('Amount Paid:', 120, finalY + 24);\n    doc.text(formatCurrency(paidAmount), 175, finalY + 24, { align: 'right' });\n\n    doc.setFont('helvetica', 'bold');\n    doc.text('Balance Due:', 120, finalY + 31);\n    doc.text(formatCurrency(remainingBalance), 175, finalY + 31, { align: 'right' });\n\n    // Add notes and terms if there's space\n    if (finalY + 50 < 270) {\n        doc.line(20, finalY + 40, 190, finalY + 40);\n\n        doc.setFontSize(12);\n        doc.setFont('helvetica', 'bold');\n        doc.text('Notes:', 20, finalY + 50);\n\n        doc.setFontSize(10);\n        doc.setFont('helvetica', 'normal');\n        doc.text('Thank you for your business.', 20, finalY + 57);\n\n        doc.setFontSize(12);\n        doc.setFont('helvetica', 'bold');\n        doc.text('Terms & Conditions:', 120, finalY + 50);\n\n        doc.setFontSize(10);\n        doc.setFont('helvetica', 'normal');\n        doc.text('Payment is due within 30 days.', 120, finalY + 57);\n    }\n\n    // Add payment records if available and there's space\n    if (invoice.payments && invoice.payments.length > 0) {\n        let paymentY = finalY + 70;\n\n        // Add a new page if there's not enough space\n        if (paymentY > 240) {\n            doc.addPage();\n            paymentY = 20;\n        }\n\n        doc.setFontSize(12);\n        doc.setFont('helvetica', 'bold');\n        doc.text('Payment History:', 20, paymentY);\n\n        paymentY += 10;\n\n        // Create a payment table\n        const paymentColumns = [\"Date\", \"Method\", \"Reference\", \"Amount\"];\n        const paymentRows: (string | number)[][] = [];\n\n        invoice.payments.forEach(payment => {\n            const paymentData = [\n                formatDate(payment.createdAt),\n                payment.paymentMethod,\n                payment.referenceNumber || '-',\n                formatCurrency(payment.amount)\n            ];\n            paymentRows.push(paymentData);\n        });\n\n        // Generate the payment table\n        autoTable(doc, {\n            head: [paymentColumns],\n            body: paymentRows,\n            startY: paymentY,\n            theme: 'grid',\n            headStyles: {\n                fillColor: [220, 220, 220],\n                textColor: [50, 50, 50],\n                fontStyle: 'bold',\n            },\n            columnStyles: {\n                0: { cellWidth: 50 },\n                1: { cellWidth: 40 },\n                2: { cellWidth: 60 },\n                3: { cellWidth: 30, halign: 'right' },\n            },\n        });\n    }\n\n    // Save the PDF\n    doc.save(`Invoice-${invoice.invoiceNumber}.pdf`);\n};"],"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","ignoreList":[]}