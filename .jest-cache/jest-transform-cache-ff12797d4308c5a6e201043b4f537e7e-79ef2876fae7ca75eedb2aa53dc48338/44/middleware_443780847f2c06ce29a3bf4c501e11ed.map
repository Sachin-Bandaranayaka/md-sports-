{"version":3,"names":["getShopId","cov_1bzxs2stgn","f","s","getUserId","requireAuth","requirePermission","req","token","headers","get","replace","b","_server","NextResponse","json","success","message","status","console","log","user","_authService","getUserFromToken","error","permission","substring","allowedDevPermissions","includes","tokenPayload","verifyToken","userHasPermission","hasPermission","authHeader","startsWith","split","id","shopId"],"sources":["/Users/sachin/Documents/md-sports-/src/lib/utils/middleware.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { verifyToken, getUserFromToken, hasPermission } from '@/services/authService';\n\n/**\n * Middleware to require authentication\n */\nexport const requireAuth = () => {\n    return async (req: NextRequest) => {\n        try {\n            const token = req.headers.get('authorization')?.replace('Bearer ', '');\n\n            if (!token) {\n                return NextResponse.json(\n                    { success: false, message: 'Authentication required' },\n                    { status: 401 }\n                );\n            }\n\n            // Special case for development token\n            if (token === 'dev-token') {\n                console.log('Using development token - skipping verification');\n                return null;\n            }\n\n            // Use optimized cached authentication\n            const user = await getUserFromToken(token);\n\n            if (!user) {\n                return NextResponse.json(\n                    { success: false, message: 'Invalid token or user not found' },\n                    { status: 401 }\n                );\n            }\n\n            // User is authenticated\n            return null;\n        } catch (error) {\n            console.error('Auth error:', error);\n            return NextResponse.json(\n                { success: false, message: 'Authentication failed' },\n                { status: 401 }\n            );\n        }\n    };\n};\n\n/**\n * Middleware to require specific permission\n */\nexport const requirePermission = (permission: string) => {\n    return async (req: NextRequest) => {\n        try {\n            const token = req.headers.get('authorization')?.replace('Bearer ', '');\n            console.log(`Checking permission: ${permission} for token: ${token?.substring(0, 10)}...`);\n\n            if (!token) {\n                return NextResponse.json(\n                    { success: false, message: 'Authentication required' },\n                    { status: 401 }\n                );\n            }\n\n            // Special case for development token - only grant basic permissions, not admin\n            if (token === 'dev-token') {\n                const allowedDevPermissions = [\n                    'shop:distribution:view',\n                    'read:products',\n                    'write:products', \n                    'read:invoices',\n                    'write:invoices',\n                    'user:manage',\n                    'shop:manage',\n                    'inventory:manage',\n                    'settings:manage',\n                    'sales:manage',\n                    'sales:create:shop'\n                ];\n                \n                if (allowedDevPermissions.includes(permission)) {\n                    console.log(`Development mode: granting permission '${permission}'`);\n                    return null;\n                } else {\n                    console.log(`Development mode: denying admin permission '${permission}'`);\n                    return NextResponse.json(\n                        { success: false, message: `Permission denied: ${permission}` },\n                        { status: 403 }\n                    );\n                }\n            }\n\n            // Verify the token to get the payload first\n            const tokenPayload = await verifyToken(token);\n            if (!tokenPayload) {\n                console.error('Invalid token - payload could not be verified');\n                return NextResponse.json(\n                    { success: false, message: 'Invalid token' },\n                    { status: 401 }\n                );\n            }\n\n            // Now pass the TokenPayload object to hasPermission\n            const userHasPermission = await hasPermission(tokenPayload, permission);\n\n            if (!userHasPermission) {\n                console.error(`Permission denied: ${permission}`);\n                return NextResponse.json(\n                    { success: false, message: `Permission denied: ${permission}` },\n                    { status: 403 }\n                );\n            }\n\n            console.log(`Permission granted: ${permission}`);\n            return null;\n        } catch (error) {\n            console.error(`Permission check error for ${permission}:`, error);\n            return NextResponse.json(\n                { success: false, message: 'Permission check failed' },\n                { status: 500 }\n            );\n        }\n    };\n};\n\n/**\n * Get user ID from token\n */\nexport async function getUserId(req: NextRequest): Promise<number | null> {\n    const authHeader = req.headers.get('authorization');\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n        return null;\n    }\n\n    const token = authHeader.split(' ')[1];\n\n    // Special case for development token\n    if (token === 'dev-token') {\n        return 1; // Development user ID\n    }\n\n    try {\n        // Use optimized cached user lookup\n        const user = await getUserFromToken(token);\n        return user ? user.id : null;\n    } catch (error) {\n        console.error('Token verification error:', error);\n        return null;\n    }\n}\n\n/**\n * Get user's shop ID from token\n * Used for shop-specific operations\n */\nexport async function getShopId(req: NextRequest): Promise<number | null> {\n    const authHeader = req.headers.get('authorization');\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n        return null;\n    }\n\n    const token = authHeader.split(' ')[1];\n\n    // Special case for development token\n    if (token === 'dev-token') {\n        return null; // Development user might not have a shop\n    }\n\n    try {\n        // Use optimized cached user lookup\n        const user = await getUserFromToken(token);\n        return user ? user.shopId : null;\n    } catch (error) {\n        console.error('Token verification error:', error);\n        return null;\n    }\n}"],"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","ignoreList":[]}