{"version":3,"names":["NewPurchaseInvoiceModal","isOpen","onClose","onSuccess","suppliers","cov_1iopht09l6","f","products","setProducts","s","_react","useState","categories","setCategories","shops","setShops","isLoading","setIsLoading","error","setError","formattedSuppliers","map","supplier","id","b","toString","useEffect","fetchData","productsRes","categoriesRes","shopsRes","Promise","all","fetch","ok","Error","productsData","json","categoriesData","shopsData","formattedProducts","data","product","formattedCategories","category","formattedShops","shop","err","console","message","_jsxruntime","jsx","className","jsxs","onClick","_lucidereact","X","size","Loader2","_Button","Button","variant","_NewPurchaseInvoiceForm","default","initialSuppliers","initialProducts","initialCategories","initialShops","isModal","onCancel"],"sources":["/Users/sachin/Documents/md-sports-/src/components/purchases/NewPurchaseInvoiceModal.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { X, Loader2 } from 'lucide-react';\nimport { Button } from '@/components/ui/Button';\nimport { Supplier, Product, Category, Shop } from '@/types';\nimport NewPurchaseInvoiceForm from '@/components/purchases/NewPurchaseInvoiceForm';\n\ninterface NewPurchaseInvoiceModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n    onSuccess: () => void;\n    suppliers: Supplier[];\n}\n\nexport default function NewPurchaseInvoiceModal({\n    isOpen,\n    onClose,\n    onSuccess,\n    suppliers\n}: NewPurchaseInvoiceModalProps) {\n    const [products, setProducts] = useState<Product[]>([]);\n    const [categories, setCategories] = useState<Category[]>([]);\n    const [shops, setShops] = useState<Shop[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n\n    // Format suppliers to ensure IDs are strings\n    const formattedSuppliers = suppliers.map(supplier => ({\n        ...supplier,\n        id: supplier.id ? supplier.id.toString() : ''\n    }));\n\n    // Fetch necessary data when modal opens\n    useEffect(() => {\n        if (isOpen) {\n            fetchData();\n        }\n    }, [isOpen]);\n\n    const fetchData = async () => {\n        setIsLoading(true);\n        setError(null);\n\n        try {\n            // Fetch products, categories, and shops in parallel\n            const [productsRes, categoriesRes, shopsRes] = await Promise.all([\n                fetch('/api/products'),\n                fetch('/api/products/categories'),\n                fetch('/api/shops')\n            ]);\n\n            if (!productsRes.ok) throw new Error('Failed to fetch products');\n            if (!categoriesRes.ok) throw new Error('Failed to fetch categories');\n            if (!shopsRes.ok) throw new Error('Failed to fetch shops');\n\n            const productsData = await productsRes.json();\n            const categoriesData = await categoriesRes.json();\n            const shopsData = await shopsRes.json();\n\n            // Format product IDs as strings\n            const formattedProducts = (productsData.data || []).map((product: any) => ({\n                ...product,\n                id: product.id ? product.id.toString() : ''\n            }));\n\n            // Format category IDs as strings\n            const formattedCategories = (categoriesData.data || []).map((category: any) => ({\n                ...category,\n                id: category.id ? category.id.toString() : ''\n            }));\n\n            // Format shop IDs as strings\n            const formattedShops = (shopsData.data || []).map((shop: any) => ({\n                ...shop,\n                id: shop.id ? shop.id.toString() : ''\n            }));\n\n            setProducts(formattedProducts);\n            setCategories(formattedCategories);\n            setShops(formattedShops);\n        } catch (err) {\n            console.error('Error fetching data:', err);\n            setError(err instanceof Error ? err.message : 'Failed to load data');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    if (!isOpen) return null;\n\n    return (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4 overflow-auto\">\n            <div className=\"bg-white rounded-lg shadow-lg w-full max-w-6xl max-h-[90vh] overflow-auto\">\n                <div className=\"sticky top-0 z-10 bg-white p-4 border-b border-gray-200 flex justify-between items-center\">\n                    <h2 className=\"text-xl font-bold text-gray-900\">Create New Purchase Invoice</h2>\n                    <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700\">\n                        <X size={24} />\n                    </button>\n                </div>\n\n                <div className=\"p-6\">\n                    {isLoading ? (\n                        <div className=\"flex flex-col items-center justify-center py-12\">\n                            <Loader2 className=\"w-12 h-12 animate-spin text-primary mb-4\" />\n                            <p className=\"text-gray-600\">Loading form data...</p>\n                        </div>\n                    ) : error ? (\n                        <div className=\"bg-red-50 border border-red-200 text-red-700 p-4 rounded-md\">\n                            <p className=\"font-medium\">Error loading data</p>\n                            <p>{error}</p>\n                            <Button\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={fetchData}\n                                className=\"mt-2\"\n                            >\n                                Try Again\n                            </Button>\n                        </div>\n                    ) : (\n                        <NewPurchaseInvoiceForm\n                            initialSuppliers={formattedSuppliers}\n                            initialProducts={products}\n                            initialCategories={categories}\n                            initialShops={shops}\n                            isModal={true}\n                            onSuccess={onSuccess}\n                            onCancel={onClose}\n                        />\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n} "],"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","ignoreList":[]}