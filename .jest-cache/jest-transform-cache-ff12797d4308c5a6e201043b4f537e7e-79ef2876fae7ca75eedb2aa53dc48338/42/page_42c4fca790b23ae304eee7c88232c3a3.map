{"version":3,"names":["AccountDetails","params","cov_1b3hpfdtzs","f","router","s","_navigation","useRouter","id","account","setAccount","_react","useState","transactions","setTransactions","isLoading","setIsLoading","error","setError","useEffect","fetchData","accountResponse","_api","authGet","ok","b","Error","accountData","json","data","primaryTransactionsResponse","destinationTransactionsResponse","Promise","all","primaryTransactionsData","allTransactionsData","primaryTransactions","destinationTransactions","filter","transaction","toAccountId","parseInt","allAccountTransactions","forEach","destTransaction","find","t","push","sort","a","Date","date","getTime","err","console","message","handleToggleStatus","newStatus","isActive","action","confirm","response","authPatch","name","type","balance","description","alert","_jsxruntime","jsx","_MainLayout","default","className","jsxs","_Button","Button","variant","onClick","window","location","reload","size","_lucidereact","ArrowLeft","Edit","Fragment","Trash","ArrowUp","includes","Number","toLocaleString","createdAt","toLocaleDateString","length","map","href","category","ArrowDown","charAt","toUpperCase","slice","amount","colSpan"],"sources":["/Users/sachin/Documents/md-sports-/src/app/accounting/account/[id]/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport React from 'react';\nimport MainLayout from '@/components/layout/MainLayout';\nimport { Button } from '@/components/ui/Button';\nimport { ArrowLeft, Edit, Trash, ArrowUp, ArrowDown } from 'lucide-react';\nimport { Account, Transaction } from '@/types';\nimport { authGet, authPatch } from '@/utils/api';\n\nexport default function AccountDetails({ params }: { params: { id: string } }) {\n    const router = useRouter();\n    // Extract id directly from params\n    const { id } = params;\n\n    const [account, setAccount] = useState<Account | null>(null);\n    const [transactions, setTransactions] = useState<Transaction[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n\n    // Fetch account details and transactions\n    useEffect(() => {\n        const fetchData = async () => {\n            setIsLoading(true);\n            try {\n                // Fetch account details\n                const accountResponse = await authGet(`/api/accounting/accounts?id=${id}`);\n                if (!accountResponse.ok) {\n                    throw new Error('Failed to fetch account details');\n                }\n                const accountData = await accountResponse.json();\n\n                if (!accountData.data) {\n                    throw new Error('Account not found');\n                }\n\n                setAccount(accountData.data);\n\n                // Fetch transactions for this account (both as primary account and as destination account)\n                const [primaryTransactionsResponse, destinationTransactionsResponse] = await Promise.all([\n                    authGet(`/api/accounting/transactions?accountId=${id}`),\n                    authGet(`/api/accounting/transactions`)\n                ]);\n                \n                if (!primaryTransactionsResponse.ok || !destinationTransactionsResponse.ok) {\n                    throw new Error('Failed to fetch account transactions');\n                }\n                \n                const primaryTransactionsData = await primaryTransactionsResponse.json();\n                const allTransactionsData = await destinationTransactionsResponse.json();\n                \n                // Filter transactions where this account is either the primary account or destination account\n                const primaryTransactions = primaryTransactionsData.data || [];\n                const destinationTransactions = (allTransactionsData.data || []).filter(\n                    (transaction: any) => transaction.toAccountId === parseInt(id)\n                );\n                \n                // Combine and deduplicate transactions\n                const allAccountTransactions = [...primaryTransactions];\n                destinationTransactions.forEach((destTransaction: any) => {\n                    if (!allAccountTransactions.find(t => t.id === destTransaction.id)) {\n                        allAccountTransactions.push(destTransaction);\n                    }\n                });\n                \n                // Sort by date (newest first)\n                allAccountTransactions.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n                \n                setTransactions(allAccountTransactions);\n\n            } catch (err) {\n                console.error('Error fetching account data:', err);\n                setError(err instanceof Error ? err.message : 'An error occurred');\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchData();\n    }, [id]);\n\n    const handleToggleStatus = async () => {\n        if (!account) return;\n\n        const newStatus = !account.isActive;\n        const action = newStatus ? 'activate' : 'deactivate';\n\n        if (confirm(`Are you sure you want to ${action} this account?`)) {\n            try {\n                const response = await authPatch('/api/accounting/accounts', {\n                    id: account.id,\n                    name: account.name,\n                    type: account.type,\n                    balance: account.balance,\n                    description: account.description,\n                    isActive: newStatus\n                });\n\n                if (!response.ok) {\n                    throw new Error(`Failed to ${action} account`);\n                }\n\n                // Update account in state\n                setAccount({\n                    ...account,\n                    isActive: newStatus\n                });\n            } catch (err) {\n                console.error(`Error ${action}ing account:`, err);\n                alert(`Failed to ${action} account. Please try again.`);\n            }\n        }\n    };\n\n    // Loading state\n    if (isLoading) {\n        return (\n            <MainLayout>\n                <div className=\"flex justify-center items-center h-64\">\n                    <div className=\"text-lg text-gray-600\">Loading account details...</div>\n                </div>\n            </MainLayout>\n        );\n    }\n\n    // Error state\n    if (error) {\n        return (\n            <MainLayout>\n                <div className=\"flex flex-col justify-center items-center h-64\">\n                    <div className=\"text-lg text-red-600 mb-4\">Error: {error}</div>\n                    <Button\n                        variant=\"primary\"\n                        onClick={() => window.location.reload()}\n                    >\n                        Retry\n                    </Button>\n                </div>\n            </MainLayout>\n        );\n    }\n\n    // Not found state\n    if (!account) {\n        return (\n            <MainLayout>\n                <div className=\"flex flex-col justify-center items-center h-64\">\n                    <div className=\"text-lg text-red-600 mb-4\">Account not found</div>\n                    <Button\n                        variant=\"primary\"\n                        onClick={() => router.push('/accounting?tab=accounts')}\n                    >\n                        Back to Accounts\n                    </Button>\n                </div>\n            </MainLayout>\n        );\n    }\n\n    return (\n        <MainLayout>\n            <div className=\"space-y-6\">\n                {/* Header */}\n                <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\n                    <div className=\"flex items-center space-x-4\">\n                        <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => router.push('/accounting?tab=accounts')}\n                        >\n                            <ArrowLeft className=\"w-4 h-4 mr-2\" />\n                            Back\n                        </Button>\n                        <h1 className=\"text-2xl font-bold text-gray-900\">Account Details</h1>\n                    </div>\n                    <div className=\"flex gap-2\">\n                        <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => router.push(`/accounting/edit-account/${account.id}`)}\n                        >\n                            <Edit className=\"w-4 h-4 mr-2\" />\n                            Edit\n                        </Button>\n                        <Button\n                            variant={account.isActive ? \"destructive\" : \"success\"}\n                            size=\"sm\"\n                            onClick={handleToggleStatus}\n                        >\n                            {account.isActive ? (\n                                <>\n                                    <Trash className=\"w-4 h-4 mr-2\" />\n                                    Deactivate\n                                </>\n                            ) : (\n                                <>\n                                    <ArrowUp className=\"w-4 h-4 mr-2\" />\n                                    Activate\n                                </>\n                            )}\n                        </Button>\n                    </div>\n                </div>\n\n                {/* Account Details */}\n                <div className=\"bg-tertiary p-6 rounded-lg shadow-sm border border-gray-200\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                        <div>\n                            <h2 className=\"text-lg font-semibold mb-4\">Account Information</h2>\n                            <div className=\"space-y-3\">\n                                <div>\n                                    <div className=\"text-sm font-medium text-gray-500\">Account Name</div>\n                                    <div className=\"text-xl font-medium\">{account.name}</div>\n                                </div>\n                                <div>\n                                    <div className=\"text-sm font-medium text-gray-500\">Type</div>\n                                    <div className=\"text-base capitalize\">{account.type}</div>\n                                </div>\n                                <div>\n                                    <div className=\"text-sm font-medium text-gray-500\">Balance</div>\n                                    <div className={`text-xl font-medium ${['income', 'asset'].includes(account.type) ? 'text-green-600' : 'text-red-600'}`}>\n                                        Rs. {Number(account.balance).toLocaleString()}\n                                    </div>\n                                </div>\n                                <div>\n                                    <div className=\"text-sm font-medium text-gray-500\">Status</div>\n                                    <div className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${account.isActive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n                                        }`}>\n                                        {account.isActive ? 'Active' : 'Inactive'}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div>\n                            <h2 className=\"text-lg font-semibold mb-4\">Additional Details</h2>\n                            <div className=\"space-y-3\">\n                                <div>\n                                    <div className=\"text-sm font-medium text-gray-500\">Description</div>\n                                    <div className=\"text-base\">{account.description || 'No description'}</div>\n                                </div>\n                                <div>\n                                    <div className=\"text-sm font-medium text-gray-500\">Created At</div>\n                                    <div className=\"text-base\">{new Date(account.createdAt).toLocaleDateString()}</div>\n                                </div>\n                                <div>\n                                    <div className=\"text-sm font-medium text-gray-500\">Transaction Count</div>\n                                    <div className=\"text-base\">{transactions.length}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Transaction History */}\n                <div>\n                    <h2 className=\"text-xl font-semibold mb-4\">Transaction History</h2>\n                    <div className=\"bg-tertiary rounded-lg shadow-sm border border-gray-200\">\n                        <div className=\"overflow-x-auto\">\n                            <table className=\"w-full text-sm text-left text-gray-500\">\n                                <thead className=\"text-xs text-gray-700 uppercase bg-gray-50\">\n                                    <tr>\n                                        <th className=\"px-6 py-3\">Date</th>\n                                        <th className=\"px-6 py-3\">Description</th>\n                                        <th className=\"px-6 py-3\">Category</th>\n                                        <th className=\"px-6 py-3\">Type</th>\n                                        <th className=\"px-6 py-3\">Amount</th>\n                                        <th className=\"px-6 py-3\">Actions</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {transactions.length > 0 ? (\n                                        transactions.map((transaction) => (\n                                            <tr key={transaction.id} className=\"border-b hover:bg-gray-50\">\n                                                <td className=\"px-6 py-4\">\n                                                    {new Date(transaction.date).toLocaleDateString()}\n                                                </td>\n                                                <td className=\"px-6 py-4 font-medium text-gray-900\">\n                                                    <a\n                                                        href={`/accounting/transaction/${transaction.id}`}\n                                                        className=\"hover:underline hover:text-blue-600\"\n                                                    >\n                                                        {transaction.description}\n                                                    </a>\n                                                </td>\n                                                <td className=\"px-6 py-4\">\n                                                    {transaction.category}\n                                                </td>\n                                                <td className=\"px-6 py-4\">\n                                                    <span className={`flex items-center space-x-1 ${\n                                                        transaction.type === 'income' || \n                                                        (transaction.type === 'transfer' && transaction.toAccountId === parseInt(id))\n                                                            ? 'text-green-600'\n                                                            : transaction.type === 'expense'\n                                                                ? 'text-red-600'\n                                                                : transaction.type === 'withdrawal'\n                                                                    ? 'text-orange-600'\n                                                                    : 'text-red-600' // outgoing transfer\n                                                    }`}>\n                                                        {transaction.type === 'income' || \n                                                         (transaction.type === 'transfer' && transaction.toAccountId === parseInt(id)) ? (\n                                                            <ArrowUp className=\"w-4 h-4\" />\n                                                        ) : (\n                                                            <ArrowDown className=\"w-4 h-4\" />\n                                                        )}\n                                                        <span>\n                                                            {transaction.type === 'transfer' \n                                                                ? (transaction.toAccountId === parseInt(id) ? 'Transfer In' : 'Transfer Out')\n                                                                : transaction.type.charAt(0).toUpperCase() + transaction.type.slice(1)\n                                                            }\n                                                        </span>\n                                                    </span>\n                                                </td>\n                                                <td className={`px-6 py-4 font-medium ${\n                                                    transaction.type === 'income' || \n                                                    (transaction.type === 'transfer' && transaction.toAccountId === parseInt(id))\n                                                        ? 'text-green-600'\n                                                        : 'text-red-600'\n                                                    }`}>\n                                                    {/* Determine sign based on transaction type and account role */}\n                                                    {(() => {\n                                                        if (transaction.type === 'income') return '+';\n                                                        if (transaction.type === 'transfer') {\n                                                            // If this account is the destination (toAccountId), it's incoming (+)\n                                                            // If this account is the source (accountId), it's outgoing (-)\n                                                            return transaction.toAccountId === parseInt(id) ? '+' : '-';\n                                                        }\n                                                        return '-'; // expense, withdrawal\n                                                    })()} Rs. {Number(transaction.amount).toLocaleString()}\n                                                </td>\n                                                <td className=\"px-6 py-4\">\n                                                    <Button\n                                                        variant=\"outline\"\n                                                        size=\"sm\"\n                                                        onClick={() => router.push(`/accounting/transaction/${transaction.id}`)}\n                                                    >\n                                                        View\n                                                    </Button>\n                                                </td>\n                                            </tr>\n                                        ))\n                                    ) : (\n                                        <tr>\n                                            <td colSpan={6} className=\"px-6 py-4 text-center\">\n                                                No transactions found for this account.\n                                            </td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </MainLayout>\n    );\n}"],"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","ignoreList":[]}