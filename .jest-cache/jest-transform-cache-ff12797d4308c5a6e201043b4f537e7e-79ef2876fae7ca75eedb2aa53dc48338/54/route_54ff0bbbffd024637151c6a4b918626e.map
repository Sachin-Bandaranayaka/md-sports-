{"version":3,"names":["cov_1y4rqwyddw","actualCoverage","s","DELETE","req","params","f","resolvedParams","b","id","_server","NextResponse","json","success","message","status","shopId","shop","_prisma","prisma","findUnique","where","include","InventoryItem","inventoryCount","length","inventoryItem","deleteMany","auditLog","create","data","action","entity","entityId","parseInt","details","JSON","stringify","shopName","name","reason","auditError","console","error","deletedCount","Error","String"],"sources":["/Users/sachin/Documents/md-sports-/src/app/api/inventory/shop/[id]/delete/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { prisma } from '@/lib/prisma';\n\n// DELETE: Remove all inventory items for a shop\nexport async function DELETE(\n    req: NextRequest,\n    { params }: { params: Promise<{ id: string }> }\n) {\n    try {\n        // Await params before using its properties\n        const resolvedParams = await params;\n        \n        // Get the shop ID safely\n        if (!resolvedParams || !resolvedParams.id) {\n            return NextResponse.json({\n                success: false,\n                message: 'Shop ID is required',\n            }, { status: 400 });\n        }\n\n        const shopId = resolvedParams.id;\n\n        // Check if shop exists\n        const shop = await prisma.shop.findUnique({\n            where: { id: shopId },\n            include: {\n                InventoryItem: true\n            }\n        });\n\n        if (!shop) {\n            return NextResponse.json({\n                success: false,\n                message: `Shop with ID ${shopId} not found`,\n            }, { status: 404 });\n        }\n\n        // Get the count of inventory items\n        const inventoryCount = shop.InventoryItem.length;\n\n        // Delete all inventory items for this shop\n        await prisma.inventoryItem.deleteMany({\n            where: { shopId }\n        });\n\n        // Create audit log entry\n        try {\n            await prisma.auditLog.create({\n                data: {\n                    action: 'DELETE_ALL_INVENTORY',\n                    entity: 'Shop',\n                    entityId: parseInt(shopId),\n                    details: JSON.stringify({\n                        shopId,\n                        shopName: shop.name,\n                        inventoryCount,\n                        reason: 'Shop deletion preparation'\n                    })\n                }\n            });\n        } catch (auditError) {\n            // Log error but don't fail the request\n            console.error('Error creating audit log:', auditError);\n        }\n\n        return NextResponse.json({\n            success: true,\n            message: `Successfully deleted ${inventoryCount} inventory items for shop \"${shop.name}\"`,\n            data: {\n                deletedCount: inventoryCount,\n                shopId,\n                shopName: shop.name\n            }\n        });\n    } catch (error) {\n        // Log the error\n        console.error(`Error deleting shop inventory:`, error);\n        return NextResponse.json({\n            success: false,\n            message: 'Failed to delete shop inventory',\n            error: error instanceof Error ? error.message : String(error)\n        }, { status: 500 });\n    }\n} "],"mappings":"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","ignoreList":[]}