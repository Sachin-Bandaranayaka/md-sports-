{"version":3,"names":["AddUserPage","roleTemplates","cov_10lqnyivs7","s","id","name","description","icon","_lucidereact","Users","permissions","color","f","router","_navigation","useRouter","userForm","setUserForm","_react","useState","email","shop","password","confirmPassword","roleName","allowedAccounts","isLoading","setIsLoading","formError","setFormError","formSuccess","setFormSuccess","dynamicShops","setDynamicShops","shopsLoading","setShopsLoading","availableAccounts","setAvailableAccounts","accountsLoading","setAccountsLoading","useEffect","fetchShops","response","fetch","headers","ok","b","Error","data","json","success","console","error","message","fetchAccounts","filteredAccounts","filter","account","isActive","type","availablePermissions","setAvailablePermissions","permissionsLoading","setPermissionsLoading","selectedTemplate","setSelectedTemplate","permissionSearch","setPermissionSearch","showAdvancedPermissions","setShowAdvancedPermissions","fetchPermissions","transformedPermissions","map","permission","module","action","split","toString","charAt","toUpperCase","slice","getPermissionDescription","permissionName","descriptions","handleTemplateSelect","templateId","template","find","t","prev","then","res","allPermissions","p","catch","filteredPermissions","toLowerCase","includes","groupedPermissions","reduce","acc","push","handleFormChange","e","value","target","handlePermissionChange","permissionId","newPermissions","handleModulePermissions","isChecked","modulePermissionIds","Array","from","Set","handleAccountPermissionChange","accountId","newAllowedAccounts","handleAllAccountsToggle","handleSubmit","preventDefault","method","body","JSON","stringify","setTimeout","isModuleSelected","modulePermissions","every","isModulePartiallySelected","some","_jsxruntime","jsx","className","jsxs","onSubmit","htmlFor","onChange","required","disabled","Fragment","length","IconComponent","onClick","Search","placeholder","Loader2","Object","keys","checked","Info","parent","minLength","_Button","Button","variant"],"sources":["/Users/sachin/Documents/md-sports-/src/app/(protected)/settings/users/add/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { Button } from '@/components/ui/Button';\nimport { Loader2, Search, Info, Users, Shield, BarChart3, Settings, Package, CreditCard } from 'lucide-react';\n\ninterface Shop {\n    id: string | number;\n    name: string;\n}\n\ninterface RoleTemplate {\n    id: string;\n    name: string;\n    description: string;\n    icon: React.ElementType;\n    permissions: string[];\n    color: string;\n}\n\nconst roleTemplates: RoleTemplate[] = [\n    {\n        id: 'admin',\n        name: 'Admin',\n        description: 'Full administrative access to all system features',\n        icon: Users,\n        permissions: ['admin:all'],\n        color: 'bg-red-100 text-red-800 border-red-200'\n    },\n    {\n        id: 'shop_staff',\n        name: 'Shop Staff',\n        description: 'Shop operations including sales, customer management, quotations, and shop distribution access for assigned shop only',\n        icon: Users,\n        permissions: [\n            'dashboard:view',\n            'sales:view',\n            'sales:manage',\n            'invoice:create',\n            'invoice:view',\n            'customer:create',\n            'customer:view',\n            'quotation:create',\n            'quotation:view',\n            'shop:distribution:view',\n            'inventory:transfer',\n            'shop:assigned_only'\n        ],\n        color: 'bg-blue-100 text-blue-800 border-blue-200'\n    }\n];\n\nexport default function AddUserPage() {\n    const router = useRouter();\n    const [userForm, setUserForm] = useState({\n        name: '',\n        email: '',\n        shop: '',\n        password: '',\n        confirmPassword: '',\n        permissions: [] as string[],\n        roleName: '',\n        allowedAccounts: [] as string[]\n    });\n    const [isLoading, setIsLoading] = useState(false);\n    const [formError, setFormError] = useState('');\n    const [formSuccess, setFormSuccess] = useState('');\n    const [dynamicShops, setDynamicShops] = useState<Shop[]>([]);\n    const [shopsLoading, setShopsLoading] = useState(true);\n    const [availableAccounts, setAvailableAccounts] = useState<Array<{\n        id: number;\n        name: string;\n        type: string;\n        parent?: { name: string };\n    }>>([]);\n    const [accountsLoading, setAccountsLoading] = useState(true);\n\n    // Available shops - This will be replaced by dynamic fetching\n    // const shops = [\n    //     { id: 1, name: 'All Shops' },\n    //     { id: 2, name: 'Main Store' },\n    //     { id: 3, name: 'Warehouse' }\n    // ];\n\n    useEffect(() => {\n        const fetchShops = async () => {\n            setShopsLoading(true);\n            try {\n                // TODO: Replace with actual token or auth mechanism\n                const response = await fetch('/api/shops', {\n                    headers: {\n                        'Authorization': 'Bearer dev-token', // Example authorization\n                    },\n                });\n                if (!response.ok) {\n                    throw new Error('Failed to fetch shops');\n                }\n                const data = await response.json();\n                if (data.success) {\n                    setDynamicShops(data.data || []);\n                } else {\n                    console.error(\"Failed to fetch shops:\", data.message);\n                    setDynamicShops([]); // Set to empty array on failure\n                }\n            } catch (error) {\n                console.error('Error fetching shops:', error);\n                setDynamicShops([]); // Set to empty array on error\n            } finally {\n                setShopsLoading(false);\n            }\n        };\n\n        fetchShops();\n    }, []);\n\n    // Fetch accounts from database\n    useEffect(() => {\n        const fetchAccounts = async () => {\n            setAccountsLoading(true);\n            try {\n                const response = await fetch('/api/accounting/accounts', {\n                    headers: {\n                        'Authorization': 'Bearer dev-token',\n                    },\n                });\n                if (!response.ok) {\n                    throw new Error('Failed to fetch accounts');\n                }\n                const data = await response.json();\n                if (data.success) {\n                    // Filter to only show income and asset accounts\n                    const filteredAccounts = data.data.filter((account: any) => \n                        account.isActive && (account.type === 'income' || account.type === 'asset')\n                    );\n                    setAvailableAccounts(filteredAccounts);\n                } else {\n                    console.error('Failed to fetch accounts:', data.message);\n                    setAvailableAccounts([]);\n                }\n            } catch (error) {\n                console.error('Error fetching accounts:', error);\n                setAvailableAccounts([]);\n            } finally {\n                setAccountsLoading(false);\n            }\n        };\n\n        fetchAccounts();\n    }, []);\n\n    // Available permissions - fetched dynamically\n    const [availablePermissions, setAvailablePermissions] = useState<Array<{\n        id: string;\n        name: string;\n        module: string;\n        description?: string;\n    }>>([]);\n    const [permissionsLoading, setPermissionsLoading] = useState(true);\n    const [selectedTemplate, setSelectedTemplate] = useState<string>('');\n    const [permissionSearch, setPermissionSearch] = useState('');\n    const [showAdvancedPermissions, setShowAdvancedPermissions] = useState(false);\n\n    // Fetch permissions from database\n    useEffect(() => {\n        const fetchPermissions = async () => {\n            setPermissionsLoading(true);\n            try {\n                const response = await fetch('/api/permissions', {\n                    headers: {\n                        'Authorization': 'Bearer dev-token',\n                    },\n                });\n                if (!response.ok) {\n                    throw new Error('Failed to fetch permissions');\n                }\n                const data = await response.json();\n                if (data.success) {\n                    // Transform permissions to include module based on name prefix\n                    const transformedPermissions = data.data.map((permission: any) => {\n                        const [module, action] = permission.name.split(':');\n                        return {\n                            id: permission.id.toString(),\n                            name: permission.description || permission.name,\n                            module: module.charAt(0).toUpperCase() + module.slice(1),\n                            description: getPermissionDescription(permission.name)\n                        };\n                    });\n                    setAvailablePermissions(transformedPermissions);\n                } else {\n                    console.error('Failed to fetch permissions:', data.message);\n                    setAvailablePermissions([]);\n                }\n            } catch (error) {\n                console.error('Error fetching permissions:', error);\n                setAvailablePermissions([]);\n            } finally {\n                setPermissionsLoading(false);\n            }\n        };\n\n        fetchPermissions();\n    }, []);\n\n    // Permission descriptions helper\n    const getPermissionDescription = (permissionName: string): string => {\n        const descriptions: Record<string, string> = {\n            'inventory:view': 'View inventory items and stock levels',\n            'inventory:create': 'Add new inventory items',\n            'inventory:update': 'Edit existing inventory items',\n            'inventory:delete': 'Remove inventory items',\n            'inventory:manage': 'Full inventory management access',\n            'sales:view': 'View sales data and transactions',\n            'sales:create': 'Create new sales orders',\n            'sales:update': 'Edit existing sales orders',\n            'sales:manage': 'Full sales management access',\n            'user:view': 'View user accounts',\n            'user:create': 'Create new user accounts',\n            'user:update': 'Edit user accounts',\n            'user:delete': 'Delete user accounts',\n            'reports:view': 'View system reports',\n            'reports:export': 'Export reports to files',\n            'settings:manage': 'Manage system settings',\n            'dashboard:view': 'Access dashboard',\n        };\n        return descriptions[permissionName] || 'Permission access';\n    };\n\n    // Handle role template selection\n    const handleTemplateSelect = (templateId: string) => {\n        setSelectedTemplate(templateId);\n        const template = roleTemplates.find(t => t.id === templateId);\n        if (template) {\n            setUserForm(prev => ({\n                ...prev,\n                permissions: template.permissions,\n                roleName: template.name\n            }));\n        } else {\n            // Fetch raw permissions for custom role\n            fetch('/api/permissions?raw=true').then(res => res.json()).then(data => {\n                const allPermissions = data.success ? data.data.map((p: any) => p.name) : [];\n                setUserForm(prev => ({\n                    ...prev,\n                    permissions: allPermissions,\n                    roleName: 'Custom'\n                }));\n            }).catch(error => {\n                console.error('Error fetching raw permissions:', error);\n            });\n        }\n    };\n\n    // Filter permissions based on search\n    const filteredPermissions = availablePermissions.filter(permission =>\n        permission.name.toLowerCase().includes(permissionSearch.toLowerCase()) ||\n        permission.module.toLowerCase().includes(permissionSearch.toLowerCase())\n    );\n\n    // Group permissions by module\n    const groupedPermissions = filteredPermissions.reduce((acc, permission) => {\n        const module = permission.module || 'Other';\n        if (!acc[module]) {\n            acc[module] = [];\n        }\n        acc[module].push(permission);\n        return acc;\n    }, {} as Record<string, typeof availablePermissions>);\n\n    const handleFormChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        const { name, value } = e.target;\n        setUserForm(prev => ({ ...prev, [name]: value }));\n    };\n\n    const handlePermissionChange = (permissionId: string) => {\n        setUserForm(prev => {\n            const newPermissions = prev.permissions.includes(permissionId)\n                ? prev.permissions.filter(id => id !== permissionId)\n                : [...prev.permissions, permissionId];\n            return { ...prev, permissions: newPermissions };\n        });\n    };\n\n    const handleModulePermissions = (module: string, isChecked: boolean) => {\n        const modulePermissionIds = groupedPermissions[module].map(p => p.id);\n\n        setUserForm(prev => {\n            let newPermissions;\n            if (isChecked) {\n                // Add all module permissions that aren't already selected\n                newPermissions = Array.from(new Set([...prev.permissions, ...modulePermissionIds]));\n            } else {\n                // Remove all module permissions\n                newPermissions = prev.permissions.filter(id => !modulePermissionIds.includes(id));\n            }\n            return { ...prev, permissions: newPermissions };\n        });\n    };\n\n    const handleAccountPermissionChange = (accountId: string) => {\n        setUserForm(prev => {\n            const newAllowedAccounts = prev.allowedAccounts.includes(accountId)\n                ? prev.allowedAccounts.filter(id => id !== accountId)\n                : [...prev.allowedAccounts, accountId];\n            return { ...prev, allowedAccounts: newAllowedAccounts };\n        });\n    };\n\n    const handleAllAccountsToggle = (isChecked: boolean) => {\n        setUserForm(prev => ({\n            ...prev,\n            allowedAccounts: isChecked ? availableAccounts.map(acc => acc.id.toString()) : []\n        }));\n    };\n\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        setIsLoading(true);\n        setFormError('');\n        setFormSuccess('');\n\n        // Password validation\n        if (userForm.password !== userForm.confirmPassword) {\n            setFormError('Passwords do not match');\n            setIsLoading(false);\n            return;\n        }\n\n        try {\n            const response = await fetch('/api/users', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer dev-token',\n                },\n                body: JSON.stringify(userForm),\n            });\n\n            const data = await response.json();\n\n            if (data.success) {\n                setFormSuccess('User added successfully! Redirecting...');\n                setTimeout(() => {\n                    router.push('/settings?tab=users');\n                }, 1500);\n            } else {\n                setFormError(data.message || 'Failed to add user');\n            }\n        } catch (error) {\n            console.error('Error adding user:', error);\n            setFormError('An error occurred. Please try again.');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    // Check if all permissions in a module are selected\n    const isModuleSelected = (module: string) => {\n        const modulePermissions = groupedPermissions[module].map(p => p.id);\n        return modulePermissions.every(id => userForm.permissions.includes(id));\n    };\n\n    // Check if any permissions in a module are selected\n    const isModulePartiallySelected = (module: string) => {\n        const modulePermissions = groupedPermissions[module].map(p => p.id);\n        return modulePermissions.some(id => userForm.permissions.includes(id)) &&\n            !modulePermissions.every(id => userForm.permissions.includes(id));\n    };\n\n    return (\n        <div className=\"container mx-auto px-4 py-8\">\n            <div className=\"bg-white p-6 rounded-lg shadow-md max-w-3xl mx-auto\">\n                <div className=\"flex justify-between items-center mb-6 pb-4 border-b\">\n                    <h1 className=\"text-xl font-semibold text-gray-900\">Add New User</h1>\n                </div>\n\n                {formError && (\n                    <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md mb-4\">\n                        {formError}\n                    </div>\n                )}\n                {formSuccess && (\n                    <div className=\"bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded-md mb-4\">\n                        {formSuccess}\n                    </div>\n                )}\n\n                <form onSubmit={handleSubmit}>\n                    <div className=\"space-y-6\">\n                        <div>\n                            <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Full Name <span className=\"text-red-500\">*</span>\n                            </label>\n                            <input\n                                type=\"text\"\n                                id=\"name\"\n                                name=\"name\"\n                                value={userForm.name}\n                                onChange={handleFormChange}\n                                className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5\"\n                                required\n                            />\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Email Address <span className=\"text-red-500\">*</span>\n                            </label>\n                            <input\n                                type=\"email\"\n                                id=\"email\"\n                                name=\"email\"\n                                value={userForm.email}\n                                onChange={handleFormChange}\n                                className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5\"\n                                required\n                            />\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"shop\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Shop Assignment <span className=\"text-red-500\">*</span>\n                            </label>\n                            <select\n                                id=\"shop\"\n                                name=\"shop\"\n                                value={userForm.shop}\n                                onChange={handleFormChange}\n                                className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5\"\n                                required\n                                disabled={shopsLoading}\n                            >\n                                {shopsLoading ? (\n                                    <option value=\"\">Loading shops...</option>\n                                ) : (\n                                    <>\n                                        <option value=\"\">Select a shop</option>\n                                        {dynamicShops.length > 0 ? (\n                                            dynamicShops.map(shop => (\n                                                <option key={shop.id} value={shop.id}>{shop.name}</option>\n                                            ))\n                                        ) : (\n                                            <option value=\"\" disabled>No shops available</option>\n                                        )}\n                                    </>\n                                )}\n                            </select>\n                        </div>\n\n                        {/* Role Templates Section */}\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                                Quick Setup with Role Templates\n                            </label>\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 mb-4\">\n                                {roleTemplates.map(template => {\n                                    const IconComponent = template.icon;\n                                    return (\n                                        <div\n                                            key={template.id}\n                                            className={`p-3 rounded-lg border-2 cursor-pointer transition-all ${\n                                                selectedTemplate === template.id\n                                                    ? template.color + ' border-current'\n                                                    : 'border-gray-200 hover:border-gray-300'\n                                            }`}\n                                            onClick={() => handleTemplateSelect(template.id)}\n                                        >\n                                            <div className=\"flex items-start space-x-2\">\n                                                <IconComponent className=\"h-5 w-5 mt-0.5 flex-shrink-0\" />\n                                                <div className=\"flex-1 min-w-0\">\n                                                    <h4 className=\"text-sm font-medium truncate\">{template.name}</h4>\n                                                    <p className=\"text-xs text-gray-600 mt-1\">{template.description}</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n\n                        <div>\n                            <div className=\"flex items-center justify-between mb-3\">\n                                <label className=\"block text-sm font-medium text-gray-700\">\n                                    Permissions\n                                </label>\n                                <button\n                                    type=\"button\"\n                                    onClick={() => setShowAdvancedPermissions(!showAdvancedPermissions)}\n                                    className=\"text-sm text-primary hover:text-primary-dark\"\n                                >\n                                    {showAdvancedPermissions ? 'Hide Advanced' : 'Show Advanced'}\n                                </button>\n                            </div>\n                            \n                            {/* Permission Search */}\n                            <div className=\"relative mb-3\">\n                                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Search permissions...\"\n                                    value={permissionSearch}\n                                    onChange={(e) => setPermissionSearch(e.target.value)}\n                                    className=\"pl-10 pr-4 py-2 w-full border border-gray-300 rounded-lg focus:ring-primary focus:border-primary text-sm\"\n                                />\n                            </div>\n\n                            <div className=\"border border-gray-300 rounded-lg p-4 max-h-80 overflow-y-auto\">\n                                {permissionsLoading ? (\n                                    <div className=\"flex items-center justify-center py-4\">\n                                        <Loader2 className=\"h-5 w-5 animate-spin mr-2\" />\n                                        <span className=\"text-sm text-gray-500\">Loading permissions...</span>\n                                    </div>\n                                ) : Object.keys(groupedPermissions).length === 0 ? (\n                                    <div className=\"text-center py-4\">\n                                        <span className=\"text-sm text-gray-500\">No permissions available</span>\n                                    </div>\n                                ) : (\n                                    Object.keys(groupedPermissions).map(module => (\n                                        <div key={module} className=\"mb-4\">\n                                            <div className=\"flex items-center mb-2\">\n                                                <input\n                                                    type=\"checkbox\"\n                                                    id={`module-${module}`}\n                                                    checked={isModuleSelected(module)}\n                                                    className=\"h-4 w-4 text-primary focus:ring-primary border-gray-300 rounded\"\n                                                    onChange={(e) => handleModulePermissions(module, e.target.checked)}\n                                                />\n                                                <label\n                                                    htmlFor={`module-${module}`}\n                                                    className={`ml-2 text-sm font-medium ${isModulePartiallySelected(module) ? 'text-gray-500' : 'text-gray-700'\n                                                        }`}\n                                                >\n                                                    {module}\n                                                </label>\n                                            </div>\n                                            <div className=\"ml-6 grid grid-cols-1 md:grid-cols-2 gap-2\">\n                                                {groupedPermissions[module].map(permission => (\n                                                    <div key={permission.id} className=\"flex items-start space-x-2 group\">\n                                                        <input\n                                                            type=\"checkbox\"\n                                                            id={permission.id}\n                                                            checked={userForm.permissions.includes(permission.id)}\n                                                            onChange={() => handlePermissionChange(permission.id)}\n                                                            className=\"h-4 w-4 text-primary focus:ring-primary border-gray-300 rounded mt-0.5\"\n                                                        />\n                                                        <div className=\"flex-1 min-w-0\">\n                                                            <label htmlFor={permission.id} className=\"text-sm text-gray-600 cursor-pointer\">\n                                                                {permission.name}\n                                                            </label>\n                                                            {showAdvancedPermissions && permission.description && (\n                                                                <p className=\"text-xs text-gray-500 mt-1\">{permission.description}</p>\n                                                            )}\n                                                        </div>\n                                                        {permission.description && (\n                                                            <div className=\"relative group\">\n                                                                <Info className=\"h-3 w-3 text-gray-400 cursor-help\" />\n                                                                <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-2 py-1 bg-gray-800 text-white text-xs rounded opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\">\n                                                                    {permission.description}\n                                                                </div>\n                                                            </div>\n                                                        )}\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                    ))\n                                )}\n                            </div>\n                        </div>\n\n                        {/* Account Permissions Section */}\n                        <div>\n                            <div className=\"flex items-center justify-between mb-3\">\n                                <label className=\"block text-sm font-medium text-gray-700\">\n                                    Account Permissions\n                                </label>\n                                <div className=\"flex items-center\">\n                                    <input\n                                        type=\"checkbox\"\n                                        id=\"all-accounts\"\n                                        checked={userForm.allowedAccounts.length === availableAccounts.length && availableAccounts.length > 0}\n                                        onChange={(e) => handleAllAccountsToggle(e.target.checked)}\n                                        className=\"h-4 w-4 text-primary focus:ring-primary border-gray-300 rounded\"\n                                    />\n                                    <label htmlFor=\"all-accounts\" className=\"ml-2 text-sm text-gray-600\">\n                                        Select All\n                                    </label>\n                                </div>\n                            </div>\n\n                            <div className=\"border border-gray-300 rounded-lg p-4 max-h-60 overflow-y-auto\">\n                                {accountsLoading ? (\n                                    <div className=\"flex items-center justify-center py-4\">\n                                        <Loader2 className=\"h-5 w-5 animate-spin mr-2\" />\n                                        <span className=\"text-sm text-gray-500\">Loading accounts...</span>\n                                    </div>\n                                ) : availableAccounts.length === 0 ? (\n                                    <div className=\"text-center py-4\">\n                                        <span className=\"text-sm text-gray-500\">No accounts available</span>\n                                    </div>\n                                ) : (\n                                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\n                                        {availableAccounts.map(account => (\n                                            <div key={account.id} className=\"flex items-start space-x-2\">\n                                                <input\n                                                    type=\"checkbox\"\n                                                    id={`account-${account.id}`}\n                                                    checked={userForm.allowedAccounts.includes(account.id.toString())}\n                                                    onChange={() => handleAccountPermissionChange(account.id.toString())}\n                                                    className=\"h-4 w-4 text-primary focus:ring-primary border-gray-300 rounded mt-0.5\"\n                                                />\n                                                <div className=\"flex-1 min-w-0\">\n                                                    <label htmlFor={`account-${account.id}`} className=\"text-sm text-gray-600 cursor-pointer\">\n                                                        {account.name} {account.parent ? `(${account.parent.name})` : ''}\n                                                    </label>\n                                                    <p className=\"text-xs text-gray-500 mt-1\">\n                                                        Type: {account.type.charAt(0).toUpperCase() + account.type.slice(1)}\n                                                    </p>\n                                                </div>\n                                            </div>\n                                        ))}\n                                    </div>\n                                )}\n                            </div>\n                            <p className=\"text-xs text-gray-500 mt-1\">\n                                Select which accounts this user can record payments to. If none are selected, the user will not be able to record payments.\n                            </p>\n                        </div>\n\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                            <div>\n                                <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Password <span className=\"text-red-500\">*</span>\n                                </label>\n                                <input\n                                    type=\"password\"\n                                    id=\"password\"\n                                    name=\"password\"\n                                    value={userForm.password}\n                                    onChange={handleFormChange}\n                                    className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5\"\n                                    required\n                                    minLength={8}\n                                />\n                            </div>\n\n                            <div>\n                                <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Confirm Password <span className=\"text-red-500\">*</span>\n                                </label>\n                                <input\n                                    type=\"password\"\n                                    id=\"confirmPassword\"\n                                    name=\"confirmPassword\"\n                                    value={userForm.confirmPassword}\n                                    onChange={handleFormChange}\n                                    className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5\"\n                                    required\n                                    minLength={8}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"flex justify-end space-x-3 mt-6\">\n                            <Button\n                                type=\"button\"\n                                variant=\"outline\"\n                                onClick={() => router.push('/settings?tab=users')}\n                            >\n                                Cancel\n                            </Button>\n                            <Button\n                                type=\"submit\"\n                                disabled={isLoading}\n                                className=\"flex items-center justify-center\"\n                            >\n                                {isLoading ? (\n                                    <>\n                                        <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                                        Creating...\n                                    </>\n                                ) : (\n                                    'Create User'\n                                )}\n                            </Button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}"],"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","ignoreList":[]}