318db0cfd3391439e07de8c5be8b6fa1
"use strict";

/* istanbul ignore next */
function cov_1uidwszzep() {
  var path = "/Users/sachin/Documents/md-sports-/src/lib/models/User.ts";
  var hash = "69020a31f56168a6581033f03718d9ed61935895";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/lib/models/User.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 19
        },
        end: {
          line: 11,
          column: 39
        }
      },
      "4": {
        start: {
          line: 12,
          column: 26
        },
        end: {
          line: 12,
          column: 68
        }
      },
      "5": {
        start: {
          line: 13,
          column: 32
        },
        end: {
          line: 13,
          column: 77
        }
      },
      "6": {
        start: {
          line: 14,
          column: 28
        },
        end: {
          line: 14,
          column: 71
        }
      },
      "7": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 18,
          column: 6
        }
      },
      "8": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 70
        }
      },
      "9": {
        start: {
          line: 26,
          column: 21
        },
        end: {
          line: 30,
          column: 10
        }
      },
      "10": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 32
        }
      },
      "11": {
        start: {
          line: 31,
          column: 19
        },
        end: {
          line: 31,
          column: 32
        }
      },
      "12": {
        start: {
          line: 32,
          column: 28
        },
        end: {
          line: 32,
          column: 51
        }
      },
      "13": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 64
        }
      },
      "14": {
        start: {
          line: 33,
          column: 37
        },
        end: {
          line: 33,
          column: 62
        }
      },
      "15": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 101,
          column: 3
        }
      },
      "16": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 93,
          column: 13
        }
      },
      "17": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 88
        }
      },
      "18": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 98,
          column: 13
        }
      },
      "19": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 88
        }
      },
      "20": {
        start: {
          line: 102,
          column: 17
        },
        end: {
          line: 102,
          column: 21
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 33
          }
        },
        loc: {
          start: {
            line: 15,
            column: 39
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 33
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 40
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 33,
            column: 32
          },
          end: {
            line: 33,
            column: 33
          }
        },
        loc: {
          start: {
            line: 33,
            column: 37
          },
          end: {
            line: 33,
            column: 62
          }
        },
        line: 33
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 90,
            column: 22
          },
          end: {
            line: 90,
            column: 23
          }
        },
        loc: {
          start: {
            line: 90,
            column: 36
          },
          end: {
            line: 94,
            column: 9
          }
        },
        line: 90
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 95,
            column: 22
          },
          end: {
            line: 95,
            column: 23
          }
        },
        loc: {
          start: {
            line: 95,
            column: 36
          },
          end: {
            line: 99,
            column: 9
          }
        },
        line: 95
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 18,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 16,
            column: 35
          },
          end: {
            line: 16,
            column: 38
          }
        }, {
          start: {
            line: 16,
            column: 41
          },
          end: {
            line: 18,
            column: 5
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 14
          }
        }, {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 16,
            column: 32
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "4": {
        loc: {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 98,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 98,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/lib/models/User.ts"],
      sourcesContent: ["import { Model, DataTypes } from 'sequelize';\nimport sequelize from '../db';\nimport bcrypt from 'bcryptjs';\nimport Role from './Role';\n\nclass User extends Model {\n    public id!: number;\n    public username!: string;\n    public passwordHash!: string;\n    public fullName!: string;\n    public email!: string;\n    public phone!: string;\n    public isActive!: boolean;\n    public roleId!: number;\n    public shopId!: number | null;\n    public readonly createdAt!: Date;\n    public readonly updatedAt!: Date;\n\n    // Custom instance methods\n    public async authenticate(password: string): Promise<boolean> {\n        return bcrypt.compare(password, this.passwordHash);\n    }\n\n    public async hasPermission(permissionName: string): Promise<boolean> {\n        const role = await Role.findByPk(this.roleId, {\n            include: ['permissions']\n        });\n\n        if (!role) return false;\n\n        const permissions = role.get('permissions') as any[];\n        return permissions.some(p => p.name === permissionName);\n    }\n}\n\nUser.init({\n    id: {\n        type: DataTypes.INTEGER,\n        autoIncrement: true,\n        primaryKey: true\n    },\n    username: {\n        type: DataTypes.STRING(50),\n        allowNull: false,\n        unique: true,\n        validate: {\n            notEmpty: true\n        }\n    },\n    passwordHash: {\n        type: DataTypes.STRING,\n        allowNull: false\n    },\n    fullName: {\n        type: DataTypes.STRING(100),\n        allowNull: false\n    },\n    email: {\n        type: DataTypes.STRING(100),\n        allowNull: false,\n        unique: true,\n        validate: {\n            isEmail: true\n        }\n    },\n    phone: {\n        type: DataTypes.STRING(20),\n        allowNull: true\n    },\n    isActive: {\n        type: DataTypes.BOOLEAN,\n        allowNull: false,\n        defaultValue: true\n    },\n    roleId: {\n        type: DataTypes.INTEGER,\n        allowNull: false\n    },\n    shopId: {\n        type: DataTypes.INTEGER,\n        allowNull: true,\n        comment: 'The shop this user is assigned to, if applicable'\n    }\n}, {\n    sequelize,\n    modelName: 'user',\n    tableName: 'users',\n    timestamps: true,\n    hooks: {\n        beforeCreate: async (user: User) => {\n            if (user.changed('passwordHash')) {\n                user.passwordHash = await bcrypt.hash(user.passwordHash, 12);\n            }\n        },\n        beforeUpdate: async (user: User) => {\n            if (user.changed('passwordHash')) {\n                user.passwordHash = await bcrypt.hash(user.passwordHash, 12);\n            }\n        }\n    }\n});\n\nexport default User; "],
      names: ["User", "Model", "authenticate", "password", "bcrypt", "compare", "passwordHash", "hasPermission", "permissionName", "role", "Role", "findByPk", "roleId", "include", "permissions", "get", "some", "p", "name", "init", "id", "type", "DataTypes", "INTEGER", "autoIncrement", "primaryKey", "username", "STRING", "allowNull", "unique", "validate", "notEmpty", "fullName", "email", "isEmail", "phone", "isActive", "BOOLEAN", "defaultValue", "shopId", "comment", "sequelize", "modelName", "tableName", "timestamps", "hooks", "beforeCreate", "user", "changed", "hash", "beforeUpdate"],
      mappings: ";;;;+BAsGA;;;eAAA;;;2BAtGiC;2DACX;iEACH;6DACF;;;;;;AAEjB,MAAMA,aAAaC,gBAAK;IAapB,0BAA0B;IAC1B,MAAaC,aAAaC,QAAgB,EAAoB;QAC1D,OAAOC,iBAAM,CAACC,OAAO,CAACF,UAAU,IAAI,CAACG,YAAY;IACrD;IAEA,MAAaC,cAAcC,cAAsB,EAAoB;QACjE,MAAMC,OAAO,MAAMC,aAAI,CAACC,QAAQ,CAAC,IAAI,CAACC,MAAM,EAAE;YAC1CC,SAAS;gBAAC;aAAc;QAC5B;QAEA,IAAI,CAACJ,MAAM,OAAO;QAElB,MAAMK,cAAcL,KAAKM,GAAG,CAAC;QAC7B,OAAOD,YAAYE,IAAI,CAACC,CAAAA,IAAKA,EAAEC,IAAI,KAAKV;IAC5C;AACJ;AAEAR,KAAKmB,IAAI,CAAC;IACNC,IAAI;QACAC,MAAMC,oBAAS,CAACC,OAAO;QACvBC,eAAe;QACfC,YAAY;IAChB;IACAC,UAAU;QACNL,MAAMC,oBAAS,CAACK,MAAM,CAAC;QACvBC,WAAW;QACXC,QAAQ;QACRC,UAAU;YACNC,UAAU;QACd;IACJ;IACAzB,cAAc;QACVe,MAAMC,oBAAS,CAACK,MAAM;QACtBC,WAAW;IACf;IACAI,UAAU;QACNX,MAAMC,oBAAS,CAACK,MAAM,CAAC;QACvBC,WAAW;IACf;IACAK,OAAO;QACHZ,MAAMC,oBAAS,CAACK,MAAM,CAAC;QACvBC,WAAW;QACXC,QAAQ;QACRC,UAAU;YACNI,SAAS;QACb;IACJ;IACAC,OAAO;QACHd,MAAMC,oBAAS,CAACK,MAAM,CAAC;QACvBC,WAAW;IACf;IACAQ,UAAU;QACNf,MAAMC,oBAAS,CAACe,OAAO;QACvBT,WAAW;QACXU,cAAc;IAClB;IACA1B,QAAQ;QACJS,MAAMC,oBAAS,CAACC,OAAO;QACvBK,WAAW;IACf;IACAW,QAAQ;QACJlB,MAAMC,oBAAS,CAACC,OAAO;QACvBK,WAAW;QACXY,SAAS;IACb;AACJ,GAAG;IACCC,WAAAA,WAAS;IACTC,WAAW;IACXC,WAAW;IACXC,YAAY;IACZC,OAAO;QACHC,cAAc,OAAOC;YACjB,IAAIA,KAAKC,OAAO,CAAC,iBAAiB;gBAC9BD,KAAKzC,YAAY,GAAG,MAAMF,iBAAM,CAAC6C,IAAI,CAACF,KAAKzC,YAAY,EAAE;YAC7D;QACJ;QACA4C,cAAc,OAAOH;YACjB,IAAIA,KAAKC,OAAO,CAAC,iBAAiB;gBAC9BD,KAAKzC,YAAY,GAAG,MAAMF,iBAAM,CAAC6C,IAAI,CAACF,KAAKzC,YAAY,EAAE;YAC7D;QACJ;IACJ;AACJ;MAEA,WAAeN"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "69020a31f56168a6581033f03718d9ed61935895"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1uidwszzep = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1uidwszzep();
cov_1uidwszzep().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1uidwszzep().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1uidwszzep().f[0]++;
    cov_1uidwszzep().s[2]++;
    return _default;
  }
});
const _sequelize =
/* istanbul ignore next */
(cov_1uidwszzep().s[3]++, require("sequelize"));
const _db =
/* istanbul ignore next */
(/*#__PURE__*/cov_1uidwszzep().s[4]++, _interop_require_default(require("../db")));
const _bcryptjs =
/* istanbul ignore next */
(/*#__PURE__*/cov_1uidwszzep().s[5]++, _interop_require_default(require("bcryptjs")));
const _Role =
/* istanbul ignore next */
(/*#__PURE__*/cov_1uidwszzep().s[6]++, _interop_require_default(require("./Role")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1uidwszzep().f[1]++;
  cov_1uidwszzep().s[7]++;
  return /* istanbul ignore next */(cov_1uidwszzep().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1uidwszzep().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1uidwszzep().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1uidwszzep().b[0][1]++, {
    default: obj
  });
}
class User extends
/* istanbul ignore next */
(_sequelize.Model) {
  // Custom instance methods
  async authenticate(password) {
    /* istanbul ignore next */
    cov_1uidwszzep().f[2]++;
    cov_1uidwszzep().s[8]++;
    return _bcryptjs.default.compare(password, this.passwordHash);
  }
  async hasPermission(permissionName) {
    /* istanbul ignore next */
    cov_1uidwszzep().f[3]++;
    const role =
    /* istanbul ignore next */
    (cov_1uidwszzep().s[9]++, await _Role.default.findByPk(this.roleId, {
      include: ["permissions"]
    }));
    /* istanbul ignore next */
    cov_1uidwszzep().s[10]++;
    if (!role) {
      /* istanbul ignore next */
      cov_1uidwszzep().b[2][0]++;
      cov_1uidwszzep().s[11]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1uidwszzep().b[2][1]++;
    }
    const permissions =
    /* istanbul ignore next */
    (cov_1uidwszzep().s[12]++, role.get("permissions"));
    /* istanbul ignore next */
    cov_1uidwszzep().s[13]++;
    return permissions.some(p => {
      /* istanbul ignore next */
      cov_1uidwszzep().f[4]++;
      cov_1uidwszzep().s[14]++;
      return p.name === permissionName;
    });
  }
}
/* istanbul ignore next */
cov_1uidwszzep().s[15]++;
User.init({
  id: {
    type: _sequelize.DataTypes.INTEGER,
    autoIncrement: true,
    primaryKey: true
  },
  username: {
    type: _sequelize.DataTypes.STRING(50),
    allowNull: false,
    unique: true,
    validate: {
      notEmpty: true
    }
  },
  passwordHash: {
    type: _sequelize.DataTypes.STRING,
    allowNull: false
  },
  fullName: {
    type: _sequelize.DataTypes.STRING(100),
    allowNull: false
  },
  email: {
    type: _sequelize.DataTypes.STRING(100),
    allowNull: false,
    unique: true,
    validate: {
      isEmail: true
    }
  },
  phone: {
    type: _sequelize.DataTypes.STRING(20),
    allowNull: true
  },
  isActive: {
    type: _sequelize.DataTypes.BOOLEAN,
    allowNull: false,
    defaultValue: true
  },
  roleId: {
    type: _sequelize.DataTypes.INTEGER,
    allowNull: false
  },
  shopId: {
    type: _sequelize.DataTypes.INTEGER,
    allowNull: true,
    comment: "The shop this user is assigned to, if applicable"
  }
}, {
  sequelize: _db.default,
  modelName: "user",
  tableName: "users",
  timestamps: true,
  hooks: {
    beforeCreate: async user => {
      /* istanbul ignore next */
      cov_1uidwszzep().f[5]++;
      cov_1uidwszzep().s[16]++;
      if (user.changed("passwordHash")) {
        /* istanbul ignore next */
        cov_1uidwszzep().b[3][0]++;
        cov_1uidwszzep().s[17]++;
        user.passwordHash = await _bcryptjs.default.hash(user.passwordHash, 12);
      } else
      /* istanbul ignore next */
      {
        cov_1uidwszzep().b[3][1]++;
      }
    },
    beforeUpdate: async user => {
      /* istanbul ignore next */
      cov_1uidwszzep().f[6]++;
      cov_1uidwszzep().s[18]++;
      if (user.changed("passwordHash")) {
        /* istanbul ignore next */
        cov_1uidwszzep().b[4][0]++;
        cov_1uidwszzep().s[19]++;
        user.passwordHash = await _bcryptjs.default.hash(user.passwordHash, 12);
      } else
      /* istanbul ignore next */
      {
        cov_1uidwszzep().b[4][1]++;
      }
    }
  }
});
const _default =
/* istanbul ignore next */
(cov_1uidwszzep().s[20]++, User);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,