a9199a29ac26bf732eb678449ac38837
"use client";
"use strict";

/* istanbul ignore next */
function cov_10lqnyivs7() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/(protected)/settings/users/add/page.tsx";
  var hash = "23e2be654eec6e1e2d34e714a4ffde54f89c63d1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/(protected)/settings/users/add/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 27
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 46
        }
      },
      "6": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "7": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 44
        }
      },
      "8": {
        start: {
          line: 17,
          column: 22
        },
        end: {
          line: 49,
          column: 1
        }
      },
      "9": {
        start: {
          line: 51,
          column: 19
        },
        end: {
          line: 51,
          column: 47
        }
      },
      "10": {
        start: {
          line: 52,
          column: 36
        },
        end: {
          line: 61,
          column: 6
        }
      },
      "11": {
        start: {
          line: 62,
          column: 38
        },
        end: {
          line: 62,
          column: 65
        }
      },
      "12": {
        start: {
          line: 63,
          column: 38
        },
        end: {
          line: 63,
          column: 62
        }
      },
      "13": {
        start: {
          line: 64,
          column: 42
        },
        end: {
          line: 64,
          column: 66
        }
      },
      "14": {
        start: {
          line: 65,
          column: 44
        },
        end: {
          line: 65,
          column: 68
        }
      },
      "15": {
        start: {
          line: 66,
          column: 44
        },
        end: {
          line: 66,
          column: 70
        }
      },
      "16": {
        start: {
          line: 67,
          column: 54
        },
        end: {
          line: 67,
          column: 78
        }
      },
      "17": {
        start: {
          line: 68,
          column: 50
        },
        end: {
          line: 68,
          column: 76
        }
      },
      "18": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 103,
          column: 11
        }
      },
      "19": {
        start: {
          line: 76,
          column: 27
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "20": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 34
        }
      },
      "21": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 100,
          column: 13
        }
      },
      "22": {
        start: {
          line: 80,
          column: 33
        },
        end: {
          line: 84,
          column: 18
        }
      },
      "23": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 87,
          column: 17
        }
      },
      "24": {
        start: {
          line: 86,
          column: 20
        },
        end: {
          line: 86,
          column: 61
        }
      },
      "25": {
        start: {
          line: 88,
          column: 29
        },
        end: {
          line: 88,
          column: 50
        }
      },
      "26": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 94,
          column: 17
        }
      },
      "27": {
        start: {
          line: 90,
          column: 20
        },
        end: {
          line: 90,
          column: 53
        }
      },
      "28": {
        start: {
          line: 92,
          column: 20
        },
        end: {
          line: 92,
          column: 74
        }
      },
      "29": {
        start: {
          line: 93,
          column: 20
        },
        end: {
          line: 93,
          column: 40
        }
      },
      "30": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 96,
          column: 62
        }
      },
      "31": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 36
        }
      },
      "32": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 99,
          column: 39
        }
      },
      "33": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 21
        }
      },
      "34": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 134,
          column: 11
        }
      },
      "35": {
        start: {
          line: 106,
          column: 30
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "36": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 37
        }
      },
      "37": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 131,
          column: 13
        }
      },
      "38": {
        start: {
          line: 109,
          column: 33
        },
        end: {
          line: 113,
          column: 18
        }
      },
      "39": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 116,
          column: 17
        }
      },
      "40": {
        start: {
          line: 115,
          column: 20
        },
        end: {
          line: 115,
          column: 64
        }
      },
      "41": {
        start: {
          line: 117,
          column: 29
        },
        end: {
          line: 117,
          column: 50
        }
      },
      "42": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 125,
          column: 17
        }
      },
      "43": {
        start: {
          line: 120,
          column: 45
        },
        end: {
          line: 120,
          column: 149
        }
      },
      "44": {
        start: {
          line: 120,
          column: 73
        },
        end: {
          line: 120,
          column: 148
        }
      },
      "45": {
        start: {
          line: 121,
          column: 20
        },
        end: {
          line: 121,
          column: 59
        }
      },
      "46": {
        start: {
          line: 123,
          column: 20
        },
        end: {
          line: 123,
          column: 77
        }
      },
      "47": {
        start: {
          line: 124,
          column: 20
        },
        end: {
          line: 124,
          column: 45
        }
      },
      "48": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 127,
          column: 65
        }
      },
      "49": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 128,
          column: 41
        }
      },
      "50": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 42
        }
      },
      "51": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 24
        }
      },
      "52": {
        start: {
          line: 136,
          column: 60
        },
        end: {
          line: 136,
          column: 84
        }
      },
      "53": {
        start: {
          line: 137,
          column: 56
        },
        end: {
          line: 137,
          column: 82
        }
      },
      "54": {
        start: {
          line: 138,
          column: 52
        },
        end: {
          line: 138,
          column: 76
        }
      },
      "55": {
        start: {
          line: 139,
          column: 52
        },
        end: {
          line: 139,
          column: 76
        }
      },
      "56": {
        start: {
          line: 140,
          column: 66
        },
        end: {
          line: 140,
          column: 93
        }
      },
      "57": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 179,
          column: 11
        }
      },
      "58": {
        start: {
          line: 143,
          column: 33
        },
        end: {
          line: 177,
          column: 9
        }
      },
      "59": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 40
        }
      },
      "60": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 176,
          column: 13
        }
      },
      "61": {
        start: {
          line: 146,
          column: 33
        },
        end: {
          line: 150,
          column: 18
        }
      },
      "62": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 153,
          column: 17
        }
      },
      "63": {
        start: {
          line: 152,
          column: 20
        },
        end: {
          line: 152,
          column: 67
        }
      },
      "64": {
        start: {
          line: 154,
          column: 29
        },
        end: {
          line: 154,
          column: 50
        }
      },
      "65": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 170,
          column: 17
        }
      },
      "66": {
        start: {
          line: 157,
          column: 51
        },
        end: {
          line: 165,
          column: 22
        }
      },
      "67": {
        start: {
          line: 158,
          column: 49
        },
        end: {
          line: 158,
          column: 75
        }
      },
      "68": {
        start: {
          line: 159,
          column: 24
        },
        end: {
          line: 164,
          column: 26
        }
      },
      "69": {
        start: {
          line: 166,
          column: 20
        },
        end: {
          line: 166,
          column: 68
        }
      },
      "70": {
        start: {
          line: 168,
          column: 20
        },
        end: {
          line: 168,
          column: 80
        }
      },
      "71": {
        start: {
          line: 169,
          column: 20
        },
        end: {
          line: 169,
          column: 48
        }
      },
      "72": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 68
        }
      },
      "73": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 173,
          column: 44
        }
      },
      "74": {
        start: {
          line: 175,
          column: 16
        },
        end: {
          line: 175,
          column: 45
        }
      },
      "75": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 27
        }
      },
      "76": {
        start: {
          line: 181,
          column: 37
        },
        end: {
          line: 202,
          column: 5
        }
      },
      "77": {
        start: {
          line: 182,
          column: 29
        },
        end: {
          line: 200,
          column: 9
        }
      },
      "78": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 67
        }
      },
      "79": {
        start: {
          line: 204,
          column: 33
        },
        end: {
          line: 226,
          column: 5
        }
      },
      "80": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 40
        }
      },
      "81": {
        start: {
          line: 206,
          column: 25
        },
        end: {
          line: 206,
          column: 69
        }
      },
      "82": {
        start: {
          line: 206,
          column: 49
        },
        end: {
          line: 206,
          column: 68
        }
      },
      "83": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "84": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 212,
          column: 20
        }
      },
      "85": {
        start: {
          line: 208,
          column: 33
        },
        end: {
          line: 212,
          column: 17
        }
      },
      "86": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 224,
          column: 15
        }
      },
      "87": {
        start: {
          line: 215,
          column: 59
        },
        end: {
          line: 215,
          column: 69
        }
      },
      "88": {
        start: {
          line: 216,
          column: 39
        },
        end: {
          line: 216,
          column: 85
        }
      },
      "89": {
        start: {
          line: 216,
          column: 73
        },
        end: {
          line: 216,
          column: 79
        }
      },
      "90": {
        start: {
          line: 217,
          column: 16
        },
        end: {
          line: 221,
          column: 24
        }
      },
      "91": {
        start: {
          line: 217,
          column: 37
        },
        end: {
          line: 221,
          column: 21
        }
      },
      "92": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 223,
          column: 72
        }
      },
      "93": {
        start: {
          line: 228,
          column: 32
        },
        end: {
          line: 228,
          column: 221
        }
      },
      "94": {
        start: {
          line: 228,
          column: 74
        },
        end: {
          line: 228,
          column: 220
        }
      },
      "95": {
        start: {
          line: 230,
          column: 31
        },
        end: {
          line: 237,
          column: 10
        }
      },
      "96": {
        start: {
          line: 231,
          column: 23
        },
        end: {
          line: 231,
          column: 51
        }
      },
      "97": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "98": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 29
        }
      },
      "99": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 235,
          column: 37
        }
      },
      "100": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 19
        }
      },
      "101": {
        start: {
          line: 238,
          column: 29
        },
        end: {
          line: 244,
          column: 5
        }
      },
      "102": {
        start: {
          line: 239,
          column: 32
        },
        end: {
          line: 239,
          column: 40
        }
      },
      "103": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 243,
          column: 16
        }
      },
      "104": {
        start: {
          line: 240,
          column: 29
        },
        end: {
          line: 243,
          column: 13
        }
      },
      "105": {
        start: {
          line: 245,
          column: 35
        },
        end: {
          line: 256,
          column: 5
        }
      },
      "106": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 255,
          column: 11
        }
      },
      "107": {
        start: {
          line: 247,
          column: 35
        },
        end: {
          line: 250,
          column: 13
        }
      },
      "108": {
        start: {
          line: 247,
          column: 107
        },
        end: {
          line: 247,
          column: 126
        }
      },
      "109": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 254,
          column: 14
        }
      },
      "110": {
        start: {
          line: 257,
          column: 36
        },
        end: {
          line: 276,
          column: 5
        }
      },
      "111": {
        start: {
          line: 258,
          column: 36
        },
        end: {
          line: 258,
          column: 77
        }
      },
      "112": {
        start: {
          line: 258,
          column: 72
        },
        end: {
          line: 258,
          column: 76
        }
      },
      "113": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 275,
          column: 11
        }
      },
      "114": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 270,
          column: 13
        }
      },
      "115": {
        start: {
          line: 263,
          column: 16
        },
        end: {
          line: 266,
          column: 20
        }
      },
      "116": {
        start: {
          line: 269,
          column: 16
        },
        end: {
          line: 269,
          column: 98
        }
      },
      "117": {
        start: {
          line: 269,
          column: 63
        },
        end: {
          line: 269,
          column: 96
        }
      },
      "118": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 274,
          column: 14
        }
      },
      "119": {
        start: {
          line: 277,
          column: 42
        },
        end: {
          line: 288,
          column: 5
        }
      },
      "120": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 287,
          column: 11
        }
      },
      "121": {
        start: {
          line: 279,
          column: 39
        },
        end: {
          line: 282,
          column: 13
        }
      },
      "122": {
        start: {
          line: 279,
          column: 116
        },
        end: {
          line: 279,
          column: 132
        }
      },
      "123": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 286,
          column: 14
        }
      },
      "124": {
        start: {
          line: 289,
          column: 36
        },
        end: {
          line: 294,
          column: 5
        }
      },
      "125": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 293,
          column: 16
        }
      },
      "126": {
        start: {
          line: 290,
          column: 29
        },
        end: {
          line: 293,
          column: 13
        }
      },
      "127": {
        start: {
          line: 292,
          column: 74
        },
        end: {
          line: 292,
          column: 91
        }
      },
      "128": {
        start: {
          line: 295,
          column: 25
        },
        end: {
          line: 330,
          column: 5
        }
      },
      "129": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 296,
          column: 27
        }
      },
      "130": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 297,
          column: 27
        }
      },
      "131": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 298,
          column: 25
        }
      },
      "132": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 299,
          column: 27
        }
      },
      "133": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 305,
          column: 9
        }
      },
      "134": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 302,
          column: 51
        }
      },
      "135": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 303,
          column: 32
        }
      },
      "136": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 19
        }
      },
      "137": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 329,
          column: 9
        }
      },
      "138": {
        start: {
          line: 307,
          column: 29
        },
        end: {
          line: 314,
          column: 14
        }
      },
      "139": {
        start: {
          line: 315,
          column: 25
        },
        end: {
          line: 315,
          column: 46
        }
      },
      "140": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 323,
          column: 13
        }
      },
      "141": {
        start: {
          line: 317,
          column: 16
        },
        end: {
          line: 317,
          column: 74
        }
      },
      "142": {
        start: {
          line: 318,
          column: 16
        },
        end: {
          line: 320,
          column: 25
        }
      },
      "143": {
        start: {
          line: 319,
          column: 20
        },
        end: {
          line: 319,
          column: 55
        }
      },
      "144": {
        start: {
          line: 322,
          column: 16
        },
        end: {
          line: 322,
          column: 67
        }
      },
      "145": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 325,
          column: 55
        }
      },
      "146": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 326,
          column: 65
        }
      },
      "147": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 32
        }
      },
      "148": {
        start: {
          line: 332,
          column: 29
        },
        end: {
          line: 335,
          column: 5
        }
      },
      "149": {
        start: {
          line: 333,
          column: 34
        },
        end: {
          line: 333,
          column: 75
        }
      },
      "150": {
        start: {
          line: 333,
          column: 70
        },
        end: {
          line: 333,
          column: 74
        }
      },
      "151": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 334,
          column: 80
        }
      },
      "152": {
        start: {
          line: 334,
          column: 45
        },
        end: {
          line: 334,
          column: 78
        }
      },
      "153": {
        start: {
          line: 337,
          column: 38
        },
        end: {
          line: 340,
          column: 5
        }
      },
      "154": {
        start: {
          line: 338,
          column: 34
        },
        end: {
          line: 338,
          column: 75
        }
      },
      "155": {
        start: {
          line: 338,
          column: 70
        },
        end: {
          line: 338,
          column: 74
        }
      },
      "156": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 339,
          column: 148
        }
      },
      "157": {
        start: {
          line: 339,
          column: 44
        },
        end: {
          line: 339,
          column: 77
        }
      },
      "158": {
        start: {
          line: 339,
          column: 113
        },
        end: {
          line: 339,
          column: 146
        }
      },
      "159": {
        start: {
          line: 341,
          column: 4
        },
        end: {
          line: 787,
          column: 7
        }
      },
      "160": {
        start: {
          line: 444,
          column: 113
        },
        end: {
          line: 447,
          column: 63
        }
      },
      "161": {
        start: {
          line: 466,
          column: 66
        },
        end: {
          line: 466,
          column: 79
        }
      },
      "162": {
        start: {
          line: 467,
          column: 44
        },
        end: {
          line: 491,
          column: 60
        }
      },
      "163": {
        start: {
          line: 469,
          column: 61
        },
        end: {
          line: 469,
          column: 94
        }
      },
      "164": {
        start: {
          line: 507,
          column: 61
        },
        end: {
          line: 507,
          column: 113
        }
      },
      "165": {
        start: {
          line: 523,
          column: 63
        },
        end: {
          line: 523,
          column: 98
        }
      },
      "166": {
        start: {
          line: 547,
          column: 105
        },
        end: {
          line: 609,
          column: 54
        }
      },
      "167": {
        start: {
          line: 558,
          column: 79
        },
        end: {
          line: 558,
          column: 128
        }
      },
      "168": {
        start: {
          line: 569,
          column: 125
        },
        end: {
          line: 606,
          column: 77
        }
      },
      "169": {
        start: {
          line: 576,
          column: 86
        },
        end: {
          line: 576,
          column: 123
        }
      },
      "170": {
        start: {
          line: 629,
          column: 71
        },
        end: {
          line: 629,
          column: 112
        }
      },
      "171": {
        start: {
          line: 662,
          column: 101
        },
        end: {
          line: 694,
          column: 62
        }
      },
      "172": {
        start: {
          line: 669,
          column: 74
        },
        end: {
          line: 669,
          column: 126
        }
      },
      "173": {
        start: {
          line: 764,
          column: 53
        },
        end: {
          line: 764,
          column: 87
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "AddUserPage",
        decl: {
          start: {
            line: 50,
            column: 9
          },
          end: {
            line: 50,
            column: 20
          }
        },
        loc: {
          start: {
            line: 50,
            column: 23
          },
          end: {
            line: 788,
            column: 1
          }
        },
        line: 50
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 75,
            column: 26
          },
          end: {
            line: 75,
            column: 27
          }
        },
        loc: {
          start: {
            line: 75,
            column: 30
          },
          end: {
            line: 103,
            column: 5
          }
        },
        line: 75
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 76,
            column: 27
          },
          end: {
            line: 76,
            column: 28
          }
        },
        loc: {
          start: {
            line: 76,
            column: 37
          },
          end: {
            line: 101,
            column: 9
          }
        },
        line: 76
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 105,
            column: 26
          },
          end: {
            line: 105,
            column: 27
          }
        },
        loc: {
          start: {
            line: 105,
            column: 30
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 105
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 106,
            column: 30
          },
          end: {
            line: 106,
            column: 31
          }
        },
        loc: {
          start: {
            line: 106,
            column: 40
          },
          end: {
            line: 132,
            column: 9
          }
        },
        line: 106
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 120,
            column: 62
          },
          end: {
            line: 120,
            column: 63
          }
        },
        loc: {
          start: {
            line: 120,
            column: 73
          },
          end: {
            line: 120,
            column: 148
          }
        },
        line: 120
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 142,
            column: 26
          },
          end: {
            line: 142,
            column: 27
          }
        },
        loc: {
          start: {
            line: 142,
            column: 30
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 142
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 143,
            column: 33
          },
          end: {
            line: 143,
            column: 34
          }
        },
        loc: {
          start: {
            line: 143,
            column: 43
          },
          end: {
            line: 177,
            column: 9
          }
        },
        line: 143
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 157,
            column: 65
          },
          end: {
            line: 157,
            column: 66
          }
        },
        loc: {
          start: {
            line: 157,
            column: 79
          },
          end: {
            line: 165,
            column: 21
          }
        },
        line: 157
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 181,
            column: 37
          },
          end: {
            line: 181,
            column: 38
          }
        },
        loc: {
          start: {
            line: 181,
            column: 55
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 181
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 204,
            column: 33
          },
          end: {
            line: 204,
            column: 34
          }
        },
        loc: {
          start: {
            line: 204,
            column: 47
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 204
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 206,
            column: 44
          },
          end: {
            line: 206,
            column: 45
          }
        },
        loc: {
          start: {
            line: 206,
            column: 49
          },
          end: {
            line: 206,
            column: 68
          }
        },
        line: 206
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 208,
            column: 24
          },
          end: {
            line: 208,
            column: 25
          }
        },
        loc: {
          start: {
            line: 208,
            column: 33
          },
          end: {
            line: 212,
            column: 17
          }
        },
        line: 208
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 215,
            column: 52
          },
          end: {
            line: 215,
            column: 53
          }
        },
        loc: {
          start: {
            line: 215,
            column: 59
          },
          end: {
            line: 215,
            column: 69
          }
        },
        line: 215
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 215,
            column: 76
          },
          end: {
            line: 215,
            column: 77
          }
        },
        loc: {
          start: {
            line: 215,
            column: 84
          },
          end: {
            line: 222,
            column: 13
          }
        },
        line: 215
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 216,
            column: 68
          },
          end: {
            line: 216,
            column: 69
          }
        },
        loc: {
          start: {
            line: 216,
            column: 73
          },
          end: {
            line: 216,
            column: 79
          }
        },
        line: 216
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 217,
            column: 28
          },
          end: {
            line: 217,
            column: 29
          }
        },
        loc: {
          start: {
            line: 217,
            column: 37
          },
          end: {
            line: 221,
            column: 21
          }
        },
        line: 217
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 222,
            column: 21
          },
          end: {
            line: 222,
            column: 22
          }
        },
        loc: {
          start: {
            line: 222,
            column: 30
          },
          end: {
            line: 224,
            column: 13
          }
        },
        line: 222
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 228,
            column: 60
          },
          end: {
            line: 228,
            column: 61
          }
        },
        loc: {
          start: {
            line: 228,
            column: 74
          },
          end: {
            line: 228,
            column: 220
          }
        },
        line: 228
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 230,
            column: 58
          },
          end: {
            line: 230,
            column: 59
          }
        },
        loc: {
          start: {
            line: 230,
            column: 77
          },
          end: {
            line: 237,
            column: 5
          }
        },
        line: 230
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 238,
            column: 29
          },
          end: {
            line: 238,
            column: 30
          }
        },
        loc: {
          start: {
            line: 238,
            column: 34
          },
          end: {
            line: 244,
            column: 5
          }
        },
        line: 238
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 240,
            column: 20
          },
          end: {
            line: 240,
            column: 21
          }
        },
        loc: {
          start: {
            line: 240,
            column: 29
          },
          end: {
            line: 243,
            column: 13
          }
        },
        line: 240
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 245,
            column: 35
          },
          end: {
            line: 245,
            column: 36
          }
        },
        loc: {
          start: {
            line: 245,
            column: 51
          },
          end: {
            line: 256,
            column: 5
          }
        },
        line: 245
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 246,
            column: 20
          },
          end: {
            line: 246,
            column: 21
          }
        },
        loc: {
          start: {
            line: 246,
            column: 28
          },
          end: {
            line: 255,
            column: 9
          }
        },
        line: 246
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 247,
            column: 101
          },
          end: {
            line: 247,
            column: 102
          }
        },
        loc: {
          start: {
            line: 247,
            column: 107
          },
          end: {
            line: 247,
            column: 126
          }
        },
        line: 247
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 257,
            column: 36
          },
          end: {
            line: 257,
            column: 37
          }
        },
        loc: {
          start: {
            line: 257,
            column: 57
          },
          end: {
            line: 276,
            column: 5
          }
        },
        line: 257
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 258,
            column: 67
          },
          end: {
            line: 258,
            column: 68
          }
        },
        loc: {
          start: {
            line: 258,
            column: 72
          },
          end: {
            line: 258,
            column: 76
          }
        },
        line: 258
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 259,
            column: 20
          },
          end: {
            line: 259,
            column: 21
          }
        },
        loc: {
          start: {
            line: 259,
            column: 28
          },
          end: {
            line: 275,
            column: 9
          }
        },
        line: 259
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 269,
            column: 57
          },
          end: {
            line: 269,
            column: 58
          }
        },
        loc: {
          start: {
            line: 269,
            column: 63
          },
          end: {
            line: 269,
            column: 96
          }
        },
        line: 269
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 277,
            column: 42
          },
          end: {
            line: 277,
            column: 43
          }
        },
        loc: {
          start: {
            line: 277,
            column: 55
          },
          end: {
            line: 288,
            column: 5
          }
        },
        line: 277
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 278,
            column: 20
          },
          end: {
            line: 278,
            column: 21
          }
        },
        loc: {
          start: {
            line: 278,
            column: 28
          },
          end: {
            line: 287,
            column: 9
          }
        },
        line: 278
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 279,
            column: 110
          },
          end: {
            line: 279,
            column: 111
          }
        },
        loc: {
          start: {
            line: 279,
            column: 116
          },
          end: {
            line: 279,
            column: 132
          }
        },
        line: 279
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 289,
            column: 36
          },
          end: {
            line: 289,
            column: 37
          }
        },
        loc: {
          start: {
            line: 289,
            column: 49
          },
          end: {
            line: 294,
            column: 5
          }
        },
        line: 289
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 290,
            column: 20
          },
          end: {
            line: 290,
            column: 21
          }
        },
        loc: {
          start: {
            line: 290,
            column: 29
          },
          end: {
            line: 293,
            column: 13
          }
        },
        line: 290
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 292,
            column: 67
          },
          end: {
            line: 292,
            column: 68
          }
        },
        loc: {
          start: {
            line: 292,
            column: 74
          },
          end: {
            line: 292,
            column: 91
          }
        },
        line: 292
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 295,
            column: 25
          },
          end: {
            line: 295,
            column: 26
          }
        },
        loc: {
          start: {
            line: 295,
            column: 36
          },
          end: {
            line: 330,
            column: 5
          }
        },
        line: 295
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 318,
            column: 27
          },
          end: {
            line: 318,
            column: 28
          }
        },
        loc: {
          start: {
            line: 318,
            column: 31
          },
          end: {
            line: 320,
            column: 17
          }
        },
        line: 318
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 332,
            column: 29
          },
          end: {
            line: 332,
            column: 30
          }
        },
        loc: {
          start: {
            line: 332,
            column: 39
          },
          end: {
            line: 335,
            column: 5
          }
        },
        line: 332
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 333,
            column: 65
          },
          end: {
            line: 333,
            column: 66
          }
        },
        loc: {
          start: {
            line: 333,
            column: 70
          },
          end: {
            line: 333,
            column: 74
          }
        },
        line: 333
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 334,
            column: 39
          },
          end: {
            line: 334,
            column: 40
          }
        },
        loc: {
          start: {
            line: 334,
            column: 45
          },
          end: {
            line: 334,
            column: 78
          }
        },
        line: 334
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 337,
            column: 38
          },
          end: {
            line: 337,
            column: 39
          }
        },
        loc: {
          start: {
            line: 337,
            column: 48
          },
          end: {
            line: 340,
            column: 5
          }
        },
        line: 337
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 338,
            column: 65
          },
          end: {
            line: 338,
            column: 66
          }
        },
        loc: {
          start: {
            line: 338,
            column: 70
          },
          end: {
            line: 338,
            column: 74
          }
        },
        line: 338
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 339,
            column: 38
          },
          end: {
            line: 339,
            column: 39
          }
        },
        loc: {
          start: {
            line: 339,
            column: 44
          },
          end: {
            line: 339,
            column: 77
          }
        },
        line: 339
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 339,
            column: 107
          },
          end: {
            line: 339,
            column: 108
          }
        },
        loc: {
          start: {
            line: 339,
            column: 113
          },
          end: {
            line: 339,
            column: 146
          }
        },
        line: 339
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 444,
            column: 91
          },
          end: {
            line: 444,
            column: 92
          }
        },
        loc: {
          start: {
            line: 444,
            column: 113
          },
          end: {
            line: 447,
            column: 63
          }
        },
        line: 444
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 465,
            column: 68
          },
          end: {
            line: 465,
            column: 69
          }
        },
        loc: {
          start: {
            line: 465,
            column: 80
          },
          end: {
            line: 492,
            column: 41
          }
        },
        line: 465
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 469,
            column: 57
          },
          end: {
            line: 469,
            column: 58
          }
        },
        loc: {
          start: {
            line: 469,
            column: 61
          },
          end: {
            line: 469,
            column: 94
          }
        },
        line: 469
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 507,
            column: 57
          },
          end: {
            line: 507,
            column: 58
          }
        },
        loc: {
          start: {
            line: 507,
            column: 61
          },
          end: {
            line: 507,
            column: 113
          }
        },
        line: 507
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 523,
            column: 58
          },
          end: {
            line: 523,
            column: 59
          }
        },
        loc: {
          start: {
            line: 523,
            column: 63
          },
          end: {
            line: 523,
            column: 98
          }
        },
        line: 523
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 547,
            column: 81
          },
          end: {
            line: 547,
            column: 82
          }
        },
        loc: {
          start: {
            line: 547,
            column: 105
          },
          end: {
            line: 609,
            column: 54
          }
        },
        line: 547
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 558,
            column: 74
          },
          end: {
            line: 558,
            column: 75
          }
        },
        loc: {
          start: {
            line: 558,
            column: 79
          },
          end: {
            line: 558,
            column: 128
          }
        },
        line: 558
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 569,
            column: 97
          },
          end: {
            line: 569,
            column: 98
          }
        },
        loc: {
          start: {
            line: 569,
            column: 125
          },
          end: {
            line: 606,
            column: 77
          }
        },
        line: 569
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 576,
            column: 82
          },
          end: {
            line: 576,
            column: 83
          }
        },
        loc: {
          start: {
            line: 576,
            column: 86
          },
          end: {
            line: 576,
            column: 123
          }
        },
        line: 576
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 629,
            column: 66
          },
          end: {
            line: 629,
            column: 67
          }
        },
        loc: {
          start: {
            line: 629,
            column: 71
          },
          end: {
            line: 629,
            column: 112
          }
        },
        line: 629
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 662,
            column: 76
          },
          end: {
            line: 662,
            column: 77
          }
        },
        loc: {
          start: {
            line: 662,
            column: 101
          },
          end: {
            line: 694,
            column: 62
          }
        },
        line: 662
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 669,
            column: 70
          },
          end: {
            line: 669,
            column: 71
          }
        },
        loc: {
          start: {
            line: 669,
            column: 74
          },
          end: {
            line: 669,
            column: 126
          }
        },
        line: 669
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 764,
            column: 49
          },
          end: {
            line: 764,
            column: 50
          }
        },
        loc: {
          start: {
            line: 764,
            column: 53
          },
          end: {
            line: 764,
            column: 87
          }
        },
        line: 764
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 85,
            column: 16
          },
          end: {
            line: 87,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 16
          },
          end: {
            line: 87,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "1": {
        loc: {
          start: {
            line: 89,
            column: 16
          },
          end: {
            line: 94,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 16
          },
          end: {
            line: 94,
            column: 17
          }
        }, {
          start: {
            line: 91,
            column: 23
          },
          end: {
            line: 94,
            column: 17
          }
        }],
        line: 89
      },
      "2": {
        loc: {
          start: {
            line: 90,
            column: 36
          },
          end: {
            line: 90,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 36
          },
          end: {
            line: 90,
            column: 45
          }
        }, {
          start: {
            line: 90,
            column: 49
          },
          end: {
            line: 90,
            column: 51
          }
        }],
        line: 90
      },
      "3": {
        loc: {
          start: {
            line: 114,
            column: 16
          },
          end: {
            line: 116,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 16
          },
          end: {
            line: 116,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "4": {
        loc: {
          start: {
            line: 118,
            column: 16
          },
          end: {
            line: 125,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 16
          },
          end: {
            line: 125,
            column: 17
          }
        }, {
          start: {
            line: 122,
            column: 23
          },
          end: {
            line: 125,
            column: 17
          }
        }],
        line: 118
      },
      "5": {
        loc: {
          start: {
            line: 120,
            column: 73
          },
          end: {
            line: 120,
            column: 148
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 73
          },
          end: {
            line: 120,
            column: 89
          }
        }, {
          start: {
            line: 120,
            column: 94
          },
          end: {
            line: 120,
            column: 119
          }
        }, {
          start: {
            line: 120,
            column: 123
          },
          end: {
            line: 120,
            column: 147
          }
        }],
        line: 120
      },
      "6": {
        loc: {
          start: {
            line: 151,
            column: 16
          },
          end: {
            line: 153,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 16
          },
          end: {
            line: 153,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "7": {
        loc: {
          start: {
            line: 155,
            column: 16
          },
          end: {
            line: 170,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 16
          },
          end: {
            line: 170,
            column: 17
          }
        }, {
          start: {
            line: 167,
            column: 23
          },
          end: {
            line: 170,
            column: 17
          }
        }],
        line: 155
      },
      "8": {
        loc: {
          start: {
            line: 161,
            column: 34
          },
          end: {
            line: 161,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 34
          },
          end: {
            line: 161,
            column: 56
          }
        }, {
          start: {
            line: 161,
            column: 60
          },
          end: {
            line: 161,
            column: 75
          }
        }],
        line: 161
      },
      "9": {
        loc: {
          start: {
            line: 201,
            column: 15
          },
          end: {
            line: 201,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 201,
            column: 15
          },
          end: {
            line: 201,
            column: 43
          }
        }, {
          start: {
            line: 201,
            column: 47
          },
          end: {
            line: 201,
            column: 66
          }
        }],
        line: 201
      },
      "10": {
        loc: {
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        }, {
          start: {
            line: 213,
            column: 15
          },
          end: {
            line: 225,
            column: 9
          }
        }],
        line: 207
      },
      "11": {
        loc: {
          start: {
            line: 216,
            column: 39
          },
          end: {
            line: 216,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 216,
            column: 54
          },
          end: {
            line: 216,
            column: 80
          }
        }, {
          start: {
            line: 216,
            column: 83
          },
          end: {
            line: 216,
            column: 85
          }
        }],
        line: 216
      },
      "12": {
        loc: {
          start: {
            line: 228,
            column: 74
          },
          end: {
            line: 228,
            column: 220
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 228,
            column: 74
          },
          end: {
            line: 228,
            column: 144
          }
        }, {
          start: {
            line: 228,
            column: 148
          },
          end: {
            line: 228,
            column: 220
          }
        }],
        line: 228
      },
      "13": {
        loc: {
          start: {
            line: 231,
            column: 23
          },
          end: {
            line: 231,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 23
          },
          end: {
            line: 231,
            column: 40
          }
        }, {
          start: {
            line: 231,
            column: 44
          },
          end: {
            line: 231,
            column: 51
          }
        }],
        line: 231
      },
      "14": {
        loc: {
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "15": {
        loc: {
          start: {
            line: 247,
            column: 35
          },
          end: {
            line: 250,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 247,
            column: 77
          },
          end: {
            line: 247,
            column: 127
          }
        }, {
          start: {
            line: 247,
            column: 130
          },
          end: {
            line: 250,
            column: 13
          }
        }],
        line: 247
      },
      "16": {
        loc: {
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 270,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 270,
            column: 13
          }
        }, {
          start: {
            line: 267,
            column: 19
          },
          end: {
            line: 270,
            column: 13
          }
        }],
        line: 261
      },
      "17": {
        loc: {
          start: {
            line: 279,
            column: 39
          },
          end: {
            line: 282,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 279,
            column: 82
          },
          end: {
            line: 279,
            column: 133
          }
        }, {
          start: {
            line: 279,
            column: 136
          },
          end: {
            line: 282,
            column: 13
          }
        }],
        line: 279
      },
      "18": {
        loc: {
          start: {
            line: 292,
            column: 33
          },
          end: {
            line: 292,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 292,
            column: 45
          },
          end: {
            line: 292,
            column: 92
          }
        }, {
          start: {
            line: 292,
            column: 95
          },
          end: {
            line: 292,
            column: 97
          }
        }],
        line: 292
      },
      "19": {
        loc: {
          start: {
            line: 301,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 301,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 301
      },
      "20": {
        loc: {
          start: {
            line: 316,
            column: 12
          },
          end: {
            line: 323,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 12
          },
          end: {
            line: 323,
            column: 13
          }
        }, {
          start: {
            line: 321,
            column: 19
          },
          end: {
            line: 323,
            column: 13
          }
        }],
        line: 316
      },
      "21": {
        loc: {
          start: {
            line: 322,
            column: 29
          },
          end: {
            line: 322,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 322,
            column: 29
          },
          end: {
            line: 322,
            column: 41
          }
        }, {
          start: {
            line: 322,
            column: 45
          },
          end: {
            line: 322,
            column: 65
          }
        }],
        line: 322
      },
      "22": {
        loc: {
          start: {
            line: 339,
            column: 15
          },
          end: {
            line: 339,
            column: 147
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 339,
            column: 15
          },
          end: {
            line: 339,
            column: 78
          }
        }, {
          start: {
            line: 339,
            column: 82
          },
          end: {
            line: 339,
            column: 147
          }
        }],
        line: 339
      },
      "23": {
        loc: {
          start: {
            line: 353,
            column: 16
          },
          end: {
            line: 356,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 353,
            column: 16
          },
          end: {
            line: 353,
            column: 25
          }
        }, {
          start: {
            line: 353,
            column: 43
          },
          end: {
            line: 356,
            column: 18
          }
        }],
        line: 353
      },
      "24": {
        loc: {
          start: {
            line: 357,
            column: 16
          },
          end: {
            line: 360,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 357,
            column: 16
          },
          end: {
            line: 357,
            column: 27
          }
        }, {
          start: {
            line: 357,
            column: 45
          },
          end: {
            line: 360,
            column: 18
          }
        }],
        line: 357
      },
      "25": {
        loc: {
          start: {
            line: 435,
            column: 50
          },
          end: {
            line: 453,
            column: 42
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 435,
            column: 79
          },
          end: {
            line: 438,
            column: 42
          }
        }, {
          start: {
            line: 438,
            column: 59
          },
          end: {
            line: 453,
            column: 42
          }
        }],
        line: 435
      },
      "26": {
        loc: {
          start: {
            line: 444,
            column: 48
          },
          end: {
            line: 451,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 444,
            column: 74
          },
          end: {
            line: 447,
            column: 64
          }
        }, {
          start: {
            line: 447,
            column: 81
          },
          end: {
            line: 451,
            column: 50
          }
        }],
        line: 444
      },
      "27": {
        loc: {
          start: {
            line: 468,
            column: 116
          },
          end: {
            line: 468,
            column: 227
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 468,
            column: 151
          },
          end: {
            line: 468,
            column: 185
          }
        }, {
          start: {
            line: 468,
            column: 188
          },
          end: {
            line: 468,
            column: 227
          }
        }],
        line: 468
      },
      "28": {
        loc: {
          start: {
            line: 509,
            column: 58
          },
          end: {
            line: 509,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 509,
            column: 84
          },
          end: {
            line: 509,
            column: 99
          }
        }, {
          start: {
            line: 509,
            column: 102
          },
          end: {
            line: 509,
            column: 117
          }
        }],
        line: 509
      },
      "29": {
        loc: {
          start: {
            line: 530,
            column: 50
          },
          end: {
            line: 609,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 530,
            column: 85
          },
          end: {
            line: 541,
            column: 42
          }
        }, {
          start: {
            line: 541,
            column: 45
          },
          end: {
            line: 609,
            column: 55
          }
        }],
        line: 530
      },
      "30": {
        loc: {
          start: {
            line: 541,
            column: 45
          },
          end: {
            line: 609,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 541,
            column: 106
          },
          end: {
            line: 547,
            column: 42
          }
        }, {
          start: {
            line: 547,
            column: 45
          },
          end: {
            line: 609,
            column: 55
          }
        }],
        line: 541
      },
      "31": {
        loc: {
          start: {
            line: 562,
            column: 103
          },
          end: {
            line: 562,
            column: 172
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 562,
            column: 139
          },
          end: {
            line: 562,
            column: 154
          }
        }, {
          start: {
            line: 562,
            column: 157
          },
          end: {
            line: 562,
            column: 172
          }
        }],
        line: 562
      },
      "32": {
        loc: {
          start: {
            line: 587,
            column: 76
          },
          end: {
            line: 590,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 587,
            column: 76
          },
          end: {
            line: 587,
            column: 99
          }
        }, {
          start: {
            line: 587,
            column: 103
          },
          end: {
            line: 587,
            column: 125
          }
        }, {
          start: {
            line: 587,
            column: 143
          },
          end: {
            line: 590,
            column: 78
          }
        }],
        line: 587
      },
      "33": {
        loc: {
          start: {
            line: 593,
            column: 68
          },
          end: {
            line: 604,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 593,
            column: 68
          },
          end: {
            line: 593,
            column: 90
          }
        }, {
          start: {
            line: 593,
            column: 108
          },
          end: {
            line: 604,
            column: 70
          }
        }],
        line: 593
      },
      "34": {
        loc: {
          start: {
            line: 628,
            column: 65
          },
          end: {
            line: 628,
            column: 157
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 628,
            column: 65
          },
          end: {
            line: 628,
            column: 125
          }
        }, {
          start: {
            line: 628,
            column: 129
          },
          end: {
            line: 628,
            column: 157
          }
        }],
        line: 628
      },
      "35": {
        loc: {
          start: {
            line: 643,
            column: 50
          },
          end: {
            line: 695,
            column: 42
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 643,
            column: 82
          },
          end: {
            line: 654,
            column: 42
          }
        }, {
          start: {
            line: 654,
            column: 45
          },
          end: {
            line: 695,
            column: 42
          }
        }],
        line: 643
      },
      "36": {
        loc: {
          start: {
            line: 654,
            column: 45
          },
          end: {
            line: 695,
            column: 42
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 654,
            column: 92
          },
          end: {
            line: 660,
            column: 42
          }
        }, {
          start: {
            line: 660,
            column: 59
          },
          end: {
            line: 695,
            column: 42
          }
        }],
        line: 654
      },
      "37": {
        loc: {
          start: {
            line: 681,
            column: 72
          },
          end: {
            line: 681,
            column: 120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 681,
            column: 89
          },
          end: {
            line: 681,
            column: 115
          }
        }, {
          start: {
            line: 681,
            column: 118
          },
          end: {
            line: 681,
            column: 120
          }
        }],
        line: 681
      },
      "38": {
        loc: {
          start: {
            line: 771,
            column: 50
          },
          end: {
            line: 778,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 771,
            column: 76
          },
          end: {
            line: 778,
            column: 42
          }
        }, {
          start: {
            line: 778,
            column: 45
          },
          end: {
            line: 778,
            column: 58
          }
        }],
        line: 771
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/(protected)/settings/users/add/page.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { Button } from '@/components/ui/Button';\nimport { Loader2, Search, Info, Users, Shield, BarChart3, Settings, Package, CreditCard } from 'lucide-react';\n\ninterface Shop {\n    id: string | number;\n    name: string;\n}\n\ninterface RoleTemplate {\n    id: string;\n    name: string;\n    description: string;\n    icon: React.ElementType;\n    permissions: string[];\n    color: string;\n}\n\nconst roleTemplates: RoleTemplate[] = [\n    {\n        id: 'admin',\n        name: 'Admin',\n        description: 'Full administrative access to all system features',\n        icon: Users,\n        permissions: ['admin:all'],\n        color: 'bg-red-100 text-red-800 border-red-200'\n    },\n    {\n        id: 'shop_staff',\n        name: 'Shop Staff',\n        description: 'Shop operations including sales, customer management, quotations, and shop distribution access for assigned shop only',\n        icon: Users,\n        permissions: [\n            'dashboard:view',\n            'sales:view',\n            'sales:manage',\n            'invoice:create',\n            'invoice:view',\n            'customer:create',\n            'customer:view',\n            'quotation:create',\n            'quotation:view',\n            'shop:distribution:view',\n            'inventory:transfer',\n            'shop:assigned_only'\n        ],\n        color: 'bg-blue-100 text-blue-800 border-blue-200'\n    }\n];\n\nexport default function AddUserPage() {\n    const router = useRouter();\n    const [userForm, setUserForm] = useState({\n        name: '',\n        email: '',\n        shop: '',\n        password: '',\n        confirmPassword: '',\n        permissions: [] as string[],\n        roleName: '',\n        allowedAccounts: [] as string[]\n    });\n    const [isLoading, setIsLoading] = useState(false);\n    const [formError, setFormError] = useState('');\n    const [formSuccess, setFormSuccess] = useState('');\n    const [dynamicShops, setDynamicShops] = useState<Shop[]>([]);\n    const [shopsLoading, setShopsLoading] = useState(true);\n    const [availableAccounts, setAvailableAccounts] = useState<Array<{\n        id: number;\n        name: string;\n        type: string;\n        parent?: { name: string };\n    }>>([]);\n    const [accountsLoading, setAccountsLoading] = useState(true);\n\n    // Available shops - This will be replaced by dynamic fetching\n    // const shops = [\n    //     { id: 1, name: 'All Shops' },\n    //     { id: 2, name: 'Main Store' },\n    //     { id: 3, name: 'Warehouse' }\n    // ];\n\n    useEffect(() => {\n        const fetchShops = async () => {\n            setShopsLoading(true);\n            try {\n                // TODO: Replace with actual token or auth mechanism\n                const response = await fetch('/api/shops', {\n                    headers: {\n                        'Authorization': 'Bearer dev-token', // Example authorization\n                    },\n                });\n                if (!response.ok) {\n                    throw new Error('Failed to fetch shops');\n                }\n                const data = await response.json();\n                if (data.success) {\n                    setDynamicShops(data.data || []);\n                } else {\n                    console.error(\"Failed to fetch shops:\", data.message);\n                    setDynamicShops([]); // Set to empty array on failure\n                }\n            } catch (error) {\n                console.error('Error fetching shops:', error);\n                setDynamicShops([]); // Set to empty array on error\n            } finally {\n                setShopsLoading(false);\n            }\n        };\n\n        fetchShops();\n    }, []);\n\n    // Fetch accounts from database\n    useEffect(() => {\n        const fetchAccounts = async () => {\n            setAccountsLoading(true);\n            try {\n                const response = await fetch('/api/accounting/accounts', {\n                    headers: {\n                        'Authorization': 'Bearer dev-token',\n                    },\n                });\n                if (!response.ok) {\n                    throw new Error('Failed to fetch accounts');\n                }\n                const data = await response.json();\n                if (data.success) {\n                    // Filter to only show income and asset accounts\n                    const filteredAccounts = data.data.filter((account: any) => \n                        account.isActive && (account.type === 'income' || account.type === 'asset')\n                    );\n                    setAvailableAccounts(filteredAccounts);\n                } else {\n                    console.error('Failed to fetch accounts:', data.message);\n                    setAvailableAccounts([]);\n                }\n            } catch (error) {\n                console.error('Error fetching accounts:', error);\n                setAvailableAccounts([]);\n            } finally {\n                setAccountsLoading(false);\n            }\n        };\n\n        fetchAccounts();\n    }, []);\n\n    // Available permissions - fetched dynamically\n    const [availablePermissions, setAvailablePermissions] = useState<Array<{\n        id: string;\n        name: string;\n        module: string;\n        description?: string;\n    }>>([]);\n    const [permissionsLoading, setPermissionsLoading] = useState(true);\n    const [selectedTemplate, setSelectedTemplate] = useState<string>('');\n    const [permissionSearch, setPermissionSearch] = useState('');\n    const [showAdvancedPermissions, setShowAdvancedPermissions] = useState(false);\n\n    // Fetch permissions from database\n    useEffect(() => {\n        const fetchPermissions = async () => {\n            setPermissionsLoading(true);\n            try {\n                const response = await fetch('/api/permissions', {\n                    headers: {\n                        'Authorization': 'Bearer dev-token',\n                    },\n                });\n                if (!response.ok) {\n                    throw new Error('Failed to fetch permissions');\n                }\n                const data = await response.json();\n                if (data.success) {\n                    // Transform permissions to include module based on name prefix\n                    const transformedPermissions = data.data.map((permission: any) => {\n                        const [module, action] = permission.name.split(':');\n                        return {\n                            id: permission.id.toString(),\n                            name: permission.description || permission.name,\n                            module: module.charAt(0).toUpperCase() + module.slice(1),\n                            description: getPermissionDescription(permission.name)\n                        };\n                    });\n                    setAvailablePermissions(transformedPermissions);\n                } else {\n                    console.error('Failed to fetch permissions:', data.message);\n                    setAvailablePermissions([]);\n                }\n            } catch (error) {\n                console.error('Error fetching permissions:', error);\n                setAvailablePermissions([]);\n            } finally {\n                setPermissionsLoading(false);\n            }\n        };\n\n        fetchPermissions();\n    }, []);\n\n    // Permission descriptions helper\n    const getPermissionDescription = (permissionName: string): string => {\n        const descriptions: Record<string, string> = {\n            'inventory:view': 'View inventory items and stock levels',\n            'inventory:create': 'Add new inventory items',\n            'inventory:update': 'Edit existing inventory items',\n            'inventory:delete': 'Remove inventory items',\n            'inventory:manage': 'Full inventory management access',\n            'sales:view': 'View sales data and transactions',\n            'sales:create': 'Create new sales orders',\n            'sales:update': 'Edit existing sales orders',\n            'sales:manage': 'Full sales management access',\n            'user:view': 'View user accounts',\n            'user:create': 'Create new user accounts',\n            'user:update': 'Edit user accounts',\n            'user:delete': 'Delete user accounts',\n            'reports:view': 'View system reports',\n            'reports:export': 'Export reports to files',\n            'settings:manage': 'Manage system settings',\n            'dashboard:view': 'Access dashboard',\n        };\n        return descriptions[permissionName] || 'Permission access';\n    };\n\n    // Handle role template selection\n    const handleTemplateSelect = (templateId: string) => {\n        setSelectedTemplate(templateId);\n        const template = roleTemplates.find(t => t.id === templateId);\n        if (template) {\n            setUserForm(prev => ({\n                ...prev,\n                permissions: template.permissions,\n                roleName: template.name\n            }));\n        } else {\n            // Fetch raw permissions for custom role\n            fetch('/api/permissions?raw=true').then(res => res.json()).then(data => {\n                const allPermissions = data.success ? data.data.map((p: any) => p.name) : [];\n                setUserForm(prev => ({\n                    ...prev,\n                    permissions: allPermissions,\n                    roleName: 'Custom'\n                }));\n            }).catch(error => {\n                console.error('Error fetching raw permissions:', error);\n            });\n        }\n    };\n\n    // Filter permissions based on search\n    const filteredPermissions = availablePermissions.filter(permission =>\n        permission.name.toLowerCase().includes(permissionSearch.toLowerCase()) ||\n        permission.module.toLowerCase().includes(permissionSearch.toLowerCase())\n    );\n\n    // Group permissions by module\n    const groupedPermissions = filteredPermissions.reduce((acc, permission) => {\n        const module = permission.module || 'Other';\n        if (!acc[module]) {\n            acc[module] = [];\n        }\n        acc[module].push(permission);\n        return acc;\n    }, {} as Record<string, typeof availablePermissions>);\n\n    const handleFormChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        const { name, value } = e.target;\n        setUserForm(prev => ({ ...prev, [name]: value }));\n    };\n\n    const handlePermissionChange = (permissionId: string) => {\n        setUserForm(prev => {\n            const newPermissions = prev.permissions.includes(permissionId)\n                ? prev.permissions.filter(id => id !== permissionId)\n                : [...prev.permissions, permissionId];\n            return { ...prev, permissions: newPermissions };\n        });\n    };\n\n    const handleModulePermissions = (module: string, isChecked: boolean) => {\n        const modulePermissionIds = groupedPermissions[module].map(p => p.id);\n\n        setUserForm(prev => {\n            let newPermissions;\n            if (isChecked) {\n                // Add all module permissions that aren't already selected\n                newPermissions = Array.from(new Set([...prev.permissions, ...modulePermissionIds]));\n            } else {\n                // Remove all module permissions\n                newPermissions = prev.permissions.filter(id => !modulePermissionIds.includes(id));\n            }\n            return { ...prev, permissions: newPermissions };\n        });\n    };\n\n    const handleAccountPermissionChange = (accountId: string) => {\n        setUserForm(prev => {\n            const newAllowedAccounts = prev.allowedAccounts.includes(accountId)\n                ? prev.allowedAccounts.filter(id => id !== accountId)\n                : [...prev.allowedAccounts, accountId];\n            return { ...prev, allowedAccounts: newAllowedAccounts };\n        });\n    };\n\n    const handleAllAccountsToggle = (isChecked: boolean) => {\n        setUserForm(prev => ({\n            ...prev,\n            allowedAccounts: isChecked ? availableAccounts.map(acc => acc.id.toString()) : []\n        }));\n    };\n\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        setIsLoading(true);\n        setFormError('');\n        setFormSuccess('');\n\n        // Password validation\n        if (userForm.password !== userForm.confirmPassword) {\n            setFormError('Passwords do not match');\n            setIsLoading(false);\n            return;\n        }\n\n        try {\n            const response = await fetch('/api/users', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer dev-token',\n                },\n                body: JSON.stringify(userForm),\n            });\n\n            const data = await response.json();\n\n            if (data.success) {\n                setFormSuccess('User added successfully! Redirecting...');\n                setTimeout(() => {\n                    router.push('/settings?tab=users');\n                }, 1500);\n            } else {\n                setFormError(data.message || 'Failed to add user');\n            }\n        } catch (error) {\n            console.error('Error adding user:', error);\n            setFormError('An error occurred. Please try again.');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    // Check if all permissions in a module are selected\n    const isModuleSelected = (module: string) => {\n        const modulePermissions = groupedPermissions[module].map(p => p.id);\n        return modulePermissions.every(id => userForm.permissions.includes(id));\n    };\n\n    // Check if any permissions in a module are selected\n    const isModulePartiallySelected = (module: string) => {\n        const modulePermissions = groupedPermissions[module].map(p => p.id);\n        return modulePermissions.some(id => userForm.permissions.includes(id)) &&\n            !modulePermissions.every(id => userForm.permissions.includes(id));\n    };\n\n    return (\n        <div className=\"container mx-auto px-4 py-8\">\n            <div className=\"bg-white p-6 rounded-lg shadow-md max-w-3xl mx-auto\">\n                <div className=\"flex justify-between items-center mb-6 pb-4 border-b\">\n                    <h1 className=\"text-xl font-semibold text-gray-900\">Add New User</h1>\n                </div>\n\n                {formError && (\n                    <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md mb-4\">\n                        {formError}\n                    </div>\n                )}\n                {formSuccess && (\n                    <div className=\"bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded-md mb-4\">\n                        {formSuccess}\n                    </div>\n                )}\n\n                <form onSubmit={handleSubmit}>\n                    <div className=\"space-y-6\">\n                        <div>\n                            <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Full Name <span className=\"text-red-500\">*</span>\n                            </label>\n                            <input\n                                type=\"text\"\n                                id=\"name\"\n                                name=\"name\"\n                                value={userForm.name}\n                                onChange={handleFormChange}\n                                className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5\"\n                                required\n                            />\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Email Address <span className=\"text-red-500\">*</span>\n                            </label>\n                            <input\n                                type=\"email\"\n                                id=\"email\"\n                                name=\"email\"\n                                value={userForm.email}\n                                onChange={handleFormChange}\n                                className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5\"\n                                required\n                            />\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"shop\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Shop Assignment <span className=\"text-red-500\">*</span>\n                            </label>\n                            <select\n                                id=\"shop\"\n                                name=\"shop\"\n                                value={userForm.shop}\n                                onChange={handleFormChange}\n                                className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5\"\n                                required\n                                disabled={shopsLoading}\n                            >\n                                {shopsLoading ? (\n                                    <option value=\"\">Loading shops...</option>\n                                ) : (\n                                    <>\n                                        <option value=\"\">Select a shop</option>\n                                        {dynamicShops.length > 0 ? (\n                                            dynamicShops.map(shop => (\n                                                <option key={shop.id} value={shop.id}>{shop.name}</option>\n                                            ))\n                                        ) : (\n                                            <option value=\"\" disabled>No shops available</option>\n                                        )}\n                                    </>\n                                )}\n                            </select>\n                        </div>\n\n                        {/* Role Templates Section */}\n                        <div>\n                            <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                                Quick Setup with Role Templates\n                            </label>\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 mb-4\">\n                                {roleTemplates.map(template => {\n                                    const IconComponent = template.icon;\n                                    return (\n                                        <div\n                                            key={template.id}\n                                            className={`p-3 rounded-lg border-2 cursor-pointer transition-all ${\n                                                selectedTemplate === template.id\n                                                    ? template.color + ' border-current'\n                                                    : 'border-gray-200 hover:border-gray-300'\n                                            }`}\n                                            onClick={() => handleTemplateSelect(template.id)}\n                                        >\n                                            <div className=\"flex items-start space-x-2\">\n                                                <IconComponent className=\"h-5 w-5 mt-0.5 flex-shrink-0\" />\n                                                <div className=\"flex-1 min-w-0\">\n                                                    <h4 className=\"text-sm font-medium truncate\">{template.name}</h4>\n                                                    <p className=\"text-xs text-gray-600 mt-1\">{template.description}</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n\n                        <div>\n                            <div className=\"flex items-center justify-between mb-3\">\n                                <label className=\"block text-sm font-medium text-gray-700\">\n                                    Permissions\n                                </label>\n                                <button\n                                    type=\"button\"\n                                    onClick={() => setShowAdvancedPermissions(!showAdvancedPermissions)}\n                                    className=\"text-sm text-primary hover:text-primary-dark\"\n                                >\n                                    {showAdvancedPermissions ? 'Hide Advanced' : 'Show Advanced'}\n                                </button>\n                            </div>\n                            \n                            {/* Permission Search */}\n                            <div className=\"relative mb-3\">\n                                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Search permissions...\"\n                                    value={permissionSearch}\n                                    onChange={(e) => setPermissionSearch(e.target.value)}\n                                    className=\"pl-10 pr-4 py-2 w-full border border-gray-300 rounded-lg focus:ring-primary focus:border-primary text-sm\"\n                                />\n                            </div>\n\n                            <div className=\"border border-gray-300 rounded-lg p-4 max-h-80 overflow-y-auto\">\n                                {permissionsLoading ? (\n                                    <div className=\"flex items-center justify-center py-4\">\n                                        <Loader2 className=\"h-5 w-5 animate-spin mr-2\" />\n                                        <span className=\"text-sm text-gray-500\">Loading permissions...</span>\n                                    </div>\n                                ) : Object.keys(groupedPermissions).length === 0 ? (\n                                    <div className=\"text-center py-4\">\n                                        <span className=\"text-sm text-gray-500\">No permissions available</span>\n                                    </div>\n                                ) : (\n                                    Object.keys(groupedPermissions).map(module => (\n                                        <div key={module} className=\"mb-4\">\n                                            <div className=\"flex items-center mb-2\">\n                                                <input\n                                                    type=\"checkbox\"\n                                                    id={`module-${module}`}\n                                                    checked={isModuleSelected(module)}\n                                                    className=\"h-4 w-4 text-primary focus:ring-primary border-gray-300 rounded\"\n                                                    onChange={(e) => handleModulePermissions(module, e.target.checked)}\n                                                />\n                                                <label\n                                                    htmlFor={`module-${module}`}\n                                                    className={`ml-2 text-sm font-medium ${isModulePartiallySelected(module) ? 'text-gray-500' : 'text-gray-700'\n                                                        }`}\n                                                >\n                                                    {module}\n                                                </label>\n                                            </div>\n                                            <div className=\"ml-6 grid grid-cols-1 md:grid-cols-2 gap-2\">\n                                                {groupedPermissions[module].map(permission => (\n                                                    <div key={permission.id} className=\"flex items-start space-x-2 group\">\n                                                        <input\n                                                            type=\"checkbox\"\n                                                            id={permission.id}\n                                                            checked={userForm.permissions.includes(permission.id)}\n                                                            onChange={() => handlePermissionChange(permission.id)}\n                                                            className=\"h-4 w-4 text-primary focus:ring-primary border-gray-300 rounded mt-0.5\"\n                                                        />\n                                                        <div className=\"flex-1 min-w-0\">\n                                                            <label htmlFor={permission.id} className=\"text-sm text-gray-600 cursor-pointer\">\n                                                                {permission.name}\n                                                            </label>\n                                                            {showAdvancedPermissions && permission.description && (\n                                                                <p className=\"text-xs text-gray-500 mt-1\">{permission.description}</p>\n                                                            )}\n                                                        </div>\n                                                        {permission.description && (\n                                                            <div className=\"relative group\">\n                                                                <Info className=\"h-3 w-3 text-gray-400 cursor-help\" />\n                                                                <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-2 py-1 bg-gray-800 text-white text-xs rounded opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10\">\n                                                                    {permission.description}\n                                                                </div>\n                                                            </div>\n                                                        )}\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                    ))\n                                )}\n                            </div>\n                        </div>\n\n                        {/* Account Permissions Section */}\n                        <div>\n                            <div className=\"flex items-center justify-between mb-3\">\n                                <label className=\"block text-sm font-medium text-gray-700\">\n                                    Account Permissions\n                                </label>\n                                <div className=\"flex items-center\">\n                                    <input\n                                        type=\"checkbox\"\n                                        id=\"all-accounts\"\n                                        checked={userForm.allowedAccounts.length === availableAccounts.length && availableAccounts.length > 0}\n                                        onChange={(e) => handleAllAccountsToggle(e.target.checked)}\n                                        className=\"h-4 w-4 text-primary focus:ring-primary border-gray-300 rounded\"\n                                    />\n                                    <label htmlFor=\"all-accounts\" className=\"ml-2 text-sm text-gray-600\">\n                                        Select All\n                                    </label>\n                                </div>\n                            </div>\n\n                            <div className=\"border border-gray-300 rounded-lg p-4 max-h-60 overflow-y-auto\">\n                                {accountsLoading ? (\n                                    <div className=\"flex items-center justify-center py-4\">\n                                        <Loader2 className=\"h-5 w-5 animate-spin mr-2\" />\n                                        <span className=\"text-sm text-gray-500\">Loading accounts...</span>\n                                    </div>\n                                ) : availableAccounts.length === 0 ? (\n                                    <div className=\"text-center py-4\">\n                                        <span className=\"text-sm text-gray-500\">No accounts available</span>\n                                    </div>\n                                ) : (\n                                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\n                                        {availableAccounts.map(account => (\n                                            <div key={account.id} className=\"flex items-start space-x-2\">\n                                                <input\n                                                    type=\"checkbox\"\n                                                    id={`account-${account.id}`}\n                                                    checked={userForm.allowedAccounts.includes(account.id.toString())}\n                                                    onChange={() => handleAccountPermissionChange(account.id.toString())}\n                                                    className=\"h-4 w-4 text-primary focus:ring-primary border-gray-300 rounded mt-0.5\"\n                                                />\n                                                <div className=\"flex-1 min-w-0\">\n                                                    <label htmlFor={`account-${account.id}`} className=\"text-sm text-gray-600 cursor-pointer\">\n                                                        {account.name} {account.parent ? `(${account.parent.name})` : ''}\n                                                    </label>\n                                                    <p className=\"text-xs text-gray-500 mt-1\">\n                                                        Type: {account.type.charAt(0).toUpperCase() + account.type.slice(1)}\n                                                    </p>\n                                                </div>\n                                            </div>\n                                        ))}\n                                    </div>\n                                )}\n                            </div>\n                            <p className=\"text-xs text-gray-500 mt-1\">\n                                Select which accounts this user can record payments to. If none are selected, the user will not be able to record payments.\n                            </p>\n                        </div>\n\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                            <div>\n                                <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Password <span className=\"text-red-500\">*</span>\n                                </label>\n                                <input\n                                    type=\"password\"\n                                    id=\"password\"\n                                    name=\"password\"\n                                    value={userForm.password}\n                                    onChange={handleFormChange}\n                                    className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5\"\n                                    required\n                                    minLength={8}\n                                />\n                            </div>\n\n                            <div>\n                                <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                    Confirm Password <span className=\"text-red-500\">*</span>\n                                </label>\n                                <input\n                                    type=\"password\"\n                                    id=\"confirmPassword\"\n                                    name=\"confirmPassword\"\n                                    value={userForm.confirmPassword}\n                                    onChange={handleFormChange}\n                                    className=\"bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5\"\n                                    required\n                                    minLength={8}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"flex justify-end space-x-3 mt-6\">\n                            <Button\n                                type=\"button\"\n                                variant=\"outline\"\n                                onClick={() => router.push('/settings?tab=users')}\n                            >\n                                Cancel\n                            </Button>\n                            <Button\n                                type=\"submit\"\n                                disabled={isLoading}\n                                className=\"flex items-center justify-center\"\n                            >\n                                {isLoading ? (\n                                    <>\n                                        <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                                        Creating...\n                                    </>\n                                ) : (\n                                    'Create User'\n                                )}\n                            </Button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}"],
      names: ["AddUserPage", "roleTemplates", "id", "name", "description", "icon", "Users", "permissions", "color", "router", "useRouter", "userForm", "setUserForm", "useState", "email", "shop", "password", "confirmPassword", "roleName", "allowedAccounts", "isLoading", "setIsLoading", "formError", "setFormError", "formSuccess", "setFormSuccess", "dynamicShops", "setDynamicShops", "shopsLoading", "setShopsLoading", "availableAccounts", "setAvailableAccounts", "accountsLoading", "setAccountsLoading", "useEffect", "fetchShops", "response", "fetch", "headers", "ok", "Error", "data", "json", "success", "console", "error", "message", "fetchAccounts", "filteredAccounts", "filter", "account", "isActive", "type", "availablePermissions", "setAvailablePermissions", "permissionsLoading", "setPermissionsLoading", "selectedTemplate", "setSelectedTemplate", "permissionSearch", "setPermissionSearch", "showAdvancedPermissions", "setShowAdvancedPermissions", "fetchPermissions", "transformedPermissions", "map", "permission", "module", "action", "split", "toString", "charAt", "toUpperCase", "slice", "getPermissionDescription", "permissionName", "descriptions", "handleTemplateSelect", "templateId", "template", "find", "t", "prev", "then", "res", "allPermissions", "p", "catch", "filteredPermissions", "toLowerCase", "includes", "groupedPermissions", "reduce", "acc", "push", "handleFormChange", "e", "value", "target", "handlePermissionChange", "permissionId", "newPermissions", "handleModulePermissions", "isChecked", "modulePermissionIds", "Array", "from", "Set", "handleAccountPermissionChange", "accountId", "newAllowedAccounts", "handleAllAccountsToggle", "handleSubmit", "preventDefault", "method", "body", "JSON", "stringify", "setTimeout", "isModuleSelected", "modulePermissions", "every", "isModulePartiallySelected", "some", "div", "className", "h1", "form", "onSubmit", "label", "htmlFor", "span", "input", "onChange", "required", "select", "disabled", "option", "length", "IconComponent", "onClick", "h4", "button", "Search", "placeholder", "Loader2", "Object", "keys", "checked", "Info", "parent", "minLength", "Button", "variant"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "23e2be654eec6e1e2d34e714a4ffde54f89c63d1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_10lqnyivs7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_10lqnyivs7();
cov_10lqnyivs7().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_10lqnyivs7().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_10lqnyivs7().f[0]++;
    cov_10lqnyivs7().s[2]++;
    return AddUserPage;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_10lqnyivs7().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_10lqnyivs7().s[4]++, require("react"));
const _navigation =
/* istanbul ignore next */
(cov_10lqnyivs7().s[5]++, require("next/navigation"));
const _Button =
/* istanbul ignore next */
(cov_10lqnyivs7().s[6]++, require("../../../../../components/ui/Button"));
const _lucidereact =
/* istanbul ignore next */
(cov_10lqnyivs7().s[7]++, require("lucide-react"));
const roleTemplates =
/* istanbul ignore next */
(cov_10lqnyivs7().s[8]++, [{
  id: "admin",
  name: "Admin",
  description: "Full administrative access to all system features",
  icon: _lucidereact.Users,
  permissions: ["admin:all"],
  color: "bg-red-100 text-red-800 border-red-200"
}, {
  id: "shop_staff",
  name: "Shop Staff",
  description: "Shop operations including sales, customer management, quotations, and shop distribution access for assigned shop only",
  icon: _lucidereact.Users,
  permissions: ["dashboard:view", "sales:view", "sales:manage", "invoice:create", "invoice:view", "customer:create", "customer:view", "quotation:create", "quotation:view", "shop:distribution:view", "inventory:transfer", "shop:assigned_only"],
  color: "bg-blue-100 text-blue-800 border-blue-200"
}]);
function AddUserPage() {
  /* istanbul ignore next */
  cov_10lqnyivs7().f[1]++;
  const router =
  /* istanbul ignore next */
  (cov_10lqnyivs7().s[9]++, (0, _navigation.useRouter)());
  const [userForm, setUserForm] =
  /* istanbul ignore next */
  (cov_10lqnyivs7().s[10]++, (0, _react.useState)({
    name: "",
    email: "",
    shop: "",
    password: "",
    confirmPassword: "",
    permissions: [],
    roleName: "",
    allowedAccounts: []
  }));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_10lqnyivs7().s[11]++, (0, _react.useState)(false));
  const [formError, setFormError] =
  /* istanbul ignore next */
  (cov_10lqnyivs7().s[12]++, (0, _react.useState)(""));
  const [formSuccess, setFormSuccess] =
  /* istanbul ignore next */
  (cov_10lqnyivs7().s[13]++, (0, _react.useState)(""));
  const [dynamicShops, setDynamicShops] =
  /* istanbul ignore next */
  (cov_10lqnyivs7().s[14]++, (0, _react.useState)([]));
  const [shopsLoading, setShopsLoading] =
  /* istanbul ignore next */
  (cov_10lqnyivs7().s[15]++, (0, _react.useState)(true));
  const [availableAccounts, setAvailableAccounts] =
  /* istanbul ignore next */
  (cov_10lqnyivs7().s[16]++, (0, _react.useState)([]));
  const [accountsLoading, setAccountsLoading] =
  /* istanbul ignore next */
  (cov_10lqnyivs7().s[17]++, (0, _react.useState)(true));
  // Available shops - This will be replaced by dynamic fetching
  // const shops = [
  //     { id: 1, name: 'All Shops' },
  //     { id: 2, name: 'Main Store' },
  //     { id: 3, name: 'Warehouse' }
  // ];
  /* istanbul ignore next */
  cov_10lqnyivs7().s[18]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_10lqnyivs7().f[2]++;
    cov_10lqnyivs7().s[19]++;
    const fetchShops = async () => {
      /* istanbul ignore next */
      cov_10lqnyivs7().f[3]++;
      cov_10lqnyivs7().s[20]++;
      setShopsLoading(true);
      /* istanbul ignore next */
      cov_10lqnyivs7().s[21]++;
      try {
        // TODO: Replace with actual token or auth mechanism
        const response =
        /* istanbul ignore next */
        (cov_10lqnyivs7().s[22]++, await fetch("/api/shops", {
          headers: {
            "Authorization": "Bearer dev-token"
          }
        }));
        /* istanbul ignore next */
        cov_10lqnyivs7().s[23]++;
        if (!response.ok) {
          /* istanbul ignore next */
          cov_10lqnyivs7().b[0][0]++;
          cov_10lqnyivs7().s[24]++;
          throw new Error("Failed to fetch shops");
        } else
        /* istanbul ignore next */
        {
          cov_10lqnyivs7().b[0][1]++;
        }
        const data =
        /* istanbul ignore next */
        (cov_10lqnyivs7().s[25]++, await response.json());
        /* istanbul ignore next */
        cov_10lqnyivs7().s[26]++;
        if (data.success) {
          /* istanbul ignore next */
          cov_10lqnyivs7().b[1][0]++;
          cov_10lqnyivs7().s[27]++;
          setDynamicShops(
          /* istanbul ignore next */
          (cov_10lqnyivs7().b[2][0]++, data.data) ||
          /* istanbul ignore next */
          (cov_10lqnyivs7().b[2][1]++, []));
        } else {
          /* istanbul ignore next */
          cov_10lqnyivs7().b[1][1]++;
          cov_10lqnyivs7().s[28]++;
          console.error("Failed to fetch shops:", data.message);
          /* istanbul ignore next */
          cov_10lqnyivs7().s[29]++;
          setDynamicShops([]); // Set to empty array on failure
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_10lqnyivs7().s[30]++;
        console.error("Error fetching shops:", error);
        /* istanbul ignore next */
        cov_10lqnyivs7().s[31]++;
        setDynamicShops([]); // Set to empty array on error
      } finally {
        /* istanbul ignore next */
        cov_10lqnyivs7().s[32]++;
        setShopsLoading(false);
      }
    };
    /* istanbul ignore next */
    cov_10lqnyivs7().s[33]++;
    fetchShops();
  }, []);
  // Fetch accounts from database
  /* istanbul ignore next */
  cov_10lqnyivs7().s[34]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_10lqnyivs7().f[4]++;
    cov_10lqnyivs7().s[35]++;
    const fetchAccounts = async () => {
      /* istanbul ignore next */
      cov_10lqnyivs7().f[5]++;
      cov_10lqnyivs7().s[36]++;
      setAccountsLoading(true);
      /* istanbul ignore next */
      cov_10lqnyivs7().s[37]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_10lqnyivs7().s[38]++, await fetch("/api/accounting/accounts", {
          headers: {
            "Authorization": "Bearer dev-token"
          }
        }));
        /* istanbul ignore next */
        cov_10lqnyivs7().s[39]++;
        if (!response.ok) {
          /* istanbul ignore next */
          cov_10lqnyivs7().b[3][0]++;
          cov_10lqnyivs7().s[40]++;
          throw new Error("Failed to fetch accounts");
        } else
        /* istanbul ignore next */
        {
          cov_10lqnyivs7().b[3][1]++;
        }
        const data =
        /* istanbul ignore next */
        (cov_10lqnyivs7().s[41]++, await response.json());
        /* istanbul ignore next */
        cov_10lqnyivs7().s[42]++;
        if (data.success) {
          /* istanbul ignore next */
          cov_10lqnyivs7().b[4][0]++;
          // Filter to only show income and asset accounts
          const filteredAccounts =
          /* istanbul ignore next */
          (cov_10lqnyivs7().s[43]++, data.data.filter(account => {
            /* istanbul ignore next */
            cov_10lqnyivs7().f[6]++;
            cov_10lqnyivs7().s[44]++;
            return /* istanbul ignore next */(cov_10lqnyivs7().b[5][0]++, account.isActive) && (
            /* istanbul ignore next */
            (cov_10lqnyivs7().b[5][1]++, account.type === "income") ||
            /* istanbul ignore next */
            (cov_10lqnyivs7().b[5][2]++, account.type === "asset"));
          }));
          /* istanbul ignore next */
          cov_10lqnyivs7().s[45]++;
          setAvailableAccounts(filteredAccounts);
        } else {
          /* istanbul ignore next */
          cov_10lqnyivs7().b[4][1]++;
          cov_10lqnyivs7().s[46]++;
          console.error("Failed to fetch accounts:", data.message);
          /* istanbul ignore next */
          cov_10lqnyivs7().s[47]++;
          setAvailableAccounts([]);
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_10lqnyivs7().s[48]++;
        console.error("Error fetching accounts:", error);
        /* istanbul ignore next */
        cov_10lqnyivs7().s[49]++;
        setAvailableAccounts([]);
      } finally {
        /* istanbul ignore next */
        cov_10lqnyivs7().s[50]++;
        setAccountsLoading(false);
      }
    };
    /* istanbul ignore next */
    cov_10lqnyivs7().s[51]++;
    fetchAccounts();
  }, []);
  // Available permissions - fetched dynamically
  const [availablePermissions, setAvailablePermissions] =
  /* istanbul ignore next */
  (cov_10lqnyivs7().s[52]++, (0, _react.useState)([]));
  const [permissionsLoading, setPermissionsLoading] =
  /* istanbul ignore next */
  (cov_10lqnyivs7().s[53]++, (0, _react.useState)(true));
  const [selectedTemplate, setSelectedTemplate] =
  /* istanbul ignore next */
  (cov_10lqnyivs7().s[54]++, (0, _react.useState)(""));
  const [permissionSearch, setPermissionSearch] =
  /* istanbul ignore next */
  (cov_10lqnyivs7().s[55]++, (0, _react.useState)(""));
  const [showAdvancedPermissions, setShowAdvancedPermissions] =
  /* istanbul ignore next */
  (cov_10lqnyivs7().s[56]++, (0, _react.useState)(false));
  // Fetch permissions from database
  /* istanbul ignore next */
  cov_10lqnyivs7().s[57]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_10lqnyivs7().f[7]++;
    cov_10lqnyivs7().s[58]++;
    const fetchPermissions = async () => {
      /* istanbul ignore next */
      cov_10lqnyivs7().f[8]++;
      cov_10lqnyivs7().s[59]++;
      setPermissionsLoading(true);
      /* istanbul ignore next */
      cov_10lqnyivs7().s[60]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_10lqnyivs7().s[61]++, await fetch("/api/permissions", {
          headers: {
            "Authorization": "Bearer dev-token"
          }
        }));
        /* istanbul ignore next */
        cov_10lqnyivs7().s[62]++;
        if (!response.ok) {
          /* istanbul ignore next */
          cov_10lqnyivs7().b[6][0]++;
          cov_10lqnyivs7().s[63]++;
          throw new Error("Failed to fetch permissions");
        } else
        /* istanbul ignore next */
        {
          cov_10lqnyivs7().b[6][1]++;
        }
        const data =
        /* istanbul ignore next */
        (cov_10lqnyivs7().s[64]++, await response.json());
        /* istanbul ignore next */
        cov_10lqnyivs7().s[65]++;
        if (data.success) {
          /* istanbul ignore next */
          cov_10lqnyivs7().b[7][0]++;
          // Transform permissions to include module based on name prefix
          const transformedPermissions =
          /* istanbul ignore next */
          (cov_10lqnyivs7().s[66]++, data.data.map(permission => {
            /* istanbul ignore next */
            cov_10lqnyivs7().f[9]++;
            const [module, action] =
            /* istanbul ignore next */
            (cov_10lqnyivs7().s[67]++, permission.name.split(":"));
            /* istanbul ignore next */
            cov_10lqnyivs7().s[68]++;
            return {
              id: permission.id.toString(),
              name:
              /* istanbul ignore next */
              (cov_10lqnyivs7().b[8][0]++, permission.description) ||
              /* istanbul ignore next */
              (cov_10lqnyivs7().b[8][1]++, permission.name),
              module: module.charAt(0).toUpperCase() + module.slice(1),
              description: getPermissionDescription(permission.name)
            };
          }));
          /* istanbul ignore next */
          cov_10lqnyivs7().s[69]++;
          setAvailablePermissions(transformedPermissions);
        } else {
          /* istanbul ignore next */
          cov_10lqnyivs7().b[7][1]++;
          cov_10lqnyivs7().s[70]++;
          console.error("Failed to fetch permissions:", data.message);
          /* istanbul ignore next */
          cov_10lqnyivs7().s[71]++;
          setAvailablePermissions([]);
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_10lqnyivs7().s[72]++;
        console.error("Error fetching permissions:", error);
        /* istanbul ignore next */
        cov_10lqnyivs7().s[73]++;
        setAvailablePermissions([]);
      } finally {
        /* istanbul ignore next */
        cov_10lqnyivs7().s[74]++;
        setPermissionsLoading(false);
      }
    };
    /* istanbul ignore next */
    cov_10lqnyivs7().s[75]++;
    fetchPermissions();
  }, []);
  // Permission descriptions helper
  /* istanbul ignore next */
  cov_10lqnyivs7().s[76]++;
  const getPermissionDescription = permissionName => {
    /* istanbul ignore next */
    cov_10lqnyivs7().f[10]++;
    const descriptions =
    /* istanbul ignore next */
    (cov_10lqnyivs7().s[77]++, {
      "inventory:view": "View inventory items and stock levels",
      "inventory:create": "Add new inventory items",
      "inventory:update": "Edit existing inventory items",
      "inventory:delete": "Remove inventory items",
      "inventory:manage": "Full inventory management access",
      "sales:view": "View sales data and transactions",
      "sales:create": "Create new sales orders",
      "sales:update": "Edit existing sales orders",
      "sales:manage": "Full sales management access",
      "user:view": "View user accounts",
      "user:create": "Create new user accounts",
      "user:update": "Edit user accounts",
      "user:delete": "Delete user accounts",
      "reports:view": "View system reports",
      "reports:export": "Export reports to files",
      "settings:manage": "Manage system settings",
      "dashboard:view": "Access dashboard"
    });
    /* istanbul ignore next */
    cov_10lqnyivs7().s[78]++;
    return /* istanbul ignore next */(cov_10lqnyivs7().b[9][0]++, descriptions[permissionName]) ||
    /* istanbul ignore next */
    (cov_10lqnyivs7().b[9][1]++, "Permission access");
  };
  // Handle role template selection
  /* istanbul ignore next */
  cov_10lqnyivs7().s[79]++;
  const handleTemplateSelect = templateId => {
    /* istanbul ignore next */
    cov_10lqnyivs7().f[11]++;
    cov_10lqnyivs7().s[80]++;
    setSelectedTemplate(templateId);
    const template =
    /* istanbul ignore next */
    (cov_10lqnyivs7().s[81]++, roleTemplates.find(t => {
      /* istanbul ignore next */
      cov_10lqnyivs7().f[12]++;
      cov_10lqnyivs7().s[82]++;
      return t.id === templateId;
    }));
    /* istanbul ignore next */
    cov_10lqnyivs7().s[83]++;
    if (template) {
      /* istanbul ignore next */
      cov_10lqnyivs7().b[10][0]++;
      cov_10lqnyivs7().s[84]++;
      setUserForm(prev => {
        /* istanbul ignore next */
        cov_10lqnyivs7().f[13]++;
        cov_10lqnyivs7().s[85]++;
        return {
          ...prev,
          permissions: template.permissions,
          roleName: template.name
        };
      });
    } else {
      /* istanbul ignore next */
      cov_10lqnyivs7().b[10][1]++;
      cov_10lqnyivs7().s[86]++;
      // Fetch raw permissions for custom role
      fetch("/api/permissions?raw=true").then(res => {
        /* istanbul ignore next */
        cov_10lqnyivs7().f[14]++;
        cov_10lqnyivs7().s[87]++;
        return res.json();
      }).then(data => {
        /* istanbul ignore next */
        cov_10lqnyivs7().f[15]++;
        const allPermissions =
        /* istanbul ignore next */
        (cov_10lqnyivs7().s[88]++, data.success ?
        /* istanbul ignore next */
        (cov_10lqnyivs7().b[11][0]++, data.data.map(p => {
          /* istanbul ignore next */
          cov_10lqnyivs7().f[16]++;
          cov_10lqnyivs7().s[89]++;
          return p.name;
        })) :
        /* istanbul ignore next */
        (cov_10lqnyivs7().b[11][1]++, []));
        /* istanbul ignore next */
        cov_10lqnyivs7().s[90]++;
        setUserForm(prev => {
          /* istanbul ignore next */
          cov_10lqnyivs7().f[17]++;
          cov_10lqnyivs7().s[91]++;
          return {
            ...prev,
            permissions: allPermissions,
            roleName: "Custom"
          };
        });
      }).catch(error => {
        /* istanbul ignore next */
        cov_10lqnyivs7().f[18]++;
        cov_10lqnyivs7().s[92]++;
        console.error("Error fetching raw permissions:", error);
      });
    }
  };
  // Filter permissions based on search
  const filteredPermissions =
  /* istanbul ignore next */
  (cov_10lqnyivs7().s[93]++, availablePermissions.filter(permission => {
    /* istanbul ignore next */
    cov_10lqnyivs7().f[19]++;
    cov_10lqnyivs7().s[94]++;
    return /* istanbul ignore next */(cov_10lqnyivs7().b[12][0]++, permission.name.toLowerCase().includes(permissionSearch.toLowerCase())) ||
    /* istanbul ignore next */
    (cov_10lqnyivs7().b[12][1]++, permission.module.toLowerCase().includes(permissionSearch.toLowerCase()));
  }));
  // Group permissions by module
  const groupedPermissions =
  /* istanbul ignore next */
  (cov_10lqnyivs7().s[95]++, filteredPermissions.reduce((acc, permission) => {
    /* istanbul ignore next */
    cov_10lqnyivs7().f[20]++;
    const module =
    /* istanbul ignore next */
    (cov_10lqnyivs7().s[96]++,
    /* istanbul ignore next */
    (cov_10lqnyivs7().b[13][0]++, permission.module) ||
    /* istanbul ignore next */
    (cov_10lqnyivs7().b[13][1]++, "Other"));
    /* istanbul ignore next */
    cov_10lqnyivs7().s[97]++;
    if (!acc[module]) {
      /* istanbul ignore next */
      cov_10lqnyivs7().b[14][0]++;
      cov_10lqnyivs7().s[98]++;
      acc[module] = [];
    } else
    /* istanbul ignore next */
    {
      cov_10lqnyivs7().b[14][1]++;
    }
    cov_10lqnyivs7().s[99]++;
    acc[module].push(permission);
    /* istanbul ignore next */
    cov_10lqnyivs7().s[100]++;
    return acc;
  }, {}));
  /* istanbul ignore next */
  cov_10lqnyivs7().s[101]++;
  const handleFormChange = e => {
    /* istanbul ignore next */
    cov_10lqnyivs7().f[21]++;
    const {
      name,
      value
    } =
    /* istanbul ignore next */
    (cov_10lqnyivs7().s[102]++, e.target);
    /* istanbul ignore next */
    cov_10lqnyivs7().s[103]++;
    setUserForm(prev => {
      /* istanbul ignore next */
      cov_10lqnyivs7().f[22]++;
      cov_10lqnyivs7().s[104]++;
      return {
        ...prev,
        [name]: value
      };
    });
  };
  /* istanbul ignore next */
  cov_10lqnyivs7().s[105]++;
  const handlePermissionChange = permissionId => {
    /* istanbul ignore next */
    cov_10lqnyivs7().f[23]++;
    cov_10lqnyivs7().s[106]++;
    setUserForm(prev => {
      /* istanbul ignore next */
      cov_10lqnyivs7().f[24]++;
      const newPermissions =
      /* istanbul ignore next */
      (cov_10lqnyivs7().s[107]++, prev.permissions.includes(permissionId) ?
      /* istanbul ignore next */
      (cov_10lqnyivs7().b[15][0]++, prev.permissions.filter(id => {
        /* istanbul ignore next */
        cov_10lqnyivs7().f[25]++;
        cov_10lqnyivs7().s[108]++;
        return id !== permissionId;
      })) :
      /* istanbul ignore next */
      (cov_10lqnyivs7().b[15][1]++, [...prev.permissions, permissionId]));
      /* istanbul ignore next */
      cov_10lqnyivs7().s[109]++;
      return {
        ...prev,
        permissions: newPermissions
      };
    });
  };
  /* istanbul ignore next */
  cov_10lqnyivs7().s[110]++;
  const handleModulePermissions = (module, isChecked) => {
    /* istanbul ignore next */
    cov_10lqnyivs7().f[26]++;
    const modulePermissionIds =
    /* istanbul ignore next */
    (cov_10lqnyivs7().s[111]++, groupedPermissions[module].map(p => {
      /* istanbul ignore next */
      cov_10lqnyivs7().f[27]++;
      cov_10lqnyivs7().s[112]++;
      return p.id;
    }));
    /* istanbul ignore next */
    cov_10lqnyivs7().s[113]++;
    setUserForm(prev => {
      /* istanbul ignore next */
      cov_10lqnyivs7().f[28]++;
      let newPermissions;
      /* istanbul ignore next */
      cov_10lqnyivs7().s[114]++;
      if (isChecked) {
        /* istanbul ignore next */
        cov_10lqnyivs7().b[16][0]++;
        cov_10lqnyivs7().s[115]++;
        // Add all module permissions that aren't already selected
        newPermissions = Array.from(new Set([...prev.permissions, ...modulePermissionIds]));
      } else {
        /* istanbul ignore next */
        cov_10lqnyivs7().b[16][1]++;
        cov_10lqnyivs7().s[116]++;
        // Remove all module permissions
        newPermissions = prev.permissions.filter(id => {
          /* istanbul ignore next */
          cov_10lqnyivs7().f[29]++;
          cov_10lqnyivs7().s[117]++;
          return !modulePermissionIds.includes(id);
        });
      }
      /* istanbul ignore next */
      cov_10lqnyivs7().s[118]++;
      return {
        ...prev,
        permissions: newPermissions
      };
    });
  };
  /* istanbul ignore next */
  cov_10lqnyivs7().s[119]++;
  const handleAccountPermissionChange = accountId => {
    /* istanbul ignore next */
    cov_10lqnyivs7().f[30]++;
    cov_10lqnyivs7().s[120]++;
    setUserForm(prev => {
      /* istanbul ignore next */
      cov_10lqnyivs7().f[31]++;
      const newAllowedAccounts =
      /* istanbul ignore next */
      (cov_10lqnyivs7().s[121]++, prev.allowedAccounts.includes(accountId) ?
      /* istanbul ignore next */
      (cov_10lqnyivs7().b[17][0]++, prev.allowedAccounts.filter(id => {
        /* istanbul ignore next */
        cov_10lqnyivs7().f[32]++;
        cov_10lqnyivs7().s[122]++;
        return id !== accountId;
      })) :
      /* istanbul ignore next */
      (cov_10lqnyivs7().b[17][1]++, [...prev.allowedAccounts, accountId]));
      /* istanbul ignore next */
      cov_10lqnyivs7().s[123]++;
      return {
        ...prev,
        allowedAccounts: newAllowedAccounts
      };
    });
  };
  /* istanbul ignore next */
  cov_10lqnyivs7().s[124]++;
  const handleAllAccountsToggle = isChecked => {
    /* istanbul ignore next */
    cov_10lqnyivs7().f[33]++;
    cov_10lqnyivs7().s[125]++;
    setUserForm(prev => {
      /* istanbul ignore next */
      cov_10lqnyivs7().f[34]++;
      cov_10lqnyivs7().s[126]++;
      return {
        ...prev,
        allowedAccounts: isChecked ?
        /* istanbul ignore next */
        (cov_10lqnyivs7().b[18][0]++, availableAccounts.map(acc => {
          /* istanbul ignore next */
          cov_10lqnyivs7().f[35]++;
          cov_10lqnyivs7().s[127]++;
          return acc.id.toString();
        })) :
        /* istanbul ignore next */
        (cov_10lqnyivs7().b[18][1]++, [])
      };
    });
  };
  /* istanbul ignore next */
  cov_10lqnyivs7().s[128]++;
  const handleSubmit = async e => {
    /* istanbul ignore next */
    cov_10lqnyivs7().f[36]++;
    cov_10lqnyivs7().s[129]++;
    e.preventDefault();
    /* istanbul ignore next */
    cov_10lqnyivs7().s[130]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_10lqnyivs7().s[131]++;
    setFormError("");
    /* istanbul ignore next */
    cov_10lqnyivs7().s[132]++;
    setFormSuccess("");
    // Password validation
    /* istanbul ignore next */
    cov_10lqnyivs7().s[133]++;
    if (userForm.password !== userForm.confirmPassword) {
      /* istanbul ignore next */
      cov_10lqnyivs7().b[19][0]++;
      cov_10lqnyivs7().s[134]++;
      setFormError("Passwords do not match");
      /* istanbul ignore next */
      cov_10lqnyivs7().s[135]++;
      setIsLoading(false);
      /* istanbul ignore next */
      cov_10lqnyivs7().s[136]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_10lqnyivs7().b[19][1]++;
    }
    cov_10lqnyivs7().s[137]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_10lqnyivs7().s[138]++, await fetch("/api/users", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "Authorization": "Bearer dev-token"
        },
        body: JSON.stringify(userForm)
      }));
      const data =
      /* istanbul ignore next */
      (cov_10lqnyivs7().s[139]++, await response.json());
      /* istanbul ignore next */
      cov_10lqnyivs7().s[140]++;
      if (data.success) {
        /* istanbul ignore next */
        cov_10lqnyivs7().b[20][0]++;
        cov_10lqnyivs7().s[141]++;
        setFormSuccess("User added successfully! Redirecting...");
        /* istanbul ignore next */
        cov_10lqnyivs7().s[142]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_10lqnyivs7().f[37]++;
          cov_10lqnyivs7().s[143]++;
          router.push("/settings?tab=users");
        }, 1500);
      } else {
        /* istanbul ignore next */
        cov_10lqnyivs7().b[20][1]++;
        cov_10lqnyivs7().s[144]++;
        setFormError(
        /* istanbul ignore next */
        (cov_10lqnyivs7().b[21][0]++, data.message) ||
        /* istanbul ignore next */
        (cov_10lqnyivs7().b[21][1]++, "Failed to add user"));
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_10lqnyivs7().s[145]++;
      console.error("Error adding user:", error);
      /* istanbul ignore next */
      cov_10lqnyivs7().s[146]++;
      setFormError("An error occurred. Please try again.");
    } finally {
      /* istanbul ignore next */
      cov_10lqnyivs7().s[147]++;
      setIsLoading(false);
    }
  };
  // Check if all permissions in a module are selected
  /* istanbul ignore next */
  cov_10lqnyivs7().s[148]++;
  const isModuleSelected = module => {
    /* istanbul ignore next */
    cov_10lqnyivs7().f[38]++;
    const modulePermissions =
    /* istanbul ignore next */
    (cov_10lqnyivs7().s[149]++, groupedPermissions[module].map(p => {
      /* istanbul ignore next */
      cov_10lqnyivs7().f[39]++;
      cov_10lqnyivs7().s[150]++;
      return p.id;
    }));
    /* istanbul ignore next */
    cov_10lqnyivs7().s[151]++;
    return modulePermissions.every(id => {
      /* istanbul ignore next */
      cov_10lqnyivs7().f[40]++;
      cov_10lqnyivs7().s[152]++;
      return userForm.permissions.includes(id);
    });
  };
  // Check if any permissions in a module are selected
  /* istanbul ignore next */
  cov_10lqnyivs7().s[153]++;
  const isModulePartiallySelected = module => {
    /* istanbul ignore next */
    cov_10lqnyivs7().f[41]++;
    const modulePermissions =
    /* istanbul ignore next */
    (cov_10lqnyivs7().s[154]++, groupedPermissions[module].map(p => {
      /* istanbul ignore next */
      cov_10lqnyivs7().f[42]++;
      cov_10lqnyivs7().s[155]++;
      return p.id;
    }));
    /* istanbul ignore next */
    cov_10lqnyivs7().s[156]++;
    return /* istanbul ignore next */(cov_10lqnyivs7().b[22][0]++, modulePermissions.some(id => {
      /* istanbul ignore next */
      cov_10lqnyivs7().f[43]++;
      cov_10lqnyivs7().s[157]++;
      return userForm.permissions.includes(id);
    })) &&
    /* istanbul ignore next */
    (cov_10lqnyivs7().b[22][1]++, !modulePermissions.every(id => {
      /* istanbul ignore next */
      cov_10lqnyivs7().f[44]++;
      cov_10lqnyivs7().s[158]++;
      return userForm.permissions.includes(id);
    }));
  };
  /* istanbul ignore next */
  cov_10lqnyivs7().s[159]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: "container mx-auto px-4 py-8",
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "bg-white p-6 rounded-lg shadow-md max-w-3xl mx-auto",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "flex justify-between items-center mb-6 pb-4 border-b",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
          className: "text-xl font-semibold text-gray-900",
          children: "Add New User"
        })
      }),
      /* istanbul ignore next */
      (cov_10lqnyivs7().b[23][0]++, formError) &&
      /* istanbul ignore next */
      (cov_10lqnyivs7().b[23][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md mb-4",
        children: formError
      })),
      /* istanbul ignore next */
      (cov_10lqnyivs7().b[24][0]++, formSuccess) &&
      /* istanbul ignore next */
      (cov_10lqnyivs7().b[24][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded-md mb-4",
        children: formSuccess
      })), /*#__PURE__*/(0, _jsxruntime.jsx)("form", {
        onSubmit: handleSubmit,
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-6",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
              htmlFor: "name",
              className: "block text-sm font-medium text-gray-700 mb-1",
              children: ["Full Name ", /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "text-red-500",
                children: "*"
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
              type: "text",
              id: "name",
              name: "name",
              value: userForm.name,
              onChange: handleFormChange,
              className: "bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5",
              required: true
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
              htmlFor: "email",
              className: "block text-sm font-medium text-gray-700 mb-1",
              children: ["Email Address ", /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "text-red-500",
                children: "*"
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
              type: "email",
              id: "email",
              name: "email",
              value: userForm.email,
              onChange: handleFormChange,
              className: "bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5",
              required: true
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
              htmlFor: "shop",
              className: "block text-sm font-medium text-gray-700 mb-1",
              children: ["Shop Assignment ", /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "text-red-500",
                children: "*"
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("select", {
              id: "shop",
              name: "shop",
              value: userForm.shop,
              onChange: handleFormChange,
              className: "bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5",
              required: true,
              disabled: shopsLoading,
              children: shopsLoading ?
              /* istanbul ignore next */
              (/*#__PURE__*/cov_10lqnyivs7().b[25][0]++, (0, _jsxruntime.jsx)("option", {
                value: "",
                children: "Loading shops..."
              })) :
              /* istanbul ignore next */
              (/*#__PURE__*/cov_10lqnyivs7().b[25][1]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                  value: "",
                  children: "Select a shop"
                }), dynamicShops.length > 0 ?
                /* istanbul ignore next */
                (cov_10lqnyivs7().b[26][0]++, dynamicShops.map(shop => {
                  /* istanbul ignore next */
                  cov_10lqnyivs7().f[45]++;
                  cov_10lqnyivs7().s[160]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                    value: shop.id,
                    children: shop.name
                  }, shop.id);
                })) :
                /* istanbul ignore next */
                (/*#__PURE__*/cov_10lqnyivs7().b[26][1]++, (0, _jsxruntime.jsx)("option", {
                  value: "",
                  disabled: true,
                  children: "No shops available"
                }))]
              }))
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "block text-sm font-medium text-gray-700 mb-3",
              children: "Quick Setup with Role Templates"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 mb-4",
              children: roleTemplates.map(template => {
                /* istanbul ignore next */
                cov_10lqnyivs7().f[46]++;
                const IconComponent =
                /* istanbul ignore next */
                (cov_10lqnyivs7().s[161]++, template.icon);
                /* istanbul ignore next */
                cov_10lqnyivs7().s[162]++;
                return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: `p-3 rounded-lg border-2 cursor-pointer transition-all ${selectedTemplate === template.id ?
                  /* istanbul ignore next */
                  (cov_10lqnyivs7().b[27][0]++, template.color + " border-current") :
                  /* istanbul ignore next */
                  (cov_10lqnyivs7().b[27][1]++, "border-gray-200 hover:border-gray-300")}`,
                  onClick: () => {
                    /* istanbul ignore next */
                    cov_10lqnyivs7().f[47]++;
                    cov_10lqnyivs7().s[163]++;
                    return handleTemplateSelect(template.id);
                  },
                  children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-start space-x-2",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(IconComponent, {
                      className: "h-5 w-5 mt-0.5 flex-shrink-0"
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex-1 min-w-0",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
                        className: "text-sm font-medium truncate",
                        children: template.name
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                        className: "text-xs text-gray-600 mt-1",
                        children: template.description
                      })]
                    })]
                  })
                }, template.id);
              })
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center justify-between mb-3",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                className: "block text-sm font-medium text-gray-700",
                children: "Permissions"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                type: "button",
                onClick: () => {
                  /* istanbul ignore next */
                  cov_10lqnyivs7().f[48]++;
                  cov_10lqnyivs7().s[164]++;
                  return setShowAdvancedPermissions(!showAdvancedPermissions);
                },
                className: "text-sm text-primary hover:text-primary-dark",
                children: showAdvancedPermissions ?
                /* istanbul ignore next */
                (cov_10lqnyivs7().b[28][0]++, "Hide Advanced") :
                /* istanbul ignore next */
                (cov_10lqnyivs7().b[28][1]++, "Show Advanced")
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "relative mb-3",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Search, {
                className: "absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                type: "text",
                placeholder: "Search permissions...",
                value: permissionSearch,
                onChange: e => {
                  /* istanbul ignore next */
                  cov_10lqnyivs7().f[49]++;
                  cov_10lqnyivs7().s[165]++;
                  return setPermissionSearch(e.target.value);
                },
                className: "pl-10 pr-4 py-2 w-full border border-gray-300 rounded-lg focus:ring-primary focus:border-primary text-sm"
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "border border-gray-300 rounded-lg p-4 max-h-80 overflow-y-auto",
              children: permissionsLoading ?
              /* istanbul ignore next */
              (/*#__PURE__*/cov_10lqnyivs7().b[29][0]++, (0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-center py-4",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Loader2, {
                  className: "h-5 w-5 animate-spin mr-2"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "text-sm text-gray-500",
                  children: "Loading permissions..."
                })]
              })) :
              /* istanbul ignore next */
              (cov_10lqnyivs7().b[29][1]++, Object.keys(groupedPermissions).length === 0 ?
              /* istanbul ignore next */
              (/*#__PURE__*/cov_10lqnyivs7().b[30][0]++, (0, _jsxruntime.jsx)("div", {
                className: "text-center py-4",
                children: /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "text-sm text-gray-500",
                  children: "No permissions available"
                })
              })) :
              /* istanbul ignore next */
              (cov_10lqnyivs7().b[30][1]++, Object.keys(groupedPermissions).map(module => {
                /* istanbul ignore next */
                cov_10lqnyivs7().f[50]++;
                cov_10lqnyivs7().s[166]++;
                return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "mb-4",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center mb-2",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      type: "checkbox",
                      id: `module-${module}`,
                      checked: isModuleSelected(module),
                      className: "h-4 w-4 text-primary focus:ring-primary border-gray-300 rounded",
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_10lqnyivs7().f[51]++;
                        cov_10lqnyivs7().s[167]++;
                        return handleModulePermissions(module, e.target.checked);
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                      htmlFor: `module-${module}`,
                      className: `ml-2 text-sm font-medium ${isModulePartiallySelected(module) ?
                      /* istanbul ignore next */
                      (cov_10lqnyivs7().b[31][0]++, "text-gray-500") :
                      /* istanbul ignore next */
                      (cov_10lqnyivs7().b[31][1]++, "text-gray-700")}`,
                      children: module
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "ml-6 grid grid-cols-1 md:grid-cols-2 gap-2",
                    children: groupedPermissions[module].map(permission => {
                      /* istanbul ignore next */
                      cov_10lqnyivs7().f[52]++;
                      cov_10lqnyivs7().s[168]++;
                      return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "flex items-start space-x-2 group",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                          type: "checkbox",
                          id: permission.id,
                          checked: userForm.permissions.includes(permission.id),
                          onChange: () => {
                            /* istanbul ignore next */
                            cov_10lqnyivs7().f[53]++;
                            cov_10lqnyivs7().s[169]++;
                            return handlePermissionChange(permission.id);
                          },
                          className: "h-4 w-4 text-primary focus:ring-primary border-gray-300 rounded mt-0.5"
                        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                          className: "flex-1 min-w-0",
                          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                            htmlFor: permission.id,
                            className: "text-sm text-gray-600 cursor-pointer",
                            children: permission.name
                          }),
                          /* istanbul ignore next */
                          (cov_10lqnyivs7().b[32][0]++, showAdvancedPermissions) &&
                          /* istanbul ignore next */
                          (cov_10lqnyivs7().b[32][1]++, permission.description) &&
                          /* istanbul ignore next */
                          (cov_10lqnyivs7().b[32][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                            className: "text-xs text-gray-500 mt-1",
                            children: permission.description
                          }))]
                        }),
                        /* istanbul ignore next */
                        (cov_10lqnyivs7().b[33][0]++, permission.description) &&
                        /* istanbul ignore next */
                        (cov_10lqnyivs7().b[33][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                          className: "relative group",
                          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Info, {
                            className: "h-3 w-3 text-gray-400 cursor-help"
                          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                            className: "absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-2 py-1 bg-gray-800 text-white text-xs rounded opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap z-10",
                            children: permission.description
                          })]
                        }))]
                      }, permission.id);
                    })
                  })]
                }, module);
              })))
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center justify-between mb-3",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                className: "block text-sm font-medium text-gray-700",
                children: "Account Permissions"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                  type: "checkbox",
                  id: "all-accounts",
                  checked:
                  /* istanbul ignore next */
                  (cov_10lqnyivs7().b[34][0]++, userForm.allowedAccounts.length === availableAccounts.length) &&
                  /* istanbul ignore next */
                  (cov_10lqnyivs7().b[34][1]++, availableAccounts.length > 0),
                  onChange: e => {
                    /* istanbul ignore next */
                    cov_10lqnyivs7().f[54]++;
                    cov_10lqnyivs7().s[170]++;
                    return handleAllAccountsToggle(e.target.checked);
                  },
                  className: "h-4 w-4 text-primary focus:ring-primary border-gray-300 rounded"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                  htmlFor: "all-accounts",
                  className: "ml-2 text-sm text-gray-600",
                  children: "Select All"
                })]
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "border border-gray-300 rounded-lg p-4 max-h-60 overflow-y-auto",
              children: accountsLoading ?
              /* istanbul ignore next */
              (/*#__PURE__*/cov_10lqnyivs7().b[35][0]++, (0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-center py-4",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Loader2, {
                  className: "h-5 w-5 animate-spin mr-2"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "text-sm text-gray-500",
                  children: "Loading accounts..."
                })]
              })) :
              /* istanbul ignore next */
              (cov_10lqnyivs7().b[35][1]++, availableAccounts.length === 0 ?
              /* istanbul ignore next */
              (/*#__PURE__*/cov_10lqnyivs7().b[36][0]++, (0, _jsxruntime.jsx)("div", {
                className: "text-center py-4",
                children: /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "text-sm text-gray-500",
                  children: "No accounts available"
                })
              })) :
              /* istanbul ignore next */
              (/*#__PURE__*/cov_10lqnyivs7().b[36][1]++, (0, _jsxruntime.jsx)("div", {
                className: "grid grid-cols-1 md:grid-cols-2 gap-2",
                children: availableAccounts.map(account => {
                  /* istanbul ignore next */
                  cov_10lqnyivs7().f[55]++;
                  cov_10lqnyivs7().s[171]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-start space-x-2",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      type: "checkbox",
                      id: `account-${account.id}`,
                      checked: userForm.allowedAccounts.includes(account.id.toString()),
                      onChange: () => {
                        /* istanbul ignore next */
                        cov_10lqnyivs7().f[56]++;
                        cov_10lqnyivs7().s[172]++;
                        return handleAccountPermissionChange(account.id.toString());
                      },
                      className: "h-4 w-4 text-primary focus:ring-primary border-gray-300 rounded mt-0.5"
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex-1 min-w-0",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                        htmlFor: `account-${account.id}`,
                        className: "text-sm text-gray-600 cursor-pointer",
                        children: [account.name, " ", account.parent ?
                        /* istanbul ignore next */
                        (cov_10lqnyivs7().b[37][0]++, `(${account.parent.name})`) :
                        /* istanbul ignore next */
                        (cov_10lqnyivs7().b[37][1]++, "")]
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                        className: "text-xs text-gray-500 mt-1",
                        children: ["Type: ", account.type.charAt(0).toUpperCase() + account.type.slice(1)]
                      })]
                    })]
                  }, account.id);
                })
              })))
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-xs text-gray-500 mt-1",
              children: "Select which accounts this user can record payments to. If none are selected, the user will not be able to record payments."
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "grid grid-cols-1 md:grid-cols-2 gap-4",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                htmlFor: "password",
                className: "block text-sm font-medium text-gray-700 mb-1",
                children: ["Password ", /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "text-red-500",
                  children: "*"
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                type: "password",
                id: "password",
                name: "password",
                value: userForm.password,
                onChange: handleFormChange,
                className: "bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5",
                required: true,
                minLength: 8
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                htmlFor: "confirmPassword",
                className: "block text-sm font-medium text-gray-700 mb-1",
                children: ["Confirm Password ", /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "text-red-500",
                  children: "*"
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                type: "password",
                id: "confirmPassword",
                name: "confirmPassword",
                value: userForm.confirmPassword,
                onChange: handleFormChange,
                className: "bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5",
                required: true,
                minLength: 8
              })]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex justify-end space-x-3 mt-6",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
              type: "button",
              variant: "outline",
              onClick: () => {
                /* istanbul ignore next */
                cov_10lqnyivs7().f[57]++;
                cov_10lqnyivs7().s[173]++;
                return router.push("/settings?tab=users");
              },
              children: "Cancel"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
              type: "submit",
              disabled: isLoading,
              className: "flex items-center justify-center",
              children: isLoading ?
              /* istanbul ignore next */
              (/*#__PURE__*/cov_10lqnyivs7().b[38][0]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Loader2, {
                  className: "mr-2 h-4 w-4 animate-spin"
                }), "Creating..."]
              })) :
              /* istanbul ignore next */
              (cov_10lqnyivs7().b[38][1]++, "Create User")
            })]
          })]
        })
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,