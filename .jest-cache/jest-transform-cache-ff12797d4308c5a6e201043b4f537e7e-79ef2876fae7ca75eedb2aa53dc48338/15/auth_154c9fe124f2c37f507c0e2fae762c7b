bea11b98b353578595b01e7238ad4a1c
"use strict";

/* istanbul ignore next */
function cov_170jsuow5d() {
  var path = "/Users/sachin/Documents/md-sports-/src/lib/auth.ts";
  var hash = "b1593b76f12323cae5df994dd83429ee3e50ae20";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/lib/auth.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 30,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 27
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 28
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 34
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 34
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 39
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 27
        }
      },
      "10": {
        start: {
          line: 31,
          column: 28
        },
        end: {
          line: 31,
          column: 70
        }
      },
      "11": {
        start: {
          line: 32,
          column: 30
        },
        end: {
          line: 32,
          column: 75
        }
      },
      "12": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 36,
          column: 6
        }
      },
      "13": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 51
        }
      },
      "14": {
        start: {
          line: 39,
          column: 39
        },
        end: {
          line: 39,
          column: 51
        }
      },
      "15": {
        start: {
          line: 40,
          column: 28
        },
        end: {
          line: 40,
          column: 41
        }
      },
      "16": {
        start: {
          line: 41,
          column: 27
        },
        end: {
          line: 41,
          column: 40
        }
      },
      "17": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 44,
          column: 20
        }
      },
      "18": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 66
        }
      },
      "19": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "20": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 19
        }
      },
      "21": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "22": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 53,
          column: 10
        }
      },
      "23": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 53
        }
      },
      "24": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "25": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 30
        }
      },
      "26": {
        start: {
          line: 59,
          column: 17
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "27": {
        start: {
          line: 62,
          column: 32
        },
        end: {
          line: 62,
          column: 88
        }
      },
      "28": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "29": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "30": {
        start: {
          line: 65,
          column: 23
        },
        end: {
          line: 65,
          column: 95
        }
      },
      "31": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 70,
          column: 13
        }
      },
      "32": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 57
        }
      },
      "33": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 39
        }
      },
      "34": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 25
        }
      },
      "35": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 76,
          column: 5
        }
      },
      "36": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 31
        }
      },
      "37": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 77,
          column: 18
        }
      },
      "38": {
        start: {
          line: 79,
          column: 19
        },
        end: {
          line: 79,
          column: 81
        }
      },
      "39": {
        start: {
          line: 80,
          column: 18
        },
        end: {
          line: 80,
          column: 54
        }
      },
      "40": {
        start: {
          line: 81,
          column: 20
        },
        end: {
          line: 103,
          column: 1
        }
      },
      "41": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 92,
          column: 13
        }
      },
      "42": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 90,
          column: 35
        }
      },
      "43": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 53
        }
      },
      "44": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 25
        }
      },
      "45": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 99,
          column: 13
        }
      },
      "46": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 43
        }
      },
      "47": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 98,
          column: 61
        }
      },
      "48": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 27
        }
      },
      "49": {
        start: {
          line: 104,
          column: 20
        },
        end: {
          line: 119,
          column: 1
        }
      },
      "50": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "51": {
        start: {
          line: 106,
          column: 28
        },
        end: {
          line: 107,
          column: 10
        }
      },
      "52": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 23
        }
      },
      "53": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "54": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 59
        }
      },
      "55": {
        start: {
          line: 112,
          column: 15
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "56": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 59
        }
      },
      "57": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 70
        }
      },
      "58": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 20
        }
      },
      "59": {
        start: {
          line: 120,
          column: 21
        },
        end: {
          line: 126,
          column: 1
        }
      },
      "60": {
        start: {
          line: 121,
          column: 23
        },
        end: {
          line: 121,
          column: 55
        }
      },
      "61": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 124,
          column: 5
        }
      },
      "62": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 20
        }
      },
      "63": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 125,
          column: 36
        }
      },
      "64": {
        start: {
          line: 127,
          column: 32
        },
        end: {
          line: 200,
          column: 1
        }
      },
      "65": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 199,
          column: 5
        }
      },
      "66": {
        start: {
          line: 129,
          column: 22
        },
        end: {
          line: 129,
          column: 39
        }
      },
      "67": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 122
        }
      },
      "68": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "69": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 85
        }
      },
      "70": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 136,
          column: 14
        }
      },
      "71": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "72": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 81
        }
      },
      "73": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 143,
          column: 14
        }
      },
      "74": {
        start: {
          line: 145,
          column: 24
        },
        end: {
          line: 145,
          column: 48
        }
      },
      "75": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 47
        }
      },
      "76": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "77": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 89
        }
      },
      "78": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 152,
          column: 14
        }
      },
      "79": {
        start: {
          line: 154,
          column: 23
        },
        end: {
          line: 154,
          column: 42
        }
      },
      "80": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 164,
          column: 9
        }
      },
      "81": {
        start: {
          line: 157,
          column: 34
        },
        end: {
          line: 157,
          column: 74
        }
      },
      "82": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 116
        }
      },
      "83": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 163,
          column: 13
        }
      },
      "84": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 162,
          column: 18
        }
      },
      "85": {
        start: {
          line: 166,
          column: 21
        },
        end: {
          line: 170,
          column: 10
        }
      },
      "86": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 177,
          column: 9
        }
      },
      "87": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 62
        }
      },
      "88": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 176,
          column: 14
        }
      },
      "89": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 184,
          column: 9
        }
      },
      "90": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 69
        }
      },
      "91": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 183,
          column: 14
        }
      },
      "92": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 69
        }
      },
      "93": {
        start: {
          line: 187,
          column: 30
        },
        end: {
          line: 187,
          column: 67
        }
      },
      "94": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 108
        }
      },
      "95": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 192,
          column: 10
        }
      },
      "96": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 73
        }
      },
      "97": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 198,
          column: 10
        }
      },
      "98": {
        start: {
          line: 201,
          column: 27
        },
        end: {
          line: 215,
          column: 1
        }
      },
      "99": {
        start: {
          line: 202,
          column: 18
        },
        end: {
          line: 202,
          column: 35
        }
      },
      "100": {
        start: {
          line: 203,
          column: 4
        },
        end: {
          line: 205,
          column: 5
        }
      },
      "101": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 20
        }
      },
      "102": {
        start: {
          line: 207,
          column: 4
        },
        end: {
          line: 209,
          column: 5
        }
      },
      "103": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 17
        }
      },
      "104": {
        start: {
          line: 210,
          column: 20
        },
        end: {
          line: 210,
          column: 44
        }
      },
      "105": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 213,
          column: 5
        }
      },
      "106": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 20
        }
      },
      "107": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 214,
          column: 31
        }
      },
      "108": {
        start: {
          line: 216,
          column: 27
        },
        end: {
          line: 231,
          column: 1
        }
      },
      "109": {
        start: {
          line: 217,
          column: 18
        },
        end: {
          line: 217,
          column: 35
        }
      },
      "110": {
        start: {
          line: 218,
          column: 4
        },
        end: {
          line: 220,
          column: 5
        }
      },
      "111": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 20
        }
      },
      "112": {
        start: {
          line: 222,
          column: 4
        },
        end: {
          line: 224,
          column: 5
        }
      },
      "113": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 43
        }
      },
      "114": {
        start: {
          line: 225,
          column: 20
        },
        end: {
          line: 225,
          column: 44
        }
      },
      "115": {
        start: {
          line: 226,
          column: 4
        },
        end: {
          line: 228,
          column: 5
        }
      },
      "116": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 20
        }
      },
      "117": {
        start: {
          line: 230,
          column: 4
        },
        end: {
          line: 230,
          column: 63
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 17
          },
          end: {
            line: 12,
            column: 18
          }
        },
        loc: {
          start: {
            line: 12,
            column: 28
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 19
          }
        },
        loc: {
          start: {
            line: 15,
            column: 29
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 24
          },
          end: {
            line: 18,
            column: 25
          }
        },
        loc: {
          start: {
            line: 18,
            column: 35
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 24
          },
          end: {
            line: 21,
            column: 25
          }
        },
        loc: {
          start: {
            line: 21,
            column: 35
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 29
          },
          end: {
            line: 24,
            column: 30
          }
        },
        loc: {
          start: {
            line: 24,
            column: 40
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 17
          },
          end: {
            line: 27,
            column: 18
          }
        },
        loc: {
          start: {
            line: 27,
            column: 28
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 33,
            column: 9
          },
          end: {
            line: 33,
            column: 33
          }
        },
        loc: {
          start: {
            line: 33,
            column: 39
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 33
      },
      "8": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 38,
            column: 9
          },
          end: {
            line: 38,
            column: 33
          }
        },
        loc: {
          start: {
            line: 38,
            column: 47
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 38
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 42,
            column: 39
          },
          end: {
            line: 42,
            column: 40
          }
        },
        loc: {
          start: {
            line: 42,
            column: 61
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "10": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 46,
            column: 9
          },
          end: {
            line: 46,
            column: 34
          }
        },
        loc: {
          start: {
            line: 46,
            column: 53
          },
          end: {
            line: 78,
            column: 1
          }
        },
        line: 46
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        loc: {
          start: {
            line: 88,
            column: 36
          },
          end: {
            line: 94,
            column: 9
          }
        },
        line: 88
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        loc: {
          start: {
            line: 95,
            column: 43
          },
          end: {
            line: 101,
            column: 9
          }
        },
        line: 95
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 104,
            column: 20
          },
          end: {
            line: 104,
            column: 21
          }
        },
        loc: {
          start: {
            line: 104,
            column: 35
          },
          end: {
            line: 119,
            column: 1
          }
        },
        line: 104
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 120,
            column: 21
          },
          end: {
            line: 120,
            column: 22
          }
        },
        loc: {
          start: {
            line: 120,
            column: 28
          },
          end: {
            line: 126,
            column: 1
          }
        },
        line: 120
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 127,
            column: 32
          },
          end: {
            line: 127,
            column: 33
          }
        },
        loc: {
          start: {
            line: 127,
            column: 57
          },
          end: {
            line: 200,
            column: 1
          }
        },
        line: 127
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 201,
            column: 27
          },
          end: {
            line: 201,
            column: 28
          }
        },
        loc: {
          start: {
            line: 201,
            column: 40
          },
          end: {
            line: 215,
            column: 1
          }
        },
        line: 201
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 216,
            column: 27
          },
          end: {
            line: 216,
            column: 28
          }
        },
        loc: {
          start: {
            line: 216,
            column: 40
          },
          end: {
            line: 231,
            column: 1
          }
        },
        line: 216
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 34,
            column: 11
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 35
          },
          end: {
            line: 34,
            column: 38
          }
        }, {
          start: {
            line: 34,
            column: 41
          },
          end: {
            line: 36,
            column: 5
          }
        }],
        line: 34
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 11
          },
          end: {
            line: 34,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 11
          },
          end: {
            line: 34,
            column: 14
          }
        }, {
          start: {
            line: 34,
            column: 18
          },
          end: {
            line: 34,
            column: 32
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "3": {
        loc: {
          start: {
            line: 43,
            column: 15
          },
          end: {
            line: 43,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 29
          },
          end: {
            line: 43,
            column: 45
          }
        }, {
          start: {
            line: 43,
            column: 48
          },
          end: {
            line: 43,
            column: 65
          }
        }],
        line: 43
      },
      "4": {
        loc: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "5": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 20
          }
        }, {
          start: {
            line: 47,
            column: 24
          },
          end: {
            line: 47,
            column: 27
          }
        }, {
          start: {
            line: 47,
            column: 31
          },
          end: {
            line: 47,
            column: 45
          }
        }],
        line: 47
      },
      "6": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "7": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 50,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 50,
            column: 20
          }
        }, {
          start: {
            line: 50,
            column: 24
          },
          end: {
            line: 50,
            column: 47
          }
        }, {
          start: {
            line: 50,
            column: 51
          },
          end: {
            line: 50,
            column: 76
          }
        }],
        line: 50
      },
      "8": {
        loc: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "9": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 56,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: 56,
            column: 17
          },
          end: {
            line: 56,
            column: 31
          }
        }],
        line: 56
      },
      "10": {
        loc: {
          start: {
            line: 62,
            column: 32
          },
          end: {
            line: 62,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 32
          },
          end: {
            line: 62,
            column: 53
          }
        }, {
          start: {
            line: 62,
            column: 57
          },
          end: {
            line: 62,
            column: 88
          }
        }],
        line: 62
      },
      "11": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "12": {
        loc: {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 64,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 64,
            column: 29
          }
        }, {
          start: {
            line: 64,
            column: 33
          },
          end: {
            line: 64,
            column: 79
          }
        }],
        line: 64
      },
      "13": {
        loc: {
          start: {
            line: 65,
            column: 23
          },
          end: {
            line: 65,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 65,
            column: 47
          },
          end: {
            line: 65,
            column: 88
          }
        }, {
          start: {
            line: 65,
            column: 91
          },
          end: {
            line: 65,
            column: 95
          }
        }],
        line: 65
      },
      "14": {
        loc: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        }, {
          start: {
            line: 68,
            column: 19
          },
          end: {
            line: 70,
            column: 13
          }
        }],
        line: 66
      },
      "15": {
        loc: {
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 66,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 66,
            column: 20
          }
        }, {
          start: {
            line: 66,
            column: 25
          },
          end: {
            line: 66,
            column: 33
          }
        }, {
          start: {
            line: 66,
            column: 37
          },
          end: {
            line: 66,
            column: 45
          }
        }],
        line: 66
      },
      "16": {
        loc: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "17": {
        loc: {
          start: {
            line: 79,
            column: 19
          },
          end: {
            line: 79,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 19
          },
          end: {
            line: 79,
            column: 41
          }
        }, {
          start: {
            line: 79,
            column: 45
          },
          end: {
            line: 79,
            column: 81
          }
        }],
        line: 79
      },
      "18": {
        loc: {
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "19": {
        loc: {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "20": {
        loc: {
          start: {
            line: 96,
            column: 16
          },
          end: {
            line: 96,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 16
          },
          end: {
            line: 96,
            column: 21
          }
        }, {
          start: {
            line: 96,
            column: 25
          },
          end: {
            line: 96,
            column: 37
          }
        }],
        line: 96
      },
      "21": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        }, {
          start: {
            line: 112,
            column: 15
          },
          end: {
            line: 116,
            column: 9
          }
        }],
        line: 110
      },
      "22": {
        loc: {
          start: {
            line: 112,
            column: 15
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 15
          },
          end: {
            line: 116,
            column: 9
          }
        }, {
          start: {
            line: 114,
            column: 15
          },
          end: {
            line: 116,
            column: 9
          }
        }],
        line: 112
      },
      "23": {
        loc: {
          start: {
            line: 112,
            column: 19
          },
          end: {
            line: 112,
            column: 161
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 19
          },
          end: {
            line: 112,
            column: 51
          }
        }, {
          start: {
            line: 112,
            column: 55
          },
          end: {
            line: 112,
            column: 109
          }
        }, {
          start: {
            line: 112,
            column: 113
          },
          end: {
            line: 112,
            column: 161
          }
        }],
        line: 112
      },
      "24": {
        loc: {
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "25": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 122,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 122,
            column: 19
          }
        }, {
          start: {
            line: 122,
            column: 23
          },
          end: {
            line: 122,
            column: 56
          }
        }],
        line: 122
      },
      "26": {
        loc: {
          start: {
            line: 130,
            column: 71
          },
          end: {
            line: 130,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 130,
            column: 79
          },
          end: {
            line: 130,
            column: 109
          }
        }, {
          start: {
            line: 130,
            column: 112
          },
          end: {
            line: 130,
            column: 118
          }
        }],
        line: 130
      },
      "27": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "28": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "29": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "30": {
        loc: {
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 147,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 147,
            column: 20
          }
        }, {
          start: {
            line: 147,
            column: 24
          },
          end: {
            line: 147,
            column: 51
          }
        }, {
          start: {
            line: 147,
            column: 55
          },
          end: {
            line: 147,
            column: 74
          }
        }],
        line: 147
      },
      "31": {
        loc: {
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "32": {
        loc: {
          start: {
            line: 156,
            column: 12
          },
          end: {
            line: 156,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 12
          },
          end: {
            line: 156,
            column: 31
          }
        }, {
          start: {
            line: 156,
            column: 35
          },
          end: {
            line: 156,
            column: 69
          }
        }],
        line: 156
      },
      "33": {
        loc: {
          start: {
            line: 158,
            column: 76
          },
          end: {
            line: 158,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 158,
            column: 92
          },
          end: {
            line: 158,
            column: 101
          }
        }, {
          start: {
            line: 158,
            column: 104
          },
          end: {
            line: 158,
            column: 112
          }
        }],
        line: 158
      },
      "34": {
        loc: {
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 163,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 163,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "35": {
        loc: {
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 177,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 177,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "36": {
        loc: {
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "37": {
        loc: {
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 178,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 178,
            column: 29
          }
        }, {
          start: {
            line: 178,
            column: 33
          },
          end: {
            line: 178,
            column: 65
          }
        }],
        line: 178
      },
      "38": {
        loc: {
          start: {
            line: 188,
            column: 68
          },
          end: {
            line: 188,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 188,
            column: 84
          },
          end: {
            line: 188,
            column: 93
          }
        }, {
          start: {
            line: 188,
            column: 96
          },
          end: {
            line: 188,
            column: 104
          }
        }],
        line: 188
      },
      "39": {
        loc: {
          start: {
            line: 191,
            column: 21
          },
          end: {
            line: 191,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 191,
            column: 37
          },
          end: {
            line: 191,
            column: 46
          }
        }, {
          start: {
            line: 191,
            column: 49
          },
          end: {
            line: 191,
            column: 97
          }
        }],
        line: 191
      },
      "40": {
        loc: {
          start: {
            line: 197,
            column: 51
          },
          end: {
            line: 197,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 197,
            column: 76
          },
          end: {
            line: 197,
            column: 89
          }
        }, {
          start: {
            line: 197,
            column: 92
          },
          end: {
            line: 197,
            column: 105
          }
        }],
        line: 197
      },
      "41": {
        loc: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "42": {
        loc: {
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 209,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 209,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "43": {
        loc: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "44": {
        loc: {
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 211,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 211,
            column: 16
          }
        }, {
          start: {
            line: 211,
            column: 20
          },
          end: {
            line: 211,
            column: 47
          }
        }, {
          start: {
            line: 211,
            column: 51
          },
          end: {
            line: 211,
            column: 70
          }
        }],
        line: 211
      },
      "45": {
        loc: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 220,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 220,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "46": {
        loc: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "47": {
        loc: {
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "48": {
        loc: {
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 226,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 226,
            column: 16
          }
        }, {
          start: {
            line: 226,
            column: 20
          },
          end: {
            line: 226,
            column: 47
          }
        }],
        line: 226
      },
      "49": {
        loc: {
          start: {
            line: 230,
            column: 11
          },
          end: {
            line: 230,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 230,
            column: 33
          },
          end: {
            line: 230,
            column: 55
          }
        }, {
          start: {
            line: 230,
            column: 58
          },
          end: {
            line: 230,
            column: 62
          }
        }],
        line: 230
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/lib/auth.ts"],
      sourcesContent: ["import { NextRequest } from 'next/server';\n// import jwt from 'jsonwebtoken'; replaced\nimport * as jose from 'jose';\nimport prisma from '@/lib/prisma';\n\nconst JWT_SECRET = process.env.JWT_SECRET || 'default-secret-key-for-development';\nconst secretKey = new TextEncoder().encode(JWT_SECRET);\n\n// Export authOptions for NextAuth\nexport const authOptions = {\n  secret: JWT_SECRET,\n  session: {\n    strategy: 'jwt' as const,\n    maxAge: 24 * 60 * 60, // 24 hours\n  },\n  callbacks: {\n    async jwt({ token, user }: { token: any; user?: any }) {\n      if (user) {\n        token.id = user.id;\n        token.permissions = user.permissions;\n      }\n      return token;\n    },\n    async session({ session, token }: { session: any; token: any }) {\n      if (token && session.user) {\n        session.user.id = token.id;\n        session.user.permissions = token.permissions;\n      }\n      return session;\n    }\n  }\n};\n\n/**\n * Verify a JWT token\n */\nexport const verifyToken = async (token: string): Promise<jose.JWTPayload | null> => {\n    try {\n        const { payload } = await jose.jwtVerify(token, secretKey, {\n            // Assuming HS256 algorithm, adjust if different\n            // algorithms: ['HS256'] \n        });\n        return payload;\n    } catch (error: any) {\n        if (error.code === 'ERR_JWT_EXPIRED') {\n            console.error('Token expired:', error.message);\n        } else if (error.code === 'ERR_JWS_INVALID' || error.code === 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED' || error.code === 'ERR_JWT_CLAIM_VALIDATION_FAILED') {\n            console.error('Invalid token:', error.message);\n        } else {\n            console.error('Token verification error:', error.message);\n        }\n        return null;\n    }\n};\n\n/**\n * Extract token from authorization header\n */\nexport const extractToken = (req: NextRequest): string | null => {\n    const authHeader = req.headers.get('authorization');\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n        return null;\n    }\n    return authHeader.split(' ')[1];\n};\n\n/**\n * Validate if a user has a specific permission\n * @param req - Next.js request object\n * @param permission - Permission string to check\n * @returns Object with isValid flag and optional error message\n */\nexport const validateTokenPermission = async (req: NextRequest, permission: string): Promise<{ isValid: boolean; message?: string }> => {\n    try {\n        const token = extractToken(req);\n        console.log(`Checking permission \"${permission}\" with token: ${token ? `${token.substring(0, 10)}...` : 'none'}`);\n\n        if (!token) {\n            console.error('No token provided when checking permission:', permission);\n            return { isValid: false, message: 'Authentication required' };\n        }\n\n        // Special case for development token\n        if (token === 'dev-token') {\n            console.log(`Development mode: granting permission '${permission}'`);\n            return { isValid: true };\n        }\n\n        const payload = await verifyToken(token);\n        console.log('Token payload:', payload);\n\n        if (!payload || typeof payload !== 'object' || !('sub' in payload)) {\n            console.error('Invalid token payload when checking permission:', permission);\n            return { isValid: false, message: 'Invalid authentication token' };\n        }\n\n        const userId = Number(payload.sub);\n\n        // Check if permission is in the token payload directly\n        if (payload.permissions && Array.isArray(payload.permissions)) {\n            const hasPermission = payload.permissions.includes(permission);\n            console.log(`Permission check from token for \"${permission}\": ${hasPermission ? 'GRANTED' : 'DENIED'}`);\n            \n            if (hasPermission) {\n                return { isValid: true };\n            }\n        }\n\n        // If not in token or as fallback, get user with permissions from database\n        const user = await prisma.user.findUnique({\n            where: { id: userId }\n        });\n\n        if (!user) {\n            console.error(`User not found for ID: ${userId}`);\n            return { isValid: false, message: 'User not found' };\n        }\n\n        if (!user.permissions || !Array.isArray(user.permissions)) {\n            console.error(`User ${userId} has no permissions array`);\n            return { isValid: false, message: 'User has no permissions' };\n        }\n\n        // Check if user has the required permission\n        console.log(`User ${userId} permissions:`, user.permissions);\n        const hasPermission = user.permissions.includes(permission);\n        console.log(`Permission check result for \"${permission}\": ${hasPermission ? 'GRANTED' : 'DENIED'}`);\n\n        return {\n            isValid: hasPermission,\n            message: hasPermission ? undefined : `Permission denied: '${permission}' is required`\n        };\n    } catch (error) {\n        console.error(`Error checking permission ${permission}:`, error);\n        return { isValid: false, message: `Error checking permission: ${error instanceof Error ? error.message : String(error)}` };\n    }\n};\n\n/**\n * Get user ID from token\n */\nexport const getUserIdFromToken = async (req: NextRequest): Promise<number | null> => {\n    const token = extractToken(req);\n\n    if (!token) {\n        return null;\n    }\n\n    // Special case for development token\n    if (token === 'dev-token') {\n        return 1; // Development user ID\n    }\n\n    const payload = await verifyToken(token);\n\n    if (!payload || typeof payload !== 'object' || !('sub' in payload)) {\n        return null;\n    }\n\n    return Number(payload.sub);\n};\n\n/**\n * Get shop ID from token\n */\nexport const getShopIdFromToken = async (req: NextRequest): Promise<string | null> => {\n    const token = extractToken(req);\n\n    if (!token) {\n        return null;\n    }\n\n    // Special case for development token - assign to first shop for testing shop staff behavior\n    if (token === 'dev-token') {\n        return 'cmbtr9q6l000061romoxi7uvf'; // Assign dev-token to first shop from database\n    }\n\n    const payload = await verifyToken(token);\n\n    if (!payload || typeof payload !== 'object') {\n        return null;\n    }\n\n    // Extract shop ID from token as string to match database schema\n    return 'shopId' in payload ? String(payload.shopId) : null;\n};"],
      names: ["authOptions", "extractToken", "getShopIdFromToken", "getUserIdFromToken", "validateTokenPermission", "verifyToken", "JWT_SECRET", "process", "env", "secretKey", "TextEncoder", "encode", "secret", "session", "strategy", "maxAge", "callbacks", "jwt", "token", "user", "id", "permissions", "payload", "jose", "jwtVerify", "error", "code", "console", "message", "req", "authHeader", "headers", "get", "startsWith", "split", "permission", "log", "substring", "isValid", "userId", "Number", "sub", "Array", "isArray", "hasPermission", "includes", "prisma", "findUnique", "where", "undefined", "Error", "String", "shopId"],
      mappings: ";;;;;;;;;;;IASaA,WAAW;eAAXA;;IAiDAC,YAAY;eAAZA;;IA2GAC,kBAAkB;eAAlBA;;IAxBAC,kBAAkB;eAAlBA;;IArEAC,uBAAuB;eAAvBA;;IApCAC,WAAW;eAAXA;;;8DAlCS;+DACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEnB,MAAMC,aAAaC,QAAQC,GAAG,CAACF,UAAU,IAAI;AAC7C,MAAMG,YAAY,IAAIC,cAAcC,MAAM,CAACL;AAGpC,MAAMN,cAAc;IACzBY,QAAQN;IACRO,SAAS;QACPC,UAAU;QACVC,QAAQ,KAAK,KAAK;IACpB;IACAC,WAAW;QACT,MAAMC,KAAI,EAAEC,KAAK,EAAEC,IAAI,EAA8B;YACnD,IAAIA,MAAM;gBACRD,MAAME,EAAE,GAAGD,KAAKC,EAAE;gBAClBF,MAAMG,WAAW,GAAGF,KAAKE,WAAW;YACtC;YACA,OAAOH;QACT;QACA,MAAML,SAAQ,EAAEA,OAAO,EAAEK,KAAK,EAAgC;YAC5D,IAAIA,SAASL,QAAQM,IAAI,EAAE;gBACzBN,QAAQM,IAAI,CAACC,EAAE,GAAGF,MAAME,EAAE;gBAC1BP,QAAQM,IAAI,CAACE,WAAW,GAAGH,MAAMG,WAAW;YAC9C;YACA,OAAOR;QACT;IACF;AACF;AAKO,MAAMR,cAAc,OAAOa;IAC9B,IAAI;QACA,MAAM,EAAEI,OAAO,EAAE,GAAG,MAAMC,MAAKC,SAAS,CAACN,OAAOT,WAAW;QAG3D;QACA,OAAOa;IACX,EAAE,OAAOG,OAAY;QACjB,IAAIA,MAAMC,IAAI,KAAK,mBAAmB;YAClCC,QAAQF,KAAK,CAAC,kBAAkBA,MAAMG,OAAO;QACjD,OAAO,IAAIH,MAAMC,IAAI,KAAK,qBAAqBD,MAAMC,IAAI,KAAK,2CAA2CD,MAAMC,IAAI,KAAK,mCAAmC;YACvJC,QAAQF,KAAK,CAAC,kBAAkBA,MAAMG,OAAO;QACjD,OAAO;YACHD,QAAQF,KAAK,CAAC,6BAA6BA,MAAMG,OAAO;QAC5D;QACA,OAAO;IACX;AACJ;AAKO,MAAM3B,eAAe,CAAC4B;IACzB,MAAMC,aAAaD,IAAIE,OAAO,CAACC,GAAG,CAAC;IACnC,IAAI,CAACF,cAAc,CAACA,WAAWG,UAAU,CAAC,YAAY;QAClD,OAAO;IACX;IACA,OAAOH,WAAWI,KAAK,CAAC,IAAI,CAAC,EAAE;AACnC;AAQO,MAAM9B,0BAA0B,OAAOyB,KAAkBM;IAC5D,IAAI;QACA,MAAMjB,QAAQjB,aAAa4B;QAC3BF,QAAQS,GAAG,CAAC,CAAC,qBAAqB,EAAED,WAAW,cAAc,EAAEjB,QAAQ,CAAC,EAAEA,MAAMmB,SAAS,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,OAAO,CAAC;QAEhH,IAAI,CAACnB,OAAO;YACRS,QAAQF,KAAK,CAAC,+CAA+CU;YAC7D,OAAO;gBAAEG,SAAS;gBAAOV,SAAS;YAA0B;QAChE;QAEA,qCAAqC;QACrC,IAAIV,UAAU,aAAa;YACvBS,QAAQS,GAAG,CAAC,CAAC,uCAAuC,EAAED,WAAW,CAAC,CAAC;YACnE,OAAO;gBAAEG,SAAS;YAAK;QAC3B;QAEA,MAAMhB,UAAU,MAAMjB,YAAYa;QAClCS,QAAQS,GAAG,CAAC,kBAAkBd;QAE9B,IAAI,CAACA,WAAW,OAAOA,YAAY,YAAY,CAAE,CAAA,SAASA,OAAM,GAAI;YAChEK,QAAQF,KAAK,CAAC,mDAAmDU;YACjE,OAAO;gBAAEG,SAAS;gBAAOV,SAAS;YAA+B;QACrE;QAEA,MAAMW,SAASC,OAAOlB,QAAQmB,GAAG;QAEjC,uDAAuD;QACvD,IAAInB,QAAQD,WAAW,IAAIqB,MAAMC,OAAO,CAACrB,QAAQD,WAAW,GAAG;YAC3D,MAAMuB,gBAAgBtB,QAAQD,WAAW,CAACwB,QAAQ,CAACV;YACnDR,QAAQS,GAAG,CAAC,CAAC,iCAAiC,EAAED,WAAW,GAAG,EAAES,gBAAgB,YAAY,SAAS,CAAC;YAEtG,IAAIA,eAAe;gBACf,OAAO;oBAAEN,SAAS;gBAAK;YAC3B;QACJ;QAEA,0EAA0E;QAC1E,MAAMnB,OAAO,MAAM2B,eAAM,CAAC3B,IAAI,CAAC4B,UAAU,CAAC;YACtCC,OAAO;gBAAE5B,IAAImB;YAAO;QACxB;QAEA,IAAI,CAACpB,MAAM;YACPQ,QAAQF,KAAK,CAAC,CAAC,uBAAuB,EAAEc,OAAO,CAAC;YAChD,OAAO;gBAAED,SAAS;gBAAOV,SAAS;YAAiB;QACvD;QAEA,IAAI,CAACT,KAAKE,WAAW,IAAI,CAACqB,MAAMC,OAAO,CAACxB,KAAKE,WAAW,GAAG;YACvDM,QAAQF,KAAK,CAAC,CAAC,KAAK,EAAEc,OAAO,yBAAyB,CAAC;YACvD,OAAO;gBAAED,SAAS;gBAAOV,SAAS;YAA0B;QAChE;QAEA,4CAA4C;QAC5CD,QAAQS,GAAG,CAAC,CAAC,KAAK,EAAEG,OAAO,aAAa,CAAC,EAAEpB,KAAKE,WAAW;QAC3D,MAAMuB,gBAAgBzB,KAAKE,WAAW,CAACwB,QAAQ,CAACV;QAChDR,QAAQS,GAAG,CAAC,CAAC,6BAA6B,EAAED,WAAW,GAAG,EAAES,gBAAgB,YAAY,SAAS,CAAC;QAElG,OAAO;YACHN,SAASM;YACThB,SAASgB,gBAAgBK,YAAY,CAAC,oBAAoB,EAAEd,WAAW,aAAa,CAAC;QACzF;IACJ,EAAE,OAAOV,OAAO;QACZE,QAAQF,KAAK,CAAC,CAAC,0BAA0B,EAAEU,WAAW,CAAC,CAAC,EAAEV;QAC1D,OAAO;YAAEa,SAAS;YAAOV,SAAS,CAAC,2BAA2B,EAAEH,iBAAiByB,QAAQzB,MAAMG,OAAO,GAAGuB,OAAO1B,OAAO,CAAC;QAAC;IAC7H;AACJ;AAKO,MAAMtB,qBAAqB,OAAO0B;IACrC,MAAMX,QAAQjB,aAAa4B;IAE3B,IAAI,CAACX,OAAO;QACR,OAAO;IACX;IAEA,qCAAqC;IACrC,IAAIA,UAAU,aAAa;QACvB,OAAO,GAAG,sBAAsB;IACpC;IAEA,MAAMI,UAAU,MAAMjB,YAAYa;IAElC,IAAI,CAACI,WAAW,OAAOA,YAAY,YAAY,CAAE,CAAA,SAASA,OAAM,GAAI;QAChE,OAAO;IACX;IAEA,OAAOkB,OAAOlB,QAAQmB,GAAG;AAC7B;AAKO,MAAMvC,qBAAqB,OAAO2B;IACrC,MAAMX,QAAQjB,aAAa4B;IAE3B,IAAI,CAACX,OAAO;QACR,OAAO;IACX;IAEA,4FAA4F;IAC5F,IAAIA,UAAU,aAAa;QACvB,OAAO,6BAA6B,+CAA+C;IACvF;IAEA,MAAMI,UAAU,MAAMjB,YAAYa;IAElC,IAAI,CAACI,WAAW,OAAOA,YAAY,UAAU;QACzC,OAAO;IACX;IAEA,gEAAgE;IAChE,OAAO,YAAYA,UAAU6B,OAAO7B,QAAQ8B,MAAM,IAAI;AAC1D"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b1593b76f12323cae5df994dd83429ee3e50ae20"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_170jsuow5d = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_170jsuow5d();
cov_170jsuow5d().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_170jsuow5d().f[0]++;
  cov_170jsuow5d().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_170jsuow5d().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_170jsuow5d().s[3]++;
_export(exports, {
  authOptions: function () {
    /* istanbul ignore next */
    cov_170jsuow5d().f[1]++;
    cov_170jsuow5d().s[4]++;
    return authOptions;
  },
  extractToken: function () {
    /* istanbul ignore next */
    cov_170jsuow5d().f[2]++;
    cov_170jsuow5d().s[5]++;
    return extractToken;
  },
  getShopIdFromToken: function () {
    /* istanbul ignore next */
    cov_170jsuow5d().f[3]++;
    cov_170jsuow5d().s[6]++;
    return getShopIdFromToken;
  },
  getUserIdFromToken: function () {
    /* istanbul ignore next */
    cov_170jsuow5d().f[4]++;
    cov_170jsuow5d().s[7]++;
    return getUserIdFromToken;
  },
  validateTokenPermission: function () {
    /* istanbul ignore next */
    cov_170jsuow5d().f[5]++;
    cov_170jsuow5d().s[8]++;
    return validateTokenPermission;
  },
  verifyToken: function () {
    /* istanbul ignore next */
    cov_170jsuow5d().f[6]++;
    cov_170jsuow5d().s[9]++;
    return verifyToken;
  }
});
const _jose =
/* istanbul ignore next */
(/*#__PURE__*/cov_170jsuow5d().s[10]++, _interop_require_wildcard(require("jose")));
const _prisma =
/* istanbul ignore next */
(/*#__PURE__*/cov_170jsuow5d().s[11]++, _interop_require_default(require("./prisma")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_170jsuow5d().f[7]++;
  cov_170jsuow5d().s[12]++;
  return /* istanbul ignore next */(cov_170jsuow5d().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_170jsuow5d().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_170jsuow5d().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_170jsuow5d().b[0][1]++, {
    default: obj
  });
}
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_170jsuow5d().f[8]++;
  cov_170jsuow5d().s[13]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_170jsuow5d().b[2][0]++;
    cov_170jsuow5d().s[14]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_170jsuow5d().b[2][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_170jsuow5d().s[15]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_170jsuow5d().s[16]++, new WeakMap());
  /* istanbul ignore next */
  cov_170jsuow5d().s[17]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_170jsuow5d().f[9]++;
    cov_170jsuow5d().s[18]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_170jsuow5d().b[3][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_170jsuow5d().b[3][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_170jsuow5d().f[10]++;
  cov_170jsuow5d().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_170jsuow5d().b[5][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_170jsuow5d().b[5][1]++, obj) &&
  /* istanbul ignore next */
  (cov_170jsuow5d().b[5][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_170jsuow5d().b[4][0]++;
    cov_170jsuow5d().s[20]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_170jsuow5d().b[4][1]++;
  }
  cov_170jsuow5d().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_170jsuow5d().b[7][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_170jsuow5d().b[7][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_170jsuow5d().b[7][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_170jsuow5d().b[6][0]++;
    cov_170jsuow5d().s[22]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_170jsuow5d().b[6][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_170jsuow5d().s[23]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_170jsuow5d().s[24]++;
  if (
  /* istanbul ignore next */
  (cov_170jsuow5d().b[9][0]++, cache) &&
  /* istanbul ignore next */
  (cov_170jsuow5d().b[9][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_170jsuow5d().b[8][0]++;
    cov_170jsuow5d().s[25]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_170jsuow5d().b[8][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_170jsuow5d().s[26]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_170jsuow5d().s[27]++,
  /* istanbul ignore next */
  (cov_170jsuow5d().b[10][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_170jsuow5d().b[10][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_170jsuow5d().s[28]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_170jsuow5d().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_170jsuow5d().b[12][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_170jsuow5d().b[12][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_170jsuow5d().b[11][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_170jsuow5d().s[30]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_170jsuow5d().b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_170jsuow5d().b[13][1]++, null));
      /* istanbul ignore next */
      cov_170jsuow5d().s[31]++;
      if (
      /* istanbul ignore next */
      (cov_170jsuow5d().b[15][0]++, desc) && (
      /* istanbul ignore next */
      (cov_170jsuow5d().b[15][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_170jsuow5d().b[15][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_170jsuow5d().b[14][0]++;
        cov_170jsuow5d().s[32]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_170jsuow5d().b[14][1]++;
        cov_170jsuow5d().s[33]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_170jsuow5d().b[11][1]++;
    }
  }
  /* istanbul ignore next */
  cov_170jsuow5d().s[34]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_170jsuow5d().s[35]++;
  if (cache) {
    /* istanbul ignore next */
    cov_170jsuow5d().b[16][0]++;
    cov_170jsuow5d().s[36]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_170jsuow5d().b[16][1]++;
  }
  cov_170jsuow5d().s[37]++;
  return newObj;
}
const JWT_SECRET =
/* istanbul ignore next */
(cov_170jsuow5d().s[38]++,
/* istanbul ignore next */
(cov_170jsuow5d().b[17][0]++, process.env.JWT_SECRET) ||
/* istanbul ignore next */
(cov_170jsuow5d().b[17][1]++, "default-secret-key-for-development"));
const secretKey =
/* istanbul ignore next */
(cov_170jsuow5d().s[39]++, new TextEncoder().encode(JWT_SECRET));
const authOptions =
/* istanbul ignore next */
(cov_170jsuow5d().s[40]++, {
  secret: JWT_SECRET,
  session: {
    strategy: "jwt",
    maxAge: 24 * 60 * 60
  },
  callbacks: {
    async jwt({
      token,
      user
    }) {
      /* istanbul ignore next */
      cov_170jsuow5d().f[11]++;
      cov_170jsuow5d().s[41]++;
      if (user) {
        /* istanbul ignore next */
        cov_170jsuow5d().b[18][0]++;
        cov_170jsuow5d().s[42]++;
        token.id = user.id;
        /* istanbul ignore next */
        cov_170jsuow5d().s[43]++;
        token.permissions = user.permissions;
      } else
      /* istanbul ignore next */
      {
        cov_170jsuow5d().b[18][1]++;
      }
      cov_170jsuow5d().s[44]++;
      return token;
    },
    async session({
      session,
      token
    }) {
      /* istanbul ignore next */
      cov_170jsuow5d().f[12]++;
      cov_170jsuow5d().s[45]++;
      if (
      /* istanbul ignore next */
      (cov_170jsuow5d().b[20][0]++, token) &&
      /* istanbul ignore next */
      (cov_170jsuow5d().b[20][1]++, session.user)) {
        /* istanbul ignore next */
        cov_170jsuow5d().b[19][0]++;
        cov_170jsuow5d().s[46]++;
        session.user.id = token.id;
        /* istanbul ignore next */
        cov_170jsuow5d().s[47]++;
        session.user.permissions = token.permissions;
      } else
      /* istanbul ignore next */
      {
        cov_170jsuow5d().b[19][1]++;
      }
      cov_170jsuow5d().s[48]++;
      return session;
    }
  }
});
/* istanbul ignore next */
cov_170jsuow5d().s[49]++;
const verifyToken = async token => {
  /* istanbul ignore next */
  cov_170jsuow5d().f[13]++;
  cov_170jsuow5d().s[50]++;
  try {
    const {
      payload
    } =
    /* istanbul ignore next */
    (cov_170jsuow5d().s[51]++, await _jose.jwtVerify(token, secretKey, {}));
    /* istanbul ignore next */
    cov_170jsuow5d().s[52]++;
    return payload;
  } catch (error) {
    /* istanbul ignore next */
    cov_170jsuow5d().s[53]++;
    if (error.code === "ERR_JWT_EXPIRED") {
      /* istanbul ignore next */
      cov_170jsuow5d().b[21][0]++;
      cov_170jsuow5d().s[54]++;
      console.error("Token expired:", error.message);
    } else {
      /* istanbul ignore next */
      cov_170jsuow5d().b[21][1]++;
      cov_170jsuow5d().s[55]++;
      if (
      /* istanbul ignore next */
      (cov_170jsuow5d().b[23][0]++, error.code === "ERR_JWS_INVALID") ||
      /* istanbul ignore next */
      (cov_170jsuow5d().b[23][1]++, error.code === "ERR_JWS_SIGNATURE_VERIFICATION_FAILED") ||
      /* istanbul ignore next */
      (cov_170jsuow5d().b[23][2]++, error.code === "ERR_JWT_CLAIM_VALIDATION_FAILED")) {
        /* istanbul ignore next */
        cov_170jsuow5d().b[22][0]++;
        cov_170jsuow5d().s[56]++;
        console.error("Invalid token:", error.message);
      } else {
        /* istanbul ignore next */
        cov_170jsuow5d().b[22][1]++;
        cov_170jsuow5d().s[57]++;
        console.error("Token verification error:", error.message);
      }
    }
    /* istanbul ignore next */
    cov_170jsuow5d().s[58]++;
    return null;
  }
};
/* istanbul ignore next */
cov_170jsuow5d().s[59]++;
const extractToken = req => {
  /* istanbul ignore next */
  cov_170jsuow5d().f[14]++;
  const authHeader =
  /* istanbul ignore next */
  (cov_170jsuow5d().s[60]++, req.headers.get("authorization"));
  /* istanbul ignore next */
  cov_170jsuow5d().s[61]++;
  if (
  /* istanbul ignore next */
  (cov_170jsuow5d().b[25][0]++, !authHeader) ||
  /* istanbul ignore next */
  (cov_170jsuow5d().b[25][1]++, !authHeader.startsWith("Bearer "))) {
    /* istanbul ignore next */
    cov_170jsuow5d().b[24][0]++;
    cov_170jsuow5d().s[62]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_170jsuow5d().b[24][1]++;
  }
  cov_170jsuow5d().s[63]++;
  return authHeader.split(" ")[1];
};
/* istanbul ignore next */
cov_170jsuow5d().s[64]++;
const validateTokenPermission = async (req, permission) => {
  /* istanbul ignore next */
  cov_170jsuow5d().f[15]++;
  cov_170jsuow5d().s[65]++;
  try {
    const token =
    /* istanbul ignore next */
    (cov_170jsuow5d().s[66]++, extractToken(req));
    /* istanbul ignore next */
    cov_170jsuow5d().s[67]++;
    console.log(`Checking permission "${permission}" with token: ${token ?
    /* istanbul ignore next */
    (cov_170jsuow5d().b[26][0]++, `${token.substring(0, 10)}...`) :
    /* istanbul ignore next */
    (cov_170jsuow5d().b[26][1]++, "none")}`);
    /* istanbul ignore next */
    cov_170jsuow5d().s[68]++;
    if (!token) {
      /* istanbul ignore next */
      cov_170jsuow5d().b[27][0]++;
      cov_170jsuow5d().s[69]++;
      console.error("No token provided when checking permission:", permission);
      /* istanbul ignore next */
      cov_170jsuow5d().s[70]++;
      return {
        isValid: false,
        message: "Authentication required"
      };
    } else
    /* istanbul ignore next */
    {
      cov_170jsuow5d().b[27][1]++;
    }
    // Special case for development token
    cov_170jsuow5d().s[71]++;
    if (token === "dev-token") {
      /* istanbul ignore next */
      cov_170jsuow5d().b[28][0]++;
      cov_170jsuow5d().s[72]++;
      console.log(`Development mode: granting permission '${permission}'`);
      /* istanbul ignore next */
      cov_170jsuow5d().s[73]++;
      return {
        isValid: true
      };
    } else
    /* istanbul ignore next */
    {
      cov_170jsuow5d().b[28][1]++;
    }
    const payload =
    /* istanbul ignore next */
    (cov_170jsuow5d().s[74]++, await verifyToken(token));
    /* istanbul ignore next */
    cov_170jsuow5d().s[75]++;
    console.log("Token payload:", payload);
    /* istanbul ignore next */
    cov_170jsuow5d().s[76]++;
    if (
    /* istanbul ignore next */
    (cov_170jsuow5d().b[30][0]++, !payload) ||
    /* istanbul ignore next */
    (cov_170jsuow5d().b[30][1]++, typeof payload !== "object") ||
    /* istanbul ignore next */
    (cov_170jsuow5d().b[30][2]++, !("sub" in payload))) {
      /* istanbul ignore next */
      cov_170jsuow5d().b[29][0]++;
      cov_170jsuow5d().s[77]++;
      console.error("Invalid token payload when checking permission:", permission);
      /* istanbul ignore next */
      cov_170jsuow5d().s[78]++;
      return {
        isValid: false,
        message: "Invalid authentication token"
      };
    } else
    /* istanbul ignore next */
    {
      cov_170jsuow5d().b[29][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_170jsuow5d().s[79]++, Number(payload.sub));
    // Check if permission is in the token payload directly
    /* istanbul ignore next */
    cov_170jsuow5d().s[80]++;
    if (
    /* istanbul ignore next */
    (cov_170jsuow5d().b[32][0]++, payload.permissions) &&
    /* istanbul ignore next */
    (cov_170jsuow5d().b[32][1]++, Array.isArray(payload.permissions))) {
      /* istanbul ignore next */
      cov_170jsuow5d().b[31][0]++;
      const hasPermission =
      /* istanbul ignore next */
      (cov_170jsuow5d().s[81]++, payload.permissions.includes(permission));
      /* istanbul ignore next */
      cov_170jsuow5d().s[82]++;
      console.log(`Permission check from token for "${permission}": ${hasPermission ?
      /* istanbul ignore next */
      (cov_170jsuow5d().b[33][0]++, "GRANTED") :
      /* istanbul ignore next */
      (cov_170jsuow5d().b[33][1]++, "DENIED")}`);
      /* istanbul ignore next */
      cov_170jsuow5d().s[83]++;
      if (hasPermission) {
        /* istanbul ignore next */
        cov_170jsuow5d().b[34][0]++;
        cov_170jsuow5d().s[84]++;
        return {
          isValid: true
        };
      } else
      /* istanbul ignore next */
      {
        cov_170jsuow5d().b[34][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_170jsuow5d().b[31][1]++;
    }
    // If not in token or as fallback, get user with permissions from database
    const user =
    /* istanbul ignore next */
    (cov_170jsuow5d().s[85]++, await _prisma.default.user.findUnique({
      where: {
        id: userId
      }
    }));
    /* istanbul ignore next */
    cov_170jsuow5d().s[86]++;
    if (!user) {
      /* istanbul ignore next */
      cov_170jsuow5d().b[35][0]++;
      cov_170jsuow5d().s[87]++;
      console.error(`User not found for ID: ${userId}`);
      /* istanbul ignore next */
      cov_170jsuow5d().s[88]++;
      return {
        isValid: false,
        message: "User not found"
      };
    } else
    /* istanbul ignore next */
    {
      cov_170jsuow5d().b[35][1]++;
    }
    cov_170jsuow5d().s[89]++;
    if (
    /* istanbul ignore next */
    (cov_170jsuow5d().b[37][0]++, !user.permissions) ||
    /* istanbul ignore next */
    (cov_170jsuow5d().b[37][1]++, !Array.isArray(user.permissions))) {
      /* istanbul ignore next */
      cov_170jsuow5d().b[36][0]++;
      cov_170jsuow5d().s[90]++;
      console.error(`User ${userId} has no permissions array`);
      /* istanbul ignore next */
      cov_170jsuow5d().s[91]++;
      return {
        isValid: false,
        message: "User has no permissions"
      };
    } else
    /* istanbul ignore next */
    {
      cov_170jsuow5d().b[36][1]++;
    }
    // Check if user has the required permission
    cov_170jsuow5d().s[92]++;
    console.log(`User ${userId} permissions:`, user.permissions);
    const hasPermission =
    /* istanbul ignore next */
    (cov_170jsuow5d().s[93]++, user.permissions.includes(permission));
    /* istanbul ignore next */
    cov_170jsuow5d().s[94]++;
    console.log(`Permission check result for "${permission}": ${hasPermission ?
    /* istanbul ignore next */
    (cov_170jsuow5d().b[38][0]++, "GRANTED") :
    /* istanbul ignore next */
    (cov_170jsuow5d().b[38][1]++, "DENIED")}`);
    /* istanbul ignore next */
    cov_170jsuow5d().s[95]++;
    return {
      isValid: hasPermission,
      message: hasPermission ?
      /* istanbul ignore next */
      (cov_170jsuow5d().b[39][0]++, undefined) :
      /* istanbul ignore next */
      (cov_170jsuow5d().b[39][1]++, `Permission denied: '${permission}' is required`)
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_170jsuow5d().s[96]++;
    console.error(`Error checking permission ${permission}:`, error);
    /* istanbul ignore next */
    cov_170jsuow5d().s[97]++;
    return {
      isValid: false,
      message: `Error checking permission: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_170jsuow5d().b[40][0]++, error.message) :
      /* istanbul ignore next */
      (cov_170jsuow5d().b[40][1]++, String(error))}`
    };
  }
};
/* istanbul ignore next */
cov_170jsuow5d().s[98]++;
const getUserIdFromToken = async req => {
  /* istanbul ignore next */
  cov_170jsuow5d().f[16]++;
  const token =
  /* istanbul ignore next */
  (cov_170jsuow5d().s[99]++, extractToken(req));
  /* istanbul ignore next */
  cov_170jsuow5d().s[100]++;
  if (!token) {
    /* istanbul ignore next */
    cov_170jsuow5d().b[41][0]++;
    cov_170jsuow5d().s[101]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_170jsuow5d().b[41][1]++;
  }
  // Special case for development token
  cov_170jsuow5d().s[102]++;
  if (token === "dev-token") {
    /* istanbul ignore next */
    cov_170jsuow5d().b[42][0]++;
    cov_170jsuow5d().s[103]++;
    return 1; // Development user ID
  } else
  /* istanbul ignore next */
  {
    cov_170jsuow5d().b[42][1]++;
  }
  const payload =
  /* istanbul ignore next */
  (cov_170jsuow5d().s[104]++, await verifyToken(token));
  /* istanbul ignore next */
  cov_170jsuow5d().s[105]++;
  if (
  /* istanbul ignore next */
  (cov_170jsuow5d().b[44][0]++, !payload) ||
  /* istanbul ignore next */
  (cov_170jsuow5d().b[44][1]++, typeof payload !== "object") ||
  /* istanbul ignore next */
  (cov_170jsuow5d().b[44][2]++, !("sub" in payload))) {
    /* istanbul ignore next */
    cov_170jsuow5d().b[43][0]++;
    cov_170jsuow5d().s[106]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_170jsuow5d().b[43][1]++;
  }
  cov_170jsuow5d().s[107]++;
  return Number(payload.sub);
};
/* istanbul ignore next */
cov_170jsuow5d().s[108]++;
const getShopIdFromToken = async req => {
  /* istanbul ignore next */
  cov_170jsuow5d().f[17]++;
  const token =
  /* istanbul ignore next */
  (cov_170jsuow5d().s[109]++, extractToken(req));
  /* istanbul ignore next */
  cov_170jsuow5d().s[110]++;
  if (!token) {
    /* istanbul ignore next */
    cov_170jsuow5d().b[45][0]++;
    cov_170jsuow5d().s[111]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_170jsuow5d().b[45][1]++;
  }
  // Special case for development token - assign to first shop for testing shop staff behavior
  cov_170jsuow5d().s[112]++;
  if (token === "dev-token") {
    /* istanbul ignore next */
    cov_170jsuow5d().b[46][0]++;
    cov_170jsuow5d().s[113]++;
    return "cmbtr9q6l000061romoxi7uvf"; // Assign dev-token to first shop from database
  } else
  /* istanbul ignore next */
  {
    cov_170jsuow5d().b[46][1]++;
  }
  const payload =
  /* istanbul ignore next */
  (cov_170jsuow5d().s[114]++, await verifyToken(token));
  /* istanbul ignore next */
  cov_170jsuow5d().s[115]++;
  if (
  /* istanbul ignore next */
  (cov_170jsuow5d().b[48][0]++, !payload) ||
  /* istanbul ignore next */
  (cov_170jsuow5d().b[48][1]++, typeof payload !== "object")) {
    /* istanbul ignore next */
    cov_170jsuow5d().b[47][0]++;
    cov_170jsuow5d().s[116]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_170jsuow5d().b[47][1]++;
  }
  // Extract shop ID from token as string to match database schema
  cov_170jsuow5d().s[117]++;
  return "shopId" in payload ?
  /* istanbul ignore next */
  (cov_170jsuow5d().b[49][0]++, String(payload.shopId)) :
  /* istanbul ignore next */
  (cov_170jsuow5d().b[49][1]++, null);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,