{"version":3,"sources":["/Users/sachin/Documents/md-sports-/src/services/productService.ts"],"sourcesContent":["import { Product } from '@/lib/models';\n\nexport const productService = {\n    /**\n     * Get all products\n     */\n    getAllProducts: async () => {\n        try {\n            return await Product.findAll({\n                where: { isActive: true }\n            });\n        } catch (error) {\n            console.error('Error fetching products:', error);\n            throw error;\n        }\n    },\n\n    /**\n     * Get a product by ID\n     */\n    getProductById: async (id: number) => {\n        try {\n            return await Product.findOne({\n                where: { id, isActive: true }\n            });\n        } catch (error) {\n            console.error(`Error fetching product with ID ${id}:`, error);\n            throw error;\n        }\n    },\n\n    /**\n     * Create a new product\n     */\n    createProduct: async (productData: any) => {\n        try {\n            return await Product.create(productData);\n        } catch (error) {\n            console.error('Error creating product:', error);\n            throw error;\n        }\n    },\n\n    /**\n     * Update a product\n     */\n    updateProduct: async (id: number, productData: any) => {\n        try {\n            const product = await Product.findByPk(id);\n\n            if (!product) {\n                throw new Error(`Product with ID ${id} not found`);\n            }\n\n            return await product.update(productData);\n        } catch (error) {\n            console.error(`Error updating product with ID ${id}:`, error);\n            throw error;\n        }\n    },\n\n    /**\n     * Delete a product (soft delete)\n     */\n    deleteProduct: async (id: number) => {\n        try {\n            const product = await Product.findByPk(id);\n\n            if (!product) {\n                throw new Error(`Product with ID ${id} not found`);\n            }\n\n            return await product.update({ isActive: false });\n        } catch (error) {\n            console.error(`Error deleting product with ID ${id}:`, error);\n            throw error;\n        }\n    }\n}; "],"names":["productService","getAllProducts","Product","findAll","where","isActive","error","console","getProductById","id","findOne","createProduct","productData","create","updateProduct","product","findByPk","Error","update","deleteProduct"],"mappings":";;;;+BAEaA;;;eAAAA;;;wBAFW;AAEjB,MAAMA,iBAAiB;IAC1B;;KAEC,GACDC,gBAAgB;QACZ,IAAI;YACA,OAAO,MAAMC,eAAO,CAACC,OAAO,CAAC;gBACzBC,OAAO;oBAAEC,UAAU;gBAAK;YAC5B;QACJ,EAAE,OAAOC,OAAO;YACZC,QAAQD,KAAK,CAAC,4BAA4BA;YAC1C,MAAMA;QACV;IACJ;IAEA;;KAEC,GACDE,gBAAgB,OAAOC;QACnB,IAAI;YACA,OAAO,MAAMP,eAAO,CAACQ,OAAO,CAAC;gBACzBN,OAAO;oBAAEK;oBAAIJ,UAAU;gBAAK;YAChC;QACJ,EAAE,OAAOC,OAAO;YACZC,QAAQD,KAAK,CAAC,CAAC,+BAA+B,EAAEG,GAAG,CAAC,CAAC,EAAEH;YACvD,MAAMA;QACV;IACJ;IAEA;;KAEC,GACDK,eAAe,OAAOC;QAClB,IAAI;YACA,OAAO,MAAMV,eAAO,CAACW,MAAM,CAACD;QAChC,EAAE,OAAON,OAAO;YACZC,QAAQD,KAAK,CAAC,2BAA2BA;YACzC,MAAMA;QACV;IACJ;IAEA;;KAEC,GACDQ,eAAe,OAAOL,IAAYG;QAC9B,IAAI;YACA,MAAMG,UAAU,MAAMb,eAAO,CAACc,QAAQ,CAACP;YAEvC,IAAI,CAACM,SAAS;gBACV,MAAM,IAAIE,MAAM,CAAC,gBAAgB,EAAER,GAAG,UAAU,CAAC;YACrD;YAEA,OAAO,MAAMM,QAAQG,MAAM,CAACN;QAChC,EAAE,OAAON,OAAO;YACZC,QAAQD,KAAK,CAAC,CAAC,+BAA+B,EAAEG,GAAG,CAAC,CAAC,EAAEH;YACvD,MAAMA;QACV;IACJ;IAEA;;KAEC,GACDa,eAAe,OAAOV;QAClB,IAAI;YACA,MAAMM,UAAU,MAAMb,eAAO,CAACc,QAAQ,CAACP;YAEvC,IAAI,CAACM,SAAS;gBACV,MAAM,IAAIE,MAAM,CAAC,gBAAgB,EAAER,GAAG,UAAU,CAAC;YACrD;YAEA,OAAO,MAAMM,QAAQG,MAAM,CAAC;gBAAEb,UAAU;YAAM;QAClD,EAAE,OAAOC,OAAO;YACZC,QAAQD,KAAK,CAAC,CAAC,+BAA+B,EAAEG,GAAG,CAAC,CAAC,EAAEH;YACvD,MAAMA;QACV;IACJ;AACJ"}