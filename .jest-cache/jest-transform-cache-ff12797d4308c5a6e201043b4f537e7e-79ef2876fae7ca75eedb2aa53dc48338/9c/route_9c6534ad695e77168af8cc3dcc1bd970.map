{"version":3,"names":["GET","cov_18rbj5g0f7","f","s","fetchCustomersData","prisma","_client","PrismaClient","shopId","console","log","monthlyCustomersStats","$queryRaw","b","$raw","success","data","error","Error","message","String","_shopMiddleware","ShopAccessControl","withShopAccess","request","context","authResult","_auth","validateTokenPermission","isValid","_server","NextResponse","json","status","result","isFiltered","meta","shopFiltered"],"sources":["/Users/sachin/Documents/md-sports-/src/app/api/dashboard/customers/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { PrismaClient } from '@prisma/client';\nimport { ShopAccessControl } from '@/lib/utils/shopMiddleware';\nimport { validateTokenPermission } from '@/lib/auth';\n\nconst prisma = new PrismaClient();\n\nexport async function fetchCustomersData(shopId: number | null) {\n    try {\n        console.log('Fetching customers data for dashboard', { shopId });\n\n        // Get monthly customer stats - how many customers were created each month\n        const monthlyCustomersStats = await prisma.$queryRaw`\n            SELECT \n                DATE_TRUNC('month', \"createdAt\") as month,\n                COUNT(*) as count\n            FROM \"Customer\"\n            ${shopId ? prisma.$raw`WHERE EXISTS (\n                SELECT 1 FROM \"Sale\" \n                WHERE \"Sale\".\"customerId\" = \"Customer\".\"id\" \n                AND \"Sale\".\"shopId\" = ${shopId}\n            )` : prisma.$raw``}\n            GROUP BY month\n            ORDER BY month ASC\n            LIMIT 12\n        `;\n\n        return {\n            success: true,\n            data: monthlyCustomersStats\n        };\n    } catch (error) {\n        console.error('Error fetching customers data for dashboard:', error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : String(error)\n        };\n    }\n}\n\nexport const GET = ShopAccessControl.withShopAccess(async (request: NextRequest, context) => {\n    try {\n        // Validate token and permissions\n        const authResult = await validateTokenPermission(request, 'view_dashboard');\n        if (!authResult.isValid) {\n            return NextResponse.json({ error: authResult.message }, { status: 401 });\n        }\n\n        const result = await fetchCustomersData(context.isFiltered ? context.shopId : null);\n\n        return NextResponse.json({\n            success: result.success,\n            data: result.success ? result.data : null,\n            error: result.success ? null : result.error,\n            meta: {\n                shopFiltered: context.isFiltered,\n                shopId: context.shopId\n            }\n        });\n    } catch (error) {\n        console.error('Error in customers dashboard API:', error);\n        return NextResponse.json({\n            success: false,\n            message: 'Failed to fetch customers dashboard data',\n            error: error instanceof Error ? error.message : String(error)\n        }, { status: 500 });\n    }\n}); "],"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","ignoreList":[]}