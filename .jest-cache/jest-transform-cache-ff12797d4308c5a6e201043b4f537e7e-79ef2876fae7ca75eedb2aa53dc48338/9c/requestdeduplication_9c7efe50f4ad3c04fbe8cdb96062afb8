cc57fe014110a05bc0fcf75a103c63f3
/**
 * Request Deduplication Utility
 * 
 * Prevents duplicate API requests by caching ongoing requests
 * and returning the same promise for identical requests.
 */"use strict";

/* istanbul ignore next */
function cov_1c7kc4zqs9() {
  var path = "/Users/sachin/Documents/md-sports-/src/lib/request-deduplication.ts";
  var hash = "15b3626cc325b3a9e7ea59170922dbc1b7ecf65f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/lib/request-deduplication.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "1": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 14,
          column: 7
        }
      },
      "2": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 14,
          column: 7
        }
      },
      "3": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 41,
          column: 3
        }
      },
      "4": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 36
        }
      },
      "5": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 32
        }
      },
      "6": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 34
        }
      },
      "7": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 33
        }
      },
      "8": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 37
        }
      },
      "9": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 28
        }
      },
      "10": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 37
        }
      },
      "11": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 36
        }
      },
      "12": {
        start: {
          line: 42,
          column: 21
        },
        end: {
          line: 42,
          column: 45
        }
      },
      "13": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 53
        }
      },
      "14": {
        start: {
          line: 45,
          column: 24
        },
        end: {
          line: 45,
          column: 33
        }
      },
      "15": {
        start: {
          line: 46,
          column: 24
        },
        end: {
          line: 46,
          column: 33
        }
      },
      "16": {
        start: {
          line: 48,
          column: 29
        },
        end: {
          line: 57,
          column: 1
        }
      },
      "17": {
        start: {
          line: 61,
          column: 26
        },
        end: {
          line: 61,
          column: 43
        }
      },
      "18": {
        start: {
          line: 62,
          column: 29
        },
        end: {
          line: 62,
          column: 49
        }
      },
      "19": {
        start: {
          line: 64,
          column: 28
        },
        end: {
          line: 64,
          column: 214
        }
      },
      "20": {
        start: {
          line: 64,
          column: 78
        },
        end: {
          line: 64,
          column: 122
        }
      },
      "21": {
        start: {
          line: 64,
          column: 141
        },
        end: {
          line: 64,
          column: 159
        }
      },
      "22": {
        start: {
          line: 64,
          column: 181
        },
        end: {
          line: 64,
          column: 198
        }
      },
      "23": {
        start: {
          line: 65,
          column: 23
        },
        end: {
          line: 65,
          column: 55
        }
      },
      "24": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 83
        }
      },
      "25": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 71,
          column: 26
        }
      },
      "26": {
        start: {
          line: 72,
          column: 24
        },
        end: {
          line: 72,
          column: 26
        }
      },
      "27": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 77,
          column: 5
        }
      },
      "28": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "29": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 34
        }
      },
      "30": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "31": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 36
        }
      },
      "32": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 36
        }
      },
      "33": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 84,
          column: 5
        }
      },
      "34": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 97
        }
      },
      "35": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 89,
          column: 78
        }
      },
      "36": {
        start: {
          line: 92,
          column: 23
        },
        end: {
          line: 92,
          column: 69
        }
      },
      "37": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 26
        }
      },
      "38": {
        start: {
          line: 95,
          column: 28
        },
        end: {
          line: 95,
          column: 59
        }
      },
      "39": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 107,
          column: 5
        }
      },
      "40": {
        start: {
          line: 98,
          column: 25
        },
        end: {
          line: 98,
          column: 56
        }
      },
      "41": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "42": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 29
        }
      },
      "43": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 38
        }
      },
      "44": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "45": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 102
        }
      },
      "46": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 31
        }
      },
      "47": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "48": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 33
        }
      },
      "49": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "50": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "51": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 123
        }
      },
      "52": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 31
        }
      },
      "53": {
        start: {
          line: 120,
          column: 18
        },
        end: {
          line: 120,
          column: 61
        }
      },
      "54": {
        start: {
          line: 121,
          column: 27
        },
        end: {
          line: 125,
          column: 6
        }
      },
      "55": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 43
        }
      },
      "56": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 32
        }
      },
      "57": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 127,
          column: 52
        }
      },
      "58": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 132,
          column: 7
        }
      },
      "59": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 135,
          column: 5
        }
      },
      "60": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 65
        }
      },
      "61": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 136,
          column: 26
        }
      },
      "62": {
        start: {
          line: 139,
          column: 19
        },
        end: {
          line: 139,
          column: 42
        }
      },
      "63": {
        start: {
          line: 140,
          column: 20
        },
        end: {
          line: 140,
          column: 41
        }
      },
      "64": {
        start: {
          line: 141,
          column: 17
        },
        end: {
          line: 141,
          column: 29
        }
      },
      "65": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 142,
          column: 83
        }
      },
      "66": {
        start: {
          line: 142,
          column: 34
        },
        end: {
          line: 142,
          column: 53
        }
      },
      "67": {
        start: {
          line: 145,
          column: 21
        },
        end: {
          line: 145,
          column: 58
        }
      },
      "68": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 148,
          column: 5
        }
      },
      "69": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 75
        }
      },
      "70": {
        start: {
          line: 149,
          column: 4
        },
        end: {
          line: 149,
          column: 27
        }
      },
      "71": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 152,
          column: 28
        }
      },
      "72": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 153,
          column: 28
        }
      },
      "73": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 156,
          column: 5
        }
      },
      "74": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 78
        }
      },
      "75": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 159,
          column: 26
        }
      },
      "76": {
        start: {
          line: 160,
          column: 24
        },
        end: {
          line: 160,
          column: 25
        }
      },
      "77": {
        start: {
          line: 161,
          column: 26
        },
        end: {
          line: 161,
          column: 34
        }
      },
      "78": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 167,
          column: 5
        }
      },
      "79": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 40
        }
      },
      "80": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "81": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 49
        }
      },
      "82": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 173,
          column: 6
        }
      },
      "83": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 176,
          column: 29
        }
      },
      "84": {
        start: {
          line: 179,
          column: 0
        },
        end: {
          line: 179,
          column: 74
        }
      },
      "85": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 186,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 16
          }
        },
        loc: {
          start: {
            line: 10,
            column: 30
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 26
          },
          end: {
            line: 17,
            column: 27
          }
        },
        loc: {
          start: {
            line: 17,
            column: 37
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 22
          },
          end: {
            line: 20,
            column: 23
          }
        },
        loc: {
          start: {
            line: 20,
            column: 33
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 24
          },
          end: {
            line: 23,
            column: 25
          }
        },
        loc: {
          start: {
            line: 23,
            column: 35
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 23
          },
          end: {
            line: 26,
            column: 24
          }
        },
        loc: {
          start: {
            line: 26,
            column: 34
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 29,
            column: 27
          },
          end: {
            line: 29,
            column: 28
          }
        },
        loc: {
          start: {
            line: 29,
            column: 38
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 32,
            column: 18
          },
          end: {
            line: 32,
            column: 19
          }
        },
        loc: {
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 35,
            column: 27
          },
          end: {
            line: 35,
            column: 28
          }
        },
        loc: {
          start: {
            line: 35,
            column: 38
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 35
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 38,
            column: 26
          },
          end: {
            line: 38,
            column: 27
          }
        },
        loc: {
          start: {
            line: 38,
            column: 37
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 38
      },
      "9": {
        name: "generateRequestKey",
        decl: {
          start: {
            line: 60,
            column: 13
          },
          end: {
            line: 60,
            column: 31
          }
        },
        loc: {
          start: {
            line: 60,
            column: 68
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 60
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 64,
            column: 69
          },
          end: {
            line: 64,
            column: 70
          }
        },
        loc: {
          start: {
            line: 64,
            column: 78
          },
          end: {
            line: 64,
            column: 122
          }
        },
        line: 64
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 64,
            column: 129
          },
          end: {
            line: 64,
            column: 130
          }
        },
        loc: {
          start: {
            line: 64,
            column: 141
          },
          end: {
            line: 64,
            column: 159
          }
        },
        line: 64
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 64,
            column: 165
          },
          end: {
            line: 64,
            column: 166
          }
        },
        loc: {
          start: {
            line: 64,
            column: 181
          },
          end: {
            line: 64,
            column: 198
          }
        },
        line: 64
      },
      "13": {
        name: "cleanupExpiredRequests",
        decl: {
          start: {
            line: 70,
            column: 13
          },
          end: {
            line: 70,
            column: 35
          }
        },
        loc: {
          start: {
            line: 70,
            column: 38
          },
          end: {
            line: 85,
            column: 1
          }
        },
        line: 70
      },
      "14": {
        name: "isAtConcurrentLimit",
        decl: {
          start: {
            line: 88,
            column: 13
          },
          end: {
            line: 88,
            column: 32
          }
        },
        loc: {
          start: {
            line: 88,
            column: 35
          },
          end: {
            line: 90,
            column: 1
          }
        },
        line: 88
      },
      "15": {
        name: "deduplicateRequest",
        decl: {
          start: {
            line: 91,
            column: 15
          },
          end: {
            line: 91,
            column: 33
          }
        },
        loc: {
          start: {
            line: 91,
            column: 81
          },
          end: {
            line: 137,
            column: 1
          }
        },
        line: 91
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 121,
            column: 47
          },
          end: {
            line: 121,
            column: 48
          }
        },
        loc: {
          start: {
            line: 121,
            column: 51
          },
          end: {
            line: 125,
            column: 5
          }
        },
        line: 121
      },
      "17": {
        name: "deduplicatedFetch",
        decl: {
          start: {
            line: 138,
            column: 15
          },
          end: {
            line: 138,
            column: 32
          }
        },
        loc: {
          start: {
            line: 138,
            column: 52
          },
          end: {
            line: 143,
            column: 1
          }
        },
        line: 138
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 142,
            column: 30
          },
          end: {
            line: 142,
            column: 31
          }
        },
        loc: {
          start: {
            line: 142,
            column: 34
          },
          end: {
            line: 142,
            column: 53
          }
        },
        line: 142
      },
      "19": {
        name: "deduplicatedFetchJson",
        decl: {
          start: {
            line: 144,
            column: 15
          },
          end: {
            line: 144,
            column: 36
          }
        },
        loc: {
          start: {
            line: 144,
            column: 56
          },
          end: {
            line: 150,
            column: 1
          }
        },
        line: 144
      },
      "20": {
        name: "clearAllRequests",
        decl: {
          start: {
            line: 151,
            column: 9
          },
          end: {
            line: 151,
            column: 25
          }
        },
        loc: {
          start: {
            line: 151,
            column: 28
          },
          end: {
            line: 157,
            column: 1
          }
        },
        line: 151
      },
      "21": {
        name: "getDeduplicationStats",
        decl: {
          start: {
            line: 158,
            column: 9
          },
          end: {
            line: 158,
            column: 30
          }
        },
        loc: {
          start: {
            line: 158,
            column: 33
          },
          end: {
            line: 174,
            column: 1
          }
        },
        line: 158
      },
      "22": {
        name: "forceCleanup",
        decl: {
          start: {
            line: 175,
            column: 9
          },
          end: {
            line: 175,
            column: 21
          }
        },
        loc: {
          start: {
            line: 175,
            column: 24
          },
          end: {
            line: 177,
            column: 1
          }
        },
        line: 175
      },
      "23": {
        name: "useDeduplicatedFetch",
        decl: {
          start: {
            line: 180,
            column: 9
          },
          end: {
            line: 180,
            column: 29
          }
        },
        loc: {
          start: {
            line: 180,
            column: 32
          },
          end: {
            line: 187,
            column: 1
          }
        },
        line: 180
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 60,
            column: 37
          },
          end: {
            line: 60,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 60,
            column: 46
          },
          end: {
            line: 60,
            column: 51
          }
        }],
        line: 60
      },
      "1": {
        loc: {
          start: {
            line: 64,
            column: 28
          },
          end: {
            line: 64,
            column: 214
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 64,
            column: 38
          },
          end: {
            line: 64,
            column: 209
          }
        }, {
          start: {
            line: 64,
            column: 212
          },
          end: {
            line: 64,
            column: 214
          }
        }],
        line: 64
      },
      "2": {
        loc: {
          start: {
            line: 65,
            column: 23
          },
          end: {
            line: 65,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 65,
            column: 30
          },
          end: {
            line: 65,
            column: 50
          }
        }, {
          start: {
            line: 65,
            column: 53
          },
          end: {
            line: 65,
            column: 55
          }
        }],
        line: 65
      },
      "3": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "4": {
        loc: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "5": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 82,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 82,
            column: 42
          }
        }, {
          start: {
            line: 82,
            column: 46
          },
          end: {
            line: 82,
            column: 68
          }
        }],
        line: 82
      },
      "6": {
        loc: {
          start: {
            line: 91,
            column: 50
          },
          end: {
            line: 91,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 91,
            column: 59
          },
          end: {
            line: 91,
            column: 64
          }
        }],
        line: 91
      },
      "7": {
        loc: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "8": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "9": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "10": {
        loc: {
          start: {
            line: 104,
            column: 71
          },
          end: {
            line: 104,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 71
          },
          end: {
            line: 104,
            column: 86
          }
        }, {
          start: {
            line: 104,
            column: 90
          },
          end: {
            line: 104,
            column: 91
          }
        }],
        line: 104
      },
      "11": {
        loc: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "12": {
        loc: {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "13": {
        loc: {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "14": {
        loc: {
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "15": {
        loc: {
          start: {
            line: 138,
            column: 38
          },
          end: {
            line: 138,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 138,
            column: 48
          },
          end: {
            line: 138,
            column: 50
          }
        }],
        line: 138
      },
      "16": {
        loc: {
          start: {
            line: 139,
            column: 19
          },
          end: {
            line: 139,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 19
          },
          end: {
            line: 139,
            column: 33
          }
        }, {
          start: {
            line: 139,
            column: 37
          },
          end: {
            line: 139,
            column: 42
          }
        }],
        line: 139
      },
      "17": {
        loc: {
          start: {
            line: 140,
            column: 20
          },
          end: {
            line: 140,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 20
          },
          end: {
            line: 140,
            column: 35
          }
        }, {
          start: {
            line: 140,
            column: 39
          },
          end: {
            line: 140,
            column: 41
          }
        }],
        line: 140
      },
      "18": {
        loc: {
          start: {
            line: 144,
            column: 42
          },
          end: {
            line: 144,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 144,
            column: 52
          },
          end: {
            line: 144,
            column: 54
          }
        }],
        line: 144
      },
      "19": {
        loc: {
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "20": {
        loc: {
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 156,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 156,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "21": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "22": {
        loc: {
          start: {
            line: 171,
            column: 29
          },
          end: {
            line: 171,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 56
          },
          end: {
            line: 171,
            column: 92
          }
        }, {
          start: {
            line: 171,
            column: 95
          },
          end: {
            line: 171,
            column: 96
          }
        }],
        line: 171
      },
      "23": {
        loc: {
          start: {
            line: 172,
            column: 23
          },
          end: {
            line: 172,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 172,
            column: 54
          },
          end: {
            line: 172,
            column: 58
          }
        }, {
          start: {
            line: 172,
            column: 61
          },
          end: {
            line: 172,
            column: 82
          }
        }],
        line: 172
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/lib/request-deduplication.ts"],
      sourcesContent: ["/**\n * Request Deduplication Utility\n * \n * Prevents duplicate API requests by caching ongoing requests\n * and returning the same promise for identical requests.\n */\n\nimport { PerformanceMonitor } from './performance';\n\nconst monitor = new PerformanceMonitor();\n\n// Store for ongoing requests\nconst ongoingRequests = new Map<string, Promise<any>>();\n\n// Store for request metadata\ninterface RequestMetadata {\n    timestamp: number;\n    count: number;\n    lastAccess: number;\n}\n\nconst requestMetadata = new Map<string, RequestMetadata>();\n\n// Configuration\nconst DEDUPLICATION_CONFIG = {\n    // How long to keep a request in the deduplication cache (ms)\n    maxAge: 30 * 1000, // 30 seconds\n\n    // Maximum number of concurrent requests to track\n    maxConcurrentRequests: 100,\n\n    // Cleanup interval for expired requests\n    cleanupInterval: 60 * 1000, // 1 minute\n\n    // Enable logging for debugging\n    enableLogging: process.env.NODE_ENV === 'development'\n};\n\n/**\n * Generate a unique key for a request\n */\nfunction generateRequestKey(\n    url: string,\n    method: string = 'GET',\n    body?: any,\n    headers?: Record<string, string>\n): string {\n    const normalizedUrl = url.toLowerCase();\n    const normalizedMethod = method.toUpperCase();\n\n    // Include relevant headers in the key (excluding auth tokens for security)\n    const relevantHeaders = headers ? Object.entries(headers)\n        .filter(([key]) => !key.toLowerCase().includes('authorization'))\n        .sort(([a], [b]) => a.localeCompare(b))\n        .map(([key, value]) => `${key}:${value}`)\n        .join('|') : '';\n\n    const bodyString = body ? JSON.stringify(body) : '';\n\n    return `${normalizedMethod}:${normalizedUrl}:${bodyString}:${relevantHeaders}`;\n}\n\n/**\n * Clean up expired requests\n */\nfunction cleanupExpiredRequests(): void {\n    const now = Date.now();\n    const expiredKeys: string[] = [];\n\n    for (const [key, metadata] of requestMetadata.entries()) {\n        if (now - metadata.lastAccess > DEDUPLICATION_CONFIG.maxAge) {\n            expiredKeys.push(key);\n        }\n    }\n\n    for (const key of expiredKeys) {\n        ongoingRequests.delete(key);\n        requestMetadata.delete(key);\n    }\n\n    if (DEDUPLICATION_CONFIG.enableLogging && expiredKeys.length > 0) {\n        console.log(`\uD83E\uDDF9 Cleaned up ${expiredKeys.length} expired request deduplication entries`);\n    }\n}\n\n/**\n * Check if we're at the concurrent request limit\n */\nfunction isAtConcurrentLimit(): boolean {\n    return ongoingRequests.size >= DEDUPLICATION_CONFIG.maxConcurrentRequests;\n}\n\n/**\n * Deduplicate a request\n */\nexport async function deduplicateRequest<T>(\n    requestFn: () => Promise<T>,\n    url: string,\n    method: string = 'GET',\n    body?: any,\n    headers?: Record<string, string>\n): Promise<T> {\n    const requestKey = generateRequestKey(url, method, body, headers);\n    const now = Date.now();\n\n    // Check if we already have this request ongoing\n    const existingRequest = ongoingRequests.get(requestKey);\n    if (existingRequest) {\n        // Update metadata\n        const metadata = requestMetadata.get(requestKey);\n        if (metadata) {\n            metadata.count++;\n            metadata.lastAccess = now;\n        }\n\n        if (DEDUPLICATION_CONFIG.enableLogging) {\n            console.log(`\uD83D\uDD04 Deduplicating request: ${method} ${url} (${metadata?.count || 1} total)`);\n        }\n\n        return existingRequest;\n    }\n\n    // Clean up if we're at the limit\n    if (isAtConcurrentLimit()) {\n        cleanupExpiredRequests();\n\n        // If still at limit, proceed without deduplication\n        if (isAtConcurrentLimit()) {\n            if (DEDUPLICATION_CONFIG.enableLogging) {\n                console.warn(`\u26A0\uFE0F Request deduplication limit reached, proceeding without deduplication: ${method} ${url}`);\n            }\n            return requestFn();\n        }\n    }\n\n    // Create new request\n    const timer = monitor.startTimer('request-deduplication');\n\n    const requestPromise = requestFn()\n        .finally(() => {\n            // Clean up after request completes\n            ongoingRequests.delete(requestKey);\n            monitor.endTimer(timer);\n        });\n\n    // Store the request\n    ongoingRequests.set(requestKey, requestPromise);\n    requestMetadata.set(requestKey, {\n        timestamp: now,\n        count: 1,\n        lastAccess: now\n    });\n\n    if (DEDUPLICATION_CONFIG.enableLogging) {\n        console.log(`\uD83D\uDE80 Starting new request: ${method} ${url}`);\n    }\n\n    return requestPromise;\n}\n\n/**\n * Deduplicate a fetch request\n */\nexport async function deduplicatedFetch(\n    url: string,\n    options: RequestInit = {}\n): Promise<Response> {\n    const method = options.method || 'GET';\n    const headers = options.headers as Record<string, string> || {};\n    const body = options.body;\n\n    return deduplicateRequest(\n        () => fetch(url, options),\n        url,\n        method,\n        body,\n        headers\n    );\n}\n\n/**\n * Deduplicate a JSON fetch request\n */\nexport async function deduplicatedFetchJson<T>(\n    url: string,\n    options: RequestInit = {}\n): Promise<T> {\n    const response = await deduplicatedFetch(url, options);\n\n    if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n}\n\n/**\n * Clear all ongoing requests (useful for testing or manual cleanup)\n */\nexport function clearAllRequests(): void {\n    ongoingRequests.clear();\n    requestMetadata.clear();\n\n    if (DEDUPLICATION_CONFIG.enableLogging) {\n        console.log('\uD83E\uDDF9 Cleared all request deduplication entries');\n    }\n}\n\n/**\n * Get statistics about request deduplication\n */\nexport function getDeduplicationStats(): {\n    ongoingRequests: number;\n    totalRequests: number;\n    averageRequestCount: number;\n    oldestRequest: number | null;\n} {\n    const now = Date.now();\n    let totalRequests = 0;\n    let oldestTimestamp = Infinity;\n\n    for (const metadata of requestMetadata.values()) {\n        totalRequests += metadata.count;\n        if (metadata.timestamp < oldestTimestamp) {\n            oldestTimestamp = metadata.timestamp;\n        }\n    }\n\n    return {\n        ongoingRequests: ongoingRequests.size,\n        totalRequests,\n        averageRequestCount: requestMetadata.size > 0 ? totalRequests / requestMetadata.size : 0,\n        oldestRequest: oldestTimestamp === Infinity ? null : now - oldestTimestamp\n    };\n}\n\n/**\n * Force cleanup of expired requests\n */\nexport function forceCleanup(): void {\n    cleanupExpiredRequests();\n}\n\n// Start automatic cleanup\nsetInterval(cleanupExpiredRequests, DEDUPLICATION_CONFIG.cleanupInterval);\n\n// Export configuration for testing\nexport { DEDUPLICATION_CONFIG };\n\n/**\n * React hook for deduplicating API calls\n */\nexport function useDeduplicatedFetch() {\n    return {\n        fetch: deduplicatedFetch,\n        fetchJson: deduplicatedFetchJson,\n        getStats: getDeduplicationStats,\n        clearAll: clearAllRequests\n    };\n}"],
      names: ["DEDUPLICATION_CONFIG", "clearAllRequests", "deduplicateRequest", "deduplicatedFetch", "deduplicatedFetchJson", "forceCleanup", "getDeduplicationStats", "useDeduplicatedFetch", "monitor", "PerformanceMonitor", "ongoingRequests", "Map", "requestMetadata", "maxAge", "maxConcurrentRequests", "cleanupInterval", "enableLogging", "process", "env", "NODE_ENV", "generateRequestKey", "url", "method", "body", "headers", "normalizedUrl", "toLowerCase", "normalizedMethod", "toUpperCase", "relevantHeaders", "Object", "entries", "filter", "key", "includes", "sort", "a", "b", "localeCompare", "map", "value", "join", "bodyString", "JSON", "stringify", "cleanupExpiredRequests", "now", "Date", "expiredKeys", "metadata", "lastAccess", "push", "delete", "length", "console", "log", "isAtConcurrentLimit", "size", "requestFn", "requestKey", "existingRequest", "get", "count", "warn", "timer", "startTimer", "requestPromise", "finally", "endTimer", "set", "timestamp", "options", "fetch", "response", "ok", "Error", "status", "statusText", "json", "clear", "totalRequests", "oldestTimestamp", "Infinity", "values", "averageRequestCount", "oldestRequest", "setInterval", "fetchJson", "getStats", "clearAll"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "15b3626cc325b3a9e7ea59170922dbc1b7ecf65f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1c7kc4zqs9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1c7kc4zqs9();
cov_1c7kc4zqs9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1c7kc4zqs9().f[0]++;
  cov_1c7kc4zqs9().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1c7kc4zqs9().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1c7kc4zqs9().s[3]++;
_export(exports, {
  DEDUPLICATION_CONFIG: function () {
    /* istanbul ignore next */
    cov_1c7kc4zqs9().f[1]++;
    cov_1c7kc4zqs9().s[4]++;
    return DEDUPLICATION_CONFIG;
  },
  clearAllRequests: function () {
    /* istanbul ignore next */
    cov_1c7kc4zqs9().f[2]++;
    cov_1c7kc4zqs9().s[5]++;
    return clearAllRequests;
  },
  deduplicateRequest: function () {
    /* istanbul ignore next */
    cov_1c7kc4zqs9().f[3]++;
    cov_1c7kc4zqs9().s[6]++;
    return deduplicateRequest;
  },
  deduplicatedFetch: function () {
    /* istanbul ignore next */
    cov_1c7kc4zqs9().f[4]++;
    cov_1c7kc4zqs9().s[7]++;
    return deduplicatedFetch;
  },
  deduplicatedFetchJson: function () {
    /* istanbul ignore next */
    cov_1c7kc4zqs9().f[5]++;
    cov_1c7kc4zqs9().s[8]++;
    return deduplicatedFetchJson;
  },
  forceCleanup: function () {
    /* istanbul ignore next */
    cov_1c7kc4zqs9().f[6]++;
    cov_1c7kc4zqs9().s[9]++;
    return forceCleanup;
  },
  getDeduplicationStats: function () {
    /* istanbul ignore next */
    cov_1c7kc4zqs9().f[7]++;
    cov_1c7kc4zqs9().s[10]++;
    return getDeduplicationStats;
  },
  useDeduplicatedFetch: function () {
    /* istanbul ignore next */
    cov_1c7kc4zqs9().f[8]++;
    cov_1c7kc4zqs9().s[11]++;
    return useDeduplicatedFetch;
  }
});
const _performance =
/* istanbul ignore next */
(cov_1c7kc4zqs9().s[12]++, require("./performance"));
const monitor =
/* istanbul ignore next */
(cov_1c7kc4zqs9().s[13]++, new _performance.PerformanceMonitor());
// Store for ongoing requests
const ongoingRequests =
/* istanbul ignore next */
(cov_1c7kc4zqs9().s[14]++, new Map());
const requestMetadata =
/* istanbul ignore next */
(cov_1c7kc4zqs9().s[15]++, new Map());
// Configuration
const DEDUPLICATION_CONFIG =
/* istanbul ignore next */
(cov_1c7kc4zqs9().s[16]++, {
  // How long to keep a request in the deduplication cache (ms)
  maxAge: 30 * 1000,
  // Maximum number of concurrent requests to track
  maxConcurrentRequests: 100,
  // Cleanup interval for expired requests
  cleanupInterval: 60 * 1000,
  // Enable logging for debugging
  enableLogging: process.env.NODE_ENV === "development"
});
/**
 * Generate a unique key for a request
 */
function generateRequestKey(url, method =
/* istanbul ignore next */
(cov_1c7kc4zqs9().b[0][0]++, "GET"), body, headers) {
  /* istanbul ignore next */
  cov_1c7kc4zqs9().f[9]++;
  const normalizedUrl =
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().s[17]++, url.toLowerCase());
  const normalizedMethod =
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().s[18]++, method.toUpperCase());
  // Include relevant headers in the key (excluding auth tokens for security)
  const relevantHeaders =
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().s[19]++, headers ?
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().b[1][0]++, Object.entries(headers).filter(([key]) => {
    /* istanbul ignore next */
    cov_1c7kc4zqs9().f[10]++;
    cov_1c7kc4zqs9().s[20]++;
    return !key.toLowerCase().includes("authorization");
  }).sort(([a], [b]) => {
    /* istanbul ignore next */
    cov_1c7kc4zqs9().f[11]++;
    cov_1c7kc4zqs9().s[21]++;
    return a.localeCompare(b);
  }).map(([key, value]) => {
    /* istanbul ignore next */
    cov_1c7kc4zqs9().f[12]++;
    cov_1c7kc4zqs9().s[22]++;
    return `${key}:${value}`;
  }).join("|")) :
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().b[1][1]++, ""));
  const bodyString =
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().s[23]++, body ?
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().b[2][0]++, JSON.stringify(body)) :
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().b[2][1]++, ""));
  /* istanbul ignore next */
  cov_1c7kc4zqs9().s[24]++;
  return `${normalizedMethod}:${normalizedUrl}:${bodyString}:${relevantHeaders}`;
}
/**
 * Clean up expired requests
 */
function cleanupExpiredRequests() {
  /* istanbul ignore next */
  cov_1c7kc4zqs9().f[13]++;
  const now =
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().s[25]++, Date.now());
  const expiredKeys =
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().s[26]++, []);
  /* istanbul ignore next */
  cov_1c7kc4zqs9().s[27]++;
  for (const [key, metadata] of requestMetadata.entries()) {
    /* istanbul ignore next */
    cov_1c7kc4zqs9().s[28]++;
    if (now - metadata.lastAccess > DEDUPLICATION_CONFIG.maxAge) {
      /* istanbul ignore next */
      cov_1c7kc4zqs9().b[3][0]++;
      cov_1c7kc4zqs9().s[29]++;
      expiredKeys.push(key);
    } else
    /* istanbul ignore next */
    {
      cov_1c7kc4zqs9().b[3][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1c7kc4zqs9().s[30]++;
  for (const key of expiredKeys) {
    /* istanbul ignore next */
    cov_1c7kc4zqs9().s[31]++;
    ongoingRequests.delete(key);
    /* istanbul ignore next */
    cov_1c7kc4zqs9().s[32]++;
    requestMetadata.delete(key);
  }
  /* istanbul ignore next */
  cov_1c7kc4zqs9().s[33]++;
  if (
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().b[5][0]++, DEDUPLICATION_CONFIG.enableLogging) &&
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().b[5][1]++, expiredKeys.length > 0)) {
    /* istanbul ignore next */
    cov_1c7kc4zqs9().b[4][0]++;
    cov_1c7kc4zqs9().s[34]++;
    console.log(`🧹 Cleaned up ${expiredKeys.length} expired request deduplication entries`);
  } else
  /* istanbul ignore next */
  {
    cov_1c7kc4zqs9().b[4][1]++;
  }
}
/**
 * Check if we're at the concurrent request limit
 */
function isAtConcurrentLimit() {
  /* istanbul ignore next */
  cov_1c7kc4zqs9().f[14]++;
  cov_1c7kc4zqs9().s[35]++;
  return ongoingRequests.size >= DEDUPLICATION_CONFIG.maxConcurrentRequests;
}
async function deduplicateRequest(requestFn, url, method =
/* istanbul ignore next */
(cov_1c7kc4zqs9().b[6][0]++, "GET"), body, headers) {
  /* istanbul ignore next */
  cov_1c7kc4zqs9().f[15]++;
  const requestKey =
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().s[36]++, generateRequestKey(url, method, body, headers));
  const now =
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().s[37]++, Date.now());
  // Check if we already have this request ongoing
  const existingRequest =
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().s[38]++, ongoingRequests.get(requestKey));
  /* istanbul ignore next */
  cov_1c7kc4zqs9().s[39]++;
  if (existingRequest) {
    /* istanbul ignore next */
    cov_1c7kc4zqs9().b[7][0]++;
    // Update metadata
    const metadata =
    /* istanbul ignore next */
    (cov_1c7kc4zqs9().s[40]++, requestMetadata.get(requestKey));
    /* istanbul ignore next */
    cov_1c7kc4zqs9().s[41]++;
    if (metadata) {
      /* istanbul ignore next */
      cov_1c7kc4zqs9().b[8][0]++;
      cov_1c7kc4zqs9().s[42]++;
      metadata.count++;
      /* istanbul ignore next */
      cov_1c7kc4zqs9().s[43]++;
      metadata.lastAccess = now;
    } else
    /* istanbul ignore next */
    {
      cov_1c7kc4zqs9().b[8][1]++;
    }
    cov_1c7kc4zqs9().s[44]++;
    if (DEDUPLICATION_CONFIG.enableLogging) {
      /* istanbul ignore next */
      cov_1c7kc4zqs9().b[9][0]++;
      cov_1c7kc4zqs9().s[45]++;
      console.log(`🔄 Deduplicating request: ${method} ${url} (${
      /* istanbul ignore next */
      (cov_1c7kc4zqs9().b[10][0]++, metadata?.count) ||
      /* istanbul ignore next */
      (cov_1c7kc4zqs9().b[10][1]++, 1)} total)`);
    } else
    /* istanbul ignore next */
    {
      cov_1c7kc4zqs9().b[9][1]++;
    }
    cov_1c7kc4zqs9().s[46]++;
    return existingRequest;
  } else
  /* istanbul ignore next */
  {
    cov_1c7kc4zqs9().b[7][1]++;
  }
  // Clean up if we're at the limit
  cov_1c7kc4zqs9().s[47]++;
  if (isAtConcurrentLimit()) {
    /* istanbul ignore next */
    cov_1c7kc4zqs9().b[11][0]++;
    cov_1c7kc4zqs9().s[48]++;
    cleanupExpiredRequests();
    // If still at limit, proceed without deduplication
    /* istanbul ignore next */
    cov_1c7kc4zqs9().s[49]++;
    if (isAtConcurrentLimit()) {
      /* istanbul ignore next */
      cov_1c7kc4zqs9().b[12][0]++;
      cov_1c7kc4zqs9().s[50]++;
      if (DEDUPLICATION_CONFIG.enableLogging) {
        /* istanbul ignore next */
        cov_1c7kc4zqs9().b[13][0]++;
        cov_1c7kc4zqs9().s[51]++;
        console.warn(`⚠️ Request deduplication limit reached, proceeding without deduplication: ${method} ${url}`);
      } else
      /* istanbul ignore next */
      {
        cov_1c7kc4zqs9().b[13][1]++;
      }
      cov_1c7kc4zqs9().s[52]++;
      return requestFn();
    } else
    /* istanbul ignore next */
    {
      cov_1c7kc4zqs9().b[12][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1c7kc4zqs9().b[11][1]++;
  }
  // Create new request
  const timer =
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().s[53]++, monitor.startTimer("request-deduplication"));
  const requestPromise =
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().s[54]++, requestFn().finally(() => {
    /* istanbul ignore next */
    cov_1c7kc4zqs9().f[16]++;
    cov_1c7kc4zqs9().s[55]++;
    // Clean up after request completes
    ongoingRequests.delete(requestKey);
    /* istanbul ignore next */
    cov_1c7kc4zqs9().s[56]++;
    monitor.endTimer(timer);
  }));
  // Store the request
  /* istanbul ignore next */
  cov_1c7kc4zqs9().s[57]++;
  ongoingRequests.set(requestKey, requestPromise);
  /* istanbul ignore next */
  cov_1c7kc4zqs9().s[58]++;
  requestMetadata.set(requestKey, {
    timestamp: now,
    count: 1,
    lastAccess: now
  });
  /* istanbul ignore next */
  cov_1c7kc4zqs9().s[59]++;
  if (DEDUPLICATION_CONFIG.enableLogging) {
    /* istanbul ignore next */
    cov_1c7kc4zqs9().b[14][0]++;
    cov_1c7kc4zqs9().s[60]++;
    console.log(`🚀 Starting new request: ${method} ${url}`);
  } else
  /* istanbul ignore next */
  {
    cov_1c7kc4zqs9().b[14][1]++;
  }
  cov_1c7kc4zqs9().s[61]++;
  return requestPromise;
}
async function deduplicatedFetch(url, options =
/* istanbul ignore next */
(cov_1c7kc4zqs9().b[15][0]++, {})) {
  /* istanbul ignore next */
  cov_1c7kc4zqs9().f[17]++;
  const method =
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().s[62]++,
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().b[16][0]++, options.method) ||
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().b[16][1]++, "GET"));
  const headers =
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().s[63]++,
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().b[17][0]++, options.headers) ||
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().b[17][1]++, {}));
  const body =
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().s[64]++, options.body);
  /* istanbul ignore next */
  cov_1c7kc4zqs9().s[65]++;
  return deduplicateRequest(() => {
    /* istanbul ignore next */
    cov_1c7kc4zqs9().f[18]++;
    cov_1c7kc4zqs9().s[66]++;
    return fetch(url, options);
  }, url, method, body, headers);
}
async function deduplicatedFetchJson(url, options =
/* istanbul ignore next */
(cov_1c7kc4zqs9().b[18][0]++, {})) {
  /* istanbul ignore next */
  cov_1c7kc4zqs9().f[19]++;
  const response =
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().s[67]++, await deduplicatedFetch(url, options));
  /* istanbul ignore next */
  cov_1c7kc4zqs9().s[68]++;
  if (!response.ok) {
    /* istanbul ignore next */
    cov_1c7kc4zqs9().b[19][0]++;
    cov_1c7kc4zqs9().s[69]++;
    throw new Error(`HTTP ${response.status}: ${response.statusText}`);
  } else
  /* istanbul ignore next */
  {
    cov_1c7kc4zqs9().b[19][1]++;
  }
  cov_1c7kc4zqs9().s[70]++;
  return response.json();
}
function clearAllRequests() {
  /* istanbul ignore next */
  cov_1c7kc4zqs9().f[20]++;
  cov_1c7kc4zqs9().s[71]++;
  ongoingRequests.clear();
  /* istanbul ignore next */
  cov_1c7kc4zqs9().s[72]++;
  requestMetadata.clear();
  /* istanbul ignore next */
  cov_1c7kc4zqs9().s[73]++;
  if (DEDUPLICATION_CONFIG.enableLogging) {
    /* istanbul ignore next */
    cov_1c7kc4zqs9().b[20][0]++;
    cov_1c7kc4zqs9().s[74]++;
    console.log("\uD83E\uDDF9 Cleared all request deduplication entries");
  } else
  /* istanbul ignore next */
  {
    cov_1c7kc4zqs9().b[20][1]++;
  }
}
function getDeduplicationStats() {
  /* istanbul ignore next */
  cov_1c7kc4zqs9().f[21]++;
  const now =
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().s[75]++, Date.now());
  let totalRequests =
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().s[76]++, 0);
  let oldestTimestamp =
  /* istanbul ignore next */
  (cov_1c7kc4zqs9().s[77]++, Infinity);
  /* istanbul ignore next */
  cov_1c7kc4zqs9().s[78]++;
  for (const metadata of requestMetadata.values()) {
    /* istanbul ignore next */
    cov_1c7kc4zqs9().s[79]++;
    totalRequests += metadata.count;
    /* istanbul ignore next */
    cov_1c7kc4zqs9().s[80]++;
    if (metadata.timestamp < oldestTimestamp) {
      /* istanbul ignore next */
      cov_1c7kc4zqs9().b[21][0]++;
      cov_1c7kc4zqs9().s[81]++;
      oldestTimestamp = metadata.timestamp;
    } else
    /* istanbul ignore next */
    {
      cov_1c7kc4zqs9().b[21][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1c7kc4zqs9().s[82]++;
  return {
    ongoingRequests: ongoingRequests.size,
    totalRequests,
    averageRequestCount: requestMetadata.size > 0 ?
    /* istanbul ignore next */
    (cov_1c7kc4zqs9().b[22][0]++, totalRequests / requestMetadata.size) :
    /* istanbul ignore next */
    (cov_1c7kc4zqs9().b[22][1]++, 0),
    oldestRequest: oldestTimestamp === Infinity ?
    /* istanbul ignore next */
    (cov_1c7kc4zqs9().b[23][0]++, null) :
    /* istanbul ignore next */
    (cov_1c7kc4zqs9().b[23][1]++, now - oldestTimestamp)
  };
}
function forceCleanup() {
  /* istanbul ignore next */
  cov_1c7kc4zqs9().f[22]++;
  cov_1c7kc4zqs9().s[83]++;
  cleanupExpiredRequests();
}
// Start automatic cleanup
/* istanbul ignore next */
cov_1c7kc4zqs9().s[84]++;
setInterval(cleanupExpiredRequests, DEDUPLICATION_CONFIG.cleanupInterval);
function useDeduplicatedFetch() {
  /* istanbul ignore next */
  cov_1c7kc4zqs9().f[23]++;
  cov_1c7kc4zqs9().s[85]++;
  return {
    fetch: deduplicatedFetch,
    fetchJson: deduplicatedFetchJson,
    getStats: getDeduplicationStats,
    clearAll: clearAllRequests
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,