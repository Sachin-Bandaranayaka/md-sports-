{"version":3,"names":["cov_1c7kc4zqs9","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","DEDUPLICATION_CONFIG","clearAllRequests","deduplicateRequest","deduplicatedFetch","deduplicatedFetchJson","forceCleanup","getDeduplicationStats","useDeduplicatedFetch","monitor","_performance","PerformanceMonitor","ongoingRequests","Map","requestMetadata","maxAge","maxConcurrentRequests","cleanupInterval","enableLogging","process","env","NODE_ENV","generateRequestKey","url","method","body","headers","normalizedUrl","toLowerCase","normalizedMethod","toUpperCase","relevantHeaders","Object","entries","filter","key","includes","sort","a","localeCompare","map","value","join","bodyString","JSON","stringify","cleanupExpiredRequests","now","Date","expiredKeys","metadata","lastAccess","push","delete","length","console","log","isAtConcurrentLimit","size","requestFn","requestKey","existingRequest","get","count","warn","timer","startTimer","requestPromise","finally","endTimer","set","timestamp","options","fetch","response","ok","Error","status","statusText","json","clear","totalRequests","oldestTimestamp","Infinity","values","averageRequestCount","oldestRequest","setInterval","fetchJson","getStats","clearAll"],"sources":["/Users/sachin/Documents/md-sports-/src/lib/request-deduplication.ts"],"sourcesContent":["/**\n * Request Deduplication Utility\n * \n * Prevents duplicate API requests by caching ongoing requests\n * and returning the same promise for identical requests.\n */\n\nimport { PerformanceMonitor } from './performance';\n\nconst monitor = new PerformanceMonitor();\n\n// Store for ongoing requests\nconst ongoingRequests = new Map<string, Promise<any>>();\n\n// Store for request metadata\ninterface RequestMetadata {\n    timestamp: number;\n    count: number;\n    lastAccess: number;\n}\n\nconst requestMetadata = new Map<string, RequestMetadata>();\n\n// Configuration\nconst DEDUPLICATION_CONFIG = {\n    // How long to keep a request in the deduplication cache (ms)\n    maxAge: 30 * 1000, // 30 seconds\n\n    // Maximum number of concurrent requests to track\n    maxConcurrentRequests: 100,\n\n    // Cleanup interval for expired requests\n    cleanupInterval: 60 * 1000, // 1 minute\n\n    // Enable logging for debugging\n    enableLogging: process.env.NODE_ENV === 'development'\n};\n\n/**\n * Generate a unique key for a request\n */\nfunction generateRequestKey(\n    url: string,\n    method: string = 'GET',\n    body?: any,\n    headers?: Record<string, string>\n): string {\n    const normalizedUrl = url.toLowerCase();\n    const normalizedMethod = method.toUpperCase();\n\n    // Include relevant headers in the key (excluding auth tokens for security)\n    const relevantHeaders = headers ? Object.entries(headers)\n        .filter(([key]) => !key.toLowerCase().includes('authorization'))\n        .sort(([a], [b]) => a.localeCompare(b))\n        .map(([key, value]) => `${key}:${value}`)\n        .join('|') : '';\n\n    const bodyString = body ? JSON.stringify(body) : '';\n\n    return `${normalizedMethod}:${normalizedUrl}:${bodyString}:${relevantHeaders}`;\n}\n\n/**\n * Clean up expired requests\n */\nfunction cleanupExpiredRequests(): void {\n    const now = Date.now();\n    const expiredKeys: string[] = [];\n\n    for (const [key, metadata] of requestMetadata.entries()) {\n        if (now - metadata.lastAccess > DEDUPLICATION_CONFIG.maxAge) {\n            expiredKeys.push(key);\n        }\n    }\n\n    for (const key of expiredKeys) {\n        ongoingRequests.delete(key);\n        requestMetadata.delete(key);\n    }\n\n    if (DEDUPLICATION_CONFIG.enableLogging && expiredKeys.length > 0) {\n        console.log(`🧹 Cleaned up ${expiredKeys.length} expired request deduplication entries`);\n    }\n}\n\n/**\n * Check if we're at the concurrent request limit\n */\nfunction isAtConcurrentLimit(): boolean {\n    return ongoingRequests.size >= DEDUPLICATION_CONFIG.maxConcurrentRequests;\n}\n\n/**\n * Deduplicate a request\n */\nexport async function deduplicateRequest<T>(\n    requestFn: () => Promise<T>,\n    url: string,\n    method: string = 'GET',\n    body?: any,\n    headers?: Record<string, string>\n): Promise<T> {\n    const requestKey = generateRequestKey(url, method, body, headers);\n    const now = Date.now();\n\n    // Check if we already have this request ongoing\n    const existingRequest = ongoingRequests.get(requestKey);\n    if (existingRequest) {\n        // Update metadata\n        const metadata = requestMetadata.get(requestKey);\n        if (metadata) {\n            metadata.count++;\n            metadata.lastAccess = now;\n        }\n\n        if (DEDUPLICATION_CONFIG.enableLogging) {\n            console.log(`🔄 Deduplicating request: ${method} ${url} (${metadata?.count || 1} total)`);\n        }\n\n        return existingRequest;\n    }\n\n    // Clean up if we're at the limit\n    if (isAtConcurrentLimit()) {\n        cleanupExpiredRequests();\n\n        // If still at limit, proceed without deduplication\n        if (isAtConcurrentLimit()) {\n            if (DEDUPLICATION_CONFIG.enableLogging) {\n                console.warn(`⚠️ Request deduplication limit reached, proceeding without deduplication: ${method} ${url}`);\n            }\n            return requestFn();\n        }\n    }\n\n    // Create new request\n    const timer = monitor.startTimer('request-deduplication');\n\n    const requestPromise = requestFn()\n        .finally(() => {\n            // Clean up after request completes\n            ongoingRequests.delete(requestKey);\n            monitor.endTimer(timer);\n        });\n\n    // Store the request\n    ongoingRequests.set(requestKey, requestPromise);\n    requestMetadata.set(requestKey, {\n        timestamp: now,\n        count: 1,\n        lastAccess: now\n    });\n\n    if (DEDUPLICATION_CONFIG.enableLogging) {\n        console.log(`🚀 Starting new request: ${method} ${url}`);\n    }\n\n    return requestPromise;\n}\n\n/**\n * Deduplicate a fetch request\n */\nexport async function deduplicatedFetch(\n    url: string,\n    options: RequestInit = {}\n): Promise<Response> {\n    const method = options.method || 'GET';\n    const headers = options.headers as Record<string, string> || {};\n    const body = options.body;\n\n    return deduplicateRequest(\n        () => fetch(url, options),\n        url,\n        method,\n        body,\n        headers\n    );\n}\n\n/**\n * Deduplicate a JSON fetch request\n */\nexport async function deduplicatedFetchJson<T>(\n    url: string,\n    options: RequestInit = {}\n): Promise<T> {\n    const response = await deduplicatedFetch(url, options);\n\n    if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n}\n\n/**\n * Clear all ongoing requests (useful for testing or manual cleanup)\n */\nexport function clearAllRequests(): void {\n    ongoingRequests.clear();\n    requestMetadata.clear();\n\n    if (DEDUPLICATION_CONFIG.enableLogging) {\n        console.log('🧹 Cleared all request deduplication entries');\n    }\n}\n\n/**\n * Get statistics about request deduplication\n */\nexport function getDeduplicationStats(): {\n    ongoingRequests: number;\n    totalRequests: number;\n    averageRequestCount: number;\n    oldestRequest: number | null;\n} {\n    const now = Date.now();\n    let totalRequests = 0;\n    let oldestTimestamp = Infinity;\n\n    for (const metadata of requestMetadata.values()) {\n        totalRequests += metadata.count;\n        if (metadata.timestamp < oldestTimestamp) {\n            oldestTimestamp = metadata.timestamp;\n        }\n    }\n\n    return {\n        ongoingRequests: ongoingRequests.size,\n        totalRequests,\n        averageRequestCount: requestMetadata.size > 0 ? totalRequests / requestMetadata.size : 0,\n        oldestRequest: oldestTimestamp === Infinity ? null : now - oldestTimestamp\n    };\n}\n\n/**\n * Force cleanup of expired requests\n */\nexport function forceCleanup(): void {\n    cleanupExpiredRequests();\n}\n\n// Start automatic cleanup\nsetInterval(cleanupExpiredRequests, DEDUPLICATION_CONFIG.cleanupInterval);\n\n// Export configuration for testing\nexport { DEDUPLICATION_CONFIG };\n\n/**\n * React hook for deduplicating API calls\n */\nexport function useDeduplicatedFetch() {\n    return {\n        fetch: deduplicatedFetch,\n        fetchJson: deduplicatedFetchJson,\n        getStats: getDeduplicationStats,\n        clearAll: clearAllRequests\n    };\n}"],"mappings":"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","ignoreList":[]}