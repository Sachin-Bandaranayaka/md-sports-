ea1336808cd76b35a76214e01c159ef4
"use strict";

/* istanbul ignore next */
function cov_25l7g5ubwo() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/invoices/bulk-delete/route.ts";
  var hash = "ecec4662e79d53720d4fb3d71e0a9ad69c442fa1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/invoices/bulk-delete/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 14
        },
        end: {
          line: 12,
          column: 45
        }
      },
      "5": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 13,
          column: 70
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 77,
          column: 5
        }
      },
      "7": {
        start: {
          line: 16,
          column: 27
        },
        end: {
          line: 16,
          column: 92
        }
      },
      "8": {
        start: {
          line: 17,
          column: 27
        },
        end: {
          line: 17,
          column: 94
        }
      },
      "9": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 25,
          column: 9
        }
      },
      "10": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 24,
          column: 15
        }
      },
      "11": {
        start: {
          line: 26,
          column: 21
        },
        end: {
          line: 26,
          column: 41
        }
      },
      "12": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 29
        }
      },
      "13": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 35,
          column: 9
        }
      },
      "14": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 34,
          column: 15
        }
      },
      "15": {
        start: {
          line: 36,
          column: 27
        },
        end: {
          line: 36,
          column: 81
        }
      },
      "16": {
        start: {
          line: 36,
          column: 41
        },
        end: {
          line: 36,
          column: 57
        }
      },
      "17": {
        start: {
          line: 36,
          column: 71
        },
        end: {
          line: 36,
          column: 80
        }
      },
      "18": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "19": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 43,
          column: 15
        }
      },
      "20": {
        start: {
          line: 45,
          column: 24
        },
        end: {
          line: 45,
          column: 26
        }
      },
      "21": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "22": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "23": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 61
        }
      },
      "24": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 52,
          column: 19
        }
      },
      "25": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 75
        }
      },
      "26": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 59,
          column: 19
        }
      },
      "27": {
        start: {
          line: 62,
          column: 23
        },
        end: {
          line: 62,
          column: 54
        }
      },
      "28": {
        start: {
          line: 62,
          column: 43
        },
        end: {
          line: 62,
          column: 53
        }
      },
      "29": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 67,
          column: 11
        }
      },
      "30": {
        start: {
          line: 65,
          column: 41
        },
        end: {
          line: 65,
          column: 50
        }
      },
      "31": {
        start: {
          line: 65,
          column: 61
        },
        end: {
          line: 65,
          column: 65
        }
      },
      "32": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 59
        }
      },
      "33": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 76,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "POST",
        decl: {
          start: {
            line: 14,
            column: 15
          },
          end: {
            line: 14,
            column: 19
          }
        },
        loc: {
          start: {
            line: 14,
            column: 29
          },
          end: {
            line: 78,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 36,
            column: 35
          },
          end: {
            line: 36,
            column: 36
          }
        },
        loc: {
          start: {
            line: 36,
            column: 41
          },
          end: {
            line: 36,
            column: 57
          }
        },
        line: 36
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 36,
            column: 66
          },
          end: {
            line: 36,
            column: 67
          }
        },
        loc: {
          start: {
            line: 36,
            column: 71
          },
          end: {
            line: 36,
            column: 80
          }
        },
        line: 36
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 62,
            column: 38
          },
          end: {
            line: 62,
            column: 39
          }
        },
        loc: {
          start: {
            line: 62,
            column: 43
          },
          end: {
            line: 62,
            column: 53
          }
        },
        line: 62
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 65,
            column: 36
          },
          end: {
            line: 65,
            column: 37
          }
        },
        loc: {
          start: {
            line: 65,
            column: 41
          },
          end: {
            line: 65,
            column: 50
          }
        },
        line: 65
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 65,
            column: 56
          },
          end: {
            line: 65,
            column: 57
          }
        },
        loc: {
          start: {
            line: 65,
            column: 61
          },
          end: {
            line: 65,
            column: 65
          }
        },
        line: 65
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 31
          }
        }, {
          start: {
            line: 18,
            column: 35
          },
          end: {
            line: 18,
            column: 54
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 31
          }
        }, {
          start: {
            line: 28,
            column: 35
          },
          end: {
            line: 28,
            column: 51
          }
        }],
        line: 28
      },
      "4": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "5": {
        loc: {
          start: {
            line: 58,
            column: 27
          },
          end: {
            line: 58,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 27
          },
          end: {
            line: 58,
            column: 38
          }
        }, {
          start: {
            line: 58,
            column: 42
          },
          end: {
            line: 58,
            column: 57
          }
        }],
        line: 58
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/invoices/bulk-delete/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { validateTokenPermission } from '@/lib/auth';\nimport { deleteInvoice } from '@/services/invoiceService';\n\nexport async function POST(request: NextRequest) {\n  try {\n    const authDelete = await validateTokenPermission(request, 'sales:delete');\n    const authManage = await validateTokenPermission(request, 'invoice:manage');\n\n    if (!authDelete.isValid && !authManage.isValid) {\n      return NextResponse.json({\n        success: false,\n        message: \"Permission denied. Requires 'sales:delete' or 'invoice:manage'.\",\n      }, { status: 403 });\n    }\n\n    const body = await request.json();\n    const ids: unknown = body?.ids;\n\n    if (!Array.isArray(ids) || ids.length === 0) {\n      return NextResponse.json(\n        { success: false, message: 'ids[] array is required' },\n        { status: 400 },\n      );\n    }\n\n    const numericIds: number[] = ids\n      .map((id: any) => parseInt(id, 10))\n      .filter((n) => !isNaN(n));\n\n    if (numericIds.length === 0) {\n      return NextResponse.json({ success: false, message: 'No valid numeric IDs provided' }, { status: 400 });\n    }\n\n    const results: { id: number; success: boolean; error?: string }[] = [];\n\n    for (const id of numericIds) {\n      try {\n        await deleteInvoice(id);\n        results.push({ id, success: true });\n      } catch (err: any) {\n        console.error(`Bulk delete error for invoice ${id}:`, err);\n        results.push({ id, success: false, error: err.message || 'unknown error' });\n      }\n    }\n\n    const failed = results.filter((r) => !r.success);\n\n    return NextResponse.json({\n      success: failed.length === 0,\n      deleted: results.filter((r) => r.success).map((r) => r.id),\n      failed,\n    });\n  } catch (error) {\n    console.error('Bulk invoice delete error:', error);\n    return NextResponse.json({ success: false, message: 'Server error', error: String(error) }, { status: 500 });\n  }\n} "],
      names: ["POST", "request", "authDelete", "validateTokenPermission", "authManage", "isValid", "NextResponse", "json", "success", "message", "status", "body", "ids", "Array", "isArray", "length", "numericIds", "map", "id", "parseInt", "filter", "n", "isNaN", "results", "deleteInvoice", "push", "err", "console", "error", "failed", "r", "deleted", "String"],
      mappings: ";;;;+BAIsBA;;;eAAAA;;;wBAJoB;sBACF;gCACV;AAEvB,eAAeA,KAAKC,OAAoB;IAC7C,IAAI;QACF,MAAMC,aAAa,MAAMC,IAAAA,6BAAuB,EAACF,SAAS;QAC1D,MAAMG,aAAa,MAAMD,IAAAA,6BAAuB,EAACF,SAAS;QAE1D,IAAI,CAACC,WAAWG,OAAO,IAAI,CAACD,WAAWC,OAAO,EAAE;YAC9C,OAAOC,oBAAY,CAACC,IAAI,CAAC;gBACvBC,SAAS;gBACTC,SAAS;YACX,GAAG;gBAAEC,QAAQ;YAAI;QACnB;QAEA,MAAMC,OAAO,MAAMV,QAAQM,IAAI;QAC/B,MAAMK,MAAeD,MAAMC;QAE3B,IAAI,CAACC,MAAMC,OAAO,CAACF,QAAQA,IAAIG,MAAM,KAAK,GAAG;YAC3C,OAAOT,oBAAY,CAACC,IAAI,CACtB;gBAAEC,SAAS;gBAAOC,SAAS;YAA0B,GACrD;gBAAEC,QAAQ;YAAI;QAElB;QAEA,MAAMM,aAAuBJ,IAC1BK,GAAG,CAAC,CAACC,KAAYC,SAASD,IAAI,KAC9BE,MAAM,CAAC,CAACC,IAAM,CAACC,MAAMD;QAExB,IAAIL,WAAWD,MAAM,KAAK,GAAG;YAC3B,OAAOT,oBAAY,CAACC,IAAI,CAAC;gBAAEC,SAAS;gBAAOC,SAAS;YAAgC,GAAG;gBAAEC,QAAQ;YAAI;QACvG;QAEA,MAAMa,UAA8D,EAAE;QAEtE,KAAK,MAAML,MAAMF,WAAY;YAC3B,IAAI;gBACF,MAAMQ,IAAAA,6BAAa,EAACN;gBACpBK,QAAQE,IAAI,CAAC;oBAAEP;oBAAIV,SAAS;gBAAK;YACnC,EAAE,OAAOkB,KAAU;gBACjBC,QAAQC,KAAK,CAAC,CAAC,8BAA8B,EAAEV,GAAG,CAAC,CAAC,EAAEQ;gBACtDH,QAAQE,IAAI,CAAC;oBAAEP;oBAAIV,SAAS;oBAAOoB,OAAOF,IAAIjB,OAAO,IAAI;gBAAgB;YAC3E;QACF;QAEA,MAAMoB,SAASN,QAAQH,MAAM,CAAC,CAACU,IAAM,CAACA,EAAEtB,OAAO;QAE/C,OAAOF,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAASqB,OAAOd,MAAM,KAAK;YAC3BgB,SAASR,QAAQH,MAAM,CAAC,CAACU,IAAMA,EAAEtB,OAAO,EAAES,GAAG,CAAC,CAACa,IAAMA,EAAEZ,EAAE;YACzDW;QACF;IACF,EAAE,OAAOD,OAAO;QACdD,QAAQC,KAAK,CAAC,8BAA8BA;QAC5C,OAAOtB,oBAAY,CAACC,IAAI,CAAC;YAAEC,SAAS;YAAOC,SAAS;YAAgBmB,OAAOI,OAAOJ;QAAO,GAAG;YAAElB,QAAQ;QAAI;IAC5G;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ecec4662e79d53720d4fb3d71e0a9ad69c442fa1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_25l7g5ubwo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_25l7g5ubwo();
cov_25l7g5ubwo().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_25l7g5ubwo().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_25l7g5ubwo().f[0]++;
    cov_25l7g5ubwo().s[2]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_25l7g5ubwo().s[3]++, require("next/server"));
const _auth =
/* istanbul ignore next */
(cov_25l7g5ubwo().s[4]++, require("../../../../lib/auth"));
const _invoiceService =
/* istanbul ignore next */
(cov_25l7g5ubwo().s[5]++, require("../../../../services/invoiceService"));
async function POST(request) {
  /* istanbul ignore next */
  cov_25l7g5ubwo().f[1]++;
  cov_25l7g5ubwo().s[6]++;
  try {
    const authDelete =
    /* istanbul ignore next */
    (cov_25l7g5ubwo().s[7]++, await (0, _auth.validateTokenPermission)(request, "sales:delete"));
    const authManage =
    /* istanbul ignore next */
    (cov_25l7g5ubwo().s[8]++, await (0, _auth.validateTokenPermission)(request, "invoice:manage"));
    /* istanbul ignore next */
    cov_25l7g5ubwo().s[9]++;
    if (
    /* istanbul ignore next */
    (cov_25l7g5ubwo().b[1][0]++, !authDelete.isValid) &&
    /* istanbul ignore next */
    (cov_25l7g5ubwo().b[1][1]++, !authManage.isValid)) {
      /* istanbul ignore next */
      cov_25l7g5ubwo().b[0][0]++;
      cov_25l7g5ubwo().s[10]++;
      return _server.NextResponse.json({
        success: false,
        message: "Permission denied. Requires 'sales:delete' or 'invoice:manage'."
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_25l7g5ubwo().b[0][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_25l7g5ubwo().s[11]++, await request.json());
    const ids =
    /* istanbul ignore next */
    (cov_25l7g5ubwo().s[12]++, body?.ids);
    /* istanbul ignore next */
    cov_25l7g5ubwo().s[13]++;
    if (
    /* istanbul ignore next */
    (cov_25l7g5ubwo().b[3][0]++, !Array.isArray(ids)) ||
    /* istanbul ignore next */
    (cov_25l7g5ubwo().b[3][1]++, ids.length === 0)) {
      /* istanbul ignore next */
      cov_25l7g5ubwo().b[2][0]++;
      cov_25l7g5ubwo().s[14]++;
      return _server.NextResponse.json({
        success: false,
        message: "ids[] array is required"
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_25l7g5ubwo().b[2][1]++;
    }
    const numericIds =
    /* istanbul ignore next */
    (cov_25l7g5ubwo().s[15]++, ids.map(id => {
      /* istanbul ignore next */
      cov_25l7g5ubwo().f[2]++;
      cov_25l7g5ubwo().s[16]++;
      return parseInt(id, 10);
    }).filter(n => {
      /* istanbul ignore next */
      cov_25l7g5ubwo().f[3]++;
      cov_25l7g5ubwo().s[17]++;
      return !isNaN(n);
    }));
    /* istanbul ignore next */
    cov_25l7g5ubwo().s[18]++;
    if (numericIds.length === 0) {
      /* istanbul ignore next */
      cov_25l7g5ubwo().b[4][0]++;
      cov_25l7g5ubwo().s[19]++;
      return _server.NextResponse.json({
        success: false,
        message: "No valid numeric IDs provided"
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_25l7g5ubwo().b[4][1]++;
    }
    const results =
    /* istanbul ignore next */
    (cov_25l7g5ubwo().s[20]++, []);
    /* istanbul ignore next */
    cov_25l7g5ubwo().s[21]++;
    for (const id of numericIds) {
      /* istanbul ignore next */
      cov_25l7g5ubwo().s[22]++;
      try {
        /* istanbul ignore next */
        cov_25l7g5ubwo().s[23]++;
        await (0, _invoiceService.deleteInvoice)(id);
        /* istanbul ignore next */
        cov_25l7g5ubwo().s[24]++;
        results.push({
          id,
          success: true
        });
      } catch (err) {
        /* istanbul ignore next */
        cov_25l7g5ubwo().s[25]++;
        console.error(`Bulk delete error for invoice ${id}:`, err);
        /* istanbul ignore next */
        cov_25l7g5ubwo().s[26]++;
        results.push({
          id,
          success: false,
          error:
          /* istanbul ignore next */
          (cov_25l7g5ubwo().b[5][0]++, err.message) ||
          /* istanbul ignore next */
          (cov_25l7g5ubwo().b[5][1]++, "unknown error")
        });
      }
    }
    const failed =
    /* istanbul ignore next */
    (cov_25l7g5ubwo().s[27]++, results.filter(r => {
      /* istanbul ignore next */
      cov_25l7g5ubwo().f[4]++;
      cov_25l7g5ubwo().s[28]++;
      return !r.success;
    }));
    /* istanbul ignore next */
    cov_25l7g5ubwo().s[29]++;
    return _server.NextResponse.json({
      success: failed.length === 0,
      deleted: results.filter(r => {
        /* istanbul ignore next */
        cov_25l7g5ubwo().f[5]++;
        cov_25l7g5ubwo().s[30]++;
        return r.success;
      }).map(r => {
        /* istanbul ignore next */
        cov_25l7g5ubwo().f[6]++;
        cov_25l7g5ubwo().s[31]++;
        return r.id;
      }),
      failed
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_25l7g5ubwo().s[32]++;
    console.error("Bulk invoice delete error:", error);
    /* istanbul ignore next */
    cov_25l7g5ubwo().s[33]++;
    return _server.NextResponse.json({
      success: false,
      message: "Server error",
      error: String(error)
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,