{"version":3,"sources":["/Users/sachin/Documents/md-sports-/src/utils/validators.ts"],"sourcesContent":["import { z } from 'zod';\n\n// User validation schemas\nexport const loginSchema = z.object({\n    email: z.string().email('Invalid email address'),\n    password: z.string().min(6, 'Password must be at least 6 characters'),\n});\n\nexport const registerSchema = z.object({\n    name: z.string().min(2, 'Name must be at least 2 characters'),\n    email: z.string().email('Invalid email address'),\n    password: z.string().min(8, 'Password must be at least 8 characters'),\n    confirmPassword: z.string(),\n    roleId: z.number().int().positive(),\n    phone: z.string().optional(),\n    shopId: z.number().int().positive().optional().nullable(),\n}).refine(data => data.password === data.confirmPassword, {\n    message: \"Passwords don't match\",\n    path: [\"confirmPassword\"],\n});\n\n// Product validation schema\nexport const productSchema = z.object({\n    name: z.string().min(2, 'Product name is required'),\n    description: z.string().optional(),\n    price: z.number().positive('Price must be positive'),\n    sku: z.string().optional().nullable(),\n    barcode: z.string().optional().nullable(),\n    categoryId: z.number().int().positive().optional().nullable(),\n    shopId: z.number().int().positive().optional().nullable(),\n});\n\n// Category validation schema\nexport const categorySchema = z.object({\n    name: z.string().min(2, 'Category name is required'),\n    description: z.string().optional(),\n    parentId: z.number().int().positive().optional().nullable(),\n});\n\n// Inventory validation schema\nexport const inventorySchema = z.object({\n    productId: z.number().int().positive('Product ID is required'),\n    shopId: z.number().int().positive('Shop ID is required'),\n    quantity: z.number().int('Quantity must be an integer'),\n    reorderLevel: z.number().int().optional(),\n});\n\n// Shop validation schema\nexport const shopSchema = z.object({\n    name: z.string().min(2, 'Shop name is required'),\n    location: z.string().optional(),\n    contact_person: z.string().optional(),\n    phone: z.string().optional(),\n    email: z.string().email('Invalid email address').optional(),\n    is_active: z.boolean().default(true),\n    opening_time: z.string().optional(),\n    closing_time: z.string().optional(),\n    manager_id: z.number().int().positive().optional().nullable(),\n    opening_date: z.string().optional(),\n    status: z.enum(['open', 'closed', 'renovating', 'relocating']).default('open'),\n    address_line1: z.string().optional(),\n    address_line2: z.string().optional(),\n    city: z.string().optional(),\n    state: z.string().optional(),\n    postal_code: z.string().optional(),\n    country: z.string().default('Malaysia'),\n    tax_rate: z.number().min(0).optional(),\n});\n\n// Customer validation schema\nexport const customerSchema = z.object({\n    name: z.string().min(2, 'Customer name is required'),\n    email: z.string().email('Invalid email address').optional(),\n    phone: z.string().optional(),\n    address: z.string().optional(),\n    city: z.string().optional(),\n    postalCode: z.string().optional(),\n    contactPerson: z.string().optional(),\n    contactPersonPhone: z.string().optional(),\n    customerType: z.string().optional(),\n    paymentType: z.string().optional(),\n    creditLimit: z.number().positive().optional(),\n    creditPeriod: z.number().int().positive().optional(),\n    taxId: z.string().optional(),\n    notes: z.string().optional(),\n});\n\n// Supplier validation schema\nexport const supplierSchema = z.object({\n    name: z.string().min(2, 'Supplier name is required'),\n    contactPerson: z.string().optional(),\n    email: z.string().email('Invalid email address').optional(),\n    phone: z.string().optional(),\n    address: z.string().optional(),\n    city: z.string().optional(),\n    notes: z.string().optional(),\n    status: z.enum(['active', 'inactive']).default('active'),\n});\n\n// Invoice validation schema\nexport const invoiceSchema = z.object({\n    invoiceNumber: z.string(),\n    customerId: z.number().int().positive(),\n    items: z.array(z.object({\n        productId: z.number().int().positive(),\n        quantity: z.number().int().positive(),\n        price: z.number().positive(),\n    })).min(1, 'At least one item is required'),\n    status: z.enum(['draft', 'pending', 'paid', 'cancelled']),\n});\n\n// Payment validation schema\nexport const paymentSchema = z.object({\n    invoiceId: z.number().int().positive(),\n    customerId: z.number().int().positive(),\n    amount: z.number().positive('Amount must be positive'),\n    paymentMethod: z.enum(['cash', 'credit_card', 'bank_transfer', 'cheque', 'online']),\n    referenceNumber: z.string().optional(),\n});\n\n// Helper validation functions\nexport const validateInput = <T>(schema: z.ZodType<T>, data: unknown): {\n    success: boolean;\n    data?: T;\n    errors?: z.ZodError['errors']\n} => {\n    try {\n        const validData = schema.parse(data);\n        return { success: true, data: validData };\n    } catch (error) {\n        if (error instanceof z.ZodError) {\n            return { success: false, errors: error.errors };\n        }\n        throw error;\n    }\n};\n\n// Pagination parameters validation\nexport const paginationSchema = z.object({\n    page: z.coerce.number().int().positive().default(1),\n    limit: z.coerce.number().int().positive().max(100).default(20),\n    sortBy: z.string().optional(),\n    sortOrder: z.enum(['asc', 'desc']).optional(),\n});\n\n// Search parameters validation\nexport const searchSchema = z.object({\n    query: z.string().optional(),\n    fields: z.array(z.string()).optional(),\n}).merge(paginationSchema);\n\n// ID parameter validation\nexport const idSchema = z.object({\n    id: z.coerce.number().int().positive('Invalid ID'),\n}); "],"names":["categorySchema","customerSchema","idSchema","inventorySchema","invoiceSchema","loginSchema","paginationSchema","paymentSchema","productSchema","registerSchema","searchSchema","shopSchema","supplierSchema","validateInput","z","object","email","string","password","min","name","confirmPassword","roleId","number","int","positive","phone","optional","shopId","nullable","refine","data","message","path","description","price","sku","barcode","categoryId","parentId","productId","quantity","reorderLevel","location","contact_person","is_active","boolean","default","opening_time","closing_time","manager_id","opening_date","status","enum","address_line1","address_line2","city","state","postal_code","country","tax_rate","address","postalCode","contactPerson","contactPersonPhone","customerType","paymentType","creditLimit","creditPeriod","taxId","notes","invoiceNumber","customerId","items","array","invoiceId","amount","paymentMethod","referenceNumber","schema","validData","parse","success","error","ZodError","errors","page","coerce","limit","max","sortBy","sortOrder","query","fields","merge","id"],"mappings":"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"}