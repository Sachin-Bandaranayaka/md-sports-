{"version":3,"names":["GET","cov_26rcijf9i9","s","_shopMiddleware","ShopAccessControl","withShopAccess","request","context","f","authResult","_auth","validateTokenPermission","isValid","b","_server","NextResponse","json","error","message","status","searchParams","URL","url","startDate","get","endDate","console","log","shopId","isFiltered","inventoryResult","productsResult","customersResult","salesResult","shopsResult","Promise","all","_route","fetchInventoryDistributionData","_route1","fetchProductsData","_route2","fetchCustomersData","_route3","fetchSalesDataFiltered","_route4","fetchShopsData","success","data","monthlyInventory","monthlyProducts","monthlyCustomers","monthlySales","monthlyShops","dateRange","meta","shopFiltered","errors","filter","Boolean","Error","String"],"sources":["/Users/sachin/Documents/md-sports-/src/app/api/dashboard/filtered/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { fetchInventoryDistributionData } from '../inventory/route';\nimport { fetchProductsData } from '../products/route';\nimport { fetchCustomersData } from '../customers/route';\nimport { fetchSalesDataFiltered } from '../sales/route';\nimport { fetchShopsData } from '../shops/route';\nimport { ShopAccessControl } from '@/lib/utils/shopMiddleware';\nimport { validateTokenPermission } from '@/lib/auth';\n\nexport const GET = ShopAccessControl.withShopAccess(async (request: NextRequest, context) => {\n    try {\n        // Validate token and permissions\n        const authResult = await validateTokenPermission(request, 'dashboard:view');\n        if (!authResult.isValid) {\n            return NextResponse.json({ error: authResult.message }, { status: 401 });\n        }\n\n        const { searchParams } = new URL(request.url);\n        const startDate = searchParams.get('startDate');\n        const endDate = searchParams.get('endDate');\n\n        console.log('üîÑ Fetching filtered dashboard data with date range and shop context:', {\n            startDate,\n            endDate,\n            shopId: context.shopId,\n            isFiltered: context.isFiltered\n        });\n\n        // Fetch all data in parallel with shop context\n        const [\n            inventoryResult,\n            productsResult,\n            customersResult,\n            salesResult,\n            shopsResult\n        ] = await Promise.all([\n            fetchInventoryDistributionData(context.isFiltered ? context.shopId : null),\n            fetchProductsData(context.isFiltered ? context.shopId : null),\n            fetchCustomersData(context.isFiltered ? context.shopId : null),\n            fetchSalesDataFiltered(startDate, endDate, context.isFiltered ? context.shopId : null),\n            fetchShopsData(context.isFiltered ? context.shopId : null)\n        ]);\n\n        console.log('‚úÖ All filtered dashboard data fetched successfully');\n\n        return NextResponse.json({\n            success: true,\n            data: {\n                monthlyInventory: inventoryResult.success ? inventoryResult.data : null,\n                monthlyProducts: productsResult.success ? productsResult.data : null,\n                monthlyCustomers: customersResult.success ? customersResult.data : null,\n                monthlySales: salesResult.success ? salesResult.data : null,\n                monthlyShops: shopsResult.success ? shopsResult.data : null\n            },\n            dateRange: { startDate, endDate },\n            meta: {\n                shopFiltered: context.isFiltered,\n                shopId: context.shopId\n            },\n            errors: [\n                !inventoryResult.success ? 'Failed to fetch inventory data' : null,\n                !productsResult.success ? 'Failed to fetch products data' : null,\n                !customersResult.success ? 'Failed to fetch customers data' : null,\n                !salesResult.success ? 'Failed to fetch sales data' : null,\n                !shopsResult.success ? 'Failed to fetch shops data' : null\n            ].filter(Boolean)\n        });\n    } catch (error) {\n        console.error('‚ùå Error in filtered dashboard API:', error);\n        return NextResponse.json({\n            success: false,\n            message: 'Failed to fetch filtered dashboard data',\n            error: error instanceof Error ? error.message : String(error),\n            meta: {\n                shopFiltered: context.isFiltered,\n                shopId: context.shopId\n            }\n        }, { status: 500 });\n    }\n});"],"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","ignoreList":[]}