43d618e8444b0e26fb4291753862b30f
"use strict";

/* istanbul ignore next */
function cov_2fpjguojkz() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/categories/route.ts";
  var hash = "a0723a7391ee78232c7c6f576c67db0470408a1f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/categories/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 19
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 16
        },
        end: {
          line: 12,
          column: 46
        }
      },
      "5": {
        start: {
          line: 13,
          column: 14
        },
        end: {
          line: 13,
          column: 42
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "7": {
        start: {
          line: 16,
          column: 22
        },
        end: {
          line: 16,
          column: 82
        }
      },
      "8": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "9": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 22,
          column: 15
        }
      },
      "10": {
        start: {
          line: 24,
          column: 24
        },
        end: {
          line: 24,
          column: 59
        }
      },
      "11": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "12": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 30,
          column: 15
        }
      },
      "13": {
        start: {
          line: 32,
          column: 27
        },
        end: {
          line: 36,
          column: 10
        }
      },
      "14": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 40,
          column: 11
        }
      },
      "15": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 59
        }
      },
      "16": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 49,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "GET",
        decl: {
          start: {
            line: 14,
            column: 15
          },
          end: {
            line: 14,
            column: 18
          }
        },
        loc: {
          start: {
            line: 14,
            column: 28
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 14
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 46,
            column: 19
          },
          end: {
            line: 46,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 44
          },
          end: {
            line: 46,
            column: 57
          }
        }, {
          start: {
            line: 46,
            column: 60
          },
          end: {
            line: 46,
            column: 73
          }
        }],
        line: 46
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/categories/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { prisma } from '@/lib/prisma';\nimport { verifyToken } from '@/lib/auth';\n\nexport async function GET(request: NextRequest) {\n    try {\n        const token = request.headers.get('authorization')?.replace('Bearer ', '');\n        if (!token) {\n            return NextResponse.json({ error: 'No token provided' }, { status: 401 });\n        }\n\n        const decoded = await verifyToken(token);\n        if (!decoded) {\n            return NextResponse.json({ error: 'Invalid token: signature verification failed' }, { status: 401 });\n        }\n\n        const categories = await prisma.category.findMany({\n            orderBy: {\n                name: 'asc'\n            }\n        });\n        return NextResponse.json({ success: true, data: categories });\n    } catch (error) {\n        console.error('Error fetching categories:', error);\n        return NextResponse.json(\n            {\n                success: false,\n                message: 'Failed to fetch categories',\n                error: error instanceof Error ? error.message : String(error)\n            },\n            { status: 500 }\n        );\n    }\n}"],
      names: ["GET", "request", "token", "headers", "get", "replace", "NextResponse", "json", "error", "status", "decoded", "verifyToken", "categories", "prisma", "category", "findMany", "orderBy", "name", "success", "data", "console", "message", "Error", "String"],
      mappings: ";;;;+BAIsBA;;;eAAAA;;;wBAJoB;wBACnB;sBACK;AAErB,eAAeA,IAAIC,OAAoB;IAC1C,IAAI;QACA,MAAMC,QAAQD,QAAQE,OAAO,CAACC,GAAG,CAAC,kBAAkBC,QAAQ,WAAW;QACvE,IAAI,CAACH,OAAO;YACR,OAAOI,oBAAY,CAACC,IAAI,CAAC;gBAAEC,OAAO;YAAoB,GAAG;gBAAEC,QAAQ;YAAI;QAC3E;QAEA,MAAMC,UAAU,MAAMC,IAAAA,iBAAW,EAACT;QAClC,IAAI,CAACQ,SAAS;YACV,OAAOJ,oBAAY,CAACC,IAAI,CAAC;gBAAEC,OAAO;YAA+C,GAAG;gBAAEC,QAAQ;YAAI;QACtG;QAEA,MAAMG,aAAa,MAAMC,cAAM,CAACC,QAAQ,CAACC,QAAQ,CAAC;YAC9CC,SAAS;gBACLC,MAAM;YACV;QACJ;QACA,OAAOX,oBAAY,CAACC,IAAI,CAAC;YAAEW,SAAS;YAAMC,MAAMP;QAAW;IAC/D,EAAE,OAAOJ,OAAO;QACZY,QAAQZ,KAAK,CAAC,8BAA8BA;QAC5C,OAAOF,oBAAY,CAACC,IAAI,CACpB;YACIW,SAAS;YACTG,SAAS;YACTb,OAAOA,iBAAiBc,QAAQd,MAAMa,OAAO,GAAGE,OAAOf;QAC3D,GACA;YAAEC,QAAQ;QAAI;IAEtB;AACJ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a0723a7391ee78232c7c6f576c67db0470408a1f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2fpjguojkz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2fpjguojkz();
cov_2fpjguojkz().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2fpjguojkz().s[1]++;
Object.defineProperty(exports, "GET", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2fpjguojkz().f[0]++;
    cov_2fpjguojkz().s[2]++;
    return GET;
  }
});
const _server =
/* istanbul ignore next */
(cov_2fpjguojkz().s[3]++, require("next/server"));
const _prisma =
/* istanbul ignore next */
(cov_2fpjguojkz().s[4]++, require("../../../lib/prisma"));
const _auth =
/* istanbul ignore next */
(cov_2fpjguojkz().s[5]++, require("../../../lib/auth"));
async function GET(request) {
  /* istanbul ignore next */
  cov_2fpjguojkz().f[1]++;
  cov_2fpjguojkz().s[6]++;
  try {
    const token =
    /* istanbul ignore next */
    (cov_2fpjguojkz().s[7]++, request.headers.get("authorization")?.replace("Bearer ", ""));
    /* istanbul ignore next */
    cov_2fpjguojkz().s[8]++;
    if (!token) {
      /* istanbul ignore next */
      cov_2fpjguojkz().b[0][0]++;
      cov_2fpjguojkz().s[9]++;
      return _server.NextResponse.json({
        error: "No token provided"
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2fpjguojkz().b[0][1]++;
    }
    const decoded =
    /* istanbul ignore next */
    (cov_2fpjguojkz().s[10]++, await (0, _auth.verifyToken)(token));
    /* istanbul ignore next */
    cov_2fpjguojkz().s[11]++;
    if (!decoded) {
      /* istanbul ignore next */
      cov_2fpjguojkz().b[1][0]++;
      cov_2fpjguojkz().s[12]++;
      return _server.NextResponse.json({
        error: "Invalid token: signature verification failed"
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2fpjguojkz().b[1][1]++;
    }
    const categories =
    /* istanbul ignore next */
    (cov_2fpjguojkz().s[13]++, await _prisma.prisma.category.findMany({
      orderBy: {
        name: "asc"
      }
    }));
    /* istanbul ignore next */
    cov_2fpjguojkz().s[14]++;
    return _server.NextResponse.json({
      success: true,
      data: categories
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2fpjguojkz().s[15]++;
    console.error("Error fetching categories:", error);
    /* istanbul ignore next */
    cov_2fpjguojkz().s[16]++;
    return _server.NextResponse.json({
      success: false,
      message: "Failed to fetch categories",
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2fpjguojkz().b[2][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2fpjguojkz().b[2][1]++, String(error))
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmZwamd1b2preiIsImFjdHVhbENvdmVyYWdlIiwicyIsIkdFVCIsInJlcXVlc3QiLCJmIiwidG9rZW4iLCJoZWFkZXJzIiwiZ2V0IiwicmVwbGFjZSIsImIiLCJfc2VydmVyIiwiTmV4dFJlc3BvbnNlIiwianNvbiIsImVycm9yIiwic3RhdHVzIiwiZGVjb2RlZCIsIl9hdXRoIiwidmVyaWZ5VG9rZW4iLCJjYXRlZ29yaWVzIiwiX3ByaXNtYSIsInByaXNtYSIsImNhdGVnb3J5IiwiZmluZE1hbnkiLCJvcmRlckJ5IiwibmFtZSIsInN1Y2Nlc3MiLCJkYXRhIiwiY29uc29sZSIsIm1lc3NhZ2UiLCJFcnJvciIsIlN0cmluZyJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWNoaW4vRG9jdW1lbnRzL21kLXNwb3J0cy0vc3JjL2FwcC9hcGkvY2F0ZWdvcmllcy9yb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0IHsgcHJpc21hIH0gZnJvbSAnQC9saWIvcHJpc21hJztcbmltcG9ydCB7IHZlcmlmeVRva2VuIH0gZnJvbSAnQC9saWIvYXV0aCc7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCB0b2tlbiA9IHJlcXVlc3QuaGVhZGVycy5nZXQoJ2F1dGhvcml6YXRpb24nKT8ucmVwbGFjZSgnQmVhcmVyICcsICcnKTtcbiAgICAgICAgaWYgKCF0b2tlbikge1xuICAgICAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJyb3I6ICdObyB0b2tlbiBwcm92aWRlZCcgfSwgeyBzdGF0dXM6IDQwMSB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGRlY29kZWQgPSBhd2FpdCB2ZXJpZnlUb2tlbih0b2tlbik7XG4gICAgICAgIGlmICghZGVjb2RlZCkge1xuICAgICAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJyb3I6ICdJbnZhbGlkIHRva2VuOiBzaWduYXR1cmUgdmVyaWZpY2F0aW9uIGZhaWxlZCcgfSwgeyBzdGF0dXM6IDQwMSB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGNhdGVnb3JpZXMgPSBhd2FpdCBwcmlzbWEuY2F0ZWdvcnkuZmluZE1hbnkoe1xuICAgICAgICAgICAgb3JkZXJCeToge1xuICAgICAgICAgICAgICAgIG5hbWU6ICdhc2MnXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBzdWNjZXNzOiB0cnVlLCBkYXRhOiBjYXRlZ29yaWVzIH0pO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIGNhdGVnb3JpZXM6JywgZXJyb3IpO1xuICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ0ZhaWxlZCB0byBmZXRjaCBjYXRlZ29yaWVzJyxcbiAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiBTdHJpbmcoZXJyb3IpXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgICAgICk7XG4gICAgfVxufSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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