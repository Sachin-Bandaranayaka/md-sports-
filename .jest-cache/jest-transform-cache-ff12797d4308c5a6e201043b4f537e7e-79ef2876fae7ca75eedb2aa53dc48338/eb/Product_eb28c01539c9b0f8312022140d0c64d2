6de26a8101aa7262d8169af8de59f4a0
"use strict";

/* istanbul ignore next */
function cov_1rjjbtugv() {
  var path = "/Users/sachin/Documents/md-sports-/src/lib/models/Product.ts";
  var hash = "543c20d8c2c4afc0f0aea672963910433fcf93d8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/lib/models/Product.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 19
        },
        end: {
          line: 11,
          column: 39
        }
      },
      "4": {
        start: {
          line: 12,
          column: 26
        },
        end: {
          line: 12,
          column: 68
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "6": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 25
        }
      },
      "7": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 17
        }
      },
      "8": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 89,
          column: 3
        }
      },
      "9": {
        start: {
          line: 90,
          column: 17
        },
        end: {
          line: 90,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 31
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 26
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 25
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 35
          },
          end: {
            line: 14,
            column: 38
          }
        }, {
          start: {
            line: 14,
            column: 41
          },
          end: {
            line: 16,
            column: 5
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 14
          }
        }, {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 14,
            column: 32
          }
        }],
        line: 14
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/lib/models/Product.ts"],
      sourcesContent: ["import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../db';\n\ninterface ProductAttributes {\n    id: number;\n    name: string;\n    sku: string;\n    barcode?: string;\n    description?: string;\n    basePrice: number;\n    retailPrice: number;\n    categoryId?: number;\n    imageUrl?: string;\n    isActive: boolean;\n    createdAt: Date;\n    updatedAt: Date;\n}\n\ninterface ProductCreationAttributes extends Optional<ProductAttributes, 'id' | 'createdAt' | 'updatedAt' | 'isActive'> { }\n\nclass Product extends Model<ProductAttributes, ProductCreationAttributes> implements ProductAttributes {\n    public id!: number;\n    public name!: string;\n    public sku!: string;\n    public barcode!: string;\n    public description!: string;\n    public basePrice!: number;\n    public retailPrice!: number;\n    public categoryId!: number;\n    public imageUrl!: string;\n    public isActive!: boolean;\n\n    // Timestamps\n    public readonly createdAt!: Date;\n    public readonly updatedAt!: Date;\n\n    // Methods defined in the design document\n    public async getInventoryLevels(): Promise<Map<number, number>> {\n        // This will be implemented to query the InventoryItem table\n        // to get inventory levels across all shops\n        return new Map<number, number>();\n    }\n\n    public async getTotalStock(): Promise<number> {\n        // This will sum up all inventory across all shops\n        return 0;\n    }\n}\n\nProduct.init({\n    id: {\n        type: DataTypes.INTEGER,\n        autoIncrement: true,\n        primaryKey: true,\n    },\n    name: {\n        type: DataTypes.STRING,\n        allowNull: false,\n    },\n    sku: {\n        type: DataTypes.STRING,\n        allowNull: false,\n        unique: true,\n    },\n    barcode: {\n        type: DataTypes.STRING,\n        allowNull: true,\n    },\n    description: {\n        type: DataTypes.TEXT,\n        allowNull: true,\n    },\n    basePrice: {\n        type: DataTypes.DECIMAL(10, 2),\n        allowNull: false,\n    },\n    retailPrice: {\n        type: DataTypes.DECIMAL(10, 2),\n        allowNull: false,\n    },\n    categoryId: {\n        type: DataTypes.INTEGER,\n        allowNull: true,\n    },\n    imageUrl: {\n        type: DataTypes.STRING,\n        allowNull: true,\n    },\n    isActive: {\n        type: DataTypes.BOOLEAN,\n        allowNull: false,\n        defaultValue: true,\n    },\n    createdAt: {\n        type: DataTypes.DATE,\n        allowNull: false,\n        defaultValue: DataTypes.NOW,\n    },\n    updatedAt: {\n        type: DataTypes.DATE,\n        allowNull: false,\n        defaultValue: DataTypes.NOW,\n    },\n}, {\n    sequelize,\n    modelName: 'Product',\n    tableName: 'products',\n    timestamps: true,\n});\n\nexport default Product; "],
      names: ["Product", "Model", "getInventoryLevels", "Map", "getTotalStock", "init", "id", "type", "DataTypes", "INTEGER", "autoIncrement", "primaryKey", "name", "STRING", "allowNull", "sku", "unique", "barcode", "description", "TEXT", "basePrice", "DECIMAL", "retailPrice", "categoryId", "imageUrl", "isActive", "BOOLEAN", "defaultValue", "createdAt", "DATE", "NOW", "updatedAt", "sequelize", "modelName", "tableName", "timestamps"],
      mappings: ";;;;+BA8GA;;;eAAA;;;2BA9G2C;2DACrB;;;;;;AAmBtB,MAAMA,gBAAgBC,gBAAK;IAgBvB,yCAAyC;IACzC,MAAaC,qBAAmD;QAC5D,4DAA4D;QAC5D,2CAA2C;QAC3C,OAAO,IAAIC;IACf;IAEA,MAAaC,gBAAiC;QAC1C,kDAAkD;QAClD,OAAO;IACX;AACJ;AAEAJ,QAAQK,IAAI,CAAC;IACTC,IAAI;QACAC,MAAMC,oBAAS,CAACC,OAAO;QACvBC,eAAe;QACfC,YAAY;IAChB;IACAC,MAAM;QACFL,MAAMC,oBAAS,CAACK,MAAM;QACtBC,WAAW;IACf;IACAC,KAAK;QACDR,MAAMC,oBAAS,CAACK,MAAM;QACtBC,WAAW;QACXE,QAAQ;IACZ;IACAC,SAAS;QACLV,MAAMC,oBAAS,CAACK,MAAM;QACtBC,WAAW;IACf;IACAI,aAAa;QACTX,MAAMC,oBAAS,CAACW,IAAI;QACpBL,WAAW;IACf;IACAM,WAAW;QACPb,MAAMC,oBAAS,CAACa,OAAO,CAAC,IAAI;QAC5BP,WAAW;IACf;IACAQ,aAAa;QACTf,MAAMC,oBAAS,CAACa,OAAO,CAAC,IAAI;QAC5BP,WAAW;IACf;IACAS,YAAY;QACRhB,MAAMC,oBAAS,CAACC,OAAO;QACvBK,WAAW;IACf;IACAU,UAAU;QACNjB,MAAMC,oBAAS,CAACK,MAAM;QACtBC,WAAW;IACf;IACAW,UAAU;QACNlB,MAAMC,oBAAS,CAACkB,OAAO;QACvBZ,WAAW;QACXa,cAAc;IAClB;IACAC,WAAW;QACPrB,MAAMC,oBAAS,CAACqB,IAAI;QACpBf,WAAW;QACXa,cAAcnB,oBAAS,CAACsB,GAAG;IAC/B;IACAC,WAAW;QACPxB,MAAMC,oBAAS,CAACqB,IAAI;QACpBf,WAAW;QACXa,cAAcnB,oBAAS,CAACsB,GAAG;IAC/B;AACJ,GAAG;IACCE,WAAAA,WAAS;IACTC,WAAW;IACXC,WAAW;IACXC,YAAY;AAChB;MAEA,WAAenC"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "543c20d8c2c4afc0f0aea672963910433fcf93d8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1rjjbtugv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1rjjbtugv();
cov_1rjjbtugv().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1rjjbtugv().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1rjjbtugv().f[0]++;
    cov_1rjjbtugv().s[2]++;
    return _default;
  }
});
const _sequelize =
/* istanbul ignore next */
(cov_1rjjbtugv().s[3]++, require("sequelize"));
const _db =
/* istanbul ignore next */
(/*#__PURE__*/cov_1rjjbtugv().s[4]++, _interop_require_default(require("../db")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1rjjbtugv().f[1]++;
  cov_1rjjbtugv().s[5]++;
  return /* istanbul ignore next */(cov_1rjjbtugv().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1rjjbtugv().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1rjjbtugv().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1rjjbtugv().b[0][1]++, {
    default: obj
  });
}
class Product extends
/* istanbul ignore next */
(_sequelize.Model) {
  // Methods defined in the design document
  async getInventoryLevels() {
    /* istanbul ignore next */
    cov_1rjjbtugv().f[2]++;
    cov_1rjjbtugv().s[6]++;
    // This will be implemented to query the InventoryItem table
    // to get inventory levels across all shops
    return new Map();
  }
  async getTotalStock() {
    /* istanbul ignore next */
    cov_1rjjbtugv().f[3]++;
    cov_1rjjbtugv().s[7]++;
    // This will sum up all inventory across all shops
    return 0;
  }
}
/* istanbul ignore next */
cov_1rjjbtugv().s[8]++;
Product.init({
  id: {
    type: _sequelize.DataTypes.INTEGER,
    autoIncrement: true,
    primaryKey: true
  },
  name: {
    type: _sequelize.DataTypes.STRING,
    allowNull: false
  },
  sku: {
    type: _sequelize.DataTypes.STRING,
    allowNull: false,
    unique: true
  },
  barcode: {
    type: _sequelize.DataTypes.STRING,
    allowNull: true
  },
  description: {
    type: _sequelize.DataTypes.TEXT,
    allowNull: true
  },
  basePrice: {
    type: _sequelize.DataTypes.DECIMAL(10, 2),
    allowNull: false
  },
  retailPrice: {
    type: _sequelize.DataTypes.DECIMAL(10, 2),
    allowNull: false
  },
  categoryId: {
    type: _sequelize.DataTypes.INTEGER,
    allowNull: true
  },
  imageUrl: {
    type: _sequelize.DataTypes.STRING,
    allowNull: true
  },
  isActive: {
    type: _sequelize.DataTypes.BOOLEAN,
    allowNull: false,
    defaultValue: true
  },
  createdAt: {
    type: _sequelize.DataTypes.DATE,
    allowNull: false,
    defaultValue: _sequelize.DataTypes.NOW
  },
  updatedAt: {
    type: _sequelize.DataTypes.DATE,
    allowNull: false,
    defaultValue: _sequelize.DataTypes.NOW
  }
}, {
  sequelize: _db.default,
  modelName: "Product",
  tableName: "products",
  timestamps: true
});
const _default =
/* istanbul ignore next */
(cov_1rjjbtugv().s[9]++, Product);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGVmYXVsdCIsIlByb2R1Y3QiLCJfc2VxdWVsaXplIiwiTW9kZWwiLCJnZXRJbnZlbnRvcnlMZXZlbHMiLCJjb3ZfMXJqamJ0dWd2IiwiZiIsInMiLCJNYXAiLCJnZXRUb3RhbFN0b2NrIiwiaW5pdCIsImlkIiwidHlwZSIsIkRhdGFUeXBlcyIsIklOVEVHRVIiLCJhdXRvSW5jcmVtZW50IiwicHJpbWFyeUtleSIsIm5hbWUiLCJTVFJJTkciLCJhbGxvd051bGwiLCJza3UiLCJ1bmlxdWUiLCJiYXJjb2RlIiwiZGVzY3JpcHRpb24iLCJURVhUIiwiYmFzZVByaWNlIiwiREVDSU1BTCIsInJldGFpbFByaWNlIiwiY2F0ZWdvcnlJZCIsImltYWdlVXJsIiwiaXNBY3RpdmUiLCJCT09MRUFOIiwiZGVmYXVsdFZhbHVlIiwiY3JlYXRlZEF0IiwiREFURSIsIk5PVyIsInVwZGF0ZWRBdCIsInNlcXVlbGl6ZSIsIl9kYiIsImRlZmF1bHQiLCJtb2RlbE5hbWUiLCJ0YWJsZU5hbWUiLCJ0aW1lc3RhbXBzIl0sInNvdXJjZXMiOlsiL1VzZXJzL3NhY2hpbi9Eb2N1bWVudHMvbWQtc3BvcnRzLS9zcmMvbGliL21vZGVscy9Qcm9kdWN0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERhdGFUeXBlcywgTW9kZWwsIE9wdGlvbmFsIH0gZnJvbSAnc2VxdWVsaXplJztcbmltcG9ydCBzZXF1ZWxpemUgZnJvbSAnLi4vZGInO1xuXG5pbnRlcmZhY2UgUHJvZHVjdEF0dHJpYnV0ZXMge1xuICAgIGlkOiBudW1iZXI7XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIHNrdTogc3RyaW5nO1xuICAgIGJhcmNvZGU/OiBzdHJpbmc7XG4gICAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gICAgYmFzZVByaWNlOiBudW1iZXI7XG4gICAgcmV0YWlsUHJpY2U6IG51bWJlcjtcbiAgICBjYXRlZ29yeUlkPzogbnVtYmVyO1xuICAgIGltYWdlVXJsPzogc3RyaW5nO1xuICAgIGlzQWN0aXZlOiBib29sZWFuO1xuICAgIGNyZWF0ZWRBdDogRGF0ZTtcbiAgICB1cGRhdGVkQXQ6IERhdGU7XG59XG5cbmludGVyZmFjZSBQcm9kdWN0Q3JlYXRpb25BdHRyaWJ1dGVzIGV4dGVuZHMgT3B0aW9uYWw8UHJvZHVjdEF0dHJpYnV0ZXMsICdpZCcgfCAnY3JlYXRlZEF0JyB8ICd1cGRhdGVkQXQnIHwgJ2lzQWN0aXZlJz4geyB9XG5cbmNsYXNzIFByb2R1Y3QgZXh0ZW5kcyBNb2RlbDxQcm9kdWN0QXR0cmlidXRlcywgUHJvZHVjdENyZWF0aW9uQXR0cmlidXRlcz4gaW1wbGVtZW50cyBQcm9kdWN0QXR0cmlidXRlcyB7XG4gICAgcHVibGljIGlkITogbnVtYmVyO1xuICAgIHB1YmxpYyBuYW1lITogc3RyaW5nO1xuICAgIHB1YmxpYyBza3UhOiBzdHJpbmc7XG4gICAgcHVibGljIGJhcmNvZGUhOiBzdHJpbmc7XG4gICAgcHVibGljIGRlc2NyaXB0aW9uITogc3RyaW5nO1xuICAgIHB1YmxpYyBiYXNlUHJpY2UhOiBudW1iZXI7XG4gICAgcHVibGljIHJldGFpbFByaWNlITogbnVtYmVyO1xuICAgIHB1YmxpYyBjYXRlZ29yeUlkITogbnVtYmVyO1xuICAgIHB1YmxpYyBpbWFnZVVybCE6IHN0cmluZztcbiAgICBwdWJsaWMgaXNBY3RpdmUhOiBib29sZWFuO1xuXG4gICAgLy8gVGltZXN0YW1wc1xuICAgIHB1YmxpYyByZWFkb25seSBjcmVhdGVkQXQhOiBEYXRlO1xuICAgIHB1YmxpYyByZWFkb25seSB1cGRhdGVkQXQhOiBEYXRlO1xuXG4gICAgLy8gTWV0aG9kcyBkZWZpbmVkIGluIHRoZSBkZXNpZ24gZG9jdW1lbnRcbiAgICBwdWJsaWMgYXN5bmMgZ2V0SW52ZW50b3J5TGV2ZWxzKCk6IFByb21pc2U8TWFwPG51bWJlciwgbnVtYmVyPj4ge1xuICAgICAgICAvLyBUaGlzIHdpbGwgYmUgaW1wbGVtZW50ZWQgdG8gcXVlcnkgdGhlIEludmVudG9yeUl0ZW0gdGFibGVcbiAgICAgICAgLy8gdG8gZ2V0IGludmVudG9yeSBsZXZlbHMgYWNyb3NzIGFsbCBzaG9wc1xuICAgICAgICByZXR1cm4gbmV3IE1hcDxudW1iZXIsIG51bWJlcj4oKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgYXN5bmMgZ2V0VG90YWxTdG9jaygpOiBQcm9taXNlPG51bWJlcj4ge1xuICAgICAgICAvLyBUaGlzIHdpbGwgc3VtIHVwIGFsbCBpbnZlbnRvcnkgYWNyb3NzIGFsbCBzaG9wc1xuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG59XG5cblByb2R1Y3QuaW5pdCh7XG4gICAgaWQ6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgICAgIGF1dG9JbmNyZW1lbnQ6IHRydWUsXG4gICAgICAgIHByaW1hcnlLZXk6IHRydWUsXG4gICAgfSxcbiAgICBuYW1lOiB7XG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgfSxcbiAgICBza3U6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgICAgdW5pcXVlOiB0cnVlLFxuICAgIH0sXG4gICAgYmFyY29kZToge1xuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGw6IHRydWUsXG4gICAgfSxcbiAgICBkZXNjcmlwdGlvbjoge1xuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuVEVYVCxcbiAgICAgICAgYWxsb3dOdWxsOiB0cnVlLFxuICAgIH0sXG4gICAgYmFzZVByaWNlOiB7XG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5ERUNJTUFMKDEwLCAyKSxcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICB9LFxuICAgIHJldGFpbFByaWNlOiB7XG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5ERUNJTUFMKDEwLCAyKSxcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICB9LFxuICAgIGNhdGVnb3J5SWQ6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgICAgIGFsbG93TnVsbDogdHJ1ZSxcbiAgICB9LFxuICAgIGltYWdlVXJsOiB7XG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbDogdHJ1ZSxcbiAgICB9LFxuICAgIGlzQWN0aXZlOiB7XG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5CT09MRUFOLFxuICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgICBkZWZhdWx0VmFsdWU6IHRydWUsXG4gICAgfSxcbiAgICBjcmVhdGVkQXQ6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLkRBVEUsXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogRGF0YVR5cGVzLk5PVyxcbiAgICB9LFxuICAgIHVwZGF0ZWRBdDoge1xuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuREFURSxcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgICAgZGVmYXVsdFZhbHVlOiBEYXRhVHlwZXMuTk9XLFxuICAgIH0sXG59LCB7XG4gICAgc2VxdWVsaXplLFxuICAgIG1vZGVsTmFtZTogJ1Byb2R1Y3QnLFxuICAgIHRhYmxlTmFtZTogJ3Byb2R1Y3RzJyxcbiAgICB0aW1lc3RhbXBzOiB0cnVlLFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IFByb2R1Y3Q7ICJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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