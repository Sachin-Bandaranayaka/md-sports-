04643342a3077cab0fddd4b4ae468de1
/**
 * Transfer-specific Cache Service
 * Optimized caching for inventory transfer operations
 */"use strict";

/* istanbul ignore next */
function cov_w7wqil3xo() {
  var path = "/Users/sachin/Documents/md-sports-/src/lib/transferCache.ts";
  var hash = "01c2c12787229a725c02d7fc83e381264455b3cd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/lib/transferCache.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 37
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 36
        }
      },
      "6": {
        start: {
          line: 22,
          column: 17
        },
        end: {
          line: 22,
          column: 35
        }
      },
      "7": {
        start: {
          line: 23,
          column: 15
        },
        end: {
          line: 23,
          column: 33
        }
      },
      "8": {
        start: {
          line: 25,
          column: 30
        },
        end: {
          line: 38,
          column: 1
        }
      },
      "9": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 26
        }
      },
      "10": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 33
        }
      },
      "11": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 43
        }
      },
      "12": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 31
        }
      },
      "13": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 38
        }
      },
      "14": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "15": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 54,
          column: 13
        }
      },
      "16": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 71
        }
      },
      "17": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 77
        }
      },
      "18": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 82
        }
      },
      "19": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 60,
          column: 18
        }
      },
      "20": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 30
        }
      },
      "21": {
        start: {
          line: 63,
          column: 25
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "22": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 64
        }
      },
      "23": {
        start: {
          line: 66,
          column: 26
        },
        end: {
          line: 66,
          column: 64
        }
      },
      "24": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 67
        }
      },
      "25": {
        start: {
          line: 67,
          column: 27
        },
        end: {
          line: 67,
          column: 67
        }
      },
      "26": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 70
        }
      },
      "27": {
        start: {
          line: 68,
          column: 28
        },
        end: {
          line: 68,
          column: 70
        }
      },
      "28": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 79
        }
      },
      "29": {
        start: {
          line: 69,
          column: 34
        },
        end: {
          line: 69,
          column: 79
        }
      },
      "30": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 89
        }
      },
      "31": {
        start: {
          line: 70,
          column: 39
        },
        end: {
          line: 70,
          column: 89
        }
      },
      "32": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 90
        }
      },
      "33": {
        start: {
          line: 71,
          column: 28
        },
        end: {
          line: 71,
          column: 90
        }
      },
      "34": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 75
        }
      },
      "35": {
        start: {
          line: 72,
          column: 31
        },
        end: {
          line: 72,
          column: 75
        }
      },
      "36": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 69
        }
      },
      "37": {
        start: {
          line: 73,
          column: 29
        },
        end: {
          line: 73,
          column: 69
        }
      },
      "38": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 34
        }
      },
      "39": {
        start: {
          line: 77,
          column: 26
        },
        end: {
          line: 77,
          column: 43
        }
      },
      "40": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "41": {
        start: {
          line: 79,
          column: 23
        },
        end: {
          line: 79,
          column: 27
        }
      },
      "42": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 88,
          column: 13
        }
      },
      "43": {
        start: {
          line: 82,
          column: 31
        },
        end: {
          line: 82,
          column: 56
        }
      },
      "44": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 87,
          column: 17
        }
      },
      "45": {
        start: {
          line: 84,
          column: 20
        },
        end: {
          line: 84,
          column: 46
        }
      },
      "46": {
        start: {
          line: 85,
          column: 20
        },
        end: {
          line: 85,
          column: 81
        }
      },
      "47": {
        start: {
          line: 86,
          column: 20
        },
        end: {
          line: 86,
          column: 32
        }
      },
      "48": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 54
        }
      },
      "49": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 94,
          column: 13
        }
      },
      "50": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 77
        }
      },
      "51": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 28
        }
      },
      "52": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 74
        }
      },
      "53": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 24
        }
      },
      "54": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 62
        }
      },
      "55": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 74
        }
      },
      "56": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 24
        }
      },
      "57": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "58": {
        start: {
          line: 105,
          column: 31
        },
        end: {
          line: 105,
          column: 51
        }
      },
      "59": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 109,
          column: 13
        }
      },
      "60": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 61
        }
      },
      "61": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 58
        }
      },
      "62": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 62
        }
      },
      "63": {
        start: {
          line: 118,
          column: 23
        },
        end: {
          line: 118,
          column: 42
        }
      },
      "64": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "65": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 26
        }
      },
      "66": {
        start: {
          line: 123,
          column: 21
        },
        end: {
          line: 123,
          column: 36
        }
      },
      "67": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 39
        }
      },
      "68": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 20
        }
      },
      "69": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "70": {
        start: {
          line: 130,
          column: 29
        },
        end: {
          line: 133,
          column: 13
        }
      },
      "71": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 136,
          column: 13
        }
      },
      "72": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 93
        }
      },
      "73": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 141,
          column: 13
        }
      },
      "74": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 140,
          column: 19
        }
      },
      "75": {
        start: {
          line: 139,
          column: 20
        },
        end: {
          line: 139,
          column: 93
        }
      },
      "76": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 150,
          column: 13
        }
      },
      "77": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 149,
          column: 17
        }
      },
      "78": {
        start: {
          line: 145,
          column: 33
        },
        end: {
          line: 145,
          column: 63
        }
      },
      "79": {
        start: {
          line: 146,
          column: 20
        },
        end: {
          line: 148,
          column: 21
        }
      },
      "80": {
        start: {
          line: 147,
          column: 24
        },
        end: {
          line: 147,
          column: 54
        }
      },
      "81": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 154,
          column: 13
        }
      },
      "82": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 153,
          column: 69
        }
      },
      "83": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 93
        }
      },
      "84": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 71
        }
      },
      "85": {
        start: {
          line: 161,
          column: 25
        },
        end: {
          line: 161,
          column: 105
        }
      },
      "86": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 164,
          column: 9
        }
      },
      "87": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 19
        }
      },
      "88": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 45
        }
      },
      "89": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 174,
          column: 9
        }
      },
      "90": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 66
        }
      },
      "91": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 66
        }
      },
      "92": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 52
        }
      },
      "93": {
        start: {
          line: 177,
          column: 25
        },
        end: {
          line: 182,
          column: 9
        }
      },
      "94": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "95": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 28
        }
      },
      "96": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 30
        }
      },
      "97": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 33
        }
      },
      "98": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 133
        }
      },
      "99": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 40
        }
      },
      "100": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 44
        }
      },
      "101": {
        start: {
          line: 193,
          column: 37
        },
        end: {
          line: 193,
          column: 44
        }
      },
      "102": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 60
        }
      },
      "103": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 198,
          column: 11
        }
      },
      "104": {
        start: {
          line: 196,
          column: 28
        },
        end: {
          line: 196,
          column: 81
        }
      },
      "105": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 102
        }
      },
      "106": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 37
        }
      },
      "107": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 215,
          column: 9
        }
      },
      "108": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 210,
          column: 13
        }
      },
      "109": {
        start: {
          line: 206,
          column: 29
        },
        end: {
          line: 206,
          column: 65
        }
      },
      "110": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 209,
          column: 17
        }
      },
      "111": {
        start: {
          line: 208,
          column: 20
        },
        end: {
          line: 208,
          column: 50
        }
      },
      "112": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 71
        }
      },
      "113": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 56
        }
      },
      "114": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 67
        }
      },
      "115": {
        start: {
          line: 218,
          column: 29
        },
        end: {
          line: 218,
          column: 55
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 27
          },
          end: {
            line: 15,
            column: 28
          }
        },
        loc: {
          start: {
            line: 15,
            column: 38
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 26
          },
          end: {
            line: 18,
            column: 27
          }
        },
        loc: {
          start: {
            line: 18,
            column: 37
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        loc: {
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 40
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 22
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 47
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        loc: {
          start: {
            line: 57,
            column: 29
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 57
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 58,
            column: 20
          },
          end: {
            line: 58,
            column: 21
          }
        },
        loc: {
          start: {
            line: 58,
            column: 24
          },
          end: {
            line: 60,
            column: 9
          }
        },
        line: 58
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        loc: {
          start: {
            line: 62,
            column: 47
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 62
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 19
          },
          end: {
            line: 102,
            column: 5
          }
        },
        line: 76
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        },
        loc: {
          start: {
            line: 103,
            column: 72
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 103
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        loc: {
          start: {
            line: 116,
            column: 38
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 116
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        },
        loc: {
          start: {
            line: 128,
            column: 55
          },
          end: {
            line: 159,
            column: 5
          }
        },
        line: 128
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 138,
            column: 32
          },
          end: {
            line: 138,
            column: 33
          }
        },
        loc: {
          start: {
            line: 138,
            column: 42
          },
          end: {
            line: 140,
            column: 17
          }
        },
        line: 138
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 160,
            column: 4
          },
          end: {
            line: 160,
            column: 5
          }
        },
        loc: {
          start: {
            line: 160,
            column: 37
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 160
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        loc: {
          start: {
            line: 176,
            column: 42
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 176
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 192,
            column: 4
          },
          end: {
            line: 192,
            column: 5
          }
        },
        loc: {
          start: {
            line: 192,
            column: 17
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 192
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 195,
            column: 29
          },
          end: {
            line: 195,
            column: 30
          }
        },
        loc: {
          start: {
            line: 195,
            column: 44
          },
          end: {
            line: 198,
            column: 9
          }
        },
        line: 195
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        },
        loc: {
          start: {
            line: 200,
            column: 17
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 200
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        },
        loc: {
          start: {
            line: 203,
            column: 26
          },
          end: {
            line: 216,
            column: 5
          }
        },
        line: 203
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "1": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 66,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 66,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "2": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 67,
            column: 67
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 67,
            column: 67
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "3": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 68,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 68,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "4": {
        loc: {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 69,
            column: 79
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 69,
            column: 79
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "5": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 70,
            column: 89
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 70,
            column: 89
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "6": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 71,
            column: 90
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 71,
            column: 90
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "7": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 72,
            column: 75
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 72,
            column: 75
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "8": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 73,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 73,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "9": {
        loc: {
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "10": {
        loc: {
          start: {
            line: 83,
            column: 16
          },
          end: {
            line: 87,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 16
          },
          end: {
            line: 87,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "11": {
        loc: {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "12": {
        loc: {
          start: {
            line: 103,
            column: 25
          },
          end: {
            line: 103,
            column: 70
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 103,
            column: 31
          },
          end: {
            line: 103,
            column: 70
          }
        }],
        line: 103
      },
      "13": {
        loc: {
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "14": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "15": {
        loc: {
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 136,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 136,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "16": {
        loc: {
          start: {
            line: 137,
            column: 12
          },
          end: {
            line: 141,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 12
          },
          end: {
            line: 141,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "17": {
        loc: {
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 150,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 150,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "18": {
        loc: {
          start: {
            line: 146,
            column: 20
          },
          end: {
            line: 148,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 20
          },
          end: {
            line: 148,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "19": {
        loc: {
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "20": {
        loc: {
          start: {
            line: 177,
            column: 25
          },
          end: {
            line: 182,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 25
          },
          end: {
            line: 177,
            column: 46
          }
        }, {
          start: {
            line: 177,
            column: 50
          },
          end: {
            line: 182,
            column: 9
          }
        }],
        line: 177
      },
      "21": {
        loc: {
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 187,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 187,
            column: 9
          }
        }, {
          start: {
            line: 185,
            column: 15
          },
          end: {
            line: 187,
            column: 9
          }
        }],
        line: 183
      },
      "22": {
        loc: {
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 193,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 193,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "23": {
        loc: {
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 210,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 210,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "24": {
        loc: {
          start: {
            line: 207,
            column: 16
          },
          end: {
            line: 209,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 16
          },
          end: {
            line: 209,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/lib/transferCache.ts"],
      sourcesContent: ["/**\n * Transfer-specific Cache Service\n * Optimized caching for inventory transfer operations\n */\n\nimport { Redis } from 'ioredis';\nimport { cacheService } from './cache';\n\n// Cache configuration for transfers\nconst TRANSFER_CACHE_CONFIG = {\n  TTL: {\n    TRANSFER_LIST: 300,     // 5 minutes\n    TRANSFER_DETAIL: 600,   // 10 minutes\n    SHOP_INVENTORY: 180,    // 3 minutes\n    TRANSFER_STATS: 900     // 15 minutes\n  },\n  KEYS: {\n    TRANSFER_LIST: 'transfers:list',\n    TRANSFER_DETAIL: 'transfers:detail',\n    SHOP_INVENTORY: 'inventory:shop',\n    TRANSFER_STATS: 'transfers:stats'\n  }\n};\n\ninterface TransferFilters {\n  page?: number;\n  limit?: number;\n  status?: string;\n  sourceShopId?: number;\n  destinationShopId?: number;\n  search?: string;\n  startDate?: string;\n  endDate?: string;\n}\n\ninterface CacheMetrics {\n  hits: number;\n  misses: number;\n  totalRequests: number;\n  avgResponseTime: number;\n}\n\nclass TransferCacheService {\n  private redis: Redis | null = null;\n  private metrics: Map<string, CacheMetrics> = new Map();\n  private warmingInProgress: Set<string> = new Set();\n\n  constructor() {\n    this.initializeRedis();\n    this.startMetricsCollection();\n  }\n\n  private initializeRedis() {\n    if (process.env.REDIS_URL) {\n      try {\n        this.redis = new Redis(process.env.REDIS_URL);\n        console.log('\u2713 Transfer cache Redis connection established');\n      } catch (error) {\n        console.error('\u2717 Transfer cache Redis connection failed:', error);\n      }\n    }\n  }\n\n  private startMetricsCollection() {\n    setInterval(() => {\n      this.logMetrics();\n    }, 60000); // Log metrics every minute\n  }\n\n  generateTransferCacheKey(baseKey: string, filters: TransferFilters): string {\n    const keyParts = [baseKey];\n\n    if (filters.page) keyParts.push(`page:${filters.page}`);\n    if (filters.limit) keyParts.push(`limit:${filters.limit}`);\n    if (filters.status) keyParts.push(`status:${filters.status}`);\n    if (filters.sourceShopId) keyParts.push(`src:${filters.sourceShopId}`);\n    if (filters.destinationShopId) keyParts.push(`dst:${filters.destinationShopId}`);\n    if (filters.search) keyParts.push(`search:${encodeURIComponent(filters.search)}`);\n    if (filters.startDate) keyParts.push(`start:${filters.startDate}`);\n    if (filters.endDate) keyParts.push(`end:${filters.endDate}`);\n\n    return keyParts.join(':');\n  }\n\n  async get<T>(key: string): Promise<T | null> {\n    const startTime = performance.now();\n\n    try {\n      let data: T | null = null;\n\n      // Try Redis first\n      if (this.redis) {\n        const cached = await this.redis.get(key);\n        if (cached) {\n          data = JSON.parse(cached);\n          this.recordMetric(key, 'hit', performance.now() - startTime);\n          return data;\n        }\n      }\n\n      // Fallback to memory cache\n      data = await cacheService.get(key);\n      if (data) {\n        this.recordMetric(key, 'hit', performance.now() - startTime);\n        return data;\n      }\n\n      this.recordMetric(key, 'miss', performance.now() - startTime);\n      return null;\n    } catch (error) {\n      console.error('Transfer cache get error:', error);\n      this.recordMetric(key, 'miss', performance.now() - startTime);\n      return null;\n    }\n  }\n\n  async set<T>(key: string, data: T, ttl: number = TRANSFER_CACHE_CONFIG.TTL.TRANSFER_LIST): Promise<void> {\n    try {\n      const serialized = JSON.stringify(data);\n\n      // Store in Redis\n      if (this.redis) {\n        await this.redis.setex(key, ttl, serialized);\n      }\n\n      // Store in memory cache as fallback\n      await cacheService.set(key, data, ttl);\n\n    } catch (error) {\n      console.error('Transfer cache set error:', error);\n    }\n  }\n\n  async getOrSet<T>(\n    key: string,\n    fetcher: () => Promise<T>,\n    ttl?: number\n  ): Promise<T> {\n    // Try to get from cache first\n    const cached = await this.get<T>(key);\n    if (cached !== null) {\n      return cached;\n    }\n\n    // Fetch fresh data\n    const data = await fetcher();\n\n    // Store in cache\n    await this.set(key, data, ttl);\n\n    return data;\n  }\n\n  async invalidateTransferCache(transferId?: number, shopIds?: number[]): Promise<void> {\n    try {\n      const patterns = [\n        `${TRANSFER_CACHE_CONFIG.KEYS.TRANSFER_LIST}*`,\n        `${TRANSFER_CACHE_CONFIG.KEYS.TRANSFER_STATS}*`\n      ];\n\n      if (transferId) {\n        patterns.push(`${TRANSFER_CACHE_CONFIG.KEYS.TRANSFER_DETAIL}:${transferId}`);\n      }\n\n      if (shopIds) {\n        shopIds.forEach(shopId => {\n          patterns.push(`${TRANSFER_CACHE_CONFIG.KEYS.SHOP_INVENTORY}:${shopId}*`);\n        });\n      }\n\n      // Invalidate Redis cache\n      if (this.redis) {\n        for (const pattern of patterns) {\n          const keys = await this.redis.keys(pattern);\n          if (keys.length > 0) {\n            await this.redis.del(...keys);\n          }\n        }\n      }\n\n      // Invalidate memory cache\n      for (const pattern of patterns) {\n        await cacheService.invalidatePattern(pattern);\n      }\n\n      console.log(`\u2713 Invalidated transfer cache for patterns: ${patterns.join(', ')}`);\n    } catch (error) {\n      console.error('Transfer cache invalidation error:', error);\n    }\n  }\n\n  async warmTransferCache(filters: TransferFilters): Promise<void> {\n    const cacheKey = this.generateTransferCacheKey(TRANSFER_CACHE_CONFIG.KEYS.TRANSFER_LIST, filters);\n\n    if (this.warmingInProgress.has(cacheKey)) {\n      return;\n    }\n\n    this.warmingInProgress.add(cacheKey);\n\n    try {\n      // This would be implemented with actual transfer fetching logic\n      console.log(`\uD83D\uDD25 Warming transfer cache: ${cacheKey}`);\n      // await this.fetchTransfersFromDB(filters);\n    } catch (error) {\n      console.error('Transfer cache warming error:', error);\n    } finally {\n      this.warmingInProgress.delete(cacheKey);\n    }\n  }\n\n  private recordMetric(key: string, type: 'hit' | 'miss', responseTime: number): void {\n    const existing = this.metrics.get(key) || {\n      hits: 0,\n      misses: 0,\n      totalRequests: 0,\n      avgResponseTime: 0\n    };\n\n    if (type === 'hit') {\n      existing.hits++;\n    } else {\n      existing.misses++;\n    }\n\n    existing.totalRequests++;\n    existing.avgResponseTime = (\n      (existing.avgResponseTime * (existing.totalRequests - 1)) + responseTime\n    ) / existing.totalRequests;\n\n    this.metrics.set(key, existing);\n  }\n\n  private logMetrics(): void {\n    if (this.metrics.size === 0) return;\n\n    console.log('\uD83D\uDCCA Transfer Cache Metrics:');\n    this.metrics.forEach((metric, key) => {\n      const hitRate = (metric.hits / metric.totalRequests * 100).toFixed(2);\n      console.log(`  ${key}: ${hitRate}% hit rate, ${metric.avgResponseTime.toFixed(2)}ms avg`);\n    });\n  }\n\n  getMetrics(): Map<string, CacheMetrics> {\n    return new Map(this.metrics);\n  }\n\n  async clearAllCache(): Promise<void> {\n    try {\n      if (this.redis) {\n        const keys = await this.redis.keys('transfers:*');\n        if (keys.length > 0) {\n          await this.redis.del(...keys);\n        }\n      }\n\n      await cacheService.invalidatePattern('transfers:*');\n      console.log('\u2713 Cleared all transfer cache');\n    } catch (error) {\n      console.error('Error clearing transfer cache:', error);\n    }\n  }\n}\n\nexport const transferCacheService = new TransferCacheService();\nexport { TRANSFER_CACHE_CONFIG, TransferFilters, CacheMetrics };"],
      names: ["TRANSFER_CACHE_CONFIG", "transferCacheService", "TTL", "TRANSFER_LIST", "TRANSFER_DETAIL", "SHOP_INVENTORY", "TRANSFER_STATS", "KEYS", "TransferCacheService", "constructor", "redis", "metrics", "Map", "warmingInProgress", "Set", "initializeRedis", "startMetricsCollection", "process", "env", "REDIS_URL", "Redis", "console", "log", "error", "setInterval", "logMetrics", "generateTransferCacheKey", "baseKey", "filters", "keyParts", "page", "push", "limit", "status", "sourceShopId", "destinationShopId", "search", "encodeURIComponent", "startDate", "endDate", "join", "get", "key", "startTime", "performance", "now", "data", "cached", "JSON", "parse", "recordMetric", "cacheService", "set", "ttl", "serialized", "stringify", "setex", "getOrSet", "fetcher", "invalidateTransferCache", "transferId", "shopIds", "patterns", "forEach", "shopId", "pattern", "keys", "length", "del", "invalidatePattern", "warmTransferCache", "cacheKey", "has", "add", "delete", "type", "responseTime", "existing", "hits", "misses", "totalRequests", "avgResponseTime", "size", "metric", "hitRate", "toFixed", "getMetrics", "clearAllCache"],
      mappings: "AAAA;;;CAGC;;;;;;;;;;;IAsQQA,qBAAqB;eAArBA;;IADIC,oBAAoB;eAApBA;;;yBAnQS;uBACO;AAE7B,oCAAoC;AACpC,MAAMD,wBAAwB;IAC5BE,KAAK;QACHC,eAAe;QACfC,iBAAiB;QACjBC,gBAAgB;QAChBC,gBAAgB,IAAQ,aAAa;IACvC;IACAC,MAAM;QACJJ,eAAe;QACfC,iBAAiB;QACjBC,gBAAgB;QAChBC,gBAAgB;IAClB;AACF;AAoBA,MAAME;IAKJC,aAAc;aAJNC,QAAsB;aACtBC,UAAqC,IAAIC;aACzCC,oBAAiC,IAAIC;QAG3C,IAAI,CAACC,eAAe;QACpB,IAAI,CAACC,sBAAsB;IAC7B;IAEQD,kBAAkB;QACxB,IAAIE,QAAQC,GAAG,CAACC,SAAS,EAAE;YACzB,IAAI;gBACF,IAAI,CAACT,KAAK,GAAG,IAAIU,cAAK,CAACH,QAAQC,GAAG,CAACC,SAAS;gBAC5CE,QAAQC,GAAG,CAAC;YACd,EAAE,OAAOC,OAAO;gBACdF,QAAQE,KAAK,CAAC,6CAA6CA;YAC7D;QACF;IACF;IAEQP,yBAAyB;QAC/BQ,YAAY;YACV,IAAI,CAACC,UAAU;QACjB,GAAG,QAAQ,2BAA2B;IACxC;IAEAC,yBAAyBC,OAAe,EAAEC,OAAwB,EAAU;QAC1E,MAAMC,WAAW;YAACF;SAAQ;QAE1B,IAAIC,QAAQE,IAAI,EAAED,SAASE,IAAI,CAAC,CAAC,KAAK,EAAEH,QAAQE,IAAI,CAAC,CAAC;QACtD,IAAIF,QAAQI,KAAK,EAAEH,SAASE,IAAI,CAAC,CAAC,MAAM,EAAEH,QAAQI,KAAK,CAAC,CAAC;QACzD,IAAIJ,QAAQK,MAAM,EAAEJ,SAASE,IAAI,CAAC,CAAC,OAAO,EAAEH,QAAQK,MAAM,CAAC,CAAC;QAC5D,IAAIL,QAAQM,YAAY,EAAEL,SAASE,IAAI,CAAC,CAAC,IAAI,EAAEH,QAAQM,YAAY,CAAC,CAAC;QACrE,IAAIN,QAAQO,iBAAiB,EAAEN,SAASE,IAAI,CAAC,CAAC,IAAI,EAAEH,QAAQO,iBAAiB,CAAC,CAAC;QAC/E,IAAIP,QAAQQ,MAAM,EAAEP,SAASE,IAAI,CAAC,CAAC,OAAO,EAAEM,mBAAmBT,QAAQQ,MAAM,EAAE,CAAC;QAChF,IAAIR,QAAQU,SAAS,EAAET,SAASE,IAAI,CAAC,CAAC,MAAM,EAAEH,QAAQU,SAAS,CAAC,CAAC;QACjE,IAAIV,QAAQW,OAAO,EAAEV,SAASE,IAAI,CAAC,CAAC,IAAI,EAAEH,QAAQW,OAAO,CAAC,CAAC;QAE3D,OAAOV,SAASW,IAAI,CAAC;IACvB;IAEA,MAAMC,IAAOC,GAAW,EAAqB;QAC3C,MAAMC,YAAYC,YAAYC,GAAG;QAEjC,IAAI;YACF,IAAIC,OAAiB;YAErB,kBAAkB;YAClB,IAAI,IAAI,CAACpC,KAAK,EAAE;gBACd,MAAMqC,SAAS,MAAM,IAAI,CAACrC,KAAK,CAAC+B,GAAG,CAACC;gBACpC,IAAIK,QAAQ;oBACVD,OAAOE,KAAKC,KAAK,CAACF;oBAClB,IAAI,CAACG,YAAY,CAACR,KAAK,OAAOE,YAAYC,GAAG,KAAKF;oBAClD,OAAOG;gBACT;YACF;YAEA,2BAA2B;YAC3BA,OAAO,MAAMK,mBAAY,CAACV,GAAG,CAACC;YAC9B,IAAII,MAAM;gBACR,IAAI,CAACI,YAAY,CAACR,KAAK,OAAOE,YAAYC,GAAG,KAAKF;gBAClD,OAAOG;YACT;YAEA,IAAI,CAACI,YAAY,CAACR,KAAK,QAAQE,YAAYC,GAAG,KAAKF;YACnD,OAAO;QACT,EAAE,OAAOpB,OAAO;YACdF,QAAQE,KAAK,CAAC,6BAA6BA;YAC3C,IAAI,CAAC2B,YAAY,CAACR,KAAK,QAAQE,YAAYC,GAAG,KAAKF;YACnD,OAAO;QACT;IACF;IAEA,MAAMS,IAAOV,GAAW,EAAEI,IAAO,EAAEO,MAAcrD,sBAAsBE,GAAG,CAACC,aAAa,EAAiB;QACvG,IAAI;YACF,MAAMmD,aAAaN,KAAKO,SAAS,CAACT;YAElC,iBAAiB;YACjB,IAAI,IAAI,CAACpC,KAAK,EAAE;gBACd,MAAM,IAAI,CAACA,KAAK,CAAC8C,KAAK,CAACd,KAAKW,KAAKC;YACnC;YAEA,oCAAoC;YACpC,MAAMH,mBAAY,CAACC,GAAG,CAACV,KAAKI,MAAMO;QAEpC,EAAE,OAAO9B,OAAO;YACdF,QAAQE,KAAK,CAAC,6BAA6BA;QAC7C;IACF;IAEA,MAAMkC,SACJf,GAAW,EACXgB,OAAyB,EACzBL,GAAY,EACA;QACZ,8BAA8B;QAC9B,MAAMN,SAAS,MAAM,IAAI,CAACN,GAAG,CAAIC;QACjC,IAAIK,WAAW,MAAM;YACnB,OAAOA;QACT;QAEA,mBAAmB;QACnB,MAAMD,OAAO,MAAMY;QAEnB,iBAAiB;QACjB,MAAM,IAAI,CAACN,GAAG,CAACV,KAAKI,MAAMO;QAE1B,OAAOP;IACT;IAEA,MAAMa,wBAAwBC,UAAmB,EAAEC,OAAkB,EAAiB;QACpF,IAAI;YACF,MAAMC,WAAW;gBACf,CAAC,EAAE9D,sBAAsBO,IAAI,CAACJ,aAAa,CAAC,CAAC,CAAC;gBAC9C,CAAC,EAAEH,sBAAsBO,IAAI,CAACD,cAAc,CAAC,CAAC,CAAC;aAChD;YAED,IAAIsD,YAAY;gBACdE,SAAS/B,IAAI,CAAC,CAAC,EAAE/B,sBAAsBO,IAAI,CAACH,eAAe,CAAC,CAAC,EAAEwD,WAAW,CAAC;YAC7E;YAEA,IAAIC,SAAS;gBACXA,QAAQE,OAAO,CAACC,CAAAA;oBACdF,SAAS/B,IAAI,CAAC,CAAC,EAAE/B,sBAAsBO,IAAI,CAACF,cAAc,CAAC,CAAC,EAAE2D,OAAO,CAAC,CAAC;gBACzE;YACF;YAEA,yBAAyB;YACzB,IAAI,IAAI,CAACtD,KAAK,EAAE;gBACd,KAAK,MAAMuD,WAAWH,SAAU;oBAC9B,MAAMI,OAAO,MAAM,IAAI,CAACxD,KAAK,CAACwD,IAAI,CAACD;oBACnC,IAAIC,KAAKC,MAAM,GAAG,GAAG;wBACnB,MAAM,IAAI,CAACzD,KAAK,CAAC0D,GAAG,IAAIF;oBAC1B;gBACF;YACF;YAEA,0BAA0B;YAC1B,KAAK,MAAMD,WAAWH,SAAU;gBAC9B,MAAMX,mBAAY,CAACkB,iBAAiB,CAACJ;YACvC;YAEA5C,QAAQC,GAAG,CAAC,CAAC,2CAA2C,EAAEwC,SAAStB,IAAI,CAAC,MAAM,CAAC;QACjF,EAAE,OAAOjB,OAAO;YACdF,QAAQE,KAAK,CAAC,sCAAsCA;QACtD;IACF;IAEA,MAAM+C,kBAAkB1C,OAAwB,EAAiB;QAC/D,MAAM2C,WAAW,IAAI,CAAC7C,wBAAwB,CAAC1B,sBAAsBO,IAAI,CAACJ,aAAa,EAAEyB;QAEzF,IAAI,IAAI,CAACf,iBAAiB,CAAC2D,GAAG,CAACD,WAAW;YACxC;QACF;QAEA,IAAI,CAAC1D,iBAAiB,CAAC4D,GAAG,CAACF;QAE3B,IAAI;YACF,gEAAgE;YAChElD,QAAQC,GAAG,CAAC,CAAC,2BAA2B,EAAEiD,SAAS,CAAC;QACpD,4CAA4C;QAC9C,EAAE,OAAOhD,OAAO;YACdF,QAAQE,KAAK,CAAC,iCAAiCA;QACjD,SAAU;YACR,IAAI,CAACV,iBAAiB,CAAC6D,MAAM,CAACH;QAChC;IACF;IAEQrB,aAAaR,GAAW,EAAEiC,IAAoB,EAAEC,YAAoB,EAAQ;QAClF,MAAMC,WAAW,IAAI,CAAClE,OAAO,CAAC8B,GAAG,CAACC,QAAQ;YACxCoC,MAAM;YACNC,QAAQ;YACRC,eAAe;YACfC,iBAAiB;QACnB;QAEA,IAAIN,SAAS,OAAO;YAClBE,SAASC,IAAI;QACf,OAAO;YACLD,SAASE,MAAM;QACjB;QAEAF,SAASG,aAAa;QACtBH,SAASI,eAAe,GAAG,AACzB,CAAA,AAACJ,SAASI,eAAe,GAAIJ,CAAAA,SAASG,aAAa,GAAG,CAAA,IAAMJ,YAAW,IACrEC,SAASG,aAAa;QAE1B,IAAI,CAACrE,OAAO,CAACyC,GAAG,CAACV,KAAKmC;IACxB;IAEQpD,aAAmB;QACzB,IAAI,IAAI,CAACd,OAAO,CAACuE,IAAI,KAAK,GAAG;QAE7B7D,QAAQC,GAAG,CAAC;QACZ,IAAI,CAACX,OAAO,CAACoD,OAAO,CAAC,CAACoB,QAAQzC;YAC5B,MAAM0C,UAAU,AAACD,CAAAA,OAAOL,IAAI,GAAGK,OAAOH,aAAa,GAAG,GAAE,EAAGK,OAAO,CAAC;YACnEhE,QAAQC,GAAG,CAAC,CAAC,EAAE,EAAEoB,IAAI,EAAE,EAAE0C,QAAQ,YAAY,EAAED,OAAOF,eAAe,CAACI,OAAO,CAAC,GAAG,MAAM,CAAC;QAC1F;IACF;IAEAC,aAAwC;QACtC,OAAO,IAAI1E,IAAI,IAAI,CAACD,OAAO;IAC7B;IAEA,MAAM4E,gBAA+B;QACnC,IAAI;YACF,IAAI,IAAI,CAAC7E,KAAK,EAAE;gBACd,MAAMwD,OAAO,MAAM,IAAI,CAACxD,KAAK,CAACwD,IAAI,CAAC;gBACnC,IAAIA,KAAKC,MAAM,GAAG,GAAG;oBACnB,MAAM,IAAI,CAACzD,KAAK,CAAC0D,GAAG,IAAIF;gBAC1B;YACF;YAEA,MAAMf,mBAAY,CAACkB,iBAAiB,CAAC;YACrChD,QAAQC,GAAG,CAAC;QACd,EAAE,OAAOC,OAAO;YACdF,QAAQE,KAAK,CAAC,kCAAkCA;QAClD;IACF;AACF;AAEO,MAAMtB,uBAAuB,IAAIO"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "01c2c12787229a725c02d7fc83e381264455b3cd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_w7wqil3xo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_w7wqil3xo();
cov_w7wqil3xo().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_w7wqil3xo().f[0]++;
  cov_w7wqil3xo().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_w7wqil3xo().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_w7wqil3xo().s[3]++;
_export(exports, {
  TRANSFER_CACHE_CONFIG: function () {
    /* istanbul ignore next */
    cov_w7wqil3xo().f[1]++;
    cov_w7wqil3xo().s[4]++;
    return TRANSFER_CACHE_CONFIG;
  },
  transferCacheService: function () {
    /* istanbul ignore next */
    cov_w7wqil3xo().f[2]++;
    cov_w7wqil3xo().s[5]++;
    return transferCacheService;
  }
});
const _ioredis =
/* istanbul ignore next */
(cov_w7wqil3xo().s[6]++, require("ioredis"));
const _cache =
/* istanbul ignore next */
(cov_w7wqil3xo().s[7]++, require("./cache"));
// Cache configuration for transfers
const TRANSFER_CACHE_CONFIG =
/* istanbul ignore next */
(cov_w7wqil3xo().s[8]++, {
  TTL: {
    TRANSFER_LIST: 300,
    TRANSFER_DETAIL: 600,
    SHOP_INVENTORY: 180,
    TRANSFER_STATS: 900 // 15 minutes
  },
  KEYS: {
    TRANSFER_LIST: "transfers:list",
    TRANSFER_DETAIL: "transfers:detail",
    SHOP_INVENTORY: "inventory:shop",
    TRANSFER_STATS: "transfers:stats"
  }
});
class TransferCacheService {
  constructor() {
    /* istanbul ignore next */
    cov_w7wqil3xo().f[3]++;
    cov_w7wqil3xo().s[9]++;
    this.redis = null;
    /* istanbul ignore next */
    cov_w7wqil3xo().s[10]++;
    this.metrics = new Map();
    /* istanbul ignore next */
    cov_w7wqil3xo().s[11]++;
    this.warmingInProgress = new Set();
    /* istanbul ignore next */
    cov_w7wqil3xo().s[12]++;
    this.initializeRedis();
    /* istanbul ignore next */
    cov_w7wqil3xo().s[13]++;
    this.startMetricsCollection();
  }
  initializeRedis() {
    /* istanbul ignore next */
    cov_w7wqil3xo().f[4]++;
    cov_w7wqil3xo().s[14]++;
    if (process.env.REDIS_URL) {
      /* istanbul ignore next */
      cov_w7wqil3xo().b[0][0]++;
      cov_w7wqil3xo().s[15]++;
      try {
        /* istanbul ignore next */
        cov_w7wqil3xo().s[16]++;
        this.redis = new _ioredis.Redis(process.env.REDIS_URL);
        /* istanbul ignore next */
        cov_w7wqil3xo().s[17]++;
        console.log("✓ Transfer cache Redis connection established");
      } catch (error) {
        /* istanbul ignore next */
        cov_w7wqil3xo().s[18]++;
        console.error("✗ Transfer cache Redis connection failed:", error);
      }
    } else
    /* istanbul ignore next */
    {
      cov_w7wqil3xo().b[0][1]++;
    }
  }
  startMetricsCollection() {
    /* istanbul ignore next */
    cov_w7wqil3xo().f[5]++;
    cov_w7wqil3xo().s[19]++;
    setInterval(() => {
      /* istanbul ignore next */
      cov_w7wqil3xo().f[6]++;
      cov_w7wqil3xo().s[20]++;
      this.logMetrics();
    }, 60000); // Log metrics every minute
  }
  generateTransferCacheKey(baseKey, filters) {
    /* istanbul ignore next */
    cov_w7wqil3xo().f[7]++;
    const keyParts =
    /* istanbul ignore next */
    (cov_w7wqil3xo().s[21]++, [baseKey]);
    /* istanbul ignore next */
    cov_w7wqil3xo().s[22]++;
    if (filters.page) {
      /* istanbul ignore next */
      cov_w7wqil3xo().b[1][0]++;
      cov_w7wqil3xo().s[23]++;
      keyParts.push(`page:${filters.page}`);
    } else
    /* istanbul ignore next */
    {
      cov_w7wqil3xo().b[1][1]++;
    }
    cov_w7wqil3xo().s[24]++;
    if (filters.limit) {
      /* istanbul ignore next */
      cov_w7wqil3xo().b[2][0]++;
      cov_w7wqil3xo().s[25]++;
      keyParts.push(`limit:${filters.limit}`);
    } else
    /* istanbul ignore next */
    {
      cov_w7wqil3xo().b[2][1]++;
    }
    cov_w7wqil3xo().s[26]++;
    if (filters.status) {
      /* istanbul ignore next */
      cov_w7wqil3xo().b[3][0]++;
      cov_w7wqil3xo().s[27]++;
      keyParts.push(`status:${filters.status}`);
    } else
    /* istanbul ignore next */
    {
      cov_w7wqil3xo().b[3][1]++;
    }
    cov_w7wqil3xo().s[28]++;
    if (filters.sourceShopId) {
      /* istanbul ignore next */
      cov_w7wqil3xo().b[4][0]++;
      cov_w7wqil3xo().s[29]++;
      keyParts.push(`src:${filters.sourceShopId}`);
    } else
    /* istanbul ignore next */
    {
      cov_w7wqil3xo().b[4][1]++;
    }
    cov_w7wqil3xo().s[30]++;
    if (filters.destinationShopId) {
      /* istanbul ignore next */
      cov_w7wqil3xo().b[5][0]++;
      cov_w7wqil3xo().s[31]++;
      keyParts.push(`dst:${filters.destinationShopId}`);
    } else
    /* istanbul ignore next */
    {
      cov_w7wqil3xo().b[5][1]++;
    }
    cov_w7wqil3xo().s[32]++;
    if (filters.search) {
      /* istanbul ignore next */
      cov_w7wqil3xo().b[6][0]++;
      cov_w7wqil3xo().s[33]++;
      keyParts.push(`search:${encodeURIComponent(filters.search)}`);
    } else
    /* istanbul ignore next */
    {
      cov_w7wqil3xo().b[6][1]++;
    }
    cov_w7wqil3xo().s[34]++;
    if (filters.startDate) {
      /* istanbul ignore next */
      cov_w7wqil3xo().b[7][0]++;
      cov_w7wqil3xo().s[35]++;
      keyParts.push(`start:${filters.startDate}`);
    } else
    /* istanbul ignore next */
    {
      cov_w7wqil3xo().b[7][1]++;
    }
    cov_w7wqil3xo().s[36]++;
    if (filters.endDate) {
      /* istanbul ignore next */
      cov_w7wqil3xo().b[8][0]++;
      cov_w7wqil3xo().s[37]++;
      keyParts.push(`end:${filters.endDate}`);
    } else
    /* istanbul ignore next */
    {
      cov_w7wqil3xo().b[8][1]++;
    }
    cov_w7wqil3xo().s[38]++;
    return keyParts.join(":");
  }
  async get(key) {
    /* istanbul ignore next */
    cov_w7wqil3xo().f[8]++;
    const startTime =
    /* istanbul ignore next */
    (cov_w7wqil3xo().s[39]++, performance.now());
    /* istanbul ignore next */
    cov_w7wqil3xo().s[40]++;
    try {
      let data =
      /* istanbul ignore next */
      (cov_w7wqil3xo().s[41]++, null);
      // Try Redis first
      /* istanbul ignore next */
      cov_w7wqil3xo().s[42]++;
      if (this.redis) {
        /* istanbul ignore next */
        cov_w7wqil3xo().b[9][0]++;
        const cached =
        /* istanbul ignore next */
        (cov_w7wqil3xo().s[43]++, await this.redis.get(key));
        /* istanbul ignore next */
        cov_w7wqil3xo().s[44]++;
        if (cached) {
          /* istanbul ignore next */
          cov_w7wqil3xo().b[10][0]++;
          cov_w7wqil3xo().s[45]++;
          data = JSON.parse(cached);
          /* istanbul ignore next */
          cov_w7wqil3xo().s[46]++;
          this.recordMetric(key, "hit", performance.now() - startTime);
          /* istanbul ignore next */
          cov_w7wqil3xo().s[47]++;
          return data;
        } else
        /* istanbul ignore next */
        {
          cov_w7wqil3xo().b[10][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_w7wqil3xo().b[9][1]++;
      }
      // Fallback to memory cache
      cov_w7wqil3xo().s[48]++;
      data = await _cache.cacheService.get(key);
      /* istanbul ignore next */
      cov_w7wqil3xo().s[49]++;
      if (data) {
        /* istanbul ignore next */
        cov_w7wqil3xo().b[11][0]++;
        cov_w7wqil3xo().s[50]++;
        this.recordMetric(key, "hit", performance.now() - startTime);
        /* istanbul ignore next */
        cov_w7wqil3xo().s[51]++;
        return data;
      } else
      /* istanbul ignore next */
      {
        cov_w7wqil3xo().b[11][1]++;
      }
      cov_w7wqil3xo().s[52]++;
      this.recordMetric(key, "miss", performance.now() - startTime);
      /* istanbul ignore next */
      cov_w7wqil3xo().s[53]++;
      return null;
    } catch (error) {
      /* istanbul ignore next */
      cov_w7wqil3xo().s[54]++;
      console.error("Transfer cache get error:", error);
      /* istanbul ignore next */
      cov_w7wqil3xo().s[55]++;
      this.recordMetric(key, "miss", performance.now() - startTime);
      /* istanbul ignore next */
      cov_w7wqil3xo().s[56]++;
      return null;
    }
  }
  async set(key, data, ttl =
  /* istanbul ignore next */
  (cov_w7wqil3xo().b[12][0]++, TRANSFER_CACHE_CONFIG.TTL.TRANSFER_LIST)) {
    /* istanbul ignore next */
    cov_w7wqil3xo().f[9]++;
    cov_w7wqil3xo().s[57]++;
    try {
      const serialized =
      /* istanbul ignore next */
      (cov_w7wqil3xo().s[58]++, JSON.stringify(data));
      // Store in Redis
      /* istanbul ignore next */
      cov_w7wqil3xo().s[59]++;
      if (this.redis) {
        /* istanbul ignore next */
        cov_w7wqil3xo().b[13][0]++;
        cov_w7wqil3xo().s[60]++;
        await this.redis.setex(key, ttl, serialized);
      } else
      /* istanbul ignore next */
      {
        cov_w7wqil3xo().b[13][1]++;
      }
      // Store in memory cache as fallback
      cov_w7wqil3xo().s[61]++;
      await _cache.cacheService.set(key, data, ttl);
    } catch (error) {
      /* istanbul ignore next */
      cov_w7wqil3xo().s[62]++;
      console.error("Transfer cache set error:", error);
    }
  }
  async getOrSet(key, fetcher, ttl) {
    /* istanbul ignore next */
    cov_w7wqil3xo().f[10]++;
    // Try to get from cache first
    const cached =
    /* istanbul ignore next */
    (cov_w7wqil3xo().s[63]++, await this.get(key));
    /* istanbul ignore next */
    cov_w7wqil3xo().s[64]++;
    if (cached !== null) {
      /* istanbul ignore next */
      cov_w7wqil3xo().b[14][0]++;
      cov_w7wqil3xo().s[65]++;
      return cached;
    } else
    /* istanbul ignore next */
    {
      cov_w7wqil3xo().b[14][1]++;
    }
    // Fetch fresh data
    const data =
    /* istanbul ignore next */
    (cov_w7wqil3xo().s[66]++, await fetcher());
    // Store in cache
    /* istanbul ignore next */
    cov_w7wqil3xo().s[67]++;
    await this.set(key, data, ttl);
    /* istanbul ignore next */
    cov_w7wqil3xo().s[68]++;
    return data;
  }
  async invalidateTransferCache(transferId, shopIds) {
    /* istanbul ignore next */
    cov_w7wqil3xo().f[11]++;
    cov_w7wqil3xo().s[69]++;
    try {
      const patterns =
      /* istanbul ignore next */
      (cov_w7wqil3xo().s[70]++, [`${TRANSFER_CACHE_CONFIG.KEYS.TRANSFER_LIST}*`, `${TRANSFER_CACHE_CONFIG.KEYS.TRANSFER_STATS}*`]);
      /* istanbul ignore next */
      cov_w7wqil3xo().s[71]++;
      if (transferId) {
        /* istanbul ignore next */
        cov_w7wqil3xo().b[15][0]++;
        cov_w7wqil3xo().s[72]++;
        patterns.push(`${TRANSFER_CACHE_CONFIG.KEYS.TRANSFER_DETAIL}:${transferId}`);
      } else
      /* istanbul ignore next */
      {
        cov_w7wqil3xo().b[15][1]++;
      }
      cov_w7wqil3xo().s[73]++;
      if (shopIds) {
        /* istanbul ignore next */
        cov_w7wqil3xo().b[16][0]++;
        cov_w7wqil3xo().s[74]++;
        shopIds.forEach(shopId => {
          /* istanbul ignore next */
          cov_w7wqil3xo().f[12]++;
          cov_w7wqil3xo().s[75]++;
          patterns.push(`${TRANSFER_CACHE_CONFIG.KEYS.SHOP_INVENTORY}:${shopId}*`);
        });
      } else
      /* istanbul ignore next */
      {
        cov_w7wqil3xo().b[16][1]++;
      }
      // Invalidate Redis cache
      cov_w7wqil3xo().s[76]++;
      if (this.redis) {
        /* istanbul ignore next */
        cov_w7wqil3xo().b[17][0]++;
        cov_w7wqil3xo().s[77]++;
        for (const pattern of patterns) {
          const keys =
          /* istanbul ignore next */
          (cov_w7wqil3xo().s[78]++, await this.redis.keys(pattern));
          /* istanbul ignore next */
          cov_w7wqil3xo().s[79]++;
          if (keys.length > 0) {
            /* istanbul ignore next */
            cov_w7wqil3xo().b[18][0]++;
            cov_w7wqil3xo().s[80]++;
            await this.redis.del(...keys);
          } else
          /* istanbul ignore next */
          {
            cov_w7wqil3xo().b[18][1]++;
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_w7wqil3xo().b[17][1]++;
      }
      // Invalidate memory cache
      cov_w7wqil3xo().s[81]++;
      for (const pattern of patterns) {
        /* istanbul ignore next */
        cov_w7wqil3xo().s[82]++;
        await _cache.cacheService.invalidatePattern(pattern);
      }
      /* istanbul ignore next */
      cov_w7wqil3xo().s[83]++;
      console.log(`✓ Invalidated transfer cache for patterns: ${patterns.join(", ")}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_w7wqil3xo().s[84]++;
      console.error("Transfer cache invalidation error:", error);
    }
  }
  async warmTransferCache(filters) {
    /* istanbul ignore next */
    cov_w7wqil3xo().f[13]++;
    const cacheKey =
    /* istanbul ignore next */
    (cov_w7wqil3xo().s[85]++, this.generateTransferCacheKey(TRANSFER_CACHE_CONFIG.KEYS.TRANSFER_LIST, filters));
    /* istanbul ignore next */
    cov_w7wqil3xo().s[86]++;
    if (this.warmingInProgress.has(cacheKey)) {
      /* istanbul ignore next */
      cov_w7wqil3xo().b[19][0]++;
      cov_w7wqil3xo().s[87]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_w7wqil3xo().b[19][1]++;
    }
    cov_w7wqil3xo().s[88]++;
    this.warmingInProgress.add(cacheKey);
    /* istanbul ignore next */
    cov_w7wqil3xo().s[89]++;
    try {
      /* istanbul ignore next */
      cov_w7wqil3xo().s[90]++;
      // This would be implemented with actual transfer fetching logic
      console.log(`🔥 Warming transfer cache: ${cacheKey}`);
      // await this.fetchTransfersFromDB(filters);
    } catch (error) {
      /* istanbul ignore next */
      cov_w7wqil3xo().s[91]++;
      console.error("Transfer cache warming error:", error);
    } finally {
      /* istanbul ignore next */
      cov_w7wqil3xo().s[92]++;
      this.warmingInProgress.delete(cacheKey);
    }
  }
  recordMetric(key, type, responseTime) {
    /* istanbul ignore next */
    cov_w7wqil3xo().f[14]++;
    const existing =
    /* istanbul ignore next */
    (cov_w7wqil3xo().s[93]++,
    /* istanbul ignore next */
    (cov_w7wqil3xo().b[20][0]++, this.metrics.get(key)) ||
    /* istanbul ignore next */
    (cov_w7wqil3xo().b[20][1]++, {
      hits: 0,
      misses: 0,
      totalRequests: 0,
      avgResponseTime: 0
    }));
    /* istanbul ignore next */
    cov_w7wqil3xo().s[94]++;
    if (type === "hit") {
      /* istanbul ignore next */
      cov_w7wqil3xo().b[21][0]++;
      cov_w7wqil3xo().s[95]++;
      existing.hits++;
    } else {
      /* istanbul ignore next */
      cov_w7wqil3xo().b[21][1]++;
      cov_w7wqil3xo().s[96]++;
      existing.misses++;
    }
    /* istanbul ignore next */
    cov_w7wqil3xo().s[97]++;
    existing.totalRequests++;
    /* istanbul ignore next */
    cov_w7wqil3xo().s[98]++;
    existing.avgResponseTime = (existing.avgResponseTime * (existing.totalRequests - 1) + responseTime) / existing.totalRequests;
    /* istanbul ignore next */
    cov_w7wqil3xo().s[99]++;
    this.metrics.set(key, existing);
  }
  logMetrics() {
    /* istanbul ignore next */
    cov_w7wqil3xo().f[15]++;
    cov_w7wqil3xo().s[100]++;
    if (this.metrics.size === 0) {
      /* istanbul ignore next */
      cov_w7wqil3xo().b[22][0]++;
      cov_w7wqil3xo().s[101]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_w7wqil3xo().b[22][1]++;
    }
    cov_w7wqil3xo().s[102]++;
    console.log("\uD83D\uDCCA Transfer Cache Metrics:");
    /* istanbul ignore next */
    cov_w7wqil3xo().s[103]++;
    this.metrics.forEach((metric, key) => {
      /* istanbul ignore next */
      cov_w7wqil3xo().f[16]++;
      const hitRate =
      /* istanbul ignore next */
      (cov_w7wqil3xo().s[104]++, (metric.hits / metric.totalRequests * 100).toFixed(2));
      /* istanbul ignore next */
      cov_w7wqil3xo().s[105]++;
      console.log(`  ${key}: ${hitRate}% hit rate, ${metric.avgResponseTime.toFixed(2)}ms avg`);
    });
  }
  getMetrics() {
    /* istanbul ignore next */
    cov_w7wqil3xo().f[17]++;
    cov_w7wqil3xo().s[106]++;
    return new Map(this.metrics);
  }
  async clearAllCache() {
    /* istanbul ignore next */
    cov_w7wqil3xo().f[18]++;
    cov_w7wqil3xo().s[107]++;
    try {
      /* istanbul ignore next */
      cov_w7wqil3xo().s[108]++;
      if (this.redis) {
        /* istanbul ignore next */
        cov_w7wqil3xo().b[23][0]++;
        const keys =
        /* istanbul ignore next */
        (cov_w7wqil3xo().s[109]++, await this.redis.keys("transfers:*"));
        /* istanbul ignore next */
        cov_w7wqil3xo().s[110]++;
        if (keys.length > 0) {
          /* istanbul ignore next */
          cov_w7wqil3xo().b[24][0]++;
          cov_w7wqil3xo().s[111]++;
          await this.redis.del(...keys);
        } else
        /* istanbul ignore next */
        {
          cov_w7wqil3xo().b[24][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_w7wqil3xo().b[23][1]++;
      }
      cov_w7wqil3xo().s[112]++;
      await _cache.cacheService.invalidatePattern("transfers:*");
      /* istanbul ignore next */
      cov_w7wqil3xo().s[113]++;
      console.log("✓ Cleared all transfer cache");
    } catch (error) {
      /* istanbul ignore next */
      cov_w7wqil3xo().s[114]++;
      console.error("Error clearing transfer cache:", error);
    }
  }
}
const transferCacheService =
/* istanbul ignore next */
(cov_w7wqil3xo().s[115]++, new TransferCacheService());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,