{"version":3,"names":["cov_1wi3s5z7i8","actualCoverage","s","POST","req","f","permissionError","_middleware","requirePermission","b","data","json","to","message","_server","NextResponse","success","status","_smsService","smsService","init","isConfigured","response","sendSMS","error","console"],"sources":["/Users/sachin/Documents/md-sports-/src/app/api/sms/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { requirePermission } from '@/lib/utils/middleware';\nimport { smsService } from '@/services/smsService';\n\n// POST: Send a custom SMS message\nexport async function POST(req: NextRequest) {\n    // Check for 'settings:manage' permission\n    const permissionError = await requirePermission('settings:manage')(req);\n    if (permissionError) {\n        return permissionError;\n    }\n\n    try {\n        const data = await req.json();\n        const { to, message } = data;\n\n        // Validate input\n        if (!to || !message) {\n            return NextResponse.json(\n                { success: false, message: 'Recipient phone number and message are required' },\n                { status: 400 }\n            );\n        }\n\n        // Initialize SMS service if needed\n        await smsService.init();\n\n        // Check if SMS service is configured\n        if (!smsService.isConfigured()) {\n            return NextResponse.json(\n                { success: false, message: 'SMS service is not configured or is disabled' },\n                { status: 400 }\n            );\n        }\n\n        // Send SMS\n        const response = await smsService.sendSMS({ to, message });\n\n        if (response.status >= 200 && response.status < 300) {\n            return NextResponse.json({\n                success: true,\n                message: 'SMS sent successfully',\n                data: response.data\n            });\n        } else {\n            return NextResponse.json(\n                { success: false, message: response.message },\n                { status: response.status }\n            );\n        }\n    } catch (error) {\n        console.error('Error sending SMS:', error);\n        return NextResponse.json(\n            { success: false, message: 'Failed to send SMS' },\n            { status: 500 }\n        );\n    }\n} "],"mappingscAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;;;+BAFY;;;;;;WAAAC,IAAA;;;;;kCALoB;;;kCACR;;;kCACP;AAGpB,eAAeA,KAAKC,GAAgB;EAAA;EAAAJ,cAAA,GAAAK,CAAA;EACvC;EACA,MAAMC,eAAA;EAAA;EAAA,CAAAN,cAAA,GAAAE,CAAA,OAAkB,MAAM,IAAAK,WAAA,CAAAC,iBAAiB,EAAC,mBAAmBJ,GAAA;EAAA;EAAAJ,cAAA,GAAAE,CAAA;EACnE,IAAII,eAAA,EAAiB;IAAA;IAAAN,cAAA,GAAAS,CAAA;IAAAT,cAAA,GAAAE,CAAA;IACjB,OAAOI,eAAA;EACX;EAAA;EAAA;IAAAN,cAAA,GAAAS,CAAA;EAAA;EAAAT,cAAA,GAAAE,CAAA;EAEA,IAAI;IACA,MAAMQ,IAAA;IAAA;IAAA,CAAAV,cAAA,GAAAE,CAAA,QAAO,MAAME,GAAA,CAAIO,IAAI;IAC3B,MAAM;MAAEC,EAAE;MAAEC;IAAO,CAAE;IAAA;IAAA,CAAAb,cAAA,GAAAE,CAAA,QAAGQ,IAAA;IAExB;IAAA;IAAAV,cAAA,GAAAE,CAAA;IACA;IAAI;IAAA,CAAAF,cAAA,GAAAS,CAAA,WAACG,EAAA;IAAA;IAAA,CAAAZ,cAAA,GAAAS,CAAA,UAAM,CAACI,OAAA,GAAS;MAAA;MAAAb,cAAA,GAAAS,CAAA;MAAAT,cAAA,GAAAE,CAAA;MACjB,OAAOY,OAAA,CAAAC,YAAY,CAACJ,IAAI,CACpB;QAAEK,OAAA,EAAS;QAAOH,OAAA,EAAS;MAAkD,GAC7E;QAAEI,MAAA,EAAQ;MAAI;IAEtB;IAAA;IAAA;MAAAjB,cAAA,GAAAS,CAAA;IAAA;IAEA;IAAAT,cAAA,GAAAE,CAAA;IACA,MAAMgB,WAAA,CAAAC,UAAU,CAACC,IAAI;IAErB;IAAA;IAAApB,cAAA,GAAAE,CAAA;IACA,IAAI,CAACgB,WAAA,CAAAC,UAAU,CAACE,YAAY,IAAI;MAAA;MAAArB,cAAA,GAAAS,CAAA;MAAAT,cAAA,GAAAE,CAAA;MAC5B,OAAOY,OAAA,CAAAC,YAAY,CAACJ,IAAI,CACpB;QAAEK,OAAA,EAAS;QAAOH,OAAA,EAAS;MAA+C,GAC1E;QAAEI,MAAA,EAAQ;MAAI;IAEtB;IAAA;IAAA;MAAAjB,cAAA,GAAAS,CAAA;IAAA;IAEA;IACA,MAAMa,QAAA;IAAA;IAAA,CAAAtB,cAAA,GAAAE,CAAA,QAAW,MAAMgB,WAAA,CAAAC,UAAU,CAACI,OAAO,CAAC;MAAEX,EAAA;MAAIC;IAAQ;IAAA;IAAAb,cAAA,GAAAE,CAAA;IAExD;IAAI;IAAA,CAAAF,cAAA,GAAAS,CAAA,UAAAa,QAAA,CAASL,MAAM,IAAI;IAAA;IAAA,CAAAjB,cAAA,GAAAS,CAAA,UAAOa,QAAA,CAASL,MAAM,GAAG,MAAK;MAAA;MAAAjB,cAAA,GAAAS,CAAA;MAAAT,cAAA,GAAAE,CAAA;MACjD,OAAOY,OAAA,CAAAC,YAAY,CAACJ,IAAI,CAAC;QACrBK,OAAA,EAAS;QACTH,OAAA,EAAS;QACTH,IAAA,EAAMY,QAAA,CAASZ;MACnB;IACJ,OAAO;MAAA;MAAAV,cAAA,GAAAS,CAAA;MAAAT,cAAA,GAAAE,CAAA;MACH,OAAOY,OAAA,CAAAC,YAAY,CAACJ,IAAI,CACpB;QAAEK,OAAA,EAAS;QAAOH,OAAA,EAASS,QAAA,CAAST;MAAQ,GAC5C;QAAEI,MAAA,EAAQK,QAAA,CAASL;MAAO;IAElC;EACJ,EAAE,OAAOO,KAAA,EAAO;IAAA;IAAAxB,cAAA,GAAAE,CAAA;IACZuB,OAAA,CAAQD,KAAK,CAAC,sBAAsBA,KAAA;IAAA;IAAAxB,cAAA,GAAAE,CAAA;IACpC,OAAOY,OAAA,CAAAC,YAAY,CAACJ,IAAI,CACpB;MAAEK,OAAA,EAAS;MAAOH,OAAA,EAAS;IAAqB,GAChD;MAAEI,MAAA,EAAQ;IAAI;EAEtB;AACJ","ignoreList":[]}