be1c306ce4b8a92e2de9954831f7a70b
"use strict";

/* istanbul ignore next */
function cov_unofuyslr() {
  var path = "/Users/sachin/Documents/md-sports-/src/lib/models/QuotationItem.ts";
  var hash = "e3a976f80608f5f4859d534ddcd960e460140ee4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/lib/models/QuotationItem.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 19
        },
        end: {
          line: 11,
          column: 39
        }
      },
      "4": {
        start: {
          line: 12,
          column: 26
        },
        end: {
          line: 12,
          column: 68
        }
      },
      "5": {
        start: {
          line: 13,
          column: 33
        },
        end: {
          line: 13,
          column: 81
        }
      },
      "6": {
        start: {
          line: 14,
          column: 31
        },
        end: {
          line: 14,
          column: 77
        }
      },
      "7": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 18,
          column: 6
        }
      },
      "8": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 75,
          column: 3
        }
      },
      "9": {
        start: {
          line: 26,
          column: 26
        },
        end: {
          line: 26,
          column: 94
        }
      },
      "10": {
        start: {
          line: 77,
          column: 0
        },
        end: {
          line: 80,
          column: 3
        }
      },
      "11": {
        start: {
          line: 81,
          column: 0
        },
        end: {
          line: 84,
          column: 3
        }
      },
      "12": {
        start: {
          line: 85,
          column: 0
        },
        end: {
          line: 88,
          column: 3
        }
      },
      "13": {
        start: {
          line: 89,
          column: 0
        },
        end: {
          line: 92,
          column: 3
        }
      },
      "14": {
        start: {
          line: 93,
          column: 17
        },
        end: {
          line: 93,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 33
          }
        },
        loc: {
          start: {
            line: 15,
            column: 39
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 22
          },
          end: {
            line: 26,
            column: 23
          }
        },
        loc: {
          start: {
            line: 26,
            column: 26
          },
          end: {
            line: 26,
            column: 94
          }
        },
        line: 26
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 18,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 16,
            column: 35
          },
          end: {
            line: 16,
            column: 38
          }
        }, {
          start: {
            line: 16,
            column: 41
          },
          end: {
            line: 18,
            column: 5
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 14
          }
        }, {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 16,
            column: 32
          }
        }],
        line: 16
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/lib/models/QuotationItem.ts"],
      sourcesContent: ["import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../db';\nimport Quotation from './Quotation';\nimport Product from './Product';\n\ninterface QuotationItemAttributes {\n    id: string;\n    quotation_id: string;\n    product_id: string;\n    quantity: number;\n    unit_price: number;\n    total: number;\n    created_at: Date;\n    updated_at: Date;\n}\n\ninterface QuotationItemCreationAttributes extends Optional<QuotationItemAttributes, 'id' | 'created_at' | 'updated_at'> { }\n\nclass QuotationItem extends Model<QuotationItemAttributes, QuotationItemCreationAttributes> implements QuotationItemAttributes {\n    public id!: string;\n    public quotation_id!: string;\n    public product_id!: string;\n    public quantity!: number;\n    public unit_price!: number;\n    public total!: number;\n    public created_at!: Date;\n    public updated_at!: Date;\n}\n\nQuotationItem.init({\n    id: {\n        type: DataTypes.STRING,\n        primaryKey: true,\n        defaultValue: () => `QI${Math.floor(Math.random() * 10000).toString().padStart(4, '0')}`\n    },\n    quotation_id: {\n        type: DataTypes.STRING,\n        allowNull: false,\n        references: {\n            model: 'quotations',\n            key: 'id'\n        }\n    },\n    product_id: {\n        type: DataTypes.STRING,\n        allowNull: false,\n        references: {\n            model: 'products',\n            key: 'id'\n        }\n    },\n    quantity: {\n        type: DataTypes.INTEGER,\n        allowNull: false,\n        defaultValue: 1\n    },\n    unit_price: {\n        type: DataTypes.FLOAT,\n        allowNull: false,\n        defaultValue: 0\n    },\n    total: {\n        type: DataTypes.FLOAT,\n        allowNull: false,\n        defaultValue: 0\n    },\n    created_at: {\n        type: DataTypes.DATE,\n        allowNull: false,\n        defaultValue: DataTypes.NOW\n    },\n    updated_at: {\n        type: DataTypes.DATE,\n        allowNull: false,\n        defaultValue: DataTypes.NOW\n    }\n}, {\n    sequelize,\n    modelName: 'QuotationItem',\n    tableName: 'quotation_items',\n    timestamps: true,\n    underscored: true\n});\n\n// Define associations\nQuotationItem.belongsTo(Quotation, { foreignKey: 'quotation_id', as: 'quotation' });\nQuotation.hasMany(QuotationItem, { foreignKey: 'quotation_id', as: 'items' });\n\nQuotationItem.belongsTo(Product, { foreignKey: 'product_id', as: 'product' });\nProduct.hasMany(QuotationItem, { foreignKey: 'product_id', as: 'quotationItems' });\n\nexport default QuotationItem; "],
      names: ["QuotationItem", "Model", "init", "id", "type", "DataTypes", "STRING", "primaryKey", "defaultValue", "Math", "floor", "random", "toString", "padStart", "quotation_id", "allowNull", "references", "model", "key", "product_id", "quantity", "INTEGER", "unit_price", "FLOAT", "total", "created_at", "DATE", "NOW", "updated_at", "sequelize", "modelName", "tableName", "timestamps", "underscored", "belongsTo", "Quotation", "foreignKey", "as", "hasMany", "Product"],
      mappings: ";;;;+BA2FA;;;eAAA;;;2BA3F2C;2DACrB;kEACA;gEACF;;;;;;AAepB,MAAMA,sBAAsBC,gBAAK;AASjC;AAEAD,cAAcE,IAAI,CAAC;IACfC,IAAI;QACAC,MAAMC,oBAAS,CAACC,MAAM;QACtBC,YAAY;QACZC,cAAc,IAAM,CAAC,EAAE,EAAEC,KAAKC,KAAK,CAACD,KAAKE,MAAM,KAAK,OAAOC,QAAQ,GAAGC,QAAQ,CAAC,GAAG,KAAK,CAAC;IAC5F;IACAC,cAAc;QACVV,MAAMC,oBAAS,CAACC,MAAM;QACtBS,WAAW;QACXC,YAAY;YACRC,OAAO;YACPC,KAAK;QACT;IACJ;IACAC,YAAY;QACRf,MAAMC,oBAAS,CAACC,MAAM;QACtBS,WAAW;QACXC,YAAY;YACRC,OAAO;YACPC,KAAK;QACT;IACJ;IACAE,UAAU;QACNhB,MAAMC,oBAAS,CAACgB,OAAO;QACvBN,WAAW;QACXP,cAAc;IAClB;IACAc,YAAY;QACRlB,MAAMC,oBAAS,CAACkB,KAAK;QACrBR,WAAW;QACXP,cAAc;IAClB;IACAgB,OAAO;QACHpB,MAAMC,oBAAS,CAACkB,KAAK;QACrBR,WAAW;QACXP,cAAc;IAClB;IACAiB,YAAY;QACRrB,MAAMC,oBAAS,CAACqB,IAAI;QACpBX,WAAW;QACXP,cAAcH,oBAAS,CAACsB,GAAG;IAC/B;IACAC,YAAY;QACRxB,MAAMC,oBAAS,CAACqB,IAAI;QACpBX,WAAW;QACXP,cAAcH,oBAAS,CAACsB,GAAG;IAC/B;AACJ,GAAG;IACCE,WAAAA,WAAS;IACTC,WAAW;IACXC,WAAW;IACXC,YAAY;IACZC,aAAa;AACjB;AAEA,sBAAsB;AACtBjC,cAAckC,SAAS,CAACC,kBAAS,EAAE;IAAEC,YAAY;IAAgBC,IAAI;AAAY;AACjFF,kBAAS,CAACG,OAAO,CAACtC,eAAe;IAAEoC,YAAY;IAAgBC,IAAI;AAAQ;AAE3ErC,cAAckC,SAAS,CAACK,gBAAO,EAAE;IAAEH,YAAY;IAAcC,IAAI;AAAU;AAC3EE,gBAAO,CAACD,OAAO,CAACtC,eAAe;IAAEoC,YAAY;IAAcC,IAAI;AAAiB;MAEhF,WAAerC"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e3a976f80608f5f4859d534ddcd960e460140ee4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_unofuyslr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_unofuyslr();
cov_unofuyslr().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_unofuyslr().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_unofuyslr().f[0]++;
    cov_unofuyslr().s[2]++;
    return _default;
  }
});
const _sequelize =
/* istanbul ignore next */
(cov_unofuyslr().s[3]++, require("sequelize"));
const _db =
/* istanbul ignore next */
(/*#__PURE__*/cov_unofuyslr().s[4]++, _interop_require_default(require("../db")));
const _Quotation =
/* istanbul ignore next */
(/*#__PURE__*/cov_unofuyslr().s[5]++, _interop_require_default(require("./Quotation")));
const _Product =
/* istanbul ignore next */
(/*#__PURE__*/cov_unofuyslr().s[6]++, _interop_require_default(require("./Product")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_unofuyslr().f[1]++;
  cov_unofuyslr().s[7]++;
  return /* istanbul ignore next */(cov_unofuyslr().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_unofuyslr().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_unofuyslr().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_unofuyslr().b[0][1]++, {
    default: obj
  });
}
class QuotationItem extends
/* istanbul ignore next */
(_sequelize.Model) {}
/* istanbul ignore next */
cov_unofuyslr().s[8]++;
QuotationItem.init({
  id: {
    type: _sequelize.DataTypes.STRING,
    primaryKey: true,
    defaultValue: () => {
      /* istanbul ignore next */
      cov_unofuyslr().f[2]++;
      cov_unofuyslr().s[9]++;
      return `QI${Math.floor(Math.random() * 10000).toString().padStart(4, "0")}`;
    }
  },
  quotation_id: {
    type: _sequelize.DataTypes.STRING,
    allowNull: false,
    references: {
      model: "quotations",
      key: "id"
    }
  },
  product_id: {
    type: _sequelize.DataTypes.STRING,
    allowNull: false,
    references: {
      model: "products",
      key: "id"
    }
  },
  quantity: {
    type: _sequelize.DataTypes.INTEGER,
    allowNull: false,
    defaultValue: 1
  },
  unit_price: {
    type: _sequelize.DataTypes.FLOAT,
    allowNull: false,
    defaultValue: 0
  },
  total: {
    type: _sequelize.DataTypes.FLOAT,
    allowNull: false,
    defaultValue: 0
  },
  created_at: {
    type: _sequelize.DataTypes.DATE,
    allowNull: false,
    defaultValue: _sequelize.DataTypes.NOW
  },
  updated_at: {
    type: _sequelize.DataTypes.DATE,
    allowNull: false,
    defaultValue: _sequelize.DataTypes.NOW
  }
}, {
  sequelize: _db.default,
  modelName: "QuotationItem",
  tableName: "quotation_items",
  timestamps: true,
  underscored: true
});
// Define associations
/* istanbul ignore next */
cov_unofuyslr().s[10]++;
QuotationItem.belongsTo(_Quotation.default, {
  foreignKey: "quotation_id",
  as: "quotation"
});
/* istanbul ignore next */
cov_unofuyslr().s[11]++;
_Quotation.default.hasMany(QuotationItem, {
  foreignKey: "quotation_id",
  as: "items"
});
/* istanbul ignore next */
cov_unofuyslr().s[12]++;
QuotationItem.belongsTo(_Product.default, {
  foreignKey: "product_id",
  as: "product"
});
/* istanbul ignore next */
cov_unofuyslr().s[13]++;
_Product.default.hasMany(QuotationItem, {
  foreignKey: "product_id",
  as: "quotationItems"
});
const _default =
/* istanbul ignore next */
(cov_unofuyslr().s[14]++, QuotationItem);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGVmYXVsdCIsIlF1b3RhdGlvbkl0ZW0iLCJfc2VxdWVsaXplIiwiTW9kZWwiLCJjb3ZfdW5vZnV5c2xyIiwicyIsImluaXQiLCJpZCIsInR5cGUiLCJEYXRhVHlwZXMiLCJTVFJJTkciLCJwcmltYXJ5S2V5IiwiZGVmYXVsdFZhbHVlIiwiZiIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsInRvU3RyaW5nIiwicGFkU3RhcnQiLCJxdW90YXRpb25faWQiLCJhbGxvd051bGwiLCJyZWZlcmVuY2VzIiwibW9kZWwiLCJrZXkiLCJwcm9kdWN0X2lkIiwicXVhbnRpdHkiLCJJTlRFR0VSIiwidW5pdF9wcmljZSIsIkZMT0FUIiwidG90YWwiLCJjcmVhdGVkX2F0IiwiREFURSIsIk5PVyIsInVwZGF0ZWRfYXQiLCJzZXF1ZWxpemUiLCJfZGIiLCJkZWZhdWx0IiwibW9kZWxOYW1lIiwidGFibGVOYW1lIiwidGltZXN0YW1wcyIsInVuZGVyc2NvcmVkIiwiYmVsb25nc1RvIiwiX1F1b3RhdGlvbiIsImZvcmVpZ25LZXkiLCJhcyIsImhhc01hbnkiLCJfUHJvZHVjdCJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWNoaW4vRG9jdW1lbnRzL21kLXNwb3J0cy0vc3JjL2xpYi9tb2RlbHMvUXVvdGF0aW9uSXRlbS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEYXRhVHlwZXMsIE1vZGVsLCBPcHRpb25hbCB9IGZyb20gJ3NlcXVlbGl6ZSc7XG5pbXBvcnQgc2VxdWVsaXplIGZyb20gJy4uL2RiJztcbmltcG9ydCBRdW90YXRpb24gZnJvbSAnLi9RdW90YXRpb24nO1xuaW1wb3J0IFByb2R1Y3QgZnJvbSAnLi9Qcm9kdWN0JztcblxuaW50ZXJmYWNlIFF1b3RhdGlvbkl0ZW1BdHRyaWJ1dGVzIHtcbiAgICBpZDogc3RyaW5nO1xuICAgIHF1b3RhdGlvbl9pZDogc3RyaW5nO1xuICAgIHByb2R1Y3RfaWQ6IHN0cmluZztcbiAgICBxdWFudGl0eTogbnVtYmVyO1xuICAgIHVuaXRfcHJpY2U6IG51bWJlcjtcbiAgICB0b3RhbDogbnVtYmVyO1xuICAgIGNyZWF0ZWRfYXQ6IERhdGU7XG4gICAgdXBkYXRlZF9hdDogRGF0ZTtcbn1cblxuaW50ZXJmYWNlIFF1b3RhdGlvbkl0ZW1DcmVhdGlvbkF0dHJpYnV0ZXMgZXh0ZW5kcyBPcHRpb25hbDxRdW90YXRpb25JdGVtQXR0cmlidXRlcywgJ2lkJyB8ICdjcmVhdGVkX2F0JyB8ICd1cGRhdGVkX2F0Jz4geyB9XG5cbmNsYXNzIFF1b3RhdGlvbkl0ZW0gZXh0ZW5kcyBNb2RlbDxRdW90YXRpb25JdGVtQXR0cmlidXRlcywgUXVvdGF0aW9uSXRlbUNyZWF0aW9uQXR0cmlidXRlcz4gaW1wbGVtZW50cyBRdW90YXRpb25JdGVtQXR0cmlidXRlcyB7XG4gICAgcHVibGljIGlkITogc3RyaW5nO1xuICAgIHB1YmxpYyBxdW90YXRpb25faWQhOiBzdHJpbmc7XG4gICAgcHVibGljIHByb2R1Y3RfaWQhOiBzdHJpbmc7XG4gICAgcHVibGljIHF1YW50aXR5ITogbnVtYmVyO1xuICAgIHB1YmxpYyB1bml0X3ByaWNlITogbnVtYmVyO1xuICAgIHB1YmxpYyB0b3RhbCE6IG51bWJlcjtcbiAgICBwdWJsaWMgY3JlYXRlZF9hdCE6IERhdGU7XG4gICAgcHVibGljIHVwZGF0ZWRfYXQhOiBEYXRlO1xufVxuXG5RdW90YXRpb25JdGVtLmluaXQoe1xuICAgIGlkOiB7XG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgICAgIHByaW1hcnlLZXk6IHRydWUsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogKCkgPT4gYFFJJHtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMDAwMCkudG9TdHJpbmcoKS5wYWRTdGFydCg0LCAnMCcpfWBcbiAgICB9LFxuICAgIHF1b3RhdGlvbl9pZDoge1xuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgICByZWZlcmVuY2VzOiB7XG4gICAgICAgICAgICBtb2RlbDogJ3F1b3RhdGlvbnMnLFxuICAgICAgICAgICAga2V5OiAnaWQnXG4gICAgICAgIH1cbiAgICB9LFxuICAgIHByb2R1Y3RfaWQ6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgICAgcmVmZXJlbmNlczoge1xuICAgICAgICAgICAgbW9kZWw6ICdwcm9kdWN0cycsXG4gICAgICAgICAgICBrZXk6ICdpZCdcbiAgICAgICAgfVxuICAgIH0sXG4gICAgcXVhbnRpdHk6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogMVxuICAgIH0sXG4gICAgdW5pdF9wcmljZToge1xuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuRkxPQVQsXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogMFxuICAgIH0sXG4gICAgdG90YWw6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLkZMT0FULFxuICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgICBkZWZhdWx0VmFsdWU6IDBcbiAgICB9LFxuICAgIGNyZWF0ZWRfYXQ6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLkRBVEUsXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogRGF0YVR5cGVzLk5PV1xuICAgIH0sXG4gICAgdXBkYXRlZF9hdDoge1xuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuREFURSxcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgICAgZGVmYXVsdFZhbHVlOiBEYXRhVHlwZXMuTk9XXG4gICAgfVxufSwge1xuICAgIHNlcXVlbGl6ZSxcbiAgICBtb2RlbE5hbWU6ICdRdW90YXRpb25JdGVtJyxcbiAgICB0YWJsZU5hbWU6ICdxdW90YXRpb25faXRlbXMnLFxuICAgIHRpbWVzdGFtcHM6IHRydWUsXG4gICAgdW5kZXJzY29yZWQ6IHRydWVcbn0pO1xuXG4vLyBEZWZpbmUgYXNzb2NpYXRpb25zXG5RdW90YXRpb25JdGVtLmJlbG9uZ3NUbyhRdW90YXRpb24sIHsgZm9yZWlnbktleTogJ3F1b3RhdGlvbl9pZCcsIGFzOiAncXVvdGF0aW9uJyB9KTtcblF1b3RhdGlvbi5oYXNNYW55KFF1b3RhdGlvbkl0ZW0sIHsgZm9yZWlnbktleTogJ3F1b3RhdGlvbl9pZCcsIGFzOiAnaXRlbXMnIH0pO1xuXG5RdW90YXRpb25JdGVtLmJlbG9uZ3NUbyhQcm9kdWN0LCB7IGZvcmVpZ25LZXk6ICdwcm9kdWN0X2lkJywgYXM6ICdwcm9kdWN0JyB9KTtcblByb2R1Y3QuaGFzTWFueShRdW90YXRpb25JdGVtLCB7IGZvcmVpZ25LZXk6ICdwcm9kdWN0X2lkJywgYXM6ICdxdW90YXRpb25JdGVtcycgfSk7XG5cbmV4cG9ydCBkZWZhdWx0IFF1b3RhdGlvbkl0ZW07ICJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytCQTJGQTs7Ozs7O1dBQUFBLFFBQUE7Ozs7O2lDQTNGMkM7Ozt1RUFDckI7Ozt1RUFDQTs7O3VFQUNGOzs7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