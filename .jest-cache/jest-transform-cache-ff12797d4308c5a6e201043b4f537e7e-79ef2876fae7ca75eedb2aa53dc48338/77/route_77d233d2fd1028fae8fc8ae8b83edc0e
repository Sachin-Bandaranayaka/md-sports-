c783d3d4baba5d78043a03b943438171
"use strict";

/* istanbul ignore next */
function cov_39x6d23tp() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/purchases/[id]/route.ts";
  var hash = "82ec34c05e9b06fde1d05b290f6ccfdcbbb20f6e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/purchases/[id]/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 22
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 19
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 19
        }
      },
      "7": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "8": {
        start: {
          line: 23,
          column: 15
        },
        end: {
          line: 23,
          column: 36
        }
      },
      "9": {
        start: {
          line: 24,
          column: 30
        },
        end: {
          line: 24,
          column: 89
        }
      },
      "10": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 48
        }
      },
      "11": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 6
        }
      },
      "12": {
        start: {
          line: 32,
          column: 15
        },
        end: {
          line: 32,
          column: 24
        }
      },
      "13": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 83,
          column: 5
        }
      },
      "14": {
        start: {
          line: 34,
          column: 27
        },
        end: {
          line: 34,
          column: 39
        }
      },
      "15": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "16": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 42,
          column: 15
        }
      },
      "17": {
        start: {
          line: 44,
          column: 25
        },
        end: {
          line: 56,
          column: 10
        }
      },
      "18": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "19": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 64,
          column: 15
        }
      },
      "20": {
        start: {
          line: 67,
          column: 25
        },
        end: {
          line: 67,
          column: 60
        }
      },
      "21": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 75
        }
      },
      "22": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 112
        }
      },
      "23": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 24
        }
      },
      "24": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 71
        }
      },
      "25": {
        start: {
          line: 74,
          column: 24
        },
        end: {
          line: 74,
          column: 92
        }
      },
      "26": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 82,
          column: 11
        }
      },
      "27": {
        start: {
          line: 86,
          column: 15
        },
        end: {
          line: 86,
          column: 24
        }
      },
      "28": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 516,
          column: 5
        }
      },
      "29": {
        start: {
          line: 88,
          column: 27
        },
        end: {
          line: 88,
          column: 39
        }
      },
      "30": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "31": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 96,
          column: 15
        }
      },
      "32": {
        start: {
          line: 98,
          column: 21
        },
        end: {
          line: 98,
          column: 41
        }
      },
      "33": {
        start: {
          line: 99,
          column: 33
        },
        end: {
          line: 110,
          column: 10
        }
      },
      "34": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "35": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 118,
          column: 15
        }
      },
      "36": {
        start: {
          line: 120,
          column: 93
        },
        end: {
          line: 120,
          column: 97
        }
      },
      "37": {
        start: {
          line: 121,
          column: 79
        },
        end: {
          line: 121,
          column: 90
        }
      },
      "38": {
        start: {
          line: 122,
          column: 35
        },
        end: {
          line: 122,
          column: 37
        }
      },
      "39": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 96
        }
      },
      "40": {
        start: {
          line: 123,
          column: 37
        },
        end: {
          line: 123,
          column: 96
        }
      },
      "41": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 75
        }
      },
      "42": {
        start: {
          line: 124,
          column: 30
        },
        end: {
          line: 124,
          column: 75
        }
      },
      "43": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 79
        }
      },
      "44": {
        start: {
          line: 125,
          column: 28
        },
        end: {
          line: 125,
          column: 79
        }
      },
      "45": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 129
        }
      },
      "46": {
        start: {
          line: 126,
          column: 45
        },
        end: {
          line: 126,
          column: 129
        }
      },
      "47": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 128,
          column: 99
        }
      },
      "48": {
        start: {
          line: 127,
          column: 49
        },
        end: {
          line: 127,
          column: 106
        }
      },
      "49": {
        start: {
          line: 128,
          column: 13
        },
        end: {
          line: 128,
          column: 99
        }
      },
      "50": {
        start: {
          line: 128,
          column: 48
        },
        end: {
          line: 128,
          column: 99
        }
      },
      "51": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 134
        }
      },
      "52": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 137,
          column: 10
        }
      },
      "53": {
        start: {
          line: 130,
          column: 34
        },
        end: {
          line: 134,
          column: 10
        }
      },
      "54": {
        start: {
          line: 135,
          column: 13
        },
        end: {
          line: 137,
          column: 10
        }
      },
      "55": {
        start: {
          line: 135,
          column: 79
        },
        end: {
          line: 137,
          column: 10
        }
      },
      "56": {
        start: {
          line: 138,
          column: 23
        },
        end: {
          line: 467,
          column: 10
        }
      },
      "57": {
        start: {
          line: 139,
          column: 37
        },
        end: {
          line: 139,
          column: 39
        }
      },
      "58": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 252,
          column: 13
        }
      },
      "59": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 251,
          column: 17
        }
      },
      "60": {
        start: {
          line: 142,
          column: 44
        },
        end: {
          line: 146,
          column: 22
        }
      },
      "61": {
        start: {
          line: 147,
          column: 20
        },
        end: {
          line: 147,
          column: 51
        }
      },
      "62": {
        start: {
          line: 147,
          column: 42
        },
        end: {
          line: 147,
          column: 51
        }
      },
      "63": {
        start: {
          line: 148,
          column: 48
        },
        end: {
          line: 148,
          column: 461
        }
      },
      "64": {
        start: {
          line: 149,
          column: 20
        },
        end: {
          line: 216,
          column: 21
        }
      },
      "65": {
        start: {
          line: 150,
          column: 24
        },
        end: {
          line: 180,
          column: 25
        }
      },
      "66": {
        start: {
          line: 151,
          column: 43
        },
        end: {
          line: 151,
          column: 52
        }
      },
      "67": {
        start: {
          line: 152,
          column: 48
        },
        end: {
          line: 152,
          column: 70
        }
      },
      "68": {
        start: {
          line: 153,
          column: 28
        },
        end: {
          line: 153,
          column: 81
        }
      },
      "69": {
        start: {
          line: 153,
          column: 72
        },
        end: {
          line: 153,
          column: 81
        }
      },
      "70": {
        start: {
          line: 154,
          column: 46
        },
        end: {
          line: 159,
          column: 30
        }
      },
      "71": {
        start: {
          line: 160,
          column: 28
        },
        end: {
          line: 179,
          column: 29
        }
      },
      "72": {
        start: {
          line: 161,
          column: 56
        },
        end: {
          line: 161,
          column: 74
        }
      },
      "73": {
        start: {
          line: 162,
          column: 52
        },
        end: {
          line: 162,
          column: 97
        }
      },
      "74": {
        start: {
          line: 163,
          column: 32
        },
        end: {
          line: 172,
          column: 35
        }
      },
      "75": {
        start: {
          line: 173,
          column: 32
        },
        end: {
          line: 178,
          column: 35
        }
      },
      "76": {
        start: {
          line: 183,
          column: 24
        },
        end: {
          line: 183,
          column: 162
        }
      },
      "77": {
        start: {
          line: 184,
          column: 62
        },
        end: {
          line: 188,
          column: 26
        }
      },
      "78": {
        start: {
          line: 189,
          column: 24
        },
        end: {
          line: 215,
          column: 25
        }
      },
      "79": {
        start: {
          line: 190,
          column: 56
        },
        end: {
          line: 190,
          column: 95
        }
      },
      "80": {
        start: {
          line: 191,
          column: 46
        },
        end: {
          line: 191,
          column: 78
        }
      },
      "81": {
        start: {
          line: 192,
          column: 52
        },
        end: {
          line: 192,
          column: 70
        }
      },
      "82": {
        start: {
          line: 193,
          column: 48
        },
        end: {
          line: 193,
          column: 98
        }
      },
      "83": {
        start: {
          line: 194,
          column: 28
        },
        end: {
          line: 203,
          column: 31
        }
      },
      "84": {
        start: {
          line: 204,
          column: 28
        },
        end: {
          line: 209,
          column: 31
        }
      },
      "85": {
        start: {
          line: 210,
          column: 28
        },
        end: {
          line: 210,
          column: 147
        }
      },
      "86": {
        start: {
          line: 211,
          column: 31
        },
        end: {
          line: 215,
          column: 25
        }
      },
      "87": {
        start: {
          line: 212,
          column: 28
        },
        end: {
          line: 212,
          column: 165
        }
      },
      "88": {
        start: {
          line: 214,
          column: 28
        },
        end: {
          line: 214,
          column: 214
        }
      },
      "89": {
        start: {
          line: 217,
          column: 54
        },
        end: {
          line: 217,
          column: 55
        }
      },
      "90": {
        start: {
          line: 218,
          column: 64
        },
        end: {
          line: 222,
          column: 22
        }
      },
      "91": {
        start: {
          line: 223,
          column: 20
        },
        end: {
          line: 223,
          column: 128
        }
      },
      "92": {
        start: {
          line: 223,
          column: 105
        },
        end: {
          line: 223,
          column: 123
        }
      },
      "93": {
        start: {
          line: 225,
          column: 51
        },
        end: {
          line: 232,
          column: 22
        }
      },
      "94": {
        start: {
          line: 233,
          column: 49
        },
        end: {
          line: 233,
          column: 50
        }
      },
      "95": {
        start: {
          line: 234,
          column: 46
        },
        end: {
          line: 234,
          column: 47
        }
      },
      "96": {
        start: {
          line: 235,
          column: 20
        },
        end: {
          line: 238,
          column: 23
        }
      },
      "97": {
        start: {
          line: 236,
          column: 24
        },
        end: {
          line: 236,
          column: 72
        }
      },
      "98": {
        start: {
          line: 237,
          column: 24
        },
        end: {
          line: 237,
          column: 90
        }
      },
      "99": {
        start: {
          line: 239,
          column: 33
        },
        end: {
          line: 239,
          column: 34
        }
      },
      "100": {
        start: {
          line: 240,
          column: 20
        },
        end: {
          line: 242,
          column: 21
        }
      },
      "101": {
        start: {
          line: 241,
          column: 24
        },
        end: {
          line: 241,
          column: 78
        }
      },
      "102": {
        start: {
          line: 243,
          column: 20
        },
        end: {
          line: 250,
          column: 23
        }
      },
      "103": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 257,
          column: 15
        }
      },
      "104": {
        start: {
          line: 259,
          column: 40
        },
        end: {
          line: 259,
          column: 41
        }
      },
      "105": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 264,
          column: 13
        }
      },
      "106": {
        start: {
          line: 261,
          column: 16
        },
        end: {
          line: 263,
          column: 19
        }
      },
      "107": {
        start: {
          line: 262,
          column: 20
        },
        end: {
          line: 262,
          column: 93
        }
      },
      "108": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 61
        }
      },
      "109": {
        start: {
          line: 266,
          column: 35
        },
        end: {
          line: 271,
          column: 14
        }
      },
      "110": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 447,
          column: 13
        }
      },
      "111": {
        start: {
          line: 273,
          column: 16
        },
        end: {
          line: 446,
          column: 17
        }
      },
      "112": {
        start: {
          line: 273,
          column: 28
        },
        end: {
          line: 273,
          column: 29
        }
      },
      "113": {
        start: {
          line: 274,
          column: 36
        },
        end: {
          line: 274,
          column: 51
        }
      },
      "114": {
        start: {
          line: 275,
          column: 20
        },
        end: {
          line: 275,
          column: 99
        }
      },
      "115": {
        start: {
          line: 275,
          column: 90
        },
        end: {
          line: 275,
          column: 99
        }
      },
      "116": {
        start: {
          line: 276,
          column: 20
        },
        end: {
          line: 284,
          column: 23
        }
      },
      "117": {
        start: {
          line: 285,
          column: 44
        },
        end: {
          line: 289,
          column: 22
        }
      },
      "118": {
        start: {
          line: 290,
          column: 20
        },
        end: {
          line: 290,
          column: 51
        }
      },
      "119": {
        start: {
          line: 290,
          column: 42
        },
        end: {
          line: 290,
          column: 51
        }
      },
      "120": {
        start: {
          line: 291,
          column: 48
        },
        end: {
          line: 291,
          column: 297
        }
      },
      "121": {
        start: {
          line: 292,
          column: 46
        },
        end: {
          line: 292,
          column: 70
        }
      },
      "122": {
        start: {
          line: 293,
          column: 20
        },
        end: {
          line: 416,
          column: 21
        }
      },
      "123": {
        start: {
          line: 294,
          column: 24
        },
        end: {
          line: 344,
          column: 25
        }
      },
      "124": {
        start: {
          line: 295,
          column: 43
        },
        end: {
          line: 295,
          column: 52
        }
      },
      "125": {
        start: {
          line: 296,
          column: 45
        },
        end: {
          line: 296,
          column: 67
        }
      },
      "126": {
        start: {
          line: 297,
          column: 28
        },
        end: {
          line: 297,
          column: 75
        }
      },
      "127": {
        start: {
          line: 297,
          column: 66
        },
        end: {
          line: 297,
          column: 75
        }
      },
      "128": {
        start: {
          line: 298,
          column: 46
        },
        end: {
          line: 303,
          column: 30
        }
      },
      "129": {
        start: {
          line: 304,
          column: 48
        },
        end: {
          line: 304,
          column: 49
        }
      },
      "130": {
        start: {
          line: 305,
          column: 46
        },
        end: {
          line: 305,
          column: 70
        }
      },
      "131": {
        start: {
          line: 306,
          column: 59
        },
        end: {
          line: 306,
          column: 60
        }
      },
      "132": {
        start: {
          line: 307,
          column: 46
        },
        end: {
          line: 307,
          column: 72
        }
      },
      "133": {
        start: {
          line: 308,
          column: 28
        },
        end: {
          line: 337,
          column: 29
        }
      },
      "134": {
        start: {
          line: 309,
          column: 32
        },
        end: {
          line: 309,
          column: 78
        }
      },
      "135": {
        start: {
          line: 310,
          column: 58
        },
        end: {
          line: 310,
          column: 119
        }
      },
      "136": {
        start: {
          line: 311,
          column: 57
        },
        end: {
          line: 311,
          column: 77
        }
      },
      "137": {
        start: {
          line: 312,
          column: 32
        },
        end: {
          line: 316,
          column: 33
        }
      },
      "138": {
        start: {
          line: 313,
          column: 36
        },
        end: {
          line: 313,
          column: 118
        }
      },
      "139": {
        start: {
          line: 315,
          column: 36
        },
        end: {
          line: 315,
          column: 65
        }
      },
      "140": {
        start: {
          line: 317,
          column: 32
        },
        end: {
          line: 325,
          column: 35
        }
      },
      "141": {
        start: {
          line: 327,
          column: 32
        },
        end: {
          line: 327,
          column: 57
        }
      },
      "142": {
        start: {
          line: 328,
          column: 32
        },
        end: {
          line: 328,
          column: 69
        }
      },
      "143": {
        start: {
          line: 329,
          column: 32
        },
        end: {
          line: 336,
          column: 35
        }
      },
      "144": {
        start: {
          line: 338,
          column: 28
        },
        end: {
          line: 343,
          column: 31
        }
      },
      "145": {
        start: {
          line: 347,
          column: 24
        },
        end: {
          line: 347,
          column: 195
        }
      },
      "146": {
        start: {
          line: 348,
          column: 55
        },
        end: {
          line: 352,
          column: 26
        }
      },
      "147": {
        start: {
          line: 353,
          column: 43
        },
        end: {
          line: 353,
          column: 47
        }
      },
      "148": {
        start: {
          line: 354,
          column: 24
        },
        end: {
          line: 361,
          column: 25
        }
      },
      "149": {
        start: {
          line: 355,
          column: 28
        },
        end: {
          line: 355,
          column: 76
        }
      },
      "150": {
        start: {
          line: 356,
          column: 28
        },
        end: {
          line: 356,
          column: 139
        }
      },
      "151": {
        start: {
          line: 357,
          column: 31
        },
        end: {
          line: 361,
          column: 25
        }
      },
      "152": {
        start: {
          line: 358,
          column: 28
        },
        end: {
          line: 358,
          column: 205
        }
      },
      "153": {
        start: {
          line: 360,
          column: 28
        },
        end: {
          line: 360,
          column: 186
        }
      },
      "154": {
        start: {
          line: 362,
          column: 24
        },
        end: {
          line: 415,
          column: 25
        }
      },
      "155": {
        start: {
          line: 363,
          column: 45
        },
        end: {
          line: 363,
          column: 62
        }
      },
      "156": {
        start: {
          line: 364,
          column: 28
        },
        end: {
          line: 414,
          column: 29
        }
      },
      "157": {
        start: {
          line: 365,
          column: 50
        },
        end: {
          line: 370,
          column: 34
        }
      },
      "158": {
        start: {
          line: 371,
          column: 52
        },
        end: {
          line: 371,
          column: 53
        }
      },
      "159": {
        start: {
          line: 372,
          column: 50
        },
        end: {
          line: 372,
          column: 74
        }
      },
      "160": {
        start: {
          line: 373,
          column: 63
        },
        end: {
          line: 373,
          column: 64
        }
      },
      "161": {
        start: {
          line: 374,
          column: 50
        },
        end: {
          line: 374,
          column: 76
        }
      },
      "162": {
        start: {
          line: 375,
          column: 32
        },
        end: {
          line: 405,
          column: 33
        }
      },
      "163": {
        start: {
          line: 376,
          column: 36
        },
        end: {
          line: 376,
          column: 82
        }
      },
      "164": {
        start: {
          line: 377,
          column: 62
        },
        end: {
          line: 377,
          column: 123
        }
      },
      "165": {
        start: {
          line: 378,
          column: 61
        },
        end: {
          line: 378,
          column: 81
        }
      },
      "166": {
        start: {
          line: 379,
          column: 36
        },
        end: {
          line: 383,
          column: 37
        }
      },
      "167": {
        start: {
          line: 380,
          column: 40
        },
        end: {
          line: 380,
          column: 122
        }
      },
      "168": {
        start: {
          line: 382,
          column: 40
        },
        end: {
          line: 382,
          column: 69
        }
      },
      "169": {
        start: {
          line: 384,
          column: 36
        },
        end: {
          line: 392,
          column: 39
        }
      },
      "170": {
        start: {
          line: 394,
          column: 36
        },
        end: {
          line: 394,
          column: 61
        }
      },
      "171": {
        start: {
          line: 395,
          column: 36
        },
        end: {
          line: 395,
          column: 73
        }
      },
      "172": {
        start: {
          line: 396,
          column: 36
        },
        end: {
          line: 396,
          column: 175
        }
      },
      "173": {
        start: {
          line: 397,
          column: 36
        },
        end: {
          line: 404,
          column: 39
        }
      },
      "174": {
        start: {
          line: 406,
          column: 32
        },
        end: {
          line: 411,
          column: 35
        }
      },
      "175": {
        start: {
          line: 413,
          column: 32
        },
        end: {
          line: 413,
          column: 156
        }
      },
      "176": {
        start: {
          line: 419,
          column: 45
        },
        end: {
          line: 423,
          column: 22
        }
      },
      "177": {
        start: {
          line: 424,
          column: 48
        },
        end: {
          line: 424,
          column: 49
        }
      },
      "178": {
        start: {
          line: 425,
          column: 45
        },
        end: {
          line: 425,
          column: 46
        }
      },
      "179": {
        start: {
          line: 426,
          column: 20
        },
        end: {
          line: 429,
          column: 23
        }
      },
      "180": {
        start: {
          line: 427,
          column: 24
        },
        end: {
          line: 427,
          column: 71
        }
      },
      "181": {
        start: {
          line: 428,
          column: 24
        },
        end: {
          line: 428,
          column: 89
        }
      },
      "182": {
        start: {
          line: 430,
          column: 49
        },
        end: {
          line: 430,
          column: 50
        }
      },
      "183": {
        start: {
          line: 431,
          column: 20
        },
        end: {
          line: 433,
          column: 21
        }
      },
      "184": {
        start: {
          line: 432,
          column: 24
        },
        end: {
          line: 432,
          column: 92
        }
      },
      "185": {
        start: {
          line: 435,
          column: 20
        },
        end: {
          line: 437,
          column: 21
        }
      },
      "186": {
        start: {
          line: 436,
          column: 24
        },
        end: {
          line: 436,
          column: 71
        }
      },
      "187": {
        start: {
          line: 438,
          column: 20
        },
        end: {
          line: 445,
          column: 23
        }
      },
      "188": {
        start: {
          line: 448,
          column: 39
        },
        end: {
          line: 460,
          column: 14
        }
      },
      "189": {
        start: {
          line: 461,
          column: 12
        },
        end: {
          line: 464,
          column: 14
        }
      },
      "190": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 471,
          column: 9
        }
      },
      "191": {
        start: {
          line: 470,
          column: 12
        },
        end: {
          line: 470,
          column: 65
        }
      },
      "192": {
        start: {
          line: 473,
          column: 8
        },
        end: {
          line: 487,
          column: 9
        }
      },
      "193": {
        start: {
          line: 474,
          column: 12
        },
        end: {
          line: 474,
          column: 61
        }
      },
      "194": {
        start: {
          line: 475,
          column: 12
        },
        end: {
          line: 475,
          column: 66
        }
      },
      "195": {
        start: {
          line: 476,
          column: 12
        },
        end: {
          line: 476,
          column: 72
        }
      },
      "196": {
        start: {
          line: 477,
          column: 12
        },
        end: {
          line: 477,
          column: 62
        }
      },
      "197": {
        start: {
          line: 478,
          column: 12
        },
        end: {
          line: 478,
          column: 60
        }
      },
      "198": {
        start: {
          line: 479,
          column: 12
        },
        end: {
          line: 479,
          column: 64
        }
      },
      "199": {
        start: {
          line: 481,
          column: 12
        },
        end: {
          line: 481,
          column: 81
        }
      },
      "200": {
        start: {
          line: 482,
          column: 12
        },
        end: {
          line: 482,
          column: 76
        }
      },
      "201": {
        start: {
          line: 483,
          column: 12
        },
        end: {
          line: 483,
          column: 78
        }
      },
      "202": {
        start: {
          line: 485,
          column: 12
        },
        end: {
          line: 485,
          column: 90
        }
      },
      "203": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 500,
          column: 9
        }
      },
      "204": {
        start: {
          line: 490,
          column: 12
        },
        end: {
          line: 490,
          column: 59
        }
      },
      "205": {
        start: {
          line: 491,
          column: 12
        },
        end: {
          line: 491,
          column: 64
        }
      },
      "206": {
        start: {
          line: 492,
          column: 12
        },
        end: {
          line: 492,
          column: 67
        }
      },
      "207": {
        start: {
          line: 493,
          column: 12
        },
        end: {
          line: 493,
          column: 72
        }
      },
      "208": {
        start: {
          line: 494,
          column: 12
        },
        end: {
          line: 494,
          column: 53
        }
      },
      "209": {
        start: {
          line: 496,
          column: 12
        },
        end: {
          line: 496,
          column: 61
        }
      },
      "210": {
        start: {
          line: 497,
          column: 12
        },
        end: {
          line: 497,
          column: 76
        }
      },
      "211": {
        start: {
          line: 499,
          column: 12
        },
        end: {
          line: 499,
          column: 102
        }
      },
      "212": {
        start: {
          line: 501,
          column: 8
        },
        end: {
          line: 504,
          column: 11
        }
      },
      "213": {
        start: {
          line: 506,
          column: 8
        },
        end: {
          line: 506,
          column: 71
        }
      },
      "214": {
        start: {
          line: 507,
          column: 24
        },
        end: {
          line: 507,
          column: 78
        }
      },
      "215": {
        start: {
          line: 508,
          column: 8
        },
        end: {
          line: 515,
          column: 11
        }
      },
      "216": {
        start: {
          line: 519,
          column: 26
        },
        end: {
          line: 519,
          column: 35
        }
      },
      "217": {
        start: {
          line: 520,
          column: 4
        },
        end: {
          line: 735,
          column: 5
        }
      },
      "218": {
        start: {
          line: 521,
          column: 27
        },
        end: {
          line: 521,
          column: 50
        }
      },
      "219": {
        start: {
          line: 522,
          column: 8
        },
        end: {
          line: 530,
          column: 9
        }
      },
      "220": {
        start: {
          line: 523,
          column: 12
        },
        end: {
          line: 529,
          column: 15
        }
      },
      "221": {
        start: {
          line: 531,
          column: 33
        },
        end: {
          line: 542,
          column: 10
        }
      },
      "222": {
        start: {
          line: 543,
          column: 8
        },
        end: {
          line: 551,
          column: 9
        }
      },
      "223": {
        start: {
          line: 544,
          column: 12
        },
        end: {
          line: 550,
          column: 15
        }
      },
      "224": {
        start: {
          line: 552,
          column: 23
        },
        end: {
          line: 689,
          column: 10
        }
      },
      "225": {
        start: {
          line: 553,
          column: 37
        },
        end: {
          line: 553,
          column: 39
        }
      },
      "226": {
        start: {
          line: 554,
          column: 12
        },
        end: {
          line: 674,
          column: 13
        }
      },
      "227": {
        start: {
          line: 555,
          column: 16
        },
        end: {
          line: 673,
          column: 17
        }
      },
      "228": {
        start: {
          line: 556,
          column: 20
        },
        end: {
          line: 559,
          column: 21
        }
      },
      "229": {
        start: {
          line: 557,
          column: 24
        },
        end: {
          line: 557,
          column: 135
        }
      },
      "230": {
        start: {
          line: 558,
          column: 24
        },
        end: {
          line: 558,
          column: 33
        }
      },
      "231": {
        start: {
          line: 560,
          column: 38
        },
        end: {
          line: 560,
          column: 52
        }
      },
      "232": {
        start: {
          line: 561,
          column: 57
        },
        end: {
          line: 561,
          column: 70
        }
      },
      "233": {
        start: {
          line: 562,
          column: 47
        },
        end: {
          line: 562,
          column: 51
        }
      },
      "234": {
        start: {
          line: 563,
          column: 51
        },
        end: {
          line: 563,
          column: 81
        }
      },
      "235": {
        start: {
          line: 565,
          column: 20
        },
        end: {
          line: 570,
          column: 21
        }
      },
      "236": {
        start: {
          line: 566,
          column: 41
        },
        end: {
          line: 566,
          column: 101
        }
      },
      "237": {
        start: {
          line: 567,
          column: 24
        },
        end: {
          line: 569,
          column: 25
        }
      },
      "238": {
        start: {
          line: 568,
          column: 28
        },
        end: {
          line: 568,
          column: 60
        }
      },
      "239": {
        start: {
          line: 571,
          column: 20
        },
        end: {
          line: 644,
          column: 21
        }
      },
      "240": {
        start: {
          line: 573,
          column: 24
        },
        end: {
          line: 573,
          column: 125
        }
      },
      "241": {
        start: {
          line: 574,
          column: 24
        },
        end: {
          line: 607,
          column: 25
        }
      },
      "242": {
        start: {
          line: 575,
          column: 43
        },
        end: {
          line: 575,
          column: 52
        }
      },
      "243": {
        start: {
          line: 576,
          column: 54
        },
        end: {
          line: 576,
          column: 84
        }
      },
      "244": {
        start: {
          line: 577,
          column: 28
        },
        end: {
          line: 577,
          column: 93
        }
      },
      "245": {
        start: {
          line: 577,
          column: 84
        },
        end: {
          line: 577,
          column: 93
        }
      },
      "246": {
        start: {
          line: 578,
          column: 50
        },
        end: {
          line: 583,
          column: 30
        }
      },
      "247": {
        start: {
          line: 584,
          column: 28
        },
        end: {
          line: 606,
          column: 29
        }
      },
      "248": {
        start: {
          line: 585,
          column: 56
        },
        end: {
          line: 585,
          column: 78
        }
      },
      "249": {
        start: {
          line: 586,
          column: 56
        },
        end: {
          line: 586,
          column: 111
        }
      },
      "250": {
        start: {
          line: 587,
          column: 51
        },
        end: {
          line: 590,
          column: 33
        }
      },
      "251": {
        start: {
          line: 591,
          column: 32
        },
        end: {
          line: 596,
          column: 35
        }
      },
      "252": {
        start: {
          line: 597,
          column: 32
        },
        end: {
          line: 602,
          column: 35
        }
      },
      "253": {
        start: {
          line: 603,
          column: 32
        },
        end: {
          line: 603,
          column: 186
        }
      },
      "254": {
        start: {
          line: 605,
          column: 32
        },
        end: {
          line: 605,
          column: 198
        }
      },
      "255": {
        start: {
          line: 610,
          column: 24
        },
        end: {
          line: 610,
          column: 226
        }
      },
      "256": {
        start: {
          line: 611,
          column: 59
        },
        end: {
          line: 615,
          column: 26
        }
      },
      "257": {
        start: {
          line: 616,
          column: 24
        },
        end: {
          line: 643,
          column: 25
        }
      },
      "258": {
        start: {
          line: 617,
          column: 56
        },
        end: {
          line: 617,
          column: 85
        }
      },
      "259": {
        start: {
          line: 618,
          column: 55
        },
        end: {
          line: 618,
          column: 81
        }
      },
      "260": {
        start: {
          line: 619,
          column: 28
        },
        end: {
          line: 619,
          column: 171
        }
      },
      "261": {
        start: {
          line: 620,
          column: 52
        },
        end: {
          line: 620,
          column: 80
        }
      },
      "262": {
        start: {
          line: 621,
          column: 52
        },
        end: {
          line: 621,
          column: 124
        }
      },
      "263": {
        start: {
          line: 622,
          column: 55
        },
        end: {
          line: 625,
          column: 29
        }
      },
      "264": {
        start: {
          line: 626,
          column: 28
        },
        end: {
          line: 631,
          column: 31
        }
      },
      "265": {
        start: {
          line: 632,
          column: 28
        },
        end: {
          line: 637,
          column: 31
        }
      },
      "266": {
        start: {
          line: 638,
          column: 28
        },
        end: {
          line: 638,
          column: 214
        }
      },
      "267": {
        start: {
          line: 639,
          column: 31
        },
        end: {
          line: 643,
          column: 25
        }
      },
      "268": {
        start: {
          line: 640,
          column: 28
        },
        end: {
          line: 640,
          column: 168
        }
      },
      "269": {
        start: {
          line: 642,
          column: 28
        },
        end: {
          line: 642,
          column: 295
        }
      },
      "270": {
        start: {
          line: 646,
          column: 51
        },
        end: {
          line: 653,
          column: 22
        }
      },
      "271": {
        start: {
          line: 654,
          column: 49
        },
        end: {
          line: 654,
          column: 50
        }
      },
      "272": {
        start: {
          line: 655,
          column: 46
        },
        end: {
          line: 655,
          column: 47
        }
      },
      "273": {
        start: {
          line: 656,
          column: 20
        },
        end: {
          line: 659,
          column: 23
        }
      },
      "274": {
        start: {
          line: 657,
          column: 24
        },
        end: {
          line: 657,
          column: 65
        }
      },
      "275": {
        start: {
          line: 658,
          column: 24
        },
        end: {
          line: 658,
          column: 76
        }
      },
      "276": {
        start: {
          line: 660,
          column: 43
        },
        end: {
          line: 660,
          column: 44
        }
      },
      "277": {
        start: {
          line: 661,
          column: 20
        },
        end: {
          line: 663,
          column: 21
        }
      },
      "278": {
        start: {
          line: 662,
          column: 24
        },
        end: {
          line: 662,
          column: 88
        }
      },
      "279": {
        start: {
          line: 664,
          column: 20
        },
        end: {
          line: 671,
          column: 23
        }
      },
      "280": {
        start: {
          line: 675,
          column: 12
        },
        end: {
          line: 679,
          column: 15
        }
      },
      "281": {
        start: {
          line: 680,
          column: 12
        },
        end: {
          line: 684,
          column: 15
        }
      },
      "282": {
        start: {
          line: 685,
          column: 12
        },
        end: {
          line: 688,
          column: 14
        }
      },
      "283": {
        start: {
          line: 691,
          column: 8
        },
        end: {
          line: 693,
          column: 9
        }
      },
      "284": {
        start: {
          line: 692,
          column: 12
        },
        end: {
          line: 692,
          column: 92
        }
      },
      "285": {
        start: {
          line: 695,
          column: 8
        },
        end: {
          line: 709,
          column: 9
        }
      },
      "286": {
        start: {
          line: 696,
          column: 12
        },
        end: {
          line: 696,
          column: 61
        }
      },
      "287": {
        start: {
          line: 697,
          column: 12
        },
        end: {
          line: 697,
          column: 66
        }
      },
      "288": {
        start: {
          line: 698,
          column: 12
        },
        end: {
          line: 698,
          column: 72
        }
      },
      "289": {
        start: {
          line: 699,
          column: 12
        },
        end: {
          line: 699,
          column: 62
        }
      },
      "290": {
        start: {
          line: 700,
          column: 12
        },
        end: {
          line: 700,
          column: 60
        }
      },
      "291": {
        start: {
          line: 701,
          column: 12
        },
        end: {
          line: 701,
          column: 64
        }
      },
      "292": {
        start: {
          line: 703,
          column: 12
        },
        end: {
          line: 703,
          column: 81
        }
      },
      "293": {
        start: {
          line: 704,
          column: 12
        },
        end: {
          line: 704,
          column: 76
        }
      },
      "294": {
        start: {
          line: 705,
          column: 12
        },
        end: {
          line: 705,
          column: 80
        }
      },
      "295": {
        start: {
          line: 707,
          column: 12
        },
        end: {
          line: 707,
          column: 92
        }
      },
      "296": {
        start: {
          line: 711,
          column: 8
        },
        end: {
          line: 720,
          column: 9
        }
      },
      "297": {
        start: {
          line: 712,
          column: 12
        },
        end: {
          line: 712,
          column: 59
        }
      },
      "298": {
        start: {
          line: 713,
          column: 12
        },
        end: {
          line: 713,
          column: 64
        }
      },
      "299": {
        start: {
          line: 714,
          column: 12
        },
        end: {
          line: 714,
          column: 67
        }
      },
      "300": {
        start: {
          line: 715,
          column: 12
        },
        end: {
          line: 715,
          column: 72
        }
      },
      "301": {
        start: {
          line: 716,
          column: 12
        },
        end: {
          line: 716,
          column: 53
        }
      },
      "302": {
        start: {
          line: 717,
          column: 12
        },
        end: {
          line: 717,
          column: 78
        }
      },
      "303": {
        start: {
          line: 719,
          column: 12
        },
        end: {
          line: 719,
          column: 104
        }
      },
      "304": {
        start: {
          line: 721,
          column: 8
        },
        end: {
          line: 723,
          column: 11
        }
      },
      "305": {
        start: {
          line: 725,
          column: 8
        },
        end: {
          line: 725,
          column: 82
        }
      },
      "306": {
        start: {
          line: 726,
          column: 24
        },
        end: {
          line: 726,
          column: 92
        }
      },
      "307": {
        start: {
          line: 727,
          column: 8
        },
        end: {
          line: 734,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 13
          }
        },
        loc: {
          start: {
            line: 12,
            column: 23
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 10
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 10
          }
        },
        loc: {
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 33
          }
        },
        loc: {
          start: {
            line: 26,
            column: 39
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 26
      },
      "5": {
        name: "GET",
        decl: {
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 18
          }
        },
        loc: {
          start: {
            line: 31,
            column: 40
          },
          end: {
            line: 84,
            column: 1
          }
        },
        line: 31
      },
      "6": {
        name: "PUT",
        decl: {
          start: {
            line: 85,
            column: 15
          },
          end: {
            line: 85,
            column: 18
          }
        },
        loc: {
          start: {
            line: 85,
            column: 40
          },
          end: {
            line: 517,
            column: 1
          }
        },
        line: 85
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 138,
            column: 58
          },
          end: {
            line: 138,
            column: 59
          }
        },
        loc: {
          start: {
            line: 138,
            column: 70
          },
          end: {
            line: 465,
            column: 9
          }
        },
        line: 138
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 223,
            column: 93
          },
          end: {
            line: 223,
            column: 94
          }
        },
        loc: {
          start: {
            line: 223,
            column: 105
          },
          end: {
            line: 223,
            column: 123
          }
        },
        line: 223
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 235,
            column: 51
          },
          end: {
            line: 235,
            column: 52
          }
        },
        loc: {
          start: {
            line: 235,
            column: 67
          },
          end: {
            line: 238,
            column: 21
          }
        },
        line: 235
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 261,
            column: 37
          },
          end: {
            line: 261,
            column: 38
          }
        },
        loc: {
          start: {
            line: 261,
            column: 45
          },
          end: {
            line: 263,
            column: 17
          }
        },
        line: 261
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 426,
            column: 45
          },
          end: {
            line: 426,
            column: 46
          }
        },
        loc: {
          start: {
            line: 426,
            column: 61
          },
          end: {
            line: 429,
            column: 21
          }
        },
        line: 426
      },
      "12": {
        name: "DELETE",
        decl: {
          start: {
            line: 518,
            column: 15
          },
          end: {
            line: 518,
            column: 21
          }
        },
        loc: {
          start: {
            line: 518,
            column: 43
          },
          end: {
            line: 736,
            column: 1
          }
        },
        line: 518
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 552,
            column: 58
          },
          end: {
            line: 552,
            column: 59
          }
        },
        loc: {
          start: {
            line: 552,
            column: 70
          },
          end: {
            line: 689,
            column: 9
          }
        },
        line: 552
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 656,
            column: 51
          },
          end: {
            line: 656,
            column: 52
          }
        },
        loc: {
          start: {
            line: 656,
            column: 60
          },
          end: {
            line: 659,
            column: 21
          }
        },
        line: 656
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 35
          },
          end: {
            line: 27,
            column: 38
          }
        }, {
          start: {
            line: 27,
            column: 41
          },
          end: {
            line: 29,
            column: 5
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 14
          }
        }, {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 32
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "4": {
        loc: {
          start: {
            line: 70,
            column: 64
          },
          end: {
            line: 70,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 64
          },
          end: {
            line: 70,
            column: 93
          }
        }, {
          start: {
            line: 70,
            column: 97
          },
          end: {
            line: 70,
            column: 107
          }
        }],
        line: 70
      },
      "5": {
        loc: {
          start: {
            line: 74,
            column: 24
          },
          end: {
            line: 74,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 74,
            column: 49
          },
          end: {
            line: 74,
            column: 62
          }
        }, {
          start: {
            line: 74,
            column: 65
          },
          end: {
            line: 74,
            column: 92
          }
        }],
        line: 74
      },
      "6": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "7": {
        loc: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "8": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 123,
            column: 96
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 123,
            column: 96
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "9": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 124,
            column: 75
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 124,
            column: 75
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "10": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 125,
            column: 79
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 125,
            column: 79
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "11": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 126,
            column: 129
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 126,
            column: 129
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "12": {
        loc: {
          start: {
            line: 126,
            column: 74
          },
          end: {
            line: 126,
            column: 128
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 126,
            column: 94
          },
          end: {
            line: 126,
            column: 121
          }
        }, {
          start: {
            line: 126,
            column: 124
          },
          end: {
            line: 126,
            column: 128
          }
        }],
        line: 126
      },
      "13": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 128,
            column: 99
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 128,
            column: 99
          }
        }, {
          start: {
            line: 128,
            column: 13
          },
          end: {
            line: 128,
            column: 99
          }
        }],
        line: 127
      },
      "14": {
        loc: {
          start: {
            line: 128,
            column: 13
          },
          end: {
            line: 128,
            column: 99
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 13
          },
          end: {
            line: 128,
            column: 99
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "15": {
        loc: {
          start: {
            line: 129,
            column: 43
          },
          end: {
            line: 129,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 129,
            column: 80
          },
          end: {
            line: 129,
            column: 100
          }
        }, {
          start: {
            line: 129,
            column: 103
          },
          end: {
            line: 129,
            column: 133
          }
        }],
        line: 129
      },
      "16": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 137,
            column: 10
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 137,
            column: 10
          }
        }, {
          start: {
            line: 135,
            column: 13
          },
          end: {
            line: 137,
            column: 10
          }
        }],
        line: 130
      },
      "17": {
        loc: {
          start: {
            line: 135,
            column: 13
          },
          end: {
            line: 137,
            column: 10
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 13
          },
          end: {
            line: 137,
            column: 10
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "18": {
        loc: {
          start: {
            line: 135,
            column: 17
          },
          end: {
            line: 135,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 17
          },
          end: {
            line: 135,
            column: 46
          }
        }, {
          start: {
            line: 135,
            column: 50
          },
          end: {
            line: 135,
            column: 77
          }
        }],
        line: 135
      },
      "19": {
        loc: {
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 252,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 252,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "20": {
        loc: {
          start: {
            line: 140,
            column: 16
          },
          end: {
            line: 140,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 16
          },
          end: {
            line: 140,
            column: 38
          }
        }, {
          start: {
            line: 140,
            column: 42
          },
          end: {
            line: 140,
            column: 75
          }
        }],
        line: 140
      },
      "21": {
        loc: {
          start: {
            line: 147,
            column: 20
          },
          end: {
            line: 147,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 20
          },
          end: {
            line: 147,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "22": {
        loc: {
          start: {
            line: 148,
            column: 48
          },
          end: {
            line: 148,
            column: 461
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 148,
            column: 213
          },
          end: {
            line: 148,
            column: 284
          }
        }, {
          start: {
            line: 148,
            column: 287
          },
          end: {
            line: 148,
            column: 461
          }
        }],
        line: 148
      },
      "23": {
        loc: {
          start: {
            line: 148,
            column: 48
          },
          end: {
            line: 148,
            column: 210
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 48
          },
          end: {
            line: 148,
            column: 78
          }
        }, {
          start: {
            line: 148,
            column: 82
          },
          end: {
            line: 148,
            column: 127
          }
        }, {
          start: {
            line: 148,
            column: 131
          },
          end: {
            line: 148,
            column: 210
          }
        }],
        line: 148
      },
      "24": {
        loc: {
          start: {
            line: 148,
            column: 287
          },
          end: {
            line: 148,
            column: 461
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 148,
            column: 424
          },
          end: {
            line: 148,
            column: 454
          }
        }, {
          start: {
            line: 148,
            column: 457
          },
          end: {
            line: 148,
            column: 461
          }
        }],
        line: 148
      },
      "25": {
        loc: {
          start: {
            line: 148,
            column: 287
          },
          end: {
            line: 148,
            column: 421
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 287
          },
          end: {
            line: 148,
            column: 317
          }
        }, {
          start: {
            line: 148,
            column: 321
          },
          end: {
            line: 148,
            column: 371
          }
        }, {
          start: {
            line: 148,
            column: 375
          },
          end: {
            line: 148,
            column: 421
          }
        }],
        line: 148
      },
      "26": {
        loc: {
          start: {
            line: 149,
            column: 20
          },
          end: {
            line: 216,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 20
          },
          end: {
            line: 216,
            column: 21
          }
        }, {
          start: {
            line: 181,
            column: 27
          },
          end: {
            line: 216,
            column: 21
          }
        }],
        line: 149
      },
      "27": {
        loc: {
          start: {
            line: 149,
            column: 24
          },
          end: {
            line: 149,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 24
          },
          end: {
            line: 149,
            column: 43
          }
        }, {
          start: {
            line: 149,
            column: 47
          },
          end: {
            line: 149,
            column: 90
          }
        }],
        line: 149
      },
      "28": {
        loc: {
          start: {
            line: 153,
            column: 28
          },
          end: {
            line: 153,
            column: 81
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 28
          },
          end: {
            line: 153,
            column: 81
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "29": {
        loc: {
          start: {
            line: 153,
            column: 32
          },
          end: {
            line: 153,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 32
          },
          end: {
            line: 153,
            column: 48
          }
        }, {
          start: {
            line: 153,
            column: 52
          },
          end: {
            line: 153,
            column: 70
          }
        }],
        line: 153
      },
      "30": {
        loc: {
          start: {
            line: 160,
            column: 28
          },
          end: {
            line: 179,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 28
          },
          end: {
            line: 179,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "31": {
        loc: {
          start: {
            line: 170,
            column: 58
          },
          end: {
            line: 170,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 170,
            column: 78
          },
          end: {
            line: 170,
            column: 79
          }
        }, {
          start: {
            line: 170,
            column: 82
          },
          end: {
            line: 170,
            column: 108
          }
        }],
        line: 170
      },
      "32": {
        loc: {
          start: {
            line: 189,
            column: 24
          },
          end: {
            line: 215,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 24
          },
          end: {
            line: 215,
            column: 25
          }
        }, {
          start: {
            line: 211,
            column: 31
          },
          end: {
            line: 215,
            column: 25
          }
        }],
        line: 189
      },
      "33": {
        loc: {
          start: {
            line: 201,
            column: 54
          },
          end: {
            line: 201,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 201,
            column: 74
          },
          end: {
            line: 201,
            column: 75
          }
        }, {
          start: {
            line: 201,
            column: 78
          },
          end: {
            line: 201,
            column: 104
          }
        }],
        line: 201
      },
      "34": {
        loc: {
          start: {
            line: 211,
            column: 31
          },
          end: {
            line: 215,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 31
          },
          end: {
            line: 215,
            column: 25
          }
        }, {
          start: {
            line: 213,
            column: 31
          },
          end: {
            line: 215,
            column: 25
          }
        }],
        line: 211
      },
      "35": {
        loc: {
          start: {
            line: 240,
            column: 20
          },
          end: {
            line: 242,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 20
          },
          end: {
            line: 242,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "36": {
        loc: {
          start: {
            line: 248,
            column: 49
          },
          end: {
            line: 248,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 248,
            column: 63
          },
          end: {
            line: 248,
            column: 69
          }
        }, {
          start: {
            line: 248,
            column: 72
          },
          end: {
            line: 248,
            column: 73
          }
        }],
        line: 248
      },
      "37": {
        loc: {
          start: {
            line: 260,
            column: 12
          },
          end: {
            line: 264,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 12
          },
          end: {
            line: 264,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "38": {
        loc: {
          start: {
            line: 260,
            column: 16
          },
          end: {
            line: 260,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 260,
            column: 16
          },
          end: {
            line: 260,
            column: 28
          }
        }, {
          start: {
            line: 260,
            column: 32
          },
          end: {
            line: 260,
            column: 59
          }
        }],
        line: 260
      },
      "39": {
        loc: {
          start: {
            line: 262,
            column: 76
          },
          end: {
            line: 262,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 76
          },
          end: {
            line: 262,
            column: 86
          }
        }, {
          start: {
            line: 262,
            column: 90
          },
          end: {
            line: 262,
            column: 91
          }
        }],
        line: 262
      },
      "40": {
        loc: {
          start: {
            line: 272,
            column: 12
          },
          end: {
            line: 447,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 12
          },
          end: {
            line: 447,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "41": {
        loc: {
          start: {
            line: 272,
            column: 16
          },
          end: {
            line: 272,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 272,
            column: 16
          },
          end: {
            line: 272,
            column: 28
          }
        }, {
          start: {
            line: 272,
            column: 32
          },
          end: {
            line: 272,
            column: 59
          }
        }],
        line: 272
      },
      "42": {
        loc: {
          start: {
            line: 275,
            column: 20
          },
          end: {
            line: 275,
            column: 99
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 20
          },
          end: {
            line: 275,
            column: 99
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 275
      },
      "43": {
        loc: {
          start: {
            line: 275,
            column: 24
          },
          end: {
            line: 275,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 275,
            column: 24
          },
          end: {
            line: 275,
            column: 42
          }
        }, {
          start: {
            line: 275,
            column: 46
          },
          end: {
            line: 275,
            column: 63
          }
        }, {
          start: {
            line: 275,
            column: 67
          },
          end: {
            line: 275,
            column: 88
          }
        }],
        line: 275
      },
      "44": {
        loc: {
          start: {
            line: 281,
            column: 42
          },
          end: {
            line: 281,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 281,
            column: 42
          },
          end: {
            line: 281,
            column: 55
          }
        }, {
          start: {
            line: 281,
            column: 59
          },
          end: {
            line: 281,
            column: 60
          }
        }],
        line: 281
      },
      "45": {
        loc: {
          start: {
            line: 282,
            column: 69
          },
          end: {
            line: 282,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 282,
            column: 69
          },
          end: {
            line: 282,
            column: 82
          }
        }, {
          start: {
            line: 282,
            column: 86
          },
          end: {
            line: 282,
            column: 87
          }
        }],
        line: 282
      },
      "46": {
        loc: {
          start: {
            line: 290,
            column: 20
          },
          end: {
            line: 290,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 20
          },
          end: {
            line: 290,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "47": {
        loc: {
          start: {
            line: 291,
            column: 48
          },
          end: {
            line: 291,
            column: 297
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 291,
            column: 137
          },
          end: {
            line: 291,
            column: 160
          }
        }, {
          start: {
            line: 291,
            column: 163
          },
          end: {
            line: 291,
            column: 297
          }
        }],
        line: 291
      },
      "48": {
        loc: {
          start: {
            line: 291,
            column: 48
          },
          end: {
            line: 291,
            column: 134
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 48
          },
          end: {
            line: 291,
            column: 68
          }
        }, {
          start: {
            line: 291,
            column: 72
          },
          end: {
            line: 291,
            column: 107
          }
        }, {
          start: {
            line: 291,
            column: 111
          },
          end: {
            line: 291,
            column: 134
          }
        }],
        line: 291
      },
      "49": {
        loc: {
          start: {
            line: 291,
            column: 163
          },
          end: {
            line: 291,
            column: 297
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 291,
            column: 270
          },
          end: {
            line: 291,
            column: 290
          }
        }, {
          start: {
            line: 291,
            column: 293
          },
          end: {
            line: 291,
            column: 297
          }
        }],
        line: 291
      },
      "50": {
        loc: {
          start: {
            line: 291,
            column: 163
          },
          end: {
            line: 291,
            column: 267
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 163
          },
          end: {
            line: 291,
            column: 183
          }
        }, {
          start: {
            line: 291,
            column: 187
          },
          end: {
            line: 291,
            column: 227
          }
        }, {
          start: {
            line: 291,
            column: 231
          },
          end: {
            line: 291,
            column: 267
          }
        }],
        line: 291
      },
      "51": {
        loc: {
          start: {
            line: 293,
            column: 20
          },
          end: {
            line: 416,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 20
          },
          end: {
            line: 416,
            column: 21
          }
        }, {
          start: {
            line: 345,
            column: 27
          },
          end: {
            line: 416,
            column: 21
          }
        }],
        line: 293
      },
      "52": {
        loc: {
          start: {
            line: 293,
            column: 24
          },
          end: {
            line: 293,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 293,
            column: 24
          },
          end: {
            line: 293,
            column: 43
          }
        }, {
          start: {
            line: 293,
            column: 47
          },
          end: {
            line: 293,
            column: 90
          }
        }],
        line: 293
      },
      "53": {
        loc: {
          start: {
            line: 297,
            column: 28
          },
          end: {
            line: 297,
            column: 75
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 28
          },
          end: {
            line: 297,
            column: 75
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 297
      },
      "54": {
        loc: {
          start: {
            line: 297,
            column: 32
          },
          end: {
            line: 297,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 297,
            column: 32
          },
          end: {
            line: 297,
            column: 45
          }
        }, {
          start: {
            line: 297,
            column: 49
          },
          end: {
            line: 297,
            column: 64
          }
        }],
        line: 297
      },
      "55": {
        loc: {
          start: {
            line: 305,
            column: 46
          },
          end: {
            line: 305,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 305,
            column: 46
          },
          end: {
            line: 305,
            column: 65
          }
        }, {
          start: {
            line: 305,
            column: 69
          },
          end: {
            line: 305,
            column: 70
          }
        }],
        line: 305
      },
      "56": {
        loc: {
          start: {
            line: 307,
            column: 53
          },
          end: {
            line: 307,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 307,
            column: 53
          },
          end: {
            line: 307,
            column: 66
          }
        }, {
          start: {
            line: 307,
            column: 70
          },
          end: {
            line: 307,
            column: 71
          }
        }],
        line: 307
      },
      "57": {
        loc: {
          start: {
            line: 308,
            column: 28
          },
          end: {
            line: 337,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 308,
            column: 28
          },
          end: {
            line: 337,
            column: 29
          }
        }, {
          start: {
            line: 326,
            column: 35
          },
          end: {
            line: 337,
            column: 29
          }
        }],
        line: 308
      },
      "58": {
        loc: {
          start: {
            line: 310,
            column: 59
          },
          end: {
            line: 310,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 310,
            column: 59
          },
          end: {
            line: 310,
            column: 77
          }
        }, {
          start: {
            line: 310,
            column: 81
          },
          end: {
            line: 310,
            column: 82
          }
        }],
        line: 310
      },
      "59": {
        loc: {
          start: {
            line: 310,
            column: 87
          },
          end: {
            line: 310,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 310,
            column: 87
          },
          end: {
            line: 310,
            column: 113
          }
        }, {
          start: {
            line: 310,
            column: 117
          },
          end: {
            line: 310,
            column: 118
          }
        }],
        line: 310
      },
      "60": {
        loc: {
          start: {
            line: 312,
            column: 32
          },
          end: {
            line: 316,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 312,
            column: 32
          },
          end: {
            line: 316,
            column: 33
          }
        }, {
          start: {
            line: 314,
            column: 39
          },
          end: {
            line: 316,
            column: 33
          }
        }],
        line: 312
      },
      "61": {
        loc: {
          start: {
            line: 323,
            column: 58
          },
          end: {
            line: 323,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 323,
            column: 90
          },
          end: {
            line: 323,
            column: 114
          }
        }, {
          start: {
            line: 323,
            column: 117
          },
          end: {
            line: 323,
            column: 118
          }
        }],
        line: 323
      },
      "62": {
        loc: {
          start: {
            line: 334,
            column: 58
          },
          end: {
            line: 334,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 334,
            column: 90
          },
          end: {
            line: 334,
            column: 114
          }
        }, {
          start: {
            line: 334,
            column: 117
          },
          end: {
            line: 334,
            column: 118
          }
        }],
        line: 334
      },
      "63": {
        loc: {
          start: {
            line: 354,
            column: 24
          },
          end: {
            line: 361,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 354,
            column: 24
          },
          end: {
            line: 361,
            column: 25
          }
        }, {
          start: {
            line: 357,
            column: 31
          },
          end: {
            line: 361,
            column: 25
          }
        }],
        line: 354
      },
      "64": {
        loc: {
          start: {
            line: 357,
            column: 31
          },
          end: {
            line: 361,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 357,
            column: 31
          },
          end: {
            line: 361,
            column: 25
          }
        }, {
          start: {
            line: 359,
            column: 31
          },
          end: {
            line: 361,
            column: 25
          }
        }],
        line: 357
      },
      "65": {
        loc: {
          start: {
            line: 362,
            column: 24
          },
          end: {
            line: 415,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 362,
            column: 24
          },
          end: {
            line: 415,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 362
      },
      "66": {
        loc: {
          start: {
            line: 364,
            column: 28
          },
          end: {
            line: 414,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 364,
            column: 28
          },
          end: {
            line: 414,
            column: 29
          }
        }, {
          start: {
            line: 412,
            column: 35
          },
          end: {
            line: 414,
            column: 29
          }
        }],
        line: 364
      },
      "67": {
        loc: {
          start: {
            line: 372,
            column: 50
          },
          end: {
            line: 372,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 372,
            column: 50
          },
          end: {
            line: 372,
            column: 69
          }
        }, {
          start: {
            line: 372,
            column: 73
          },
          end: {
            line: 372,
            column: 74
          }
        }],
        line: 372
      },
      "68": {
        loc: {
          start: {
            line: 374,
            column: 57
          },
          end: {
            line: 374,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 374,
            column: 57
          },
          end: {
            line: 374,
            column: 70
          }
        }, {
          start: {
            line: 374,
            column: 74
          },
          end: {
            line: 374,
            column: 75
          }
        }],
        line: 374
      },
      "69": {
        loc: {
          start: {
            line: 375,
            column: 32
          },
          end: {
            line: 405,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 375,
            column: 32
          },
          end: {
            line: 405,
            column: 33
          }
        }, {
          start: {
            line: 393,
            column: 39
          },
          end: {
            line: 405,
            column: 33
          }
        }],
        line: 375
      },
      "70": {
        loc: {
          start: {
            line: 377,
            column: 63
          },
          end: {
            line: 377,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 377,
            column: 63
          },
          end: {
            line: 377,
            column: 81
          }
        }, {
          start: {
            line: 377,
            column: 85
          },
          end: {
            line: 377,
            column: 86
          }
        }],
        line: 377
      },
      "71": {
        loc: {
          start: {
            line: 377,
            column: 91
          },
          end: {
            line: 377,
            column: 122
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 377,
            column: 91
          },
          end: {
            line: 377,
            column: 117
          }
        }, {
          start: {
            line: 377,
            column: 121
          },
          end: {
            line: 377,
            column: 122
          }
        }],
        line: 377
      },
      "72": {
        loc: {
          start: {
            line: 379,
            column: 36
          },
          end: {
            line: 383,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 379,
            column: 36
          },
          end: {
            line: 383,
            column: 37
          }
        }, {
          start: {
            line: 381,
            column: 43
          },
          end: {
            line: 383,
            column: 37
          }
        }],
        line: 379
      },
      "73": {
        loc: {
          start: {
            line: 390,
            column: 62
          },
          end: {
            line: 390,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 390,
            column: 94
          },
          end: {
            line: 390,
            column: 118
          }
        }, {
          start: {
            line: 390,
            column: 121
          },
          end: {
            line: 390,
            column: 122
          }
        }],
        line: 390
      },
      "74": {
        loc: {
          start: {
            line: 402,
            column: 62
          },
          end: {
            line: 402,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 402,
            column: 94
          },
          end: {
            line: 402,
            column: 118
          }
        }, {
          start: {
            line: 402,
            column: 121
          },
          end: {
            line: 402,
            column: 122
          }
        }],
        line: 402
      },
      "75": {
        loc: {
          start: {
            line: 431,
            column: 20
          },
          end: {
            line: 433,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 431,
            column: 20
          },
          end: {
            line: 433,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 431
      },
      "76": {
        loc: {
          start: {
            line: 435,
            column: 20
          },
          end: {
            line: 437,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 435,
            column: 20
          },
          end: {
            line: 437,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 435
      },
      "77": {
        loc: {
          start: {
            line: 435,
            column: 24
          },
          end: {
            line: 435,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 435,
            column: 24
          },
          end: {
            line: 435,
            column: 51
          }
        }, {
          start: {
            line: 435,
            column: 55
          },
          end: {
            line: 435,
            column: 84
          }
        }],
        line: 435
      },
      "78": {
        loc: {
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 471,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 471,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 469
      },
      "79": {
        loc: {
          start: {
            line: 469,
            column: 12
          },
          end: {
            line: 469,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 469,
            column: 12
          },
          end: {
            line: 469,
            column: 18
          }
        }, {
          start: {
            line: 469,
            column: 22
          },
          end: {
            line: 469,
            column: 47
          }
        }],
        line: 469
      },
      "80": {
        loc: {
          start: {
            line: 507,
            column: 24
          },
          end: {
            line: 507,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 507,
            column: 49
          },
          end: {
            line: 507,
            column: 62
          }
        }, {
          start: {
            line: 507,
            column: 65
          },
          end: {
            line: 507,
            column: 78
          }
        }],
        line: 507
      },
      "81": {
        loc: {
          start: {
            line: 522,
            column: 8
          },
          end: {
            line: 530,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 522,
            column: 8
          },
          end: {
            line: 530,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 522
      },
      "82": {
        loc: {
          start: {
            line: 543,
            column: 8
          },
          end: {
            line: 551,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 543,
            column: 8
          },
          end: {
            line: 551,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 543
      },
      "83": {
        loc: {
          start: {
            line: 554,
            column: 12
          },
          end: {
            line: 674,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 554,
            column: 12
          },
          end: {
            line: 674,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 554
      },
      "84": {
        loc: {
          start: {
            line: 554,
            column: 16
          },
          end: {
            line: 554,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 554,
            column: 16
          },
          end: {
            line: 554,
            column: 38
          }
        }, {
          start: {
            line: 554,
            column: 42
          },
          end: {
            line: 554,
            column: 75
          }
        }],
        line: 554
      },
      "85": {
        loc: {
          start: {
            line: 556,
            column: 20
          },
          end: {
            line: 559,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 556,
            column: 20
          },
          end: {
            line: 559,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 556
      },
      "86": {
        loc: {
          start: {
            line: 565,
            column: 20
          },
          end: {
            line: 570,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 565,
            column: 20
          },
          end: {
            line: 570,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 565
      },
      "87": {
        loc: {
          start: {
            line: 565,
            column: 24
          },
          end: {
            line: 565,
            column: 159
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 565,
            column: 24
          },
          end: {
            line: 565,
            column: 46
          }
        }, {
          start: {
            line: 565,
            column: 50
          },
          end: {
            line: 565,
            column: 87
          }
        }, {
          start: {
            line: 565,
            column: 91
          },
          end: {
            line: 565,
            column: 159
          }
        }],
        line: 565
      },
      "88": {
        loc: {
          start: {
            line: 567,
            column: 24
          },
          end: {
            line: 569,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 567,
            column: 24
          },
          end: {
            line: 569,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 567
      },
      "89": {
        loc: {
          start: {
            line: 567,
            column: 28
          },
          end: {
            line: 567,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 567,
            column: 28
          },
          end: {
            line: 567,
            column: 36
          }
        }, {
          start: {
            line: 567,
            column: 40
          },
          end: {
            line: 567,
            column: 68
          }
        }, {
          start: {
            line: 567,
            column: 72
          },
          end: {
            line: 567,
            column: 104
          }
        }],
        line: 567
      },
      "90": {
        loc: {
          start: {
            line: 571,
            column: 20
          },
          end: {
            line: 644,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 571,
            column: 20
          },
          end: {
            line: 644,
            column: 21
          }
        }, {
          start: {
            line: 608,
            column: 27
          },
          end: {
            line: 644,
            column: 21
          }
        }],
        line: 571
      },
      "91": {
        loc: {
          start: {
            line: 577,
            column: 28
          },
          end: {
            line: 577,
            column: 93
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 577,
            column: 28
          },
          end: {
            line: 577,
            column: 93
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 577
      },
      "92": {
        loc: {
          start: {
            line: 577,
            column: 32
          },
          end: {
            line: 577,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 577,
            column: 32
          },
          end: {
            line: 577,
            column: 56
          }
        }, {
          start: {
            line: 577,
            column: 60
          },
          end: {
            line: 577,
            column: 82
          }
        }],
        line: 577
      },
      "93": {
        loc: {
          start: {
            line: 584,
            column: 28
          },
          end: {
            line: 606,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 584,
            column: 28
          },
          end: {
            line: 606,
            column: 29
          }
        }, {
          start: {
            line: 604,
            column: 35
          },
          end: {
            line: 606,
            column: 29
          }
        }],
        line: 584
      },
      "94": {
        loc: {
          start: {
            line: 589,
            column: 54
          },
          end: {
            line: 589,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 589,
            column: 78
          },
          end: {
            line: 589,
            column: 79
          }
        }, {
          start: {
            line: 589,
            column: 82
          },
          end: {
            line: 589,
            column: 112
          }
        }],
        line: 589
      },
      "95": {
        loc: {
          start: {
            line: 616,
            column: 24
          },
          end: {
            line: 643,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 616,
            column: 24
          },
          end: {
            line: 643,
            column: 25
          }
        }, {
          start: {
            line: 639,
            column: 31
          },
          end: {
            line: 643,
            column: 25
          }
        }],
        line: 616
      },
      "96": {
        loc: {
          start: {
            line: 624,
            column: 50
          },
          end: {
            line: 624,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 624,
            column: 74
          },
          end: {
            line: 624,
            column: 75
          }
        }, {
          start: {
            line: 624,
            column: 78
          },
          end: {
            line: 624,
            column: 114
          }
        }],
        line: 624
      },
      "97": {
        loc: {
          start: {
            line: 639,
            column: 31
          },
          end: {
            line: 643,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 639,
            column: 31
          },
          end: {
            line: 643,
            column: 25
          }
        }, {
          start: {
            line: 641,
            column: 31
          },
          end: {
            line: 643,
            column: 25
          }
        }],
        line: 639
      },
      "98": {
        loc: {
          start: {
            line: 661,
            column: 20
          },
          end: {
            line: 663,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 661,
            column: 20
          },
          end: {
            line: 663,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 661
      },
      "99": {
        loc: {
          start: {
            line: 669,
            column: 49
          },
          end: {
            line: 669,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 669,
            column: 73
          },
          end: {
            line: 669,
            column: 89
          }
        }, {
          start: {
            line: 669,
            column: 92
          },
          end: {
            line: 669,
            column: 93
          }
        }],
        line: 669
      },
      "100": {
        loc: {
          start: {
            line: 691,
            column: 8
          },
          end: {
            line: 693,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 691,
            column: 8
          },
          end: {
            line: 693,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 691
      },
      "101": {
        loc: {
          start: {
            line: 691,
            column: 12
          },
          end: {
            line: 691,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 691,
            column: 12
          },
          end: {
            line: 691,
            column: 18
          }
        }, {
          start: {
            line: 691,
            column: 22
          },
          end: {
            line: 691,
            column: 45
          }
        }],
        line: 691
      },
      "102": {
        loc: {
          start: {
            line: 726,
            column: 24
          },
          end: {
            line: 726,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 726,
            column: 49
          },
          end: {
            line: 726,
            column: 62
          }
        }, {
          start: {
            line: 726,
            column: 65
          },
          end: {
            line: 726,
            column: 92
          }
        }],
        line: 726
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0],
      "24": [0, 0],
      "25": [0, 0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0, 0],
      "49": [0, 0],
      "50": [0, 0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0, 0],
      "88": [0, 0],
      "89": [0, 0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0],
      "96": [0, 0],
      "97": [0, 0],
      "98": [0, 0],
      "99": [0, 0],
      "100": [0, 0],
      "101": [0, 0],
      "102": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/purchases/[id]/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { revalidateTag, revalidatePath } from 'next/cache';\nimport prisma from '@/lib/prisma';\nimport { PrismaClientKnownRequestError } from '@prisma/client/runtime/library';\nimport { getToken } from 'next-auth/jwt';\nimport { cacheService } from '@/lib/cache';\n\n// GET /api/purchases/[id] - Get a specific purchase invoice\nexport async function GET(\n    request: NextRequest,\n    { params }: { params: { id: string } }\n) {\n    const id = params.id; // Store params.id early to avoid async issues\n    try {\n        const purchaseId = parseInt(id);\n\n        if (isNaN(purchaseId)) {\n            return NextResponse.json(\n                { error: { message: 'Invalid purchase ID format' } },\n                { status: 400 }\n            );\n        }\n\n        const purchase = await prisma.purchaseInvoice.findUnique({\n            where: {\n                id: purchaseId\n            },\n            include: {\n                supplier: true,\n                items: {\n                    include: {\n                        product: true\n                    }\n                }\n            }\n        });\n\n        if (!purchase) {\n            return NextResponse.json(\n                { error: { message: 'Purchase invoice not found' } },\n                { status: 404 }\n            );\n        }\n\n        // Create response with proper cache headers\n        const response = NextResponse.json(purchase);\n        \n        // Add cache control headers to enable proper caching and revalidation\n        response.headers.set('Cache-Control', 'no-cache, must-revalidate');\n        response.headers.set('ETag', `\"purchase-${purchaseId}-${purchase.updatedAt?.getTime() || Date.now()}\"`);\n        \n        return response;\n    } catch (error) {\n        console.error(`Error fetching purchase invoice ${id}:`, error);\n        const details = error instanceof Error ? error.message : 'An unknown error occurred';\n        return NextResponse.json(\n            { error: { message: 'Failed to fetch purchase invoice', details: details } },\n            { status: 500 }\n        );\n    }\n}\n\n// PUT /api/purchases/[id] - Update a purchase invoice\nexport async function PUT(\n    request: NextRequest,\n    { params }: { params: { id: string } }\n) {\n    const id = params.id;\n    try {\n        const purchaseId = parseInt(id);\n        if (isNaN(purchaseId)) {\n            return NextResponse.json(\n                { error: { message: 'Invalid purchase ID format' } },\n                { status: 400 });\n        }\n        const body = await request.json();\n        const originalPurchase = await prisma.purchaseInvoice.findUnique({\n            where: { id: purchaseId },\n            include: { items: { include: { product: true } } },\n        });\n        if (!originalPurchase) {\n            return NextResponse.json(\n                { error: { message: 'Purchase invoice not found to update' } },\n                { status: 404 });\n        }\n        const { items: newItemsData, distributions: newDistributionsData, ...invoiceData } = body;\n        const { id: _, createdAt, updatedAt, supplier, notes, ...dirtyData } = invoiceData;\n        const cleanedInvoiceData: any = {};\n        if (dirtyData.invoiceNumber) cleanedInvoiceData.invoiceNumber = dirtyData.invoiceNumber;\n        if (dirtyData.status) cleanedInvoiceData.status = dirtyData.status;\n        if (dirtyData.date) cleanedInvoiceData.date = new Date(dirtyData.date);\n        if (dirtyData.dueDate !== undefined) cleanedInvoiceData.dueDate = dirtyData.dueDate ? new Date(dirtyData.dueDate) : null;\n        if (dirtyData.totalAmount !== undefined) cleanedInvoiceData.total = Number(dirtyData.totalAmount);\n        else if (dirtyData.total !== undefined) cleanedInvoiceData.total = Number(dirtyData.total);\n        cleanedInvoiceData.distributions = newDistributionsData !== undefined ? newDistributionsData : originalPurchase.distributions;\n        if (dirtyData.supplierId) cleanedInvoiceData.supplier = { connect: { id: Number(dirtyData.supplierId) } };\n        else if (dirtyData.supplierId === null && originalPurchase.supplierId) cleanedInvoiceData.supplier = { disconnect: true };\n\n        const result = await prisma.$transaction(async (tx) => {\n            const inventoryUpdates: Array<{ productId: number, shopId: number, newQuantity: number, oldQuantity?: number }> = [];\n\n            if (originalPurchase.items && originalPurchase.items.length > 0) {\n                for (const oldItem of originalPurchase.items) {\n                    const productToUpdate = await tx.product.findUnique({ where: { id: oldItem.productId } });\n                    if (!productToUpdate) continue;\n\n                    const oldItemDistribution = originalPurchase.distributions && Array.isArray(originalPurchase.distributions) && originalPurchase.items.indexOf(oldItem) < originalPurchase.distributions.length\n                        ? originalPurchase.distributions[originalPurchase.items.indexOf(oldItem)]\n                        : (originalPurchase.distributions && typeof originalPurchase.distributions === 'object' && !Array.isArray(originalPurchase.distributions) ? originalPurchase.distributions : null);\n\n                    if (oldItemDistribution && Object.keys(oldItemDistribution).length > 0) {\n                        for (const [shopIdStr, quantityInShop] of Object.entries(oldItemDistribution as any)) {\n                            const shopId = shopIdStr;\n                            const qtyToRemove = Number(quantityInShop);\n                            if (qtyToRemove <= 0 || isNaN(qtyToRemove)) continue;\n                            const inventory = await tx.inventoryItem.findFirst({ where: { productId: oldItem.productId, shopId: shopId } });\n                            if (inventory) {\n                                const oldShopQuantity = inventory.quantity;\n                                const newQuantity = Math.max(0, inventory.quantity - qtyToRemove);\n                                await tx.inventoryItem.update({\n                                    where: { id: inventory.id },\n                                    data: {\n                                        quantity: newQuantity,\n                                        // If new quantity is 0, reset shopSpecificCost, else keep existing\n                                        shopSpecificCost: newQuantity === 0 ? 0 : inventory.shopSpecificCost\n                                    }\n                                });\n                                inventoryUpdates.push({ productId: oldItem.productId, shopId: Number(shopId), newQuantity, oldQuantity: oldShopQuantity });\n                            }\n                        }\n                    } else {\n                        // oldItemDistribution is missing. Attempt to infer shop for stock reversal.\n                        console.warn(`Old item ${oldItem.productId} in purchase ${purchaseId} has no distribution. Attempting to infer shop for stock reversal.`);\n                        const existingInventoriesForOldItem = await tx.inventoryItem.findMany({\n                            where: { productId: oldItem.productId }\n                        });\n                        if (existingInventoriesForOldItem.length === 1) {\n                            const shopIdToReverseFrom = existingInventoriesForOldItem[0].shopId;\n                            const inventory = existingInventoriesForOldItem[0]; // Already fetched\n                            const oldShopQuantity = inventory.quantity;\n                            const newQuantity = Math.max(0, inventory.quantity - oldItem.quantity); // Use total oldItem.quantity\n                            await tx.inventoryItem.update({\n                                where: { id: inventory.id },\n                                data: {\n                                    quantity: newQuantity,\n                                    // If new quantity is 0, reset shopSpecificCost, else keep existing\n                                    shopSpecificCost: newQuantity === 0 ? 0 : inventory.shopSpecificCost\n                                }\n                            });\n                            inventoryUpdates.push({ productId: oldItem.productId, shopId: Number(shopIdToReverseFrom), newQuantity, oldQuantity: oldShopQuantity });\n                            console.log(`Reversed ${oldItem.quantity} from product ${oldItem.productId} in inferred shop ${shopIdToReverseFrom}.`);\n                        } else if (existingInventoriesForOldItem.length === 0) {\n                            console.error(`Old item ${oldItem.productId} not found in any inventory. Cannot reverse stock for this item line from a specific shop.`);\n                        } else { // Multiple shops\n                            console.error(`Old item ${oldItem.productId} exists in multiple shops and no specific distribution for reversal. Ambiguous. Stock not reversed from a specific shop for this item line.`);\n                        }\n                    }\n\n                    let currentTotalProductQuantity = 0;\n                    const allInventoryForProductAfterReversal = await tx.inventoryItem.findMany({ where: { productId: oldItem.productId } });\n                    currentTotalProductQuantity = allInventoryForProductAfterReversal.reduce((sum, inv) => sum + inv.quantity, 0);\n\n                    // Recalculate WAC based on remaining purchase history after removing this item\n                    const remainingPurchaseItems = await tx.purchaseInvoiceItem.findMany({\n                        where: {\n                            productId: oldItem.productId,\n                            purchaseInvoiceId: { not: purchaseId } // Exclude current invoice being updated\n                        }\n                    });\n\n                    let totalRemainingQuantity = 0;\n                    let totalRemainingValue = 0;\n\n                    remainingPurchaseItems.forEach(purchaseItem => {\n                        totalRemainingQuantity += purchaseItem.quantity;\n                        totalRemainingValue += purchaseItem.quantity * purchaseItem.price;\n                    });\n\n                    let newWAC = 0;\n                    if (totalRemainingQuantity > 0) {\n                        newWAC = totalRemainingValue / totalRemainingQuantity;\n                    }\n\n                    await tx.product.update({\n                        where: { id: oldItem.productId },\n                        data: { weightedAverageCost: newWAC >= 0 ? newWAC : 0 }\n                    });\n                }\n            }\n\n            await tx.purchaseInvoiceItem.deleteMany({ where: { purchaseInvoiceId: purchaseId } });\n\n            // Recalculate totalAmount for the invoice based on new/updated items\n            let newTotalInvoiceAmount = 0;\n            if (newItemsData && Array.isArray(newItemsData)) {\n                newItemsData.forEach(item => {\n                    newTotalInvoiceAmount += Number(item.quantity) * Number(item.price || 0);\n                });\n            }\n            cleanedInvoiceData.total = newTotalInvoiceAmount; // Ensure this is assigned to the correct field for DB update\n\n            const updatedInvoice = await tx.purchaseInvoice.update({ where: { id: purchaseId }, data: cleanedInvoiceData });\n\n            if (newItemsData && Array.isArray(newItemsData)) {\n                for (let i = 0; i < newItemsData.length; i++) {\n                    const newItem = newItemsData[i];\n                    if (!newItem.productId || !newItem.quantity || newItem.quantity <= 0) continue;\n                    await tx.purchaseInvoiceItem.create({\n                        data: {\n                            purchaseInvoiceId: purchaseId, productId: Number(newItem.productId),\n                            quantity: Number(newItem.quantity), price: Number(newItem.price || 0),\n                            total: Number(newItem.quantity) * Number(newItem.price || 0)\n                        }\n                    });\n                    const productToUpdate = await tx.product.findUnique({ where: { id: Number(newItem.productId) } });\n                    if (!productToUpdate) continue;\n\n                    const newItemDistribution = newDistributionsData && Array.isArray(newDistributionsData) && newDistributionsData[i]\n                        ? newDistributionsData[i]\n                        : (newDistributionsData && typeof newDistributionsData === 'object' && !Array.isArray(newDistributionsData) ? newDistributionsData : null);\n\n                    const itemQuantityTotal = Number(newItem.quantity);\n\n                    if (newItemDistribution && Object.keys(newItemDistribution).length > 0) {\n                        for (const [shopIdStr, quantityInShop] of Object.entries(newItemDistribution as any)) {\n                            const shopId = shopIdStr;\n                            const qtyToAdd = Number(quantityInShop);\n                            if (qtyToAdd <= 0 || isNaN(qtyToAdd)) continue;\n\n                            const inventory = await tx.inventoryItem.findFirst({ where: { productId: Number(newItem.productId), shopId: shopId } });\n                            let finalQuantity = 0;\n                            const oldInvQty = inventory?.quantity || 0;\n                            let newShopSpecificCostValue = 0;\n                            const itemPrice = Number(newItem.price || 0);\n\n                            if (inventory) {\n                                finalQuantity = inventory.quantity + qtyToAdd;\n                                const oldShopTotalValue = (inventory.quantity || 0) * (inventory.shopSpecificCost || 0);\n                                const valueOfThisBatch = qtyToAdd * itemPrice;\n                                if (finalQuantity > 0) {\n                                    newShopSpecificCostValue = (oldShopTotalValue + valueOfThisBatch) / finalQuantity;\n                                } else {\n                                    newShopSpecificCostValue = 0;\n                                }\n                                await tx.inventoryItem.update({\n                                    where: { id: inventory.id },\n                                    data: { quantity: finalQuantity, shopSpecificCost: newShopSpecificCostValue >= 0 ? newShopSpecificCostValue : 0 }\n                                });\n                            } else {\n                                finalQuantity = qtyToAdd;\n                                newShopSpecificCostValue = itemPrice;\n                                await tx.inventoryItem.create({\n                                    data: {\n                                        productId: Number(newItem.productId),\n                                        shopId: shopId,\n                                        quantity: finalQuantity,\n                                        shopSpecificCost: newShopSpecificCostValue >= 0 ? newShopSpecificCostValue : 0\n                                    }\n                                });\n                            }\n                            inventoryUpdates.push({ productId: Number(newItem.productId), shopId: Number(shopId), newQuantity: finalQuantity, oldQuantity: oldInvQty });\n                        }\n                    } else {\n                        // newItemDistribution is missing or empty. Try to infer shop or log error.\n                        console.warn(`Purchase item with productId ${newItem.productId} in invoice ${purchaseId} does not have explicit shop distribution data. Attempting to infer target shop.`);\n                        const existingInventoryItems = await tx.inventoryItem.findMany({\n                            where: { productId: Number(newItem.productId) }\n                        });\n\n                        let targetShopId: string | null = null;\n\n                        if (existingInventoryItems.length === 1) {\n                            targetShopId = existingInventoryItems[0].shopId;\n                            console.log(`Product ${newItem.productId} exists in one shop (${targetShopId}). Attributing new stock there.`);\n                        } else if (existingInventoryItems.length === 0) {\n                            console.error(`Product ${newItem.productId} is new to inventory and no shop distribution provided. Cannot automatically assign to a shop. Inventory not updated for this item.`);\n                        } else { // existingInventoryItems.length > 1\n                            console.error(`Product ${newItem.productId} exists in multiple shops and no specific distribution provided. Ambiguous. Inventory not updated for this item.`);\n                        }\n\n                        if (targetShopId) {\n                            const qtyToAdd = itemQuantityTotal; // The total quantity for this newItem.\n                            if (qtyToAdd > 0) {\n                                const inventory = await tx.inventoryItem.findFirst({ where: { productId: Number(newItem.productId), shopId: targetShopId } });\n                                let finalQuantity = 0;\n                                const oldInvQty = inventory?.quantity || 0;\n                                let newShopSpecificCostValue = 0;\n                                const itemPrice = Number(newItem.price || 0);\n\n                                if (inventory) {\n                                    finalQuantity = inventory.quantity + qtyToAdd;\n                                    const oldShopTotalValue = (inventory.quantity || 0) * (inventory.shopSpecificCost || 0);\n                                    const valueOfThisBatch = qtyToAdd * itemPrice;\n                                    if (finalQuantity > 0) {\n                                        newShopSpecificCostValue = (oldShopTotalValue + valueOfThisBatch) / finalQuantity;\n                                    } else {\n                                        newShopSpecificCostValue = 0;\n                                    }\n                                    await tx.inventoryItem.update({\n                                        where: { id: inventory.id },\n                                        data: { quantity: finalQuantity, shopSpecificCost: newShopSpecificCostValue >= 0 ? newShopSpecificCostValue : 0 }\n                                    });\n                                } else {\n                                    finalQuantity = qtyToAdd;\n                                    newShopSpecificCostValue = itemPrice;\n                                    console.warn(`InventoryItem for product ${newItem.productId} in targetShopId ${targetShopId} not found during update, attempting create.`);\n                                    await tx.inventoryItem.create({\n                                        data: {\n                                            productId: Number(newItem.productId),\n                                            shopId: targetShopId,\n                                            quantity: finalQuantity,\n                                            shopSpecificCost: newShopSpecificCostValue >= 0 ? newShopSpecificCostValue : 0\n                                        }\n                                    });\n                                }\n                                inventoryUpdates.push({ productId: Number(newItem.productId), shopId: Number(targetShopId), newQuantity: finalQuantity, oldQuantity: oldInvQty });\n                            } else {\n                                console.warn(`Quantity for product ${newItem.productId} is zero or negative. No inventory update performed for this item.`);\n                            }\n                        }\n                    }\n\n                    // Recalculate WAC based on all purchase history for this product\n                    // This ensures accuracy regardless of update order\n                    const allPurchaseItems = await tx.purchaseInvoiceItem.findMany({\n                        where: { productId: Number(newItem.productId) }\n                    });\n\n                    let totalPurchaseQuantity = 0;\n                    let totalPurchaseValue = 0;\n\n                    allPurchaseItems.forEach(purchaseItem => {\n                        totalPurchaseQuantity += purchaseItem.quantity;\n                        totalPurchaseValue += purchaseItem.quantity * purchaseItem.price;\n                    });\n\n                    let newWeightedAverageCost = 0;\n                    if (totalPurchaseQuantity > 0) {\n                        newWeightedAverageCost = totalPurchaseValue / totalPurchaseQuantity;\n                    }\n\n                    // Ensure WAC is valid\n                    if (newWeightedAverageCost <= 0 || isNaN(newWeightedAverageCost)) {\n                        newWeightedAverageCost = Number(newItem.price);\n                    }\n\n                    await tx.product.update({\n                        where: { id: Number(newItem.productId) },\n                        data: { weightedAverageCost: newWeightedAverageCost }\n                    });\n                }\n            }\n            const fullUpdatedInvoice = await tx.purchaseInvoice.findUnique({\n                where: { id: purchaseId },\n                include: { supplier: true, items: { include: { product: true } } }\n            });\n            return { fullUpdatedInvoice, inventoryUpdates };\n        }, { timeout: 30000 });\n\n        // Real-time updates now handled by polling system\n        if (result && result.fullUpdatedInvoice) {\n            console.log('Purchase invoice updated successfully');\n        }\n\n        // After successful transaction, invalidate relevant caches\n        try {\n            await cacheService.invalidateInventory(); // Handles 'inventory:summary:*' and 'products:*'\n            await cacheService.del('dashboard:inventory');\n            await cacheService.del('dashboard:inventory-value');\n            await cacheService.del('dashboard:shops');\n            await cacheService.del('dashboard:all');\n            await cacheService.del('dashboard:summary');\n            // Invalidate purchases-specific caches\n            await cacheService.invalidatePattern('purchases-optimized*');\n            await cacheService.invalidatePattern('purchase-stats*');\n            console.log('Relevant caches invalidated after purchase update.');\n        } catch (cacheError) {\n            console.error('Error invalidating caches after purchase update:', cacheError);\n            // Do not let cache invalidation error fail the main operation\n        }\n\n        // Revalidate Next.js cached pages immediately\n        try {\n            revalidateTag('purchase-invoices');\n            revalidateTag(`purchase-${purchaseId}`);\n            revalidatePath(`/purchases/${purchaseId}`);\n            revalidatePath(`/purchases/${purchaseId}/edit`);\n            revalidatePath('/purchases');\n            \n            // Also revalidate the main purchases page to ensure list updates\n            revalidatePath('/purchases', 'page');\n            \n            console.log('Next.js pages revalidated after purchase update.');\n        } catch (revalidateError) {\n            console.error('Error revalidating Next.js pages after purchase update:', revalidateError);\n        }\n\n        return NextResponse.json({\n            message: 'Purchase invoice updated successfully',\n            data: result.fullUpdatedInvoice\n        });\n    } catch (error) {\n        console.error(`Error updating purchase invoice ${id}:`, error);\n        const details = error instanceof Error ? error.message : String(error);\n        return NextResponse.json(\n            { error: { message: 'Failed to update purchase invoice', details: details } },\n            { status: 500 });\n    }\n}\n\n// DELETE /api/purchases/[id] - Delete a purchase invoice\nexport async function DELETE(\n    request: NextRequest,\n    { params }: { params: { id: string } }\n) {\n    const purchaseIdStr = params.id;\n    try {\n        const purchaseId = parseInt(purchaseIdStr);\n        if (isNaN(purchaseId)) {\n            return NextResponse.json(\n                { error: { message: 'Invalid purchase ID format' } },\n                { status: 400 });\n        }\n\n        const purchaseToDelete = await prisma.purchaseInvoice.findUnique({\n            where: { id: purchaseId },\n            include: {\n                items: { include: { product: true } },\n                // Ensure 'distributions' is included if it's a relation,\n                // or directly accessible if it's a JSON field on PurchaseInvoice\n            },\n        });\n\n        if (!purchaseToDelete) {\n            return NextResponse.json(\n                { error: { message: 'Purchase invoice not found to delete' } },\n                { status: 404 });\n        }\n\n        const result = await prisma.$transaction(async (tx) => {\n            const inventoryUpdates: Array<{ productId: number, shopId: number, newQuantity: number, oldQuantity?: number }> = [];\n\n            if (purchaseToDelete.items && purchaseToDelete.items.length > 0) {\n                for (const item of purchaseToDelete.items) {\n                    if (!item.product) {\n                        console.warn(`Item ${item.id} for purchase ${purchaseId} is missing product data. Skipping stock adjustment.`);\n                        continue;\n                    }\n\n                    const productId = item.productId;\n                    const quantityToRemoveForItemTotal = item.quantity; // Total quantity for this item line\n\n                    let itemDistributionInfo: { [shopId: string]: number } | null = null;\n                    const distributionsOnInvoice = (purchaseToDelete as any).distributions;\n\n                    // Attempt to get specific distribution for this item\n                    if (\n                        distributionsOnInvoice &&\n                        Array.isArray(distributionsOnInvoice) &&\n                        purchaseToDelete.items.indexOf(item) < distributionsOnInvoice.length\n                    ) {\n                        const distData = distributionsOnInvoice[purchaseToDelete.items.indexOf(item)];\n                        if (distData && typeof distData === 'object' && Object.keys(distData).length > 0) {\n                            itemDistributionInfo = distData as { [shopId: string]: number };\n                        }\n                    }\n\n                    if (itemDistributionInfo) {\n                        // Case 1: Explicit distribution data found for the item\n                        console.log(`Reversing item-specific distribution for product ${productId}, purchase ${purchaseId}`);\n                        for (const [shopIdStr, distributedQuantityStr] of Object.entries(itemDistributionInfo)) {\n                            const shopId = shopIdStr;\n                            const qtyInShopToRemove = Number(distributedQuantityStr);\n\n                            if (isNaN(qtyInShopToRemove) || qtyInShopToRemove <= 0) continue;\n\n                            const inventoryItem = await tx.inventoryItem.findFirst({ where: { productId, shopId: shopId } });\n                            if (inventoryItem) {\n                                const oldShopQuantity = inventoryItem.quantity;\n                                const newShopQuantity = Math.max(0, inventoryItem.quantity - qtyInShopToRemove);\n                                const updateData = {\n                                    quantity: newShopQuantity,\n                                    shopSpecificCost: newShopQuantity === 0 ? 0 : inventoryItem.shopSpecificCost\n                                };\n                                await tx.inventoryItem.update({\n                                    where: { id: inventoryItem.id },\n                                    data: updateData,\n                                });\n                                inventoryUpdates.push({ productId, shopId: Number(shopId), newQuantity: newShopQuantity, oldQuantity: oldShopQuantity });\n                                console.log(`  - Reduced inventory for product ${productId} in shop ${shopId} by ${qtyInShopToRemove}. Old: ${oldShopQuantity}, New: ${newShopQuantity}`);\n                            } else {\n                                console.warn(`  - Inventory item not found for product ${productId} in shop ${shopId} during purchase deletion with explicit distribution. Stock may be inaccurate.`);\n                            }\n                        }\n                    } else {\n                        // Case 2: No explicit distribution for this item. Attempt to infer.\n                        console.warn(`No specific distribution found for item ${productId} in deleted purchase ${purchaseId}. Attempting to infer shop(s) for stock reversal of total quantity ${quantityToRemoveForItemTotal}.`);\n                        const existingInventoriesForItem = await tx.inventoryItem.findMany({\n                            where: { productId: productId }\n                        });\n\n                        if (existingInventoriesForItem.length === 1) {\n                            const singleShopInventory = existingInventoriesForItem[0];\n                            const shopIdToDeductFrom = singleShopInventory.shopId;\n\n                            console.log(`Product ${productId} found in single shop ${shopIdToDeductFrom}. Deducting total item quantity ${quantityToRemoveForItemTotal}.`);\n                            const oldShopQuantity = singleShopInventory.quantity;\n                            const newShopQuantity = Math.max(0, singleShopInventory.quantity - quantityToRemoveForItemTotal);\n                            const updateDataInferred = {\n                                quantity: newShopQuantity,\n                                shopSpecificCost: newShopQuantity === 0 ? 0 : singleShopInventory.shopSpecificCost\n                            };\n                            await tx.inventoryItem.update({\n                                where: { id: singleShopInventory.id },\n                                data: updateDataInferred,\n                            });\n                            inventoryUpdates.push({ productId, shopId: Number(shopIdToDeductFrom), newQuantity: newShopQuantity, oldQuantity: oldShopQuantity });\n                            console.log(`  - Reduced inventory for product ${productId} in inferred shop ${shopIdToDeductFrom} by ${quantityToRemoveForItemTotal}. Old: ${oldShopQuantity}, New: ${newShopQuantity}`);\n                        } else if (existingInventoriesForItem.length === 0) {\n                            console.error(`Product ${productId} (from deleted purchase ${purchaseId}) not found in any inventory. Cannot reverse stock for this item.`);\n                        } else { // Product exists in multiple shops\n                            console.error(`Product ${productId} (from deleted purchase ${purchaseId}) exists in multiple shops, but no specific distribution data was found on the invoice for reversal. Ambiguous. Stock not automatically reversed for this item. Manual adjustment may be needed.`);\n                        }\n                    }\n\n                    // ---- BEGIN WAC Recalculation for the deleted item ----\n                    const remainingPurchaseItems = await tx.purchaseInvoiceItem.findMany({\n                        where: {\n                            productId: productId,\n                            purchaseInvoiceId: { not: purchaseId }\n                        }\n                    });\n\n                    let totalRemainingQuantity = 0;\n                    let totalRemainingValue = 0;\n                    remainingPurchaseItems.forEach(pItem => {\n                        totalRemainingQuantity += pItem.quantity;\n                        totalRemainingValue += pItem.quantity * pItem.price;\n                    });\n\n                    let newCalculatedWAC = 0;\n                    if (totalRemainingQuantity > 0) {\n                        newCalculatedWAC = totalRemainingValue / totalRemainingQuantity;\n                    }\n                    await tx.product.update({\n                        where: { id: productId },\n                        data: { weightedAverageCost: newCalculatedWAC >= 0 ? newCalculatedWAC : 0 }\n                    });\n                    // ---- END WAC Recalculation ----\n                }\n            }\n\n            await tx.purchaseInvoiceItem.deleteMany({ where: { purchaseInvoiceId: purchaseId } });\n            await tx.purchaseInvoice.delete({ where: { id: purchaseId } });\n\n            return { deletedInvoiceId: purchaseId, inventoryUpdates };\n        });\n\n        // Real-time updates now handled by polling system\n        if (result && result.deletedInvoiceId) {\n            console.log(`Purchase invoice ${result.deletedInvoiceId} deleted successfully`);\n        }\n\n        // After successful transaction, invalidate relevant caches\n        try {\n            await cacheService.invalidateInventory(); // Handles 'inventory:summary:*' and 'products:*'\n            await cacheService.del('dashboard:inventory');\n            await cacheService.del('dashboard:inventory-value');\n            await cacheService.del('dashboard:shops');\n            await cacheService.del('dashboard:all');\n            await cacheService.del('dashboard:summary');\n            // Invalidate purchases-specific caches\n            await cacheService.invalidatePattern('purchases-optimized*');\n            await cacheService.invalidatePattern('purchase-stats*');\n            console.log('Relevant caches invalidated after purchase deletion.');\n        } catch (cacheError) {\n            console.error('Error invalidating caches after purchase deletion:', cacheError);\n            // Do not let cache invalidation error fail the main operation\n        }\n\n        // Revalidate Next.js cached pages\n        try {\n            revalidateTag('purchase-invoices');\n            revalidateTag(`purchase-${purchaseId}`);\n            revalidatePath(`/purchases/${purchaseId}`);\n            revalidatePath(`/purchases/${purchaseId}/edit`);\n            revalidatePath('/purchases');\n            console.log('Next.js pages revalidated after purchase deletion.');\n        } catch (revalidateError) {\n            console.error('Error revalidating Next.js pages after purchase deletion:', revalidateError);\n        }\n\n        return NextResponse.json({ message: 'Purchase invoice deleted successfully' });\n\n    } catch (error) {\n        console.error(`Error deleting purchase invoice ${purchaseIdStr}:`, error);\n        const details = error instanceof Error ? error.message : 'An unknown error occurred';\n        return NextResponse.json(\n            { error: { message: 'Failed to delete purchase invoice', details: details } },\n            { status: 500 });\n    }\n}"],
      names: ["DELETE", "GET", "PUT", "request", "params", "id", "purchaseId", "parseInt", "isNaN", "NextResponse", "json", "error", "message", "status", "purchase", "prisma", "purchaseInvoice", "findUnique", "where", "include", "supplier", "items", "product", "response", "headers", "set", "updatedAt", "getTime", "Date", "now", "console", "details", "Error", "body", "originalPurchase", "newItemsData", "distributions", "newDistributionsData", "invoiceData", "_", "createdAt", "notes", "dirtyData", "cleanedInvoiceData", "invoiceNumber", "date", "dueDate", "undefined", "totalAmount", "total", "Number", "supplierId", "connect", "disconnect", "result", "$transaction", "tx", "inventoryUpdates", "length", "oldItem", "productToUpdate", "productId", "oldItemDistribution", "Array", "isArray", "indexOf", "Object", "keys", "shopIdStr", "quantityInShop", "entries", "shopId", "qtyToRemove", "inventory", "inventoryItem", "findFirst", "oldShopQuantity", "quantity", "newQuantity", "Math", "max", "update", "data", "shopSpecificCost", "push", "oldQuantity", "warn", "existingInventoriesForOldItem", "findMany", "shopIdToReverseFrom", "log", "currentTotalProductQuantity", "allInventoryForProductAfterReversal", "reduce", "sum", "inv", "remainingPurchaseItems", "purchaseInvoiceItem", "purchaseInvoiceId", "not", "totalRemainingQuantity", "totalRemainingValue", "forEach", "purchaseItem", "price", "newWAC", "weightedAverageCost", "deleteMany", "newTotalInvoiceAmount", "item", "updatedInvoice", "i", "newItem", "create", "newItemDistribution", "itemQuantityTotal", "qtyToAdd", "finalQuantity", "oldInvQty", "newShopSpecificCostValue", "itemPrice", "oldShopTotalValue", "valueOfThisBatch", "existingInventoryItems", "targetShopId", "allPurchaseItems", "totalPurchaseQuantity", "totalPurchaseValue", "newWeightedAverageCost", "fullUpdatedInvoice", "timeout", "cacheService", "invalidateInventory", "del", "invalidatePattern", "cacheError", "revalidateTag", "revalidatePath", "revalidateError", "String", "purchaseIdStr", "purchaseToDelete", "quantityToRemoveForItemTotal", "itemDistributionInfo", "distributionsOnInvoice", "distData", "distributedQuantityStr", "qtyInShopToRemove", "newShopQuantity", "updateData", "existingInventoriesForItem", "singleShopInventory", "shopIdToDeductFrom", "updateDataInferred", "pItem", "newCalculatedWAC", "delete", "deletedInvoiceId"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "82ec34c05e9b06fde1d05b290f6ccfdcbbb20f6e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_39x6d23tp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_39x6d23tp();
cov_39x6d23tp().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_39x6d23tp().f[0]++;
  cov_39x6d23tp().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_39x6d23tp().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_39x6d23tp().s[3]++;
_export(exports, {
  DELETE: function () {
    /* istanbul ignore next */
    cov_39x6d23tp().f[1]++;
    cov_39x6d23tp().s[4]++;
    return DELETE;
  },
  GET: function () {
    /* istanbul ignore next */
    cov_39x6d23tp().f[2]++;
    cov_39x6d23tp().s[5]++;
    return GET;
  },
  PUT: function () {
    /* istanbul ignore next */
    cov_39x6d23tp().f[3]++;
    cov_39x6d23tp().s[6]++;
    return PUT;
  }
});
const _server =
/* istanbul ignore next */
(cov_39x6d23tp().s[7]++, require("next/server"));
const _cache =
/* istanbul ignore next */
(cov_39x6d23tp().s[8]++, require("next/cache"));
const _prisma =
/* istanbul ignore next */
(/*#__PURE__*/cov_39x6d23tp().s[9]++, _interop_require_default(require("../../../../lib/prisma")));
const _cache1 =
/* istanbul ignore next */
(cov_39x6d23tp().s[10]++, require("../../../../lib/cache"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_39x6d23tp().f[4]++;
  cov_39x6d23tp().s[11]++;
  return /* istanbul ignore next */(cov_39x6d23tp().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_39x6d23tp().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_39x6d23tp().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_39x6d23tp().b[0][1]++, {
    default: obj
  });
}
async function GET(request, {
  params
}) {
  /* istanbul ignore next */
  cov_39x6d23tp().f[5]++;
  const id =
  /* istanbul ignore next */
  (cov_39x6d23tp().s[12]++, params.id); // Store params.id early to avoid async issues
  /* istanbul ignore next */
  cov_39x6d23tp().s[13]++;
  try {
    const purchaseId =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[14]++, parseInt(id));
    /* istanbul ignore next */
    cov_39x6d23tp().s[15]++;
    if (isNaN(purchaseId)) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[2][0]++;
      cov_39x6d23tp().s[16]++;
      return _server.NextResponse.json({
        error: {
          message: "Invalid purchase ID format"
        }
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_39x6d23tp().b[2][1]++;
    }
    const purchase =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[17]++, await _prisma.default.purchaseInvoice.findUnique({
      where: {
        id: purchaseId
      },
      include: {
        supplier: true,
        items: {
          include: {
            product: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_39x6d23tp().s[18]++;
    if (!purchase) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[3][0]++;
      cov_39x6d23tp().s[19]++;
      return _server.NextResponse.json({
        error: {
          message: "Purchase invoice not found"
        }
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_39x6d23tp().b[3][1]++;
    }
    // Create response with proper cache headers
    const response =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[20]++, _server.NextResponse.json(purchase));
    // Add cache control headers to enable proper caching and revalidation
    /* istanbul ignore next */
    cov_39x6d23tp().s[21]++;
    response.headers.set("Cache-Control", "no-cache, must-revalidate");
    /* istanbul ignore next */
    cov_39x6d23tp().s[22]++;
    response.headers.set("ETag", `"purchase-${purchaseId}-${
    /* istanbul ignore next */
    (cov_39x6d23tp().b[4][0]++, purchase.updatedAt?.getTime()) ||
    /* istanbul ignore next */
    (cov_39x6d23tp().b[4][1]++, Date.now())}"`);
    /* istanbul ignore next */
    cov_39x6d23tp().s[23]++;
    return response;
  } catch (error) {
    /* istanbul ignore next */
    cov_39x6d23tp().s[24]++;
    console.error(`Error fetching purchase invoice ${id}:`, error);
    const details =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[25]++, error instanceof Error ?
    /* istanbul ignore next */
    (cov_39x6d23tp().b[5][0]++, error.message) :
    /* istanbul ignore next */
    (cov_39x6d23tp().b[5][1]++, "An unknown error occurred"));
    /* istanbul ignore next */
    cov_39x6d23tp().s[26]++;
    return _server.NextResponse.json({
      error: {
        message: "Failed to fetch purchase invoice",
        details: details
      }
    }, {
      status: 500
    });
  }
}
async function PUT(request, {
  params
}) {
  /* istanbul ignore next */
  cov_39x6d23tp().f[6]++;
  const id =
  /* istanbul ignore next */
  (cov_39x6d23tp().s[27]++, params.id);
  /* istanbul ignore next */
  cov_39x6d23tp().s[28]++;
  try {
    const purchaseId =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[29]++, parseInt(id));
    /* istanbul ignore next */
    cov_39x6d23tp().s[30]++;
    if (isNaN(purchaseId)) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[6][0]++;
      cov_39x6d23tp().s[31]++;
      return _server.NextResponse.json({
        error: {
          message: "Invalid purchase ID format"
        }
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_39x6d23tp().b[6][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[32]++, await request.json());
    const originalPurchase =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[33]++, await _prisma.default.purchaseInvoice.findUnique({
      where: {
        id: purchaseId
      },
      include: {
        items: {
          include: {
            product: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_39x6d23tp().s[34]++;
    if (!originalPurchase) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[7][0]++;
      cov_39x6d23tp().s[35]++;
      return _server.NextResponse.json({
        error: {
          message: "Purchase invoice not found to update"
        }
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_39x6d23tp().b[7][1]++;
    }
    const {
      items: newItemsData,
      distributions: newDistributionsData,
      ...invoiceData
    } =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[36]++, body);
    const {
      id: _,
      createdAt,
      updatedAt,
      supplier,
      notes,
      ...dirtyData
    } =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[37]++, invoiceData);
    const cleanedInvoiceData =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[38]++, {});
    /* istanbul ignore next */
    cov_39x6d23tp().s[39]++;
    if (dirtyData.invoiceNumber) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[8][0]++;
      cov_39x6d23tp().s[40]++;
      cleanedInvoiceData.invoiceNumber = dirtyData.invoiceNumber;
    } else
    /* istanbul ignore next */
    {
      cov_39x6d23tp().b[8][1]++;
    }
    cov_39x6d23tp().s[41]++;
    if (dirtyData.status) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[9][0]++;
      cov_39x6d23tp().s[42]++;
      cleanedInvoiceData.status = dirtyData.status;
    } else
    /* istanbul ignore next */
    {
      cov_39x6d23tp().b[9][1]++;
    }
    cov_39x6d23tp().s[43]++;
    if (dirtyData.date) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[10][0]++;
      cov_39x6d23tp().s[44]++;
      cleanedInvoiceData.date = new Date(dirtyData.date);
    } else
    /* istanbul ignore next */
    {
      cov_39x6d23tp().b[10][1]++;
    }
    cov_39x6d23tp().s[45]++;
    if (dirtyData.dueDate !== undefined) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[11][0]++;
      cov_39x6d23tp().s[46]++;
      cleanedInvoiceData.dueDate = dirtyData.dueDate ?
      /* istanbul ignore next */
      (cov_39x6d23tp().b[12][0]++, new Date(dirtyData.dueDate)) :
      /* istanbul ignore next */
      (cov_39x6d23tp().b[12][1]++, null);
    } else
    /* istanbul ignore next */
    {
      cov_39x6d23tp().b[11][1]++;
    }
    cov_39x6d23tp().s[47]++;
    if (dirtyData.totalAmount !== undefined) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[13][0]++;
      cov_39x6d23tp().s[48]++;
      cleanedInvoiceData.total = Number(dirtyData.totalAmount);
    } else {
      /* istanbul ignore next */
      cov_39x6d23tp().b[13][1]++;
      cov_39x6d23tp().s[49]++;
      if (dirtyData.total !== undefined) {
        /* istanbul ignore next */
        cov_39x6d23tp().b[14][0]++;
        cov_39x6d23tp().s[50]++;
        cleanedInvoiceData.total = Number(dirtyData.total);
      } else
      /* istanbul ignore next */
      {
        cov_39x6d23tp().b[14][1]++;
      }
    }
    /* istanbul ignore next */
    cov_39x6d23tp().s[51]++;
    cleanedInvoiceData.distributions = newDistributionsData !== undefined ?
    /* istanbul ignore next */
    (cov_39x6d23tp().b[15][0]++, newDistributionsData) :
    /* istanbul ignore next */
    (cov_39x6d23tp().b[15][1]++, originalPurchase.distributions);
    /* istanbul ignore next */
    cov_39x6d23tp().s[52]++;
    if (dirtyData.supplierId) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[16][0]++;
      cov_39x6d23tp().s[53]++;
      cleanedInvoiceData.supplier = {
        connect: {
          id: Number(dirtyData.supplierId)
        }
      };
    } else {
      /* istanbul ignore next */
      cov_39x6d23tp().b[16][1]++;
      cov_39x6d23tp().s[54]++;
      if (
      /* istanbul ignore next */
      (cov_39x6d23tp().b[18][0]++, dirtyData.supplierId === null) &&
      /* istanbul ignore next */
      (cov_39x6d23tp().b[18][1]++, originalPurchase.supplierId)) {
        /* istanbul ignore next */
        cov_39x6d23tp().b[17][0]++;
        cov_39x6d23tp().s[55]++;
        cleanedInvoiceData.supplier = {
          disconnect: true
        };
      } else
      /* istanbul ignore next */
      {
        cov_39x6d23tp().b[17][1]++;
      }
    }
    const result =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[56]++, await _prisma.default.$transaction(async tx => {
      /* istanbul ignore next */
      cov_39x6d23tp().f[7]++;
      const inventoryUpdates =
      /* istanbul ignore next */
      (cov_39x6d23tp().s[57]++, []);
      /* istanbul ignore next */
      cov_39x6d23tp().s[58]++;
      if (
      /* istanbul ignore next */
      (cov_39x6d23tp().b[20][0]++, originalPurchase.items) &&
      /* istanbul ignore next */
      (cov_39x6d23tp().b[20][1]++, originalPurchase.items.length > 0)) {
        /* istanbul ignore next */
        cov_39x6d23tp().b[19][0]++;
        cov_39x6d23tp().s[59]++;
        for (const oldItem of originalPurchase.items) {
          const productToUpdate =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[60]++, await tx.product.findUnique({
            where: {
              id: oldItem.productId
            }
          }));
          /* istanbul ignore next */
          cov_39x6d23tp().s[61]++;
          if (!productToUpdate) {
            /* istanbul ignore next */
            cov_39x6d23tp().b[21][0]++;
            cov_39x6d23tp().s[62]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_39x6d23tp().b[21][1]++;
          }
          const oldItemDistribution =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[63]++,
          /* istanbul ignore next */
          (cov_39x6d23tp().b[23][0]++, originalPurchase.distributions) &&
          /* istanbul ignore next */
          (cov_39x6d23tp().b[23][1]++, Array.isArray(originalPurchase.distributions)) &&
          /* istanbul ignore next */
          (cov_39x6d23tp().b[23][2]++, originalPurchase.items.indexOf(oldItem) < originalPurchase.distributions.length) ?
          /* istanbul ignore next */
          (cov_39x6d23tp().b[22][0]++, originalPurchase.distributions[originalPurchase.items.indexOf(oldItem)]) :
          /* istanbul ignore next */
          (cov_39x6d23tp().b[22][1]++,
          /* istanbul ignore next */
          (cov_39x6d23tp().b[25][0]++, originalPurchase.distributions) &&
          /* istanbul ignore next */
          (cov_39x6d23tp().b[25][1]++, typeof originalPurchase.distributions === "object") &&
          /* istanbul ignore next */
          (cov_39x6d23tp().b[25][2]++, !Array.isArray(originalPurchase.distributions)) ?
          /* istanbul ignore next */
          (cov_39x6d23tp().b[24][0]++, originalPurchase.distributions) :
          /* istanbul ignore next */
          (cov_39x6d23tp().b[24][1]++, null)));
          /* istanbul ignore next */
          cov_39x6d23tp().s[64]++;
          if (
          /* istanbul ignore next */
          (cov_39x6d23tp().b[27][0]++, oldItemDistribution) &&
          /* istanbul ignore next */
          (cov_39x6d23tp().b[27][1]++, Object.keys(oldItemDistribution).length > 0)) {
            /* istanbul ignore next */
            cov_39x6d23tp().b[26][0]++;
            cov_39x6d23tp().s[65]++;
            for (const [shopIdStr, quantityInShop] of Object.entries(oldItemDistribution)) {
              const shopId =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[66]++, shopIdStr);
              const qtyToRemove =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[67]++, Number(quantityInShop));
              /* istanbul ignore next */
              cov_39x6d23tp().s[68]++;
              if (
              /* istanbul ignore next */
              (cov_39x6d23tp().b[29][0]++, qtyToRemove <= 0) ||
              /* istanbul ignore next */
              (cov_39x6d23tp().b[29][1]++, isNaN(qtyToRemove))) {
                /* istanbul ignore next */
                cov_39x6d23tp().b[28][0]++;
                cov_39x6d23tp().s[69]++;
                continue;
              } else
              /* istanbul ignore next */
              {
                cov_39x6d23tp().b[28][1]++;
              }
              const inventory =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[70]++, await tx.inventoryItem.findFirst({
                where: {
                  productId: oldItem.productId,
                  shopId: shopId
                }
              }));
              /* istanbul ignore next */
              cov_39x6d23tp().s[71]++;
              if (inventory) {
                /* istanbul ignore next */
                cov_39x6d23tp().b[30][0]++;
                const oldShopQuantity =
                /* istanbul ignore next */
                (cov_39x6d23tp().s[72]++, inventory.quantity);
                const newQuantity =
                /* istanbul ignore next */
                (cov_39x6d23tp().s[73]++, Math.max(0, inventory.quantity - qtyToRemove));
                /* istanbul ignore next */
                cov_39x6d23tp().s[74]++;
                await tx.inventoryItem.update({
                  where: {
                    id: inventory.id
                  },
                  data: {
                    quantity: newQuantity,
                    // If new quantity is 0, reset shopSpecificCost, else keep existing
                    shopSpecificCost: newQuantity === 0 ?
                    /* istanbul ignore next */
                    (cov_39x6d23tp().b[31][0]++, 0) :
                    /* istanbul ignore next */
                    (cov_39x6d23tp().b[31][1]++, inventory.shopSpecificCost)
                  }
                });
                /* istanbul ignore next */
                cov_39x6d23tp().s[75]++;
                inventoryUpdates.push({
                  productId: oldItem.productId,
                  shopId: Number(shopId),
                  newQuantity,
                  oldQuantity: oldShopQuantity
                });
              } else
              /* istanbul ignore next */
              {
                cov_39x6d23tp().b[30][1]++;
              }
            }
          } else {
            /* istanbul ignore next */
            cov_39x6d23tp().b[26][1]++;
            cov_39x6d23tp().s[76]++;
            // oldItemDistribution is missing. Attempt to infer shop for stock reversal.
            console.warn(`Old item ${oldItem.productId} in purchase ${purchaseId} has no distribution. Attempting to infer shop for stock reversal.`);
            const existingInventoriesForOldItem =
            /* istanbul ignore next */
            (cov_39x6d23tp().s[77]++, await tx.inventoryItem.findMany({
              where: {
                productId: oldItem.productId
              }
            }));
            /* istanbul ignore next */
            cov_39x6d23tp().s[78]++;
            if (existingInventoriesForOldItem.length === 1) {
              /* istanbul ignore next */
              cov_39x6d23tp().b[32][0]++;
              const shopIdToReverseFrom =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[79]++, existingInventoriesForOldItem[0].shopId);
              const inventory =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[80]++, existingInventoriesForOldItem[0]); // Already fetched
              const oldShopQuantity =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[81]++, inventory.quantity);
              const newQuantity =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[82]++, Math.max(0, inventory.quantity - oldItem.quantity)); // Use total oldItem.quantity
              /* istanbul ignore next */
              cov_39x6d23tp().s[83]++;
              await tx.inventoryItem.update({
                where: {
                  id: inventory.id
                },
                data: {
                  quantity: newQuantity,
                  // If new quantity is 0, reset shopSpecificCost, else keep existing
                  shopSpecificCost: newQuantity === 0 ?
                  /* istanbul ignore next */
                  (cov_39x6d23tp().b[33][0]++, 0) :
                  /* istanbul ignore next */
                  (cov_39x6d23tp().b[33][1]++, inventory.shopSpecificCost)
                }
              });
              /* istanbul ignore next */
              cov_39x6d23tp().s[84]++;
              inventoryUpdates.push({
                productId: oldItem.productId,
                shopId: Number(shopIdToReverseFrom),
                newQuantity,
                oldQuantity: oldShopQuantity
              });
              /* istanbul ignore next */
              cov_39x6d23tp().s[85]++;
              console.log(`Reversed ${oldItem.quantity} from product ${oldItem.productId} in inferred shop ${shopIdToReverseFrom}.`);
            } else {
              /* istanbul ignore next */
              cov_39x6d23tp().b[32][1]++;
              cov_39x6d23tp().s[86]++;
              if (existingInventoriesForOldItem.length === 0) {
                /* istanbul ignore next */
                cov_39x6d23tp().b[34][0]++;
                cov_39x6d23tp().s[87]++;
                console.error(`Old item ${oldItem.productId} not found in any inventory. Cannot reverse stock for this item line from a specific shop.`);
              } else {
                /* istanbul ignore next */
                cov_39x6d23tp().b[34][1]++;
                cov_39x6d23tp().s[88]++;
                console.error(`Old item ${oldItem.productId} exists in multiple shops and no specific distribution for reversal. Ambiguous. Stock not reversed from a specific shop for this item line.`);
              }
            }
          }
          let currentTotalProductQuantity =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[89]++, 0);
          const allInventoryForProductAfterReversal =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[90]++, await tx.inventoryItem.findMany({
            where: {
              productId: oldItem.productId
            }
          }));
          /* istanbul ignore next */
          cov_39x6d23tp().s[91]++;
          currentTotalProductQuantity = allInventoryForProductAfterReversal.reduce((sum, inv) => {
            /* istanbul ignore next */
            cov_39x6d23tp().f[8]++;
            cov_39x6d23tp().s[92]++;
            return sum + inv.quantity;
          }, 0);
          // Recalculate WAC based on remaining purchase history after removing this item
          const remainingPurchaseItems =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[93]++, await tx.purchaseInvoiceItem.findMany({
            where: {
              productId: oldItem.productId,
              purchaseInvoiceId: {
                not: purchaseId
              } // Exclude current invoice being updated
            }
          }));
          let totalRemainingQuantity =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[94]++, 0);
          let totalRemainingValue =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[95]++, 0);
          /* istanbul ignore next */
          cov_39x6d23tp().s[96]++;
          remainingPurchaseItems.forEach(purchaseItem => {
            /* istanbul ignore next */
            cov_39x6d23tp().f[9]++;
            cov_39x6d23tp().s[97]++;
            totalRemainingQuantity += purchaseItem.quantity;
            /* istanbul ignore next */
            cov_39x6d23tp().s[98]++;
            totalRemainingValue += purchaseItem.quantity * purchaseItem.price;
          });
          let newWAC =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[99]++, 0);
          /* istanbul ignore next */
          cov_39x6d23tp().s[100]++;
          if (totalRemainingQuantity > 0) {
            /* istanbul ignore next */
            cov_39x6d23tp().b[35][0]++;
            cov_39x6d23tp().s[101]++;
            newWAC = totalRemainingValue / totalRemainingQuantity;
          } else
          /* istanbul ignore next */
          {
            cov_39x6d23tp().b[35][1]++;
          }
          cov_39x6d23tp().s[102]++;
          await tx.product.update({
            where: {
              id: oldItem.productId
            },
            data: {
              weightedAverageCost: newWAC >= 0 ?
              /* istanbul ignore next */
              (cov_39x6d23tp().b[36][0]++, newWAC) :
              /* istanbul ignore next */
              (cov_39x6d23tp().b[36][1]++, 0)
            }
          });
        }
      } else
      /* istanbul ignore next */
      {
        cov_39x6d23tp().b[19][1]++;
      }
      cov_39x6d23tp().s[103]++;
      await tx.purchaseInvoiceItem.deleteMany({
        where: {
          purchaseInvoiceId: purchaseId
        }
      });
      // Recalculate totalAmount for the invoice based on new/updated items
      let newTotalInvoiceAmount =
      /* istanbul ignore next */
      (cov_39x6d23tp().s[104]++, 0);
      /* istanbul ignore next */
      cov_39x6d23tp().s[105]++;
      if (
      /* istanbul ignore next */
      (cov_39x6d23tp().b[38][0]++, newItemsData) &&
      /* istanbul ignore next */
      (cov_39x6d23tp().b[38][1]++, Array.isArray(newItemsData))) {
        /* istanbul ignore next */
        cov_39x6d23tp().b[37][0]++;
        cov_39x6d23tp().s[106]++;
        newItemsData.forEach(item => {
          /* istanbul ignore next */
          cov_39x6d23tp().f[10]++;
          cov_39x6d23tp().s[107]++;
          newTotalInvoiceAmount += Number(item.quantity) * Number(
          /* istanbul ignore next */
          (cov_39x6d23tp().b[39][0]++, item.price) ||
          /* istanbul ignore next */
          (cov_39x6d23tp().b[39][1]++, 0));
        });
      } else
      /* istanbul ignore next */
      {
        cov_39x6d23tp().b[37][1]++;
      }
      cov_39x6d23tp().s[108]++;
      cleanedInvoiceData.total = newTotalInvoiceAmount; // Ensure this is assigned to the correct field for DB update
      const updatedInvoice =
      /* istanbul ignore next */
      (cov_39x6d23tp().s[109]++, await tx.purchaseInvoice.update({
        where: {
          id: purchaseId
        },
        data: cleanedInvoiceData
      }));
      /* istanbul ignore next */
      cov_39x6d23tp().s[110]++;
      if (
      /* istanbul ignore next */
      (cov_39x6d23tp().b[41][0]++, newItemsData) &&
      /* istanbul ignore next */
      (cov_39x6d23tp().b[41][1]++, Array.isArray(newItemsData))) {
        /* istanbul ignore next */
        cov_39x6d23tp().b[40][0]++;
        cov_39x6d23tp().s[111]++;
        for (let i =
        /* istanbul ignore next */
        (cov_39x6d23tp().s[112]++, 0); i < newItemsData.length; i++) {
          const newItem =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[113]++, newItemsData[i]);
          /* istanbul ignore next */
          cov_39x6d23tp().s[114]++;
          if (
          /* istanbul ignore next */
          (cov_39x6d23tp().b[43][0]++, !newItem.productId) ||
          /* istanbul ignore next */
          (cov_39x6d23tp().b[43][1]++, !newItem.quantity) ||
          /* istanbul ignore next */
          (cov_39x6d23tp().b[43][2]++, newItem.quantity <= 0)) {
            /* istanbul ignore next */
            cov_39x6d23tp().b[42][0]++;
            cov_39x6d23tp().s[115]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_39x6d23tp().b[42][1]++;
          }
          cov_39x6d23tp().s[116]++;
          await tx.purchaseInvoiceItem.create({
            data: {
              purchaseInvoiceId: purchaseId,
              productId: Number(newItem.productId),
              quantity: Number(newItem.quantity),
              price: Number(
              /* istanbul ignore next */
              (cov_39x6d23tp().b[44][0]++, newItem.price) ||
              /* istanbul ignore next */
              (cov_39x6d23tp().b[44][1]++, 0)),
              total: Number(newItem.quantity) * Number(
              /* istanbul ignore next */
              (cov_39x6d23tp().b[45][0]++, newItem.price) ||
              /* istanbul ignore next */
              (cov_39x6d23tp().b[45][1]++, 0))
            }
          });
          const productToUpdate =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[117]++, await tx.product.findUnique({
            where: {
              id: Number(newItem.productId)
            }
          }));
          /* istanbul ignore next */
          cov_39x6d23tp().s[118]++;
          if (!productToUpdate) {
            /* istanbul ignore next */
            cov_39x6d23tp().b[46][0]++;
            cov_39x6d23tp().s[119]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_39x6d23tp().b[46][1]++;
          }
          const newItemDistribution =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[120]++,
          /* istanbul ignore next */
          (cov_39x6d23tp().b[48][0]++, newDistributionsData) &&
          /* istanbul ignore next */
          (cov_39x6d23tp().b[48][1]++, Array.isArray(newDistributionsData)) &&
          /* istanbul ignore next */
          (cov_39x6d23tp().b[48][2]++, newDistributionsData[i]) ?
          /* istanbul ignore next */
          (cov_39x6d23tp().b[47][0]++, newDistributionsData[i]) :
          /* istanbul ignore next */
          (cov_39x6d23tp().b[47][1]++,
          /* istanbul ignore next */
          (cov_39x6d23tp().b[50][0]++, newDistributionsData) &&
          /* istanbul ignore next */
          (cov_39x6d23tp().b[50][1]++, typeof newDistributionsData === "object") &&
          /* istanbul ignore next */
          (cov_39x6d23tp().b[50][2]++, !Array.isArray(newDistributionsData)) ?
          /* istanbul ignore next */
          (cov_39x6d23tp().b[49][0]++, newDistributionsData) :
          /* istanbul ignore next */
          (cov_39x6d23tp().b[49][1]++, null)));
          const itemQuantityTotal =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[121]++, Number(newItem.quantity));
          /* istanbul ignore next */
          cov_39x6d23tp().s[122]++;
          if (
          /* istanbul ignore next */
          (cov_39x6d23tp().b[52][0]++, newItemDistribution) &&
          /* istanbul ignore next */
          (cov_39x6d23tp().b[52][1]++, Object.keys(newItemDistribution).length > 0)) {
            /* istanbul ignore next */
            cov_39x6d23tp().b[51][0]++;
            cov_39x6d23tp().s[123]++;
            for (const [shopIdStr, quantityInShop] of Object.entries(newItemDistribution)) {
              const shopId =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[124]++, shopIdStr);
              const qtyToAdd =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[125]++, Number(quantityInShop));
              /* istanbul ignore next */
              cov_39x6d23tp().s[126]++;
              if (
              /* istanbul ignore next */
              (cov_39x6d23tp().b[54][0]++, qtyToAdd <= 0) ||
              /* istanbul ignore next */
              (cov_39x6d23tp().b[54][1]++, isNaN(qtyToAdd))) {
                /* istanbul ignore next */
                cov_39x6d23tp().b[53][0]++;
                cov_39x6d23tp().s[127]++;
                continue;
              } else
              /* istanbul ignore next */
              {
                cov_39x6d23tp().b[53][1]++;
              }
              const inventory =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[128]++, await tx.inventoryItem.findFirst({
                where: {
                  productId: Number(newItem.productId),
                  shopId: shopId
                }
              }));
              let finalQuantity =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[129]++, 0);
              const oldInvQty =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[130]++,
              /* istanbul ignore next */
              (cov_39x6d23tp().b[55][0]++, inventory?.quantity) ||
              /* istanbul ignore next */
              (cov_39x6d23tp().b[55][1]++, 0));
              let newShopSpecificCostValue =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[131]++, 0);
              const itemPrice =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[132]++, Number(
              /* istanbul ignore next */
              (cov_39x6d23tp().b[56][0]++, newItem.price) ||
              /* istanbul ignore next */
              (cov_39x6d23tp().b[56][1]++, 0)));
              /* istanbul ignore next */
              cov_39x6d23tp().s[133]++;
              if (inventory) {
                /* istanbul ignore next */
                cov_39x6d23tp().b[57][0]++;
                cov_39x6d23tp().s[134]++;
                finalQuantity = inventory.quantity + qtyToAdd;
                const oldShopTotalValue =
                /* istanbul ignore next */
                (cov_39x6d23tp().s[135]++, (
                /* istanbul ignore next */
                (cov_39x6d23tp().b[58][0]++, inventory.quantity) ||
                /* istanbul ignore next */
                (cov_39x6d23tp().b[58][1]++, 0)) * (
                /* istanbul ignore next */
                (cov_39x6d23tp().b[59][0]++, inventory.shopSpecificCost) ||
                /* istanbul ignore next */
                (cov_39x6d23tp().b[59][1]++, 0)));
                const valueOfThisBatch =
                /* istanbul ignore next */
                (cov_39x6d23tp().s[136]++, qtyToAdd * itemPrice);
                /* istanbul ignore next */
                cov_39x6d23tp().s[137]++;
                if (finalQuantity > 0) {
                  /* istanbul ignore next */
                  cov_39x6d23tp().b[60][0]++;
                  cov_39x6d23tp().s[138]++;
                  newShopSpecificCostValue = (oldShopTotalValue + valueOfThisBatch) / finalQuantity;
                } else {
                  /* istanbul ignore next */
                  cov_39x6d23tp().b[60][1]++;
                  cov_39x6d23tp().s[139]++;
                  newShopSpecificCostValue = 0;
                }
                /* istanbul ignore next */
                cov_39x6d23tp().s[140]++;
                await tx.inventoryItem.update({
                  where: {
                    id: inventory.id
                  },
                  data: {
                    quantity: finalQuantity,
                    shopSpecificCost: newShopSpecificCostValue >= 0 ?
                    /* istanbul ignore next */
                    (cov_39x6d23tp().b[61][0]++, newShopSpecificCostValue) :
                    /* istanbul ignore next */
                    (cov_39x6d23tp().b[61][1]++, 0)
                  }
                });
              } else {
                /* istanbul ignore next */
                cov_39x6d23tp().b[57][1]++;
                cov_39x6d23tp().s[141]++;
                finalQuantity = qtyToAdd;
                /* istanbul ignore next */
                cov_39x6d23tp().s[142]++;
                newShopSpecificCostValue = itemPrice;
                /* istanbul ignore next */
                cov_39x6d23tp().s[143]++;
                await tx.inventoryItem.create({
                  data: {
                    productId: Number(newItem.productId),
                    shopId: shopId,
                    quantity: finalQuantity,
                    shopSpecificCost: newShopSpecificCostValue >= 0 ?
                    /* istanbul ignore next */
                    (cov_39x6d23tp().b[62][0]++, newShopSpecificCostValue) :
                    /* istanbul ignore next */
                    (cov_39x6d23tp().b[62][1]++, 0)
                  }
                });
              }
              /* istanbul ignore next */
              cov_39x6d23tp().s[144]++;
              inventoryUpdates.push({
                productId: Number(newItem.productId),
                shopId: Number(shopId),
                newQuantity: finalQuantity,
                oldQuantity: oldInvQty
              });
            }
          } else {
            /* istanbul ignore next */
            cov_39x6d23tp().b[51][1]++;
            cov_39x6d23tp().s[145]++;
            // newItemDistribution is missing or empty. Try to infer shop or log error.
            console.warn(`Purchase item with productId ${newItem.productId} in invoice ${purchaseId} does not have explicit shop distribution data. Attempting to infer target shop.`);
            const existingInventoryItems =
            /* istanbul ignore next */
            (cov_39x6d23tp().s[146]++, await tx.inventoryItem.findMany({
              where: {
                productId: Number(newItem.productId)
              }
            }));
            let targetShopId =
            /* istanbul ignore next */
            (cov_39x6d23tp().s[147]++, null);
            /* istanbul ignore next */
            cov_39x6d23tp().s[148]++;
            if (existingInventoryItems.length === 1) {
              /* istanbul ignore next */
              cov_39x6d23tp().b[63][0]++;
              cov_39x6d23tp().s[149]++;
              targetShopId = existingInventoryItems[0].shopId;
              /* istanbul ignore next */
              cov_39x6d23tp().s[150]++;
              console.log(`Product ${newItem.productId} exists in one shop (${targetShopId}). Attributing new stock there.`);
            } else {
              /* istanbul ignore next */
              cov_39x6d23tp().b[63][1]++;
              cov_39x6d23tp().s[151]++;
              if (existingInventoryItems.length === 0) {
                /* istanbul ignore next */
                cov_39x6d23tp().b[64][0]++;
                cov_39x6d23tp().s[152]++;
                console.error(`Product ${newItem.productId} is new to inventory and no shop distribution provided. Cannot automatically assign to a shop. Inventory not updated for this item.`);
              } else {
                /* istanbul ignore next */
                cov_39x6d23tp().b[64][1]++;
                cov_39x6d23tp().s[153]++;
                console.error(`Product ${newItem.productId} exists in multiple shops and no specific distribution provided. Ambiguous. Inventory not updated for this item.`);
              }
            }
            /* istanbul ignore next */
            cov_39x6d23tp().s[154]++;
            if (targetShopId) {
              /* istanbul ignore next */
              cov_39x6d23tp().b[65][0]++;
              const qtyToAdd =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[155]++, itemQuantityTotal); // The total quantity for this newItem.
              /* istanbul ignore next */
              cov_39x6d23tp().s[156]++;
              if (qtyToAdd > 0) {
                /* istanbul ignore next */
                cov_39x6d23tp().b[66][0]++;
                const inventory =
                /* istanbul ignore next */
                (cov_39x6d23tp().s[157]++, await tx.inventoryItem.findFirst({
                  where: {
                    productId: Number(newItem.productId),
                    shopId: targetShopId
                  }
                }));
                let finalQuantity =
                /* istanbul ignore next */
                (cov_39x6d23tp().s[158]++, 0);
                const oldInvQty =
                /* istanbul ignore next */
                (cov_39x6d23tp().s[159]++,
                /* istanbul ignore next */
                (cov_39x6d23tp().b[67][0]++, inventory?.quantity) ||
                /* istanbul ignore next */
                (cov_39x6d23tp().b[67][1]++, 0));
                let newShopSpecificCostValue =
                /* istanbul ignore next */
                (cov_39x6d23tp().s[160]++, 0);
                const itemPrice =
                /* istanbul ignore next */
                (cov_39x6d23tp().s[161]++, Number(
                /* istanbul ignore next */
                (cov_39x6d23tp().b[68][0]++, newItem.price) ||
                /* istanbul ignore next */
                (cov_39x6d23tp().b[68][1]++, 0)));
                /* istanbul ignore next */
                cov_39x6d23tp().s[162]++;
                if (inventory) {
                  /* istanbul ignore next */
                  cov_39x6d23tp().b[69][0]++;
                  cov_39x6d23tp().s[163]++;
                  finalQuantity = inventory.quantity + qtyToAdd;
                  const oldShopTotalValue =
                  /* istanbul ignore next */
                  (cov_39x6d23tp().s[164]++, (
                  /* istanbul ignore next */
                  (cov_39x6d23tp().b[70][0]++, inventory.quantity) ||
                  /* istanbul ignore next */
                  (cov_39x6d23tp().b[70][1]++, 0)) * (
                  /* istanbul ignore next */
                  (cov_39x6d23tp().b[71][0]++, inventory.shopSpecificCost) ||
                  /* istanbul ignore next */
                  (cov_39x6d23tp().b[71][1]++, 0)));
                  const valueOfThisBatch =
                  /* istanbul ignore next */
                  (cov_39x6d23tp().s[165]++, qtyToAdd * itemPrice);
                  /* istanbul ignore next */
                  cov_39x6d23tp().s[166]++;
                  if (finalQuantity > 0) {
                    /* istanbul ignore next */
                    cov_39x6d23tp().b[72][0]++;
                    cov_39x6d23tp().s[167]++;
                    newShopSpecificCostValue = (oldShopTotalValue + valueOfThisBatch) / finalQuantity;
                  } else {
                    /* istanbul ignore next */
                    cov_39x6d23tp().b[72][1]++;
                    cov_39x6d23tp().s[168]++;
                    newShopSpecificCostValue = 0;
                  }
                  /* istanbul ignore next */
                  cov_39x6d23tp().s[169]++;
                  await tx.inventoryItem.update({
                    where: {
                      id: inventory.id
                    },
                    data: {
                      quantity: finalQuantity,
                      shopSpecificCost: newShopSpecificCostValue >= 0 ?
                      /* istanbul ignore next */
                      (cov_39x6d23tp().b[73][0]++, newShopSpecificCostValue) :
                      /* istanbul ignore next */
                      (cov_39x6d23tp().b[73][1]++, 0)
                    }
                  });
                } else {
                  /* istanbul ignore next */
                  cov_39x6d23tp().b[69][1]++;
                  cov_39x6d23tp().s[170]++;
                  finalQuantity = qtyToAdd;
                  /* istanbul ignore next */
                  cov_39x6d23tp().s[171]++;
                  newShopSpecificCostValue = itemPrice;
                  /* istanbul ignore next */
                  cov_39x6d23tp().s[172]++;
                  console.warn(`InventoryItem for product ${newItem.productId} in targetShopId ${targetShopId} not found during update, attempting create.`);
                  /* istanbul ignore next */
                  cov_39x6d23tp().s[173]++;
                  await tx.inventoryItem.create({
                    data: {
                      productId: Number(newItem.productId),
                      shopId: targetShopId,
                      quantity: finalQuantity,
                      shopSpecificCost: newShopSpecificCostValue >= 0 ?
                      /* istanbul ignore next */
                      (cov_39x6d23tp().b[74][0]++, newShopSpecificCostValue) :
                      /* istanbul ignore next */
                      (cov_39x6d23tp().b[74][1]++, 0)
                    }
                  });
                }
                /* istanbul ignore next */
                cov_39x6d23tp().s[174]++;
                inventoryUpdates.push({
                  productId: Number(newItem.productId),
                  shopId: Number(targetShopId),
                  newQuantity: finalQuantity,
                  oldQuantity: oldInvQty
                });
              } else {
                /* istanbul ignore next */
                cov_39x6d23tp().b[66][1]++;
                cov_39x6d23tp().s[175]++;
                console.warn(`Quantity for product ${newItem.productId} is zero or negative. No inventory update performed for this item.`);
              }
            } else
            /* istanbul ignore next */
            {
              cov_39x6d23tp().b[65][1]++;
            }
          }
          // Recalculate WAC based on all purchase history for this product
          // This ensures accuracy regardless of update order
          const allPurchaseItems =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[176]++, await tx.purchaseInvoiceItem.findMany({
            where: {
              productId: Number(newItem.productId)
            }
          }));
          let totalPurchaseQuantity =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[177]++, 0);
          let totalPurchaseValue =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[178]++, 0);
          /* istanbul ignore next */
          cov_39x6d23tp().s[179]++;
          allPurchaseItems.forEach(purchaseItem => {
            /* istanbul ignore next */
            cov_39x6d23tp().f[11]++;
            cov_39x6d23tp().s[180]++;
            totalPurchaseQuantity += purchaseItem.quantity;
            /* istanbul ignore next */
            cov_39x6d23tp().s[181]++;
            totalPurchaseValue += purchaseItem.quantity * purchaseItem.price;
          });
          let newWeightedAverageCost =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[182]++, 0);
          /* istanbul ignore next */
          cov_39x6d23tp().s[183]++;
          if (totalPurchaseQuantity > 0) {
            /* istanbul ignore next */
            cov_39x6d23tp().b[75][0]++;
            cov_39x6d23tp().s[184]++;
            newWeightedAverageCost = totalPurchaseValue / totalPurchaseQuantity;
          } else
          /* istanbul ignore next */
          {
            cov_39x6d23tp().b[75][1]++;
          }
          // Ensure WAC is valid
          cov_39x6d23tp().s[185]++;
          if (
          /* istanbul ignore next */
          (cov_39x6d23tp().b[77][0]++, newWeightedAverageCost <= 0) ||
          /* istanbul ignore next */
          (cov_39x6d23tp().b[77][1]++, isNaN(newWeightedAverageCost))) {
            /* istanbul ignore next */
            cov_39x6d23tp().b[76][0]++;
            cov_39x6d23tp().s[186]++;
            newWeightedAverageCost = Number(newItem.price);
          } else
          /* istanbul ignore next */
          {
            cov_39x6d23tp().b[76][1]++;
          }
          cov_39x6d23tp().s[187]++;
          await tx.product.update({
            where: {
              id: Number(newItem.productId)
            },
            data: {
              weightedAverageCost: newWeightedAverageCost
            }
          });
        }
      } else
      /* istanbul ignore next */
      {
        cov_39x6d23tp().b[40][1]++;
      }
      const fullUpdatedInvoice =
      /* istanbul ignore next */
      (cov_39x6d23tp().s[188]++, await tx.purchaseInvoice.findUnique({
        where: {
          id: purchaseId
        },
        include: {
          supplier: true,
          items: {
            include: {
              product: true
            }
          }
        }
      }));
      /* istanbul ignore next */
      cov_39x6d23tp().s[189]++;
      return {
        fullUpdatedInvoice,
        inventoryUpdates
      };
    }, {
      timeout: 30000
    }));
    // Real-time updates now handled by polling system
    /* istanbul ignore next */
    cov_39x6d23tp().s[190]++;
    if (
    /* istanbul ignore next */
    (cov_39x6d23tp().b[79][0]++, result) &&
    /* istanbul ignore next */
    (cov_39x6d23tp().b[79][1]++, result.fullUpdatedInvoice)) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[78][0]++;
      cov_39x6d23tp().s[191]++;
      console.log("Purchase invoice updated successfully");
    } else
    /* istanbul ignore next */
    {
      cov_39x6d23tp().b[78][1]++;
    }
    // After successful transaction, invalidate relevant caches
    cov_39x6d23tp().s[192]++;
    try {
      /* istanbul ignore next */
      cov_39x6d23tp().s[193]++;
      await _cache1.cacheService.invalidateInventory(); // Handles 'inventory:summary:*' and 'products:*'
      /* istanbul ignore next */
      cov_39x6d23tp().s[194]++;
      await _cache1.cacheService.del("dashboard:inventory");
      /* istanbul ignore next */
      cov_39x6d23tp().s[195]++;
      await _cache1.cacheService.del("dashboard:inventory-value");
      /* istanbul ignore next */
      cov_39x6d23tp().s[196]++;
      await _cache1.cacheService.del("dashboard:shops");
      /* istanbul ignore next */
      cov_39x6d23tp().s[197]++;
      await _cache1.cacheService.del("dashboard:all");
      /* istanbul ignore next */
      cov_39x6d23tp().s[198]++;
      await _cache1.cacheService.del("dashboard:summary");
      // Invalidate purchases-specific caches
      /* istanbul ignore next */
      cov_39x6d23tp().s[199]++;
      await _cache1.cacheService.invalidatePattern("purchases-optimized*");
      /* istanbul ignore next */
      cov_39x6d23tp().s[200]++;
      await _cache1.cacheService.invalidatePattern("purchase-stats*");
      /* istanbul ignore next */
      cov_39x6d23tp().s[201]++;
      console.log("Relevant caches invalidated after purchase update.");
    } catch (cacheError) {
      /* istanbul ignore next */
      cov_39x6d23tp().s[202]++;
      console.error("Error invalidating caches after purchase update:", cacheError);
      // Do not let cache invalidation error fail the main operation
    }
    // Revalidate Next.js cached pages immediately
    /* istanbul ignore next */
    cov_39x6d23tp().s[203]++;
    try {
      /* istanbul ignore next */
      cov_39x6d23tp().s[204]++;
      (0, _cache.revalidateTag)("purchase-invoices");
      /* istanbul ignore next */
      cov_39x6d23tp().s[205]++;
      (0, _cache.revalidateTag)(`purchase-${purchaseId}`);
      /* istanbul ignore next */
      cov_39x6d23tp().s[206]++;
      (0, _cache.revalidatePath)(`/purchases/${purchaseId}`);
      /* istanbul ignore next */
      cov_39x6d23tp().s[207]++;
      (0, _cache.revalidatePath)(`/purchases/${purchaseId}/edit`);
      /* istanbul ignore next */
      cov_39x6d23tp().s[208]++;
      (0, _cache.revalidatePath)("/purchases");
      // Also revalidate the main purchases page to ensure list updates
      /* istanbul ignore next */
      cov_39x6d23tp().s[209]++;
      (0, _cache.revalidatePath)("/purchases", "page");
      /* istanbul ignore next */
      cov_39x6d23tp().s[210]++;
      console.log("Next.js pages revalidated after purchase update.");
    } catch (revalidateError) {
      /* istanbul ignore next */
      cov_39x6d23tp().s[211]++;
      console.error("Error revalidating Next.js pages after purchase update:", revalidateError);
    }
    /* istanbul ignore next */
    cov_39x6d23tp().s[212]++;
    return _server.NextResponse.json({
      message: "Purchase invoice updated successfully",
      data: result.fullUpdatedInvoice
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_39x6d23tp().s[213]++;
    console.error(`Error updating purchase invoice ${id}:`, error);
    const details =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[214]++, error instanceof Error ?
    /* istanbul ignore next */
    (cov_39x6d23tp().b[80][0]++, error.message) :
    /* istanbul ignore next */
    (cov_39x6d23tp().b[80][1]++, String(error)));
    /* istanbul ignore next */
    cov_39x6d23tp().s[215]++;
    return _server.NextResponse.json({
      error: {
        message: "Failed to update purchase invoice",
        details: details
      }
    }, {
      status: 500
    });
  }
}
async function DELETE(request, {
  params
}) {
  /* istanbul ignore next */
  cov_39x6d23tp().f[12]++;
  const purchaseIdStr =
  /* istanbul ignore next */
  (cov_39x6d23tp().s[216]++, params.id);
  /* istanbul ignore next */
  cov_39x6d23tp().s[217]++;
  try {
    const purchaseId =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[218]++, parseInt(purchaseIdStr));
    /* istanbul ignore next */
    cov_39x6d23tp().s[219]++;
    if (isNaN(purchaseId)) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[81][0]++;
      cov_39x6d23tp().s[220]++;
      return _server.NextResponse.json({
        error: {
          message: "Invalid purchase ID format"
        }
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_39x6d23tp().b[81][1]++;
    }
    const purchaseToDelete =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[221]++, await _prisma.default.purchaseInvoice.findUnique({
      where: {
        id: purchaseId
      },
      include: {
        items: {
          include: {
            product: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_39x6d23tp().s[222]++;
    if (!purchaseToDelete) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[82][0]++;
      cov_39x6d23tp().s[223]++;
      return _server.NextResponse.json({
        error: {
          message: "Purchase invoice not found to delete"
        }
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_39x6d23tp().b[82][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[224]++, await _prisma.default.$transaction(async tx => {
      /* istanbul ignore next */
      cov_39x6d23tp().f[13]++;
      const inventoryUpdates =
      /* istanbul ignore next */
      (cov_39x6d23tp().s[225]++, []);
      /* istanbul ignore next */
      cov_39x6d23tp().s[226]++;
      if (
      /* istanbul ignore next */
      (cov_39x6d23tp().b[84][0]++, purchaseToDelete.items) &&
      /* istanbul ignore next */
      (cov_39x6d23tp().b[84][1]++, purchaseToDelete.items.length > 0)) {
        /* istanbul ignore next */
        cov_39x6d23tp().b[83][0]++;
        cov_39x6d23tp().s[227]++;
        for (const item of purchaseToDelete.items) {
          /* istanbul ignore next */
          cov_39x6d23tp().s[228]++;
          if (!item.product) {
            /* istanbul ignore next */
            cov_39x6d23tp().b[85][0]++;
            cov_39x6d23tp().s[229]++;
            console.warn(`Item ${item.id} for purchase ${purchaseId} is missing product data. Skipping stock adjustment.`);
            /* istanbul ignore next */
            cov_39x6d23tp().s[230]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_39x6d23tp().b[85][1]++;
          }
          const productId =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[231]++, item.productId);
          const quantityToRemoveForItemTotal =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[232]++, item.quantity); // Total quantity for this item line
          let itemDistributionInfo =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[233]++, null);
          const distributionsOnInvoice =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[234]++, purchaseToDelete.distributions);
          // Attempt to get specific distribution for this item
          /* istanbul ignore next */
          cov_39x6d23tp().s[235]++;
          if (
          /* istanbul ignore next */
          (cov_39x6d23tp().b[87][0]++, distributionsOnInvoice) &&
          /* istanbul ignore next */
          (cov_39x6d23tp().b[87][1]++, Array.isArray(distributionsOnInvoice)) &&
          /* istanbul ignore next */
          (cov_39x6d23tp().b[87][2]++, purchaseToDelete.items.indexOf(item) < distributionsOnInvoice.length)) {
            /* istanbul ignore next */
            cov_39x6d23tp().b[86][0]++;
            const distData =
            /* istanbul ignore next */
            (cov_39x6d23tp().s[236]++, distributionsOnInvoice[purchaseToDelete.items.indexOf(item)]);
            /* istanbul ignore next */
            cov_39x6d23tp().s[237]++;
            if (
            /* istanbul ignore next */
            (cov_39x6d23tp().b[89][0]++, distData) &&
            /* istanbul ignore next */
            (cov_39x6d23tp().b[89][1]++, typeof distData === "object") &&
            /* istanbul ignore next */
            (cov_39x6d23tp().b[89][2]++, Object.keys(distData).length > 0)) {
              /* istanbul ignore next */
              cov_39x6d23tp().b[88][0]++;
              cov_39x6d23tp().s[238]++;
              itemDistributionInfo = distData;
            } else
            /* istanbul ignore next */
            {
              cov_39x6d23tp().b[88][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_39x6d23tp().b[86][1]++;
          }
          cov_39x6d23tp().s[239]++;
          if (itemDistributionInfo) {
            /* istanbul ignore next */
            cov_39x6d23tp().b[90][0]++;
            cov_39x6d23tp().s[240]++;
            // Case 1: Explicit distribution data found for the item
            console.log(`Reversing item-specific distribution for product ${productId}, purchase ${purchaseId}`);
            /* istanbul ignore next */
            cov_39x6d23tp().s[241]++;
            for (const [shopIdStr, distributedQuantityStr] of Object.entries(itemDistributionInfo)) {
              const shopId =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[242]++, shopIdStr);
              const qtyInShopToRemove =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[243]++, Number(distributedQuantityStr));
              /* istanbul ignore next */
              cov_39x6d23tp().s[244]++;
              if (
              /* istanbul ignore next */
              (cov_39x6d23tp().b[92][0]++, isNaN(qtyInShopToRemove)) ||
              /* istanbul ignore next */
              (cov_39x6d23tp().b[92][1]++, qtyInShopToRemove <= 0)) {
                /* istanbul ignore next */
                cov_39x6d23tp().b[91][0]++;
                cov_39x6d23tp().s[245]++;
                continue;
              } else
              /* istanbul ignore next */
              {
                cov_39x6d23tp().b[91][1]++;
              }
              const inventoryItem =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[246]++, await tx.inventoryItem.findFirst({
                where: {
                  productId,
                  shopId: shopId
                }
              }));
              /* istanbul ignore next */
              cov_39x6d23tp().s[247]++;
              if (inventoryItem) {
                /* istanbul ignore next */
                cov_39x6d23tp().b[93][0]++;
                const oldShopQuantity =
                /* istanbul ignore next */
                (cov_39x6d23tp().s[248]++, inventoryItem.quantity);
                const newShopQuantity =
                /* istanbul ignore next */
                (cov_39x6d23tp().s[249]++, Math.max(0, inventoryItem.quantity - qtyInShopToRemove));
                const updateData =
                /* istanbul ignore next */
                (cov_39x6d23tp().s[250]++, {
                  quantity: newShopQuantity,
                  shopSpecificCost: newShopQuantity === 0 ?
                  /* istanbul ignore next */
                  (cov_39x6d23tp().b[94][0]++, 0) :
                  /* istanbul ignore next */
                  (cov_39x6d23tp().b[94][1]++, inventoryItem.shopSpecificCost)
                });
                /* istanbul ignore next */
                cov_39x6d23tp().s[251]++;
                await tx.inventoryItem.update({
                  where: {
                    id: inventoryItem.id
                  },
                  data: updateData
                });
                /* istanbul ignore next */
                cov_39x6d23tp().s[252]++;
                inventoryUpdates.push({
                  productId,
                  shopId: Number(shopId),
                  newQuantity: newShopQuantity,
                  oldQuantity: oldShopQuantity
                });
                /* istanbul ignore next */
                cov_39x6d23tp().s[253]++;
                console.log(`  - Reduced inventory for product ${productId} in shop ${shopId} by ${qtyInShopToRemove}. Old: ${oldShopQuantity}, New: ${newShopQuantity}`);
              } else {
                /* istanbul ignore next */
                cov_39x6d23tp().b[93][1]++;
                cov_39x6d23tp().s[254]++;
                console.warn(`  - Inventory item not found for product ${productId} in shop ${shopId} during purchase deletion with explicit distribution. Stock may be inaccurate.`);
              }
            }
          } else {
            /* istanbul ignore next */
            cov_39x6d23tp().b[90][1]++;
            cov_39x6d23tp().s[255]++;
            // Case 2: No explicit distribution for this item. Attempt to infer.
            console.warn(`No specific distribution found for item ${productId} in deleted purchase ${purchaseId}. Attempting to infer shop(s) for stock reversal of total quantity ${quantityToRemoveForItemTotal}.`);
            const existingInventoriesForItem =
            /* istanbul ignore next */
            (cov_39x6d23tp().s[256]++, await tx.inventoryItem.findMany({
              where: {
                productId: productId
              }
            }));
            /* istanbul ignore next */
            cov_39x6d23tp().s[257]++;
            if (existingInventoriesForItem.length === 1) {
              /* istanbul ignore next */
              cov_39x6d23tp().b[95][0]++;
              const singleShopInventory =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[258]++, existingInventoriesForItem[0]);
              const shopIdToDeductFrom =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[259]++, singleShopInventory.shopId);
              /* istanbul ignore next */
              cov_39x6d23tp().s[260]++;
              console.log(`Product ${productId} found in single shop ${shopIdToDeductFrom}. Deducting total item quantity ${quantityToRemoveForItemTotal}.`);
              const oldShopQuantity =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[261]++, singleShopInventory.quantity);
              const newShopQuantity =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[262]++, Math.max(0, singleShopInventory.quantity - quantityToRemoveForItemTotal));
              const updateDataInferred =
              /* istanbul ignore next */
              (cov_39x6d23tp().s[263]++, {
                quantity: newShopQuantity,
                shopSpecificCost: newShopQuantity === 0 ?
                /* istanbul ignore next */
                (cov_39x6d23tp().b[96][0]++, 0) :
                /* istanbul ignore next */
                (cov_39x6d23tp().b[96][1]++, singleShopInventory.shopSpecificCost)
              });
              /* istanbul ignore next */
              cov_39x6d23tp().s[264]++;
              await tx.inventoryItem.update({
                where: {
                  id: singleShopInventory.id
                },
                data: updateDataInferred
              });
              /* istanbul ignore next */
              cov_39x6d23tp().s[265]++;
              inventoryUpdates.push({
                productId,
                shopId: Number(shopIdToDeductFrom),
                newQuantity: newShopQuantity,
                oldQuantity: oldShopQuantity
              });
              /* istanbul ignore next */
              cov_39x6d23tp().s[266]++;
              console.log(`  - Reduced inventory for product ${productId} in inferred shop ${shopIdToDeductFrom} by ${quantityToRemoveForItemTotal}. Old: ${oldShopQuantity}, New: ${newShopQuantity}`);
            } else {
              /* istanbul ignore next */
              cov_39x6d23tp().b[95][1]++;
              cov_39x6d23tp().s[267]++;
              if (existingInventoriesForItem.length === 0) {
                /* istanbul ignore next */
                cov_39x6d23tp().b[97][0]++;
                cov_39x6d23tp().s[268]++;
                console.error(`Product ${productId} (from deleted purchase ${purchaseId}) not found in any inventory. Cannot reverse stock for this item.`);
              } else {
                /* istanbul ignore next */
                cov_39x6d23tp().b[97][1]++;
                cov_39x6d23tp().s[269]++;
                console.error(`Product ${productId} (from deleted purchase ${purchaseId}) exists in multiple shops, but no specific distribution data was found on the invoice for reversal. Ambiguous. Stock not automatically reversed for this item. Manual adjustment may be needed.`);
              }
            }
          }
          // ---- BEGIN WAC Recalculation for the deleted item ----
          const remainingPurchaseItems =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[270]++, await tx.purchaseInvoiceItem.findMany({
            where: {
              productId: productId,
              purchaseInvoiceId: {
                not: purchaseId
              }
            }
          }));
          let totalRemainingQuantity =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[271]++, 0);
          let totalRemainingValue =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[272]++, 0);
          /* istanbul ignore next */
          cov_39x6d23tp().s[273]++;
          remainingPurchaseItems.forEach(pItem => {
            /* istanbul ignore next */
            cov_39x6d23tp().f[14]++;
            cov_39x6d23tp().s[274]++;
            totalRemainingQuantity += pItem.quantity;
            /* istanbul ignore next */
            cov_39x6d23tp().s[275]++;
            totalRemainingValue += pItem.quantity * pItem.price;
          });
          let newCalculatedWAC =
          /* istanbul ignore next */
          (cov_39x6d23tp().s[276]++, 0);
          /* istanbul ignore next */
          cov_39x6d23tp().s[277]++;
          if (totalRemainingQuantity > 0) {
            /* istanbul ignore next */
            cov_39x6d23tp().b[98][0]++;
            cov_39x6d23tp().s[278]++;
            newCalculatedWAC = totalRemainingValue / totalRemainingQuantity;
          } else
          /* istanbul ignore next */
          {
            cov_39x6d23tp().b[98][1]++;
          }
          cov_39x6d23tp().s[279]++;
          await tx.product.update({
            where: {
              id: productId
            },
            data: {
              weightedAverageCost: newCalculatedWAC >= 0 ?
              /* istanbul ignore next */
              (cov_39x6d23tp().b[99][0]++, newCalculatedWAC) :
              /* istanbul ignore next */
              (cov_39x6d23tp().b[99][1]++, 0)
            }
          });
          // ---- END WAC Recalculation ----
        }
      } else
      /* istanbul ignore next */
      {
        cov_39x6d23tp().b[83][1]++;
      }
      cov_39x6d23tp().s[280]++;
      await tx.purchaseInvoiceItem.deleteMany({
        where: {
          purchaseInvoiceId: purchaseId
        }
      });
      /* istanbul ignore next */
      cov_39x6d23tp().s[281]++;
      await tx.purchaseInvoice.delete({
        where: {
          id: purchaseId
        }
      });
      /* istanbul ignore next */
      cov_39x6d23tp().s[282]++;
      return {
        deletedInvoiceId: purchaseId,
        inventoryUpdates
      };
    }));
    // Real-time updates now handled by polling system
    /* istanbul ignore next */
    cov_39x6d23tp().s[283]++;
    if (
    /* istanbul ignore next */
    (cov_39x6d23tp().b[101][0]++, result) &&
    /* istanbul ignore next */
    (cov_39x6d23tp().b[101][1]++, result.deletedInvoiceId)) {
      /* istanbul ignore next */
      cov_39x6d23tp().b[100][0]++;
      cov_39x6d23tp().s[284]++;
      console.log(`Purchase invoice ${result.deletedInvoiceId} deleted successfully`);
    } else
    /* istanbul ignore next */
    {
      cov_39x6d23tp().b[100][1]++;
    }
    // After successful transaction, invalidate relevant caches
    cov_39x6d23tp().s[285]++;
    try {
      /* istanbul ignore next */
      cov_39x6d23tp().s[286]++;
      await _cache1.cacheService.invalidateInventory(); // Handles 'inventory:summary:*' and 'products:*'
      /* istanbul ignore next */
      cov_39x6d23tp().s[287]++;
      await _cache1.cacheService.del("dashboard:inventory");
      /* istanbul ignore next */
      cov_39x6d23tp().s[288]++;
      await _cache1.cacheService.del("dashboard:inventory-value");
      /* istanbul ignore next */
      cov_39x6d23tp().s[289]++;
      await _cache1.cacheService.del("dashboard:shops");
      /* istanbul ignore next */
      cov_39x6d23tp().s[290]++;
      await _cache1.cacheService.del("dashboard:all");
      /* istanbul ignore next */
      cov_39x6d23tp().s[291]++;
      await _cache1.cacheService.del("dashboard:summary");
      // Invalidate purchases-specific caches
      /* istanbul ignore next */
      cov_39x6d23tp().s[292]++;
      await _cache1.cacheService.invalidatePattern("purchases-optimized*");
      /* istanbul ignore next */
      cov_39x6d23tp().s[293]++;
      await _cache1.cacheService.invalidatePattern("purchase-stats*");
      /* istanbul ignore next */
      cov_39x6d23tp().s[294]++;
      console.log("Relevant caches invalidated after purchase deletion.");
    } catch (cacheError) {
      /* istanbul ignore next */
      cov_39x6d23tp().s[295]++;
      console.error("Error invalidating caches after purchase deletion:", cacheError);
      // Do not let cache invalidation error fail the main operation
    }
    // Revalidate Next.js cached pages
    /* istanbul ignore next */
    cov_39x6d23tp().s[296]++;
    try {
      /* istanbul ignore next */
      cov_39x6d23tp().s[297]++;
      (0, _cache.revalidateTag)("purchase-invoices");
      /* istanbul ignore next */
      cov_39x6d23tp().s[298]++;
      (0, _cache.revalidateTag)(`purchase-${purchaseId}`);
      /* istanbul ignore next */
      cov_39x6d23tp().s[299]++;
      (0, _cache.revalidatePath)(`/purchases/${purchaseId}`);
      /* istanbul ignore next */
      cov_39x6d23tp().s[300]++;
      (0, _cache.revalidatePath)(`/purchases/${purchaseId}/edit`);
      /* istanbul ignore next */
      cov_39x6d23tp().s[301]++;
      (0, _cache.revalidatePath)("/purchases");
      /* istanbul ignore next */
      cov_39x6d23tp().s[302]++;
      console.log("Next.js pages revalidated after purchase deletion.");
    } catch (revalidateError) {
      /* istanbul ignore next */
      cov_39x6d23tp().s[303]++;
      console.error("Error revalidating Next.js pages after purchase deletion:", revalidateError);
    }
    /* istanbul ignore next */
    cov_39x6d23tp().s[304]++;
    return _server.NextResponse.json({
      message: "Purchase invoice deleted successfully"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_39x6d23tp().s[305]++;
    console.error(`Error deleting purchase invoice ${purchaseIdStr}:`, error);
    const details =
    /* istanbul ignore next */
    (cov_39x6d23tp().s[306]++, error instanceof Error ?
    /* istanbul ignore next */
    (cov_39x6d23tp().b[102][0]++, error.message) :
    /* istanbul ignore next */
    (cov_39x6d23tp().b[102][1]++, "An unknown error occurred"));
    /* istanbul ignore next */
    cov_39x6d23tp().s[307]++;
    return _server.NextResponse.json({
      error: {
        message: "Failed to delete purchase invoice",
        details: details
      }
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJERUxFVEUiLCJjb3ZfMzl4NmQyM3RwIiwiZiIsInMiLCJHRVQiLCJQVVQiLCJyZXF1ZXN0IiwicGFyYW1zIiwiaWQiLCJwdXJjaGFzZUlkIiwicGFyc2VJbnQiLCJpc05hTiIsImIiLCJfc2VydmVyIiwiTmV4dFJlc3BvbnNlIiwianNvbiIsImVycm9yIiwibWVzc2FnZSIsInN0YXR1cyIsInB1cmNoYXNlIiwiX3ByaXNtYSIsImRlZmF1bHQiLCJwdXJjaGFzZUludm9pY2UiLCJmaW5kVW5pcXVlIiwid2hlcmUiLCJpbmNsdWRlIiwic3VwcGxpZXIiLCJpdGVtcyIsInByb2R1Y3QiLCJyZXNwb25zZSIsImhlYWRlcnMiLCJzZXQiLCJ1cGRhdGVkQXQiLCJnZXRUaW1lIiwiRGF0ZSIsIm5vdyIsImNvbnNvbGUiLCJkZXRhaWxzIiwiRXJyb3IiLCJib2R5Iiwib3JpZ2luYWxQdXJjaGFzZSIsIm5ld0l0ZW1zRGF0YSIsImRpc3RyaWJ1dGlvbnMiLCJuZXdEaXN0cmlidXRpb25zRGF0YSIsImludm9pY2VEYXRhIiwiXyIsImNyZWF0ZWRBdCIsIm5vdGVzIiwiZGlydHlEYXRhIiwiY2xlYW5lZEludm9pY2VEYXRhIiwiaW52b2ljZU51bWJlciIsImRhdGUiLCJkdWVEYXRlIiwidW5kZWZpbmVkIiwidG90YWxBbW91bnQiLCJ0b3RhbCIsIk51bWJlciIsInN1cHBsaWVySWQiLCJjb25uZWN0IiwiZGlzY29ubmVjdCIsInJlc3VsdCIsIiR0cmFuc2FjdGlvbiIsInR4IiwiaW52ZW50b3J5VXBkYXRlcyIsImxlbmd0aCIsIm9sZEl0ZW0iLCJwcm9kdWN0VG9VcGRhdGUiLCJwcm9kdWN0SWQiLCJvbGRJdGVtRGlzdHJpYnV0aW9uIiwiQXJyYXkiLCJpc0FycmF5IiwiaW5kZXhPZiIsIk9iamVjdCIsImtleXMiLCJzaG9wSWRTdHIiLCJxdWFudGl0eUluU2hvcCIsImVudHJpZXMiLCJzaG9wSWQiLCJxdHlUb1JlbW92ZSIsImludmVudG9yeSIsImludmVudG9yeUl0ZW0iLCJmaW5kRmlyc3QiLCJvbGRTaG9wUXVhbnRpdHkiLCJxdWFudGl0eSIsIm5ld1F1YW50aXR5IiwiTWF0aCIsIm1heCIsInVwZGF0ZSIsImRhdGEiLCJzaG9wU3BlY2lmaWNDb3N0IiwicHVzaCIsIm9sZFF1YW50aXR5Iiwid2FybiIsImV4aXN0aW5nSW52ZW50b3JpZXNGb3JPbGRJdGVtIiwiZmluZE1hbnkiLCJzaG9wSWRUb1JldmVyc2VGcm9tIiwibG9nIiwiY3VycmVudFRvdGFsUHJvZHVjdFF1YW50aXR5IiwiYWxsSW52ZW50b3J5Rm9yUHJvZHVjdEFmdGVyUmV2ZXJzYWwiLCJyZWR1Y2UiLCJzdW0iLCJpbnYiLCJyZW1haW5pbmdQdXJjaGFzZUl0ZW1zIiwicHVyY2hhc2VJbnZvaWNlSXRlbSIsInB1cmNoYXNlSW52b2ljZUlkIiwibm90IiwidG90YWxSZW1haW5pbmdRdWFudGl0eSIsInRvdGFsUmVtYWluaW5nVmFsdWUiLCJmb3JFYWNoIiwicHVyY2hhc2VJdGVtIiwicHJpY2UiLCJuZXdXQUMiLCJ3ZWlnaHRlZEF2ZXJhZ2VDb3N0IiwiZGVsZXRlTWFueSIsIm5ld1RvdGFsSW52b2ljZUFtb3VudCIsIml0ZW0iLCJ1cGRhdGVkSW52b2ljZSIsImkiLCJuZXdJdGVtIiwiY3JlYXRlIiwibmV3SXRlbURpc3RyaWJ1dGlvbiIsIml0ZW1RdWFudGl0eVRvdGFsIiwicXR5VG9BZGQiLCJmaW5hbFF1YW50aXR5Iiwib2xkSW52UXR5IiwibmV3U2hvcFNwZWNpZmljQ29zdFZhbHVlIiwiaXRlbVByaWNlIiwib2xkU2hvcFRvdGFsVmFsdWUiLCJ2YWx1ZU9mVGhpc0JhdGNoIiwiZXhpc3RpbmdJbnZlbnRvcnlJdGVtcyIsInRhcmdldFNob3BJZCIsImFsbFB1cmNoYXNlSXRlbXMiLCJ0b3RhbFB1cmNoYXNlUXVhbnRpdHkiLCJ0b3RhbFB1cmNoYXNlVmFsdWUiLCJuZXdXZWlnaHRlZEF2ZXJhZ2VDb3N0IiwiZnVsbFVwZGF0ZWRJbnZvaWNlIiwidGltZW91dCIsIl9jYWNoZTEiLCJjYWNoZVNlcnZpY2UiLCJpbnZhbGlkYXRlSW52ZW50b3J5IiwiZGVsIiwiaW52YWxpZGF0ZVBhdHRlcm4iLCJjYWNoZUVycm9yIiwiX2NhY2hlIiwicmV2YWxpZGF0ZVRhZyIsInJldmFsaWRhdGVQYXRoIiwicmV2YWxpZGF0ZUVycm9yIiwiU3RyaW5nIiwicHVyY2hhc2VJZFN0ciIsInB1cmNoYXNlVG9EZWxldGUiLCJxdWFudGl0eVRvUmVtb3ZlRm9ySXRlbVRvdGFsIiwiaXRlbURpc3RyaWJ1dGlvbkluZm8iLCJkaXN0cmlidXRpb25zT25JbnZvaWNlIiwiZGlzdERhdGEiLCJkaXN0cmlidXRlZFF1YW50aXR5U3RyIiwicXR5SW5TaG9wVG9SZW1vdmUiLCJuZXdTaG9wUXVhbnRpdHkiLCJ1cGRhdGVEYXRhIiwiZXhpc3RpbmdJbnZlbnRvcmllc0Zvckl0ZW0iLCJzaW5nbGVTaG9wSW52ZW50b3J5Iiwic2hvcElkVG9EZWR1Y3RGcm9tIiwidXBkYXRlRGF0YUluZmVycmVkIiwicEl0ZW0iLCJuZXdDYWxjdWxhdGVkV0FDIiwiZGVsZXRlIiwiZGVsZXRlZEludm9pY2VJZCJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9zYWNoaW4vRG9jdW1lbnRzL21kLXNwb3J0cy0vc3JjL2FwcC9hcGkvcHVyY2hhc2VzL1tpZF0vcm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcbmltcG9ydCB7IHJldmFsaWRhdGVUYWcsIHJldmFsaWRhdGVQYXRoIH0gZnJvbSAnbmV4dC9jYWNoZSc7XG5pbXBvcnQgcHJpc21hIGZyb20gJ0AvbGliL3ByaXNtYSc7XG5pbXBvcnQgeyBQcmlzbWFDbGllbnRLbm93blJlcXVlc3RFcnJvciB9IGZyb20gJ0BwcmlzbWEvY2xpZW50L3J1bnRpbWUvbGlicmFyeSc7XG5pbXBvcnQgeyBnZXRUb2tlbiB9IGZyb20gJ25leHQtYXV0aC9qd3QnO1xuaW1wb3J0IHsgY2FjaGVTZXJ2aWNlIH0gZnJvbSAnQC9saWIvY2FjaGUnO1xuXG4vLyBHRVQgL2FwaS9wdXJjaGFzZXMvW2lkXSAtIEdldCBhIHNwZWNpZmljIHB1cmNoYXNlIGludm9pY2VcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQoXG4gICAgcmVxdWVzdDogTmV4dFJlcXVlc3QsXG4gICAgeyBwYXJhbXMgfTogeyBwYXJhbXM6IHsgaWQ6IHN0cmluZyB9IH1cbikge1xuICAgIGNvbnN0IGlkID0gcGFyYW1zLmlkOyAvLyBTdG9yZSBwYXJhbXMuaWQgZWFybHkgdG8gYXZvaWQgYXN5bmMgaXNzdWVzXG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcHVyY2hhc2VJZCA9IHBhcnNlSW50KGlkKTtcblxuICAgICAgICBpZiAoaXNOYU4ocHVyY2hhc2VJZCkpIHtcbiAgICAgICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgICAgICAgICB7IGVycm9yOiB7IG1lc3NhZ2U6ICdJbnZhbGlkIHB1cmNoYXNlIElEIGZvcm1hdCcgfSB9LFxuICAgICAgICAgICAgICAgIHsgc3RhdHVzOiA0MDAgfVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHB1cmNoYXNlID0gYXdhaXQgcHJpc21hLnB1cmNoYXNlSW52b2ljZS5maW5kVW5pcXVlKHtcbiAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgaWQ6IHB1cmNoYXNlSWRcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpbmNsdWRlOiB7XG4gICAgICAgICAgICAgICAgc3VwcGxpZXI6IHRydWUsXG4gICAgICAgICAgICAgICAgaXRlbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgaW5jbHVkZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJvZHVjdDogdHJ1ZVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoIXB1cmNoYXNlKSB7XG4gICAgICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgICAgICAgICAgeyBlcnJvcjogeyBtZXNzYWdlOiAnUHVyY2hhc2UgaW52b2ljZSBub3QgZm91bmQnIH0gfSxcbiAgICAgICAgICAgICAgICB7IHN0YXR1czogNDA0IH1cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBDcmVhdGUgcmVzcG9uc2Ugd2l0aCBwcm9wZXIgY2FjaGUgaGVhZGVyc1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IE5leHRSZXNwb25zZS5qc29uKHB1cmNoYXNlKTtcbiAgICAgICAgXG4gICAgICAgIC8vIEFkZCBjYWNoZSBjb250cm9sIGhlYWRlcnMgdG8gZW5hYmxlIHByb3BlciBjYWNoaW5nIGFuZCByZXZhbGlkYXRpb25cbiAgICAgICAgcmVzcG9uc2UuaGVhZGVycy5zZXQoJ0NhY2hlLUNvbnRyb2wnLCAnbm8tY2FjaGUsIG11c3QtcmV2YWxpZGF0ZScpO1xuICAgICAgICByZXNwb25zZS5oZWFkZXJzLnNldCgnRVRhZycsIGBcInB1cmNoYXNlLSR7cHVyY2hhc2VJZH0tJHtwdXJjaGFzZS51cGRhdGVkQXQ/LmdldFRpbWUoKSB8fCBEYXRlLm5vdygpfVwiYCk7XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihgRXJyb3IgZmV0Y2hpbmcgcHVyY2hhc2UgaW52b2ljZSAke2lkfTpgLCBlcnJvcik7XG4gICAgICAgIGNvbnN0IGRldGFpbHMgPSBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdBbiB1bmtub3duIGVycm9yIG9jY3VycmVkJztcbiAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICAgICAgeyBlcnJvcjogeyBtZXNzYWdlOiAnRmFpbGVkIHRvIGZldGNoIHB1cmNoYXNlIGludm9pY2UnLCBkZXRhaWxzOiBkZXRhaWxzIH0gfSxcbiAgICAgICAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICAgICApO1xuICAgIH1cbn1cblxuLy8gUFVUIC9hcGkvcHVyY2hhc2VzL1tpZF0gLSBVcGRhdGUgYSBwdXJjaGFzZSBpbnZvaWNlXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUFVUKFxuICAgIHJlcXVlc3Q6IE5leHRSZXF1ZXN0LFxuICAgIHsgcGFyYW1zIH06IHsgcGFyYW1zOiB7IGlkOiBzdHJpbmcgfSB9XG4pIHtcbiAgICBjb25zdCBpZCA9IHBhcmFtcy5pZDtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBwdXJjaGFzZUlkID0gcGFyc2VJbnQoaWQpO1xuICAgICAgICBpZiAoaXNOYU4ocHVyY2hhc2VJZCkpIHtcbiAgICAgICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgICAgICAgICB7IGVycm9yOiB7IG1lc3NhZ2U6ICdJbnZhbGlkIHB1cmNoYXNlIElEIGZvcm1hdCcgfSB9LFxuICAgICAgICAgICAgICAgIHsgc3RhdHVzOiA0MDAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYm9keSA9IGF3YWl0IHJlcXVlc3QuanNvbigpO1xuICAgICAgICBjb25zdCBvcmlnaW5hbFB1cmNoYXNlID0gYXdhaXQgcHJpc21hLnB1cmNoYXNlSW52b2ljZS5maW5kVW5pcXVlKHtcbiAgICAgICAgICAgIHdoZXJlOiB7IGlkOiBwdXJjaGFzZUlkIH0sXG4gICAgICAgICAgICBpbmNsdWRlOiB7IGl0ZW1zOiB7IGluY2x1ZGU6IHsgcHJvZHVjdDogdHJ1ZSB9IH0gfSxcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICghb3JpZ2luYWxQdXJjaGFzZSkge1xuICAgICAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICAgICAgICAgIHsgZXJyb3I6IHsgbWVzc2FnZTogJ1B1cmNoYXNlIGludm9pY2Ugbm90IGZvdW5kIHRvIHVwZGF0ZScgfSB9LFxuICAgICAgICAgICAgICAgIHsgc3RhdHVzOiA0MDQgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgeyBpdGVtczogbmV3SXRlbXNEYXRhLCBkaXN0cmlidXRpb25zOiBuZXdEaXN0cmlidXRpb25zRGF0YSwgLi4uaW52b2ljZURhdGEgfSA9IGJvZHk7XG4gICAgICAgIGNvbnN0IHsgaWQ6IF8sIGNyZWF0ZWRBdCwgdXBkYXRlZEF0LCBzdXBwbGllciwgbm90ZXMsIC4uLmRpcnR5RGF0YSB9ID0gaW52b2ljZURhdGE7XG4gICAgICAgIGNvbnN0IGNsZWFuZWRJbnZvaWNlRGF0YTogYW55ID0ge307XG4gICAgICAgIGlmIChkaXJ0eURhdGEuaW52b2ljZU51bWJlcikgY2xlYW5lZEludm9pY2VEYXRhLmludm9pY2VOdW1iZXIgPSBkaXJ0eURhdGEuaW52b2ljZU51bWJlcjtcbiAgICAgICAgaWYgKGRpcnR5RGF0YS5zdGF0dXMpIGNsZWFuZWRJbnZvaWNlRGF0YS5zdGF0dXMgPSBkaXJ0eURhdGEuc3RhdHVzO1xuICAgICAgICBpZiAoZGlydHlEYXRhLmRhdGUpIGNsZWFuZWRJbnZvaWNlRGF0YS5kYXRlID0gbmV3IERhdGUoZGlydHlEYXRhLmRhdGUpO1xuICAgICAgICBpZiAoZGlydHlEYXRhLmR1ZURhdGUgIT09IHVuZGVmaW5lZCkgY2xlYW5lZEludm9pY2VEYXRhLmR1ZURhdGUgPSBkaXJ0eURhdGEuZHVlRGF0ZSA/IG5ldyBEYXRlKGRpcnR5RGF0YS5kdWVEYXRlKSA6IG51bGw7XG4gICAgICAgIGlmIChkaXJ0eURhdGEudG90YWxBbW91bnQgIT09IHVuZGVmaW5lZCkgY2xlYW5lZEludm9pY2VEYXRhLnRvdGFsID0gTnVtYmVyKGRpcnR5RGF0YS50b3RhbEFtb3VudCk7XG4gICAgICAgIGVsc2UgaWYgKGRpcnR5RGF0YS50b3RhbCAhPT0gdW5kZWZpbmVkKSBjbGVhbmVkSW52b2ljZURhdGEudG90YWwgPSBOdW1iZXIoZGlydHlEYXRhLnRvdGFsKTtcbiAgICAgICAgY2xlYW5lZEludm9pY2VEYXRhLmRpc3RyaWJ1dGlvbnMgPSBuZXdEaXN0cmlidXRpb25zRGF0YSAhPT0gdW5kZWZpbmVkID8gbmV3RGlzdHJpYnV0aW9uc0RhdGEgOiBvcmlnaW5hbFB1cmNoYXNlLmRpc3RyaWJ1dGlvbnM7XG4gICAgICAgIGlmIChkaXJ0eURhdGEuc3VwcGxpZXJJZCkgY2xlYW5lZEludm9pY2VEYXRhLnN1cHBsaWVyID0geyBjb25uZWN0OiB7IGlkOiBOdW1iZXIoZGlydHlEYXRhLnN1cHBsaWVySWQpIH0gfTtcbiAgICAgICAgZWxzZSBpZiAoZGlydHlEYXRhLnN1cHBsaWVySWQgPT09IG51bGwgJiYgb3JpZ2luYWxQdXJjaGFzZS5zdXBwbGllcklkKSBjbGVhbmVkSW52b2ljZURhdGEuc3VwcGxpZXIgPSB7IGRpc2Nvbm5lY3Q6IHRydWUgfTtcblxuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBwcmlzbWEuJHRyYW5zYWN0aW9uKGFzeW5jICh0eCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgaW52ZW50b3J5VXBkYXRlczogQXJyYXk8eyBwcm9kdWN0SWQ6IG51bWJlciwgc2hvcElkOiBudW1iZXIsIG5ld1F1YW50aXR5OiBudW1iZXIsIG9sZFF1YW50aXR5PzogbnVtYmVyIH0+ID0gW107XG5cbiAgICAgICAgICAgIGlmIChvcmlnaW5hbFB1cmNoYXNlLml0ZW1zICYmIG9yaWdpbmFsUHVyY2hhc2UuaXRlbXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgb2xkSXRlbSBvZiBvcmlnaW5hbFB1cmNoYXNlLml0ZW1zKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHByb2R1Y3RUb1VwZGF0ZSA9IGF3YWl0IHR4LnByb2R1Y3QuZmluZFVuaXF1ZSh7IHdoZXJlOiB7IGlkOiBvbGRJdGVtLnByb2R1Y3RJZCB9IH0pO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXByb2R1Y3RUb1VwZGF0ZSkgY29udGludWU7XG5cbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgb2xkSXRlbURpc3RyaWJ1dGlvbiA9IG9yaWdpbmFsUHVyY2hhc2UuZGlzdHJpYnV0aW9ucyAmJiBBcnJheS5pc0FycmF5KG9yaWdpbmFsUHVyY2hhc2UuZGlzdHJpYnV0aW9ucykgJiYgb3JpZ2luYWxQdXJjaGFzZS5pdGVtcy5pbmRleE9mKG9sZEl0ZW0pIDwgb3JpZ2luYWxQdXJjaGFzZS5kaXN0cmlidXRpb25zLmxlbmd0aFxuICAgICAgICAgICAgICAgICAgICAgICAgPyBvcmlnaW5hbFB1cmNoYXNlLmRpc3RyaWJ1dGlvbnNbb3JpZ2luYWxQdXJjaGFzZS5pdGVtcy5pbmRleE9mKG9sZEl0ZW0pXVxuICAgICAgICAgICAgICAgICAgICAgICAgOiAob3JpZ2luYWxQdXJjaGFzZS5kaXN0cmlidXRpb25zICYmIHR5cGVvZiBvcmlnaW5hbFB1cmNoYXNlLmRpc3RyaWJ1dGlvbnMgPT09ICdvYmplY3QnICYmICFBcnJheS5pc0FycmF5KG9yaWdpbmFsUHVyY2hhc2UuZGlzdHJpYnV0aW9ucykgPyBvcmlnaW5hbFB1cmNoYXNlLmRpc3RyaWJ1dGlvbnMgOiBudWxsKTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAob2xkSXRlbURpc3RyaWJ1dGlvbiAmJiBPYmplY3Qua2V5cyhvbGRJdGVtRGlzdHJpYnV0aW9uKS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFtzaG9wSWRTdHIsIHF1YW50aXR5SW5TaG9wXSBvZiBPYmplY3QuZW50cmllcyhvbGRJdGVtRGlzdHJpYnV0aW9uIGFzIGFueSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzaG9wSWQgPSBzaG9wSWRTdHI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcXR5VG9SZW1vdmUgPSBOdW1iZXIocXVhbnRpdHlJblNob3ApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChxdHlUb1JlbW92ZSA8PSAwIHx8IGlzTmFOKHF0eVRvUmVtb3ZlKSkgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaW52ZW50b3J5ID0gYXdhaXQgdHguaW52ZW50b3J5SXRlbS5maW5kRmlyc3QoeyB3aGVyZTogeyBwcm9kdWN0SWQ6IG9sZEl0ZW0ucHJvZHVjdElkLCBzaG9wSWQ6IHNob3BJZCB9IH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbnZlbnRvcnkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgb2xkU2hvcFF1YW50aXR5ID0gaW52ZW50b3J5LnF1YW50aXR5O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdRdWFudGl0eSA9IE1hdGgubWF4KDAsIGludmVudG9yeS5xdWFudGl0eSAtIHF0eVRvUmVtb3ZlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgdHguaW52ZW50b3J5SXRlbS51cGRhdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hlcmU6IHsgaWQ6IGludmVudG9yeS5pZCB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHF1YW50aXR5OiBuZXdRdWFudGl0eSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBJZiBuZXcgcXVhbnRpdHkgaXMgMCwgcmVzZXQgc2hvcFNwZWNpZmljQ29zdCwgZWxzZSBrZWVwIGV4aXN0aW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvcFNwZWNpZmljQ29zdDogbmV3UXVhbnRpdHkgPT09IDAgPyAwIDogaW52ZW50b3J5LnNob3BTcGVjaWZpY0Nvc3RcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGludmVudG9yeVVwZGF0ZXMucHVzaCh7IHByb2R1Y3RJZDogb2xkSXRlbS5wcm9kdWN0SWQsIHNob3BJZDogTnVtYmVyKHNob3BJZCksIG5ld1F1YW50aXR5LCBvbGRRdWFudGl0eTogb2xkU2hvcFF1YW50aXR5IH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIG9sZEl0ZW1EaXN0cmlidXRpb24gaXMgbWlzc2luZy4gQXR0ZW1wdCB0byBpbmZlciBzaG9wIGZvciBzdG9jayByZXZlcnNhbC5cbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihgT2xkIGl0ZW0gJHtvbGRJdGVtLnByb2R1Y3RJZH0gaW4gcHVyY2hhc2UgJHtwdXJjaGFzZUlkfSBoYXMgbm8gZGlzdHJpYnV0aW9uLiBBdHRlbXB0aW5nIHRvIGluZmVyIHNob3AgZm9yIHN0b2NrIHJldmVyc2FsLmApO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZXhpc3RpbmdJbnZlbnRvcmllc0Zvck9sZEl0ZW0gPSBhd2FpdCB0eC5pbnZlbnRvcnlJdGVtLmZpbmRNYW55KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGVyZTogeyBwcm9kdWN0SWQ6IG9sZEl0ZW0ucHJvZHVjdElkIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGV4aXN0aW5nSW52ZW50b3JpZXNGb3JPbGRJdGVtLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNob3BJZFRvUmV2ZXJzZUZyb20gPSBleGlzdGluZ0ludmVudG9yaWVzRm9yT2xkSXRlbVswXS5zaG9wSWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaW52ZW50b3J5ID0gZXhpc3RpbmdJbnZlbnRvcmllc0Zvck9sZEl0ZW1bMF07IC8vIEFscmVhZHkgZmV0Y2hlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG9sZFNob3BRdWFudGl0eSA9IGludmVudG9yeS5xdWFudGl0eTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdRdWFudGl0eSA9IE1hdGgubWF4KDAsIGludmVudG9yeS5xdWFudGl0eSAtIG9sZEl0ZW0ucXVhbnRpdHkpOyAvLyBVc2UgdG90YWwgb2xkSXRlbS5xdWFudGl0eVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IHR4LmludmVudG9yeUl0ZW0udXBkYXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hlcmU6IHsgaWQ6IGludmVudG9yeS5pZCB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBxdWFudGl0eTogbmV3UXVhbnRpdHksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBJZiBuZXcgcXVhbnRpdHkgaXMgMCwgcmVzZXQgc2hvcFNwZWNpZmljQ29zdCwgZWxzZSBrZWVwIGV4aXN0aW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG9wU3BlY2lmaWNDb3N0OiBuZXdRdWFudGl0eSA9PT0gMCA/IDAgOiBpbnZlbnRvcnkuc2hvcFNwZWNpZmljQ29zdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW52ZW50b3J5VXBkYXRlcy5wdXNoKHsgcHJvZHVjdElkOiBvbGRJdGVtLnByb2R1Y3RJZCwgc2hvcElkOiBOdW1iZXIoc2hvcElkVG9SZXZlcnNlRnJvbSksIG5ld1F1YW50aXR5LCBvbGRRdWFudGl0eTogb2xkU2hvcFF1YW50aXR5IH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGBSZXZlcnNlZCAke29sZEl0ZW0ucXVhbnRpdHl9IGZyb20gcHJvZHVjdCAke29sZEl0ZW0ucHJvZHVjdElkfSBpbiBpbmZlcnJlZCBzaG9wICR7c2hvcElkVG9SZXZlcnNlRnJvbX0uYCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGV4aXN0aW5nSW52ZW50b3JpZXNGb3JPbGRJdGVtLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYE9sZCBpdGVtICR7b2xkSXRlbS5wcm9kdWN0SWR9IG5vdCBmb3VuZCBpbiBhbnkgaW52ZW50b3J5LiBDYW5ub3QgcmV2ZXJzZSBzdG9jayBmb3IgdGhpcyBpdGVtIGxpbmUgZnJvbSBhIHNwZWNpZmljIHNob3AuYCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgeyAvLyBNdWx0aXBsZSBzaG9wc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYE9sZCBpdGVtICR7b2xkSXRlbS5wcm9kdWN0SWR9IGV4aXN0cyBpbiBtdWx0aXBsZSBzaG9wcyBhbmQgbm8gc3BlY2lmaWMgZGlzdHJpYnV0aW9uIGZvciByZXZlcnNhbC4gQW1iaWd1b3VzLiBTdG9jayBub3QgcmV2ZXJzZWQgZnJvbSBhIHNwZWNpZmljIHNob3AgZm9yIHRoaXMgaXRlbSBsaW5lLmApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgbGV0IGN1cnJlbnRUb3RhbFByb2R1Y3RRdWFudGl0eSA9IDA7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGFsbEludmVudG9yeUZvclByb2R1Y3RBZnRlclJldmVyc2FsID0gYXdhaXQgdHguaW52ZW50b3J5SXRlbS5maW5kTWFueSh7IHdoZXJlOiB7IHByb2R1Y3RJZDogb2xkSXRlbS5wcm9kdWN0SWQgfSB9KTtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudFRvdGFsUHJvZHVjdFF1YW50aXR5ID0gYWxsSW52ZW50b3J5Rm9yUHJvZHVjdEFmdGVyUmV2ZXJzYWwucmVkdWNlKChzdW0sIGludikgPT4gc3VtICsgaW52LnF1YW50aXR5LCAwKTtcblxuICAgICAgICAgICAgICAgICAgICAvLyBSZWNhbGN1bGF0ZSBXQUMgYmFzZWQgb24gcmVtYWluaW5nIHB1cmNoYXNlIGhpc3RvcnkgYWZ0ZXIgcmVtb3ZpbmcgdGhpcyBpdGVtXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlbWFpbmluZ1B1cmNoYXNlSXRlbXMgPSBhd2FpdCB0eC5wdXJjaGFzZUludm9pY2VJdGVtLmZpbmRNYW55KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvZHVjdElkOiBvbGRJdGVtLnByb2R1Y3RJZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwdXJjaGFzZUludm9pY2VJZDogeyBub3Q6IHB1cmNoYXNlSWQgfSAvLyBFeGNsdWRlIGN1cnJlbnQgaW52b2ljZSBiZWluZyB1cGRhdGVkXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIGxldCB0b3RhbFJlbWFpbmluZ1F1YW50aXR5ID0gMDtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHRvdGFsUmVtYWluaW5nVmFsdWUgPSAwO1xuXG4gICAgICAgICAgICAgICAgICAgIHJlbWFpbmluZ1B1cmNoYXNlSXRlbXMuZm9yRWFjaChwdXJjaGFzZUl0ZW0gPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdG90YWxSZW1haW5pbmdRdWFudGl0eSArPSBwdXJjaGFzZUl0ZW0ucXVhbnRpdHk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0b3RhbFJlbWFpbmluZ1ZhbHVlICs9IHB1cmNoYXNlSXRlbS5xdWFudGl0eSAqIHB1cmNoYXNlSXRlbS5wcmljZTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgbGV0IG5ld1dBQyA9IDA7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0b3RhbFJlbWFpbmluZ1F1YW50aXR5ID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3V0FDID0gdG90YWxSZW1haW5pbmdWYWx1ZSAvIHRvdGFsUmVtYWluaW5nUXVhbnRpdHk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBhd2FpdCB0eC5wcm9kdWN0LnVwZGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGVyZTogeyBpZDogb2xkSXRlbS5wcm9kdWN0SWQgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHsgd2VpZ2h0ZWRBdmVyYWdlQ29zdDogbmV3V0FDID49IDAgPyBuZXdXQUMgOiAwIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBhd2FpdCB0eC5wdXJjaGFzZUludm9pY2VJdGVtLmRlbGV0ZU1hbnkoeyB3aGVyZTogeyBwdXJjaGFzZUludm9pY2VJZDogcHVyY2hhc2VJZCB9IH0pO1xuXG4gICAgICAgICAgICAvLyBSZWNhbGN1bGF0ZSB0b3RhbEFtb3VudCBmb3IgdGhlIGludm9pY2UgYmFzZWQgb24gbmV3L3VwZGF0ZWQgaXRlbXNcbiAgICAgICAgICAgIGxldCBuZXdUb3RhbEludm9pY2VBbW91bnQgPSAwO1xuICAgICAgICAgICAgaWYgKG5ld0l0ZW1zRGF0YSAmJiBBcnJheS5pc0FycmF5KG5ld0l0ZW1zRGF0YSkpIHtcbiAgICAgICAgICAgICAgICBuZXdJdGVtc0RhdGEuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgICAgICAgICAgICAgbmV3VG90YWxJbnZvaWNlQW1vdW50ICs9IE51bWJlcihpdGVtLnF1YW50aXR5KSAqIE51bWJlcihpdGVtLnByaWNlIHx8IDApO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2xlYW5lZEludm9pY2VEYXRhLnRvdGFsID0gbmV3VG90YWxJbnZvaWNlQW1vdW50OyAvLyBFbnN1cmUgdGhpcyBpcyBhc3NpZ25lZCB0byB0aGUgY29ycmVjdCBmaWVsZCBmb3IgREIgdXBkYXRlXG5cbiAgICAgICAgICAgIGNvbnN0IHVwZGF0ZWRJbnZvaWNlID0gYXdhaXQgdHgucHVyY2hhc2VJbnZvaWNlLnVwZGF0ZSh7IHdoZXJlOiB7IGlkOiBwdXJjaGFzZUlkIH0sIGRhdGE6IGNsZWFuZWRJbnZvaWNlRGF0YSB9KTtcblxuICAgICAgICAgICAgaWYgKG5ld0l0ZW1zRGF0YSAmJiBBcnJheS5pc0FycmF5KG5ld0l0ZW1zRGF0YSkpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG5ld0l0ZW1zRGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdJdGVtID0gbmV3SXRlbXNEYXRhW2ldO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIW5ld0l0ZW0ucHJvZHVjdElkIHx8ICFuZXdJdGVtLnF1YW50aXR5IHx8IG5ld0l0ZW0ucXVhbnRpdHkgPD0gMCkgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IHR4LnB1cmNoYXNlSW52b2ljZUl0ZW0uY3JlYXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwdXJjaGFzZUludm9pY2VJZDogcHVyY2hhc2VJZCwgcHJvZHVjdElkOiBOdW1iZXIobmV3SXRlbS5wcm9kdWN0SWQpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHF1YW50aXR5OiBOdW1iZXIobmV3SXRlbS5xdWFudGl0eSksIHByaWNlOiBOdW1iZXIobmV3SXRlbS5wcmljZSB8fCAwKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3RhbDogTnVtYmVyKG5ld0l0ZW0ucXVhbnRpdHkpICogTnVtYmVyKG5ld0l0ZW0ucHJpY2UgfHwgMClcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHByb2R1Y3RUb1VwZGF0ZSA9IGF3YWl0IHR4LnByb2R1Y3QuZmluZFVuaXF1ZSh7IHdoZXJlOiB7IGlkOiBOdW1iZXIobmV3SXRlbS5wcm9kdWN0SWQpIH0gfSk7XG4gICAgICAgICAgICAgICAgICAgIGlmICghcHJvZHVjdFRvVXBkYXRlKSBjb250aW51ZTtcblxuICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdJdGVtRGlzdHJpYnV0aW9uID0gbmV3RGlzdHJpYnV0aW9uc0RhdGEgJiYgQXJyYXkuaXNBcnJheShuZXdEaXN0cmlidXRpb25zRGF0YSkgJiYgbmV3RGlzdHJpYnV0aW9uc0RhdGFbaV1cbiAgICAgICAgICAgICAgICAgICAgICAgID8gbmV3RGlzdHJpYnV0aW9uc0RhdGFbaV1cbiAgICAgICAgICAgICAgICAgICAgICAgIDogKG5ld0Rpc3RyaWJ1dGlvbnNEYXRhICYmIHR5cGVvZiBuZXdEaXN0cmlidXRpb25zRGF0YSA9PT0gJ29iamVjdCcgJiYgIUFycmF5LmlzQXJyYXkobmV3RGlzdHJpYnV0aW9uc0RhdGEpID8gbmV3RGlzdHJpYnV0aW9uc0RhdGEgOiBudWxsKTtcblxuICAgICAgICAgICAgICAgICAgICBjb25zdCBpdGVtUXVhbnRpdHlUb3RhbCA9IE51bWJlcihuZXdJdGVtLnF1YW50aXR5KTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAobmV3SXRlbURpc3RyaWJ1dGlvbiAmJiBPYmplY3Qua2V5cyhuZXdJdGVtRGlzdHJpYnV0aW9uKS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFtzaG9wSWRTdHIsIHF1YW50aXR5SW5TaG9wXSBvZiBPYmplY3QuZW50cmllcyhuZXdJdGVtRGlzdHJpYnV0aW9uIGFzIGFueSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzaG9wSWQgPSBzaG9wSWRTdHI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcXR5VG9BZGQgPSBOdW1iZXIocXVhbnRpdHlJblNob3ApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChxdHlUb0FkZCA8PSAwIHx8IGlzTmFOKHF0eVRvQWRkKSkgY29udGludWU7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpbnZlbnRvcnkgPSBhd2FpdCB0eC5pbnZlbnRvcnlJdGVtLmZpbmRGaXJzdCh7IHdoZXJlOiB7IHByb2R1Y3RJZDogTnVtYmVyKG5ld0l0ZW0ucHJvZHVjdElkKSwgc2hvcElkOiBzaG9wSWQgfSB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgZmluYWxRdWFudGl0eSA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgb2xkSW52UXR5ID0gaW52ZW50b3J5Py5xdWFudGl0eSB8fCAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBuZXdTaG9wU3BlY2lmaWNDb3N0VmFsdWUgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW1QcmljZSA9IE51bWJlcihuZXdJdGVtLnByaWNlIHx8IDApO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGludmVudG9yeSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaW5hbFF1YW50aXR5ID0gaW52ZW50b3J5LnF1YW50aXR5ICsgcXR5VG9BZGQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG9sZFNob3BUb3RhbFZhbHVlID0gKGludmVudG9yeS5xdWFudGl0eSB8fCAwKSAqIChpbnZlbnRvcnkuc2hvcFNwZWNpZmljQ29zdCB8fCAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdmFsdWVPZlRoaXNCYXRjaCA9IHF0eVRvQWRkICogaXRlbVByaWNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZmluYWxRdWFudGl0eSA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld1Nob3BTcGVjaWZpY0Nvc3RWYWx1ZSA9IChvbGRTaG9wVG90YWxWYWx1ZSArIHZhbHVlT2ZUaGlzQmF0Y2gpIC8gZmluYWxRdWFudGl0eTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld1Nob3BTcGVjaWZpY0Nvc3RWYWx1ZSA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgdHguaW52ZW50b3J5SXRlbS51cGRhdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hlcmU6IHsgaWQ6IGludmVudG9yeS5pZCB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogeyBxdWFudGl0eTogZmluYWxRdWFudGl0eSwgc2hvcFNwZWNpZmljQ29zdDogbmV3U2hvcFNwZWNpZmljQ29zdFZhbHVlID49IDAgPyBuZXdTaG9wU3BlY2lmaWNDb3N0VmFsdWUgOiAwIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmluYWxRdWFudGl0eSA9IHF0eVRvQWRkO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdTaG9wU3BlY2lmaWNDb3N0VmFsdWUgPSBpdGVtUHJpY2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IHR4LmludmVudG9yeUl0ZW0uY3JlYXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9kdWN0SWQ6IE51bWJlcihuZXdJdGVtLnByb2R1Y3RJZCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvcElkOiBzaG9wSWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcXVhbnRpdHk6IGZpbmFsUXVhbnRpdHksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvcFNwZWNpZmljQ29zdDogbmV3U2hvcFNwZWNpZmljQ29zdFZhbHVlID49IDAgPyBuZXdTaG9wU3BlY2lmaWNDb3N0VmFsdWUgOiAwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnZlbnRvcnlVcGRhdGVzLnB1c2goeyBwcm9kdWN0SWQ6IE51bWJlcihuZXdJdGVtLnByb2R1Y3RJZCksIHNob3BJZDogTnVtYmVyKHNob3BJZCksIG5ld1F1YW50aXR5OiBmaW5hbFF1YW50aXR5LCBvbGRRdWFudGl0eTogb2xkSW52UXR5IH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gbmV3SXRlbURpc3RyaWJ1dGlvbiBpcyBtaXNzaW5nIG9yIGVtcHR5LiBUcnkgdG8gaW5mZXIgc2hvcCBvciBsb2cgZXJyb3IuXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oYFB1cmNoYXNlIGl0ZW0gd2l0aCBwcm9kdWN0SWQgJHtuZXdJdGVtLnByb2R1Y3RJZH0gaW4gaW52b2ljZSAke3B1cmNoYXNlSWR9IGRvZXMgbm90IGhhdmUgZXhwbGljaXQgc2hvcCBkaXN0cmlidXRpb24gZGF0YS4gQXR0ZW1wdGluZyB0byBpbmZlciB0YXJnZXQgc2hvcC5gKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nSW52ZW50b3J5SXRlbXMgPSBhd2FpdCB0eC5pbnZlbnRvcnlJdGVtLmZpbmRNYW55KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGVyZTogeyBwcm9kdWN0SWQ6IE51bWJlcihuZXdJdGVtLnByb2R1Y3RJZCkgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCB0YXJnZXRTaG9wSWQ6IHN0cmluZyB8IG51bGwgPSBudWxsO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZXhpc3RpbmdJbnZlbnRvcnlJdGVtcy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXRTaG9wSWQgPSBleGlzdGluZ0ludmVudG9yeUl0ZW1zWzBdLnNob3BJZDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgUHJvZHVjdCAke25ld0l0ZW0ucHJvZHVjdElkfSBleGlzdHMgaW4gb25lIHNob3AgKCR7dGFyZ2V0U2hvcElkfSkuIEF0dHJpYnV0aW5nIG5ldyBzdG9jayB0aGVyZS5gKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZXhpc3RpbmdJbnZlbnRvcnlJdGVtcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGBQcm9kdWN0ICR7bmV3SXRlbS5wcm9kdWN0SWR9IGlzIG5ldyB0byBpbnZlbnRvcnkgYW5kIG5vIHNob3AgZGlzdHJpYnV0aW9uIHByb3ZpZGVkLiBDYW5ub3QgYXV0b21hdGljYWxseSBhc3NpZ24gdG8gYSBzaG9wLiBJbnZlbnRvcnkgbm90IHVwZGF0ZWQgZm9yIHRoaXMgaXRlbS5gKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7IC8vIGV4aXN0aW5nSW52ZW50b3J5SXRlbXMubGVuZ3RoID4gMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYFByb2R1Y3QgJHtuZXdJdGVtLnByb2R1Y3RJZH0gZXhpc3RzIGluIG11bHRpcGxlIHNob3BzIGFuZCBubyBzcGVjaWZpYyBkaXN0cmlidXRpb24gcHJvdmlkZWQuIEFtYmlndW91cy4gSW52ZW50b3J5IG5vdCB1cGRhdGVkIGZvciB0aGlzIGl0ZW0uYCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0YXJnZXRTaG9wSWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBxdHlUb0FkZCA9IGl0ZW1RdWFudGl0eVRvdGFsOyAvLyBUaGUgdG90YWwgcXVhbnRpdHkgZm9yIHRoaXMgbmV3SXRlbS5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocXR5VG9BZGQgPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGludmVudG9yeSA9IGF3YWl0IHR4LmludmVudG9yeUl0ZW0uZmluZEZpcnN0KHsgd2hlcmU6IHsgcHJvZHVjdElkOiBOdW1iZXIobmV3SXRlbS5wcm9kdWN0SWQpLCBzaG9wSWQ6IHRhcmdldFNob3BJZCB9IH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgZmluYWxRdWFudGl0eSA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG9sZEludlF0eSA9IGludmVudG9yeT8ucXVhbnRpdHkgfHwgMDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG5ld1Nob3BTcGVjaWZpY0Nvc3RWYWx1ZSA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW1QcmljZSA9IE51bWJlcihuZXdJdGVtLnByaWNlIHx8IDApO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbnZlbnRvcnkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbmFsUXVhbnRpdHkgPSBpbnZlbnRvcnkucXVhbnRpdHkgKyBxdHlUb0FkZDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG9sZFNob3BUb3RhbFZhbHVlID0gKGludmVudG9yeS5xdWFudGl0eSB8fCAwKSAqIChpbnZlbnRvcnkuc2hvcFNwZWNpZmljQ29zdCB8fCAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlT2ZUaGlzQmF0Y2ggPSBxdHlUb0FkZCAqIGl0ZW1QcmljZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmaW5hbFF1YW50aXR5ID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld1Nob3BTcGVjaWZpY0Nvc3RWYWx1ZSA9IChvbGRTaG9wVG90YWxWYWx1ZSArIHZhbHVlT2ZUaGlzQmF0Y2gpIC8gZmluYWxRdWFudGl0eTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3U2hvcFNwZWNpZmljQ29zdFZhbHVlID0gMDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IHR4LmludmVudG9yeUl0ZW0udXBkYXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGVyZTogeyBpZDogaW52ZW50b3J5LmlkIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogeyBxdWFudGl0eTogZmluYWxRdWFudGl0eSwgc2hvcFNwZWNpZmljQ29zdDogbmV3U2hvcFNwZWNpZmljQ29zdFZhbHVlID49IDAgPyBuZXdTaG9wU3BlY2lmaWNDb3N0VmFsdWUgOiAwIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmluYWxRdWFudGl0eSA9IHF0eVRvQWRkO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3U2hvcFNwZWNpZmljQ29zdFZhbHVlID0gaXRlbVByaWNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGBJbnZlbnRvcnlJdGVtIGZvciBwcm9kdWN0ICR7bmV3SXRlbS5wcm9kdWN0SWR9IGluIHRhcmdldFNob3BJZCAke3RhcmdldFNob3BJZH0gbm90IGZvdW5kIGR1cmluZyB1cGRhdGUsIGF0dGVtcHRpbmcgY3JlYXRlLmApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgdHguaW52ZW50b3J5SXRlbS5jcmVhdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvZHVjdElkOiBOdW1iZXIobmV3SXRlbS5wcm9kdWN0SWQpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG9wSWQ6IHRhcmdldFNob3BJZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcXVhbnRpdHk6IGZpbmFsUXVhbnRpdHksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3BTcGVjaWZpY0Nvc3Q6IG5ld1Nob3BTcGVjaWZpY0Nvc3RWYWx1ZSA+PSAwID8gbmV3U2hvcFNwZWNpZmljQ29zdFZhbHVlIDogMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGludmVudG9yeVVwZGF0ZXMucHVzaCh7IHByb2R1Y3RJZDogTnVtYmVyKG5ld0l0ZW0ucHJvZHVjdElkKSwgc2hvcElkOiBOdW1iZXIodGFyZ2V0U2hvcElkKSwgbmV3UXVhbnRpdHk6IGZpbmFsUXVhbnRpdHksIG9sZFF1YW50aXR5OiBvbGRJbnZRdHkgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGBRdWFudGl0eSBmb3IgcHJvZHVjdCAke25ld0l0ZW0ucHJvZHVjdElkfSBpcyB6ZXJvIG9yIG5lZ2F0aXZlLiBObyBpbnZlbnRvcnkgdXBkYXRlIHBlcmZvcm1lZCBmb3IgdGhpcyBpdGVtLmApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIC8vIFJlY2FsY3VsYXRlIFdBQyBiYXNlZCBvbiBhbGwgcHVyY2hhc2UgaGlzdG9yeSBmb3IgdGhpcyBwcm9kdWN0XG4gICAgICAgICAgICAgICAgICAgIC8vIFRoaXMgZW5zdXJlcyBhY2N1cmFjeSByZWdhcmRsZXNzIG9mIHVwZGF0ZSBvcmRlclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBhbGxQdXJjaGFzZUl0ZW1zID0gYXdhaXQgdHgucHVyY2hhc2VJbnZvaWNlSXRlbS5maW5kTWFueSh7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGVyZTogeyBwcm9kdWN0SWQ6IE51bWJlcihuZXdJdGVtLnByb2R1Y3RJZCkgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICBsZXQgdG90YWxQdXJjaGFzZVF1YW50aXR5ID0gMDtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHRvdGFsUHVyY2hhc2VWYWx1ZSA9IDA7XG5cbiAgICAgICAgICAgICAgICAgICAgYWxsUHVyY2hhc2VJdGVtcy5mb3JFYWNoKHB1cmNoYXNlSXRlbSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0b3RhbFB1cmNoYXNlUXVhbnRpdHkgKz0gcHVyY2hhc2VJdGVtLnF1YW50aXR5O1xuICAgICAgICAgICAgICAgICAgICAgICAgdG90YWxQdXJjaGFzZVZhbHVlICs9IHB1cmNoYXNlSXRlbS5xdWFudGl0eSAqIHB1cmNoYXNlSXRlbS5wcmljZTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgbGV0IG5ld1dlaWdodGVkQXZlcmFnZUNvc3QgPSAwO1xuICAgICAgICAgICAgICAgICAgICBpZiAodG90YWxQdXJjaGFzZVF1YW50aXR5ID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3V2VpZ2h0ZWRBdmVyYWdlQ29zdCA9IHRvdGFsUHVyY2hhc2VWYWx1ZSAvIHRvdGFsUHVyY2hhc2VRdWFudGl0eTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIC8vIEVuc3VyZSBXQUMgaXMgdmFsaWRcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5ld1dlaWdodGVkQXZlcmFnZUNvc3QgPD0gMCB8fCBpc05hTihuZXdXZWlnaHRlZEF2ZXJhZ2VDb3N0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3V2VpZ2h0ZWRBdmVyYWdlQ29zdCA9IE51bWJlcihuZXdJdGVtLnByaWNlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IHR4LnByb2R1Y3QudXBkYXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoZXJlOiB7IGlkOiBOdW1iZXIobmV3SXRlbS5wcm9kdWN0SWQpIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB7IHdlaWdodGVkQXZlcmFnZUNvc3Q6IG5ld1dlaWdodGVkQXZlcmFnZUNvc3QgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBmdWxsVXBkYXRlZEludm9pY2UgPSBhd2FpdCB0eC5wdXJjaGFzZUludm9pY2UuZmluZFVuaXF1ZSh7XG4gICAgICAgICAgICAgICAgd2hlcmU6IHsgaWQ6IHB1cmNoYXNlSWQgfSxcbiAgICAgICAgICAgICAgICBpbmNsdWRlOiB7IHN1cHBsaWVyOiB0cnVlLCBpdGVtczogeyBpbmNsdWRlOiB7IHByb2R1Y3Q6IHRydWUgfSB9IH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHsgZnVsbFVwZGF0ZWRJbnZvaWNlLCBpbnZlbnRvcnlVcGRhdGVzIH07XG4gICAgICAgIH0sIHsgdGltZW91dDogMzAwMDAgfSk7XG5cbiAgICAgICAgLy8gUmVhbC10aW1lIHVwZGF0ZXMgbm93IGhhbmRsZWQgYnkgcG9sbGluZyBzeXN0ZW1cbiAgICAgICAgaWYgKHJlc3VsdCAmJiByZXN1bHQuZnVsbFVwZGF0ZWRJbnZvaWNlKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnUHVyY2hhc2UgaW52b2ljZSB1cGRhdGVkIHN1Y2Nlc3NmdWxseScpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQWZ0ZXIgc3VjY2Vzc2Z1bCB0cmFuc2FjdGlvbiwgaW52YWxpZGF0ZSByZWxldmFudCBjYWNoZXNcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGF3YWl0IGNhY2hlU2VydmljZS5pbnZhbGlkYXRlSW52ZW50b3J5KCk7IC8vIEhhbmRsZXMgJ2ludmVudG9yeTpzdW1tYXJ5OionIGFuZCAncHJvZHVjdHM6KidcbiAgICAgICAgICAgIGF3YWl0IGNhY2hlU2VydmljZS5kZWwoJ2Rhc2hib2FyZDppbnZlbnRvcnknKTtcbiAgICAgICAgICAgIGF3YWl0IGNhY2hlU2VydmljZS5kZWwoJ2Rhc2hib2FyZDppbnZlbnRvcnktdmFsdWUnKTtcbiAgICAgICAgICAgIGF3YWl0IGNhY2hlU2VydmljZS5kZWwoJ2Rhc2hib2FyZDpzaG9wcycpO1xuICAgICAgICAgICAgYXdhaXQgY2FjaGVTZXJ2aWNlLmRlbCgnZGFzaGJvYXJkOmFsbCcpO1xuICAgICAgICAgICAgYXdhaXQgY2FjaGVTZXJ2aWNlLmRlbCgnZGFzaGJvYXJkOnN1bW1hcnknKTtcbiAgICAgICAgICAgIC8vIEludmFsaWRhdGUgcHVyY2hhc2VzLXNwZWNpZmljIGNhY2hlc1xuICAgICAgICAgICAgYXdhaXQgY2FjaGVTZXJ2aWNlLmludmFsaWRhdGVQYXR0ZXJuKCdwdXJjaGFzZXMtb3B0aW1pemVkKicpO1xuICAgICAgICAgICAgYXdhaXQgY2FjaGVTZXJ2aWNlLmludmFsaWRhdGVQYXR0ZXJuKCdwdXJjaGFzZS1zdGF0cyonKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdSZWxldmFudCBjYWNoZXMgaW52YWxpZGF0ZWQgYWZ0ZXIgcHVyY2hhc2UgdXBkYXRlLicpO1xuICAgICAgICB9IGNhdGNoIChjYWNoZUVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbnZhbGlkYXRpbmcgY2FjaGVzIGFmdGVyIHB1cmNoYXNlIHVwZGF0ZTonLCBjYWNoZUVycm9yKTtcbiAgICAgICAgICAgIC8vIERvIG5vdCBsZXQgY2FjaGUgaW52YWxpZGF0aW9uIGVycm9yIGZhaWwgdGhlIG1haW4gb3BlcmF0aW9uXG4gICAgICAgIH1cblxuICAgICAgICAvLyBSZXZhbGlkYXRlIE5leHQuanMgY2FjaGVkIHBhZ2VzIGltbWVkaWF0ZWx5XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXZhbGlkYXRlVGFnKCdwdXJjaGFzZS1pbnZvaWNlcycpO1xuICAgICAgICAgICAgcmV2YWxpZGF0ZVRhZyhgcHVyY2hhc2UtJHtwdXJjaGFzZUlkfWApO1xuICAgICAgICAgICAgcmV2YWxpZGF0ZVBhdGgoYC9wdXJjaGFzZXMvJHtwdXJjaGFzZUlkfWApO1xuICAgICAgICAgICAgcmV2YWxpZGF0ZVBhdGgoYC9wdXJjaGFzZXMvJHtwdXJjaGFzZUlkfS9lZGl0YCk7XG4gICAgICAgICAgICByZXZhbGlkYXRlUGF0aCgnL3B1cmNoYXNlcycpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBBbHNvIHJldmFsaWRhdGUgdGhlIG1haW4gcHVyY2hhc2VzIHBhZ2UgdG8gZW5zdXJlIGxpc3QgdXBkYXRlc1xuICAgICAgICAgICAgcmV2YWxpZGF0ZVBhdGgoJy9wdXJjaGFzZXMnLCAncGFnZScpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnTmV4dC5qcyBwYWdlcyByZXZhbGlkYXRlZCBhZnRlciBwdXJjaGFzZSB1cGRhdGUuJyk7XG4gICAgICAgIH0gY2F0Y2ggKHJldmFsaWRhdGVFcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgcmV2YWxpZGF0aW5nIE5leHQuanMgcGFnZXMgYWZ0ZXIgcHVyY2hhc2UgdXBkYXRlOicsIHJldmFsaWRhdGVFcnJvcik7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgICAgICAgbWVzc2FnZTogJ1B1cmNoYXNlIGludm9pY2UgdXBkYXRlZCBzdWNjZXNzZnVsbHknLFxuICAgICAgICAgICAgZGF0YTogcmVzdWx0LmZ1bGxVcGRhdGVkSW52b2ljZVxuICAgICAgICB9KTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKGBFcnJvciB1cGRhdGluZyBwdXJjaGFzZSBpbnZvaWNlICR7aWR9OmAsIGVycm9yKTtcbiAgICAgICAgY29uc3QgZGV0YWlscyA9IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogU3RyaW5nKGVycm9yKTtcbiAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICAgICAgeyBlcnJvcjogeyBtZXNzYWdlOiAnRmFpbGVkIHRvIHVwZGF0ZSBwdXJjaGFzZSBpbnZvaWNlJywgZGV0YWlsczogZGV0YWlscyB9IH0sXG4gICAgICAgICAgICB7IHN0YXR1czogNTAwIH0pO1xuICAgIH1cbn1cblxuLy8gREVMRVRFIC9hcGkvcHVyY2hhc2VzL1tpZF0gLSBEZWxldGUgYSBwdXJjaGFzZSBpbnZvaWNlXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gREVMRVRFKFxuICAgIHJlcXVlc3Q6IE5leHRSZXF1ZXN0LFxuICAgIHsgcGFyYW1zIH06IHsgcGFyYW1zOiB7IGlkOiBzdHJpbmcgfSB9XG4pIHtcbiAgICBjb25zdCBwdXJjaGFzZUlkU3RyID0gcGFyYW1zLmlkO1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHB1cmNoYXNlSWQgPSBwYXJzZUludChwdXJjaGFzZUlkU3RyKTtcbiAgICAgICAgaWYgKGlzTmFOKHB1cmNoYXNlSWQpKSB7XG4gICAgICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgICAgICAgICAgeyBlcnJvcjogeyBtZXNzYWdlOiAnSW52YWxpZCBwdXJjaGFzZSBJRCBmb3JtYXQnIH0gfSxcbiAgICAgICAgICAgICAgICB7IHN0YXR1czogNDAwIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgcHVyY2hhc2VUb0RlbGV0ZSA9IGF3YWl0IHByaXNtYS5wdXJjaGFzZUludm9pY2UuZmluZFVuaXF1ZSh7XG4gICAgICAgICAgICB3aGVyZTogeyBpZDogcHVyY2hhc2VJZCB9LFxuICAgICAgICAgICAgaW5jbHVkZToge1xuICAgICAgICAgICAgICAgIGl0ZW1zOiB7IGluY2x1ZGU6IHsgcHJvZHVjdDogdHJ1ZSB9IH0sXG4gICAgICAgICAgICAgICAgLy8gRW5zdXJlICdkaXN0cmlidXRpb25zJyBpcyBpbmNsdWRlZCBpZiBpdCdzIGEgcmVsYXRpb24sXG4gICAgICAgICAgICAgICAgLy8gb3IgZGlyZWN0bHkgYWNjZXNzaWJsZSBpZiBpdCdzIGEgSlNPTiBmaWVsZCBvbiBQdXJjaGFzZUludm9pY2VcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmICghcHVyY2hhc2VUb0RlbGV0ZSkge1xuICAgICAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICAgICAgICAgIHsgZXJyb3I6IHsgbWVzc2FnZTogJ1B1cmNoYXNlIGludm9pY2Ugbm90IGZvdW5kIHRvIGRlbGV0ZScgfSB9LFxuICAgICAgICAgICAgICAgIHsgc3RhdHVzOiA0MDQgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBwcmlzbWEuJHRyYW5zYWN0aW9uKGFzeW5jICh0eCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgaW52ZW50b3J5VXBkYXRlczogQXJyYXk8eyBwcm9kdWN0SWQ6IG51bWJlciwgc2hvcElkOiBudW1iZXIsIG5ld1F1YW50aXR5OiBudW1iZXIsIG9sZFF1YW50aXR5PzogbnVtYmVyIH0+ID0gW107XG5cbiAgICAgICAgICAgIGlmIChwdXJjaGFzZVRvRGVsZXRlLml0ZW1zICYmIHB1cmNoYXNlVG9EZWxldGUuaXRlbXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiBwdXJjaGFzZVRvRGVsZXRlLml0ZW1zKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghaXRlbS5wcm9kdWN0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oYEl0ZW0gJHtpdGVtLmlkfSBmb3IgcHVyY2hhc2UgJHtwdXJjaGFzZUlkfSBpcyBtaXNzaW5nIHByb2R1Y3QgZGF0YS4gU2tpcHBpbmcgc3RvY2sgYWRqdXN0bWVudC5gKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcHJvZHVjdElkID0gaXRlbS5wcm9kdWN0SWQ7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHF1YW50aXR5VG9SZW1vdmVGb3JJdGVtVG90YWwgPSBpdGVtLnF1YW50aXR5OyAvLyBUb3RhbCBxdWFudGl0eSBmb3IgdGhpcyBpdGVtIGxpbmVcblxuICAgICAgICAgICAgICAgICAgICBsZXQgaXRlbURpc3RyaWJ1dGlvbkluZm86IHsgW3Nob3BJZDogc3RyaW5nXTogbnVtYmVyIH0gfCBudWxsID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZGlzdHJpYnV0aW9uc09uSW52b2ljZSA9IChwdXJjaGFzZVRvRGVsZXRlIGFzIGFueSkuZGlzdHJpYnV0aW9ucztcblxuICAgICAgICAgICAgICAgICAgICAvLyBBdHRlbXB0IHRvIGdldCBzcGVjaWZpYyBkaXN0cmlidXRpb24gZm9yIHRoaXMgaXRlbVxuICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXN0cmlidXRpb25zT25JbnZvaWNlICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBBcnJheS5pc0FycmF5KGRpc3RyaWJ1dGlvbnNPbkludm9pY2UpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBwdXJjaGFzZVRvRGVsZXRlLml0ZW1zLmluZGV4T2YoaXRlbSkgPCBkaXN0cmlidXRpb25zT25JbnZvaWNlLmxlbmd0aFxuICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRpc3REYXRhID0gZGlzdHJpYnV0aW9uc09uSW52b2ljZVtwdXJjaGFzZVRvRGVsZXRlLml0ZW1zLmluZGV4T2YoaXRlbSldO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRpc3REYXRhICYmIHR5cGVvZiBkaXN0RGF0YSA9PT0gJ29iamVjdCcgJiYgT2JqZWN0LmtleXMoZGlzdERhdGEpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtRGlzdHJpYnV0aW9uSW5mbyA9IGRpc3REYXRhIGFzIHsgW3Nob3BJZDogc3RyaW5nXTogbnVtYmVyIH07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBpZiAoaXRlbURpc3RyaWJ1dGlvbkluZm8pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIENhc2UgMTogRXhwbGljaXQgZGlzdHJpYnV0aW9uIGRhdGEgZm91bmQgZm9yIHRoZSBpdGVtXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgUmV2ZXJzaW5nIGl0ZW0tc3BlY2lmaWMgZGlzdHJpYnV0aW9uIGZvciBwcm9kdWN0ICR7cHJvZHVjdElkfSwgcHVyY2hhc2UgJHtwdXJjaGFzZUlkfWApO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBbc2hvcElkU3RyLCBkaXN0cmlidXRlZFF1YW50aXR5U3RyXSBvZiBPYmplY3QuZW50cmllcyhpdGVtRGlzdHJpYnV0aW9uSW5mbykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzaG9wSWQgPSBzaG9wSWRTdHI7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcXR5SW5TaG9wVG9SZW1vdmUgPSBOdW1iZXIoZGlzdHJpYnV0ZWRRdWFudGl0eVN0cik7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNOYU4ocXR5SW5TaG9wVG9SZW1vdmUpIHx8IHF0eUluU2hvcFRvUmVtb3ZlIDw9IDApIGNvbnRpbnVlO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaW52ZW50b3J5SXRlbSA9IGF3YWl0IHR4LmludmVudG9yeUl0ZW0uZmluZEZpcnN0KHsgd2hlcmU6IHsgcHJvZHVjdElkLCBzaG9wSWQ6IHNob3BJZCB9IH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbnZlbnRvcnlJdGVtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG9sZFNob3BRdWFudGl0eSA9IGludmVudG9yeUl0ZW0ucXVhbnRpdHk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld1Nob3BRdWFudGl0eSA9IE1hdGgubWF4KDAsIGludmVudG9yeUl0ZW0ucXVhbnRpdHkgLSBxdHlJblNob3BUb1JlbW92ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHVwZGF0ZURhdGEgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBxdWFudGl0eTogbmV3U2hvcFF1YW50aXR5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvcFNwZWNpZmljQ29zdDogbmV3U2hvcFF1YW50aXR5ID09PSAwID8gMCA6IGludmVudG9yeUl0ZW0uc2hvcFNwZWNpZmljQ29zdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCB0eC5pbnZlbnRvcnlJdGVtLnVwZGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGVyZTogeyBpZDogaW52ZW50b3J5SXRlbS5pZCB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogdXBkYXRlRGF0YSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGludmVudG9yeVVwZGF0ZXMucHVzaCh7IHByb2R1Y3RJZCwgc2hvcElkOiBOdW1iZXIoc2hvcElkKSwgbmV3UXVhbnRpdHk6IG5ld1Nob3BRdWFudGl0eSwgb2xkUXVhbnRpdHk6IG9sZFNob3BRdWFudGl0eSB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coYCAgLSBSZWR1Y2VkIGludmVudG9yeSBmb3IgcHJvZHVjdCAke3Byb2R1Y3RJZH0gaW4gc2hvcCAke3Nob3BJZH0gYnkgJHtxdHlJblNob3BUb1JlbW92ZX0uIE9sZDogJHtvbGRTaG9wUXVhbnRpdHl9LCBOZXc6ICR7bmV3U2hvcFF1YW50aXR5fWApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihgICAtIEludmVudG9yeSBpdGVtIG5vdCBmb3VuZCBmb3IgcHJvZHVjdCAke3Byb2R1Y3RJZH0gaW4gc2hvcCAke3Nob3BJZH0gZHVyaW5nIHB1cmNoYXNlIGRlbGV0aW9uIHdpdGggZXhwbGljaXQgZGlzdHJpYnV0aW9uLiBTdG9jayBtYXkgYmUgaW5hY2N1cmF0ZS5gKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBDYXNlIDI6IE5vIGV4cGxpY2l0IGRpc3RyaWJ1dGlvbiBmb3IgdGhpcyBpdGVtLiBBdHRlbXB0IHRvIGluZmVyLlxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGBObyBzcGVjaWZpYyBkaXN0cmlidXRpb24gZm91bmQgZm9yIGl0ZW0gJHtwcm9kdWN0SWR9IGluIGRlbGV0ZWQgcHVyY2hhc2UgJHtwdXJjaGFzZUlkfS4gQXR0ZW1wdGluZyB0byBpbmZlciBzaG9wKHMpIGZvciBzdG9jayByZXZlcnNhbCBvZiB0b3RhbCBxdWFudGl0eSAke3F1YW50aXR5VG9SZW1vdmVGb3JJdGVtVG90YWx9LmApO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZXhpc3RpbmdJbnZlbnRvcmllc0Zvckl0ZW0gPSBhd2FpdCB0eC5pbnZlbnRvcnlJdGVtLmZpbmRNYW55KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGVyZTogeyBwcm9kdWN0SWQ6IHByb2R1Y3RJZCB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGV4aXN0aW5nSW52ZW50b3JpZXNGb3JJdGVtLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNpbmdsZVNob3BJbnZlbnRvcnkgPSBleGlzdGluZ0ludmVudG9yaWVzRm9ySXRlbVswXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzaG9wSWRUb0RlZHVjdEZyb20gPSBzaW5nbGVTaG9wSW52ZW50b3J5LnNob3BJZDtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGBQcm9kdWN0ICR7cHJvZHVjdElkfSBmb3VuZCBpbiBzaW5nbGUgc2hvcCAke3Nob3BJZFRvRGVkdWN0RnJvbX0uIERlZHVjdGluZyB0b3RhbCBpdGVtIHF1YW50aXR5ICR7cXVhbnRpdHlUb1JlbW92ZUZvckl0ZW1Ub3RhbH0uYCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgb2xkU2hvcFF1YW50aXR5ID0gc2luZ2xlU2hvcEludmVudG9yeS5xdWFudGl0eTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdTaG9wUXVhbnRpdHkgPSBNYXRoLm1heCgwLCBzaW5nbGVTaG9wSW52ZW50b3J5LnF1YW50aXR5IC0gcXVhbnRpdHlUb1JlbW92ZUZvckl0ZW1Ub3RhbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdXBkYXRlRGF0YUluZmVycmVkID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBxdWFudGl0eTogbmV3U2hvcFF1YW50aXR5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG9wU3BlY2lmaWNDb3N0OiBuZXdTaG9wUXVhbnRpdHkgPT09IDAgPyAwIDogc2luZ2xlU2hvcEludmVudG9yeS5zaG9wU3BlY2lmaWNDb3N0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCB0eC5pbnZlbnRvcnlJdGVtLnVwZGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoZXJlOiB7IGlkOiBzaW5nbGVTaG9wSW52ZW50b3J5LmlkIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHVwZGF0ZURhdGFJbmZlcnJlZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnZlbnRvcnlVcGRhdGVzLnB1c2goeyBwcm9kdWN0SWQsIHNob3BJZDogTnVtYmVyKHNob3BJZFRvRGVkdWN0RnJvbSksIG5ld1F1YW50aXR5OiBuZXdTaG9wUXVhbnRpdHksIG9sZFF1YW50aXR5OiBvbGRTaG9wUXVhbnRpdHkgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coYCAgLSBSZWR1Y2VkIGludmVudG9yeSBmb3IgcHJvZHVjdCAke3Byb2R1Y3RJZH0gaW4gaW5mZXJyZWQgc2hvcCAke3Nob3BJZFRvRGVkdWN0RnJvbX0gYnkgJHtxdWFudGl0eVRvUmVtb3ZlRm9ySXRlbVRvdGFsfS4gT2xkOiAke29sZFNob3BRdWFudGl0eX0sIE5ldzogJHtuZXdTaG9wUXVhbnRpdHl9YCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGV4aXN0aW5nSW52ZW50b3JpZXNGb3JJdGVtLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYFByb2R1Y3QgJHtwcm9kdWN0SWR9IChmcm9tIGRlbGV0ZWQgcHVyY2hhc2UgJHtwdXJjaGFzZUlkfSkgbm90IGZvdW5kIGluIGFueSBpbnZlbnRvcnkuIENhbm5vdCByZXZlcnNlIHN0b2NrIGZvciB0aGlzIGl0ZW0uYCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgeyAvLyBQcm9kdWN0IGV4aXN0cyBpbiBtdWx0aXBsZSBzaG9wc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYFByb2R1Y3QgJHtwcm9kdWN0SWR9IChmcm9tIGRlbGV0ZWQgcHVyY2hhc2UgJHtwdXJjaGFzZUlkfSkgZXhpc3RzIGluIG11bHRpcGxlIHNob3BzLCBidXQgbm8gc3BlY2lmaWMgZGlzdHJpYnV0aW9uIGRhdGEgd2FzIGZvdW5kIG9uIHRoZSBpbnZvaWNlIGZvciByZXZlcnNhbC4gQW1iaWd1b3VzLiBTdG9jayBub3QgYXV0b21hdGljYWxseSByZXZlcnNlZCBmb3IgdGhpcyBpdGVtLiBNYW51YWwgYWRqdXN0bWVudCBtYXkgYmUgbmVlZGVkLmApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gLS0tLSBCRUdJTiBXQUMgUmVjYWxjdWxhdGlvbiBmb3IgdGhlIGRlbGV0ZWQgaXRlbSAtLS0tXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlbWFpbmluZ1B1cmNoYXNlSXRlbXMgPSBhd2FpdCB0eC5wdXJjaGFzZUludm9pY2VJdGVtLmZpbmRNYW55KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvZHVjdElkOiBwcm9kdWN0SWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHVyY2hhc2VJbnZvaWNlSWQ6IHsgbm90OiBwdXJjaGFzZUlkIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgbGV0IHRvdGFsUmVtYWluaW5nUXVhbnRpdHkgPSAwO1xuICAgICAgICAgICAgICAgICAgICBsZXQgdG90YWxSZW1haW5pbmdWYWx1ZSA9IDA7XG4gICAgICAgICAgICAgICAgICAgIHJlbWFpbmluZ1B1cmNoYXNlSXRlbXMuZm9yRWFjaChwSXRlbSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0b3RhbFJlbWFpbmluZ1F1YW50aXR5ICs9IHBJdGVtLnF1YW50aXR5O1xuICAgICAgICAgICAgICAgICAgICAgICAgdG90YWxSZW1haW5pbmdWYWx1ZSArPSBwSXRlbS5xdWFudGl0eSAqIHBJdGVtLnByaWNlO1xuICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICBsZXQgbmV3Q2FsY3VsYXRlZFdBQyA9IDA7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0b3RhbFJlbWFpbmluZ1F1YW50aXR5ID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3Q2FsY3VsYXRlZFdBQyA9IHRvdGFsUmVtYWluaW5nVmFsdWUgLyB0b3RhbFJlbWFpbmluZ1F1YW50aXR5O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IHR4LnByb2R1Y3QudXBkYXRlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoZXJlOiB7IGlkOiBwcm9kdWN0SWQgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHsgd2VpZ2h0ZWRBdmVyYWdlQ29zdDogbmV3Q2FsY3VsYXRlZFdBQyA+PSAwID8gbmV3Q2FsY3VsYXRlZFdBQyA6IDAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgLy8gLS0tLSBFTkQgV0FDIFJlY2FsY3VsYXRpb24gLS0tLVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYXdhaXQgdHgucHVyY2hhc2VJbnZvaWNlSXRlbS5kZWxldGVNYW55KHsgd2hlcmU6IHsgcHVyY2hhc2VJbnZvaWNlSWQ6IHB1cmNoYXNlSWQgfSB9KTtcbiAgICAgICAgICAgIGF3YWl0IHR4LnB1cmNoYXNlSW52b2ljZS5kZWxldGUoeyB3aGVyZTogeyBpZDogcHVyY2hhc2VJZCB9IH0pO1xuXG4gICAgICAgICAgICByZXR1cm4geyBkZWxldGVkSW52b2ljZUlkOiBwdXJjaGFzZUlkLCBpbnZlbnRvcnlVcGRhdGVzIH07XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIFJlYWwtdGltZSB1cGRhdGVzIG5vdyBoYW5kbGVkIGJ5IHBvbGxpbmcgc3lzdGVtXG4gICAgICAgIGlmIChyZXN1bHQgJiYgcmVzdWx0LmRlbGV0ZWRJbnZvaWNlSWQpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBQdXJjaGFzZSBpbnZvaWNlICR7cmVzdWx0LmRlbGV0ZWRJbnZvaWNlSWR9IGRlbGV0ZWQgc3VjY2Vzc2Z1bGx5YCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBBZnRlciBzdWNjZXNzZnVsIHRyYW5zYWN0aW9uLCBpbnZhbGlkYXRlIHJlbGV2YW50IGNhY2hlc1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgYXdhaXQgY2FjaGVTZXJ2aWNlLmludmFsaWRhdGVJbnZlbnRvcnkoKTsgLy8gSGFuZGxlcyAnaW52ZW50b3J5OnN1bW1hcnk6KicgYW5kICdwcm9kdWN0czoqJ1xuICAgICAgICAgICAgYXdhaXQgY2FjaGVTZXJ2aWNlLmRlbCgnZGFzaGJvYXJkOmludmVudG9yeScpO1xuICAgICAgICAgICAgYXdhaXQgY2FjaGVTZXJ2aWNlLmRlbCgnZGFzaGJvYXJkOmludmVudG9yeS12YWx1ZScpO1xuICAgICAgICAgICAgYXdhaXQgY2FjaGVTZXJ2aWNlLmRlbCgnZGFzaGJvYXJkOnNob3BzJyk7XG4gICAgICAgICAgICBhd2FpdCBjYWNoZVNlcnZpY2UuZGVsKCdkYXNoYm9hcmQ6YWxsJyk7XG4gICAgICAgICAgICBhd2FpdCBjYWNoZVNlcnZpY2UuZGVsKCdkYXNoYm9hcmQ6c3VtbWFyeScpO1xuICAgICAgICAgICAgLy8gSW52YWxpZGF0ZSBwdXJjaGFzZXMtc3BlY2lmaWMgY2FjaGVzXG4gICAgICAgICAgICBhd2FpdCBjYWNoZVNlcnZpY2UuaW52YWxpZGF0ZVBhdHRlcm4oJ3B1cmNoYXNlcy1vcHRpbWl6ZWQqJyk7XG4gICAgICAgICAgICBhd2FpdCBjYWNoZVNlcnZpY2UuaW52YWxpZGF0ZVBhdHRlcm4oJ3B1cmNoYXNlLXN0YXRzKicpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ1JlbGV2YW50IGNhY2hlcyBpbnZhbGlkYXRlZCBhZnRlciBwdXJjaGFzZSBkZWxldGlvbi4nKTtcbiAgICAgICAgfSBjYXRjaCAoY2FjaGVFcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgaW52YWxpZGF0aW5nIGNhY2hlcyBhZnRlciBwdXJjaGFzZSBkZWxldGlvbjonLCBjYWNoZUVycm9yKTtcbiAgICAgICAgICAgIC8vIERvIG5vdCBsZXQgY2FjaGUgaW52YWxpZGF0aW9uIGVycm9yIGZhaWwgdGhlIG1haW4gb3BlcmF0aW9uXG4gICAgICAgIH1cblxuICAgICAgICAvLyBSZXZhbGlkYXRlIE5leHQuanMgY2FjaGVkIHBhZ2VzXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXZhbGlkYXRlVGFnKCdwdXJjaGFzZS1pbnZvaWNlcycpO1xuICAgICAgICAgICAgcmV2YWxpZGF0ZVRhZyhgcHVyY2hhc2UtJHtwdXJjaGFzZUlkfWApO1xuICAgICAgICAgICAgcmV2YWxpZGF0ZVBhdGgoYC9wdXJjaGFzZXMvJHtwdXJjaGFzZUlkfWApO1xuICAgICAgICAgICAgcmV2YWxpZGF0ZVBhdGgoYC9wdXJjaGFzZXMvJHtwdXJjaGFzZUlkfS9lZGl0YCk7XG4gICAgICAgICAgICByZXZhbGlkYXRlUGF0aCgnL3B1cmNoYXNlcycpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ05leHQuanMgcGFnZXMgcmV2YWxpZGF0ZWQgYWZ0ZXIgcHVyY2hhc2UgZGVsZXRpb24uJyk7XG4gICAgICAgIH0gY2F0Y2ggKHJldmFsaWRhdGVFcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgcmV2YWxpZGF0aW5nIE5leHQuanMgcGFnZXMgYWZ0ZXIgcHVyY2hhc2UgZGVsZXRpb246JywgcmV2YWxpZGF0ZUVycm9yKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IG1lc3NhZ2U6ICdQdXJjaGFzZSBpbnZvaWNlIGRlbGV0ZWQgc3VjY2Vzc2Z1bGx5JyB9KTtcblxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoYEVycm9yIGRlbGV0aW5nIHB1cmNoYXNlIGludm9pY2UgJHtwdXJjaGFzZUlkU3RyfTpgLCBlcnJvcik7XG4gICAgICAgIGNvbnN0IGRldGFpbHMgPSBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdBbiB1bmtub3duIGVycm9yIG9jY3VycmVkJztcbiAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICAgICAgeyBlcnJvcjogeyBtZXNzYWdlOiAnRmFpbGVkIHRvIGRlbGV0ZSBwdXJjaGFzZSBpbnZvaWNlJywgZGV0YWlsczogZGV0YWlscyB9IH0sXG4gICAgICAgICAgICB7IHN0YXR1czogNTAwIH0pO1xuICAgIH1cbn0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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