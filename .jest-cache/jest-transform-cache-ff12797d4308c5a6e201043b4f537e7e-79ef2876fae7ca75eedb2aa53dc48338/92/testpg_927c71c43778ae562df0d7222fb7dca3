38bb5a50ec14af4daee1258783d36eda
// Simple script to test if pg can be imported correctly
"use strict";

/* istanbul ignore next */
function cov_15tsd112xq() {
  var path = "/Users/sachin/Documents/md-sports-/src/scripts/test-pg.js";
  var hash = "15829b9af2dfaa84fbc3210e06ccf9b0a4c84852";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/scripts/test-pg.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 32
        },
        end: {
          line: 3,
          column: 45
        }
      },
      "1": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 47
        }
      },
      "2": {
        start: {
          line: 6,
          column: 16
        },
        end: {
          line: 8,
          column: 2
        }
      },
      "3": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 52
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {},
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/scripts/test-pg.js"],
      sourcesContent: ["// Simple script to test if pg can be imported correctly\nconst { Pool: _Pool, Client } = require('pg');\nconsole.log('pg module imported successfully');\n\n// Optionally create a dummy client to test\nconst _client = new Client({\n  connectionString: 'postgres://localhost:5432/test',\n  // Don't actually connect\n});\n\nconsole.log('Client instance created successfully');"],
      names: ["Pool", "_Pool", "Client", "require", "console", "log", "_client", "connectionString"],
      mappings: "AAAA,wDAAwD;;AACxD,MAAM,EAAEA,MAAMC,KAAK,EAAEC,MAAM,EAAE,GAAGC,QAAQ;AACxCC,QAAQC,GAAG,CAAC;AAEZ,2CAA2C;AAC3C,MAAMC,UAAU,IAAIJ,OAAO;IACzBK,kBAAkB;AAEpB;AAEAH,QAAQC,GAAG,CAAC"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "15829b9af2dfaa84fbc3210e06ccf9b0a4c84852"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_15tsd112xq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_15tsd112xq();
const {
  Pool: _Pool,
  Client
} =
/* istanbul ignore next */
(cov_15tsd112xq().s[0]++, require("pg"));
/* istanbul ignore next */
cov_15tsd112xq().s[1]++;
console.log("pg module imported successfully");
// Optionally create a dummy client to test
const _client =
/* istanbul ignore next */
(cov_15tsd112xq().s[2]++, new Client({
  connectionString: "postgres://localhost:5432/test"
}));
/* istanbul ignore next */
cov_15tsd112xq().s[3]++;
console.log("Client instance created successfully");
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQb29sIiwiX1Bvb2wiLCJDbGllbnQiLCJjb3ZfMTV0c2QxMTJ4cSIsInMiLCJyZXF1aXJlIiwiY29uc29sZSIsImxvZyIsIl9jbGllbnQiLCJjb25uZWN0aW9uU3RyaW5nIl0sInNvdXJjZXMiOlsiL1VzZXJzL3NhY2hpbi9Eb2N1bWVudHMvbWQtc3BvcnRzLS9zcmMvc2NyaXB0cy90ZXN0LXBnLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNpbXBsZSBzY3JpcHQgdG8gdGVzdCBpZiBwZyBjYW4gYmUgaW1wb3J0ZWQgY29ycmVjdGx5XG5jb25zdCB7IFBvb2w6IF9Qb29sLCBDbGllbnQgfSA9IHJlcXVpcmUoJ3BnJyk7XG5jb25zb2xlLmxvZygncGcgbW9kdWxlIGltcG9ydGVkIHN1Y2Nlc3NmdWxseScpO1xuXG4vLyBPcHRpb25hbGx5IGNyZWF0ZSBhIGR1bW15IGNsaWVudCB0byB0ZXN0XG5jb25zdCBfY2xpZW50ID0gbmV3IENsaWVudCh7XG4gIGNvbm5lY3Rpb25TdHJpbmc6ICdwb3N0Z3JlczovL2xvY2FsaG9zdDo1NDMyL3Rlc3QnLFxuICAvLyBEb24ndCBhY3R1YWxseSBjb25uZWN0XG59KTtcblxuY29uc29sZS5sb2coJ0NsaWVudCBpbnN0YW5jZSBjcmVhdGVkIHN1Y2Nlc3NmdWxseScpOyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLE1BQU07RUFBRUEsSUFBQSxFQUFNQyxLQUFLO0VBQUVDO0FBQU0sQ0FBRTtBQUFBO0FBQUEsQ0FBQUMsY0FBQSxHQUFBQyxDQUFBLE9BQUdDLE9BQUEsQ0FBUTtBQUFBO0FBQUFGLGNBQUEsR0FBQUMsQ0FBQTtBQUN4Q0UsT0FBQSxDQUFRQyxHQUFHLENBQUM7QUFFWjtBQUNBLE1BQU1DLE9BQUE7QUFBQTtBQUFBLENBQUFMLGNBQUEsR0FBQUMsQ0FBQSxPQUFVLElBQUlGLE1BQUEsQ0FBTztFQUN6Qk8sZ0JBQUEsRUFBa0I7QUFFcEI7QUFBQTtBQUFBTixjQUFBLEdBQUFDLENBQUE7QUFFQUUsT0FBQSxDQUFRQyxHQUFHLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=