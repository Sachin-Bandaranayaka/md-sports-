{"version":3,"names":["cov_1qx002u8k3","actualCoverage","s","POST","req","f","permissionError","_middleware","requirePermission","b","result","_invoiceUtils","sendOverduePaymentReminders","success","_server","NextResponse","json","message","data","successCount","failedCount","status","error","console"],"sources":["/Users/sachin/Documents/md-sports-/src/app/api/sms/send-reminders/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { requirePermission } from '@/lib/utils/middleware';\nimport { sendOverduePaymentReminders } from '@/utils/invoiceUtils';\n\n// POST: Send payment reminders for all overdue invoices\nexport async function POST(req: NextRequest) {\n    // Check for 'settings:manage' permission\n    const permissionError = await requirePermission('settings:manage')(req);\n    if (permissionError) {\n        return permissionError;\n    }\n\n    try {\n        const result = await sendOverduePaymentReminders();\n\n        if (result.success) {\n            return NextResponse.json({\n                success: true,\n                message: result.message,\n                data: {\n                    successCount: result.successCount,\n                    failedCount: result.failedCount\n                }\n            });\n        } else {\n            return NextResponse.json(\n                {\n                    success: false,\n                    message: result.message\n                },\n                { status: 400 }\n            );\n        }\n    } catch (error) {\n        console.error('Error sending payment reminders:', error);\n        return NextResponse.json(\n            { success: false, message: 'Failed to send payment reminders' },\n            { status: 500 }\n        );\n    }\n} "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAOU;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;;;+BAFY;;;;;;WAAAC,IAAA;;;;;kCALoB;;;kCACR;;;kCACU;AAGrC,eAAeA,KAAKC,GAAgB;EAAA;EAAAJ,cAAA,GAAAK,CAAA;EACvC;EACA,MAAMC,eAAA;EAAA;EAAA,CAAAN,cAAA,GAAAE,CAAA,OAAkB,MAAM,IAAAK,WAAA,CAAAC,iBAAiB,EAAC,mBAAmBJ,GAAA;EAAA;EAAAJ,cAAA,GAAAE,CAAA;EACnE,IAAII,eAAA,EAAiB;IAAA;IAAAN,cAAA,GAAAS,CAAA;IAAAT,cAAA,GAAAE,CAAA;IACjB,OAAOI,eAAA;EACX;EAAA;EAAA;IAAAN,cAAA,GAAAS,CAAA;EAAA;EAAAT,cAAA,GAAAE,CAAA;EAEA,IAAI;IACA,MAAMQ,MAAA;IAAA;IAAA,CAAAV,cAAA,GAAAE,CAAA,QAAS,MAAM,IAAAS,aAAA,CAAAC,2BAA2B;IAAA;IAAAZ,cAAA,GAAAE,CAAA;IAEhD,IAAIQ,MAAA,CAAOG,OAAO,EAAE;MAAA;MAAAb,cAAA,GAAAS,CAAA;MAAAT,cAAA,GAAAE,CAAA;MAChB,OAAOY,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;QACrBH,OAAA,EAAS;QACTI,OAAA,EAASP,MAAA,CAAOO,OAAO;QACvBC,IAAA,EAAM;UACFC,YAAA,EAAcT,MAAA,CAAOS,YAAY;UACjCC,WAAA,EAAaV,MAAA,CAAOU;QACxB;MACJ;IACJ,OAAO;MAAA;MAAApB,cAAA,GAAAS,CAAA;MAAAT,cAAA,GAAAE,CAAA;MACH,OAAOY,OAAA,CAAAC,YAAY,CAACC,IAAI,CACpB;QACIH,OAAA,EAAS;QACTI,OAAA,EAASP,MAAA,CAAOO;MACpB,GACA;QAAEI,MAAA,EAAQ;MAAI;IAEtB;EACJ,EAAE,OAAOC,KAAA,EAAO;IAAA;IAAAtB,cAAA,GAAAE,CAAA;IACZqB,OAAA,CAAQD,KAAK,CAAC,oCAAoCA,KAAA;IAAA;IAAAtB,cAAA,GAAAE,CAAA;IAClD,OAAOY,OAAA,CAAAC,YAAY,CAACC,IAAI,CACpB;MAAEH,OAAA,EAAS;MAAOI,OAAA,EAAS;IAAmC,GAC9D;MAAEI,MAAA,EAAQ;IAAI;EAEtB;AACJ","ignoreList":[]}