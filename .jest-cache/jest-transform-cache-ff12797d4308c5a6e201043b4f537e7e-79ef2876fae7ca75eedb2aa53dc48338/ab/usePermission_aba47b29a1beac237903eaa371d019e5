014cf8cff9b84a3bf6f4103331fa2378
"use client";
"use strict";

/* istanbul ignore next */
function cov_torxfj5iv() {
  var path = "/Users/sachin/Documents/md-sports-/src/hooks/usePermission.ts";
  var hash = "f5fe5637d9658412ff9baf3c29d35b5442019654";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/hooks/usePermission.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 29
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 46
        }
      },
      "4": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 37
        }
      },
      "5": {
        start: {
          line: 15,
          column: 25
        },
        end: {
          line: 29,
          column: 1
        }
      },
      "6": {
        start: {
          line: 31,
          column: 21
        },
        end: {
          line: 31,
          column: 44
        }
      },
      "7": {
        start: {
          line: 32,
          column: 20
        },
        end: {
          line: 32,
          column: 48
        }
      },
      "8": {
        start: {
          line: 33,
          column: 21
        },
        end: {
          line: 33,
          column: 51
        }
      },
      "9": {
        start: {
          line: 34,
          column: 26
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "10": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 37
        }
      },
      "11": {
        start: {
          line: 35,
          column: 25
        },
        end: {
          line: 35,
          column: 37
        }
      },
      "12": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 73
        }
      },
      "13": {
        start: {
          line: 36,
          column: 60
        },
        end: {
          line: 36,
          column: 73
        }
      },
      "14": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "15": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 24
        }
      },
      "16": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 53
        }
      },
      "17": {
        start: {
          line: 44,
          column: 33
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "18": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 42
        }
      },
      "19": {
        start: {
          line: 46,
          column: 30
        },
        end: {
          line: 46,
          column: 42
        }
      },
      "20": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 47
        }
      },
      "21": {
        start: {
          line: 48,
          column: 35
        },
        end: {
          line: 48,
          column: 47
        }
      },
      "22": {
        start: {
          line: 50,
          column: 35
        },
        end: {
          line: 50,
          column: 61
        }
      },
      "23": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "24": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 53
        }
      },
      "25": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "26": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "27": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 62
        }
      },
      "28": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 20
        }
      },
      "29": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 66,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "usePermission",
        decl: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 22
          }
        },
        loc: {
          start: {
            line: 30,
            column: 25
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 30
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 34,
            column: 26
          },
          end: {
            line: 34,
            column: 27
          }
        },
        loc: {
          start: {
            line: 34,
            column: 40
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 34
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 44,
            column: 33
          },
          end: {
            line: 44,
            column: 34
          }
        },
        loc: {
          start: {
            line: 44,
            column: 37
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 44
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 73
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 73
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 30
          }
        }, {
          start: {
            line: 36,
            column: 34
          },
          end: {
            line: 36,
            column: 58
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 42
          }
        }, {
          start: {
            line: 38,
            column: 46
          },
          end: {
            line: 38,
            column: 84
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 46,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 46,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "6": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 48,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 48,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "7": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "8": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/hooks/usePermission.ts"],
      sourcesContent: ["'use client';\n\n\nimport { useRouter, usePathname } from 'next/navigation';\nimport { useAuth } from './useAuth';\n\n// Map routes to required permissions\nconst routePermissions: Record<string, string> = {\n    '/dashboard': 'view_dashboard',  // Require dashboard permission\n    '/inventory': 'inventory:view',  // Full inventory access (blocked for shop staff)\n    '/inventory/transfers': 'inventory:transfer',\n    '/inventory/distribution': 'shop:distribution:view',  // Shop distribution access\n    '/suppliers': 'supplier:view',\n    '/purchases': 'purchase:view',\n    '/quotations': 'quotation:view',\n    '/shops': 'shop:view',\n    '/customers': 'customer:view',\n    '/invoices': 'invoice:view',\n    '/accounting': 'accounting:view',\n    '/reports': 'report:view',\n    '/settings': 'settings:view',\n};\n\nexport function usePermission() {\n    const { user } = useAuth();\n    const _router = useRouter();\n    const pathname = usePathname();\n\n    const hasPermission = (permission: string): boolean => {\n        if (!permission) return true; // No permission required\n        if (!user?.permissions || !user.permissions.length) return false;\n        \n        // Check for admin permissions first\n        if (user.permissions.includes('*') || user.permissions.includes('admin:all')) {\n            return true;\n        }\n        \n        return user.permissions.includes(permission);\n    };\n\n    // Check if user has permission to access the current route\n    const checkRoutePermission = (): boolean => {\n        // Default to dashboard for root path\n        if (pathname === '/') return true;\n\n        // Login page is always accessible\n        if (pathname === '/login') return true;\n\n        // For exact route matches\n        const requiredPermission = routePermissions[pathname];\n        if (requiredPermission !== undefined) {\n            return hasPermission(requiredPermission);\n        }\n\n        // For routes that don't have an exact match, check parent routes\n        for (const route in routePermissions) {\n            if (pathname.startsWith(route + '/')) {\n                return hasPermission(routePermissions[route]);\n            }\n        }\n\n        // If no matching route found, allow access by default\n        return true;\n    };\n\n    return {\n        hasPermission,\n        checkRoutePermission\n    };\n}"],
      names: ["usePermission", "routePermissions", "user", "useAuth", "_router", "useRouter", "pathname", "usePathname", "hasPermission", "permission", "permissions", "length", "includes", "checkRoutePermission", "requiredPermission", "undefined", "route", "startsWith"],
      mappings: "AAAA;;;;;+BAuBgBA;;;eAAAA;;;4BApBuB;yBACf;AAExB,qCAAqC;AACrC,MAAMC,mBAA2C;IAC7C,cAAc;IACd,cAAc;IACd,wBAAwB;IACxB,2BAA2B;IAC3B,cAAc;IACd,cAAc;IACd,eAAe;IACf,UAAU;IACV,cAAc;IACd,aAAa;IACb,eAAe;IACf,YAAY;IACZ,aAAa;AACjB;AAEO,SAASD;IACZ,MAAM,EAAEE,IAAI,EAAE,GAAGC,IAAAA,gBAAO;IACxB,MAAMC,UAAUC,IAAAA,qBAAS;IACzB,MAAMC,WAAWC,IAAAA,uBAAW;IAE5B,MAAMC,gBAAgB,CAACC;QACnB,IAAI,CAACA,YAAY,OAAO,MAAM,yBAAyB;QACvD,IAAI,CAACP,MAAMQ,eAAe,CAACR,KAAKQ,WAAW,CAACC,MAAM,EAAE,OAAO;QAE3D,oCAAoC;QACpC,IAAIT,KAAKQ,WAAW,CAACE,QAAQ,CAAC,QAAQV,KAAKQ,WAAW,CAACE,QAAQ,CAAC,cAAc;YAC1E,OAAO;QACX;QAEA,OAAOV,KAAKQ,WAAW,CAACE,QAAQ,CAACH;IACrC;IAEA,2DAA2D;IAC3D,MAAMI,uBAAuB;QACzB,qCAAqC;QACrC,IAAIP,aAAa,KAAK,OAAO;QAE7B,kCAAkC;QAClC,IAAIA,aAAa,UAAU,OAAO;QAElC,0BAA0B;QAC1B,MAAMQ,qBAAqBb,gBAAgB,CAACK,SAAS;QACrD,IAAIQ,uBAAuBC,WAAW;YAClC,OAAOP,cAAcM;QACzB;QAEA,iEAAiE;QACjE,IAAK,MAAME,SAASf,iBAAkB;YAClC,IAAIK,SAASW,UAAU,CAACD,QAAQ,MAAM;gBAClC,OAAOR,cAAcP,gBAAgB,CAACe,MAAM;YAChD;QACJ;QAEA,sDAAsD;QACtD,OAAO;IACX;IAEA,OAAO;QACHR;QACAK;IACJ;AACJ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f5fe5637d9658412ff9baf3c29d35b5442019654"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_torxfj5iv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_torxfj5iv();
cov_torxfj5iv().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_torxfj5iv().s[1]++;
Object.defineProperty(exports, "usePermission", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_torxfj5iv().f[0]++;
    cov_torxfj5iv().s[2]++;
    return usePermission;
  }
});
const _navigation =
/* istanbul ignore next */
(cov_torxfj5iv().s[3]++, require("next/navigation"));
const _useAuth =
/* istanbul ignore next */
(cov_torxfj5iv().s[4]++, require("./useAuth"));
// Map routes to required permissions
const routePermissions =
/* istanbul ignore next */
(cov_torxfj5iv().s[5]++, {
  "/dashboard": "view_dashboard",
  "/inventory": "inventory:view",
  "/inventory/transfers": "inventory:transfer",
  "/inventory/distribution": "shop:distribution:view",
  "/suppliers": "supplier:view",
  "/purchases": "purchase:view",
  "/quotations": "quotation:view",
  "/shops": "shop:view",
  "/customers": "customer:view",
  "/invoices": "invoice:view",
  "/accounting": "accounting:view",
  "/reports": "report:view",
  "/settings": "settings:view"
});
function usePermission() {
  /* istanbul ignore next */
  cov_torxfj5iv().f[1]++;
  const {
    user
  } =
  /* istanbul ignore next */
  (cov_torxfj5iv().s[6]++, (0, _useAuth.useAuth)());
  const _router =
  /* istanbul ignore next */
  (cov_torxfj5iv().s[7]++, (0, _navigation.useRouter)());
  const pathname =
  /* istanbul ignore next */
  (cov_torxfj5iv().s[8]++, (0, _navigation.usePathname)());
  /* istanbul ignore next */
  cov_torxfj5iv().s[9]++;
  const hasPermission = permission => {
    /* istanbul ignore next */
    cov_torxfj5iv().f[2]++;
    cov_torxfj5iv().s[10]++;
    if (!permission) {
      /* istanbul ignore next */
      cov_torxfj5iv().b[0][0]++;
      cov_torxfj5iv().s[11]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_torxfj5iv().b[0][1]++;
    } // No permission required
    cov_torxfj5iv().s[12]++;
    if (
    /* istanbul ignore next */
    (cov_torxfj5iv().b[2][0]++, !user?.permissions) ||
    /* istanbul ignore next */
    (cov_torxfj5iv().b[2][1]++, !user.permissions.length)) {
      /* istanbul ignore next */
      cov_torxfj5iv().b[1][0]++;
      cov_torxfj5iv().s[13]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_torxfj5iv().b[1][1]++;
    }
    // Check for admin permissions first
    cov_torxfj5iv().s[14]++;
    if (
    /* istanbul ignore next */
    (cov_torxfj5iv().b[4][0]++, user.permissions.includes("*")) ||
    /* istanbul ignore next */
    (cov_torxfj5iv().b[4][1]++, user.permissions.includes("admin:all"))) {
      /* istanbul ignore next */
      cov_torxfj5iv().b[3][0]++;
      cov_torxfj5iv().s[15]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_torxfj5iv().b[3][1]++;
    }
    cov_torxfj5iv().s[16]++;
    return user.permissions.includes(permission);
  };
  // Check if user has permission to access the current route
  /* istanbul ignore next */
  cov_torxfj5iv().s[17]++;
  const checkRoutePermission = () => {
    /* istanbul ignore next */
    cov_torxfj5iv().f[3]++;
    cov_torxfj5iv().s[18]++;
    // Default to dashboard for root path
    if (pathname === "/") {
      /* istanbul ignore next */
      cov_torxfj5iv().b[5][0]++;
      cov_torxfj5iv().s[19]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_torxfj5iv().b[5][1]++;
    }
    // Login page is always accessible
    cov_torxfj5iv().s[20]++;
    if (pathname === "/login") {
      /* istanbul ignore next */
      cov_torxfj5iv().b[6][0]++;
      cov_torxfj5iv().s[21]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_torxfj5iv().b[6][1]++;
    }
    // For exact route matches
    const requiredPermission =
    /* istanbul ignore next */
    (cov_torxfj5iv().s[22]++, routePermissions[pathname]);
    /* istanbul ignore next */
    cov_torxfj5iv().s[23]++;
    if (requiredPermission !== undefined) {
      /* istanbul ignore next */
      cov_torxfj5iv().b[7][0]++;
      cov_torxfj5iv().s[24]++;
      return hasPermission(requiredPermission);
    } else
    /* istanbul ignore next */
    {
      cov_torxfj5iv().b[7][1]++;
    }
    // For routes that don't have an exact match, check parent routes
    cov_torxfj5iv().s[25]++;
    for (const route in routePermissions) {
      /* istanbul ignore next */
      cov_torxfj5iv().s[26]++;
      if (pathname.startsWith(route + "/")) {
        /* istanbul ignore next */
        cov_torxfj5iv().b[8][0]++;
        cov_torxfj5iv().s[27]++;
        return hasPermission(routePermissions[route]);
      } else
      /* istanbul ignore next */
      {
        cov_torxfj5iv().b[8][1]++;
      }
    }
    // If no matching route found, allow access by default
    /* istanbul ignore next */
    cov_torxfj5iv().s[28]++;
    return true;
  };
  /* istanbul ignore next */
  cov_torxfj5iv().s[29]++;
  return {
    hasPermission,
    checkRoutePermission
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,