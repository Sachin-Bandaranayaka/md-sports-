{"version":3,"names":["DashboardPage","DashboardTransfers","cov_2cougd7xuv","s","_react","lazy","f","Promise","resolve","then","_interop_require_wildcard","require","ShopWiseMetrics","ComponentSkeleton","className","b","_jsxruntime","jsx","jsxs","user","isLoading","isAuthenticated","accessToken","_useAuth","useAuth","router","_navigation","useRouter","canViewDashboard","_usePermission","usePermission","dashboardData","setDashboardData","useState","dataLoading","setDataLoading","error","setError","startDate","setStartDate","date","Date","setDate","getDate","toISOString","split","endDate","setEndDate","refreshTrigger","setRefreshTrigger","componentsLoaded","setComponentsLoaded","useEffect","push","preloadComponents","all","console","warn","setTimeout","fetchDashboardData","customStartDate","customEndDate","fetchHeaders","queryStartDate","queryEndDate","response","fetch","headers","cache","ok","Error","status","result","json","success","message","recentTransfers","prev","handleDateRangeChange","newStartDate","newEndDate","log","id","username","roleName","permissions","_lucidereact","Loader2","_AccessDenied","AccessDenied","onClick","hasPermission","permission","some","p","toLowerCase","includes","getAccessibleModules","modules","accessibleModules","fullName","CheckCircle","TrendingUp","toLocaleDateString","Calendar","type","value","onChange","e","target","Suspense","fallback","process","env","NODE_ENV"],"sources":["/Users/sachin/Documents/md-sports-/src/app/(protected)/dashboard/page.tsx"],"sourcesContent":["'use client';\n\nimport { Suspense, useEffect, useState, lazy } from 'react';\nimport { Loader2, Calendar, TrendingUp, AlertCircle, CheckCircle } from 'lucide-react';\nimport { useAuth } from '@/hooks/useAuth';\nimport { useRouter } from 'next/navigation';\nimport { usePermission } from '@/hooks/usePermission';\nimport { AccessDenied } from '@/components/ui/AccessDenied';\n\n// Lazy load heavy components for better performance\nconst DashboardTransfers = lazy(() => import('./components/DashboardTransfers'));\nconst ShopWiseMetrics = lazy(() => import('./components/ShopWiseMetrics'));\n\n// Component loading skeleton\nconst ComponentSkeleton = ({ className = \"h-64\" }: { className?: string }) => (\n    <div className={`animate-pulse bg-gray-200 rounded-lg ${className}`}>\n        <div className=\"p-4 space-y-3\">\n            <div className=\"h-4 bg-gray-300 rounded w-1/4\"></div>\n            <div className=\"space-y-2\">\n                <div className=\"h-3 bg-gray-300 rounded w-full\"></div>\n                <div className=\"h-3 bg-gray-300 rounded w-3/4\"></div>\n                <div className=\"h-3 bg-gray-300 rounded w-1/2\"></div>\n            </div>\n        </div>\n    </div>\n);\n\n// Simple dashboard without dual modes or complex optimizations\nexport default function DashboardPage() {\n    const { user, isLoading, isAuthenticated, accessToken } = useAuth();\n    const router = useRouter();\n    const { canViewDashboard } = usePermission();\n    const [dashboardData, setDashboardData] = useState<{ recentTransfers: any[] } | null>(null);\n    const [dataLoading, setDataLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n    const [startDate, setStartDate] = useState<string>(() => {\n        const date = new Date();\n        date.setDate(date.getDate() - 7); // Default to 7 days ago\n        return date.toISOString().split('T')[0];\n    });\n    const [endDate, setEndDate] = useState<string>(() => {\n        return new Date().toISOString().split('T')[0]; // Default to today\n    });\n    const [refreshTrigger, setRefreshTrigger] = useState(0);\n    const [componentsLoaded, setComponentsLoaded] = useState(false);\n\n    // Redirect if not authenticated\n    useEffect(() => {\n        if (!isLoading && !isAuthenticated) {\n            router.push('/login');\n        }\n    }, [isLoading, isAuthenticated, router]);\n\n    // Preload components after initial render for better UX\n    useEffect(() => {\n        if (isAuthenticated && !isLoading) {\n            // Preload lazy components\n            const preloadComponents = async () => {\n                try {\n                    await Promise.all([\n                        import('./components/DashboardTransfers'),\n                        import('./components/ShopWiseMetrics')\n                    ]);\n                    setComponentsLoaded(true);\n                } catch (error) {\n                    console.warn('Failed to preload components:', error);\n                }\n            };\n            \n            // Delay preloading to not block initial render\n            setTimeout(preloadComponents, 100);\n        }\n    }, [isAuthenticated, isLoading]);\n\n    // Fetch dashboard data with real-time updates\n    const fetchDashboardData = async (customStartDate?: string, customEndDate?: string) => {\n        if (!isAuthenticated || isLoading) return;\n\n        try {\n            setDataLoading(true);\n            setError(null);\n\n            const fetchHeaders: HeadersInit = {\n                'Content-Type': 'application/json',\n            };\n\n            if (accessToken) {\n                fetchHeaders['Authorization'] = `Bearer ${accessToken}`;\n            }\n\n            // Use custom dates or current state dates\n            const queryStartDate = customStartDate || startDate;\n            const queryEndDate = customEndDate || endDate;\n\n            // Fetch fresh data every time - no caching, with custom date range filter\n            const response = await fetch(`/api/dashboard/all?startDate=${queryStartDate}&endDate=${queryEndDate}`, {\n                headers: fetchHeaders,\n                cache: 'no-store'\n            });\n\n            if (!response.ok) {\n                throw new Error(`Failed to load dashboard data: ${response.status}`);\n            }\n\n            const result = await response.json();\n\n            if (!result.success) {\n                throw new Error(result.message || 'Failed to load dashboard data');\n            }\n\n            setDashboardData({\n                recentTransfers: result.recentTransfers || [],\n            });\n            \n            // Trigger refresh for shop-wise metrics\n            setRefreshTrigger(prev => prev + 1);\n        } catch (error) {\n            console.error('Error fetching dashboard data:', error);\n            setError(error instanceof Error ? error.message : 'Failed to load dashboard data');\n        } finally {\n            setDataLoading(false);\n        }\n    };\n\n    // Handle date range change\n    const handleDateRangeChange = (newStartDate: string, newEndDate: string) => {\n        setStartDate(newStartDate);\n        setEndDate(newEndDate);\n        fetchDashboardData(newStartDate, newEndDate);\n    };\n\n    // Initial data fetch\n    useEffect(() => {\n        // Debug logging\n        console.log('Dashboard - Auth state:', { \n            isAuthenticated, \n            user: user ? {\n                id: user.id,\n                username: user.username,\n                roleName: user.roleName,\n                permissions: user.permissions\n            } : null,\n            canViewDashboard: canViewDashboard() \n        });\n\n        if (isAuthenticated && canViewDashboard()) {\n            fetchDashboardData();\n        } else if (isAuthenticated) {\n            // If user is authenticated but can't view, no need to fetch.\n            // We can stop the loading indicator here.\n            setDataLoading(false);\n        }\n    }, [isAuthenticated, user]); // user dependency to re-check permissions\n\n    // Show loading while auth is being checked\n    if (isLoading) {\n        return (\n            <div className=\"h-full flex items-center justify-center p-20\">\n                <div className=\"text-center\">\n                    <Loader2 className=\"h-10 w-10 animate-spin text-primary mx-auto mb-4\" />\n                    <p className=\"text-gray-500\">Checking authentication...</p>\n                </div>\n            </div>\n        );\n    }\n\n    // After loading, check permissions\n    if (!canViewDashboard()) {\n        return <AccessDenied message=\"You do not have permission to view the dashboard.\" />;\n    }\n\n    // Show loading while data is being fetched\n    if (dataLoading) {\n        return (\n            <div className=\"h-full flex items-center justify-center p-20\">\n                <div className=\"text-center\">\n                    <Loader2 className=\"h-10 w-10 animate-spin text-primary mx-auto mb-4\" />\n                    <p className=\"text-gray-500\">Loading dashboard...</p>\n                </div>\n            </div>\n        );\n    }\n\n    // Show error if data fetch failed\n    if (error) {\n        return (\n            <div className=\"h-full flex items-center justify-center p-20\">\n                <div className=\"text-center\">\n                    <div className=\"text-red-500 mb-4\">Error loading dashboard</div>\n                    <p className=\"text-gray-500\">{error}</p>\n                    <button\n                        onClick={() => fetchDashboardData()}\n                        className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n                    >\n                        Retry\n                    </button>\n                </div>\n            </div>\n        );\n    }\n\n    // Helper function to check permissions\n    const hasPermission = (permission: string) => {\n        if (!user?.permissions) return false;\n        return user.permissions.some((p: string) => \n            p.toLowerCase().includes(permission.toLowerCase())\n        );\n    };\n\n    // Get user's accessible modules\n    const getAccessibleModules = () => {\n        const modules = [];\n        if (hasPermission('inventory:view')) modules.push('Inventory');\n        if (hasPermission('sales:view')) modules.push('Sales');\n        if (hasPermission('accounting:view')) modules.push('Accounting');\n        if (hasPermission('reports:view')) modules.push('Reports');\n        if (hasPermission('users:view')) modules.push('User Management');\n        return modules;\n    };\n\n    // Show dashboard if data is loaded\n    if (dashboardData) {\n        const accessibleModules = getAccessibleModules();\n        \n        return (\n            <div className=\"space-y-6\">\n                {/* Welcome Section - Critical above-the-fold content */}\n                <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg p-6 border border-blue-100\">\n                    <div className=\"flex items-start justify-between\">\n                        <div>\n                            <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                                Welcome back, {user?.fullName || user?.username || 'User'}!\n                            </h1>\n                            <div className=\"flex items-center space-x-4 text-sm\">\n                                <div className=\"flex items-center text-green-600\">\n                                    <CheckCircle className=\"h-4 w-4 mr-1\" />\n                                    <span>System Online</span>\n                                </div>\n                                <div className=\"flex items-center text-blue-600\">\n                                    <TrendingUp className=\"h-4 w-4 mr-1\" />\n                                    <span>Data Updated</span>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"text-right\">\n                            <p className=\"text-sm text-gray-500\">Last login</p>\n                            <p className=\"text-sm font-medium text-gray-900\">\n                                {new Date().toLocaleDateString()}\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Date Range Filter */}\n                <div className=\"bg-white rounded-lg shadow-sm border p-4\">\n                    <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center space-x-4\">\n                            <Calendar className=\"h-5 w-5 text-gray-400\" />\n                            <span className=\"text-sm font-medium text-gray-700\">Date Range:</span>\n                            <input\n                                type=\"date\"\n                                value={startDate}\n                                onChange={(e) => handleDateRangeChange(e.target.value, endDate)}\n                                className=\"border border-gray-300 rounded px-3 py-1 text-sm\"\n                            />\n                            <span className=\"text-gray-500\">to</span>\n                            <input\n                                type=\"date\"\n                                value={endDate}\n                                onChange={(e) => handleDateRangeChange(startDate, e.target.value)}\n                                className=\"border border-gray-300 rounded px-3 py-1 text-sm\"\n                            />\n                        </div>\n                        <button\n                            onClick={() => fetchDashboardData()}\n                            className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors text-sm\"\n                        >\n                            Refresh Data\n                        </button>\n                    </div>\n                </div>\n\n                {/* Lazy-loaded components with Suspense boundaries - Full width containers */}\n                <div className=\"space-y-6\">\n                    {/* Shop-wise Metrics - Full width container */}\n                    <div className=\"w-full\">\n                        <Suspense fallback={<ComponentSkeleton className=\"h-96\" />}>\n                            <ShopWiseMetrics \n                                startDate={startDate} \n                                endDate={endDate} \n                                refreshTrigger={refreshTrigger}\n                            />\n                        </Suspense>\n                    </div>\n\n                    {/* Recent Transfers - Full width container */}\n                    <div className=\"w-full\">\n                        <Suspense fallback={<ComponentSkeleton className=\"h-96\" />}>\n                            <DashboardTransfers \n                                recentTransfers={dashboardData.recentTransfers || []} \n                            />\n                        </Suspense>\n                    </div>\n                </div>\n\n                {/* Performance indicator for development */}\n                {process.env.NODE_ENV === 'development' && (\n                    <div className=\"fixed bottom-4 right-4 bg-gray-800 text-white px-3 py-2 rounded-lg text-xs\">\n                        Components: {componentsLoaded ? '✅ Loaded' : '⏳ Loading'}\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n    // Fallback loading state\n    return (\n        <div className=\"h-full flex items-center justify-center p-20\">\n            <div className=\"text-center\">\n                <Loader2 className=\"h-10 w-10 animate-spin text-primary mx-auto mb-4\" />\n                <p className=\"text-gray-500\">Initializing dashboard...</p>\n            </div>\n        </div>\n    );\n}"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}