{"version":3,"sources":["/Users/sachin/Documents/md-sports-/src/app/inventory/bulk-import/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport { Upload, Download, FileSpreadsheet, AlertCircle, CheckCircle, X } from 'lucide-react';\nimport { Button } from '@/components/ui/Button';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport MainLayout from '@/components/layout/MainLayout';\n\nexport default function BulkImportPage() {\n    const [file, setFile] = useState<File | null>(null);\n    const [isUploading, setIsUploading] = useState(false);\n    const [uploadResults, setUploadResults] = useState<any>(null);\n    const [dragActive, setDragActive] = useState(false);\n    const [shopNames, setShopNames] = useState<string[]>([]);\n    const fileInputRef = useRef<HTMLInputElement>(null);\n\n    // Fetch available shop names\n    useEffect(() => {\n        const fetchShopNames = async () => {\n            try {\n                const response = await fetch('/api/shops/names');\n                const data = await response.json();\n                if (data.success) {\n                    setShopNames(data.shopNames);\n                }\n            } catch (error) {\n                console.error('Failed to fetch shop names:', error);\n            }\n        };\n        fetchShopNames();\n    }, []);\n\n    const handleDrag = (e: React.DragEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (e.type === \"dragenter\" || e.type === \"dragover\") {\n            setDragActive(true);\n        } else if (e.type === \"dragleave\") {\n            setDragActive(false);\n        }\n    };\n\n    const handleDrop = (e: React.DragEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setDragActive(false);\n        \n        if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n            setFile(e.dataTransfer.files[0]);\n        }\n    };\n\n    const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files[0]) {\n            setFile(e.target.files[0]);\n        }\n    };\n\n    const downloadTemplate = () => {\n        window.open('/api/products/template', '_blank');\n    };\n\n    const handleUpload = async () => {\n        if (!file) return;\n\n        setIsUploading(true);\n        setUploadResults(null);\n\n        const formData = new FormData();\n        formData.append('file', file);\n\n        try {\n            const response = await fetch('/api/products/bulk-import', {\n                method: 'POST',\n                body: formData,\n            });\n\n            const result = await response.json();\n            setUploadResults(result);\n            \n            if (result.success) {\n                setFile(null);\n                if (fileInputRef.current) {\n                    fileInputRef.current.value = '';\n                }\n            }\n        } catch (error) {\n            setUploadResults({\n                success: false,\n                message: 'Upload failed. Please try again.',\n                details: []\n            });\n        } finally {\n            setIsUploading(false);\n        }\n    };\n\n    const clearFile = () => {\n        setFile(null);\n        setUploadResults(null);\n        if (fileInputRef.current) {\n            fileInputRef.current.value = '';\n        }\n    };\n\n    return (\n        <MainLayout>\n            <div className=\"space-y-6\">\n                {/* Header */}\n                <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\n                    <div>\n                        <h1 className=\"text-2xl font-bold text-gray-900\">Bulk Import Products</h1>\n                        <p className=\"text-gray-500\">Upload an Excel file to import multiple products at once</p>\n                    </div>\n                    <div className=\"flex gap-3\">\n                        <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={downloadTemplate}\n                        >\n                            <Download className=\"w-4 h-4 mr-2\" />\n                            Download Template\n                        </Button>\n                    </div>\n                </div>\n\n                {/* Instructions */}\n                <Alert>\n                    <AlertCircle className=\"h-4 w-4\" />\n                    <AlertDescription>\n                        Download the Excel template, fill in your product data, and upload it below. \n                        Make sure category names match existing categories in your system.\n                    </AlertDescription>\n                </Alert>\n\n                {/* Upload Area */}\n                <div className=\"bg-white rounded-lg shadow p-6\">\n                    <div\n                        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${\n                            dragActive \n                                ? 'border-blue-400 bg-blue-50' \n                                : file \n                                    ? 'border-green-400 bg-green-50' \n                                    : 'border-gray-300 hover:border-gray-400'\n                        }`}\n                        onDragEnter={handleDrag}\n                        onDragLeave={handleDrag}\n                        onDragOver={handleDrag}\n                        onDrop={handleDrop}\n                    >\n                        <input\n                            ref={fileInputRef}\n                            type=\"file\"\n                            accept=\".xlsx,.xls,.csv\"\n                            onChange={handleFileSelect}\n                            className=\"hidden\"\n                        />\n                        \n                        {file ? (\n                            <div className=\"space-y-4\">\n                                <FileSpreadsheet className=\"mx-auto h-12 w-12 text-green-500\" />\n                                <div>\n                                    <p className=\"text-lg font-medium text-green-700\">{file.name}</p>\n                                    <p className=\"text-sm text-gray-500\">\n                                        {(file.size / 1024 / 1024).toFixed(2)} MB\n                                    </p>\n                                </div>\n                                <div className=\"flex gap-2 justify-center\">\n                                    <Button\n                                        onClick={handleUpload}\n                                        disabled={isUploading}\n                                        variant=\"primary\"\n                                    >\n                                        {isUploading ? 'Uploading...' : 'Upload & Import'}\n                                    </Button>\n                                    <Button\n                                        onClick={clearFile}\n                                        variant=\"outline\"\n                                        disabled={isUploading}\n                                    >\n                                        <X className=\"w-4 h-4 mr-2\" />\n                                        Clear\n                                    </Button>\n                                </div>\n                            </div>\n                        ) : (\n                            <div className=\"space-y-4\">\n                                <Upload className=\"mx-auto h-12 w-12 text-gray-400\" />\n                                <div>\n                                    <p className=\"text-lg font-medium text-gray-900\">\n                                        Drop your Excel file here, or click to browse\n                                    </p>\n                                    <p className=\"text-sm text-gray-500\">\n                                        Supports .xlsx, .xls, and .csv files\n                                    </p>\n                                </div>\n                                <Button\n                                    onClick={() => fileInputRef.current?.click()}\n                                    variant=\"outline\"\n                                >\n                                    Browse Files\n                                </Button>\n                            </div>\n                        )}\n                    </div>\n                </div>\n\n                {/* Results */}\n                {uploadResults && (\n                    <div className=\"bg-white rounded-lg shadow p-6\">\n                        <h3 className=\"text-lg font-semibold mb-4\">Import Results</h3>\n                        \n                        <Alert className={uploadResults.success ? \"border-green-200 bg-green-50\" : \"border-red-200 bg-red-50\"}>\n                            {uploadResults.success ? (\n                                <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                            ) : (\n                                <AlertCircle className=\"h-4 w-4 text-red-600\" />\n                            )}\n                            <AlertDescription className={uploadResults.success ? \"text-green-800\" : \"text-red-800\"}>\n                                {uploadResults.message}\n                            </AlertDescription>\n                        </Alert>\n\n                        {uploadResults.details && uploadResults.details.length > 0 && (\n                            <div className=\"mt-4\">\n                                <h4 className=\"font-medium mb-2\">Detailed Results:</h4>\n                                <div className=\"max-h-60 overflow-y-auto border rounded\">\n                                    <table className=\"min-w-full text-sm\">\n                                        <thead className=\"bg-gray-50\">\n                                            <tr>\n                                                <th className=\"px-3 py-2 text-left\">Row</th>\n                                                <th className=\"px-3 py-2 text-left\">Product</th>\n                                                <th className=\"px-3 py-2 text-left\">Status</th>\n                                                <th className=\"px-3 py-2 text-left\">Message</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {uploadResults.details.map((detail: any, index: number) => (\n                                                <tr key={index} className=\"border-t\">\n                                                    <td className=\"px-3 py-2\">{detail.row}</td>\n                                                    <td className=\"px-3 py-2\">{detail.productName || 'N/A'}</td>\n                                                    <td className=\"px-3 py-2\">\n                                                        {detail.success ? (\n                                                            <span className=\"text-green-600 font-medium\">Success</span>\n                                                        ) : (\n                                                            <span className=\"text-red-600 font-medium\">Error</span>\n                                                        )}\n                                                    </td>\n                                                    <td className=\"px-3 py-2\">{detail.message}</td>\n                                                </tr>\n                                            ))}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                )}\n\n                {/* Template Guidelines */}\n                <div className=\"bg-white rounded-lg shadow p-6\">\n                    <h3 className=\"text-lg font-semibold mb-4\">Excel Template Guidelines</h3>\n                    <div className=\"grid md:grid-cols-2 gap-6\">\n                        <div>\n                            <h4 className=\"font-medium mb-2\">Required Columns:</h4>\n                            <ul className=\"text-sm space-y-1 text-gray-600\">\n                                <li>• <strong>Name</strong> - Product name</li>\n                                <li>• <strong>RetailPrice</strong> - Selling price</li>\n                            </ul>\n                        </div>\n                        <div>\n                            <h4 className=\"font-medium mb-2\">Optional Columns:</h4>\n                            <ul className=\"text-sm space-y-1 text-gray-600\">\n                                <li>• <strong>SKU</strong> - Product code</li>\n                                <li>• <strong>Description</strong> - Product details</li>\n                                <li>• <strong>CostPrice</strong> - Purchase cost</li>\n                                <li>• <strong>Barcode</strong> - Product barcode</li>\n                                <li>• <strong>CategoryName</strong> - Category name</li>\n                                <li>• <strong>InitialQuantity</strong> - Starting stock (leave blank for no initial stock)</li>\n                                <li>• <strong>ShopName</strong> - Shop for initial stock (required if InitialQuantity &gt; 0)</li>\n                            </ul>\n                            <div className=\"mt-3 p-3 bg-blue-50 rounded border-l-4 border-blue-400\">\n                                <p className=\"text-sm text-blue-800\">\n                                    <strong>Note:</strong> If you set InitialQuantity to a value greater than 0, \n                                    you must also provide a valid ShopName. Otherwise, leave both fields empty.\n                                </p>\n                                {shopNames.length > 0 && (\n                                    <div className=\"mt-2\">\n                                        <p className=\"text-sm text-blue-800 font-medium\">Available Shop Names:</p>\n                                        <p className=\"text-sm text-blue-700 mt-1\">\n                                            {shopNames.join(', ')}\n                                        </p>\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </MainLayout>\n    );\n} "],"names":["BulkImportPage","file","setFile","useState","isUploading","setIsUploading","uploadResults","setUploadResults","dragActive","setDragActive","shopNames","setShopNames","fileInputRef","useRef","useEffect","fetchShopNames","response","fetch","data","json","success","error","console","handleDrag","e","preventDefault","stopPropagation","type","handleDrop","dataTransfer","files","handleFileSelect","target","downloadTemplate","window","open","handleUpload","formData","FormData","append","method","body","result","current","value","message","details","clearFile","MainLayout","div","className","h1","p","Button","variant","size","onClick","Download","Alert","AlertCircle","AlertDescription","onDragEnter","onDragLeave","onDragOver","onDrop","input","ref","accept","onChange","FileSpreadsheet","name","toFixed","disabled","X","Upload","click","h3","CheckCircle","length","h4","table","thead","tr","th","tbody","map","detail","index","td","row","productName","span","ul","li","strong","join"],"mappings":"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"}