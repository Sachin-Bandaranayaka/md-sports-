{"version":3,"names":["default","cov_rqso4effi","f","s","ReceiptsPage","metadata","LoadingSpinner","_jsxruntime","jsxs","className","jsx","_lucidereact","Loader2","size","title","description","getReceipts","page","b","limit","search","receipts","_prisma","prisma","receipt","findMany","where","OR","receiptNumber","contains","mode","payment","referenceNumber","customer","name","include","invoice","account","confirmedByUser","orderBy","createdAt","skip","take","totalReceipts","count","formattedReceipts","map","receiptDate","toISOString","split","totalPages","Math","ceil","currentPage","error","console","searchParams","parseInt","_MainLayout","_react","Suspense","fallback","_ReceiptsClientWrapper","initialReceipts","initialTotalPages","initialCurrentPage","initialSearch"],"sources":["/Users/sachin/Documents/md-sports-/src/app/receipts/page.tsx"],"sourcesContent":["import { Suspense } from 'react';\nimport { prisma } from '@/lib/prisma';\nimport ReceiptsClientWrapper from './components/ReceiptsClientWrapper';\nimport { Metadata } from 'next';\nimport { Loader2 } from 'lucide-react';\nimport MainLayout from '@/components/layout/MainLayout';\n\n// Simple loading component\nfunction LoadingSpinner() {\n    return (\n        <div className=\"flex justify-center items-center h-64\">\n            <Loader2 className=\"animate-spin text-primary\" size={48} />\n            <p className=\"ml-3 text-lg text-gray-600\">Loading receipts...</p>\n        </div>\n    );\n}\n\nexport const metadata: Metadata = {\n    title: 'Receipts | MS Sports',\n    description: 'View and manage all payment receipts'\n};\n\nasync function getReceipts(page = 1, limit = 10, search = '') {\n    try {\n        // Get receipts with pagination\n        const receipts = await prisma.receipt.findMany({\n            where: search ? {\n                OR: [\n                    { receiptNumber: { contains: search, mode: 'insensitive' } },\n                    { payment: { referenceNumber: { contains: search, mode: 'insensitive' } } },\n                    { payment: { customer: { name: { contains: search, mode: 'insensitive' } } } }\n                ]\n            } : {},\n            include: {\n                payment: {\n                    include: {\n                        customer: true,\n                        invoice: true,\n                        account: true\n                    }\n                },\n                confirmedByUser: true\n            },\n            orderBy: { createdAt: 'desc' },\n            skip: (page - 1) * limit,\n            take: limit\n        });\n\n        // Get total count for pagination\n        const totalReceipts = await prisma.receipt.count({\n            where: search ? {\n                OR: [\n                    { receiptNumber: { contains: search, mode: 'insensitive' } },\n                    { payment: { referenceNumber: { contains: search, mode: 'insensitive' } } },\n                    { payment: { customer: { name: { contains: search, mode: 'insensitive' } } } }\n                ]\n            } : {}\n        });\n\n        // Convert receiptDate from Date to string to match the Receipt interface\n        const formattedReceipts = receipts.map(receipt => ({\n            ...receipt,\n            receiptDate: receipt.receiptDate.toISOString().split('T')[0] // Convert Date to YYYY-MM-DD string\n        }));\n\n        return {\n            receipts: formattedReceipts,\n            totalReceipts,\n            totalPages: Math.ceil(totalReceipts / limit),\n            currentPage: page\n        };\n    } catch (error) {\n        console.error('Error fetching receipts:', error);\n        return {\n            receipts: [],\n            totalPages: 0,\n            currentPage: 1\n        };\n    }\n}\n\nexport default async function ReceiptsPage({\n    searchParams\n}: {\n    searchParams?: { page?: string; search?: string };\n}) {\n    const page = searchParams?.page ? parseInt(searchParams.page) : 1;\n    const search = searchParams?.search || '';\n    const { receipts, totalPages, currentPage } = await getReceipts(page, 10, search);\n\n    return (\n        <MainLayout>\n            <div>\n                <h1 className=\"text-2xl font-bold text-black mb-6\">Payment Receipts</h1>\n\n                <Suspense fallback={<LoadingSpinner />}>\n                    <ReceiptsClientWrapper\n                        initialReceipts={receipts}\n                        initialTotalPages={totalPages}\n                        initialCurrentPage={currentPage}\n                        initialSearch={search}\n                    />\n                </Suspense>\n            </div>\n        </MainLayout>\n    );\n}"],"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","ignoreList":[]}