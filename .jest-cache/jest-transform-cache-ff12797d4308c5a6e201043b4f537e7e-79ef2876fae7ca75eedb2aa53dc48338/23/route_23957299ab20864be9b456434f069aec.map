{"version":3,"names":["GET","req","params","cov_h10jxyh9u","f","token","s","headers","get","replace","b","_server","NextResponse","json","success","message","status","user","_authService","getUserFromToken","hasBasicView","permissions","includes","hasFullView","includeCosts","id","shopId","costField","result","_db","default","query","data","rows","error","console","Error","String"],"sources":["/Users/sachin/Documents/md-sports-/src/app/api/inventory/shop/[id]/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { requirePermission } from '@/lib/utils/middleware';\nimport { getUserFromToken } from '@/services/authService';\nimport db from '@/utils/db';\n\nexport async function GET(\n    req: NextRequest,\n    { params }: { params: { id: string } }\n) {\n    // Check for inventory view permissions\n    const token = req.headers.get('authorization')?.replace('Bearer ', '');\n    \n    if (!token) {\n        return NextResponse.json({\n            success: false,\n            message: 'Authentication required'\n        }, { status: 401 });\n    }\n\n    // Get user to check specific permissions\n    const user = await getUserFromToken(token);\n    if (!user) {\n        return NextResponse.json({\n            success: false,\n            message: 'Invalid token'\n        }, { status: 401 });\n    }\n\n    // Check if user has any inventory view permission\n    const hasBasicView = user.permissions?.includes('inventory:view:basic');\n    const hasFullView = user.permissions?.includes('inventory:view');\n    \n    if (!hasBasicView && !hasFullView) {\n        return NextResponse.json({\n            success: false,\n            message: 'Permission denied: inventory view access required'\n        }, { status: 403 });\n    }\n\n    // Determine if costs should be included\n    const includeCosts = hasFullView && !hasBasicView;\n\n    try {\n        // Get the shop ID safely\n        if (!params || !params.id) {\n            return NextResponse.json({\n                success: false,\n                message: 'Shop ID is required',\n            }, { status: 400 });\n        }\n\n        const shopId = params.id;\n\n        // Get inventory items for the shop with conditional cost inclusion\n        const costField = includeCosts ? 'i.shopspecificcost,' : '';\n        \n        const result = await db.query(\n            `SELECT \n                i.id,\n                i.\"productId\",\n                i.quantity,\n                p.id AS product_id,\n                p.name AS product_name,\n                p.description,\n                p.sku,\n                p.barcode,\n                p.price,\n                ${costField}\n                c.name AS category_name\n            FROM \n                \"InventoryItem\" i\n            JOIN \n                \"Product\" p ON i.\"productId\" = p.id\n            LEFT JOIN \n                \"Category\" c ON p.\"categoryId\" = c.id\n            WHERE \n                i.\"shopId\" = $1\n            ORDER BY\n                p.name`,\n            [shopId]\n        );\n\n        return NextResponse.json({\n            success: true,\n            data: result.rows\n        });\n    } catch (error) {\n        // Log the error\n        console.error(`Error fetching shop inventory (shop_id ${params?.id}):`, error);\n        return NextResponse.json({\n            success: false,\n            message: 'Failed to fetch shop inventory',\n            error: error instanceof Error ? error.message : String(error)\n        }, { status: 500 });\n    }\n}"],"mappingssB;;;;;;WAAAA,GAAA;;;;;iCALoB;;;iCAET;;;uEAClB;;;;;;;;;;;;;;;AAER,eAAeA,IAClBC,GAAgB,EAChB;EAAEC;AAAM,CAA8B;EAAA;EAAAC,aAAA,GAAAC,CAAA;EAEtC;EACA,MAAMC,KAAA;EAAA;EAAA,CAAAF,aAAA,GAAAG,CAAA,OAAQL,GAAA,CAAIM,OAAO,CAACC,GAAG,CAAC,kBAAkBC,OAAA,CAAQ,WAAW;EAAA;EAAAN,aAAA,GAAAG,CAAA;EAEnE,IAAI,CAACD,KAAA,EAAO;IAAA;IAAAF,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAG,CAAA;IACR,OAAOK,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MACrBC,OAAA,EAAS;MACTC,OAAA,EAAS;IACb,GAAG;MAAEC,MAAA,EAAQ;IAAI;EACrB;EAAA;EAAA;IAAAb,aAAA,GAAAO,CAAA;EAAA;EAEA;EACA,MAAMO,IAAA;EAAA;EAAA,CAAAd,aAAA,GAAAG,CAAA,QAAO,MAAM,IAAAY,YAAA,CAAAC,gBAAgB,EAACd,KAAA;EAAA;EAAAF,aAAA,GAAAG,CAAA;EACpC,IAAI,CAACW,IAAA,EAAM;IAAA;IAAAd,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAG,CAAA;IACP,OAAOK,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MACrBC,OAAA,EAAS;MACTC,OAAA,EAAS;IACb,GAAG;MAAEC,MAAA,EAAQ;IAAI;EACrB;EAAA;EAAA;IAAAb,aAAA,GAAAO,CAAA;EAAA;EAEA;EACA,MAAMU,YAAA;EAAA;EAAA,CAAAjB,aAAA,GAAAG,CAAA,QAAeW,IAAA,CAAKI,WAAW,EAAEC,QAAA,CAAS;EAChD,MAAMC,WAAA;EAAA;EAAA,CAAApB,aAAA,GAAAG,CAAA,QAAcW,IAAA,CAAKI,WAAW,EAAEC,QAAA,CAAS;EAAA;EAAAnB,aAAA,GAAAG,CAAA;EAE/C;EAAI;EAAA,CAAAH,aAAA,GAAAO,CAAA,WAACU,YAAA;EAAA;EAAA,CAAAjB,aAAA,GAAAO,CAAA,UAAgB,CAACa,WAAA,GAAa;IAAA;IAAApB,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAG,CAAA;IAC/B,OAAOK,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MACrBC,OAAA,EAAS;MACTC,OAAA,EAAS;IACb,GAAG;MAAEC,MAAA,EAAQ;IAAI;EACrB;EAAA;EAAA;IAAAb,aAAA,GAAAO,CAAA;EAAA;EAEA;EACA,MAAMc,YAAA;EAAA;EAAA,CAAArB,aAAA,GAAAG,CAAA;EAAe;EAAA,CAAAH,aAAA,GAAAO,CAAA,UAAAa,WAAA;EAAA;EAAA,CAAApB,aAAA,GAAAO,CAAA,UAAe,CAACU,YAAA;EAAA;EAAAjB,aAAA,GAAAG,CAAA;EAErC,IAAI;IAAA;IAAAH,aAAA,GAAAG,CAAA;IACA;IACA;IAAI;IAAA,CAAAH,aAAA,GAAAO,CAAA,WAACR,MAAA;IAAA;IAAA,CAAAC,aAAA,GAAAO,CAAA,UAAU,CAACR,MAAA,CAAOuB,EAAE,GAAE;MAAA;MAAAtB,aAAA,GAAAO,CAAA;MAAAP,aAAA,GAAAG,CAAA;MACvB,OAAOK,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;QACrBC,OAAA,EAAS;QACTC,OAAA,EAAS;MACb,GAAG;QAAEC,MAAA,EAAQ;MAAI;IACrB;IAAA;IAAA;MAAAb,aAAA,GAAAO,CAAA;IAAA;IAEA,MAAMgB,MAAA;IAAA;IAAA,CAAAvB,aAAA,GAAAG,CAAA,QAASJ,MAAA,CAAOuB,EAAE;IAExB;IACA,MAAME,SAAA;IAAA;IAAA,CAAAxB,aAAA,GAAAG,CAAA,QAAYkB,YAAA;IAAA;IAAA,CAAArB,aAAA,GAAAO,CAAA,UAAe;IAAA;IAAA,CAAAP,aAAA,GAAAO,CAAA,UAAwB;IAEzD,MAAMkB,MAAA;IAAA;IAAA,CAAAzB,aAAA,GAAAG,CAAA,QAAS,MAAMuB,GAAA,CAAAC,OAAE,CAACC,KAAK,CACzB;;;;;;;;;;kBAUMJ,SAAA;;;;;;;;;;;uBAWK,EACX,CAACD,MAAA,CAAO;IAAA;IAAAvB,aAAA,GAAAG,CAAA;IAGZ,OAAOK,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MACrBC,OAAA,EAAS;MACTkB,IAAA,EAAMJ,MAAA,CAAOK;IACjB;EACJ,EAAE,OAAOC,KAAA,EAAO;IAAA;IAAA/B,aAAA,GAAAG,CAAA;IACZ;IACA6B,OAAA,CAAQD,KAAK,CAAC,0CAA0ChC,MAAA,EAAQuB,EAAA,IAAM,EAAES,KAAA;IAAA;IAAA/B,aAAA,GAAAG,CAAA;IACxE,OAAOK,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MACrBC,OAAA,EAAS;MACTC,OAAA,EAAS;MACTmB,KAAA,EAAOA,KAAA,YAAiBE,KAAA;MAAA;MAAA,CAAAjC,aAAA,GAAAO,CAAA,WAAQwB,KAAA,CAAMnB,OAAO;MAAA;MAAA,CAAAZ,aAAA,GAAAO,CAAA,WAAG2B,MAAA,CAAOH,KAAA;IAC3D,GAAG;MAAElB,MAAA,EAAQ;IAAI;EACrB;AACJ","ignoreList":[]}