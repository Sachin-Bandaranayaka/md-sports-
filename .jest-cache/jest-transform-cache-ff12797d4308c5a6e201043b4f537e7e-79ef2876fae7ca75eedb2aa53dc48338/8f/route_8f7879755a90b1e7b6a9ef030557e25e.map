{"version":3,"names":["GET","request","cov_j5z2cl4kc","f","s","url","URL","startDate","searchParams","get","endDate","shopId","startDateTime","b","Date","setDate","getDate","endDateTime","whereCondition","createdAt","gte","lte","shops","_prisma","default","shop","findMany","where","id","undefined","select","name","location","is_active","orderBy","inventoryByShop","Promise","all","map","items","inventoryItem","totalItems","length","totalQuantity","reduce","sum","item","quantity","salesByShop","shopAnalytics","inventoryData","find","salesData","totalInventory","totalSales","total","inventoryValue","performanceMetrics","inventoryTurnover","salesGrowth","avgTicketSize","_server","NextResponse","json","success","data","timeRange","error","console","message","status"],"sources":["/Users/sachin/Documents/md-sports-/src/app/api/shops/analytics/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport prisma from '@/lib/prisma';\n\n// GET: Fetch analytics data for all shops\nexport async function GET(request: NextRequest) {\n    try {\n        // Get query parameters\n        const url = new URL(request.url);\n        const startDate = url.searchParams.get('startDate');\n        const endDate = url.searchParams.get('endDate');\n        const shopId = url.searchParams.get('shopId');\n\n        // Parse dates\n        const startDateTime = startDate ? new Date(startDate) : new Date(new Date().setDate(new Date().getDate() - 30));\n        const endDateTime = endDate ? new Date(endDate) : new Date();\n\n        // Build filter conditions\n        const whereCondition: any = {\n            createdAt: {\n                gte: startDateTime,\n                lte: endDateTime\n            }\n        };\n\n        if (shopId) {\n            whereCondition.shopId = shopId;\n        }\n\n        // Get all shops\n        const shops = await prisma.shop.findMany({\n            where: shopId ? { id: shopId } : undefined,\n            select: {\n                id: true,\n                name: true,\n                location: true,\n                is_active: true\n            },\n            orderBy: {\n                name: 'asc'\n            }\n        });\n\n        // Get inventory data\n        const inventoryByShop = await Promise.all(\n            shops.map(async (shop) => {\n                const items = await prisma.inventoryItem.findMany({\n                    where: {\n                        shopId: shop.id\n                    }\n                });\n\n                return {\n                    shopId: shop.id,\n                    totalItems: items.length,\n                    totalQuantity: items.reduce((sum, item) => sum + item.quantity, 0)\n                };\n            })\n        );\n\n        // Get sales data (from invoices)\n        const salesByShop: { shopId: number, total: number }[] = [];\n\n        // Combine data\n        const shopAnalytics = shops.map(shop => {\n            const inventoryData = inventoryByShop.find(item => item.shopId === shop.id);\n            const salesData = salesByShop.find(item => item.shopId === shop.id);\n\n            return {\n                ...shop,\n                totalInventory: inventoryData?.totalItems || 0,\n                totalSales: salesData?.total || 0,\n                inventoryValue: 0, // To be calculated in a real implementation with product prices\n                performanceMetrics: {\n                    inventoryTurnover: 0, // Calculated as COGS / Average Inventory\n                    salesGrowth: 0, // Calculated based on previous period\n                    avgTicketSize: 0 // Average sale amount\n                }\n            };\n        });\n\n        return NextResponse.json({\n            success: true,\n            data: shopAnalytics,\n            timeRange: {\n                startDate: startDateTime,\n                endDate: endDateTime\n            }\n        });\n    } catch (error) {\n        console.error('Error fetching shop analytics:', error);\n        return NextResponse.json(\n            { success: false, message: 'Failed to fetch shop analytics' },\n            { status: 500 }\n        );\n    }\n}"],"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","ignoreList":[]}