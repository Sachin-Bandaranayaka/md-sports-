6d09c76ff903f08259c7194badb1d72e
"use strict";

/* istanbul ignore next */
function cov_pkhwac4bv() {
  var path = "/Users/sachin/Documents/md-sports-/src/lib/models/InvoiceItem.ts";
  var hash = "6a8d35476faf3d1f8f8be83ea0d91390eb86e98e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/lib/models/InvoiceItem.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 19
        },
        end: {
          line: 11,
          column: 39
        }
      },
      "4": {
        start: {
          line: 12,
          column: 26
        },
        end: {
          line: 12,
          column: 68
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "6": {
        start: {
          line: 21,
          column: 31
        },
        end: {
          line: 21,
          column: 69
        }
      },
      "7": {
        start: {
          line: 22,
          column: 25
        },
        end: {
          line: 22,
          column: 56
        }
      },
      "8": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 40
        }
      },
      "9": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 78,
          column: 3
        }
      },
      "10": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 53
        }
      },
      "11": {
        start: {
          line: 79,
          column: 17
        },
        end: {
          line: 79,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 24
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 73,
            column: 24
          },
          end: {
            line: 73,
            column: 25
          }
        },
        loc: {
          start: {
            line: 73,
            column: 32
          },
          end: {
            line: 76,
            column: 9
          }
        },
        line: 73
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 35
          },
          end: {
            line: 14,
            column: 38
          }
        }, {
          start: {
            line: 14,
            column: 41
          },
          end: {
            line: 16,
            column: 5
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 14
          }
        }, {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 14,
            column: 32
          }
        }],
        line: 14
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/lib/models/InvoiceItem.ts"],
      sourcesContent: ["import { Model, DataTypes } from 'sequelize';\nimport sequelize from '../db';\n\nclass InvoiceItem extends Model {\n    public id!: number;\n    public invoiceId!: number;\n    public productId!: number;\n    public quantity!: number;\n    public unitPrice!: number;\n    public discount!: number;\n    public subtotal!: number;\n\n    // Custom instance methods\n    public calculateSubtotal(): number {\n        const discountAmount = this.unitPrice * (this.discount / 100);\n        const netPrice = this.unitPrice - discountAmount;\n        return this.quantity * netPrice;\n    }\n}\n\nInvoiceItem.init({\n    id: {\n        type: DataTypes.INTEGER,\n        autoIncrement: true,\n        primaryKey: true\n    },\n    invoiceId: {\n        type: DataTypes.INTEGER,\n        allowNull: false\n    },\n    productId: {\n        type: DataTypes.INTEGER,\n        allowNull: false\n    },\n    quantity: {\n        type: DataTypes.INTEGER,\n        allowNull: false,\n        validate: {\n            min: 1\n        }\n    },\n    unitPrice: {\n        type: DataTypes.DECIMAL(10, 2),\n        allowNull: false,\n        validate: {\n            min: 0\n        }\n    },\n    discount: {\n        type: DataTypes.DECIMAL(5, 2),\n        allowNull: false,\n        defaultValue: 0.00,\n        validate: {\n            min: 0,\n            max: 100\n        }\n    },\n    subtotal: {\n        type: DataTypes.DECIMAL(10, 2),\n        allowNull: false\n    }\n}, {\n    sequelize,\n    modelName: 'invoice_item',\n    tableName: 'invoice_items',\n    timestamps: false,\n    hooks: {\n        beforeValidate: (item: InvoiceItem) => {\n            // Calculate subtotal before saving\n            item.subtotal = item.calculateSubtotal();\n        }\n    }\n});\n\nexport default InvoiceItem; "],
      names: ["InvoiceItem", "Model", "calculateSubtotal", "discountAmount", "unitPrice", "discount", "netPrice", "quantity", "init", "id", "type", "DataTypes", "INTEGER", "autoIncrement", "primaryKey", "invoiceId", "allowNull", "productId", "validate", "min", "DECIMAL", "defaultValue", "max", "subtotal", "sequelize", "modelName", "tableName", "timestamps", "hooks", "beforeValidate", "item"],
      mappings: ";;;;+BA0EA;;;eAAA;;;2BA1EiC;2DACX;;;;;;AAEtB,MAAMA,oBAAoBC,gBAAK;IAS3B,0BAA0B;IACnBC,oBAA4B;QAC/B,MAAMC,iBAAiB,IAAI,CAACC,SAAS,GAAI,CAAA,IAAI,CAACC,QAAQ,GAAG,GAAE;QAC3D,MAAMC,WAAW,IAAI,CAACF,SAAS,GAAGD;QAClC,OAAO,IAAI,CAACI,QAAQ,GAAGD;IAC3B;AACJ;AAEAN,YAAYQ,IAAI,CAAC;IACbC,IAAI;QACAC,MAAMC,oBAAS,CAACC,OAAO;QACvBC,eAAe;QACfC,YAAY;IAChB;IACAC,WAAW;QACPL,MAAMC,oBAAS,CAACC,OAAO;QACvBI,WAAW;IACf;IACAC,WAAW;QACPP,MAAMC,oBAAS,CAACC,OAAO;QACvBI,WAAW;IACf;IACAT,UAAU;QACNG,MAAMC,oBAAS,CAACC,OAAO;QACvBI,WAAW;QACXE,UAAU;YACNC,KAAK;QACT;IACJ;IACAf,WAAW;QACPM,MAAMC,oBAAS,CAACS,OAAO,CAAC,IAAI;QAC5BJ,WAAW;QACXE,UAAU;YACNC,KAAK;QACT;IACJ;IACAd,UAAU;QACNK,MAAMC,oBAAS,CAACS,OAAO,CAAC,GAAG;QAC3BJ,WAAW;QACXK,cAAc;QACdH,UAAU;YACNC,KAAK;YACLG,KAAK;QACT;IACJ;IACAC,UAAU;QACNb,MAAMC,oBAAS,CAACS,OAAO,CAAC,IAAI;QAC5BJ,WAAW;IACf;AACJ,GAAG;IACCQ,WAAAA,WAAS;IACTC,WAAW;IACXC,WAAW;IACXC,YAAY;IACZC,OAAO;QACHC,gBAAgB,CAACC;YACb,mCAAmC;YACnCA,KAAKP,QAAQ,GAAGO,KAAK5B,iBAAiB;QAC1C;IACJ;AACJ;MAEA,WAAeF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6a8d35476faf3d1f8f8be83ea0d91390eb86e98e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_pkhwac4bv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_pkhwac4bv();
cov_pkhwac4bv().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_pkhwac4bv().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_pkhwac4bv().f[0]++;
    cov_pkhwac4bv().s[2]++;
    return _default;
  }
});
const _sequelize =
/* istanbul ignore next */
(cov_pkhwac4bv().s[3]++, require("sequelize"));
const _db =
/* istanbul ignore next */
(/*#__PURE__*/cov_pkhwac4bv().s[4]++, _interop_require_default(require("../db")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_pkhwac4bv().f[1]++;
  cov_pkhwac4bv().s[5]++;
  return /* istanbul ignore next */(cov_pkhwac4bv().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_pkhwac4bv().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_pkhwac4bv().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_pkhwac4bv().b[0][1]++, {
    default: obj
  });
}
class InvoiceItem extends
/* istanbul ignore next */
(_sequelize.Model) {
  // Custom instance methods
  calculateSubtotal() {
    /* istanbul ignore next */
    cov_pkhwac4bv().f[2]++;
    const discountAmount =
    /* istanbul ignore next */
    (cov_pkhwac4bv().s[6]++, this.unitPrice * (this.discount / 100));
    const netPrice =
    /* istanbul ignore next */
    (cov_pkhwac4bv().s[7]++, this.unitPrice - discountAmount);
    /* istanbul ignore next */
    cov_pkhwac4bv().s[8]++;
    return this.quantity * netPrice;
  }
}
/* istanbul ignore next */
cov_pkhwac4bv().s[9]++;
InvoiceItem.init({
  id: {
    type: _sequelize.DataTypes.INTEGER,
    autoIncrement: true,
    primaryKey: true
  },
  invoiceId: {
    type: _sequelize.DataTypes.INTEGER,
    allowNull: false
  },
  productId: {
    type: _sequelize.DataTypes.INTEGER,
    allowNull: false
  },
  quantity: {
    type: _sequelize.DataTypes.INTEGER,
    allowNull: false,
    validate: {
      min: 1
    }
  },
  unitPrice: {
    type: _sequelize.DataTypes.DECIMAL(10, 2),
    allowNull: false,
    validate: {
      min: 0
    }
  },
  discount: {
    type: _sequelize.DataTypes.DECIMAL(5, 2),
    allowNull: false,
    defaultValue: 0.00,
    validate: {
      min: 0,
      max: 100
    }
  },
  subtotal: {
    type: _sequelize.DataTypes.DECIMAL(10, 2),
    allowNull: false
  }
}, {
  sequelize: _db.default,
  modelName: "invoice_item",
  tableName: "invoice_items",
  timestamps: false,
  hooks: {
    beforeValidate: item => {
      /* istanbul ignore next */
      cov_pkhwac4bv().f[3]++;
      cov_pkhwac4bv().s[10]++;
      // Calculate subtotal before saving
      item.subtotal = item.calculateSubtotal();
    }
  }
});
const _default =
/* istanbul ignore next */
(cov_pkhwac4bv().s[11]++, InvoiceItem);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGVmYXVsdCIsIkludm9pY2VJdGVtIiwiX3NlcXVlbGl6ZSIsIk1vZGVsIiwiY2FsY3VsYXRlU3VidG90YWwiLCJjb3ZfcGtod2FjNGJ2IiwiZiIsImRpc2NvdW50QW1vdW50IiwicyIsInVuaXRQcmljZSIsImRpc2NvdW50IiwibmV0UHJpY2UiLCJxdWFudGl0eSIsImluaXQiLCJpZCIsInR5cGUiLCJEYXRhVHlwZXMiLCJJTlRFR0VSIiwiYXV0b0luY3JlbWVudCIsInByaW1hcnlLZXkiLCJpbnZvaWNlSWQiLCJhbGxvd051bGwiLCJwcm9kdWN0SWQiLCJ2YWxpZGF0ZSIsIm1pbiIsIkRFQ0lNQUwiLCJkZWZhdWx0VmFsdWUiLCJtYXgiLCJzdWJ0b3RhbCIsInNlcXVlbGl6ZSIsIl9kYiIsImRlZmF1bHQiLCJtb2RlbE5hbWUiLCJ0YWJsZU5hbWUiLCJ0aW1lc3RhbXBzIiwiaG9va3MiLCJiZWZvcmVWYWxpZGF0ZSIsIml0ZW0iXSwic291cmNlcyI6WyIvVXNlcnMvc2FjaGluL0RvY3VtZW50cy9tZC1zcG9ydHMtL3NyYy9saWIvbW9kZWxzL0ludm9pY2VJdGVtLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZGVsLCBEYXRhVHlwZXMgfSBmcm9tICdzZXF1ZWxpemUnO1xuaW1wb3J0IHNlcXVlbGl6ZSBmcm9tICcuLi9kYic7XG5cbmNsYXNzIEludm9pY2VJdGVtIGV4dGVuZHMgTW9kZWwge1xuICAgIHB1YmxpYyBpZCE6IG51bWJlcjtcbiAgICBwdWJsaWMgaW52b2ljZUlkITogbnVtYmVyO1xuICAgIHB1YmxpYyBwcm9kdWN0SWQhOiBudW1iZXI7XG4gICAgcHVibGljIHF1YW50aXR5ITogbnVtYmVyO1xuICAgIHB1YmxpYyB1bml0UHJpY2UhOiBudW1iZXI7XG4gICAgcHVibGljIGRpc2NvdW50ITogbnVtYmVyO1xuICAgIHB1YmxpYyBzdWJ0b3RhbCE6IG51bWJlcjtcblxuICAgIC8vIEN1c3RvbSBpbnN0YW5jZSBtZXRob2RzXG4gICAgcHVibGljIGNhbGN1bGF0ZVN1YnRvdGFsKCk6IG51bWJlciB7XG4gICAgICAgIGNvbnN0IGRpc2NvdW50QW1vdW50ID0gdGhpcy51bml0UHJpY2UgKiAodGhpcy5kaXNjb3VudCAvIDEwMCk7XG4gICAgICAgIGNvbnN0IG5ldFByaWNlID0gdGhpcy51bml0UHJpY2UgLSBkaXNjb3VudEFtb3VudDtcbiAgICAgICAgcmV0dXJuIHRoaXMucXVhbnRpdHkgKiBuZXRQcmljZTtcbiAgICB9XG59XG5cbkludm9pY2VJdGVtLmluaXQoe1xuICAgIGlkOiB7XG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSLFxuICAgICAgICBhdXRvSW5jcmVtZW50OiB0cnVlLFxuICAgICAgICBwcmltYXJ5S2V5OiB0cnVlXG4gICAgfSxcbiAgICBpbnZvaWNlSWQ6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2VcbiAgICB9LFxuICAgIHByb2R1Y3RJZDoge1xuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZVxuICAgIH0sXG4gICAgcXVhbnRpdHk6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICAgIHZhbGlkYXRlOiB7XG4gICAgICAgICAgICBtaW46IDFcbiAgICAgICAgfVxuICAgIH0sXG4gICAgdW5pdFByaWNlOiB7XG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5ERUNJTUFMKDEwLCAyKSxcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgICAgdmFsaWRhdGU6IHtcbiAgICAgICAgICAgIG1pbjogMFxuICAgICAgICB9XG4gICAgfSxcbiAgICBkaXNjb3VudDoge1xuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuREVDSU1BTCg1LCAyKSxcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgICAgZGVmYXVsdFZhbHVlOiAwLjAwLFxuICAgICAgICB2YWxpZGF0ZToge1xuICAgICAgICAgICAgbWluOiAwLFxuICAgICAgICAgICAgbWF4OiAxMDBcbiAgICAgICAgfVxuICAgIH0sXG4gICAgc3VidG90YWw6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLkRFQ0lNQUwoMTAsIDIpLFxuICAgICAgICBhbGxvd051bGw6IGZhbHNlXG4gICAgfVxufSwge1xuICAgIHNlcXVlbGl6ZSxcbiAgICBtb2RlbE5hbWU6ICdpbnZvaWNlX2l0ZW0nLFxuICAgIHRhYmxlTmFtZTogJ2ludm9pY2VfaXRlbXMnLFxuICAgIHRpbWVzdGFtcHM6IGZhbHNlLFxuICAgIGhvb2tzOiB7XG4gICAgICAgIGJlZm9yZVZhbGlkYXRlOiAoaXRlbTogSW52b2ljZUl0ZW0pID0+IHtcbiAgICAgICAgICAgIC8vIENhbGN1bGF0ZSBzdWJ0b3RhbCBiZWZvcmUgc2F2aW5nXG4gICAgICAgICAgICBpdGVtLnN1YnRvdGFsID0gaXRlbS5jYWxjdWxhdGVTdWJ0b3RhbCgpO1xuICAgICAgICB9XG4gICAgfVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IEludm9pY2VJdGVtOyAiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0JB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