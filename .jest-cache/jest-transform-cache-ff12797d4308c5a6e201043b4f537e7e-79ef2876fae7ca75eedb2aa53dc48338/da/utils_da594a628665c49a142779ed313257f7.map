{"version":3,"names":["cn","cov_t8nhy17cm","f","s","debounce","formatCurrency","formatDate","formatNumber","generateCacheKey","isEmpty","sleep","throttle","inputs","_tailwindmerge","twMerge","_clsx","clsx","dateString","date","Date","toLocaleDateString","year","month","day","hour","minute","func","wait","timeout","args","b","clearTimeout","setTimeout","limit","inThrottle","amount","currency","Intl","NumberFormat","style","format","num","endpoint","params","sortedParams","Object","keys","sort","reduce","result","key","JSON","stringify","ms","Promise","resolve","value","trim","Array","isArray","length"],"sources":["/Users/sachin/Documents/md-sports-/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n/**\n * Format a date string to a more readable format\n * @param dateString - The date string to format\n * @returns Formatted date string\n */\nexport function formatDate(dateString: string | Date): string {\n  const date = new Date(dateString);\n  return date.toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric'\n  });\n}\n\n/**\n * Debounce function to limit the rate at which a function can fire\n * @param func - The function to debounce\n * @param wait - The number of milliseconds to delay\n * @returns Debounced function\n */\nexport function debounce<T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): (...args: Parameters<T>) => void {\n  let timeout: NodeJS.Timeout | null = null;\n\n  return (...args: Parameters<T>) => {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n\n    timeout = setTimeout(() => {\n      func(...args);\n    }, wait);\n  };\n}\n\n/**\n * Throttle function to limit the rate at which a function can fire\n * @param func - The function to throttle\n * @param limit - The number of milliseconds to limit\n * @returns Throttled function\n */\nexport function throttle<T extends (...args: any[]) => any>(\n  func: T,\n  limit: number\n): (...args: Parameters<T>) => void {\n  let inThrottle: boolean;\n\n  return (...args: Parameters<T>) => {\n    if (!inThrottle) {\n      func(...args);\n      inThrottle = true;\n      setTimeout(() => (inThrottle = false), limit);\n    }\n  };\n}\n\n/**\n * Format currency values\n * @param amount - The amount to format\n * @param currency - The currency code (default: USD)\n * @returns Formatted currency string\n */\nexport function formatCurrency(amount: number, currency: string = 'USD'): string {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency,\n  }).format(amount);\n}\n\n/**\n * Format numbers with commas\n * @param num - The number to format\n * @returns Formatted number string\n */\nexport function formatNumber(num: number): string {\n  return new Intl.NumberFormat('en-US').format(num);\n}\n\n/**\n * Generate a cache key for API responses\n * @param endpoint - The API endpoint\n * @param params - Query parameters\n * @returns Cache key string\n */\nexport function generateCacheKey(endpoint: string, params: Record<string, any> = {}): string {\n  const sortedParams = Object.keys(params)\n    .sort()\n    .reduce((result, key) => {\n      result[key] = params[key];\n      return result;\n    }, {} as Record<string, any>);\n\n  return `${endpoint}:${JSON.stringify(sortedParams)}`;\n}\n\n/**\n * Sleep function for async operations\n * @param ms - Milliseconds to sleep\n * @returns Promise that resolves after the specified time\n */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * Check if a value is empty (null, undefined, empty string, empty array, empty object)\n * @param value - The value to check\n * @returns True if empty, false otherwise\n */\nexport function isEmpty(value: any): boolean {\n  if (value == null) return true;\n  if (typeof value === 'string') return value.trim() === '';\n  if (Array.isArray(value)) return value.length === 0;\n  if (typeof value === 'object') return Object.keys(value).length === 0;\n  return false;\n}"],"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","ignoreList":[]}