{"version":3,"names":["cov_18kbsl426e","actualCoverage","s","DashboardCharts","COLORS","dummyShopPerformance","name","sales","stock","dummyInventoryDistribution","value","dummyMonthlySales","month","shopPerformance","inventoryDistribution","monthlySales","f","shopsData","b","inventoryData","salesData","_jsxruntime","jsxs","Fragment","className","jsx","_recharts","ResponsiveContainer","width","height","BarChart","data","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","PieChart","Pie","cx","cy","labelLine","label","percent","toFixed","outerRadius","map","entry","index","Cell","length","LineChart","Line","type","stroke","activeDot","r","shop","toLocaleString"],"sources":["/Users/sachin/Documents/md-sports-/src/app/(protected)/dashboard/components/DashboardCharts.tsx"],"sourcesContent":["'use client';\n\nimport {\n    BarChart,\n    Bar,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    ResponsiveContainer,\n    PieChart,\n    Pie,\n    Cell,\n    LineChart,\n    Line\n} from 'recharts';\n\n// Types for our data\ninterface ShopPerformance {\n    name: string;\n    sales: number;\n    stock: number;\n}\n\ninterface InventoryCategory {\n    name: string;\n    value: number;\n}\n\ninterface MonthlySales {\n    month: string;\n    sales: number;\n}\n\ninterface DashboardChartsProps {\n    shopPerformance: ShopPerformance[] | null;\n    inventoryDistribution: InventoryCategory[] | null;\n    monthlySales: MonthlySales[] | null;\n}\n\n// Colors for pie chart\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\n\n// Dummy data for fallbacks\nconst dummyShopPerformance: ShopPerformance[] = [\n    { name: 'Colombo Shop', sales: 125000, stock: 450 },\n    { name: 'Kandy Shop', sales: 98500, stock: 320 },\n    { name: 'Galle Shop', sales: 75200, stock: 280 },\n    { name: 'Jaffna Shop', sales: 62800, stock: 210 },\n];\n\nconst dummyInventoryDistribution: InventoryCategory[] = [\n    { name: 'Cricket', value: 350 },\n    { name: 'Football', value: 280 },\n    { name: 'Basketball', value: 200 },\n    { name: 'Tennis', value: 150 },\n    { name: 'Swimming', value: 100 },\n];\n\nconst dummyMonthlySales: MonthlySales[] = [\n    { month: 'Jan', sales: 85000 },\n    { month: 'Feb', sales: 92000 },\n    { month: 'Mar', sales: 88000 },\n    { month: 'Apr', sales: 99000 },\n    { month: 'May', sales: 115000 },\n    { month: 'Jun', sales: 125000 },\n];\n\nexport default function DashboardCharts({\n    shopPerformance,\n    inventoryDistribution,\n    monthlySales\n}: DashboardChartsProps) {\n    // Use provided data or fallback to dummy data\n    const shopsData = shopPerformance || dummyShopPerformance;\n    const inventoryData = inventoryDistribution || dummyInventoryDistribution;\n    const salesData = monthlySales || dummyMonthlySales;\n\n    return (\n        <>\n            {/* Charts Row */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                {/* Shop Sales Chart */}\n                <div className=\"bg-tertiary p-6 rounded-lg shadow-sm border border-gray-200\">\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Shop Sales Performance</h3>\n                    <div className=\"h-80\">\n                        <ResponsiveContainer width=\"100%\" height=\"100%\">\n                            <BarChart\n                                data={shopsData}\n                                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                            >\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"name\" />\n                                <YAxis />\n                                <Tooltip />\n                                <Legend />\n                                <Bar dataKey=\"sales\" name=\"Sales (Rs.)\" fill=\"#8884d8\" />\n                            </BarChart>\n                        </ResponsiveContainer>\n                    </div>\n                </div>\n\n                {/* Inventory Distribution */}\n                <div className=\"bg-tertiary p-6 rounded-lg shadow-sm border border-gray-200\">\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Inventory Distribution</h3>\n                    <div className=\"h-80\">\n                        <ResponsiveContainer width=\"100%\" height=\"100%\">\n                            <PieChart>\n                                <Pie\n                                    data={inventoryData}\n                                    cx=\"50%\"\n                                    cy=\"50%\"\n                                    labelLine={false}\n                                    label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\n                                    outerRadius={80}\n                                    fill=\"#8884d8\"\n                                    dataKey=\"value\"\n                                >\n                                    {inventoryData.map((entry, index) => (\n                                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                                    ))}\n                                </Pie>\n                                <Tooltip />\n                                <Legend />\n                            </PieChart>\n                        </ResponsiveContainer>\n                    </div>\n                </div>\n            </div>\n\n            {/* Monthly Sales Trend */}\n            <div className=\"bg-tertiary p-6 rounded-lg shadow-sm border border-gray-200\">\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Monthly Sales Trend</h3>\n                <div className=\"h-80\">\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <LineChart\n                            data={salesData}\n                            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                        >\n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"month\" />\n                            <YAxis />\n                            <Tooltip />\n                            <Legend />\n                            <Line\n                                type=\"monotone\"\n                                dataKey=\"sales\"\n                                name=\"Monthly Sales (Rs.)\"\n                                stroke=\"#4ade80\"\n                                activeDot={{ r: 8 }}\n                            />\n                        </LineChart>\n                    </ResponsiveContainer>\n                </div>\n            </div>\n\n            {/* Shop Performance Table */}\n            <div className=\"bg-tertiary rounded-lg shadow-sm border border-gray-200\">\n                <div className=\"flex justify-between items-center p-6 border-b border-gray-200\">\n                    <h3 className=\"text-lg font-medium text-gray-900\">Shop Performance</h3>\n                    <button className=\"text-sm text-primary hover:text-primary-dark\">View All Shops</button>\n                </div>\n                <div className=\"overflow-x-auto\">\n                    <table className=\"w-full\">\n                        <thead className=\"bg-gray-50\">\n                            <tr>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Shop Name</th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Sales (Last 30 days)</th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Current Stock</th>\n                                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody className=\"bg-tertiary divide-y divide-gray-200\">\n                            {shopsData.map((shop, index) => (\n                                <tr key={index}>\n                                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{shop.name}</td>\n                                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">Rs. {shop.sales.toLocaleString()}</td>\n                                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{shop.stock} items</td>\n                                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-primary hover:text-primary-dark\"><button>View</button></td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </>\n    );\n} "],"mappings":"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","ignoreList":[]}