5f76183fc26a68aec58852a960ec315d
"use client";
"use strict";

/* istanbul ignore next */
function cov_1ky07wy9sy() {
  var path = "/Users/sachin/Documents/md-sports-/src/components/ui/Input.tsx";
  var hash = "5fb6260f9e5d0b54bd7f2afeb08733455d148fd3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/components/ui/Input.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 21
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 13,
          column: 41
        }
      },
      "5": {
        start: {
          line: 14,
          column: 29
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "6": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 51
        }
      },
      "7": {
        start: {
          line: 16,
          column: 39
        },
        end: {
          line: 16,
          column: 51
        }
      },
      "8": {
        start: {
          line: 17,
          column: 28
        },
        end: {
          line: 17,
          column: 41
        }
      },
      "9": {
        start: {
          line: 18,
          column: 27
        },
        end: {
          line: 18,
          column: 40
        }
      },
      "10": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 21,
          column: 20
        }
      },
      "11": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 66
        }
      },
      "12": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "13": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 19
        }
      },
      "14": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "15": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 30,
          column: 10
        }
      },
      "16": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 53
        }
      },
      "17": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "18": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 30
        }
      },
      "19": {
        start: {
          line: 36,
          column: 17
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "20": {
        start: {
          line: 39,
          column: 32
        },
        end: {
          line: 39,
          column: 88
        }
      },
      "21": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "22": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "23": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 42,
          column: 95
        }
      },
      "24": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 47,
          column: 13
        }
      },
      "25": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 57
        }
      },
      "26": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 39
        }
      },
      "27": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 25
        }
      },
      "28": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "29": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 31
        }
      },
      "30": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 18
        }
      },
      "31": {
        start: {
          line: 56,
          column: 28
        },
        end: {
          line: 78,
          column: 2
        }
      },
      "32": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 77,
          column: 7
        }
      },
      "33": {
        start: {
          line: 79,
          column: 0
        },
        end: {
          line: 79,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 33
          }
        },
        loc: {
          start: {
            line: 15,
            column: 47
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 39
          },
          end: {
            line: 19,
            column: 40
          }
        },
        loc: {
          start: {
            line: 19,
            column: 61
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 34
          }
        },
        loc: {
          start: {
            line: 23,
            column: 53
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 56,
            column: 51
          },
          end: {
            line: 56,
            column: 52
          }
        },
        loc: {
          start: {
            line: 56,
            column: 107
          },
          end: {
            line: 78,
            column: 1
          }
        },
        line: 56
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 15
          },
          end: {
            line: 20,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 29
          },
          end: {
            line: 20,
            column: 45
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 65
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 20
          }
        }, {
          start: {
            line: 24,
            column: 24
          },
          end: {
            line: 24,
            column: 27
          }
        }, {
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 24,
            column: 45
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "5": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 20
          }
        }, {
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 27,
            column: 47
          }
        }, {
          start: {
            line: 27,
            column: 51
          },
          end: {
            line: 27,
            column: 76
          }
        }],
        line: 27
      },
      "6": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "7": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 13
          }
        }, {
          start: {
            line: 33,
            column: 17
          },
          end: {
            line: 33,
            column: 31
          }
        }],
        line: 33
      },
      "8": {
        loc: {
          start: {
            line: 39,
            column: 32
          },
          end: {
            line: 39,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 32
          },
          end: {
            line: 39,
            column: 53
          }
        }, {
          start: {
            line: 39,
            column: 57
          },
          end: {
            line: 39,
            column: 88
          }
        }],
        line: 39
      },
      "9": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "10": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 29
          }
        }, {
          start: {
            line: 41,
            column: 33
          },
          end: {
            line: 41,
            column: 79
          }
        }],
        line: 41
      },
      "11": {
        loc: {
          start: {
            line: 42,
            column: 23
          },
          end: {
            line: 42,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 42,
            column: 47
          },
          end: {
            line: 42,
            column: 88
          }
        }, {
          start: {
            line: 42,
            column: 91
          },
          end: {
            line: 42,
            column: 95
          }
        }],
        line: 42
      },
      "12": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 47,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 47,
            column: 13
          }
        }, {
          start: {
            line: 45,
            column: 19
          },
          end: {
            line: 47,
            column: 13
          }
        }],
        line: 43
      },
      "13": {
        loc: {
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 43,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 43,
            column: 20
          }
        }, {
          start: {
            line: 43,
            column: 25
          },
          end: {
            line: 43,
            column: 33
          }
        }, {
          start: {
            line: 43,
            column: 37
          },
          end: {
            line: 43,
            column: 45
          }
        }],
        line: 43
      },
      "14": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "15": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 64,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 60,
            column: 17
          }
        }, {
          start: {
            line: 60,
            column: 35
          },
          end: {
            line: 64,
            column: 14
          }
        }],
        line: 60
      },
      "16": {
        loc: {
          start: {
            line: 68,
            column: 279
          },
          end: {
            line: 68,
            column: 344
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 279
          },
          end: {
            line: 68,
            column: 284
          }
        }, {
          start: {
            line: 68,
            column: 288
          },
          end: {
            line: 68,
            column: 344
          }
        }],
        line: 68
      },
      "17": {
        loc: {
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 75,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 72,
            column: 17
          }
        }, {
          start: {
            line: 72,
            column: 35
          },
          end: {
            line: 75,
            column: 14
          }
        }],
        line: 72
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/components/ui/Input.tsx"],
      sourcesContent: ["'use client';\n\nimport { cn } from '@/lib/utils/cn';\nimport React, { InputHTMLAttributes, forwardRef } from 'react';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    error?: string;\n    label?: string;\n}\n\nconst Input = forwardRef<HTMLInputElement, InputProps>(\n    ({ className, type, error, label, id, ...props }, ref) => {\n        return (\n            <div className=\"space-y-1\">\n                {label && (\n                    <label\n                        htmlFor={id}\n                        className=\"block text-sm font-medium text-black\"\n                    >\n                        {label}\n                    </label>\n                )}\n                <input\n                    type={type}\n                    id={id}\n                    className={cn(\n                        'flex h-10 w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-sm text-black placeholder-black shadow-sm focus:outline-none focus:border-primary focus:ring-1 focus:ring-primary disabled:cursor-not-allowed disabled:opacity-50',\n                        error && 'border-red-500 focus:border-red-500 focus:ring-red-500',\n                        className\n                    )}\n                    ref={ref}\n                    {...props}\n                />\n                {error && (\n                    <p className=\"text-sm text-red-500 mt-1\">{error}</p>\n                )}\n            </div>\n        );\n    }\n);\n\nInput.displayName = 'Input';\n\nexport { Input }; "],
      names: ["Input", "forwardRef", "className", "type", "error", "label", "id", "props", "ref", "div", "htmlFor", "input", "cn", "p", "displayName"],
      mappings: "AAAA;;;;;+BA2CSA;;;eAAAA;;;;oBAzCU;+DACoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOvD,MAAMA,sBAAQC,IAAAA,iBAAU,EACpB,CAAC,EAAEC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,EAAE,EAAE,GAAGC,OAAO,EAAEC;IAC9C,qBACI,sBAACC;QAAIP,WAAU;;YACVG,uBACG,qBAACA;gBACGK,SAASJ;gBACTJ,WAAU;0BAETG;;0BAGT,qBAACM;gBACGR,MAAMA;gBACNG,IAAIA;gBACJJ,WAAWU,IAAAA,MAAE,EACT,gPACAR,SAAS,0DACTF;gBAEJM,KAAKA;gBACJ,GAAGD,KAAK;;YAEZH,uBACG,qBAACS;gBAAEX,WAAU;0BAA6BE;;;;AAI1D;AAGJJ,MAAMc,WAAW,GAAG"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5fb6260f9e5d0b54bd7f2afeb08733455d148fd3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ky07wy9sy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ky07wy9sy();
cov_1ky07wy9sy().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ky07wy9sy().s[1]++;
Object.defineProperty(exports, "Input", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1ky07wy9sy().f[0]++;
    cov_1ky07wy9sy().s[2]++;
    return Input;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1ky07wy9sy().s[3]++, require("react/jsx-runtime"));
const _cn =
/* istanbul ignore next */
(cov_1ky07wy9sy().s[4]++, require("../../lib/utils/cn"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1ky07wy9sy().s[5]++, _interop_require_wildcard(require("react")));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1ky07wy9sy().f[1]++;
  cov_1ky07wy9sy().s[6]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1ky07wy9sy().b[0][0]++;
    cov_1ky07wy9sy().s[7]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1ky07wy9sy().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1ky07wy9sy().s[8]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1ky07wy9sy().s[9]++, new WeakMap());
  /* istanbul ignore next */
  cov_1ky07wy9sy().s[10]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1ky07wy9sy().f[2]++;
    cov_1ky07wy9sy().s[11]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1ky07wy9sy().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1ky07wy9sy().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1ky07wy9sy().f[3]++;
  cov_1ky07wy9sy().s[12]++;
  if (
  /* istanbul ignore next */
  (cov_1ky07wy9sy().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1ky07wy9sy().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1ky07wy9sy().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1ky07wy9sy().b[2][0]++;
    cov_1ky07wy9sy().s[13]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1ky07wy9sy().b[2][1]++;
  }
  cov_1ky07wy9sy().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_1ky07wy9sy().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1ky07wy9sy().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1ky07wy9sy().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1ky07wy9sy().b[4][0]++;
    cov_1ky07wy9sy().s[15]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1ky07wy9sy().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1ky07wy9sy().s[16]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1ky07wy9sy().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_1ky07wy9sy().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1ky07wy9sy().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1ky07wy9sy().b[6][0]++;
    cov_1ky07wy9sy().s[18]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1ky07wy9sy().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1ky07wy9sy().s[19]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1ky07wy9sy().s[20]++,
  /* istanbul ignore next */
  (cov_1ky07wy9sy().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1ky07wy9sy().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1ky07wy9sy().s[21]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1ky07wy9sy().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_1ky07wy9sy().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1ky07wy9sy().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1ky07wy9sy().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1ky07wy9sy().s[23]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1ky07wy9sy().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1ky07wy9sy().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1ky07wy9sy().s[24]++;
      if (
      /* istanbul ignore next */
      (cov_1ky07wy9sy().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1ky07wy9sy().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1ky07wy9sy().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1ky07wy9sy().b[12][0]++;
        cov_1ky07wy9sy().s[25]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1ky07wy9sy().b[12][1]++;
        cov_1ky07wy9sy().s[26]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ky07wy9sy().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1ky07wy9sy().s[27]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1ky07wy9sy().s[28]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1ky07wy9sy().b[14][0]++;
    cov_1ky07wy9sy().s[29]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1ky07wy9sy().b[14][1]++;
  }
  cov_1ky07wy9sy().s[30]++;
  return newObj;
}
const Input =
/* istanbul ignore next */
(/*#__PURE__*/cov_1ky07wy9sy().s[31]++, (0, _react.forwardRef)(({
  className,
  type,
  error,
  label,
  id,
  ...props
}, ref) => {
  /* istanbul ignore next */
  cov_1ky07wy9sy().f[4]++;
  cov_1ky07wy9sy().s[32]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-1",
    children: [
    /* istanbul ignore next */
    (cov_1ky07wy9sy().b[15][0]++, label) &&
    /* istanbul ignore next */
    (cov_1ky07wy9sy().b[15][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("label", {
      htmlFor: id,
      className: "block text-sm font-medium text-black",
      children: label
    })), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
      type: type,
      id: id,
      className: (0, _cn.cn)("flex h-10 w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-sm text-black placeholder-black shadow-sm focus:outline-none focus:border-primary focus:ring-1 focus:ring-primary disabled:cursor-not-allowed disabled:opacity-50",
      /* istanbul ignore next */
      (cov_1ky07wy9sy().b[16][0]++, error) &&
      /* istanbul ignore next */
      (cov_1ky07wy9sy().b[16][1]++, "border-red-500 focus:border-red-500 focus:ring-red-500"), className),
      ref: ref,
      ...props
    }),
    /* istanbul ignore next */
    (cov_1ky07wy9sy().b[17][0]++, error) &&
    /* istanbul ignore next */
    (cov_1ky07wy9sy().b[17][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
      className: "text-sm text-red-500 mt-1",
      children: error
    }))]
  });
}));
/* istanbul ignore next */
cov_1ky07wy9sy().s[33]++;
Input.displayName = "Input";
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJJbnB1dCIsImNvdl8xa3kwN3d5OXN5IiwicyIsIl9yZWFjdCIsImZvcndhcmRSZWYiLCJjbGFzc05hbWUiLCJ0eXBlIiwiZXJyb3IiLCJsYWJlbCIsImlkIiwicHJvcHMiLCJyZWYiLCJmIiwiX2pzeHJ1bnRpbWUiLCJqc3hzIiwiYiIsImpzeCIsImh0bWxGb3IiLCJfY24iLCJjbiIsImRpc3BsYXlOYW1lIl0sInNvdXJjZXMiOlsiL1VzZXJzL3NhY2hpbi9Eb2N1bWVudHMvbWQtc3BvcnRzLS9zcmMvY29tcG9uZW50cy91aS9JbnB1dC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgeyBjbiB9IGZyb20gJ0AvbGliL3V0aWxzL2NuJztcbmltcG9ydCBSZWFjdCwgeyBJbnB1dEhUTUxBdHRyaWJ1dGVzLCBmb3J3YXJkUmVmIH0gZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgaW50ZXJmYWNlIElucHV0UHJvcHMgZXh0ZW5kcyBJbnB1dEhUTUxBdHRyaWJ1dGVzPEhUTUxJbnB1dEVsZW1lbnQ+IHtcbiAgICBlcnJvcj86IHN0cmluZztcbiAgICBsYWJlbD86IHN0cmluZztcbn1cblxuY29uc3QgSW5wdXQgPSBmb3J3YXJkUmVmPEhUTUxJbnB1dEVsZW1lbnQsIElucHV0UHJvcHM+KFxuICAgICh7IGNsYXNzTmFtZSwgdHlwZSwgZXJyb3IsIGxhYmVsLCBpZCwgLi4ucHJvcHMgfSwgcmVmKSA9PiB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktMVwiPlxuICAgICAgICAgICAgICAgIHtsYWJlbCAmJiAoXG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgaHRtbEZvcj17aWR9XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJibG9jayB0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtYmxhY2tcIlxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICB7bGFiZWx9XG4gICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgdHlwZT17dHlwZX1cbiAgICAgICAgICAgICAgICAgICAgaWQ9e2lkfVxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2NuKFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2ZsZXggaC0xMCB3LWZ1bGwgcm91bmRlZC1tZCBib3JkZXIgYm9yZGVyLWdyYXktMzAwIGJnLXdoaXRlIHB4LTMgcHktMiB0ZXh0LXNtIHRleHQtYmxhY2sgcGxhY2Vob2xkZXItYmxhY2sgc2hhZG93LXNtIGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpib3JkZXItcHJpbWFyeSBmb2N1czpyaW5nLTEgZm9jdXM6cmluZy1wcmltYXJ5IGRpc2FibGVkOmN1cnNvci1ub3QtYWxsb3dlZCBkaXNhYmxlZDpvcGFjaXR5LTUwJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yICYmICdib3JkZXItcmVkLTUwMCBmb2N1czpib3JkZXItcmVkLTUwMCBmb2N1czpyaW5nLXJlZC01MDAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lXG4gICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgIHJlZj17cmVmfVxuICAgICAgICAgICAgICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICB7ZXJyb3IgJiYgKFxuICAgICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtcmVkLTUwMCBtdC0xXCI+e2Vycm9yfTwvcD5cbiAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxuKTtcblxuSW5wdXQuZGlzcGxheU5hbWUgPSAnSW5wdXQnO1xuXG5leHBvcnQgeyBJbnB1dCB9OyAiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0JBMkNTOzs7Ozs7V0FBQUEsS0FBQTs7Ozs7Ozs7a0NBekNVOzs7eUVBQ29DOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBT3ZELE1BQU1BLEtBQUE7QUFBQTtBQUFBLGNBQUFDLGNBQUEsR0FBQUMsQ0FBQSxRQUFRLElBQUFDLE1BQUEsQ0FBQUMsVUFBVSxFQUNwQixDQUFDO0VBQUVDLFNBQVM7RUFBRUMsSUFBSTtFQUFFQyxLQUFLO0VBQUVDLEtBQUs7RUFBRUMsRUFBRTtFQUFFLEdBQUdDO0FBQUEsQ0FBTyxFQUFFQyxHQUFBO0VBQUE7RUFBQVYsY0FBQSxHQUFBVyxDQUFBO0VBQUFYLGNBQUEsR0FBQUMsQ0FBQTtFQUM5QyxvQkFDSSxJQUFBVyxXQUFBLENBQUFDLElBQUEsRUFBQztJQUFJVCxTQUFBLEVBQVU7O0lBQ1Y7SUFBQSxDQUFBSixjQUFBLEdBQUFjLENBQUEsV0FBQVAsS0FBQTtJQUFBO0lBQUEsQ0FBQVAsY0FBQSxHQUFBYyxDQUFBLHdCQUNHLElBQUFGLFdBQUEsQ0FBQUcsR0FBQSxFQUFDO01BQ0dDLE9BQUEsRUFBU1IsRUFBQTtNQUNUSixTQUFBLEVBQVU7Z0JBRVRHO3NCQUdULElBQUFLLFdBQUEsQ0FBQUcsR0FBQSxFQUFDO01BQ0dWLElBQUEsRUFBTUEsSUFBQTtNQUNORyxFQUFBLEVBQUlBLEVBQUE7TUFDSkosU0FBQSxFQUFXLElBQUFhLEdBQUEsQ0FBQUMsRUFBRSxFQUNUO01BQ0E7TUFBQSxDQUFBbEIsY0FBQSxHQUFBYyxDQUFBLFdBQUFSLEtBQUE7TUFBQTtNQUFBLENBQUFOLGNBQUEsR0FBQWMsQ0FBQSxXQUFTLDJEQUNUVixTQUFBO01BRUpNLEdBQUEsRUFBS0EsR0FBQTtNQUNKLEdBQUdEOztJQUVQO0lBQUEsQ0FBQVQsY0FBQSxHQUFBYyxDQUFBLFdBQUFSLEtBQUE7SUFBQTtJQUFBLENBQUFOLGNBQUEsR0FBQWMsQ0FBQSx3QkFDRyxJQUFBRixXQUFBLENBQUFHLEdBQUEsRUFBQztNQUFFWCxTQUFBLEVBQVU7Z0JBQTZCRTs7O0FBSTFEO0FBQUE7QUFBQU4sY0FBQSxHQUFBQyxDQUFBO0FBR0pGLEtBQUEsQ0FBTW9CLFdBQVcsR0FBRyIsImlnbm9yZUxpc3QiOltdfQ==