{"version":3,"names":["InventoryDistribution","cov_o6p580jko","f","router","s","_navigation","useRouter","hasPermission","user","_useAuth","useAuth","loading","setLoading","_react","useState","shopList","setShopList","products","setProducts","searchTerm","setSearchTerm","sortBy","setSortBy","sortDirection","setSortDirection","selectedShopForSort","setSelectedShopForSort","canViewCosts","isShopStaff","roleName","toLowerCase","error","setError","showFilterPanel","setShowFilterPanel","viewMode","setViewMode","showSkuColumn","currentPage","setCurrentPage","itemsPerPage","setItemsPerPage","useEffect","fetchData","response","fetch","ok","b","Error","data","json","success","message","shops","err","console","filteredProducts","filter","product","searchWords","trim","split","productName","name","productSku","sku","every","word","includes","getTotalShopCost","shopId","shopStock","branchStock","find","branch","quantity","shopSpecificCost","sortedProducts","sort","a","compareResult","localeCompare","totalStock","aShopStock","bShopStock","aQuantity","bQuantity","aTotalCost","bTotalCost","goToProductDetails","productId","push","handleSort","column","clearFilters","getLowestStockShop","length","reduce","lowest","current","getHighestStockShop","highest","totalItems","totalPages","Math","ceil","startIndex","endIndex","currentProducts","slice","shopsPerPage","totalShops","totalShopPages","shopStartIndex","shopEndIndex","currentShops","handlePageChange","page","handleItemsPerPageChange","items","ProductPaginationControls","pageNumbers","maxVisiblePages","startPage","max","floor","endPage","min","i","_jsxruntime","jsx","className","jsxs","value","onChange","e","Number","target","_Button","Button","variant","size","onClick","disabled","_lucidereact","ChevronLeft","Fragment","map","ChevronRight","ShopPaginationControls","_MainLayout","default","Loader2","ArrowLeft","Search","type","placeholder","Filter","Package","Store","X","shop","id","scope","ArrowUpDown","title","lowestStockShop","highestStockShop","stockInShop","isLowestStock","isHighestStock","weightedAverageCost","toLocaleString","some","retailValue","retailPrice","totalShopCost"],"sources":["/Users/sachin/Documents/md-sports-/src/app/inventory/distribution/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport MainLayout from '@/components/layout/MainLayout';\nimport {\n    Package,\n    Store,\n    Search,\n    Loader2,\n    ArrowLeft,\n    Filter,\n    X,\n    ArrowUpDown,\n    ChevronLeft,\n    ChevronRight\n} from 'lucide-react';\nimport { Button } from '@/components/ui/Button';\nimport { useAuth } from '@/hooks/useAuth';\n\n// Define types\ninterface ShopStock {\n    shopId: number;\n    shopName: string;\n    quantity: number;\n    shopSpecificCost: number;\n}\n\ninterface ProductStock {\n    id: number;\n    name: string;\n    sku: string;\n    retailPrice: number;\n    weightedAverageCost: number;\n    totalStock: number;\n    branchStock: ShopStock[];\n}\n\ninterface Shop {\n    id: number;\n    name: string;\n}\n\nexport default function InventoryDistribution() {\n    const router = useRouter();\n    const { hasPermission, user } = useAuth();\n    const [loading, setLoading] = useState(true);\n    const [shopList, setShopList] = useState<Shop[]>([]);\n    const [products, setProducts] = useState<ProductStock[]>([]);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const [sortBy, setSortBy] = useState<string>('name');\n    const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\n    const [selectedShopForSort, setSelectedShopForSort] = useState<number | null>(null);\n    \n    // Check if user can view cost data\n    const canViewCosts = hasPermission('shop:view_costs');\n    // Check if user is Shop Staff\n    const isShopStaff = user?.roleName?.toLowerCase() === 'shop staff';\n    const [error, setError] = useState<string | null>(null);\n    const [showFilterPanel, setShowFilterPanel] = useState(false);\n    const [viewMode, setViewMode] = useState<'product' | 'shop'>('product');\n\n    // Toggle to hide SKU columns throughout the page\n    const showSkuColumn = false;\n    \n    // Pagination state\n    const [currentPage, setCurrentPage] = useState(1);\n    const [itemsPerPage, setItemsPerPage] = useState(20);\n\n    useEffect(() => {\n        fetchData();\n    }, []); // Fetch once - all data comes in one optimized call\n\n    const fetchData = async () => {\n        setLoading(true);\n        setError(null);\n\n        try {\n            // Use the optimized inventory distribution endpoint (ONE API call!)\n            const response = await fetch('/api/inventory/distribution');\n\n            if (!response.ok) {\n                throw new Error('Failed to fetch inventory distribution data');\n            }\n\n            const data = await response.json();\n\n            if (!data.success) {\n                throw new Error(data.message || 'Failed to fetch inventory distribution data');\n            }\n\n            // Data is already transformed by the backend - just set it!\n            setProducts(data.data.products);\n            setShopList(data.data.shops);\n        } catch (err) {\n            console.error('Error fetching data:', err);\n            setError('Failed to load inventory distribution data. Please try again later.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Filter products based on search term - supports multiple words in any order\n    const filteredProducts = products.filter(product => {\n        if (searchTerm === '') return true;\n        \n        const searchWords = searchTerm.toLowerCase().trim().split(/\\s+/);\n        const productName = product.name.toLowerCase();\n        const productSku = product.sku.toLowerCase();\n        \n        // Each word must appear somewhere in the product name or SKU\n        return searchWords.every(word => \n            productName.includes(word) || productSku.includes(word)\n        );\n    });\n\n    // Calculate total shop cost for a product in a specific shop\n    const getTotalShopCost = (product: ProductStock, shopId: number) => {\n        const shopStock = product.branchStock.find(branch => branch.shopId === shopId);\n        if (!shopStock) return 0;\n        return shopStock.quantity * shopStock.shopSpecificCost;\n    };\n\n    // Sort products\n    const sortedProducts = [...filteredProducts].sort((a, b) => {\n        let compareResult = 0;\n\n        if (sortBy === 'name') {\n            compareResult = a.name.localeCompare(b.name);\n        } else if (sortBy === 'totalStock') {\n            compareResult = a.totalStock - b.totalStock;\n        } else if (sortBy === 'sku') {\n            compareResult = a.sku.localeCompare(b.sku);\n        } else if (sortBy === 'shopStock' && selectedShopForSort !== null) {\n            const aShopStock = a.branchStock.find(branch => branch.shopId === selectedShopForSort);\n            const bShopStock = b.branchStock.find(branch => branch.shopId === selectedShopForSort);\n            const aQuantity = aShopStock ? aShopStock.quantity : 0;\n            const bQuantity = bShopStock ? bShopStock.quantity : 0;\n            compareResult = aQuantity - bQuantity;\n        } else if (sortBy === 'shopTotalCost' && selectedShopForSort !== null) {\n            const aTotalCost = getTotalShopCost(a, selectedShopForSort);\n            const bTotalCost = getTotalShopCost(b, selectedShopForSort);\n            compareResult = aTotalCost - bTotalCost;\n        }\n\n        return sortDirection === 'asc' ? compareResult : -compareResult;\n    });\n\n\n\n    // Navigate to product details\n    const goToProductDetails = (productId: number) => {\n        router.push(`/inventory/${productId}`);\n    };\n\n    // Handle sort\n    const handleSort = (column: string, shopId?: number) => {\n        if (sortBy === column && (selectedShopForSort ?? null) === (shopId ?? null)) {\n            setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n        } else {\n            setSortBy(column);\n            setSortDirection('asc');\n            if (shopId) {\n                setSelectedShopForSort(shopId);\n            }\n        }\n    };\n\n    // Clear all filters\n    const clearFilters = () => {\n        setSearchTerm('');\n        setSortBy('name');\n        setSortDirection('asc');\n        setSelectedShopForSort(null);\n        setShowFilterPanel(false);\n        setCurrentPage(1); // Reset to first page when clearing filters\n    };\n\n    // Calculate the lowest stock shop for a product\n    const getLowestStockShop = (product: ProductStock) => {\n        if (product.branchStock.length === 0) return null;\n\n        return product.branchStock.reduce((lowest, current) =>\n            (current.quantity < lowest.quantity) ? current : lowest\n        );\n    };\n\n    // Calculate the highest stock shop for a product\n    const getHighestStockShop = (product: ProductStock) => {\n        if (product.branchStock.length === 0) return null;\n\n        return product.branchStock.reduce((highest, current) =>\n            (current.quantity > highest.quantity) ? current : highest\n        );\n    };\n\n    // Pagination logic for product-centric view\n    const totalItems = sortedProducts.length;\n    const totalPages = Math.ceil(totalItems / itemsPerPage);\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    const currentProducts = sortedProducts.slice(startIndex, endIndex);\n\n    // Pagination logic for shop-centric view (paginate shops, not products)\n    const shopsPerPage = 5; // Show 5 shops per page\n    const totalShops = shopList.length;\n    const totalShopPages = Math.ceil(totalShops / shopsPerPage);\n    const shopStartIndex = (currentPage - 1) * shopsPerPage;\n    const shopEndIndex = shopStartIndex + shopsPerPage;\n    const currentShops = shopList.slice(shopStartIndex, shopEndIndex);\n\n    // Handle page change\n    const handlePageChange = (page: number) => {\n        setCurrentPage(page);\n    };\n\n    // Handle items per page change\n    const handleItemsPerPageChange = (items: number) => {\n        setItemsPerPage(items);\n        setCurrentPage(1); // Reset to first page when changing items per page\n    };\n\n    // Reset pagination when filters change or view mode changes\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [searchTerm, sortBy, sortDirection, selectedShopForSort, viewMode]);\n\n    // Pagination component for product-centric view\n    const ProductPaginationControls = () => {\n        const pageNumbers = [];\n        const maxVisiblePages = 5;\n        \n        let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\n        let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);\n        \n        if (endPage - startPage + 1 < maxVisiblePages) {\n            startPage = Math.max(1, endPage - maxVisiblePages + 1);\n        }\n        \n        for (let i = startPage; i <= endPage; i++) {\n            pageNumbers.push(i);\n        }\n\n        return (\n            <div className=\"flex items-center justify-between px-4 py-3 bg-white border-t border-gray-200 sm:px-6\">\n                <div className=\"flex items-center justify-between w-full\">\n                    <div className=\"flex items-center space-x-2\">\n                        <span className=\"text-sm text-gray-700\">\n                            {itemsPerPage >= totalItems ? \n                                `Showing all ${totalItems} products` : \n                                `Showing ${startIndex + 1} to ${Math.min(endIndex, totalItems)} of ${totalItems} products`\n                            }\n                        </span>\n                        <select\n                            value={itemsPerPage}\n                            onChange={(e) => handleItemsPerPageChange(Number(e.target.value))}\n                            className=\"border border-gray-300 rounded-md px-2 py-1 text-sm text-gray-700 focus:outline-none focus:ring-2 focus:ring-primary\"\n                        >\n                            <option value={10}>10 per page</option>\n                            <option value={20}>20 per page</option>\n                            <option value={50}>50 per page</option>\n                            <option value={100}>100 per page</option>\n                            <option value={99999}>Show All</option>\n                        </select>\n                    </div>\n                    \n                    {itemsPerPage < totalItems && (\n                        <div className=\"flex items-center space-x-1\">\n                            <Button\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={() => handlePageChange(currentPage - 1)}\n                                disabled={currentPage === 1}\n                                className=\"text-gray-700\"\n                            >\n                                <ChevronLeft className=\"h-4 w-4\" />\n                                Previous\n                            </Button>\n                            \n                            {startPage > 1 && (\n                                <>\n                                    <Button\n                                        variant=\"outline\"\n                                        size=\"sm\"\n                                        onClick={() => handlePageChange(1)}\n                                        className=\"text-gray-700\"\n                                    >\n                                        1\n                                    </Button>\n                                    {startPage > 2 && <span className=\"px-2 text-gray-500\">...</span>}\n                                </>\n                            )}\n                            \n                            {pageNumbers.map((page) => (\n                                <Button\n                                    key={page}\n                                    variant={currentPage === page ? \"secondary\" : \"outline\"}\n                                    size=\"sm\"\n                                    onClick={() => handlePageChange(page)}\n                                    className={currentPage === page ? \"text-white\" : \"text-gray-700\"}\n                                >\n                                    {page}\n                                </Button>\n                            ))}\n                            \n                            {endPage < totalPages && (\n                                <>\n                                    {endPage < totalPages - 1 && <span className=\"px-2 text-gray-500\">...</span>}\n                                    <Button\n                                        variant=\"outline\"\n                                        size=\"sm\"\n                                        onClick={() => handlePageChange(totalPages)}\n                                        className=\"text-gray-700\"\n                                    >\n                                        {totalPages}\n                                    </Button>\n                                </>\n                            )}\n                            \n                            <Button\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={() => handlePageChange(currentPage + 1)}\n                                disabled={currentPage === totalPages}\n                                className=\"text-gray-700\"\n                            >\n                                Next\n                                <ChevronRight className=\"h-4 w-4\" />\n                            </Button>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    };\n\n    // Pagination component for shop-centric view\n    const ShopPaginationControls = () => {\n        const pageNumbers = [];\n        const maxVisiblePages = 5;\n        \n        let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\n        let endPage = Math.min(totalShopPages, startPage + maxVisiblePages - 1);\n        \n        if (endPage - startPage + 1 < maxVisiblePages) {\n            startPage = Math.max(1, endPage - maxVisiblePages + 1);\n        }\n        \n        for (let i = startPage; i <= endPage; i++) {\n            pageNumbers.push(i);\n        }\n\n        return (\n            <div className=\"flex items-center justify-between px-4 py-3 bg-white border-t border-gray-200 sm:px-6\">\n                <div className=\"flex items-center justify-between w-full\">\n                    <div className=\"flex items-center space-x-2\">\n                        <span className=\"text-sm text-gray-700\">\n                            Showing {shopStartIndex + 1} to {Math.min(shopEndIndex, totalShops)} of {totalShops} shops\n                        </span>\n                    </div>\n                    \n                    <div className=\"flex items-center space-x-1\">\n                        <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => handlePageChange(currentPage - 1)}\n                            disabled={currentPage === 1}\n                            className=\"text-gray-700\"\n                        >\n                            <ChevronLeft className=\"h-4 w-4\" />\n                            Previous\n                        </Button>\n                        \n                        {startPage > 1 && (\n                            <>\n                                <Button\n                                    variant=\"outline\"\n                                    size=\"sm\"\n                                    onClick={() => handlePageChange(1)}\n                                    className=\"text-gray-700\"\n                                >\n                                    1\n                                </Button>\n                                {startPage > 2 && <span className=\"px-2 text-gray-500\">...</span>}\n                            </>\n                        )}\n                        \n                        {pageNumbers.map((page) => (\n                            <Button\n                                key={page}\n                                variant={currentPage === page ? \"secondary\" : \"outline\"}\n                                size=\"sm\"\n                                onClick={() => handlePageChange(page)}\n                                className={currentPage === page ? \"text-white\" : \"text-gray-700\"}\n                            >\n                                {page}\n                            </Button>\n                        ))}\n                        \n                        {endPage < totalShopPages && (\n                            <>\n                                {endPage < totalShopPages - 1 && <span className=\"px-2 text-gray-500\">...</span>}\n                                <Button\n                                    variant=\"outline\"\n                                    size=\"sm\"\n                                    onClick={() => handlePageChange(totalShopPages)}\n                                    className=\"text-gray-700\"\n                                >\n                                    {totalShopPages}\n                                </Button>\n                            </>\n                        )}\n                        \n                        <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => handlePageChange(currentPage + 1)}\n                            disabled={currentPage === totalShopPages}\n                            className=\"text-gray-700\"\n                        >\n                            Next\n                            <ChevronRight className=\"h-4 w-4\" />\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    if (loading) {\n        return (\n            <MainLayout>\n                <div className=\"flex items-center justify-center h-96\">\n                    <Loader2 className=\"w-12 h-12 animate-spin text-primary\" />\n                </div>\n            </MainLayout>\n        );\n    }\n\n    return (\n        <MainLayout>\n            <div className=\"space-y-6\">\n                {/* Header */}\n                <div className=\"bg-tertiary p-5 rounded-xl shadow-sm border border-gray-200\">\n                    <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\n                        <div>\n                            <div className=\"flex items-center gap-2\">\n                                <Button\n                                    variant=\"ghost\"\n                                    size=\"sm\"\n                                    className=\"p-0 hover:bg-transparent\"\n                                    onClick={() => router.push('/inventory')}\n                                >\n                                    <ArrowLeft className=\"h-5 w-5 text-black\" />\n                                </Button>\n                                <h1 className=\"text-xl font-semibold text-black\">Product Distribution</h1>\n                            </div>\n                            <p className=\"text-sm text-black\">View how products are distributed across all shops</p>\n                        </div>\n                        <div className=\"flex gap-3\">\n                            <div className=\"relative\">\n                                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Search products...\"\n                                    className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary text-black\"\n                                    value={searchTerm}\n                                    onChange={(e) => setSearchTerm(e.target.value)}\n                                />\n                            </div>\n                            <Button\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={() => setShowFilterPanel(!showFilterPanel)}\n                                className=\"text-black\"\n                            >\n                                <Filter className=\"h-4 w-4 mr-2\" />\n                                Filters\n                            </Button>\n                            <div className=\"flex\">\n                                <Button\n                                    variant={viewMode === 'product' ? 'secondary' : 'outline'}\n                                    size=\"sm\"\n                                    onClick={() => setViewMode('product')}\n                                    className={viewMode === 'product' ? 'text-white' : 'text-black'}\n                                >\n                                    <Package className=\"h-4 w-4 mr-2\" />\n                                    By Product\n                                </Button>\n                                <Button\n                                    variant={viewMode === 'shop' ? 'secondary' : 'outline'}\n                                    size=\"sm\"\n                                    onClick={() => setViewMode('shop')}\n                                    className={viewMode === 'shop' ? 'text-white' : 'text-black'}\n                                >\n                                    <Store className=\"h-4 w-4 mr-2\" />\n                                    By Shop\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Filter Panel */}\n                {showFilterPanel && (\n                    <div className=\"bg-tertiary p-5 rounded-xl shadow-sm border border-gray-200\">\n                        <div className=\"flex justify-between items-center mb-4\">\n                            <h2 className=\"text-lg font-semibold text-black\">Filters</h2>\n                            <Button variant=\"ghost\" size=\"sm\" onClick={() => setShowFilterPanel(false)}>\n                                <X className=\"h-4 w-4 text-black\" />\n                            </Button>\n                        </div>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                            <div>\n                                <label className=\"block text-sm font-medium text-black mb-1\">Sort By</label>\n                                <select\n                                    className=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary text-black\"\n                                    value={sortBy}\n                                    onChange={(e) => {\n                                        setSortBy(e.target.value);\n                                        if (!['shopStock', 'shopTotalCost'].includes(e.target.value) || (e.target.value === 'shopTotalCost' && !canViewCosts)) {\n                                            setSelectedShopForSort(null);\n                                        }\n                                    }}\n                                >\n                                    <option value=\"name\">Product Name</option>\n                                    {showSkuColumn && (<option value=\"sku\">SKU</option>)}\n                                    <option value=\"totalStock\">Total Stock</option>\n                                    <option value=\"shopStock\">Shop Stock Quantity</option>\n                                    {canViewCosts && (\n                                        <option value=\"shopTotalCost\">Shop Total Cost</option>\n                                    )}\n                                </select>\n                            </div>\n                            {(sortBy === 'shopStock' || (sortBy === 'shopTotalCost' && canViewCosts)) && (\n                                <div>\n                                    <label className=\"block text-sm font-medium text-black mb-1\">Select Shop</label>\n                                    <select\n                                        className=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary text-black\"\n                                        value={selectedShopForSort || ''}\n                                        onChange={(e) => setSelectedShopForSort(Number(e.target.value))}\n                                    >\n                                        <option value=\"\">Select a shop</option>\n                                        {shopList.map(shop => (\n                                            <option key={shop.id} value={shop.id}>{shop.name}</option>\n                                        ))}\n                                    </select>\n                                </div>\n                            )}\n                        </div>\n                        <div className=\"flex items-end mt-4\">\n                            <Button variant=\"outline\" onClick={clearFilters} className=\"text-black\">\n                                Clear Filters\n                            </Button>\n                        </div>\n                    </div>\n                )}\n\n                {/* Error Message */}\n                {error && (\n                    <div className=\"bg-red-100 p-4 rounded-lg border border-red-200 text-red-800\">\n                        {error}\n                    </div>\n                )}\n\n                {/* Product-Centric View */}\n                {viewMode === 'product' && (\n                    <div className=\"bg-white p-4 rounded-xl shadow-sm border border-gray-200 overflow-x-auto\">\n                        <table className=\"min-w-full divide-y divide-gray-200\">\n                            <thead className=\"bg-gray-50\">\n                                <tr>\n                                    <th\n                                        scope=\"col\"\n                                        className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer w-1/2 min-w-[200px]\"\n                                        onClick={() => handleSort('name')}\n                                    >\n                                        <div className=\"flex items-center\">\n                                            Product\n                                            {sortBy === 'name' && (\n                                                <ArrowUpDown className=\"ml-1 h-4 w-4\" />\n                                            )}\n                                        </div>\n                                    </th>\n                                    {showSkuColumn && (\n                                        <th\n                                            scope=\"col\"\n                                            className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                                            onClick={() => handleSort('sku')}\n                                        >\n                                            <div className=\"flex items-center\">\n                                                SKU\n                                                {sortBy === 'sku' && (\n                                                    <ArrowUpDown className=\"ml-1 h-4 w-4\" />\n                                                )}\n                                            </div>\n                                        </th>\n                                    )}\n\n                                    <th\n                                        scope=\"col\"\n                                        className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                                        onClick={() => handleSort('totalStock')}\n                                    >\n                                        <div className=\"flex items-center\">\n                                            Total Stock\n                                            {sortBy === 'totalStock' && (\n                                                <ArrowUpDown className=\"ml-1 h-4 w-4\" />\n                                            )}\n                                        </div>\n                                    </th>\n                                    {shopList.map(shop => (\n                                        <th key={shop.id} scope=\"col\" className=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                            <div className=\"text-center\">\n                                                <div className=\"flex flex-col items-center gap-1\">\n                                                    <div>{shop.name}</div>\n                                                    <div className=\"flex gap-2 text-xs\">\n                                                        <button\n                                                            onClick={() => handleSort('shopStock', shop.id)}\n                                                            className=\"text-blue-600 hover:text-blue-800 cursor-pointer flex items-center\"\n                                                            title=\"Sort by quantity\"\n                                                        >\n                                                            Qty\n                                                            {sortBy === 'shopStock' && selectedShopForSort === shop.id && (\n                                                                <ArrowUpDown className=\"ml-1 h-3 w-3\" />\n                                                            )}\n                                                        </button>\n                                                        {canViewCosts && (\n                                                            <>\n                                                                <span className=\"text-gray-400\">|</span>\n                                                                <button\n                                                                    onClick={() => handleSort('shopTotalCost', shop.id)}\n                                                                    className=\"text-green-600 hover:text-green-800 cursor-pointer flex items-center\"\n                                                                    title=\"Sort by total cost\"\n                                                                >\n                                                                    Cost\n                                                                    {sortBy === 'shopTotalCost' && selectedShopForSort === shop.id && (\n                                                                        <ArrowUpDown className=\"ml-1 h-3 w-3\" />\n                                                                    )}\n                                                                </button>\n                                                            </>\n                                                        )}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </th>\n                                    ))}\n\n                                    <th scope=\"col\" className=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                        Actions\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody className=\"bg-white divide-y divide-gray-200\">\n                                {currentProducts.map(product => {\n                                    const lowestStockShop = getLowestStockShop(product);\n                                    const highestStockShop = getHighestStockShop(product);\n\n                                    return (\n                                        <tr key={product.id} className=\"hover:bg-gray-50\">\n                                            <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-black w-1/2 min-w-[200px]\">\n                                                {product.name}\n                                            </td>\n                                            {showSkuColumn && (\n                                                <td className=\"px-4 py-3 whitespace-nowrap text-sm text-black\">\n                                                    {product.sku}\n                                                </td>\n                                            )}\n\n                                            <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-black\">\n                                                {product.totalStock}\n                                            </td>\n\n                                            {/* Dynamic columns for each shop */}\n                                            {shopList.map(shop => {\n                                                const stockInShop = product.branchStock.find(\n                                                    branch => branch.shopId === shop.id\n                                                );\n                                                const quantity = stockInShop ? stockInShop.quantity : 0;\n\n                                                // Determine if this is the lowest or highest stock for highlighting\n                                                const isLowestStock = lowestStockShop && stockInShop &&\n                                                    lowestStockShop.shopId === shop.id && product.branchStock.length > 1;\n                                                const isHighestStock = highestStockShop && stockInShop &&\n                                                    highestStockShop.shopId === shop.id && product.branchStock.length > 1;\n\n                                                return (\n                                                    <td\n                                                        key={shop.id}\n                                                        className={`px-4 py-3 whitespace-nowrap text-sm text-center font-medium\n                                                            ${isLowestStock ? 'text-red-600 bg-red-50' : ''}\n                                                            ${isHighestStock ? 'text-green-600 bg-green-50' : ''}\n                                                            ${!isLowestStock && !isHighestStock ? 'text-black' : ''}\n                                                        `}\n                                                    >\n                                                        <div className=\"text-center\">\n                                                            <div className=\"font-semibold text-blue-600\">{quantity}</div>\n                                                            {canViewCosts && (\n                                                                <div className=\"text-xs text-gray-500 mt-1\">\n                                                                    WAC: Rs. {product.weightedAverageCost.toLocaleString()}\n                                                                </div>\n                                                            )}\n                                                            {canViewCosts && stockInShop && stockInShop.shopSpecificCost > 0 && (\n                                                                <div className=\"text-xs text-blue-600 mt-1\">\n                                                                    Unit Cost: Rs. {stockInShop.shopSpecificCost.toLocaleString()}\n                                                                </div>\n                                                            )}\n                                                            {canViewCosts && stockInShop && stockInShop.shopSpecificCost > 0 && (\n                                                                <div className=\"text-xs font-semibold text-green-600 mt-1 border-t border-gray-200 pt-1\">\n                                                                    Total: Rs. {getTotalShopCost(product, shop.id).toLocaleString()}\n                                                                </div>\n                                                            )}\n                                                        </div>\n                                                    </td>\n                                                );\n                                            })}\n\n\n\n                                            {/* Actions */}\n                                            <td className=\"px-4 py-3 whitespace-nowrap text-sm text-center\">\n                                                {!isShopStaff && (\n                                                    <Button\n                                                        variant=\"outline\"\n                                                        size=\"sm\"\n                                                        onClick={() => goToProductDetails(product.id)}\n                                                        className=\"text-black\"\n                                                    >\n                                                        View\n                                                    </Button>\n                                                )}\n                                            </td>\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </table>\n\n                        {sortedProducts.length === 0 && (\n                            <div className=\"text-center py-8 text-gray-500\">\n                                No products found matching your filters.\n                            </div>\n                        )}\n                    </div>\n                )}\n\n                {/* Pagination for Product-Centric View */}\n                {viewMode === 'product' && sortedProducts.length > 0 && (\n                    <ProductPaginationControls />\n                )}\n\n                {/* Shop-Centric View */}\n                {viewMode === 'shop' && (\n                    <div className=\"space-y-6\">\n                        {shopList.length > 0 ? (\n                            currentShops.map(shop => (\n                                <div key={shop.id} className=\"bg-white p-4 rounded-xl shadow-sm border border-gray-200\">\n                                    <div className=\"flex items-center gap-2 p-2 border-b border-gray-200\">\n                                        <Store className=\"h-5 w-5 text-primary\" />\n                                        <h2 className=\"font-semibold text-lg text-black\">{shop.name}</h2>\n                                    </div>\n\n                                    <div className=\"mt-4 overflow-x-auto\">\n                                        <table className=\"min-w-full divide-y divide-gray-200\">\n                                            <thead className=\"bg-gray-50\">\n                                                <tr>\n                                                    <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                        Product\n                                                    </th>\n                                                    {showSkuColumn && (\n                                                        <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                            SKU\n                                                        </th>\n                                                    )}\n\n                                                    <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                        Quantity\n                                                    </th>\n                                                    {canViewCosts && (\n                                                        <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                            Cost Info\n                                                        </th>\n                                                    )}\n                                                    <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                        Retail Price\n                                                    </th>\n                                                    <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                        Retail Value\n                                                    </th>\n                                                    {canViewCosts && (\n                                                        <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                            Total Shop Cost\n                                                        </th>\n                                                    )}\n                                                    <th scope=\"col\" className=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                                                        Actions\n                                                    </th>\n                                                </tr>\n                                            </thead>\n                                            <tbody className=\"bg-white divide-y divide-gray-200\">\n                                                {sortedProducts\n                                                    .filter(product => product.branchStock.some(branch => branch.shopId === shop.id))\n                                                    .map(product => {\n                                                        const shopStock = product.branchStock.find(branch => branch.shopId === shop.id);\n                                                        const quantity = shopStock ? shopStock.quantity : 0;\n                                                        const retailValue = quantity * product.retailPrice;\n                                                        const totalShopCost = getTotalShopCost(product, shop.id);\n\n                                                        return (\n                                                            <tr key={product.id} className=\"hover:bg-gray-50\">\n                                                                <td className=\"px-4 py-3 whitespace-nowrap text-sm font-medium text-black\">\n                                                                    {product.name}\n                                                                </td>\n                                                                {showSkuColumn && (\n                                                                    <td className=\"px-4 py-3 whitespace-nowrap text-sm text-black\">\n                                                                        {product.sku}\n                                                                    </td>\n                                                                )}\n\n                                                                <td className=\"px-4 py-3 whitespace-nowrap text-sm text-black\">\n                                                                    {quantity}\n                                                                </td>\n                                                                {canViewCosts && (\n                                                                    <td className=\"px-4 py-3 whitespace-nowrap text-sm text-black\">\n                                                                        <div className=\"space-y-1\">\n                                                                            <div className=\"text-xs text-gray-600\">\n                                                                                WAC: Rs. {product.weightedAverageCost.toLocaleString()}\n                                                                            </div>\n                                                                            {shopStock && shopStock.shopSpecificCost > 0 && (\n                                                                                <div className=\"text-xs text-blue-600\">\n                                                                                    Shop Cost: Rs. {shopStock.shopSpecificCost.toLocaleString()}\n                                                                                </div>\n                                                                            )}\n                                                                        </div>\n                                                                    </td>\n                                                                )}\n                                                                <td className=\"px-4 py-3 whitespace-nowrap text-sm text-black\">\n                                                                    Rs. {product.retailPrice.toLocaleString()}\n                                                                </td>\n                                                                <td className=\"px-4 py-3 whitespace-nowrap text-sm text-black\">\n                                                                    Rs. {retailValue.toLocaleString()}\n                                                                </td>\n                                                                {canViewCosts && (\n                                                                    <td className=\"px-4 py-3 whitespace-nowrap text-sm font-semibold text-green-600\">\n                                                                        Rs. {totalShopCost.toLocaleString()}\n                                                                    </td>\n                                                                )}\n                                                                <td className=\"px-4 py-3 whitespace-nowrap text-sm text-center\">\n                                                                    {!isShopStaff && (\n                                                                        <Button\n                                                                            variant=\"outline\"\n                                                                            size=\"sm\"\n                                                                            onClick={() => goToProductDetails(product.id)}\n                                                                            className=\"text-black\"\n                                                                        >\n                                                                            View\n                                                                        </Button>\n                                                                    )}\n                                                                </td>\n                                                            </tr>\n                                                        );\n                                                    })}\n                                            </tbody>\n                                        </table>\n\n                                        {sortedProducts.filter(product =>\n                                            product.branchStock.some(branch => branch.shopId === shop.id)\n                                        ).length === 0 && (\n                                                <div className=\"text-center py-4 text-gray-500\">\n                                                    No products found in this shop matching your filters.\n                                                </div>\n                                            )}\n                                    </div>\n                                </div>\n                            ))\n                        ) : (\n                            <div className=\"bg-white p-8 rounded-xl shadow-sm border border-gray-200 text-center\">\n                                <Package className=\"h-12 w-12 mx-auto text-gray-400 mb-4\" />\n                                <h3 className=\"text-lg font-medium text-black mb-2\">No shops found</h3>\n                                <p className=\"text-gray-500 mb-4\">There are no shops in the system or you don't have access to any shops.</p>\n                            </div>\n                        )}\n                        \n                        {/* Pagination for Shop-Centric View */}\n                        {shopList.length > 0 && totalShopPages > 1 && (\n                            <ShopPaginationControls />\n                        )}\n                    </div>\n                )}\n            </div>\n        </MainLayout>\n    );\n}"],"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","ignoreList":[]}