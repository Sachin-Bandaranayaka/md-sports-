{"version":3,"sources":["/Users/sachin/Documents/md-sports-/jest.setup.js"],"sourcesContent":["// jest-dom adds custom jest matchers for asserting on DOM nodes.\nimport '@testing-library/jest-dom';\nimport { cleanupCache } from './src/lib/cache';\n\n// Set up environment variables for testing\nprocess.env.JWT_SECRET = 'test-secret-key';\nprocess.env.JWT_ACCESS_TOKEN_EXPIRES_IN = '12h';\nprocess.env.NEXTAUTH_SECRET = 'test-nextauth-secret';\nprocess.env.NODE_ENV = 'test';\nprocess.env.DATABASE_URL = 'postgresql://test:test@localhost:5432/test';\n\n// Mock console.log to reduce noise during tests\nglobal.console = {\n  ...console,\n  log: jest.fn(),\n};\n\n// Mock cache module\njest.mock('./src/lib/cache', () => ({\n  cache: {\n    get: jest.fn(),\n    set: jest.fn(),\n    delete: jest.fn(),\n    clear: jest.fn(),\n  },\n  cleanupCache: jest.fn(),\n}));\n\n// Mock Prisma client for testing\njest.mock('@prisma/client', () => ({\n  PrismaClient: jest.fn().mockImplementation(() => ({\n    user: {\n      findMany: jest.fn(),\n      findUnique: jest.fn(),\n      create: jest.fn(),\n      update: jest.fn(),\n      delete: jest.fn()\n    },\n    product: {\n      findMany: jest.fn(),\n      findUnique: jest.fn(),\n      create: jest.fn(),\n      update: jest.fn(),\n      delete: jest.fn()\n    },\n    auditLog: {\n      findMany: jest.fn(),\n      findUnique: jest.fn(),\n      create: jest.fn(),\n      update: jest.fn(),\n      delete: jest.fn()\n    },\n    refreshToken: {\n      findMany: jest.fn(),\n      findUnique: jest.fn(),\n      create: jest.fn(),\n      update: jest.fn(),\n      updateMany: jest.fn(),\n      delete: jest.fn(),\n      deleteMany: jest.fn()\n    }\n  }))\n}));\n\njest.mock('@/lib/prisma', () => ({\n  prisma: {\n    user: {\n      findMany: jest.fn(),\n      findUnique: jest.fn(),\n      create: jest.fn(),\n      update: jest.fn(),\n      delete: jest.fn()\n    },\n    product: {\n      findMany: jest.fn(),\n      findUnique: jest.fn(),\n      create: jest.fn(),\n      update: jest.fn(),\n      delete: jest.fn()\n    },\n    auditLog: {\n      findMany: jest.fn(),\n      findUnique: jest.fn(),\n      create: jest.fn(),\n      update: jest.fn(),\n      delete: jest.fn()\n    },\n    refreshToken: {\n      findMany: jest.fn(),\n      findUnique: jest.fn(),\n      create: jest.fn(),\n      update: jest.fn(),\n      updateMany: jest.fn(),\n      delete: jest.fn(),\n      deleteMany: jest.fn()\n    }\n  }\n}));\n\n// Mock Sequelize models for testing\njest.mock('@/lib/models', () => ({\n  Product: {\n    findAll: jest.fn(),\n    findByPk: jest.fn(),\n    create: jest.fn(),\n    update: jest.fn(),\n    destroy: jest.fn()\n  },\n  User: {\n    findAll: jest.fn(),\n    findByPk: jest.fn(),\n    create: jest.fn(),\n    update: jest.fn(),\n    destroy: jest.fn()\n  },\n  Customer: {\n    findAll: jest.fn(),\n    findByPk: jest.fn(),\n    create: jest.fn(),\n    update: jest.fn(),\n    destroy: jest.fn()\n  },\n  Invoice: {\n    findAll: jest.fn(),\n    findByPk: jest.fn(),\n    create: jest.fn(),\n    update: jest.fn(),\n    destroy: jest.fn()\n  },\n  AuditLog: {\n    findAll: jest.fn(),\n    findByPk: jest.fn(),\n    create: jest.fn(),\n    update: jest.fn(),\n    destroy: jest.fn()\n  }\n}));\n\n// Mock IntersectionObserver\nglobal.IntersectionObserver = class IntersectionObserver {\n  constructor() {}\n  disconnect() {}\n  observe() {}\n  unobserve() {}\n};\n\n// Mock ResizeObserver\nglobal.ResizeObserver = class ResizeObserver {\n  constructor() {}\n  disconnect() {}\n  observe() {}\n  unobserve() {}\n};\n\n// Mock window.matchMedia\nif (typeof window !== 'undefined') {\n  Object.defineProperty(window, 'matchMedia', {\n    writable: true,\n    value: jest.fn().mockImplementation(query => ({\n      matches: false,\n      media: query,\n      onchange: null,\n      addListener: jest.fn(), // deprecated\n      removeListener: jest.fn(), // deprecated\n      addEventListener: jest.fn(),\n      removeEventListener: jest.fn(),\n      dispatchEvent: jest.fn(),\n    })),\n  });\n}\n\n// Clean up cache after all tests\nafterAll(() => {\n  cleanupCache();\n});"],"names":["jest","mock","cache","get","fn","set","delete","clear","cleanupCache","PrismaClient","mockImplementation","user","findMany","findUnique","create","update","product","auditLog","refreshToken","updateMany","deleteMany","prisma","Product","findAll","findByPk","destroy","User","Customer","Invoice","AuditLog","process","env","JWT_SECRET","JWT_ACCESS_TOKEN_EXPIRES_IN","NEXTAUTH_SECRET","NODE_ENV","DATABASE_URL","global","console","log","IntersectionObserver","constructor","disconnect","observe","unobserve","ResizeObserver","window","Object","defineProperty","writable","value","query","matches","media","onchange","addListener","removeListener","addEventListener","removeEventListener","dispatchEvent","afterAll"],"mappings":"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"}