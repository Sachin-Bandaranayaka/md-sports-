876f5e65b0993e92ad685c0f936b46dc
"use strict";

/* istanbul ignore next */
function cov_vzq0avkdi() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/dashboard/summary/route.ts";
  var hash = "79e95fc2d5fe7e79b64eb3bd3f0bc203df7b23e2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/dashboard/summary/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 32
        }
      },
      "6": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "7": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 49
        }
      },
      "8": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 41
        }
      },
      "9": {
        start: {
          line: 22,
          column: 15
        },
        end: {
          line: 22,
          column: 47
        }
      },
      "10": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 23,
          column: 71
        }
      },
      "11": {
        start: {
          line: 24,
          column: 14
        },
        end: {
          line: 24,
          column: 45
        }
      },
      "12": {
        start: {
          line: 25,
          column: 22
        },
        end: {
          line: 25,
          column: 73
        }
      },
      "13": {
        start: {
          line: 28,
          column: 23
        },
        end: {
          line: 28,
          column: 25
        }
      },
      "14": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "15": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 42
        }
      },
      "16": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 43
        }
      },
      "17": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 35
        }
      },
      "18": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 34
        }
      },
      "19": {
        start: {
          line: 34,
          column: 11
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "20": {
        start: {
          line: 35,
          column: 20
        },
        end: {
          line: 35,
          column: 30
        }
      },
      "21": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 97
        }
      },
      "22": {
        start: {
          line: 39,
          column: 23
        },
        end: {
          line: 41,
          column: 10
        }
      },
      "23": {
        start: {
          line: 42,
          column: 28
        },
        end: {
          line: 49,
          column: 10
        }
      },
      "24": {
        start: {
          line: 51,
          column: 29
        },
        end: {
          line: 60,
          column: 65
        }
      },
      "25": {
        start: {
          line: 51,
          column: 62
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "26": {
        start: {
          line: 61,
          column: 23
        },
        end: {
          line: 61,
          column: 76
        }
      },
      "27": {
        start: {
          line: 63,
          column: 35
        },
        end: {
          line: 73,
          column: 51
        }
      },
      "28": {
        start: {
          line: 63,
          column: 68
        },
        end: {
          line: 73,
          column: 10
        }
      },
      "29": {
        start: {
          line: 75,
          column: 38
        },
        end: {
          line: 98,
          column: 50
        }
      },
      "30": {
        start: {
          line: 75,
          column: 71
        },
        end: {
          line: 94,
          column: 10
        }
      },
      "31": {
        start: {
          line: 100,
          column: 32
        },
        end: {
          line: 107,
          column: 49
        }
      },
      "32": {
        start: {
          line: 100,
          column: 65
        },
        end: {
          line: 107,
          column: 10
        }
      },
      "33": {
        start: {
          line: 109,
          column: 30
        },
        end: {
          line: 126,
          column: 42
        }
      },
      "34": {
        start: {
          line: 109,
          column: 63
        },
        end: {
          line: 122,
          column: 10
        }
      },
      "35": {
        start: {
          line: 128,
          column: 27
        },
        end: {
          line: 135,
          column: 5
        }
      },
      "36": {
        start: {
          line: 129,
          column: 28
        },
        end: {
          line: 129,
          column: 50
        }
      },
      "37": {
        start: {
          line: 130,
          column: 26
        },
        end: {
          line: 130,
          column: 160
        }
      },
      "38": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 134,
          column: 10
        }
      },
      "39": {
        start: {
          line: 136,
          column: 24
        },
        end: {
          line: 167,
          column: 5
        }
      },
      "40": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 171,
          column: 6
        }
      },
      "41": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 233,
          column: 16
        }
      },
      "42": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 232,
          column: 9
        }
      },
      "43": {
        start: {
          line: 178,
          column: 31
        },
        end: {
          line: 178,
          column: 98
        }
      },
      "44": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 185,
          column: 13
        }
      },
      "45": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 184,
          column: 19
        }
      },
      "46": {
        start: {
          line: 186,
          column: 37
        },
        end: {
          line: 186,
          column: 57
        }
      },
      "47": {
        start: {
          line: 187,
          column: 35
        },
        end: {
          line: 187,
          column: 64
        }
      },
      "48": {
        start: {
          line: 188,
          column: 33
        },
        end: {
          line: 188,
          column: 60
        }
      },
      "49": {
        start: {
          line: 189,
          column: 27
        },
        end: {
          line: 189,
          column: 69
        }
      },
      "50": {
        start: {
          line: 190,
          column: 28
        },
        end: {
          line: 190,
          column: 78
        }
      },
      "51": {
        start: {
          line: 191,
          column: 30
        },
        end: {
          line: 191,
          column: 120
        }
      },
      "52": {
        start: {
          line: 193,
          column: 27
        },
        end: {
          line: 193,
          column: 71
        }
      },
      "53": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 200,
          column: 13
        }
      },
      "54": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 199,
          column: 19
        }
      },
      "55": {
        start: {
          line: 202,
          column: 33
        },
        end: {
          line: 202,
          column: 114
        }
      },
      "56": {
        start: {
          line: 203,
          column: 29
        },
        end: {
          line: 203,
          column: 83
        }
      },
      "57": {
        start: {
          line: 204,
          column: 31
        },
        end: {
          line: 204,
          column: 70
        }
      },
      "58": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 213,
          column: 13
        }
      },
      "59": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 206,
          column: 64
        }
      },
      "60": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 212,
          column: 19
        }
      },
      "61": {
        start: {
          line: 214,
          column: 27
        },
        end: {
          line: 214,
          column: 96
        }
      },
      "62": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 217,
          column: 13
        }
      },
      "63": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 216,
          column: 69
        }
      },
      "64": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 223,
          column: 15
        }
      },
      "65": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 70
        }
      },
      "66": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 231,
          column: 15
        }
      },
      "67": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 239,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 10
          }
        },
        loc: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 22
          },
          end: {
            line: 15,
            column: 23
          }
        },
        loc: {
          start: {
            line: 15,
            column: 33
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "fetchSummaryData",
        decl: {
          start: {
            line: 26,
            column: 15
          },
          end: {
            line: 26,
            column: 31
          }
        },
        loc: {
          start: {
            line: 26,
            column: 80
          },
          end: {
            line: 172,
            column: 1
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 51,
            column: 58
          },
          end: {
            line: 51,
            column: 59
          }
        },
        loc: {
          start: {
            line: 51,
            column: 62
          },
          end: {
            line: 56,
            column: 9
          }
        },
        line: 51
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 63,
            column: 64
          },
          end: {
            line: 63,
            column: 65
          }
        },
        loc: {
          start: {
            line: 63,
            column: 68
          },
          end: {
            line: 73,
            column: 10
          }
        },
        line: 63
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 75,
            column: 67
          },
          end: {
            line: 75,
            column: 68
          }
        },
        loc: {
          start: {
            line: 75,
            column: 71
          },
          end: {
            line: 94,
            column: 10
          }
        },
        line: 75
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 100,
            column: 61
          },
          end: {
            line: 100,
            column: 62
          }
        },
        loc: {
          start: {
            line: 100,
            column: 65
          },
          end: {
            line: 107,
            column: 10
          }
        },
        line: 100
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 109,
            column: 59
          },
          end: {
            line: 109,
            column: 60
          }
        },
        loc: {
          start: {
            line: 109,
            column: 63
          },
          end: {
            line: 122,
            column: 10
          }
        },
        line: 109
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 128,
            column: 27
          },
          end: {
            line: 128,
            column: 28
          }
        },
        loc: {
          start: {
            line: 128,
            column: 50
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 128
      },
      "10": {
        name: "dashboardSummaryHandler",
        decl: {
          start: {
            line: 174,
            column: 15
          },
          end: {
            line: 174,
            column: 38
          }
        },
        loc: {
          start: {
            line: 174,
            column: 48
          },
          end: {
            line: 234,
            column: 1
          }
        },
        line: 174
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 175,
            column: 60
          },
          end: {
            line: 175,
            column: 61
          }
        },
        loc: {
          start: {
            line: 175,
            column: 86
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 175
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: 34,
            column: 11
          },
          end: {
            line: 37,
            column: 5
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 17
          }
        }, {
          start: {
            line: 29,
            column: 21
          },
          end: {
            line: 29,
            column: 28
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 11
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 11
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 23
          },
          end: {
            line: 41,
            column: 10
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 32
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 10
          }
        }],
        line: 39
      },
      "4": {
        loc: {
          start: {
            line: 42,
            column: 28
          },
          end: {
            line: 49,
            column: 10
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 42,
            column: 37
          },
          end: {
            line: 49,
            column: 5
          }
        }, {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 10
          }
        }],
        line: 42
      },
      "5": {
        loc: {
          start: {
            line: 55,
            column: 18
          },
          end: {
            line: 55,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 55,
            column: 27
          },
          end: {
            line: 55,
            column: 73
          }
        }, {
          start: {
            line: 55,
            column: 76
          },
          end: {
            line: 55,
            column: 96
          }
        }],
        line: 55
      },
      "6": {
        loc: {
          start: {
            line: 61,
            column: 30
          },
          end: {
            line: 61,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 30
          },
          end: {
            line: 61,
            column: 70
          }
        }, {
          start: {
            line: 61,
            column: 74
          },
          end: {
            line: 61,
            column: 75
          }
        }],
        line: 61
      },
      "7": {
        loc: {
          start: {
            line: 66,
            column: 19
          },
          end: {
            line: 68,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 19
          },
          end: {
            line: 66,
            column: 45
          }
        }, {
          start: {
            line: 66,
            column: 49
          },
          end: {
            line: 68,
            column: 17
          }
        }],
        line: 66
      },
      "8": {
        loc: {
          start: {
            line: 69,
            column: 19
          },
          end: {
            line: 71,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 19
          },
          end: {
            line: 69,
            column: 53
          }
        }, {
          start: {
            line: 69,
            column: 57
          },
          end: {
            line: 71,
            column: 17
          }
        }],
        line: 69
      },
      "9": {
        loc: {
          start: {
            line: 84,
            column: 19
          },
          end: {
            line: 86,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 19
          },
          end: {
            line: 84,
            column: 53
          }
        }, {
          start: {
            line: 84,
            column: 57
          },
          end: {
            line: 86,
            column: 17
          }
        }],
        line: 84
      },
      "10": {
        loc: {
          start: {
            line: 87,
            column: 19
          },
          end: {
            line: 89,
            column: 22
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 87,
            column: 28
          },
          end: {
            line: 89,
            column: 17
          }
        }, {
          start: {
            line: 89,
            column: 20
          },
          end: {
            line: 89,
            column: 22
          }
        }],
        line: 87
      },
      "11": {
        loc: {
          start: {
            line: 112,
            column: 19
          },
          end: {
            line: 114,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 19
          },
          end: {
            line: 112,
            column: 53
          }
        }, {
          start: {
            line: 112,
            column: 57
          },
          end: {
            line: 114,
            column: 17
          }
        }],
        line: 112
      },
      "12": {
        loc: {
          start: {
            line: 115,
            column: 19
          },
          end: {
            line: 117,
            column: 22
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 115,
            column: 28
          },
          end: {
            line: 117,
            column: 17
          }
        }, {
          start: {
            line: 117,
            column: 20
          },
          end: {
            line: 117,
            column: 22
          }
        }],
        line: 115
      },
      "13": {
        loc: {
          start: {
            line: 128,
            column: 28
          },
          end: {
            line: 128,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 128,
            column: 43
          },
          end: {
            line: 128,
            column: 47
          }
        }],
        line: 128
      },
      "14": {
        loc: {
          start: {
            line: 130,
            column: 26
          },
          end: {
            line: 130,
            column: 160
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 130,
            column: 41
          },
          end: {
            line: 130,
            column: 99
          }
        }, {
          start: {
            line: 130,
            column: 102
          },
          end: {
            line: 130,
            column: 160
          }
        }],
        line: 130
      },
      "15": {
        loc: {
          start: {
            line: 130,
            column: 44
          },
          end: {
            line: 130,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 130,
            column: 63
          },
          end: {
            line: 130,
            column: 66
          }
        }, {
          start: {
            line: 130,
            column: 69
          },
          end: {
            line: 130,
            column: 71
          }
        }],
        line: 130
      },
      "16": {
        loc: {
          start: {
            line: 130,
            column: 105
          },
          end: {
            line: 130,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 130,
            column: 124
          },
          end: {
            line: 130,
            column: 127
          }
        }, {
          start: {
            line: 130,
            column: 130
          },
          end: {
            line: 130,
            column: 132
          }
        }],
        line: 130
      },
      "17": {
        loc: {
          start: {
            line: 145,
            column: 27
          },
          end: {
            line: 145,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 27
          },
          end: {
            line: 145,
            column: 61
          }
        }, {
          start: {
            line: 145,
            column: 65
          },
          end: {
            line: 145,
            column: 66
          }
        }],
        line: 145
      },
      "18": {
        loc: {
          start: {
            line: 157,
            column: 27
          },
          end: {
            line: 157,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 27
          },
          end: {
            line: 157,
            column: 63
          }
        }, {
          start: {
            line: 157,
            column: 67
          },
          end: {
            line: 157,
            column: 68
          }
        }],
        line: 157
      },
      "19": {
        loc: {
          start: {
            line: 179,
            column: 12
          },
          end: {
            line: 185,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 12
          },
          end: {
            line: 185,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "20": {
        loc: {
          start: {
            line: 189,
            column: 27
          },
          end: {
            line: 189,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 189,
            column: 48
          },
          end: {
            line: 189,
            column: 62
          }
        }, {
          start: {
            line: 189,
            column: 65
          },
          end: {
            line: 189,
            column: 69
          }
        }],
        line: 189
      },
      "21": {
        loc: {
          start: {
            line: 190,
            column: 28
          },
          end: {
            line: 190,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 190,
            column: 43
          },
          end: {
            line: 190,
            column: 65
          }
        }, {
          start: {
            line: 190,
            column: 68
          },
          end: {
            line: 190,
            column: 78
          }
        }],
        line: 190
      },
      "22": {
        loc: {
          start: {
            line: 191,
            column: 30
          },
          end: {
            line: 191,
            column: 120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 191,
            column: 47
          },
          end: {
            line: 191,
            column: 71
          }
        }, {
          start: {
            line: 191,
            column: 74
          },
          end: {
            line: 191,
            column: 120
          }
        }],
        line: 191
      },
      "23": {
        loc: {
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 200,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 200,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "24": {
        loc: {
          start: {
            line: 203,
            column: 50
          },
          end: {
            line: 203,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 203,
            column: 50
          },
          end: {
            line: 203,
            column: 56
          }
        }, {
          start: {
            line: 203,
            column: 60
          },
          end: {
            line: 203,
            column: 65
          }
        }],
        line: 203
      },
      "25": {
        loc: {
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 213,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 213,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "26": {
        loc: {
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 217,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 217,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "27": {
        loc: {
          start: {
            line: 228,
            column: 25
          },
          end: {
            line: 228,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 228,
            column: 50
          },
          end: {
            line: 228,
            column: 63
          }
        }, {
          start: {
            line: 228,
            column: 66
          },
          end: {
            line: 228,
            column: 81
          }
        }],
        line: 228
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/dashboard/summary/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { prisma, safeQuery } from '@/lib/prisma';\nimport { Prisma } from '@prisma/client';\nimport { cacheService } from '@/lib/cache';\nimport { ShopAccessControl } from '@/lib/utils/shopMiddleware';\nimport { validateTokenPermission, getUserIdFromToken } from '@/lib/auth';\nimport { permissionService } from '@/lib/services/PermissionService';\nimport { withApiOptimization } from '@/lib/middleware/api-optimizer';\n\nexport async function fetchSummaryData(shopId?: string | null, periodDays?: number, startDate?: Date, endDate?: Date, userId?: string | null) {\n    // Build date filter for queries\n    const dateFilter: any = {};\n    if (startDate && endDate) {\n        const endOfDay = new Date(endDate);\n        endOfDay.setHours(23, 59, 59, 999);\n        dateFilter.gte = startDate;\n        dateFilter.lte = endOfDay;\n    } else if (periodDays) {\n        const now = new Date();\n        dateFilter.gte = new Date(now.getFullYear(), now.getMonth(), now.getDate() - periodDays);\n    }\n    \n    // Build where clauses\n    const shopFilter = shopId ? { shopId } : {};\n    const shopFilterForOR = shopId ? [{ fromShopId: shopId }, { toShopId: shopId }] : [];\n\n    // 1. Calculate Total Inventory Value (does not use date filtering)\n    const totalValueResult = await safeQuery<Array<{ totalinventoryvalue: bigint | number | null }>>(\n        () => prisma.$queryRaw`\n                SELECT SUM(COALESCE(i.shopspecificcost, 0) * i.quantity) as \"totalinventoryvalue\"\n                FROM \"InventoryItem\" i\n                WHERE i.quantity > 0 AND i.shopspecificcost IS NOT NULL AND i.shopspecificcost > 0\n                ${shopId ? Prisma.sql`AND i.\"shopId\" = ${shopId}` : Prisma.empty}\n        `,\n        [{ totalinventoryvalue: 0 }],\n        'Failed to calculate total inventory value via raw query'\n    );\n    const totalValue = Number(totalValueResult[0]?.totalinventoryvalue || 0);\n\n    // 2. Count Pending Transfers\n    const pendingTransfersResult = await safeQuery(\n        () => prisma.inventoryTransfer.count({\n            where: {\n                status: 'pending',\n                ...(shopFilterForOR.length > 0 && { OR: shopFilterForOR }),\n                ...(Object.keys(dateFilter).length > 0 && { createdAt: dateFilter })\n            }\n        }),\n        0,\n        'Failed to count pending transfers'\n    );\n\n    // 3. Calculate Outstanding Invoices\n    const outstandingInvoicesResult = await safeQuery(\n        () => prisma.invoice.aggregate({\n            where: {\n                status: { in: ['pending', 'overdue'] },\n                ...shopFilter,\n                ...(Object.keys(dateFilter).length > 0 && { createdAt: dateFilter }),\n                ...(userId ? { createdBy: userId } : {})\n            },\n            _sum: { total: true }\n        }),\n        { _sum: { total: 0 } },\n        'Failed to calculate outstanding invoices'\n    );\n\n    // 4. Count Low Stock Items\n    const lowStockItemsResult = await safeQuery(\n        () => prisma.inventoryItem.count({\n            where: {\n                ...shopFilter,\n                quantity: { lte: 10 }, // Using hardcoded value to fix complex query issue\n            }\n        }),\n        0,\n        'Failed to count low stock items'\n    );\n\n    // 5. Calculate Total Profit\n    const totalProfitResult = await safeQuery(\n        () => prisma.invoice.aggregate({\n            where: {\n                ...shopFilter,\n                ...(Object.keys(dateFilter).length > 0 && { createdAt: dateFilter }),\n                ...(userId ? { createdBy: userId } : {})\n            },\n            _sum: { totalProfit: true }\n        }),\n        { _sum: { totalProfit: 0 } },\n        'Failed to calculate total profit'\n    );\n    \n    // NOTE: Trends are placeholders\n    const getRandomTrend = (isPercentage = true) => {\n        const randomValue = Math.random() * 10 - 5;\n        const formatted = isPercentage\n            ? `${randomValue >= 0 ? '+' : ''}${randomValue.toFixed(1)}%`\n            : `${randomValue >= 0 ? '+' : ''}${Math.floor(randomValue)}`;\n        return { trend: formatted, trendUp: randomValue >= 0 };\n    };\n\n    const summaryData = [\n        {\n            title: 'Total Inventory Value',\n            value: `Rs. ${totalValue.toLocaleString()}`,\n            icon: 'Package',\n            ...getRandomTrend(true)\n        },\n        {\n            title: 'Total Profit',\n            value: `Rs. ${(totalProfitResult._sum.totalProfit || 0).toLocaleString()}`,\n            icon: 'TrendingUp',\n            ...getRandomTrend(true)\n        },\n        {\n            title: 'Pending Transfers',\n            value: pendingTransfersResult.toString(),\n            icon: 'Truck',\n            ...getRandomTrend(false)\n        },\n        {\n            title: 'Outstanding Invoices',\n            value: `Rs. ${(outstandingInvoicesResult._sum.total || 0).toLocaleString()}`,\n            icon: 'CreditCard',\n            ...getRandomTrend(true)\n        },\n        {\n            title: 'Low Stock Items',\n            value: lowStockItemsResult.toString(),\n            icon: 'AlertTriangle',\n            ...getRandomTrend(false)\n        }\n    ];\n\n    return {\n        success: true,\n        data: summaryData\n    };\n}\n\n// Original handler function\nasync function dashboardSummaryHandler(request: NextRequest) {\n    return ShopAccessControl.withShopAccess(async (request: NextRequest, context) => {\n        try {\n            // Validate token and permissions\n            const authResult = await validateTokenPermission(request, 'dashboard:view');\n            if (!authResult.isValid) {\n                return NextResponse.json({ error: authResult.message }, { status: 401 });\n            }\n\n            const { searchParams } = new URL(request.url);\n            const startDateParam = searchParams.get('startDate');\n            const endDateParam = searchParams.get('endDate');\n            \n            const shopId = context.isFiltered ? context.shopId : null;\n\n            const endDate = endDateParam ? new Date(endDateParam) : new Date();\n            const startDate = startDateParam ? new Date(startDateParam) : new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\n            \n            // Get user ID from token\n            const userId = await getUserIdFromToken(request);\n            if (!userId) {\n                return NextResponse.json({ error: 'User ID not found in token' }, { status: 401 });\n            }\n            \n            // NOTE: User-specific filtering for summary data not fully implemented in cache key yet.\n            const dateRangeKey = `${startDate.toISOString().split('T')[0]}-${endDate.toISOString().split('T')[0]}`;\n            const cacheKey = `dashboard:summary:${shopId || 'all'}:${dateRangeKey}`;\n            const cachedData = await cacheService.get(cacheKey);\n\n            if (cachedData) {\n                console.log('\u2705 Summary data served from cache');\n                return NextResponse.json({ ...cachedData, meta: { fromCache: true } });\n            }\n\n            const result = await fetchSummaryData(shopId, undefined, startDate, endDate, userId);\n\n            if (result.success) {\n                await cacheService.set(cacheKey, result, 120);\n            }\n\n            return NextResponse.json({ ...result, meta: { fromCache: false } });\n\n        } catch (error) {\n            console.error('Error fetching dashboard summary:', error);\n            return NextResponse.json({\n                success: false,\n                message: error instanceof Error ? error.message : 'Unknown error',\n            }, { status: 500 });\n        }\n    })(request);\n}\n\n// Apply API optimization middleware\nexport const GET = withApiOptimization(dashboardSummaryHandler, {\n    cacheTTL: 300, // 5 minutes cache\n    enableCompression: true,\n    enableCaching: true\n});"],
      names: ["GET", "fetchSummaryData", "shopId", "periodDays", "startDate", "endDate", "userId", "dateFilter", "endOfDay", "Date", "setHours", "gte", "lte", "now", "getFullYear", "getMonth", "getDate", "shopFilter", "shopFilterForOR", "fromShopId", "toShopId", "totalValueResult", "safeQuery", "prisma", "$queryRaw", "Prisma", "sql", "empty", "totalinventoryvalue", "totalValue", "Number", "pendingTransfersResult", "inventoryTransfer", "count", "where", "status", "length", "OR", "Object", "keys", "createdAt", "outstandingInvoicesResult", "invoice", "aggregate", "in", "createdBy", "_sum", "total", "lowStockItemsResult", "inventoryItem", "quantity", "totalProfitResult", "totalProfit", "getRandomTrend", "isPercentage", "randomValue", "Math", "random", "formatted", "toFixed", "floor", "trend", "trendUp", "summaryData", "title", "value", "toLocaleString", "icon", "toString", "success", "data", "dashboardSummaryHandler", "request", "ShopAccessControl", "withShopAccess", "context", "authResult", "validateTokenPermission", "isValid", "NextResponse", "json", "error", "message", "searchParams", "URL", "url", "startDateParam", "get", "endDateParam", "isFiltered", "getUserIdFromToken", "dateRangeKey", "toISOString", "split", "cacheKey", "cachedData", "cacheService", "console", "log", "meta", "fromCache", "result", "undefined", "set", "Error", "withApiOptimization", "cacheTTL", "enableCompression", "enableCaching"],
      mappings: ";;;;;;;;;;;IAmMaA,GAAG;eAAHA;;IA1LSC,gBAAgB;eAAhBA;;;wBAToB;wBACR;wBACX;uBACM;gCACK;sBAC0B;8BAExB;AAE7B,eAAeA,iBAAiBC,MAAsB,EAAEC,UAAmB,EAAEC,SAAgB,EAAEC,OAAc,EAAEC,MAAsB;IACxI,gCAAgC;IAChC,MAAMC,aAAkB,CAAC;IACzB,IAAIH,aAAaC,SAAS;QACtB,MAAMG,WAAW,IAAIC,KAAKJ;QAC1BG,SAASE,QAAQ,CAAC,IAAI,IAAI,IAAI;QAC9BH,WAAWI,GAAG,GAAGP;QACjBG,WAAWK,GAAG,GAAGJ;IACrB,OAAO,IAAIL,YAAY;QACnB,MAAMU,MAAM,IAAIJ;QAChBF,WAAWI,GAAG,GAAG,IAAIF,KAAKI,IAAIC,WAAW,IAAID,IAAIE,QAAQ,IAAIF,IAAIG,OAAO,KAAKb;IACjF;IAEA,sBAAsB;IACtB,MAAMc,aAAaf,SAAS;QAAEA;IAAO,IAAI,CAAC;IAC1C,MAAMgB,kBAAkBhB,SAAS;QAAC;YAAEiB,YAAYjB;QAAO;QAAG;YAAEkB,UAAUlB;QAAO;KAAE,GAAG,EAAE;IAEpF,mEAAmE;IACnE,MAAMmB,mBAAmB,MAAMC,IAAAA,iBAAS,EACpC,IAAMC,cAAM,CAACC,SAAS,CAAC;;;;gBAIf,EAAEtB,SAASuB,cAAM,CAACC,GAAG,CAAC,iBAAiB,EAAExB,OAAO,CAAC,GAAGuB,cAAM,CAACE,KAAK,CAAC;QACzE,CAAC,EACD;QAAC;YAAEC,qBAAqB;QAAE;KAAE,EAC5B;IAEJ,MAAMC,aAAaC,OAAOT,gBAAgB,CAAC,EAAE,EAAEO,uBAAuB;IAEtE,6BAA6B;IAC7B,MAAMG,yBAAyB,MAAMT,IAAAA,iBAAS,EAC1C,IAAMC,cAAM,CAACS,iBAAiB,CAACC,KAAK,CAAC;YACjCC,OAAO;gBACHC,QAAQ;gBACR,GAAIjB,gBAAgBkB,MAAM,GAAG,KAAK;oBAAEC,IAAInB;gBAAgB,CAAC;gBACzD,GAAIoB,OAAOC,IAAI,CAAChC,YAAY6B,MAAM,GAAG,KAAK;oBAAEI,WAAWjC;gBAAW,CAAC;YACvE;QACJ,IACA,GACA;IAGJ,oCAAoC;IACpC,MAAMkC,4BAA4B,MAAMnB,IAAAA,iBAAS,EAC7C,IAAMC,cAAM,CAACmB,OAAO,CAACC,SAAS,CAAC;YAC3BT,OAAO;gBACHC,QAAQ;oBAAES,IAAI;wBAAC;wBAAW;qBAAU;gBAAC;gBACrC,GAAG3B,UAAU;gBACb,GAAIqB,OAAOC,IAAI,CAAChC,YAAY6B,MAAM,GAAG,KAAK;oBAAEI,WAAWjC;gBAAW,CAAC;gBACnE,GAAID,SAAS;oBAAEuC,WAAWvC;gBAAO,IAAI,CAAC,CAAC;YAC3C;YACAwC,MAAM;gBAAEC,OAAO;YAAK;QACxB,IACA;QAAED,MAAM;YAAEC,OAAO;QAAE;IAAE,GACrB;IAGJ,2BAA2B;IAC3B,MAAMC,sBAAsB,MAAM1B,IAAAA,iBAAS,EACvC,IAAMC,cAAM,CAAC0B,aAAa,CAAChB,KAAK,CAAC;YAC7BC,OAAO;gBACH,GAAGjB,UAAU;gBACbiC,UAAU;oBAAEtC,KAAK;gBAAG;YACxB;QACJ,IACA,GACA;IAGJ,4BAA4B;IAC5B,MAAMuC,oBAAoB,MAAM7B,IAAAA,iBAAS,EACrC,IAAMC,cAAM,CAACmB,OAAO,CAACC,SAAS,CAAC;YAC3BT,OAAO;gBACH,GAAGjB,UAAU;gBACb,GAAIqB,OAAOC,IAAI,CAAChC,YAAY6B,MAAM,GAAG,KAAK;oBAAEI,WAAWjC;gBAAW,CAAC;gBACnE,GAAID,SAAS;oBAAEuC,WAAWvC;gBAAO,IAAI,CAAC,CAAC;YAC3C;YACAwC,MAAM;gBAAEM,aAAa;YAAK;QAC9B,IACA;QAAEN,MAAM;YAAEM,aAAa;QAAE;IAAE,GAC3B;IAGJ,gCAAgC;IAChC,MAAMC,iBAAiB,CAACC,eAAe,IAAI;QACvC,MAAMC,cAAcC,KAAKC,MAAM,KAAK,KAAK;QACzC,MAAMC,YAAYJ,eACZ,CAAC,EAAEC,eAAe,IAAI,MAAM,GAAG,EAAEA,YAAYI,OAAO,CAAC,GAAG,CAAC,CAAC,GAC1D,CAAC,EAAEJ,eAAe,IAAI,MAAM,GAAG,EAAEC,KAAKI,KAAK,CAACL,aAAa,CAAC;QAChE,OAAO;YAAEM,OAAOH;YAAWI,SAASP,eAAe;QAAE;IACzD;IAEA,MAAMQ,cAAc;QAChB;YACIC,OAAO;YACPC,OAAO,CAAC,IAAI,EAAEpC,WAAWqC,cAAc,GAAG,CAAC;YAC3CC,MAAM;YACN,GAAGd,eAAe,KAAK;QAC3B;QACA;YACIW,OAAO;YACPC,OAAO,CAAC,IAAI,EAAE,AAACd,CAAAA,kBAAkBL,IAAI,CAACM,WAAW,IAAI,CAAA,EAAGc,cAAc,GAAG,CAAC;YAC1EC,MAAM;YACN,GAAGd,eAAe,KAAK;QAC3B;QACA;YACIW,OAAO;YACPC,OAAOlC,uBAAuBqC,QAAQ;YACtCD,MAAM;YACN,GAAGd,eAAe,MAAM;QAC5B;QACA;YACIW,OAAO;YACPC,OAAO,CAAC,IAAI,EAAE,AAACxB,CAAAA,0BAA0BK,IAAI,CAACC,KAAK,IAAI,CAAA,EAAGmB,cAAc,GAAG,CAAC;YAC5EC,MAAM;YACN,GAAGd,eAAe,KAAK;QAC3B;QACA;YACIW,OAAO;YACPC,OAAOjB,oBAAoBoB,QAAQ;YACnCD,MAAM;YACN,GAAGd,eAAe,MAAM;QAC5B;KACH;IAED,OAAO;QACHgB,SAAS;QACTC,MAAMP;IACV;AACJ;AAEA,4BAA4B;AAC5B,eAAeQ,wBAAwBC,OAAoB;IACvD,OAAOC,iCAAiB,CAACC,cAAc,CAAC,OAAOF,SAAsBG;QACjE,IAAI;YACA,iCAAiC;YACjC,MAAMC,aAAa,MAAMC,IAAAA,6BAAuB,EAACL,SAAS;YAC1D,IAAI,CAACI,WAAWE,OAAO,EAAE;gBACrB,OAAOC,oBAAY,CAACC,IAAI,CAAC;oBAAEC,OAAOL,WAAWM,OAAO;gBAAC,GAAG;oBAAE/C,QAAQ;gBAAI;YAC1E;YAEA,MAAM,EAAEgD,YAAY,EAAE,GAAG,IAAIC,IAAIZ,QAAQa,GAAG;YAC5C,MAAMC,iBAAiBH,aAAaI,GAAG,CAAC;YACxC,MAAMC,eAAeL,aAAaI,GAAG,CAAC;YAEtC,MAAMrF,SAASyE,QAAQc,UAAU,GAAGd,QAAQzE,MAAM,GAAG;YAErD,MAAMG,UAAUmF,eAAe,IAAI/E,KAAK+E,gBAAgB,IAAI/E;YAC5D,MAAML,YAAYkF,iBAAiB,IAAI7E,KAAK6E,kBAAkB,IAAI7E,KAAKA,KAAKI,GAAG,KAAK,IAAI,KAAK,KAAK,KAAK;YAEvG,yBAAyB;YACzB,MAAMP,SAAS,MAAMoF,IAAAA,wBAAkB,EAAClB;YACxC,IAAI,CAAClE,QAAQ;gBACT,OAAOyE,oBAAY,CAACC,IAAI,CAAC;oBAAEC,OAAO;gBAA6B,GAAG;oBAAE9C,QAAQ;gBAAI;YACpF;YAEA,yFAAyF;YACzF,MAAMwD,eAAe,CAAC,EAAEvF,UAAUwF,WAAW,GAAGC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAExF,QAAQuF,WAAW,GAAGC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACtG,MAAMC,WAAW,CAAC,kBAAkB,EAAE5F,UAAU,MAAM,CAAC,EAAEyF,aAAa,CAAC;YACvE,MAAMI,aAAa,MAAMC,mBAAY,CAACT,GAAG,CAACO;YAE1C,IAAIC,YAAY;gBACZE,QAAQC,GAAG,CAAC;gBACZ,OAAOnB,oBAAY,CAACC,IAAI,CAAC;oBAAE,GAAGe,UAAU;oBAAEI,MAAM;wBAAEC,WAAW;oBAAK;gBAAE;YACxE;YAEA,MAAMC,SAAS,MAAMpG,iBAAiBC,QAAQoG,WAAWlG,WAAWC,SAASC;YAE7E,IAAI+F,OAAOhC,OAAO,EAAE;gBAChB,MAAM2B,mBAAY,CAACO,GAAG,CAACT,UAAUO,QAAQ;YAC7C;YAEA,OAAOtB,oBAAY,CAACC,IAAI,CAAC;gBAAE,GAAGqB,MAAM;gBAAEF,MAAM;oBAAEC,WAAW;gBAAM;YAAE;QAErE,EAAE,OAAOnB,OAAO;YACZgB,QAAQhB,KAAK,CAAC,qCAAqCA;YACnD,OAAOF,oBAAY,CAACC,IAAI,CAAC;gBACrBX,SAAS;gBACTa,SAASD,iBAAiBuB,QAAQvB,MAAMC,OAAO,GAAG;YACtD,GAAG;gBAAE/C,QAAQ;YAAI;QACrB;IACJ,GAAGqC;AACP;AAGO,MAAMxE,MAAMyG,IAAAA,iCAAmB,EAAClC,yBAAyB;IAC5DmC,UAAU;IACVC,mBAAmB;IACnBC,eAAe;AACnB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "79e95fc2d5fe7e79b64eb3bd3f0bc203df7b23e2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_vzq0avkdi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_vzq0avkdi();
cov_vzq0avkdi().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_vzq0avkdi().f[0]++;
  cov_vzq0avkdi().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_vzq0avkdi().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_vzq0avkdi().s[3]++;
_export(exports, {
  GET: function () {
    /* istanbul ignore next */
    cov_vzq0avkdi().f[1]++;
    cov_vzq0avkdi().s[4]++;
    return GET;
  },
  fetchSummaryData: function () {
    /* istanbul ignore next */
    cov_vzq0avkdi().f[2]++;
    cov_vzq0avkdi().s[5]++;
    return fetchSummaryData;
  }
});
const _server =
/* istanbul ignore next */
(cov_vzq0avkdi().s[6]++, require("next/server"));
const _prisma =
/* istanbul ignore next */
(cov_vzq0avkdi().s[7]++, require("../../../../lib/prisma"));
const _client =
/* istanbul ignore next */
(cov_vzq0avkdi().s[8]++, require("@prisma/client"));
const _cache =
/* istanbul ignore next */
(cov_vzq0avkdi().s[9]++, require("../../../../lib/cache"));
const _shopMiddleware =
/* istanbul ignore next */
(cov_vzq0avkdi().s[10]++, require("../../../../lib/utils/shopMiddleware"));
const _auth =
/* istanbul ignore next */
(cov_vzq0avkdi().s[11]++, require("../../../../lib/auth"));
const _apioptimizer =
/* istanbul ignore next */
(cov_vzq0avkdi().s[12]++, require("../../../../lib/middleware/api-optimizer"));
async function fetchSummaryData(shopId, periodDays, startDate, endDate, userId) {
  /* istanbul ignore next */
  cov_vzq0avkdi().f[3]++;
  // Build date filter for queries
  const dateFilter =
  /* istanbul ignore next */
  (cov_vzq0avkdi().s[13]++, {});
  /* istanbul ignore next */
  cov_vzq0avkdi().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_vzq0avkdi().b[1][0]++, startDate) &&
  /* istanbul ignore next */
  (cov_vzq0avkdi().b[1][1]++, endDate)) {
    /* istanbul ignore next */
    cov_vzq0avkdi().b[0][0]++;
    const endOfDay =
    /* istanbul ignore next */
    (cov_vzq0avkdi().s[15]++, new Date(endDate));
    /* istanbul ignore next */
    cov_vzq0avkdi().s[16]++;
    endOfDay.setHours(23, 59, 59, 999);
    /* istanbul ignore next */
    cov_vzq0avkdi().s[17]++;
    dateFilter.gte = startDate;
    /* istanbul ignore next */
    cov_vzq0avkdi().s[18]++;
    dateFilter.lte = endOfDay;
  } else {
    /* istanbul ignore next */
    cov_vzq0avkdi().b[0][1]++;
    cov_vzq0avkdi().s[19]++;
    if (periodDays) {
      /* istanbul ignore next */
      cov_vzq0avkdi().b[2][0]++;
      const now =
      /* istanbul ignore next */
      (cov_vzq0avkdi().s[20]++, new Date());
      /* istanbul ignore next */
      cov_vzq0avkdi().s[21]++;
      dateFilter.gte = new Date(now.getFullYear(), now.getMonth(), now.getDate() - periodDays);
    } else
    /* istanbul ignore next */
    {
      cov_vzq0avkdi().b[2][1]++;
    }
  }
  // Build where clauses
  const shopFilter =
  /* istanbul ignore next */
  (cov_vzq0avkdi().s[22]++, shopId ?
  /* istanbul ignore next */
  (cov_vzq0avkdi().b[3][0]++, {
    shopId
  }) :
  /* istanbul ignore next */
  (cov_vzq0avkdi().b[3][1]++, {}));
  const shopFilterForOR =
  /* istanbul ignore next */
  (cov_vzq0avkdi().s[23]++, shopId ?
  /* istanbul ignore next */
  (cov_vzq0avkdi().b[4][0]++, [{
    fromShopId: shopId
  }, {
    toShopId: shopId
  }]) :
  /* istanbul ignore next */
  (cov_vzq0avkdi().b[4][1]++, []));
  // 1. Calculate Total Inventory Value (does not use date filtering)
  const totalValueResult =
  /* istanbul ignore next */
  (cov_vzq0avkdi().s[24]++, await (0, _prisma.safeQuery)(() => {
    /* istanbul ignore next */
    cov_vzq0avkdi().f[4]++;
    cov_vzq0avkdi().s[25]++;
    return _prisma.prisma.$queryRaw`
                SELECT SUM(COALESCE(i.shopspecificcost, 0) * i.quantity) as "totalinventoryvalue"
                FROM "InventoryItem" i
                WHERE i.quantity > 0 AND i.shopspecificcost IS NOT NULL AND i.shopspecificcost > 0
                ${shopId ?
    /* istanbul ignore next */
    (cov_vzq0avkdi().b[5][0]++, _client.Prisma.sql`AND i."shopId" = ${shopId}`) :
    /* istanbul ignore next */
    (cov_vzq0avkdi().b[5][1]++, _client.Prisma.empty)}
        `;
  }, [{
    totalinventoryvalue: 0
  }], "Failed to calculate total inventory value via raw query"));
  const totalValue =
  /* istanbul ignore next */
  (cov_vzq0avkdi().s[26]++, Number(
  /* istanbul ignore next */
  (cov_vzq0avkdi().b[6][0]++, totalValueResult[0]?.totalinventoryvalue) ||
  /* istanbul ignore next */
  (cov_vzq0avkdi().b[6][1]++, 0)));
  // 2. Count Pending Transfers
  const pendingTransfersResult =
  /* istanbul ignore next */
  (cov_vzq0avkdi().s[27]++, await (0, _prisma.safeQuery)(() => {
    /* istanbul ignore next */
    cov_vzq0avkdi().f[5]++;
    cov_vzq0avkdi().s[28]++;
    return _prisma.prisma.inventoryTransfer.count({
      where: {
        status: "pending",
        ...(
        /* istanbul ignore next */
        (cov_vzq0avkdi().b[7][0]++, shopFilterForOR.length > 0) &&
        /* istanbul ignore next */
        (cov_vzq0avkdi().b[7][1]++, {
          OR: shopFilterForOR
        })),
        ...(
        /* istanbul ignore next */
        (cov_vzq0avkdi().b[8][0]++, Object.keys(dateFilter).length > 0) &&
        /* istanbul ignore next */
        (cov_vzq0avkdi().b[8][1]++, {
          createdAt: dateFilter
        }))
      }
    });
  }, 0, "Failed to count pending transfers"));
  // 3. Calculate Outstanding Invoices
  const outstandingInvoicesResult =
  /* istanbul ignore next */
  (cov_vzq0avkdi().s[29]++, await (0, _prisma.safeQuery)(() => {
    /* istanbul ignore next */
    cov_vzq0avkdi().f[6]++;
    cov_vzq0avkdi().s[30]++;
    return _prisma.prisma.invoice.aggregate({
      where: {
        status: {
          in: ["pending", "overdue"]
        },
        ...shopFilter,
        ...(
        /* istanbul ignore next */
        (cov_vzq0avkdi().b[9][0]++, Object.keys(dateFilter).length > 0) &&
        /* istanbul ignore next */
        (cov_vzq0avkdi().b[9][1]++, {
          createdAt: dateFilter
        })),
        ...(userId ?
        /* istanbul ignore next */
        (cov_vzq0avkdi().b[10][0]++, {
          createdBy: userId
        }) :
        /* istanbul ignore next */
        (cov_vzq0avkdi().b[10][1]++, {}))
      },
      _sum: {
        total: true
      }
    });
  }, {
    _sum: {
      total: 0
    }
  }, "Failed to calculate outstanding invoices"));
  // 4. Count Low Stock Items
  const lowStockItemsResult =
  /* istanbul ignore next */
  (cov_vzq0avkdi().s[31]++, await (0, _prisma.safeQuery)(() => {
    /* istanbul ignore next */
    cov_vzq0avkdi().f[7]++;
    cov_vzq0avkdi().s[32]++;
    return _prisma.prisma.inventoryItem.count({
      where: {
        ...shopFilter,
        quantity: {
          lte: 10
        }
      }
    });
  }, 0, "Failed to count low stock items"));
  // 5. Calculate Total Profit
  const totalProfitResult =
  /* istanbul ignore next */
  (cov_vzq0avkdi().s[33]++, await (0, _prisma.safeQuery)(() => {
    /* istanbul ignore next */
    cov_vzq0avkdi().f[8]++;
    cov_vzq0avkdi().s[34]++;
    return _prisma.prisma.invoice.aggregate({
      where: {
        ...shopFilter,
        ...(
        /* istanbul ignore next */
        (cov_vzq0avkdi().b[11][0]++, Object.keys(dateFilter).length > 0) &&
        /* istanbul ignore next */
        (cov_vzq0avkdi().b[11][1]++, {
          createdAt: dateFilter
        })),
        ...(userId ?
        /* istanbul ignore next */
        (cov_vzq0avkdi().b[12][0]++, {
          createdBy: userId
        }) :
        /* istanbul ignore next */
        (cov_vzq0avkdi().b[12][1]++, {}))
      },
      _sum: {
        totalProfit: true
      }
    });
  }, {
    _sum: {
      totalProfit: 0
    }
  }, "Failed to calculate total profit"));
  // NOTE: Trends are placeholders
  /* istanbul ignore next */
  cov_vzq0avkdi().s[35]++;
  const getRandomTrend = (isPercentage =
  /* istanbul ignore next */
  (cov_vzq0avkdi().b[13][0]++, true)) => {
    /* istanbul ignore next */
    cov_vzq0avkdi().f[9]++;
    const randomValue =
    /* istanbul ignore next */
    (cov_vzq0avkdi().s[36]++, Math.random() * 10 - 5);
    const formatted =
    /* istanbul ignore next */
    (cov_vzq0avkdi().s[37]++, isPercentage ?
    /* istanbul ignore next */
    (cov_vzq0avkdi().b[14][0]++, `${randomValue >= 0 ?
    /* istanbul ignore next */
    (cov_vzq0avkdi().b[15][0]++, "+") :
    /* istanbul ignore next */
    (cov_vzq0avkdi().b[15][1]++, "")}${randomValue.toFixed(1)}%`) :
    /* istanbul ignore next */
    (cov_vzq0avkdi().b[14][1]++, `${randomValue >= 0 ?
    /* istanbul ignore next */
    (cov_vzq0avkdi().b[16][0]++, "+") :
    /* istanbul ignore next */
    (cov_vzq0avkdi().b[16][1]++, "")}${Math.floor(randomValue)}`));
    /* istanbul ignore next */
    cov_vzq0avkdi().s[38]++;
    return {
      trend: formatted,
      trendUp: randomValue >= 0
    };
  };
  const summaryData =
  /* istanbul ignore next */
  (cov_vzq0avkdi().s[39]++, [{
    title: "Total Inventory Value",
    value: `Rs. ${totalValue.toLocaleString()}`,
    icon: "Package",
    ...getRandomTrend(true)
  }, {
    title: "Total Profit",
    value: `Rs. ${(
    /* istanbul ignore next */
    (cov_vzq0avkdi().b[17][0]++, totalProfitResult._sum.totalProfit) ||
    /* istanbul ignore next */
    (cov_vzq0avkdi().b[17][1]++, 0)).toLocaleString()}`,
    icon: "TrendingUp",
    ...getRandomTrend(true)
  }, {
    title: "Pending Transfers",
    value: pendingTransfersResult.toString(),
    icon: "Truck",
    ...getRandomTrend(false)
  }, {
    title: "Outstanding Invoices",
    value: `Rs. ${(
    /* istanbul ignore next */
    (cov_vzq0avkdi().b[18][0]++, outstandingInvoicesResult._sum.total) ||
    /* istanbul ignore next */
    (cov_vzq0avkdi().b[18][1]++, 0)).toLocaleString()}`,
    icon: "CreditCard",
    ...getRandomTrend(true)
  }, {
    title: "Low Stock Items",
    value: lowStockItemsResult.toString(),
    icon: "AlertTriangle",
    ...getRandomTrend(false)
  }]);
  /* istanbul ignore next */
  cov_vzq0avkdi().s[40]++;
  return {
    success: true,
    data: summaryData
  };
}
// Original handler function
async function dashboardSummaryHandler(request) {
  /* istanbul ignore next */
  cov_vzq0avkdi().f[10]++;
  cov_vzq0avkdi().s[41]++;
  return _shopMiddleware.ShopAccessControl.withShopAccess(async (request, context) => {
    /* istanbul ignore next */
    cov_vzq0avkdi().f[11]++;
    cov_vzq0avkdi().s[42]++;
    try {
      // Validate token and permissions
      const authResult =
      /* istanbul ignore next */
      (cov_vzq0avkdi().s[43]++, await (0, _auth.validateTokenPermission)(request, "dashboard:view"));
      /* istanbul ignore next */
      cov_vzq0avkdi().s[44]++;
      if (!authResult.isValid) {
        /* istanbul ignore next */
        cov_vzq0avkdi().b[19][0]++;
        cov_vzq0avkdi().s[45]++;
        return _server.NextResponse.json({
          error: authResult.message
        }, {
          status: 401
        });
      } else
      /* istanbul ignore next */
      {
        cov_vzq0avkdi().b[19][1]++;
      }
      const {
        searchParams
      } =
      /* istanbul ignore next */
      (cov_vzq0avkdi().s[46]++, new URL(request.url));
      const startDateParam =
      /* istanbul ignore next */
      (cov_vzq0avkdi().s[47]++, searchParams.get("startDate"));
      const endDateParam =
      /* istanbul ignore next */
      (cov_vzq0avkdi().s[48]++, searchParams.get("endDate"));
      const shopId =
      /* istanbul ignore next */
      (cov_vzq0avkdi().s[49]++, context.isFiltered ?
      /* istanbul ignore next */
      (cov_vzq0avkdi().b[20][0]++, context.shopId) :
      /* istanbul ignore next */
      (cov_vzq0avkdi().b[20][1]++, null));
      const endDate =
      /* istanbul ignore next */
      (cov_vzq0avkdi().s[50]++, endDateParam ?
      /* istanbul ignore next */
      (cov_vzq0avkdi().b[21][0]++, new Date(endDateParam)) :
      /* istanbul ignore next */
      (cov_vzq0avkdi().b[21][1]++, new Date()));
      const startDate =
      /* istanbul ignore next */
      (cov_vzq0avkdi().s[51]++, startDateParam ?
      /* istanbul ignore next */
      (cov_vzq0avkdi().b[22][0]++, new Date(startDateParam)) :
      /* istanbul ignore next */
      (cov_vzq0avkdi().b[22][1]++, new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)));
      // Get user ID from token
      const userId =
      /* istanbul ignore next */
      (cov_vzq0avkdi().s[52]++, await (0, _auth.getUserIdFromToken)(request));
      /* istanbul ignore next */
      cov_vzq0avkdi().s[53]++;
      if (!userId) {
        /* istanbul ignore next */
        cov_vzq0avkdi().b[23][0]++;
        cov_vzq0avkdi().s[54]++;
        return _server.NextResponse.json({
          error: "User ID not found in token"
        }, {
          status: 401
        });
      } else
      /* istanbul ignore next */
      {
        cov_vzq0avkdi().b[23][1]++;
      }
      // NOTE: User-specific filtering for summary data not fully implemented in cache key yet.
      const dateRangeKey =
      /* istanbul ignore next */
      (cov_vzq0avkdi().s[55]++, `${startDate.toISOString().split("T")[0]}-${endDate.toISOString().split("T")[0]}`);
      const cacheKey =
      /* istanbul ignore next */
      (cov_vzq0avkdi().s[56]++, `dashboard:summary:${
      /* istanbul ignore next */
      (cov_vzq0avkdi().b[24][0]++, shopId) ||
      /* istanbul ignore next */
      (cov_vzq0avkdi().b[24][1]++, "all")}:${dateRangeKey}`);
      const cachedData =
      /* istanbul ignore next */
      (cov_vzq0avkdi().s[57]++, await _cache.cacheService.get(cacheKey));
      /* istanbul ignore next */
      cov_vzq0avkdi().s[58]++;
      if (cachedData) {
        /* istanbul ignore next */
        cov_vzq0avkdi().b[25][0]++;
        cov_vzq0avkdi().s[59]++;
        console.log("✅ Summary data served from cache");
        /* istanbul ignore next */
        cov_vzq0avkdi().s[60]++;
        return _server.NextResponse.json({
          ...cachedData,
          meta: {
            fromCache: true
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_vzq0avkdi().b[25][1]++;
      }
      const result =
      /* istanbul ignore next */
      (cov_vzq0avkdi().s[61]++, await fetchSummaryData(shopId, undefined, startDate, endDate, userId));
      /* istanbul ignore next */
      cov_vzq0avkdi().s[62]++;
      if (result.success) {
        /* istanbul ignore next */
        cov_vzq0avkdi().b[26][0]++;
        cov_vzq0avkdi().s[63]++;
        await _cache.cacheService.set(cacheKey, result, 120);
      } else
      /* istanbul ignore next */
      {
        cov_vzq0avkdi().b[26][1]++;
      }
      cov_vzq0avkdi().s[64]++;
      return _server.NextResponse.json({
        ...result,
        meta: {
          fromCache: false
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_vzq0avkdi().s[65]++;
      console.error("Error fetching dashboard summary:", error);
      /* istanbul ignore next */
      cov_vzq0avkdi().s[66]++;
      return _server.NextResponse.json({
        success: false,
        message: error instanceof Error ?
        /* istanbul ignore next */
        (cov_vzq0avkdi().b[27][0]++, error.message) :
        /* istanbul ignore next */
        (cov_vzq0avkdi().b[27][1]++, "Unknown error")
      }, {
        status: 500
      });
    }
  })(request);
}
const GET =
/* istanbul ignore next */
(cov_vzq0avkdi().s[67]++, (0, _apioptimizer.withApiOptimization)(dashboardSummaryHandler, {
  cacheTTL: 300,
  enableCompression: true,
  enableCaching: true
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,