{"version":3,"names":["cov_q4dxu2pp","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","getTransferDashboardData","getTransferPerformanceStats","trackTransferOperation","transferPerformanceMonitor","TransferPerformanceMonitor","constructor","metrics","maxMetricsHistory","alertThresholds","slowOperationMs","highErrorRate","lowCacheHitRate","performanceMonitor","_performance","PerformanceMonitor","startPeriodicCleanup","startOperation","operationType","metadata","timerName","startTimer","timer","success","errorType","cacheHit","duration","endTimer","recordMetric","itemCount","shopCount","timestamp","Date","now","checkPerformanceAlerts","metric","push","length","slice","console","warn","operation","_duration","_success","recentMetrics","getRecentMetrics","operationMetrics","filter","m","errorRate","error","toFixed","recentOperations","timeWindow","cacheableOperations","includes","cacheHitRate","operations","timeWindowMs","cutoff","getPerformanceStats","totalOperations","averageDuration","successRate","operationBreakdown","recentErrors","performanceTrends","reduce","sum","cacheableMetrics","operationTypes","Set","map","opType","opMetrics","count","calculatePerformanceTrends","hourlyBuckets","Map","hourBucket","Math","floor","has","set","get","trends","Array","from","entries","bucketMetrics","operationCount","sort","a","getPerformanceRecommendations","stats","recommendations","message","action","slowOperations","Object","_","data","op","join","exportMetrics","clearMetrics","setInterval","getDashboardData","last5Minutes","lastHour","last24Hours","current","activeOperations","getActiveTimers","cacheStats","_transferCache","transferCacheService","getStats"],"sources":["/Users/sachin/Documents/md-sports-/src/lib/transferPerformanceMonitor.ts"],"sourcesContent":["/**\n * Transfer Performance Monitor\n * Tracks and analyzes performance metrics for inventory transfer operations\n */\n\nimport { PerformanceMonitor } from './performance';\nimport { transferCacheService } from './transferCache';\n\ninterface TransferMetrics {\n  operationType: 'create' | 'complete' | 'cancel' | 'list' | 'detail' | 'batch';\n  duration: number;\n  itemCount?: number;\n  shopCount?: number;\n  success: boolean;\n  errorType?: string;\n  cacheHit?: boolean;\n  timestamp: number;\n}\n\ninterface TransferPerformanceStats {\n  totalOperations: number;\n  averageDuration: number;\n  successRate: number;\n  cacheHitRate: number;\n  operationBreakdown: Record<string, {\n    count: number;\n    averageDuration: number;\n    successRate: number;\n  }>;\n  recentErrors: Array<{\n    timestamp: number;\n    operation: string;\n    error: string;\n    duration: number;\n  }>;\n  performanceTrends: Array<{\n    timestamp: number;\n    averageDuration: number;\n    operationCount: number;\n  }>;\n}\n\nclass TransferPerformanceMonitor {\n  private metrics: TransferMetrics[] = [];\n  private maxMetricsHistory = 1000;\n  private performanceMonitor: PerformanceMonitor;\n  private alertThresholds = {\n    slowOperationMs: 5000, // 5 seconds\n    highErrorRate: 0.1, // 10%\n    lowCacheHitRate: 0.5 // 50%\n  };\n\n  constructor() {\n    this.performanceMonitor = new PerformanceMonitor();\n    this.startPeriodicCleanup();\n  }\n\n  /**\n   * Start tracking a transfer operation\n   */\n  startOperation(operationType: TransferMetrics['operationType'], metadata?: {\n    itemCount?: number;\n    shopCount?: number;\n  }) {\n    const timerName = `transfer-${operationType}`;\n    this.performanceMonitor.startTimer(timerName);\n\n    return {\n      timer: timerName,\n      end: (success: boolean, errorType?: string, cacheHit?: boolean) => {\n        const duration = this.performanceMonitor.endTimer(timerName);\n\n        this.recordMetric({\n          operationType,\n          duration,\n          itemCount: metadata?.itemCount,\n          shopCount: metadata?.shopCount,\n          success,\n          errorType,\n          cacheHit,\n          timestamp: Date.now()\n        });\n\n        // Check for performance alerts\n        this.checkPerformanceAlerts(operationType, duration, success);\n\n        return duration;\n      }\n    };\n  }\n\n  /**\n   * Record a transfer operation metric\n   */\n  private recordMetric(metric: TransferMetrics) {\n    this.metrics.push(metric);\n\n    // Keep only recent metrics\n    if (this.metrics.length > this.maxMetricsHistory) {\n      this.metrics = this.metrics.slice(-this.maxMetricsHistory);\n    }\n\n    // Log slow operations\n    if (metric.duration > this.alertThresholds.slowOperationMs) {\n      console.warn(`🐌 Slow transfer operation detected:`, {\n        operation: metric.operationType,\n        duration: `${metric.duration}ms`,\n        itemCount: metric.itemCount,\n        shopCount: metric.shopCount,\n        success: metric.success\n      });\n    }\n  }\n\n  /**\n   * Check for performance alerts\n   */\n  private checkPerformanceAlerts(operationType: string, _duration: number, _success: boolean) {\n    const recentMetrics = this.getRecentMetrics(5 * 60 * 1000); // Last 5 minutes\n    const operationMetrics = recentMetrics.filter(m => m.operationType === operationType);\n\n    if (operationMetrics.length >= 5) {\n      const errorRate = operationMetrics.filter(m => !m.success).length / operationMetrics.length;\n\n      if (errorRate > this.alertThresholds.highErrorRate) {\n        console.error(`🚨 High error rate detected for ${operationType}:`, {\n          errorRate: `${(errorRate * 100).toFixed(1)}%`,\n          recentOperations: operationMetrics.length,\n          timeWindow: '5 minutes'\n        });\n      }\n    }\n\n    // Check cache hit rate\n    const cacheableOperations = recentMetrics.filter(m =>\n      ['list', 'detail'].includes(m.operationType) && m.cacheHit !== undefined\n    );\n\n    if (cacheableOperations.length >= 10) {\n      const cacheHitRate = cacheableOperations.filter(m => m.cacheHit).length / cacheableOperations.length;\n\n      if (cacheHitRate < this.alertThresholds.lowCacheHitRate) {\n        console.warn(`📊 Low cache hit rate detected:`, {\n          cacheHitRate: `${(cacheHitRate * 100).toFixed(1)}%`,\n          operations: cacheableOperations.length,\n          timeWindow: '5 minutes'\n        });\n      }\n    }\n  }\n\n  /**\n   * Get metrics from a specific time window\n   */\n  private getRecentMetrics(timeWindowMs: number): TransferMetrics[] {\n    const cutoff = Date.now() - timeWindowMs;\n    return this.metrics.filter(m => m.timestamp > cutoff);\n  }\n\n  /**\n   * Get comprehensive performance statistics\n   */\n  getPerformanceStats(timeWindowMs: number = 60 * 60 * 1000): TransferPerformanceStats {\n    const recentMetrics = this.getRecentMetrics(timeWindowMs);\n\n    if (recentMetrics.length === 0) {\n      return {\n        totalOperations: 0,\n        averageDuration: 0,\n        successRate: 0,\n        cacheHitRate: 0,\n        operationBreakdown: {},\n        recentErrors: [],\n        performanceTrends: []\n      };\n    }\n\n    const totalOperations = recentMetrics.length;\n    const averageDuration = recentMetrics.reduce((sum, m) => sum + m.duration, 0) / totalOperations;\n    const successRate = recentMetrics.filter(m => m.success).length / totalOperations;\n\n    const cacheableMetrics = recentMetrics.filter(m => m.cacheHit !== undefined);\n    const cacheHitRate = cacheableMetrics.length > 0\n      ? cacheableMetrics.filter(m => m.cacheHit).length / cacheableMetrics.length\n      : 0;\n\n    // Operation breakdown\n    const operationBreakdown: Record<string, any> = {};\n    const operationTypes = [...new Set(recentMetrics.map(m => m.operationType))];\n\n    for (const opType of operationTypes) {\n      const opMetrics = recentMetrics.filter(m => m.operationType === opType);\n      operationBreakdown[opType] = {\n        count: opMetrics.length,\n        averageDuration: opMetrics.reduce((sum, m) => sum + m.duration, 0) / opMetrics.length,\n        successRate: opMetrics.filter(m => m.success).length / opMetrics.length\n      };\n    }\n\n    // Recent errors\n    const recentErrors = recentMetrics\n      .filter(m => !m.success)\n      .slice(-10)\n      .map(m => ({\n        timestamp: m.timestamp,\n        operation: m.operationType,\n        error: m.errorType || 'Unknown error',\n        duration: m.duration\n      }));\n\n    // Performance trends (hourly buckets)\n    const performanceTrends = this.calculatePerformanceTrends(recentMetrics);\n\n    return {\n      totalOperations,\n      averageDuration,\n      successRate,\n      cacheHitRate,\n      operationBreakdown,\n      recentErrors,\n      performanceTrends\n    };\n  }\n\n  /**\n   * Calculate performance trends over time\n   */\n  private calculatePerformanceTrends(metrics: TransferMetrics[]): Array<{\n    timestamp: number;\n    averageDuration: number;\n    operationCount: number;\n  }> {\n    const hourlyBuckets = new Map<number, TransferMetrics[]>();\n\n    // Group metrics by hour\n    for (const metric of metrics) {\n      const hourBucket = Math.floor(metric.timestamp / (60 * 60 * 1000)) * (60 * 60 * 1000);\n      if (!hourlyBuckets.has(hourBucket)) {\n        hourlyBuckets.set(hourBucket, []);\n      }\n      hourlyBuckets.get(hourBucket)!.push(metric);\n    }\n\n    // Calculate trends\n    const trends = Array.from(hourlyBuckets.entries())\n      .map(([timestamp, bucketMetrics]) => ({\n        timestamp,\n        averageDuration: bucketMetrics.reduce((sum, m) => sum + m.duration, 0) / bucketMetrics.length,\n        operationCount: bucketMetrics.length\n      }))\n      .sort((a, b) => a.timestamp - b.timestamp);\n\n    return trends;\n  }\n\n  /**\n   * Get performance recommendations\n   */\n  getPerformanceRecommendations(): Array<{\n    type: 'warning' | 'info' | 'critical';\n    message: string;\n    action?: string;\n  }> {\n    const stats = this.getPerformanceStats();\n    const recommendations: Array<{\n      type: 'warning' | 'info' | 'critical';\n      message: string;\n      action?: string;\n    }> = [];\n\n    // Check average duration\n    if (stats.averageDuration > 3000) {\n      recommendations.push({\n        type: 'warning',\n        message: `Average operation duration is ${stats.averageDuration.toFixed(0)}ms`,\n        action: 'Consider optimizing database queries or adding more caching'\n      });\n    }\n\n    // Check success rate\n    if (stats.successRate < 0.95) {\n      recommendations.push({\n        type: 'critical',\n        message: `Success rate is ${(stats.successRate * 100).toFixed(1)}%`,\n        action: 'Investigate recent errors and improve error handling'\n      });\n    }\n\n    // Check cache hit rate\n    if (stats.cacheHitRate < 0.7) {\n      recommendations.push({\n        type: 'info',\n        message: `Cache hit rate is ${(stats.cacheHitRate * 100).toFixed(1)}%`,\n        action: 'Consider increasing cache TTL or warming cache more frequently'\n      });\n    }\n\n    // Check for slow operations\n    const slowOperations = Object.entries(stats.operationBreakdown)\n      .filter(([_, data]) => data.averageDuration > 2000);\n\n    if (slowOperations.length > 0) {\n      recommendations.push({\n        type: 'warning',\n        message: `Slow operations detected: ${slowOperations.map(([op]) => op).join(', ')}`,\n        action: 'Optimize these specific operations with batch processing or better indexing'\n      });\n    }\n\n    return recommendations;\n  }\n\n  /**\n   * Export metrics for analysis\n   */\n  exportMetrics(timeWindowMs?: number): TransferMetrics[] {\n    return timeWindowMs ? this.getRecentMetrics(timeWindowMs) : [...this.metrics];\n  }\n\n  /**\n   * Clear all metrics\n   */\n  clearMetrics(): void {\n    this.metrics = [];\n  }\n\n  /**\n   * Start periodic cleanup of old metrics\n   */\n  private startPeriodicCleanup(): void {\n    setInterval(() => {\n      const cutoff = Date.now() - (24 * 60 * 60 * 1000); // 24 hours\n      this.metrics = this.metrics.filter(m => m.timestamp > cutoff);\n    }, 60 * 60 * 1000); // Run every hour\n  }\n\n  /**\n   * Get real-time performance dashboard data\n   */\n  getDashboardData() {\n    const last5Minutes = this.getPerformanceStats(5 * 60 * 1000);\n    const lastHour = this.getPerformanceStats(60 * 60 * 1000);\n    const last24Hours = this.getPerformanceStats(24 * 60 * 60 * 1000);\n\n    return {\n      current: {\n        activeOperations: this.performanceMonitor.getActiveTimers().length,\n        cacheStats: transferCacheService.getStats()\n      },\n      last5Minutes,\n      lastHour,\n      last24Hours,\n      recommendations: this.getPerformanceRecommendations()\n    };\n  }\n}\n\n// Global instance\nexport const transferPerformanceMonitor = new TransferPerformanceMonitor();\n\n// Utility functions for easy usage\nexport const trackTransferOperation = (\n  operationType: TransferMetrics['operationType'],\n  metadata?: { itemCount?: number; shopCount?: number }\n) => {\n  return transferPerformanceMonitor.startOperation(operationType, metadata);\n};\n\nexport const getTransferPerformanceStats = (timeWindowMs?: number) => {\n  return transferPerformanceMonitor.getPerformanceStats(timeWindowMs);\n};\n\nexport const getTransferDashboardData = () => {\n  return transferPerformanceMonitor.getDashboardData();\n};\n\n// Export types\nexport type {\n  TransferMetrics,\n  TransferPerformanceStats\n};"],"mappings":"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","ignoreList":[]}