6cbbe97b70e1da2623e558f484304348
"use strict";

/* istanbul ignore next */
function cov_1y4rqwyddw() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/inventory/shop/[id]/delete/route.ts";
  var hash = "1999c84adde0afd54fbc452b721ca45b7ef423ff";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/inventory/shop/[id]/delete/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 22
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 16
        },
        end: {
          line: 12,
          column: 55
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "6": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "7": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 22,
          column: 15
        }
      },
      "8": {
        start: {
          line: 24,
          column: 23
        },
        end: {
          line: 24,
          column: 42
        }
      },
      "9": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 32,
          column: 9
        }
      },
      "10": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 31,
          column: 15
        }
      },
      "11": {
        start: {
          line: 34,
          column: 21
        },
        end: {
          line: 41,
          column: 10
        }
      },
      "12": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "13": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 48,
          column: 15
        }
      },
      "14": {
        start: {
          line: 51,
          column: 31
        },
        end: {
          line: 51,
          column: 57
        }
      },
      "15": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 57,
          column: 11
        }
      },
      "16": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "17": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 72,
          column: 15
        }
      },
      "18": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 67
        }
      },
      "19": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 85,
          column: 11
        }
      },
      "20": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 87
        }
      },
      "21": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 95,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "DELETE",
        decl: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 13,
            column: 21
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 97,
            column: 1
          }
        },
        line: 13
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 16,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 16,
            column: 19
          }
        }, {
          start: {
            line: 16,
            column: 23
          },
          end: {
            line: 16,
            column: 33
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "4": {
        loc: {
          start: {
            line: 92,
            column: 19
          },
          end: {
            line: 92,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 92,
            column: 44
          },
          end: {
            line: 92,
            column: 57
          }
        }, {
          start: {
            line: 92,
            column: 60
          },
          end: {
            line: 92,
            column: 73
          }
        }],
        line: 92
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/inventory/shop/[id]/delete/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { prisma } from '@/lib/prisma';\n\n// DELETE: Remove all inventory items for a shop\nexport async function DELETE(\n    req: NextRequest,\n    { params }: { params: { id: string } }\n) {\n    try {\n        // Get the shop ID safely\n        if (!params || !params.id) {\n            return NextResponse.json({\n                success: false,\n                message: 'Shop ID is required',\n            }, { status: 400 });\n        }\n\n        const shopId = parseInt(params.id);\n\n        if (isNaN(shopId)) {\n            return NextResponse.json({\n                success: false,\n                message: 'Invalid shop ID',\n            }, { status: 400 });\n        }\n\n        // Check if shop exists\n        const shop = await prisma.shop.findUnique({\n            where: { id: shopId },\n            include: {\n                inventoryItems: true\n            }\n        });\n\n        if (!shop) {\n            return NextResponse.json({\n                success: false,\n                message: `Shop with ID ${shopId} not found`,\n            }, { status: 404 });\n        }\n\n        // Get the count of inventory items\n        const inventoryCount = shop.inventoryItems.length;\n\n        // Delete all inventory items for this shop\n        await prisma.inventoryItem.deleteMany({\n            where: { shopId }\n        });\n\n        // Create audit log entry\n        try {\n            await prisma.auditLog.create({\n                data: {\n                    action: 'DELETE_ALL_INVENTORY',\n                    entity: 'Shop',\n                    entityId: shopId,\n                    details: JSON.stringify({\n                        shopId,\n                        shopName: shop.name,\n                        inventoryCount,\n                        reason: 'Shop deletion preparation'\n                    })\n                }\n            });\n        } catch (auditError) {\n            // Log error but don't fail the request\n            console.error('Error creating audit log:', auditError);\n        }\n\n        return NextResponse.json({\n            success: true,\n            message: `Successfully deleted ${inventoryCount} inventory items for shop \"${shop.name}\"`,\n            data: {\n                deletedCount: inventoryCount,\n                shopId,\n                shopName: shop.name\n            }\n        });\n    } catch (error) {\n        // Log the error\n        console.error(`Error deleting shop inventory (shop_id ${params?.id}):`, error);\n        return NextResponse.json({\n            success: false,\n            message: 'Failed to delete shop inventory',\n            error: error instanceof Error ? error.message : String(error)\n        }, { status: 500 });\n    }\n} "],
      names: ["DELETE", "req", "params", "id", "NextResponse", "json", "success", "message", "status", "shopId", "parseInt", "isNaN", "shop", "prisma", "findUnique", "where", "include", "inventoryItems", "inventoryCount", "length", "inventoryItem", "deleteMany", "auditLog", "create", "data", "action", "entity", "entityId", "details", "JSON", "stringify", "shopName", "name", "reason", "auditError", "console", "error", "deletedCount", "Error", "String"],
      mappings: ";;;;+BAIsBA;;;eAAAA;;;wBAJoB;wBACnB;AAGhB,eAAeA,OAClBC,GAAgB,EAChB,EAAEC,MAAM,EAA8B;IAEtC,IAAI;QACA,yBAAyB;QACzB,IAAI,CAACA,UAAU,CAACA,OAAOC,EAAE,EAAE;YACvB,OAAOC,oBAAY,CAACC,IAAI,CAAC;gBACrBC,SAAS;gBACTC,SAAS;YACb,GAAG;gBAAEC,QAAQ;YAAI;QACrB;QAEA,MAAMC,SAASC,SAASR,OAAOC,EAAE;QAEjC,IAAIQ,MAAMF,SAAS;YACf,OAAOL,oBAAY,CAACC,IAAI,CAAC;gBACrBC,SAAS;gBACTC,SAAS;YACb,GAAG;gBAAEC,QAAQ;YAAI;QACrB;QAEA,uBAAuB;QACvB,MAAMI,OAAO,MAAMC,cAAM,CAACD,IAAI,CAACE,UAAU,CAAC;YACtCC,OAAO;gBAAEZ,IAAIM;YAAO;YACpBO,SAAS;gBACLC,gBAAgB;YACpB;QACJ;QAEA,IAAI,CAACL,MAAM;YACP,OAAOR,oBAAY,CAACC,IAAI,CAAC;gBACrBC,SAAS;gBACTC,SAAS,CAAC,aAAa,EAAEE,OAAO,UAAU,CAAC;YAC/C,GAAG;gBAAED,QAAQ;YAAI;QACrB;QAEA,mCAAmC;QACnC,MAAMU,iBAAiBN,KAAKK,cAAc,CAACE,MAAM;QAEjD,2CAA2C;QAC3C,MAAMN,cAAM,CAACO,aAAa,CAACC,UAAU,CAAC;YAClCN,OAAO;gBAAEN;YAAO;QACpB;QAEA,yBAAyB;QACzB,IAAI;YACA,MAAMI,cAAM,CAACS,QAAQ,CAACC,MAAM,CAAC;gBACzBC,MAAM;oBACFC,QAAQ;oBACRC,QAAQ;oBACRC,UAAUlB;oBACVmB,SAASC,KAAKC,SAAS,CAAC;wBACpBrB;wBACAsB,UAAUnB,KAAKoB,IAAI;wBACnBd;wBACAe,QAAQ;oBACZ;gBACJ;YACJ;QACJ,EAAE,OAAOC,YAAY;YACjB,uCAAuC;YACvCC,QAAQC,KAAK,CAAC,6BAA6BF;QAC/C;QAEA,OAAO9B,oBAAY,CAACC,IAAI,CAAC;YACrBC,SAAS;YACTC,SAAS,CAAC,qBAAqB,EAAEW,eAAe,2BAA2B,EAAEN,KAAKoB,IAAI,CAAC,CAAC,CAAC;YACzFR,MAAM;gBACFa,cAAcnB;gBACdT;gBACAsB,UAAUnB,KAAKoB,IAAI;YACvB;QACJ;IACJ,EAAE,OAAOI,OAAO;QACZ,gBAAgB;QAChBD,QAAQC,KAAK,CAAC,CAAC,uCAAuC,EAAElC,QAAQC,GAAG,EAAE,CAAC,EAAEiC;QACxE,OAAOhC,oBAAY,CAACC,IAAI,CAAC;YACrBC,SAAS;YACTC,SAAS;YACT6B,OAAOA,iBAAiBE,QAAQF,MAAM7B,OAAO,GAAGgC,OAAOH;QAC3D,GAAG;YAAE5B,QAAQ;QAAI;IACrB;AACJ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1999c84adde0afd54fbc452b721ca45b7ef423ff"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1y4rqwyddw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1y4rqwyddw();
cov_1y4rqwyddw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1y4rqwyddw().s[1]++;
Object.defineProperty(exports, "DELETE", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1y4rqwyddw().f[0]++;
    cov_1y4rqwyddw().s[2]++;
    return DELETE;
  }
});
const _server =
/* istanbul ignore next */
(cov_1y4rqwyddw().s[3]++, require("next/server"));
const _prisma =
/* istanbul ignore next */
(cov_1y4rqwyddw().s[4]++, require("../../../../../../lib/prisma"));
async function DELETE(req, {
  params
}) {
  /* istanbul ignore next */
  cov_1y4rqwyddw().f[1]++;
  cov_1y4rqwyddw().s[5]++;
  try {
    /* istanbul ignore next */
    cov_1y4rqwyddw().s[6]++;
    // Get the shop ID safely
    if (
    /* istanbul ignore next */
    (cov_1y4rqwyddw().b[1][0]++, !params) ||
    /* istanbul ignore next */
    (cov_1y4rqwyddw().b[1][1]++, !params.id)) {
      /* istanbul ignore next */
      cov_1y4rqwyddw().b[0][0]++;
      cov_1y4rqwyddw().s[7]++;
      return _server.NextResponse.json({
        success: false,
        message: "Shop ID is required"
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1y4rqwyddw().b[0][1]++;
    }
    const shopId =
    /* istanbul ignore next */
    (cov_1y4rqwyddw().s[8]++, parseInt(params.id));
    /* istanbul ignore next */
    cov_1y4rqwyddw().s[9]++;
    if (isNaN(shopId)) {
      /* istanbul ignore next */
      cov_1y4rqwyddw().b[2][0]++;
      cov_1y4rqwyddw().s[10]++;
      return _server.NextResponse.json({
        success: false,
        message: "Invalid shop ID"
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1y4rqwyddw().b[2][1]++;
    }
    // Check if shop exists
    const shop =
    /* istanbul ignore next */
    (cov_1y4rqwyddw().s[11]++, await _prisma.prisma.shop.findUnique({
      where: {
        id: shopId
      },
      include: {
        inventoryItems: true
      }
    }));
    /* istanbul ignore next */
    cov_1y4rqwyddw().s[12]++;
    if (!shop) {
      /* istanbul ignore next */
      cov_1y4rqwyddw().b[3][0]++;
      cov_1y4rqwyddw().s[13]++;
      return _server.NextResponse.json({
        success: false,
        message: `Shop with ID ${shopId} not found`
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_1y4rqwyddw().b[3][1]++;
    }
    // Get the count of inventory items
    const inventoryCount =
    /* istanbul ignore next */
    (cov_1y4rqwyddw().s[14]++, shop.inventoryItems.length);
    // Delete all inventory items for this shop
    /* istanbul ignore next */
    cov_1y4rqwyddw().s[15]++;
    await _prisma.prisma.inventoryItem.deleteMany({
      where: {
        shopId
      }
    });
    // Create audit log entry
    /* istanbul ignore next */
    cov_1y4rqwyddw().s[16]++;
    try {
      /* istanbul ignore next */
      cov_1y4rqwyddw().s[17]++;
      await _prisma.prisma.auditLog.create({
        data: {
          action: "DELETE_ALL_INVENTORY",
          entity: "Shop",
          entityId: shopId,
          details: JSON.stringify({
            shopId,
            shopName: shop.name,
            inventoryCount,
            reason: "Shop deletion preparation"
          })
        }
      });
    } catch (auditError) {
      /* istanbul ignore next */
      cov_1y4rqwyddw().s[18]++;
      // Log error but don't fail the request
      console.error("Error creating audit log:", auditError);
    }
    /* istanbul ignore next */
    cov_1y4rqwyddw().s[19]++;
    return _server.NextResponse.json({
      success: true,
      message: `Successfully deleted ${inventoryCount} inventory items for shop "${shop.name}"`,
      data: {
        deletedCount: inventoryCount,
        shopId,
        shopName: shop.name
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1y4rqwyddw().s[20]++;
    // Log the error
    console.error(`Error deleting shop inventory (shop_id ${params?.id}):`, error);
    /* istanbul ignore next */
    cov_1y4rqwyddw().s[21]++;
    return _server.NextResponse.json({
      success: false,
      message: "Failed to delete shop inventory",
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1y4rqwyddw().b[4][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1y4rqwyddw().b[4][1]++, String(error))
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,