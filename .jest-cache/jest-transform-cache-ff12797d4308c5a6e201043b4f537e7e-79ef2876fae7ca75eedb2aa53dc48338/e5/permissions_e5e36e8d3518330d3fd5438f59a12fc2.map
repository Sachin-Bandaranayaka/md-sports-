{"version":3,"names":["cov_5f6vw2cu1","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","hasAllPermissions","hasAnyPermission","hasPermission","isAdmin","permissions","requiredPermission","includes","requiredPermissions","some","permission","every"],"sources":["/Users/sachin/Documents/md-sports-/src/lib/utils/permissions.ts"],"sourcesContent":["/**\n * Centralized permission checking utilities\n */\n\n/**\n * Check if user has admin permissions or specific permission\n * @param permissions - Array of user permissions\n * @param requiredPermission - The specific permission required\n * @returns boolean indicating if user has permission\n */\nexport function hasPermission(permissions: string[], requiredPermission: string): boolean {\n    return permissions.includes('*') || \n           permissions.includes('admin:all') || \n           permissions.includes('ALL') || \n           permissions.includes(requiredPermission);\n}\n\n/**\n * Check if user has any of the specified permissions or admin permissions\n * @param permissions - Array of user permissions\n * @param requiredPermissions - Array of permissions, user needs at least one\n * @returns boolean indicating if user has any of the required permissions\n */\nexport function hasAnyPermission(permissions: string[], requiredPermissions: string[]): boolean {\n    return permissions.includes('*') || \n           permissions.includes('admin:all') || \n           permissions.includes('ALL') || \n           requiredPermissions.some(permission => permissions.includes(permission));\n}\n\n/**\n * Check if user has all of the specified permissions or admin permissions\n * @param permissions - Array of user permissions\n * @param requiredPermissions - Array of permissions, user needs all of them\n * @returns boolean indicating if user has all required permissions\n */\nexport function hasAllPermissions(permissions: string[], requiredPermissions: string[]): boolean {\n    return permissions.includes('*') || \n           permissions.includes('admin:all') || \n           permissions.includes('ALL') || \n           requiredPermissions.every(permission => permissions.includes(permission));\n}\n\n/**\n * Check if user is an admin (has admin:all, *, or specific admin permissions)\n * @param permissions - Array of user permissions\n * @returns boolean indicating if user is an admin\n */\nexport function isAdmin(permissions: string[]): boolean {\n    return permissions.includes('*') || \n           permissions.includes('admin:all') || \n           permissions.includes('ALL') || \n           permissions.includes('shop:manage') || \n           permissions.includes('user:manage');\n}"],"mappings":"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","ignoreList":[]}