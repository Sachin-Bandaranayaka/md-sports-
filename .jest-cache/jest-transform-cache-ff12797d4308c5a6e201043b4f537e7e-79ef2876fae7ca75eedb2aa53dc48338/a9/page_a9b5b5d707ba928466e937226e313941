3787f66a6e01fe93e86f9886b181b7b1
"use strict";

/* istanbul ignore next */
function cov_rqso4effi() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/receipts/page.tsx";
  var hash = "1bacf57360b8b36af0e6aa62be826405f89e5c57";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/receipts/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 28
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "6": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 48
        }
      },
      "7": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "8": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 43
        }
      },
      "9": {
        start: {
          line: 22,
          column: 45
        },
        end: {
          line: 22,
          column: 116
        }
      },
      "10": {
        start: {
          line: 23,
          column: 21
        },
        end: {
          line: 23,
          column: 44
        }
      },
      "11": {
        start: {
          line: 24,
          column: 34
        },
        end: {
          line: 24,
          column: 105
        }
      },
      "12": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 41
        }
      },
      "13": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 6
        }
      },
      "14": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 45,
          column: 7
        }
      },
      "15": {
        start: {
          line: 47,
          column: 17
        },
        end: {
          line: 50,
          column: 1
        }
      },
      "16": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 150,
          column: 5
        }
      },
      "17": {
        start: {
          line: 54,
          column: 29
        },
        end: {
          line: 91,
          column: 14
        }
      },
      "18": {
        start: {
          line: 93,
          column: 42
        },
        end: {
          line: 115,
          column: 10
        }
      },
      "19": {
        start: {
          line: 117,
          column: 34
        },
        end: {
          line: 136,
          column: 15
        }
      },
      "20": {
        start: {
          line: 117,
          column: 59
        },
        end: {
          line: 136,
          column: 13
        }
      },
      "21": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 142,
          column: 10
        }
      },
      "22": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 57
        }
      },
      "23": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 149,
          column: 10
        }
      },
      "24": {
        start: {
          line: 153,
          column: 17
        },
        end: {
          line: 153,
          column: 69
        }
      },
      "25": {
        start: {
          line: 154,
          column: 19
        },
        end: {
          line: 154,
          column: 45
        }
      },
      "26": {
        start: {
          line: 155,
          column: 50
        },
        end: {
          line: 155,
          column: 85
        }
      },
      "27": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 174,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 13
          },
          end: {
            line: 12,
            column: 14
          }
        },
        loc: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 14
          },
          end: {
            line: 15,
            column: 15
          }
        },
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 33
          }
        },
        loc: {
          start: {
            line: 26,
            column: 39
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 26
      },
      "4": {
        name: "LoadingSpinner",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 23
          }
        },
        loc: {
          start: {
            line: 32,
            column: 26
          },
          end: {
            line: 46,
            column: 1
          }
        },
        line: 32
      },
      "5": {
        name: "getReceipts",
        decl: {
          start: {
            line: 51,
            column: 15
          },
          end: {
            line: 51,
            column: 26
          }
        },
        loc: {
          start: {
            line: 51,
            column: 62
          },
          end: {
            line: 151,
            column: 1
          }
        },
        line: 51
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 117,
            column: 47
          },
          end: {
            line: 117,
            column: 48
          }
        },
        loc: {
          start: {
            line: 117,
            column: 59
          },
          end: {
            line: 136,
            column: 13
          }
        },
        line: 117
      },
      "7": {
        name: "ReceiptsPage",
        decl: {
          start: {
            line: 152,
            column: 15
          },
          end: {
            line: 152,
            column: 27
          }
        },
        loc: {
          start: {
            line: 152,
            column: 46
          },
          end: {
            line: 175,
            column: 1
          }
        },
        line: 152
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 35
          },
          end: {
            line: 27,
            column: 38
          }
        }, {
          start: {
            line: 27,
            column: 41
          },
          end: {
            line: 29,
            column: 5
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 14
          }
        }, {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 32
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 51,
            column: 27
          },
          end: {
            line: 51,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 51,
            column: 34
          },
          end: {
            line: 51,
            column: 35
          }
        }],
        line: 51
      },
      "3": {
        loc: {
          start: {
            line: 51,
            column: 37
          },
          end: {
            line: 51,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 51,
            column: 45
          },
          end: {
            line: 51,
            column: 47
          }
        }],
        line: 51
      },
      "4": {
        loc: {
          start: {
            line: 51,
            column: 49
          },
          end: {
            line: 51,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 51,
            column: 58
          },
          end: {
            line: 51,
            column: 60
          }
        }],
        line: 51
      },
      "5": {
        loc: {
          start: {
            line: 54,
            column: 29
          },
          end: {
            line: 91,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 54,
            column: 38
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 91,
            column: 14
          }
        }],
        line: 54
      },
      "6": {
        loc: {
          start: {
            line: 124,
            column: 28
          },
          end: {
            line: 124,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 28
          },
          end: {
            line: 124,
            column: 56
          }
        }, {
          start: {
            line: 124,
            column: 60
          },
          end: {
            line: 124,
            column: 61
          }
        }],
        line: 124
      },
      "7": {
        loc: {
          start: {
            line: 125,
            column: 30
          },
          end: {
            line: 125,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 30
          },
          end: {
            line: 125,
            column: 60
          }
        }, {
          start: {
            line: 125,
            column: 64
          },
          end: {
            line: 125,
            column: 73
          }
        }],
        line: 125
      },
      "8": {
        loc: {
          start: {
            line: 131,
            column: 29
          },
          end: {
            line: 134,
            column: 28
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 131,
            column: 56
          },
          end: {
            line: 134,
            column: 21
          }
        }, {
          start: {
            line: 134,
            column: 24
          },
          end: {
            line: 134,
            column: 28
          }
        }],
        line: 131
      },
      "9": {
        loc: {
          start: {
            line: 153,
            column: 17
          },
          end: {
            line: 153,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 153,
            column: 38
          },
          end: {
            line: 153,
            column: 65
          }
        }, {
          start: {
            line: 153,
            column: 68
          },
          end: {
            line: 153,
            column: 69
          }
        }],
        line: 153
      },
      "10": {
        loc: {
          start: {
            line: 154,
            column: 19
          },
          end: {
            line: 154,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 19
          },
          end: {
            line: 154,
            column: 39
          }
        }, {
          start: {
            line: 154,
            column: 43
          },
          end: {
            line: 154,
            column: 45
          }
        }],
        line: 154
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/receipts/page.tsx"],
      sourcesContent: ["import { Suspense } from 'react';\nimport { prisma } from '@/lib/prisma';\nimport ReceiptsClientWrapper from './components/ReceiptsClientWrapper';\nimport { Metadata } from 'next';\nimport { Loader2 } from 'lucide-react';\nimport MainLayout from '@/components/layout/MainLayout';\nimport { Prisma } from '@prisma/client';\n\n// Simple loading component\nfunction LoadingSpinner() {\n    return (\n        <div className=\"flex justify-center items-center h-64\">\n            <Loader2 className=\"animate-spin text-primary\" size={48} />\n            <p className=\"ml-3 text-lg text-gray-600\">Loading receipts...</p>\n        </div>\n    );\n}\n\nexport const metadata: Metadata = {\n    title: 'Receipts | MS Sports',\n    description: 'View and manage all payment receipts'\n};\n\nasync function getReceipts(page = 1, limit = 10, search = '') {\n    try {\n\n        // Build search filter once\n        const searchFilter: Prisma.ReceiptWhereInput = search ? {\n            OR: [\n                { receiptNumber: { contains: search, mode: Prisma.QueryMode.insensitive } },\n                { payment: { referenceNumber: { contains: search, mode: Prisma.QueryMode.insensitive } } },\n                { payment: { customer: { name: { contains: search, mode: Prisma.QueryMode.insensitive } } } },\n                { payment: { invoice: { invoiceNumber: { contains: search, mode: Prisma.QueryMode.insensitive } } } }\n            ]\n        } : {};\n\n        // Fetch list & count concurrently to reduce total latency\n        const [receipts, totalReceipts] = await prisma.$transaction([\n            prisma.receipt.findMany({\n                where: searchFilter,\n                include: {\n                    payment: {\n                        include: {\n                            customer: true,\n                            invoice: true,\n                            account: true\n                        }\n                    },\n                    confirmedByUser: true\n                },\n                orderBy: { createdAt: 'desc' },\n                skip: (page - 1) * limit,\n                take: limit\n            }),\n            prisma.receipt.count({ where: searchFilter })\n        ]) as [any[], number];\n\n        // Convert receiptDate from Date to string to match the Receipt interface\n        const formattedReceipts = receipts.map(receipt => ({\n            ...receipt,\n            receiptDate: receipt.receiptDate.toISOString().split('T')[0], // Convert Date to YYYY-MM-DD string\n            payment: {\n                ...receipt.payment,\n                // Limit nested objects to only the fields required by the client component\n                customer: {\n                    id: receipt.payment.customer?.id ?? 0,\n                    name: receipt.payment.customer?.name ?? 'Unknown'\n                },\n                invoice: {\n                    id: receipt.payment.invoice.id,\n                    invoiceNumber: receipt.payment.invoice.invoiceNumber\n                },\n                account: receipt.payment?.account\n                    ? {\n                          id: receipt.payment.account.id,\n                          name: receipt.payment.account.name\n                      }\n                    : null\n            }\n        }));\n\n        return {\n            receipts: formattedReceipts,\n            totalReceipts,\n            totalPages: Math.ceil(totalReceipts / limit),\n            currentPage: page\n        };\n    } catch (error) {\n        console.error('Error fetching receipts:', error);\n        return {\n            receipts: [],\n            totalPages: 0,\n            currentPage: 1\n        };\n    }\n}\n\nexport default async function ReceiptsPage({\n    searchParams\n}: {\n    searchParams?: { page?: string; search?: string };\n}) {\n    const page = searchParams?.page ? parseInt(searchParams.page) : 1;\n    const search = searchParams?.search || '';\n    const { receipts, totalPages, currentPage } = await getReceipts(page, 10, search);\n\n    return (\n        <MainLayout>\n            <div>\n                <h1 className=\"text-2xl font-bold text-black mb-6\">Payment Receipts</h1>\n\n                <Suspense fallback={<LoadingSpinner />}>\n                    <ReceiptsClientWrapper\n                        initialReceipts={receipts as any}\n                        initialTotalPages={totalPages}\n                        initialCurrentPage={currentPage}\n                        initialSearch={search}\n                    />\n                </Suspense>\n            </div>\n        </MainLayout>\n    );\n}"],
      names: ["ReceiptsPage", "metadata", "LoadingSpinner", "div", "className", "Loader2", "size", "p", "title", "description", "getReceipts", "page", "limit", "search", "searchFilter", "OR", "receiptNumber", "contains", "mode", "Prisma", "QueryMode", "insensitive", "payment", "referenceNumber", "customer", "name", "invoice", "invoiceNumber", "receipts", "totalReceipts", "prisma", "$transaction", "receipt", "findMany", "where", "include", "account", "confirmedByUser", "orderBy", "createdAt", "skip", "take", "count", "formattedReceipts", "map", "receiptDate", "toISOString", "split", "id", "totalPages", "Math", "ceil", "currentPage", "error", "console", "searchParams", "parseInt", "MainLayout", "h1", "Suspense", "fallback", "ReceiptsClientWrapper", "initialReceipts", "initialTotalPages", "initialCurrentPage", "initialSearch"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1bacf57360b8b36af0e6aa62be826405f89e5c57"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_rqso4effi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_rqso4effi();
cov_rqso4effi().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_rqso4effi().f[0]++;
  cov_rqso4effi().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_rqso4effi().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_rqso4effi().s[3]++;
_export(exports, {
  default: function () {
    /* istanbul ignore next */
    cov_rqso4effi().f[1]++;
    cov_rqso4effi().s[4]++;
    return ReceiptsPage;
  },
  metadata: function () {
    /* istanbul ignore next */
    cov_rqso4effi().f[2]++;
    cov_rqso4effi().s[5]++;
    return metadata;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_rqso4effi().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_rqso4effi().s[7]++, require("react"));
const _prisma =
/* istanbul ignore next */
(cov_rqso4effi().s[8]++, require("../../lib/prisma"));
const _ReceiptsClientWrapper =
/* istanbul ignore next */
(/*#__PURE__*/cov_rqso4effi().s[9]++, _interop_require_default(require("./components/ReceiptsClientWrapper")));
const _lucidereact =
/* istanbul ignore next */
(cov_rqso4effi().s[10]++, require("lucide-react"));
const _MainLayout =
/* istanbul ignore next */
(/*#__PURE__*/cov_rqso4effi().s[11]++, _interop_require_default(require("../../components/layout/MainLayout")));
const _client =
/* istanbul ignore next */
(cov_rqso4effi().s[12]++, require("@prisma/client"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_rqso4effi().f[3]++;
  cov_rqso4effi().s[13]++;
  return /* istanbul ignore next */(cov_rqso4effi().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_rqso4effi().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_rqso4effi().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_rqso4effi().b[0][1]++, {
    default: obj
  });
}
// Simple loading component
function LoadingSpinner() {
  /* istanbul ignore next */
  cov_rqso4effi().f[4]++;
  cov_rqso4effi().s[14]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "flex justify-center items-center h-64",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Loader2, {
      className: "animate-spin text-primary",
      size: 48
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
      className: "ml-3 text-lg text-gray-600",
      children: "Loading receipts..."
    })]
  });
}
const metadata =
/* istanbul ignore next */
(cov_rqso4effi().s[15]++, {
  title: "Receipts | MS Sports",
  description: "View and manage all payment receipts"
});
async function getReceipts(page =
/* istanbul ignore next */
(cov_rqso4effi().b[2][0]++, 1), limit =
/* istanbul ignore next */
(cov_rqso4effi().b[3][0]++, 10), search =
/* istanbul ignore next */
(cov_rqso4effi().b[4][0]++, "")) {
  /* istanbul ignore next */
  cov_rqso4effi().f[5]++;
  cov_rqso4effi().s[16]++;
  try {
    // Build search filter once
    const searchFilter =
    /* istanbul ignore next */
    (cov_rqso4effi().s[17]++, search ?
    /* istanbul ignore next */
    (cov_rqso4effi().b[5][0]++, {
      OR: [{
        receiptNumber: {
          contains: search,
          mode: _client.Prisma.QueryMode.insensitive
        }
      }, {
        payment: {
          referenceNumber: {
            contains: search,
            mode: _client.Prisma.QueryMode.insensitive
          }
        }
      }, {
        payment: {
          customer: {
            name: {
              contains: search,
              mode: _client.Prisma.QueryMode.insensitive
            }
          }
        }
      }, {
        payment: {
          invoice: {
            invoiceNumber: {
              contains: search,
              mode: _client.Prisma.QueryMode.insensitive
            }
          }
        }
      }]
    }) :
    /* istanbul ignore next */
    (cov_rqso4effi().b[5][1]++, {}));
    // Fetch list & count concurrently to reduce total latency
    const [receipts, totalReceipts] =
    /* istanbul ignore next */
    (cov_rqso4effi().s[18]++, await _prisma.prisma.$transaction([_prisma.prisma.receipt.findMany({
      where: searchFilter,
      include: {
        payment: {
          include: {
            customer: true,
            invoice: true,
            account: true
          }
        },
        confirmedByUser: true
      },
      orderBy: {
        createdAt: "desc"
      },
      skip: (page - 1) * limit,
      take: limit
    }), _prisma.prisma.receipt.count({
      where: searchFilter
    })]));
    // Convert receiptDate from Date to string to match the Receipt interface
    const formattedReceipts =
    /* istanbul ignore next */
    (cov_rqso4effi().s[19]++, receipts.map(receipt => {
      /* istanbul ignore next */
      cov_rqso4effi().f[6]++;
      cov_rqso4effi().s[20]++;
      return {
        ...receipt,
        receiptDate: receipt.receiptDate.toISOString().split("T")[0],
        payment: {
          ...receipt.payment,
          // Limit nested objects to only the fields required by the client component
          customer: {
            id:
            /* istanbul ignore next */
            (cov_rqso4effi().b[6][0]++, receipt.payment.customer?.id) ??
            /* istanbul ignore next */
            (cov_rqso4effi().b[6][1]++, 0),
            name:
            /* istanbul ignore next */
            (cov_rqso4effi().b[7][0]++, receipt.payment.customer?.name) ??
            /* istanbul ignore next */
            (cov_rqso4effi().b[7][1]++, "Unknown")
          },
          invoice: {
            id: receipt.payment.invoice.id,
            invoiceNumber: receipt.payment.invoice.invoiceNumber
          },
          account: receipt.payment?.account ?
          /* istanbul ignore next */
          (cov_rqso4effi().b[8][0]++, {
            id: receipt.payment.account.id,
            name: receipt.payment.account.name
          }) :
          /* istanbul ignore next */
          (cov_rqso4effi().b[8][1]++, null)
        }
      };
    }));
    /* istanbul ignore next */
    cov_rqso4effi().s[21]++;
    return {
      receipts: formattedReceipts,
      totalReceipts,
      totalPages: Math.ceil(totalReceipts / limit),
      currentPage: page
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_rqso4effi().s[22]++;
    console.error("Error fetching receipts:", error);
    /* istanbul ignore next */
    cov_rqso4effi().s[23]++;
    return {
      receipts: [],
      totalPages: 0,
      currentPage: 1
    };
  }
}
async function ReceiptsPage({
  searchParams
}) {
  /* istanbul ignore next */
  cov_rqso4effi().f[7]++;
  const page =
  /* istanbul ignore next */
  (cov_rqso4effi().s[24]++, searchParams?.page ?
  /* istanbul ignore next */
  (cov_rqso4effi().b[9][0]++, parseInt(searchParams.page)) :
  /* istanbul ignore next */
  (cov_rqso4effi().b[9][1]++, 1));
  const search =
  /* istanbul ignore next */
  (cov_rqso4effi().s[25]++,
  /* istanbul ignore next */
  (cov_rqso4effi().b[10][0]++, searchParams?.search) ||
  /* istanbul ignore next */
  (cov_rqso4effi().b[10][1]++, ""));
  const {
    receipts,
    totalPages,
    currentPage
  } =
  /* istanbul ignore next */
  (cov_rqso4effi().s[26]++, await getReceipts(page, 10, search));
  /* istanbul ignore next */
  cov_rqso4effi().s[27]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_MainLayout.default, {
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
        className: "text-2xl font-bold text-black mb-6",
        children: "Payment Receipts"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_react.Suspense, {
        fallback: /*#__PURE__*/(0, _jsxruntime.jsx)(LoadingSpinner, {}),
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_ReceiptsClientWrapper.default, {
          initialReceipts: receipts,
          initialTotalPages: totalPages,
          initialCurrentPage: currentPage,
          initialSearch: search
        })
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,