{"version":3,"names":["DELETE","cov_62k99y7h1","f","s","POST","request","token","headers","get","replace","b","_server","NextResponse","json","error","status","decoded","_auth","verifyToken","sub","auditLogId","userId","result","_auditService","auditService","recoverItem","success","message","_cache","revalidateTag","data","console","auditLogIds","Array","isArray","permanentlyDelete"],"sources":["/Users/sachin/Documents/md-sports-/src/app/api/audit-trail/recover/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { verifyToken } from '@/lib/auth';\nimport { auditService } from '@/services/auditService';\nimport { revalidateTag } from 'next/cache';\n\n// POST /api/audit-trail/recover - Recover a deleted item\nexport async function POST(request: NextRequest) {\n  try {\n    const token = request.headers.get('Authorization')?.replace('Bearer ', '');\n    if (!token) {\n      return NextResponse.json({ error: 'No token provided' }, { status: 401 });\n    }\n\n    const decoded = await verifyToken(token);\n    if (!decoded || !decoded.sub) {\n      return NextResponse.json({ error: 'Invalid token' }, { status: 401 });\n    }\n\n    const { auditLogId } = await request.json();\n\n    if (!auditLogId) {\n      return NextResponse.json(\n        { error: 'Audit log ID is required' },\n        { status: 400 }\n      );\n    }\n\n    const userId = decoded.sub as string;\n    const result = await auditService.recoverItem(auditLogId, userId);\n\n    if (!result.success) {\n      return NextResponse.json(\n        { error: result.message },\n        { status: 400 }\n      );\n    }\n\n    // Revalidate relevant caches\n    revalidateTag('products');\n    revalidateTag('customers');\n    revalidateTag('suppliers');\n    revalidateTag('categories');\n    revalidateTag('audit-trail');\n\n    return NextResponse.json({\n      message: result.message,\n      data: result.data,\n    });\n  } catch (error) {\n    console.error('Error recovering item:', error);\n    return NextResponse.json(\n      { error: 'Failed to recover item' },\n      { status: 500 }\n    );\n  }\n}\n\n// DELETE /api/audit-trail/recover - Permanently delete items\nexport async function DELETE(request: NextRequest) {\n  try {\n    const token = request.headers.get('Authorization')?.replace('Bearer ', '');\n    if (!token) {\n      return NextResponse.json({ error: 'No token provided' }, { status: 401 });\n    }\n\n    const decoded = await verifyToken(token);\n    if (!decoded || !decoded.sub) {\n      return NextResponse.json({ error: 'Invalid token' }, { status: 401 });\n    }\n\n    const { auditLogIds } = await request.json();\n\n    if (!auditLogIds || !Array.isArray(auditLogIds)) {\n      return NextResponse.json(\n        { error: 'Audit log IDs array is required' },\n        { status: 400 }\n      );\n    }\n\n    await auditService.permanentlyDelete(auditLogIds);\n\n    // Revalidate audit trail cache\n    revalidateTag('audit-trail');\n\n    return NextResponse.json({\n      message: 'Items permanently deleted',\n    });\n  } catch (error) {\n    console.error('Error permanently deleting items:', error);\n    return NextResponse.json(\n      { error: 'Failed to permanently delete items' },\n      { status: 500 }\n    );\n  }\n}"],"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","ignoreList":[]}