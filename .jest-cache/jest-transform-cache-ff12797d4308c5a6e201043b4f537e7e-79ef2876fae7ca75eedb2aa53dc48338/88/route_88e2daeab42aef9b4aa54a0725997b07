75a393d9805d3f9bea84884664faa460
"use strict";

/* istanbul ignore next */
function cov_62k99y7h1() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/audit-trail/recover/route.ts";
  var hash = "3d89d0695cb0820adce957432bc0e06dfe412d40";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/audit-trail/recover/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 22
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 20
        }
      },
      "6": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "7": {
        start: {
          line: 20,
          column: 14
        },
        end: {
          line: 20,
          column: 45
        }
      },
      "8": {
        start: {
          line: 21,
          column: 22
        },
        end: {
          line: 21,
          column: 66
        }
      },
      "9": {
        start: {
          line: 22,
          column: 15
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "10": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 75,
          column: 5
        }
      },
      "11": {
        start: {
          line: 25,
          column: 22
        },
        end: {
          line: 25,
          column: 82
        }
      },
      "12": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 32,
          column: 9
        }
      },
      "13": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 31,
          column: 15
        }
      },
      "14": {
        start: {
          line: 33,
          column: 24
        },
        end: {
          line: 33,
          column: 59
        }
      },
      "15": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "16": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 39,
          column: 15
        }
      },
      "17": {
        start: {
          line: 41,
          column: 31
        },
        end: {
          line: 41,
          column: 51
        }
      },
      "18": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "19": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 47,
          column: 15
        }
      },
      "20": {
        start: {
          line: 49,
          column: 23
        },
        end: {
          line: 49,
          column: 34
        }
      },
      "21": {
        start: {
          line: 50,
          column: 23
        },
        end: {
          line: 50,
          column: 87
        }
      },
      "22": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "23": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 56,
          column: 15
        }
      },
      "24": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 46
        }
      },
      "25": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 47
        }
      },
      "26": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 47
        }
      },
      "27": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 48
        }
      },
      "28": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 49
        }
      },
      "29": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 67,
          column: 11
        }
      },
      "30": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 55
        }
      },
      "31": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 74,
          column: 11
        }
      },
      "32": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "33": {
        start: {
          line: 79,
          column: 22
        },
        end: {
          line: 79,
          column: 82
        }
      },
      "34": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "35": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 85,
          column: 15
        }
      },
      "36": {
        start: {
          line: 87,
          column: 24
        },
        end: {
          line: 87,
          column: 59
        }
      },
      "37": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "38": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 93,
          column: 15
        }
      },
      "39": {
        start: {
          line: 95,
          column: 32
        },
        end: {
          line: 95,
          column: 52
        }
      },
      "40": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "41": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 101,
          column: 15
        }
      },
      "42": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 72
        }
      },
      "43": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 49
        }
      },
      "44": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 108,
          column: 11
        }
      },
      "45": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 66
        }
      },
      "46": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 115,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 13
          }
        },
        loc: {
          start: {
            line: 12,
            column: 23
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 10
          },
          end: {
            line: 15,
            column: 11
          }
        },
        loc: {
          start: {
            line: 15,
            column: 21
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "POST",
        decl: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 23,
            column: 19
          }
        },
        loc: {
          start: {
            line: 23,
            column: 29
          },
          end: {
            line: 76,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "DELETE",
        decl: {
          start: {
            line: 77,
            column: 15
          },
          end: {
            line: 77,
            column: 21
          }
        },
        loc: {
          start: {
            line: 77,
            column: 31
          },
          end: {
            line: 117,
            column: 1
          }
        },
        line: 77
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 20
          }
        }, {
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 36
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "4": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "5": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "6": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "7": {
        loc: {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 88,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 88,
            column: 20
          }
        }, {
          start: {
            line: 88,
            column: 24
          },
          end: {
            line: 88,
            column: 36
          }
        }],
        line: 88
      },
      "8": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "9": {
        loc: {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 96,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 96,
            column: 24
          }
        }, {
          start: {
            line: 96,
            column: 28
          },
          end: {
            line: 96,
            column: 55
          }
        }],
        line: 96
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/audit-trail/recover/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { verifyToken } from '@/lib/auth';\nimport { auditService } from '@/services/auditService';\nimport { revalidateTag } from 'next/cache';\n\n// POST /api/audit-trail/recover - Recover a deleted item\nexport async function POST(request: NextRequest) {\n  try {\n    const token = request.headers.get('Authorization')?.replace('Bearer ', '');\n    if (!token) {\n      return NextResponse.json({ error: 'No token provided' }, { status: 401 });\n    }\n\n    const decoded = await verifyToken(token);\n    if (!decoded || !decoded.sub) {\n      return NextResponse.json({ error: 'Invalid token' }, { status: 401 });\n    }\n\n    const { auditLogId } = await request.json();\n\n    if (!auditLogId) {\n      return NextResponse.json(\n        { error: 'Audit log ID is required' },\n        { status: 400 }\n      );\n    }\n\n    const userId = decoded.sub as string;\n    const result = await auditService.recoverItem(auditLogId, userId);\n\n    if (!result.success) {\n      return NextResponse.json(\n        { error: result.message },\n        { status: 400 }\n      );\n    }\n\n    // Revalidate relevant caches\n    revalidateTag('products');\n    revalidateTag('customers');\n    revalidateTag('suppliers');\n    revalidateTag('categories');\n    revalidateTag('audit-trail');\n\n    return NextResponse.json({\n      message: result.message,\n      data: result.data,\n    });\n  } catch (error) {\n    console.error('Error recovering item:', error);\n    return NextResponse.json(\n      { error: 'Failed to recover item' },\n      { status: 500 }\n    );\n  }\n}\n\n// DELETE /api/audit-trail/recover - Permanently delete items\nexport async function DELETE(request: NextRequest) {\n  try {\n    const token = request.headers.get('Authorization')?.replace('Bearer ', '');\n    if (!token) {\n      return NextResponse.json({ error: 'No token provided' }, { status: 401 });\n    }\n\n    const decoded = await verifyToken(token);\n    if (!decoded || !decoded.sub) {\n      return NextResponse.json({ error: 'Invalid token' }, { status: 401 });\n    }\n\n    const { auditLogIds } = await request.json();\n\n    if (!auditLogIds || !Array.isArray(auditLogIds)) {\n      return NextResponse.json(\n        { error: 'Audit log IDs array is required' },\n        { status: 400 }\n      );\n    }\n\n    await auditService.permanentlyDelete(auditLogIds);\n\n    // Revalidate audit trail cache\n    revalidateTag('audit-trail');\n\n    return NextResponse.json({\n      message: 'Items permanently deleted',\n    });\n  } catch (error) {\n    console.error('Error permanently deleting items:', error);\n    return NextResponse.json(\n      { error: 'Failed to permanently delete items' },\n      { status: 500 }\n    );\n  }\n}"],
      names: ["DELETE", "POST", "request", "token", "headers", "get", "replace", "NextResponse", "json", "error", "status", "decoded", "verifyToken", "sub", "auditLogId", "userId", "result", "auditService", "recoverItem", "success", "message", "revalidateTag", "data", "console", "auditLogIds", "Array", "isArray", "permanentlyDelete"],
      mappings: ";;;;;;;;;;;IA0DsBA,MAAM;eAANA;;IApDAC,IAAI;eAAJA;;;wBANoB;sBACd;8BACC;uBACC;AAGvB,eAAeA,KAAKC,OAAoB;IAC7C,IAAI;QACF,MAAMC,QAAQD,QAAQE,OAAO,CAACC,GAAG,CAAC,kBAAkBC,QAAQ,WAAW;QACvE,IAAI,CAACH,OAAO;YACV,OAAOI,oBAAY,CAACC,IAAI,CAAC;gBAAEC,OAAO;YAAoB,GAAG;gBAAEC,QAAQ;YAAI;QACzE;QAEA,MAAMC,UAAU,MAAMC,IAAAA,iBAAW,EAACT;QAClC,IAAI,CAACQ,WAAW,CAACA,QAAQE,GAAG,EAAE;YAC5B,OAAON,oBAAY,CAACC,IAAI,CAAC;gBAAEC,OAAO;YAAgB,GAAG;gBAAEC,QAAQ;YAAI;QACrE;QAEA,MAAM,EAAEI,UAAU,EAAE,GAAG,MAAMZ,QAAQM,IAAI;QAEzC,IAAI,CAACM,YAAY;YACf,OAAOP,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO;YAA2B,GACpC;gBAAEC,QAAQ;YAAI;QAElB;QAEA,MAAMK,SAASJ,QAAQE,GAAG;QAC1B,MAAMG,SAAS,MAAMC,0BAAY,CAACC,WAAW,CAACJ,YAAYC;QAE1D,IAAI,CAACC,OAAOG,OAAO,EAAE;YACnB,OAAOZ,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAOO,OAAOI,OAAO;YAAC,GACxB;gBAAEV,QAAQ;YAAI;QAElB;QAEA,6BAA6B;QAC7BW,IAAAA,oBAAa,EAAC;QACdA,IAAAA,oBAAa,EAAC;QACdA,IAAAA,oBAAa,EAAC;QACdA,IAAAA,oBAAa,EAAC;QACdA,IAAAA,oBAAa,EAAC;QAEd,OAAOd,oBAAY,CAACC,IAAI,CAAC;YACvBY,SAASJ,OAAOI,OAAO;YACvBE,MAAMN,OAAOM,IAAI;QACnB;IACF,EAAE,OAAOb,OAAO;QACdc,QAAQd,KAAK,CAAC,0BAA0BA;QACxC,OAAOF,oBAAY,CAACC,IAAI,CACtB;YAAEC,OAAO;QAAyB,GAClC;YAAEC,QAAQ;QAAI;IAElB;AACF;AAGO,eAAeV,OAAOE,OAAoB;IAC/C,IAAI;QACF,MAAMC,QAAQD,QAAQE,OAAO,CAACC,GAAG,CAAC,kBAAkBC,QAAQ,WAAW;QACvE,IAAI,CAACH,OAAO;YACV,OAAOI,oBAAY,CAACC,IAAI,CAAC;gBAAEC,OAAO;YAAoB,GAAG;gBAAEC,QAAQ;YAAI;QACzE;QAEA,MAAMC,UAAU,MAAMC,IAAAA,iBAAW,EAACT;QAClC,IAAI,CAACQ,WAAW,CAACA,QAAQE,GAAG,EAAE;YAC5B,OAAON,oBAAY,CAACC,IAAI,CAAC;gBAAEC,OAAO;YAAgB,GAAG;gBAAEC,QAAQ;YAAI;QACrE;QAEA,MAAM,EAAEc,WAAW,EAAE,GAAG,MAAMtB,QAAQM,IAAI;QAE1C,IAAI,CAACgB,eAAe,CAACC,MAAMC,OAAO,CAACF,cAAc;YAC/C,OAAOjB,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO;YAAkC,GAC3C;gBAAEC,QAAQ;YAAI;QAElB;QAEA,MAAMO,0BAAY,CAACU,iBAAiB,CAACH;QAErC,+BAA+B;QAC/BH,IAAAA,oBAAa,EAAC;QAEd,OAAOd,oBAAY,CAACC,IAAI,CAAC;YACvBY,SAAS;QACX;IACF,EAAE,OAAOX,OAAO;QACdc,QAAQd,KAAK,CAAC,qCAAqCA;QACnD,OAAOF,oBAAY,CAACC,IAAI,CACtB;YAAEC,OAAO;QAAqC,GAC9C;YAAEC,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3d89d0695cb0820adce957432bc0e06dfe412d40"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_62k99y7h1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_62k99y7h1();
cov_62k99y7h1().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_62k99y7h1().f[0]++;
  cov_62k99y7h1().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_62k99y7h1().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_62k99y7h1().s[3]++;
_export(exports, {
  DELETE: function () {
    /* istanbul ignore next */
    cov_62k99y7h1().f[1]++;
    cov_62k99y7h1().s[4]++;
    return DELETE;
  },
  POST: function () {
    /* istanbul ignore next */
    cov_62k99y7h1().f[2]++;
    cov_62k99y7h1().s[5]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_62k99y7h1().s[6]++, require("next/server"));
const _auth =
/* istanbul ignore next */
(cov_62k99y7h1().s[7]++, require("../../../../lib/auth"));
const _auditService =
/* istanbul ignore next */
(cov_62k99y7h1().s[8]++, require("../../../../services/auditService"));
const _cache =
/* istanbul ignore next */
(cov_62k99y7h1().s[9]++, require("next/cache"));
async function POST(request) {
  /* istanbul ignore next */
  cov_62k99y7h1().f[3]++;
  cov_62k99y7h1().s[10]++;
  try {
    const token =
    /* istanbul ignore next */
    (cov_62k99y7h1().s[11]++, request.headers.get("Authorization")?.replace("Bearer ", ""));
    /* istanbul ignore next */
    cov_62k99y7h1().s[12]++;
    if (!token) {
      /* istanbul ignore next */
      cov_62k99y7h1().b[0][0]++;
      cov_62k99y7h1().s[13]++;
      return _server.NextResponse.json({
        error: "No token provided"
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_62k99y7h1().b[0][1]++;
    }
    const decoded =
    /* istanbul ignore next */
    (cov_62k99y7h1().s[14]++, await (0, _auth.verifyToken)(token));
    /* istanbul ignore next */
    cov_62k99y7h1().s[15]++;
    if (
    /* istanbul ignore next */
    (cov_62k99y7h1().b[2][0]++, !decoded) ||
    /* istanbul ignore next */
    (cov_62k99y7h1().b[2][1]++, !decoded.sub)) {
      /* istanbul ignore next */
      cov_62k99y7h1().b[1][0]++;
      cov_62k99y7h1().s[16]++;
      return _server.NextResponse.json({
        error: "Invalid token"
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_62k99y7h1().b[1][1]++;
    }
    const {
      auditLogId
    } =
    /* istanbul ignore next */
    (cov_62k99y7h1().s[17]++, await request.json());
    /* istanbul ignore next */
    cov_62k99y7h1().s[18]++;
    if (!auditLogId) {
      /* istanbul ignore next */
      cov_62k99y7h1().b[3][0]++;
      cov_62k99y7h1().s[19]++;
      return _server.NextResponse.json({
        error: "Audit log ID is required"
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_62k99y7h1().b[3][1]++;
    }
    const userId =
    /* istanbul ignore next */
    (cov_62k99y7h1().s[20]++, decoded.sub);
    const result =
    /* istanbul ignore next */
    (cov_62k99y7h1().s[21]++, await _auditService.auditService.recoverItem(auditLogId, userId));
    /* istanbul ignore next */
    cov_62k99y7h1().s[22]++;
    if (!result.success) {
      /* istanbul ignore next */
      cov_62k99y7h1().b[4][0]++;
      cov_62k99y7h1().s[23]++;
      return _server.NextResponse.json({
        error: result.message
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_62k99y7h1().b[4][1]++;
    }
    // Revalidate relevant caches
    cov_62k99y7h1().s[24]++;
    (0, _cache.revalidateTag)("products");
    /* istanbul ignore next */
    cov_62k99y7h1().s[25]++;
    (0, _cache.revalidateTag)("customers");
    /* istanbul ignore next */
    cov_62k99y7h1().s[26]++;
    (0, _cache.revalidateTag)("suppliers");
    /* istanbul ignore next */
    cov_62k99y7h1().s[27]++;
    (0, _cache.revalidateTag)("categories");
    /* istanbul ignore next */
    cov_62k99y7h1().s[28]++;
    (0, _cache.revalidateTag)("audit-trail");
    /* istanbul ignore next */
    cov_62k99y7h1().s[29]++;
    return _server.NextResponse.json({
      message: result.message,
      data: result.data
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_62k99y7h1().s[30]++;
    console.error("Error recovering item:", error);
    /* istanbul ignore next */
    cov_62k99y7h1().s[31]++;
    return _server.NextResponse.json({
      error: "Failed to recover item"
    }, {
      status: 500
    });
  }
}
async function DELETE(request) {
  /* istanbul ignore next */
  cov_62k99y7h1().f[4]++;
  cov_62k99y7h1().s[32]++;
  try {
    const token =
    /* istanbul ignore next */
    (cov_62k99y7h1().s[33]++, request.headers.get("Authorization")?.replace("Bearer ", ""));
    /* istanbul ignore next */
    cov_62k99y7h1().s[34]++;
    if (!token) {
      /* istanbul ignore next */
      cov_62k99y7h1().b[5][0]++;
      cov_62k99y7h1().s[35]++;
      return _server.NextResponse.json({
        error: "No token provided"
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_62k99y7h1().b[5][1]++;
    }
    const decoded =
    /* istanbul ignore next */
    (cov_62k99y7h1().s[36]++, await (0, _auth.verifyToken)(token));
    /* istanbul ignore next */
    cov_62k99y7h1().s[37]++;
    if (
    /* istanbul ignore next */
    (cov_62k99y7h1().b[7][0]++, !decoded) ||
    /* istanbul ignore next */
    (cov_62k99y7h1().b[7][1]++, !decoded.sub)) {
      /* istanbul ignore next */
      cov_62k99y7h1().b[6][0]++;
      cov_62k99y7h1().s[38]++;
      return _server.NextResponse.json({
        error: "Invalid token"
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_62k99y7h1().b[6][1]++;
    }
    const {
      auditLogIds
    } =
    /* istanbul ignore next */
    (cov_62k99y7h1().s[39]++, await request.json());
    /* istanbul ignore next */
    cov_62k99y7h1().s[40]++;
    if (
    /* istanbul ignore next */
    (cov_62k99y7h1().b[9][0]++, !auditLogIds) ||
    /* istanbul ignore next */
    (cov_62k99y7h1().b[9][1]++, !Array.isArray(auditLogIds))) {
      /* istanbul ignore next */
      cov_62k99y7h1().b[8][0]++;
      cov_62k99y7h1().s[41]++;
      return _server.NextResponse.json({
        error: "Audit log IDs array is required"
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_62k99y7h1().b[8][1]++;
    }
    cov_62k99y7h1().s[42]++;
    await _auditService.auditService.permanentlyDelete(auditLogIds);
    // Revalidate audit trail cache
    /* istanbul ignore next */
    cov_62k99y7h1().s[43]++;
    (0, _cache.revalidateTag)("audit-trail");
    /* istanbul ignore next */
    cov_62k99y7h1().s[44]++;
    return _server.NextResponse.json({
      message: "Items permanently deleted"
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_62k99y7h1().s[45]++;
    console.error("Error permanently deleting items:", error);
    /* istanbul ignore next */
    cov_62k99y7h1().s[46]++;
    return _server.NextResponse.json({
      error: "Failed to permanently delete items"
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,