15b613cde3a2e2790f6d9b95e6d79a30
"use strict";

/* istanbul ignore next */
function cov_nctbjirld() {
  var path = "/Users/sachin/Documents/md-sports-/src/lib/models/Quotation.ts";
  var hash = "a96c367fc97c32222e97455b8f4ebc6b05dcda5b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/lib/models/Quotation.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 19
        },
        end: {
          line: 11,
          column: 39
        }
      },
      "4": {
        start: {
          line: 12,
          column: 26
        },
        end: {
          line: 12,
          column: 68
        }
      },
      "5": {
        start: {
          line: 13,
          column: 32
        },
        end: {
          line: 13,
          column: 79
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 17,
          column: 6
        }
      },
      "7": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 88,
          column: 3
        }
      },
      "8": {
        start: {
          line: 25,
          column: 26
        },
        end: {
          line: 25,
          column: 95
        }
      },
      "9": {
        start: {
          line: 90,
          column: 0
        },
        end: {
          line: 93,
          column: 3
        }
      },
      "10": {
        start: {
          line: 94,
          column: 0
        },
        end: {
          line: 97,
          column: 3
        }
      },
      "11": {
        start: {
          line: 98,
          column: 17
        },
        end: {
          line: 98,
          column: 26
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 33
          }
        },
        loc: {
          start: {
            line: 14,
            column: 39
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 22
          },
          end: {
            line: 25,
            column: 23
          }
        },
        loc: {
          start: {
            line: 25,
            column: 26
          },
          end: {
            line: 25,
            column: 95
          }
        },
        line: 25
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 17,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 35
          },
          end: {
            line: 15,
            column: 38
          }
        }, {
          start: {
            line: 15,
            column: 41
          },
          end: {
            line: 17,
            column: 5
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 14
          }
        }, {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 32
          }
        }],
        line: 15
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/lib/models/Quotation.ts"],
      sourcesContent: ["import { DataTypes, Model, Optional } from 'sequelize';\nimport sequelize from '../db';\nimport Customer from './Customer';\n\ninterface QuotationAttributes {\n    id: string;\n    quotationNumber: string;\n    customerId: string;\n    date: Date;\n    expiryDate: Date;\n    subtotal: number;\n    tax: number;\n    discount: number;\n    total: number;\n    notes?: string;\n    createdAt: Date;\n    updatedAt: Date;\n}\n\ninterface QuotationCreationAttributes extends Optional<QuotationAttributes, 'id' | 'createdAt' | 'updatedAt'> { }\n\nclass Quotation extends Model<QuotationAttributes, QuotationCreationAttributes> implements QuotationAttributes {\n    public id!: string;\n    public quotationNumber!: string;\n    public customerId!: string;\n    public date!: Date;\n    public expiryDate!: Date;\n    public subtotal!: number;\n    public tax!: number;\n    public discount!: number;\n    public total!: number;\n    public notes!: string;\n    public createdAt!: Date;\n    public updatedAt!: Date;\n}\n\nQuotation.init({\n    id: {\n        type: DataTypes.STRING,\n        primaryKey: true,\n        defaultValue: () => `QUO${Math.floor(Math.random() * 10000).toString().padStart(4, '0')}`\n    },\n    quotationNumber: {\n        type: DataTypes.STRING,\n        allowNull: false,\n        unique: true\n    },\n    customerId: {\n        type: DataTypes.STRING,\n        allowNull: false,\n        references: {\n            model: 'customers',\n            key: 'id'\n        }\n    },\n    date: {\n        type: DataTypes.DATEONLY,\n        allowNull: false\n    },\n    expiryDate: {\n        type: DataTypes.DATEONLY,\n        allowNull: false\n    },\n    subtotal: {\n        type: DataTypes.FLOAT,\n        allowNull: false,\n        defaultValue: 0\n    },\n    tax: {\n        type: DataTypes.FLOAT,\n        allowNull: false,\n        defaultValue: 0\n    },\n    discount: {\n        type: DataTypes.FLOAT,\n        allowNull: false,\n        defaultValue: 0\n    },\n    total: {\n        type: DataTypes.FLOAT,\n        allowNull: false,\n        defaultValue: 0\n    },\n    notes: {\n        type: DataTypes.TEXT,\n        allowNull: true\n    },\n\n    createdAt: {\n        type: DataTypes.DATE,\n        allowNull: false,\n        defaultValue: DataTypes.NOW\n    },\n    updatedAt: {\n        type: DataTypes.DATE,\n        allowNull: false,\n        defaultValue: DataTypes.NOW\n    }\n}, {\n    sequelize,\n    modelName: 'Quotation',\n    tableName: 'quotations',\n    timestamps: true,\n    underscored: true\n});\n\n// Define association with Customer\nQuotation.belongsTo(Customer, { foreignKey: 'customer_id', as: 'customer' });\nCustomer.hasMany(Quotation, { foreignKey: 'customer_id', as: 'quotations' });\n\nexport default Quotation;"],
      names: ["Quotation", "Model", "init", "id", "type", "DataTypes", "STRING", "primaryKey", "defaultValue", "Math", "floor", "random", "toString", "padStart", "quotationNumber", "allowNull", "unique", "customerId", "references", "model", "key", "date", "DATEONLY", "expiryDate", "subtotal", "FLOAT", "tax", "discount", "total", "notes", "TEXT", "createdAt", "DATE", "NOW", "updatedAt", "sequelize", "modelName", "tableName", "timestamps", "underscored", "belongsTo", "Customer", "foreignKey", "as", "hasMany"],
      mappings: ";;;;+BA8GA;;;eAAA;;;2BA9G2C;2DACrB;iEACD;;;;;;AAmBrB,MAAMA,kBAAkBC,gBAAK;AAa7B;AAEAD,UAAUE,IAAI,CAAC;IACXC,IAAI;QACAC,MAAMC,oBAAS,CAACC,MAAM;QACtBC,YAAY;QACZC,cAAc,IAAM,CAAC,GAAG,EAAEC,KAAKC,KAAK,CAACD,KAAKE,MAAM,KAAK,OAAOC,QAAQ,GAAGC,QAAQ,CAAC,GAAG,KAAK,CAAC;IAC7F;IACAC,iBAAiB;QACbV,MAAMC,oBAAS,CAACC,MAAM;QACtBS,WAAW;QACXC,QAAQ;IACZ;IACAC,YAAY;QACRb,MAAMC,oBAAS,CAACC,MAAM;QACtBS,WAAW;QACXG,YAAY;YACRC,OAAO;YACPC,KAAK;QACT;IACJ;IACAC,MAAM;QACFjB,MAAMC,oBAAS,CAACiB,QAAQ;QACxBP,WAAW;IACf;IACAQ,YAAY;QACRnB,MAAMC,oBAAS,CAACiB,QAAQ;QACxBP,WAAW;IACf;IACAS,UAAU;QACNpB,MAAMC,oBAAS,CAACoB,KAAK;QACrBV,WAAW;QACXP,cAAc;IAClB;IACAkB,KAAK;QACDtB,MAAMC,oBAAS,CAACoB,KAAK;QACrBV,WAAW;QACXP,cAAc;IAClB;IACAmB,UAAU;QACNvB,MAAMC,oBAAS,CAACoB,KAAK;QACrBV,WAAW;QACXP,cAAc;IAClB;IACAoB,OAAO;QACHxB,MAAMC,oBAAS,CAACoB,KAAK;QACrBV,WAAW;QACXP,cAAc;IAClB;IACAqB,OAAO;QACHzB,MAAMC,oBAAS,CAACyB,IAAI;QACpBf,WAAW;IACf;IAEAgB,WAAW;QACP3B,MAAMC,oBAAS,CAAC2B,IAAI;QACpBjB,WAAW;QACXP,cAAcH,oBAAS,CAAC4B,GAAG;IAC/B;IACAC,WAAW;QACP9B,MAAMC,oBAAS,CAAC2B,IAAI;QACpBjB,WAAW;QACXP,cAAcH,oBAAS,CAAC4B,GAAG;IAC/B;AACJ,GAAG;IACCE,WAAAA,WAAS;IACTC,WAAW;IACXC,WAAW;IACXC,YAAY;IACZC,aAAa;AACjB;AAEA,mCAAmC;AACnCvC,UAAUwC,SAAS,CAACC,iBAAQ,EAAE;IAAEC,YAAY;IAAeC,IAAI;AAAW;AAC1EF,iBAAQ,CAACG,OAAO,CAAC5C,WAAW;IAAE0C,YAAY;IAAeC,IAAI;AAAa;MAE1E,WAAe3C"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a96c367fc97c32222e97455b8f4ebc6b05dcda5b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_nctbjirld = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_nctbjirld();
cov_nctbjirld().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_nctbjirld().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_nctbjirld().f[0]++;
    cov_nctbjirld().s[2]++;
    return _default;
  }
});
const _sequelize =
/* istanbul ignore next */
(cov_nctbjirld().s[3]++, require("sequelize"));
const _db =
/* istanbul ignore next */
(/*#__PURE__*/cov_nctbjirld().s[4]++, _interop_require_default(require("../db")));
const _Customer =
/* istanbul ignore next */
(/*#__PURE__*/cov_nctbjirld().s[5]++, _interop_require_default(require("./Customer")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_nctbjirld().f[1]++;
  cov_nctbjirld().s[6]++;
  return /* istanbul ignore next */(cov_nctbjirld().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_nctbjirld().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_nctbjirld().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_nctbjirld().b[0][1]++, {
    default: obj
  });
}
class Quotation extends
/* istanbul ignore next */
(_sequelize.Model) {}
/* istanbul ignore next */
cov_nctbjirld().s[7]++;
Quotation.init({
  id: {
    type: _sequelize.DataTypes.STRING,
    primaryKey: true,
    defaultValue: () => {
      /* istanbul ignore next */
      cov_nctbjirld().f[2]++;
      cov_nctbjirld().s[8]++;
      return `QUO${Math.floor(Math.random() * 10000).toString().padStart(4, "0")}`;
    }
  },
  quotationNumber: {
    type: _sequelize.DataTypes.STRING,
    allowNull: false,
    unique: true
  },
  customerId: {
    type: _sequelize.DataTypes.STRING,
    allowNull: false,
    references: {
      model: "customers",
      key: "id"
    }
  },
  date: {
    type: _sequelize.DataTypes.DATEONLY,
    allowNull: false
  },
  expiryDate: {
    type: _sequelize.DataTypes.DATEONLY,
    allowNull: false
  },
  subtotal: {
    type: _sequelize.DataTypes.FLOAT,
    allowNull: false,
    defaultValue: 0
  },
  tax: {
    type: _sequelize.DataTypes.FLOAT,
    allowNull: false,
    defaultValue: 0
  },
  discount: {
    type: _sequelize.DataTypes.FLOAT,
    allowNull: false,
    defaultValue: 0
  },
  total: {
    type: _sequelize.DataTypes.FLOAT,
    allowNull: false,
    defaultValue: 0
  },
  notes: {
    type: _sequelize.DataTypes.TEXT,
    allowNull: true
  },
  createdAt: {
    type: _sequelize.DataTypes.DATE,
    allowNull: false,
    defaultValue: _sequelize.DataTypes.NOW
  },
  updatedAt: {
    type: _sequelize.DataTypes.DATE,
    allowNull: false,
    defaultValue: _sequelize.DataTypes.NOW
  }
}, {
  sequelize: _db.default,
  modelName: "Quotation",
  tableName: "quotations",
  timestamps: true,
  underscored: true
});
// Define association with Customer
/* istanbul ignore next */
cov_nctbjirld().s[9]++;
Quotation.belongsTo(_Customer.default, {
  foreignKey: "customer_id",
  as: "customer"
});
/* istanbul ignore next */
cov_nctbjirld().s[10]++;
_Customer.default.hasMany(Quotation, {
  foreignKey: "customer_id",
  as: "quotations"
});
const _default =
/* istanbul ignore next */
(cov_nctbjirld().s[11]++, Quotation);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGVmYXVsdCIsIlF1b3RhdGlvbiIsIl9zZXF1ZWxpemUiLCJNb2RlbCIsImNvdl9uY3RiamlybGQiLCJzIiwiaW5pdCIsImlkIiwidHlwZSIsIkRhdGFUeXBlcyIsIlNUUklORyIsInByaW1hcnlLZXkiLCJkZWZhdWx0VmFsdWUiLCJmIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwidG9TdHJpbmciLCJwYWRTdGFydCIsInF1b3RhdGlvbk51bWJlciIsImFsbG93TnVsbCIsInVuaXF1ZSIsImN1c3RvbWVySWQiLCJyZWZlcmVuY2VzIiwibW9kZWwiLCJrZXkiLCJkYXRlIiwiREFURU9OTFkiLCJleHBpcnlEYXRlIiwic3VidG90YWwiLCJGTE9BVCIsInRheCIsImRpc2NvdW50IiwidG90YWwiLCJub3RlcyIsIlRFWFQiLCJjcmVhdGVkQXQiLCJEQVRFIiwiTk9XIiwidXBkYXRlZEF0Iiwic2VxdWVsaXplIiwiX2RiIiwiZGVmYXVsdCIsIm1vZGVsTmFtZSIsInRhYmxlTmFtZSIsInRpbWVzdGFtcHMiLCJ1bmRlcnNjb3JlZCIsImJlbG9uZ3NUbyIsIl9DdXN0b21lciIsImZvcmVpZ25LZXkiLCJhcyIsImhhc01hbnkiXSwic291cmNlcyI6WyIvVXNlcnMvc2FjaGluL0RvY3VtZW50cy9tZC1zcG9ydHMtL3NyYy9saWIvbW9kZWxzL1F1b3RhdGlvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEYXRhVHlwZXMsIE1vZGVsLCBPcHRpb25hbCB9IGZyb20gJ3NlcXVlbGl6ZSc7XG5pbXBvcnQgc2VxdWVsaXplIGZyb20gJy4uL2RiJztcbmltcG9ydCBDdXN0b21lciBmcm9tICcuL0N1c3RvbWVyJztcblxuaW50ZXJmYWNlIFF1b3RhdGlvbkF0dHJpYnV0ZXMge1xuICAgIGlkOiBzdHJpbmc7XG4gICAgcXVvdGF0aW9uTnVtYmVyOiBzdHJpbmc7XG4gICAgY3VzdG9tZXJJZDogc3RyaW5nO1xuICAgIGRhdGU6IERhdGU7XG4gICAgZXhwaXJ5RGF0ZTogRGF0ZTtcbiAgICBzdWJ0b3RhbDogbnVtYmVyO1xuICAgIHRheDogbnVtYmVyO1xuICAgIGRpc2NvdW50OiBudW1iZXI7XG4gICAgdG90YWw6IG51bWJlcjtcbiAgICBub3Rlcz86IHN0cmluZztcbiAgICBjcmVhdGVkQXQ6IERhdGU7XG4gICAgdXBkYXRlZEF0OiBEYXRlO1xufVxuXG5pbnRlcmZhY2UgUXVvdGF0aW9uQ3JlYXRpb25BdHRyaWJ1dGVzIGV4dGVuZHMgT3B0aW9uYWw8UXVvdGF0aW9uQXR0cmlidXRlcywgJ2lkJyB8ICdjcmVhdGVkQXQnIHwgJ3VwZGF0ZWRBdCc+IHsgfVxuXG5jbGFzcyBRdW90YXRpb24gZXh0ZW5kcyBNb2RlbDxRdW90YXRpb25BdHRyaWJ1dGVzLCBRdW90YXRpb25DcmVhdGlvbkF0dHJpYnV0ZXM+IGltcGxlbWVudHMgUXVvdGF0aW9uQXR0cmlidXRlcyB7XG4gICAgcHVibGljIGlkITogc3RyaW5nO1xuICAgIHB1YmxpYyBxdW90YXRpb25OdW1iZXIhOiBzdHJpbmc7XG4gICAgcHVibGljIGN1c3RvbWVySWQhOiBzdHJpbmc7XG4gICAgcHVibGljIGRhdGUhOiBEYXRlO1xuICAgIHB1YmxpYyBleHBpcnlEYXRlITogRGF0ZTtcbiAgICBwdWJsaWMgc3VidG90YWwhOiBudW1iZXI7XG4gICAgcHVibGljIHRheCE6IG51bWJlcjtcbiAgICBwdWJsaWMgZGlzY291bnQhOiBudW1iZXI7XG4gICAgcHVibGljIHRvdGFsITogbnVtYmVyO1xuICAgIHB1YmxpYyBub3RlcyE6IHN0cmluZztcbiAgICBwdWJsaWMgY3JlYXRlZEF0ITogRGF0ZTtcbiAgICBwdWJsaWMgdXBkYXRlZEF0ITogRGF0ZTtcbn1cblxuUXVvdGF0aW9uLmluaXQoe1xuICAgIGlkOiB7XG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgICAgIHByaW1hcnlLZXk6IHRydWUsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogKCkgPT4gYFFVTyR7TWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTAwMDApLnRvU3RyaW5nKCkucGFkU3RhcnQoNCwgJzAnKX1gXG4gICAgfSxcbiAgICBxdW90YXRpb25OdW1iZXI6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgICAgdW5pcXVlOiB0cnVlXG4gICAgfSxcbiAgICBjdXN0b21lcklkOiB7XG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICAgIHJlZmVyZW5jZXM6IHtcbiAgICAgICAgICAgIG1vZGVsOiAnY3VzdG9tZXJzJyxcbiAgICAgICAgICAgIGtleTogJ2lkJ1xuICAgICAgICB9XG4gICAgfSxcbiAgICBkYXRlOiB7XG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5EQVRFT05MWSxcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZVxuICAgIH0sXG4gICAgZXhwaXJ5RGF0ZToge1xuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuREFURU9OTFksXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2VcbiAgICB9LFxuICAgIHN1YnRvdGFsOiB7XG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5GTE9BVCxcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgICAgZGVmYXVsdFZhbHVlOiAwXG4gICAgfSxcbiAgICB0YXg6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLkZMT0FULFxuICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgICBkZWZhdWx0VmFsdWU6IDBcbiAgICB9LFxuICAgIGRpc2NvdW50OiB7XG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5GTE9BVCxcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgICAgZGVmYXVsdFZhbHVlOiAwXG4gICAgfSxcbiAgICB0b3RhbDoge1xuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuRkxPQVQsXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogMFxuICAgIH0sXG4gICAgbm90ZXM6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLlRFWFQsXG4gICAgICAgIGFsbG93TnVsbDogdHJ1ZVxuICAgIH0sXG5cbiAgICBjcmVhdGVkQXQ6IHtcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLkRBVEUsXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogRGF0YVR5cGVzLk5PV1xuICAgIH0sXG4gICAgdXBkYXRlZEF0OiB7XG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5EQVRFLFxuICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgICBkZWZhdWx0VmFsdWU6IERhdGFUeXBlcy5OT1dcbiAgICB9XG59LCB7XG4gICAgc2VxdWVsaXplLFxuICAgIG1vZGVsTmFtZTogJ1F1b3RhdGlvbicsXG4gICAgdGFibGVOYW1lOiAncXVvdGF0aW9ucycsXG4gICAgdGltZXN0YW1wczogdHJ1ZSxcbiAgICB1bmRlcnNjb3JlZDogdHJ1ZVxufSk7XG5cbi8vIERlZmluZSBhc3NvY2lhdGlvbiB3aXRoIEN1c3RvbWVyXG5RdW90YXRpb24uYmVsb25nc1RvKEN1c3RvbWVyLCB7IGZvcmVpZ25LZXk6ICdjdXN0b21lcl9pZCcsIGFzOiAnY3VzdG9tZXInIH0pO1xuQ3VzdG9tZXIuaGFzTWFueShRdW90YXRpb24sIHsgZm9yZWlnbktleTogJ2N1c3RvbWVyX2lkJywgYXM6ICdxdW90YXRpb25zJyB9KTtcblxuZXhwb3J0IGRlZmF1bHQgUXVvdGF0aW9uOyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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