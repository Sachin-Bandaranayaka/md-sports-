{"version":3,"names":["POST","cov_2ps6q3bn3s","f","s","categoryCount","_prisma","default","category","count","b","_server","NextResponse","json","success","message","sportingGoods","create","data","name","description","apparel","parentId","id","equipment","basketball","product","sku","barcode","cost","price","categoryId","jersey","createMany","weightedAverageCost","mainStore","shop","location","branchStore","inventoryItem","shopId","productId","quantity","error","console","Error","String","status"],"sources":["/Users/sachin/Documents/md-sports-/src/app/api/db-seed/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport prisma from '@/lib/prisma';\n\nexport async function POST() {\n    try {\n        // Check if data already exists\n        const categoryCount = await prisma.category.count();\n        if (categoryCount > 0) {\n            return NextResponse.json({\n                success: true,\n                message: 'Data already exists. Skipping seed operation.'\n            });\n        }\n\n        // Create categories\n        const sportingGoods = await prisma.category.create({\n            data: {\n                name: 'Sporting Goods',\n                description: 'All sporting equipment and accessories'\n            }\n        });\n\n        const apparel = await prisma.category.create({\n            data: {\n                name: 'Apparel',\n                description: 'Clothing and uniforms',\n                parentId: sportingGoods.id\n            }\n        });\n\n        const equipment = await prisma.category.create({\n            data: {\n                name: 'Equipment',\n                description: 'Sports equipment',\n                parentId: sportingGoods.id\n            }\n        });\n\n        // Create products\n        const basketball = await prisma.product.create({\n            data: {\n                name: 'Professional Basketball',\n                sku: 'BB-PRO-001',\n                barcode: '123456789012',\n                description: 'Official size and weight basketball',\n                cost: 25.00,\n                price: 39.99,\n                categoryId: equipment.id\n            }\n        });\n\n        const jersey = await prisma.product.create({\n            data: {\n                name: 'Team Jersey',\n                sku: 'APP-JRS-001',\n                barcode: '123456789013',\n                description: 'Official team jersey',\n                cost: 35.00,\n                price: 59.99,\n                categoryId: apparel.id\n            }\n        });\n\n        // Creating some default products\n        await prisma.product.createMany({\n            data: [\n                {\n                    name: 'Cricket Bat',\n                    sku: 'CB-001',\n                    description: 'Professional grade cricket bat',\n                    price: 120.00,\n                    weightedAverageCost: 25.00,\n                    categoryId: equipment.id\n                },\n                {\n                    name: 'Tennis Racket',\n                    sku: 'TR-001',\n                    description: 'Professional tennis racket',\n                    price: 150.00,\n                    weightedAverageCost: 35.00,\n                    categoryId: equipment.id\n                }\n            ]\n        });\n\n        // Create shops\n        const mainStore = await prisma.shop.create({\n            data: {\n                name: 'MD Sports Main Store',\n                location: 'Colombo'\n            }\n        });\n\n        const branchStore = await prisma.shop.create({\n            data: {\n                name: 'MD Sports Kandy Branch',\n                location: 'Kandy'\n            }\n        });\n\n        // Create inventory items\n        await prisma.inventoryItem.create({\n            data: {\n                shopId: mainStore.id,\n                productId: basketball.id,\n                quantity: 50\n            }\n        });\n\n        await prisma.inventoryItem.create({\n            data: {\n                shopId: mainStore.id,\n                productId: jersey.id,\n                quantity: 30\n            }\n        });\n\n        await prisma.inventoryItem.create({\n            data: {\n                shopId: branchStore.id,\n                productId: basketball.id,\n                quantity: 25\n            }\n        });\n\n        await prisma.inventoryItem.create({\n            data: {\n                shopId: branchStore.id,\n                productId: jersey.id,\n                quantity: 15\n            }\n        });\n\n        return NextResponse.json({\n            success: true,\n            message: 'Database seeded successfully.'\n        });\n    } catch (error) {\n        console.error('Error seeding database:', error);\n        return NextResponse.json({\n            success: false,\n            message: 'Error seeding database',\n            error: error instanceof Error ? error.message : String(error)\n        }, { status: 500 });\n    }\n} "],"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","ignoreList":[]}