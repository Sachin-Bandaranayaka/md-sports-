{"version":3,"names":["cov_1o1j67ucjt","actualCoverage","s","PermissionButton","f","PermissionGuard","PermissionSwitch","default","_default","usePermissionGuard","withPermissionGuard","permission","context","children","fallback","showUnauthorized","b","unauthorizedMessage","redirectOnUnauthorized","redirectPath","requireAll","hasPermission","hasAnyPermission","hasAllPermissions","_usePermission","usePermission","router","_navigation","useRouter","hasAccess","_react","useMemo","Array","isArray","useEffect","push","_jsxruntime","jsx","Fragment","defaultMessage","join","jsxs","_alert","Alert","className","_lucidereact","AlertTriangle","AlertDescription","Component","options","PermissionGuardedComponent","props","cases","defaultComponent","component","disabledTooltip","disabled","isDisabled","_Button","Button","title"],"sources":["/Users/sachin/Documents/md-sports-/src/components/auth/PermissionGuard.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { usePermission } from '@/hooks/usePermission';\nimport { PERMISSIONS, Permission } from '@/lib/constants/permissions';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Button } from '@/components/ui/Button';\nimport { Shield, AlertTriangle } from 'lucide-react';\nimport { useRouter } from 'next/navigation';\n\ninterface PermissionGuardProps {\n  /** Required permission(s) to access the content */\n  permission: Permission | Permission[] | string | string[];\n  /** Optional context for permission checking */\n  context?: {\n    shopId?: string;\n    userId?: string;\n    resourceId?: string;\n  };\n  /** Content to render when user has permission */\n  children: React.ReactNode;\n  /** Custom fallback component when permission is denied */\n  fallback?: React.ReactNode;\n  /** Whether to show a default unauthorized message */\n  showUnauthorized?: boolean;\n  /** Custom unauthorized message */\n  unauthorizedMessage?: string;\n  /** Whether to redirect on unauthorized access */\n  redirectOnUnauthorized?: boolean;\n  /** Redirect path for unauthorized access */\n  redirectPath?: string;\n  /** Require ALL permissions (AND logic) vs ANY permission (OR logic) */\n  requireAll?: boolean;\n}\n\n/**\n * PermissionGuard component that conditionally renders content based on user permissions\n * \n * @example\n * // Basic usage\n * <PermissionGuard permission={PERMISSIONS.SALES_VIEW}>\n *   <SalesComponent />\n * </PermissionGuard>\n * \n * @example\n * // Multiple permissions (OR logic)\n * <PermissionGuard permission={[PERMISSIONS.SALES_VIEW, PERMISSIONS.SALES_EDIT]}>\n *   <SalesComponent />\n * </PermissionGuard>\n * \n * @example\n * // Multiple permissions (AND logic)\n * <PermissionGuard \n *   permission={[PERMISSIONS.SALES_VIEW, PERMISSIONS.SALES_EDIT]} \n *   requireAll\n * >\n *   <SalesEditComponent />\n * </PermissionGuard>\n * \n * @example\n * // With context\n * <PermissionGuard \n *   permission={PERMISSIONS.SHOP_VIEW} \n *   context={{ shopId: '123' }}\n * >\n *   <ShopComponent />\n * </PermissionGuard>\n */\nexport function PermissionGuard({\n  permission,\n  context,\n  children,\n  fallback,\n  showUnauthorized = true,\n  unauthorizedMessage,\n  redirectOnUnauthorized = false,\n  redirectPath = '/unauthorized',\n  requireAll = false,\n}: PermissionGuardProps) {\n  const { hasPermission, hasAnyPermission, hasAllPermissions } = usePermission();\n  const router = useRouter();\n\n  // Determine if user has required permission(s)\n  const hasAccess = React.useMemo(() => {\n    if (Array.isArray(permission)) {\n      return requireAll\n        ? hasAllPermissions(permission, context)\n        : hasAnyPermission(permission, context);\n    }\n    return hasPermission(permission, context);\n  }, [permission, context, hasPermission, hasAnyPermission, hasAllPermissions, requireAll]);\n\n  // Handle redirect on unauthorized access\n  React.useEffect(() => {\n    if (!hasAccess && redirectOnUnauthorized) {\n      router.push(redirectPath);\n    }\n  }, [hasAccess, redirectOnUnauthorized, redirectPath, router]);\n\n  // Return children if user has access\n  if (hasAccess) {\n    return <>{children}</>;\n  }\n\n  // Return custom fallback if provided\n  if (fallback) {\n    return <>{fallback}</>;\n  }\n\n  // Return nothing if showUnauthorized is false and no fallback\n  if (!showUnauthorized) {\n    return null;\n  }\n\n  // Default unauthorized message\n  const defaultMessage = unauthorizedMessage || \n    `You don't have permission to access this content. Required: ${Array.isArray(permission) ? permission.join(requireAll ? ' AND ' : ' OR ') : permission}`;\n\n  return (\n    <Alert className=\"border-amber-200 bg-amber-50\">\n      <AlertTriangle className=\"h-4 w-4 text-amber-600\" />\n      <AlertDescription className=\"text-amber-800\">\n        {defaultMessage}\n      </AlertDescription>\n    </Alert>\n  );\n}\n\n/**\n * Higher-order component version of PermissionGuard\n */\nexport function withPermissionGuard<P extends object>(\n  Component: React.ComponentType<P>,\n  permission: Permission | Permission[] | string | string[],\n  options?: Omit<PermissionGuardProps, 'permission' | 'children'>\n) {\n  return function PermissionGuardedComponent(props: P) {\n    return (\n      <PermissionGuard permission={permission} {...options}>\n        <Component {...props} />\n      </PermissionGuard>\n    );\n  };\n}\n\n/**\n * Hook for conditional rendering based on permissions\n */\nexport function usePermissionGuard(\n  permission: Permission | Permission[] | string | string[],\n  context?: PermissionGuardProps['context'],\n  requireAll = false\n) {\n  const { hasPermission, hasAnyPermission, hasAllPermissions } = usePermission();\n\n  const hasAccess = React.useMemo(() => {\n    if (Array.isArray(permission)) {\n      return requireAll\n        ? hasAllPermissions(permission, context)\n        : hasAnyPermission(permission, context);\n    }\n    return hasPermission(permission, context);\n  }, [permission, context, hasPermission, hasAnyPermission, hasAllPermissions, requireAll]);\n\n  return hasAccess;\n}\n\n/**\n * Component for rendering different content based on permission levels\n */\ninterface PermissionSwitchProps {\n  /** Permission cases to check */\n  cases: Array<{\n    permission: Permission | Permission[] | string | string[];\n    component: React.ReactNode;\n    requireAll?: boolean;\n    context?: PermissionGuardProps['context'];\n  }>;\n  /** Default component when no permissions match */\n  defaultComponent?: React.ReactNode;\n}\n\nexport function PermissionSwitch({ cases, defaultComponent }: PermissionSwitchProps) {\n  const { hasPermission, hasAnyPermission, hasAllPermissions } = usePermission();\n\n  for (const { permission, component, requireAll = false, context } of cases) {\n    const hasAccess = Array.isArray(permission)\n      ? requireAll\n        ? hasAllPermissions(permission, context)\n        : hasAnyPermission(permission, context)\n      : hasPermission(permission, context);\n\n    if (hasAccess) {\n      return <>{component}</>;\n    }\n  }\n\n  return defaultComponent ? <>{defaultComponent}</> : null;\n}\n\n/**\n * Button component that's only enabled when user has permission\n */\ninterface PermissionButtonProps extends React.ComponentProps<typeof Button> {\n  permission: Permission | Permission[] | string | string[];\n  context?: PermissionGuardProps['context'];\n  requireAll?: boolean;\n  disabledTooltip?: string;\n}\n\nexport function PermissionButton({\n  permission,\n  context,\n  requireAll = false,\n  disabledTooltip,\n  children,\n  disabled,\n  ...props\n}: PermissionButtonProps) {\n  const hasAccess = usePermissionGuard(permission, context, requireAll);\n  const isDisabled = disabled || !hasAccess;\n\n  return (\n    <Button\n      {...props}\n      disabled={isDisabled}\n      title={!hasAccess ? disabledTooltip || 'Insufficient permissions' : props.title}\n    >\n      {children}\n    </Button>\n  );\n}\n\nexport default PermissionGuard;"],"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","ignoreList":[]}