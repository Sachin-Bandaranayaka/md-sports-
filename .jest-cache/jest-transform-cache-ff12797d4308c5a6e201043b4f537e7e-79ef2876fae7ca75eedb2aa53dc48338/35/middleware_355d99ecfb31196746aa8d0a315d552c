2b7b8abc71043c365f82b66f9f372022
"use strict";

/* istanbul ignore next */
function cov_1whg2y2s1h() {
  var path = "/Users/sachin/Documents/md-sports-/src/middleware.ts";
  var hash = "faadd4be9fbd77b44379a2cd408e95fc4a12ebf1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/middleware.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 22
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 26
        }
      },
      "6": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "7": {
        start: {
          line: 20,
          column: 14
        },
        end: {
          line: 20,
          column: 35
        }
      },
      "8": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "9": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 35
        }
      },
      "10": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 31,
          column: 7
        }
      },
      "11": {
        start: {
          line: 29,
          column: 18
        },
        end: {
          line: 29,
          column: 40
        }
      },
      "12": {
        start: {
          line: 29,
          column: 46
        },
        end: {
          line: 29,
          column: 75
        }
      },
      "13": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 30
        }
      },
      "14": {
        start: {
          line: 34,
          column: 31
        },
        end: {
          line: 41,
          column: 1
        }
      },
      "15": {
        start: {
          line: 43,
          column: 32
        },
        end: {
          line: 49,
          column: 1
        }
      },
      "16": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 76,
          column: 5
        }
      },
      "17": {
        start: {
          line: 54,
          column: 27
        },
        end: {
          line: 54,
          column: 67
        }
      },
      "18": {
        start: {
          line: 55,
          column: 24
        },
        end: {
          line: 55,
          column: 64
        }
      },
      "19": {
        start: {
          line: 57,
          column: 22
        },
        end: {
          line: 57,
          column: 69
        }
      },
      "20": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "21": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 24
        }
      },
      "22": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "23": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 24
        }
      },
      "24": {
        start: {
          line: 71,
          column: 32
        },
        end: {
          line: 71,
          column: 104
        }
      },
      "25": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 46
        }
      },
      "26": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 62
        }
      },
      "27": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 21
        }
      },
      "28": {
        start: {
          line: 81,
          column: 23
        },
        end: {
          line: 81,
          column: 63
        }
      },
      "29": {
        start: {
          line: 82,
          column: 19
        },
        end: {
          line: 82,
          column: 59
        }
      },
      "30": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "31": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 70
        }
      },
      "32": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "33": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 61
        }
      },
      "34": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 89,
          column: 20
        }
      },
      "35": {
        start: {
          line: 92,
          column: 32
        },
        end: {
          line: 92,
          column: 90
        }
      },
      "36": {
        start: {
          line: 93,
          column: 29
        },
        end: {
          line: 93,
          column: 86
        }
      },
      "37": {
        start: {
          line: 94,
          column: 23
        },
        end: {
          line: 94,
          column: 25
        }
      },
      "38": {
        start: {
          line: 96,
          column: 19
        },
        end: {
          line: 100,
          column: 1
        }
      },
      "39": {
        start: {
          line: 102,
          column: 19
        },
        end: {
          line: 117,
          column: 1
        }
      },
      "40": {
        start: {
          line: 119,
          column: 30
        },
        end: {
          line: 126,
          column: 1
        }
      },
      "41": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 120,
          column: 26
        }
      },
      "42": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 125,
          column: 5
        }
      },
      "43": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "44": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 38
        }
      },
      "45": {
        start: {
          line: 128,
          column: 0
        },
        end: {
          line: 130,
          column: 1
        }
      },
      "46": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 129,
          column: 46
        }
      },
      "47": {
        start: {
          line: 132,
          column: 21
        },
        end: {
          line: 132,
          column: 45
        }
      },
      "48": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 137,
          column: 5
        }
      },
      "49": {
        start: {
          line: 134,
          column: 32
        },
        end: {
          line: 134,
          column: 84
        }
      },
      "50": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 43
        }
      },
      "51": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 141,
          column: 5
        }
      },
      "52": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 43
        }
      },
      "53": {
        start: {
          line: 142,
          column: 19
        },
        end: {
          line: 142,
          column: 46
        }
      },
      "54": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 168,
          column: 5
        }
      },
      "55": {
        start: {
          line: 146,
          column: 33
        },
        end: {
          line: 146,
          column: 97
        }
      },
      "56": {
        start: {
          line: 146,
          column: 70
        },
        end: {
          line: 146,
          column: 96
        }
      },
      "57": {
        start: {
          line: 147,
          column: 29
        },
        end: {
          line: 147,
          column: 94
        }
      },
      "58": {
        start: {
          line: 147,
          column: 67
        },
        end: {
          line: 147,
          column: 93
        }
      },
      "59": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "60": {
        start: {
          line: 150,
          column: 24
        },
        end: {
          line: 150,
          column: 44
        }
      },
      "61": {
        start: {
          line: 151,
          column: 32
        },
        end: {
          line: 151,
          column: 62
        }
      },
      "62": {
        start: {
          line: 153,
          column: 34
        },
        end: {
          line: 153,
          column: 93
        }
      },
      "63": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 164,
          column: 13
        }
      },
      "64": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 163,
          column: 19
        }
      },
      "65": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 59
        }
      },
      "66": {
        start: {
          line: 170,
          column: 15
        },
        end: {
          line: 170,
          column: 38
        }
      },
      "67": {
        start: {
          line: 172,
          column: 31
        },
        end: {
          line: 172,
          column: 83
        }
      },
      "68": {
        start: {
          line: 172,
          column: 56
        },
        end: {
          line: 172,
          column: 82
        }
      },
      "69": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 211,
          column: 5
        }
      },
      "70": {
        start: {
          line: 175,
          column: 20
        },
        end: {
          line: 175,
          column: 30
        }
      },
      "71": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "72": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 180,
          column: 14
        }
      },
      "73": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "74": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 187,
          column: 14
        }
      },
      "75": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 35
        }
      },
      "76": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 86
        }
      },
      "77": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 130
        }
      },
      "78": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 91
        }
      },
      "79": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 210,
          column: 9
        }
      },
      "80": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 209,
          column: 15
        }
      },
      "81": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 218,
          column: 5
        }
      },
      "82": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 66
        }
      },
      "83": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 56
        }
      },
      "84": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 66
        }
      },
      "85": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 63
        }
      },
      "86": {
        start: {
          line: 220,
          column: 4
        },
        end: {
          line: 239,
          column: 5
        }
      },
      "87": {
        start: {
          line: 221,
          column: 36
        },
        end: {
          line: 221,
          column: 75
        }
      },
      "88": {
        start: {
          line: 222,
          column: 36
        },
        end: {
          line: 222,
          column: 71
        }
      },
      "89": {
        start: {
          line: 224,
          column: 28
        },
        end: {
          line: 227,
          column: 51
        }
      },
      "90": {
        start: {
          line: 227,
          column: 24
        },
        end: {
          line: 227,
          column: 50
        }
      },
      "91": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "92": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 237,
          column: 15
        }
      },
      "93": {
        start: {
          line: 242,
          column: 4
        },
        end: {
          line: 256,
          column: 5
        }
      },
      "94": {
        start: {
          line: 243,
          column: 29
        },
        end: {
          line: 243,
          column: 68
        }
      },
      "95": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "96": {
        start: {
          line: 245,
          column: 30
        },
        end: {
          line: 245,
          column: 44
        }
      },
      "97": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 254,
          column: 15
        }
      },
      "98": {
        start: {
          line: 257,
          column: 4
        },
        end: {
          line: 257,
          column: 20
        }
      },
      "99": {
        start: {
          line: 259,
          column: 15
        },
        end: {
          line: 267,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 13
          }
        },
        loc: {
          start: {
            line: 12,
            column: 23
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 16
          },
          end: {
            line: 15,
            column: 17
          }
        },
        loc: {
          start: {
            line: 15,
            column: 27
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "generateUUID",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 21
          }
        },
        loc: {
          start: {
            line: 22,
            column: 24
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 28,
            column: 67
          },
          end: {
            line: 28,
            column: 68
          }
        },
        loc: {
          start: {
            line: 28,
            column: 79
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 28
      },
      "5": {
        name: "validateShopAccess",
        decl: {
          start: {
            line: 52,
            column: 19
          },
          end: {
            line: 52,
            column: 37
          }
        },
        loc: {
          start: {
            line: 52,
            column: 57
          },
          end: {
            line: 77,
            column: 1
          }
        },
        line: 52
      },
      "6": {
        name: "addShopContext",
        decl: {
          start: {
            line: 80,
            column: 19
          },
          end: {
            line: 80,
            column: 33
          }
        },
        loc: {
          start: {
            line: 80,
            column: 49
          },
          end: {
            line: 90,
            column: 1
          }
        },
        line: 80
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 119,
            column: 30
          },
          end: {
            line: 119,
            column: 31
          }
        },
        loc: {
          start: {
            line: 119,
            column: 34
          },
          end: {
            line: 126,
            column: 1
          }
        },
        line: 119
      },
      "8": {
        name: "middleware",
        decl: {
          start: {
            line: 131,
            column: 15
          },
          end: {
            line: 131,
            column: 25
          }
        },
        loc: {
          start: {
            line: 131,
            column: 35
          },
          end: {
            line: 258,
            column: 1
          }
        },
        line: 131
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 134,
            column: 24
          },
          end: {
            line: 134,
            column: 25
          }
        },
        loc: {
          start: {
            line: 134,
            column: 32
          },
          end: {
            line: 134,
            column: 84
          }
        },
        line: 134
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 146,
            column: 61
          },
          end: {
            line: 146,
            column: 62
          }
        },
        loc: {
          start: {
            line: 146,
            column: 70
          },
          end: {
            line: 146,
            column: 96
          }
        },
        line: 146
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 147,
            column: 58
          },
          end: {
            line: 147,
            column: 59
          }
        },
        loc: {
          start: {
            line: 147,
            column: 67
          },
          end: {
            line: 147,
            column: 93
          }
        },
        line: 147
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 172,
            column: 47
          },
          end: {
            line: 172,
            column: 48
          }
        },
        loc: {
          start: {
            line: 172,
            column: 56
          },
          end: {
            line: 172,
            column: 82
          }
        },
        line: 172
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 227,
            column: 15
          },
          end: {
            line: 227,
            column: 16
          }
        },
        loc: {
          start: {
            line: 227,
            column: 24
          },
          end: {
            line: 227,
            column: 50
          }
        },
        line: 227
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 37
          }
        }, {
          start: {
            line: 24,
            column: 41
          },
          end: {
            line: 24,
            column: 58
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 46
          },
          end: {
            line: 29,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 58
          },
          end: {
            line: 29,
            column: 59
          }
        }, {
          start: {
            line: 29,
            column: 62
          },
          end: {
            line: 29,
            column: 75
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "4": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "5": {
        loc: {
          start: {
            line: 71,
            column: 32
          },
          end: {
            line: 71,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 71,
            column: 67
          },
          end: {
            line: 71,
            column: 89
          }
        }, {
          start: {
            line: 71,
            column: 92
          },
          end: {
            line: 71,
            column: 104
          }
        }],
        line: 71
      },
      "6": {
        loc: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "7": {
        loc: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "8": {
        loc: {
          start: {
            line: 92,
            column: 41
          },
          end: {
            line: 92,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 41
          },
          end: {
            line: 92,
            column: 76
          }
        }, {
          start: {
            line: 92,
            column: 80
          },
          end: {
            line: 92,
            column: 85
          }
        }],
        line: 92
      },
      "9": {
        loc: {
          start: {
            line: 93,
            column: 38
          },
          end: {
            line: 93,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 38
          },
          end: {
            line: 93,
            column: 70
          }
        }, {
          start: {
            line: 93,
            column: 74
          },
          end: {
            line: 93,
            column: 81
          }
        }],
        line: 93
      },
      "10": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "11": {
        loc: {
          start: {
            line: 128,
            column: 0
          },
          end: {
            line: 130,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 0
          },
          end: {
            line: 130,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "12": {
        loc: {
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "13": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 135,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 134,
            column: 85
          }
        }, {
          start: {
            line: 134,
            column: 89
          },
          end: {
            line: 134,
            column: 118
          }
        }, {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 135,
            column: 59
          }
        }],
        line: 134
      },
      "14": {
        loc: {
          start: {
            line: 134,
            column: 32
          },
          end: {
            line: 134,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 32
          },
          end: {
            line: 134,
            column: 57
          }
        }, {
          start: {
            line: 134,
            column: 61
          },
          end: {
            line: 134,
            column: 84
          }
        }],
        line: 134
      },
      "15": {
        loc: {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 141,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 141,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "16": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 139,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 139,
            column: 46
          }
        }, {
          start: {
            line: 139,
            column: 50
          },
          end: {
            line: 139,
            column: 88
          }
        }],
        line: 139
      },
      "17": {
        loc: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "18": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "19": {
        loc: {
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 148,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 148,
            column: 28
          }
        }, {
          start: {
            line: 148,
            column: 32
          },
          end: {
            line: 148,
            column: 45
          }
        }],
        line: 148
      },
      "20": {
        loc: {
          start: {
            line: 153,
            column: 68
          },
          end: {
            line: 153,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 68
          },
          end: {
            line: 153,
            column: 79
          }
        }, {
          start: {
            line: 153,
            column: 83
          },
          end: {
            line: 153,
            column: 92
          }
        }],
        line: 153
      },
      "21": {
        loc: {
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 164,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 164,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "22": {
        loc: {
          start: {
            line: 170,
            column: 15
          },
          end: {
            line: 170,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 170,
            column: 15
          },
          end: {
            line: 170,
            column: 25
          }
        }, {
          start: {
            line: 170,
            column: 29
          },
          end: {
            line: 170,
            column: 38
          }
        }],
        line: 170
      },
      "23": {
        loc: {
          start: {
            line: 173,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "24": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "25": {
        loc: {
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "26": {
        loc: {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "27": {
        loc: {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "28": {
        loc: {
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 213,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 213,
            column: 37
          }
        }, {
          start: {
            line: 213,
            column: 41
          },
          end: {
            line: 213,
            column: 64
          }
        }],
        line: 213
      },
      "29": {
        loc: {
          start: {
            line: 220,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "30": {
        loc: {
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 220,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 220,
            column: 32
          }
        }, {
          start: {
            line: 220,
            column: 36
          },
          end: {
            line: 220,
            column: 61
          }
        }],
        line: 220
      },
      "31": {
        loc: {
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "32": {
        loc: {
          start: {
            line: 228,
            column: 12
          },
          end: {
            line: 228,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 228,
            column: 12
          },
          end: {
            line: 228,
            column: 24
          }
        }, {
          start: {
            line: 228,
            column: 29
          },
          end: {
            line: 228,
            column: 49
          }
        }, {
          start: {
            line: 228,
            column: 53
          },
          end: {
            line: 228,
            column: 96
          }
        }],
        line: 228
      },
      "33": {
        loc: {
          start: {
            line: 242,
            column: 4
          },
          end: {
            line: 256,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 4
          },
          end: {
            line: 256,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      },
      "34": {
        loc: {
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 242,
            column: 126
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 242,
            column: 32
          }
        }, {
          start: {
            line: 242,
            column: 36
          },
          end: {
            line: 242,
            column: 65
          }
        }, {
          start: {
            line: 242,
            column: 69
          },
          end: {
            line: 242,
            column: 92
          }
        }, {
          start: {
            line: 242,
            column: 96
          },
          end: {
            line: 242,
            column: 126
          }
        }],
        line: 242
      },
      "35": {
        loc: {
          start: {
            line: 244,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0, 0],
      "33": [0, 0],
      "34": [0, 0, 0, 0],
      "35": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/middleware.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { getUserIdFromToken, getShopIdFromToken } from '@/lib/auth';\n\n// Generate UUID using Web Crypto API instead of Node.js crypto\nfunction generateUUID() {\n    // This implementation works in Edge Runtime\n    if (typeof crypto !== 'undefined' && crypto.randomUUID) {\n        return crypto.randomUUID();\n    }\n\n    // Fallback implementation\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n\n// Shop-specific API routes that need shop-based filtering\nconst SHOP_RESTRICTED_ROUTES = [\n    '/api/products',\n    '/api/inventory',\n    '/api/invoices',\n    '/api/purchases',\n    '/api/dashboard',\n    '/api/reports'\n];\n\n// Routes that allow cross-shop access for admins\nconst ADMIN_CROSS_SHOP_ROUTES = [\n    '/api/shops',\n    '/api/users',\n    '/api/settings',\n    '/api/reports/shop-performance',\n    '/api/reports/shop-comparison'\n];\n\n/**\n * Check if user has permission to access data from a specific shop\n */\nasync function validateShopAccess(req: NextRequest, targetShopId?: string | number): Promise<boolean> {\n    try {\n        const userShopId = await getShopIdFromToken(req);\n        const _userId = await getUserIdFromToken(req);\n\n        // Development mode - allow all access\n        const token = req.headers.get('authorization')?.split(' ')[1];\n        if (token === 'dev-token') {\n            return true;\n        }\n\n        // If no target shop specified, allow access\n        if (!targetShopId) {\n            return true;\n        }\n\n        // For Edge Runtime compatibility, we'll skip permission checks in middleware\n        // and rely on API route-level permission validation instead\n        // This is a temporary fix to avoid Prisma Edge Runtime issues\n        \n        // Allow access for now - permission checks will happen in API routes\n        // TODO: Implement edge-compatible permission checking if needed\n\n        // Check if user belongs to the target shop\n        const targetShopIdNum = typeof targetShopId === 'string' ? parseInt(targetShopId) : targetShopId;\n        return userShopId === targetShopIdNum;\n\n    } catch (error) {\n        console.error('Error validating shop access:', error);\n        return false;\n    }\n}\n\n/**\n * Add shop context to request headers for API routes\n */\nasync function addShopContext(req: NextRequest, response: NextResponse): Promise<NextResponse> {\n    const userShopId = await getShopIdFromToken(req);\n    const userId = await getUserIdFromToken(req);\n\n    if (userShopId) {\n        response.headers.set('X-User-Shop-Id', userShopId.toString());\n    }\n\n    if (userId) {\n        response.headers.set('X-User-Id', userId.toString());\n    }\n\n    return response;\n}\n\n// In-memory store for rate limiting (use Redis in production)\ninterface RateLimitStore {\n    [ip: string]: {\n        count: number;\n        resetTime: number;\n    };\n}\n\n// Rate limiting configuration\nconst RATE_LIMIT_MAX_REQUESTS = parseInt(process.env.RATE_LIMIT_MAX_REQUESTS || '100', 10);\nconst RATE_LIMIT_WINDOW_MS = parseInt(process.env.RATE_LIMIT_WINDOW_MS || '60000', 10); // 1 minute\nconst rateLimitStore: RateLimitStore = {};\n\n// API routes that should be protected\nconst API_ROUTES = [\n    '/api/auth/login',\n    '/api/auth/register',\n    '/api/auth/refresh',\n];\n\n// Static assets and paths to skip middleware processing\nconst SKIP_PATHS = [\n    '/_next',\n    '/images',\n    '/favicon.ico',\n    '/robots.txt',\n    '/manifest.json',\n    '/sitemap.xml',\n    '.svg',\n    '.png',\n    '.jpg',\n    '.jpeg',\n    '.gif',\n    '.webp',\n    '.css',\n    '.js',\n];\n\n// Function to clean up expired rate limit entries\nconst cleanupRateLimitStore = () => {\n    const now = Date.now();\n    for (const ip in rateLimitStore) {\n        if (rateLimitStore[ip].resetTime < now) {\n            delete rateLimitStore[ip];\n        }\n    }\n};\n\n// Run cleanup every minute\nif (typeof setInterval !== 'undefined') {\n    setInterval(cleanupRateLimitStore, 60000);\n}\n\nexport async function middleware(request: NextRequest) {\n    const pathname = request.nextUrl.pathname;\n\n    // Skip middleware for static assets and non-critical paths\n    if (SKIP_PATHS.some(path => pathname.startsWith(path) || pathname.endsWith(path)) ||\n        pathname.startsWith('/_next') ||  // Skip Next.js internal paths\n        pathname.match(/\\.(svg|png|jpg|jpeg|gif|webp|css|js)$/)) { // Skip static files\n        return NextResponse.next();\n    }\n\n    // Skip middleware in development if needed\n    if (process.env.NODE_ENV === 'development' && process.env.SKIP_MIDDLEWARE === 'true') {\n        return NextResponse.next();\n    }\n\n    let response = NextResponse.next();\n\n    // Add shop-based access control for API routes\n    if (pathname.startsWith('/api/')) {\n        // Check if this is a shop-restricted route\n        const isShopRestricted = SHOP_RESTRICTED_ROUTES.some(route => pathname.startsWith(route));\n        const isAdminRoute = ADMIN_CROSS_SHOP_ROUTES.some(route => pathname.startsWith(route));\n\n        if (isShopRestricted && !isAdminRoute) {\n            // Extract shopId from query parameters if present\n            const url = new URL(request.url);\n            const queryShopId = url.searchParams.get('shopId');\n\n            // Validate shop access\n            const hasShopAccess = await validateShopAccess(request, queryShopId || undefined);\n\n            if (!hasShopAccess) {\n                return new NextResponse(JSON.stringify({\n                    success: false,\n                    message: 'Access denied: You can only access data from your assigned shop'\n                }), {\n                    status: 403,\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n            }\n        }\n\n        // Add shop context to response headers\n        response = await addShopContext(request, response);\n    }\n\n    // Get IP address from X-Forwarded-For header or remote address for rate limiting\n    const ip = request.ip || 'unknown';\n\n    // Only rate limit specific API endpoints\n    const isRateLimitedRoute = API_ROUTES.some(route =>\n        pathname.startsWith(route)\n    );\n\n    if (isRateLimitedRoute) {\n        // Apply rate limiting\n        const now = Date.now();\n\n        if (!rateLimitStore[ip]) {\n            rateLimitStore[ip] = {\n                count: 0,\n                resetTime: now + RATE_LIMIT_WINDOW_MS,\n            };\n        }\n\n        // Reset count if window has passed\n        if (rateLimitStore[ip].resetTime < now) {\n            rateLimitStore[ip] = {\n                count: 0,\n                resetTime: now + RATE_LIMIT_WINDOW_MS,\n            };\n        }\n\n        // Increment count\n        rateLimitStore[ip].count++;\n\n        // Set rate limiting headers\n        response.headers.set('X-RateLimit-Limit', RATE_LIMIT_MAX_REQUESTS.toString());\n        response.headers.set('X-RateLimit-Remaining', Math.max(0, RATE_LIMIT_MAX_REQUESTS - rateLimitStore[ip].count).toString());\n        response.headers.set('X-RateLimit-Reset', rateLimitStore[ip].resetTime.toString());\n\n        // Check if rate limit exceeded\n        if (rateLimitStore[ip].count > RATE_LIMIT_MAX_REQUESTS) {\n            return new NextResponse(JSON.stringify({\n                success: false,\n                message: 'Too many requests, please try again later.'\n            }), {\n                status: 429,\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Retry-After': '60',\n                    'X-RateLimit-Limit': RATE_LIMIT_MAX_REQUESTS.toString(),\n                    'X-RateLimit-Remaining': '0',\n                    'X-RateLimit-Reset': rateLimitStore[ip].resetTime.toString(),\n                }\n            });\n        }\n    }\n\n    // Set security headers only for HTML responses, not for API or assets\n    if (!pathname.startsWith('/api/') && !pathname.includes('.')) {\n        response.headers.set('X-Content-Type-Options', 'nosniff');\n        response.headers.set('X-Frame-Options', 'DENY');\n        response.headers.set('X-XSS-Protection', '1; mode=block');\n        response.headers.set('Referrer-Policy', 'same-origin');\n    }\n\n    // Add CSRF protection only for non-GET methods that are not static assets\n    if (request.method !== 'GET' && request.method !== 'HEAD') {\n        const csrfTokenFromCookie = request.cookies.get('csrfToken')?.value;\n        const csrfTokenFromHeader = request.headers.get('X-CSRF-Token');\n\n        // Skip CSRF check for login and initial auth routes\n        const isAuthRoute = ['/api/auth/login', '/api/auth/register'].some(\n            route => pathname.startsWith(route)\n        );\n\n        if (!isAuthRoute && (!csrfTokenFromCookie || csrfTokenFromHeader !== csrfTokenFromCookie)) {\n            return new NextResponse(JSON.stringify({\n                success: false,\n                message: 'Invalid CSRF token'\n            }), {\n                status: 403,\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n        }\n    }\n\n    // For GET requests to pages, set a new CSRF token if one doesn't exist\n    // Only do this for HTML page requests, not for assets or API calls\n    if (request.method === 'GET' &&\n        !pathname.startsWith('/api/') &&\n        !pathname.includes('.') &&\n        !pathname.startsWith('/_next')) {\n\n        const currentToken = request.cookies.get('csrfToken')?.value;\n        if (!currentToken) {\n            const csrfToken = generateUUID();\n            response.cookies.set({\n                name: 'csrfToken',\n                value: csrfToken,\n                httpOnly: false, // Made accessible to JavaScript\n                sameSite: 'strict',\n                secure: process.env.NODE_ENV === 'production',\n                path: '/',\n                maxAge: 60 * 60 * 24, // 1 day\n            });\n        }\n    }\n\n    return response;\n}\n\nexport const config = {\n    matcher: [\n        // Apply the middleware to all API routes and page routes\n        // Exclude static assets and _next directory\n        '/api/:path*',\n        '/:path*',\n        '/:path*/:subpath*',\n    ],\n};"],
      names: ["config", "middleware", "generateUUID", "crypto", "randomUUID", "replace", "c", "r", "Math", "random", "v", "toString", "SHOP_RESTRICTED_ROUTES", "ADMIN_CROSS_SHOP_ROUTES", "validateShopAccess", "req", "targetShopId", "userShopId", "getShopIdFromToken", "_userId", "getUserIdFromToken", "token", "headers", "get", "split", "targetShopIdNum", "parseInt", "error", "console", "addShopContext", "response", "userId", "set", "RATE_LIMIT_MAX_REQUESTS", "process", "env", "RATE_LIMIT_WINDOW_MS", "rateLimitStore", "API_ROUTES", "SKIP_PATHS", "cleanupRateLimitStore", "now", "Date", "ip", "resetTime", "setInterval", "request", "pathname", "nextUrl", "some", "path", "startsWith", "endsWith", "match", "NextResponse", "next", "NODE_ENV", "SKIP_MIDDLEWARE", "isShopRestricted", "route", "isAdminRoute", "url", "URL", "queryShopId", "searchParams", "hasShopAccess", "undefined", "JSON", "stringify", "success", "message", "status", "isRateLimitedRoute", "count", "max", "includes", "method", "csrfTokenFromCookie", "cookies", "value", "csrfTokenFromHeader", "isAuthRoute", "currentToken", "csrfToken", "name", "httpOnly", "sameSite", "secure", "maxAge", "matcher"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "faadd4be9fbd77b44379a2cd408e95fc4a12ebf1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1whg2y2s1h = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1whg2y2s1h();
cov_1whg2y2s1h().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1whg2y2s1h().f[0]++;
  cov_1whg2y2s1h().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1whg2y2s1h().s[3]++;
_export(exports, {
  config: function () {
    /* istanbul ignore next */
    cov_1whg2y2s1h().f[1]++;
    cov_1whg2y2s1h().s[4]++;
    return config;
  },
  middleware: function () {
    /* istanbul ignore next */
    cov_1whg2y2s1h().f[2]++;
    cov_1whg2y2s1h().s[5]++;
    return middleware;
  }
});
const _server =
/* istanbul ignore next */
(cov_1whg2y2s1h().s[6]++, require("next/server"));
const _auth =
/* istanbul ignore next */
(cov_1whg2y2s1h().s[7]++, require("./lib/auth"));
// Generate UUID using Web Crypto API instead of Node.js crypto
function generateUUID() {
  /* istanbul ignore next */
  cov_1whg2y2s1h().f[3]++;
  cov_1whg2y2s1h().s[8]++;
  // This implementation works in Edge Runtime
  if (
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[1][0]++, typeof crypto !== "undefined") &&
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[1][1]++, crypto.randomUUID)) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().b[0][0]++;
    cov_1whg2y2s1h().s[9]++;
    return crypto.randomUUID();
  } else
  /* istanbul ignore next */
  {
    cov_1whg2y2s1h().b[0][1]++;
  }
  // Fallback implementation
  cov_1whg2y2s1h().s[10]++;
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (c) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().f[4]++;
    const r =
      /* istanbul ignore next */
      (cov_1whg2y2s1h().s[11]++, Math.random() * 16 | 0),
      v =
      /* istanbul ignore next */
      (cov_1whg2y2s1h().s[12]++, c === "x" ?
      /* istanbul ignore next */
      (cov_1whg2y2s1h().b[2][0]++, r) :
      /* istanbul ignore next */
      (cov_1whg2y2s1h().b[2][1]++, r & 0x3 | 0x8));
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[13]++;
    return v.toString(16);
  });
}
// Shop-specific API routes that need shop-based filtering
const SHOP_RESTRICTED_ROUTES =
/* istanbul ignore next */
(cov_1whg2y2s1h().s[14]++, ["/api/products", "/api/inventory", "/api/invoices", "/api/purchases", "/api/dashboard", "/api/reports"]);
// Routes that allow cross-shop access for admins
const ADMIN_CROSS_SHOP_ROUTES =
/* istanbul ignore next */
(cov_1whg2y2s1h().s[15]++, ["/api/shops", "/api/users", "/api/settings", "/api/reports/shop-performance", "/api/reports/shop-comparison"]);
/**
 * Check if user has permission to access data from a specific shop
 */
async function validateShopAccess(req, targetShopId) {
  /* istanbul ignore next */
  cov_1whg2y2s1h().f[5]++;
  cov_1whg2y2s1h().s[16]++;
  try {
    const userShopId =
    /* istanbul ignore next */
    (cov_1whg2y2s1h().s[17]++, await (0, _auth.getShopIdFromToken)(req));
    const _userId =
    /* istanbul ignore next */
    (cov_1whg2y2s1h().s[18]++, await (0, _auth.getUserIdFromToken)(req));
    // Development mode - allow all access
    const token =
    /* istanbul ignore next */
    (cov_1whg2y2s1h().s[19]++, req.headers.get("authorization")?.split(" ")[1]);
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[20]++;
    if (token === "dev-token") {
      /* istanbul ignore next */
      cov_1whg2y2s1h().b[3][0]++;
      cov_1whg2y2s1h().s[21]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_1whg2y2s1h().b[3][1]++;
    }
    // If no target shop specified, allow access
    cov_1whg2y2s1h().s[22]++;
    if (!targetShopId) {
      /* istanbul ignore next */
      cov_1whg2y2s1h().b[4][0]++;
      cov_1whg2y2s1h().s[23]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_1whg2y2s1h().b[4][1]++;
    }
    // For Edge Runtime compatibility, we'll skip permission checks in middleware
    // and rely on API route-level permission validation instead
    // This is a temporary fix to avoid Prisma Edge Runtime issues
    // Allow access for now - permission checks will happen in API routes
    // TODO: Implement edge-compatible permission checking if needed
    // Check if user belongs to the target shop
    const targetShopIdNum =
    /* istanbul ignore next */
    (cov_1whg2y2s1h().s[24]++, typeof targetShopId === "string" ?
    /* istanbul ignore next */
    (cov_1whg2y2s1h().b[5][0]++, parseInt(targetShopId)) :
    /* istanbul ignore next */
    (cov_1whg2y2s1h().b[5][1]++, targetShopId));
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[25]++;
    return userShopId === targetShopIdNum;
  } catch (error) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[26]++;
    console.error("Error validating shop access:", error);
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[27]++;
    return false;
  }
}
/**
 * Add shop context to request headers for API routes
 */
async function addShopContext(req, response) {
  /* istanbul ignore next */
  cov_1whg2y2s1h().f[6]++;
  const userShopId =
  /* istanbul ignore next */
  (cov_1whg2y2s1h().s[28]++, await (0, _auth.getShopIdFromToken)(req));
  const userId =
  /* istanbul ignore next */
  (cov_1whg2y2s1h().s[29]++, await (0, _auth.getUserIdFromToken)(req));
  /* istanbul ignore next */
  cov_1whg2y2s1h().s[30]++;
  if (userShopId) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().b[6][0]++;
    cov_1whg2y2s1h().s[31]++;
    response.headers.set("X-User-Shop-Id", userShopId.toString());
  } else
  /* istanbul ignore next */
  {
    cov_1whg2y2s1h().b[6][1]++;
  }
  cov_1whg2y2s1h().s[32]++;
  if (userId) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().b[7][0]++;
    cov_1whg2y2s1h().s[33]++;
    response.headers.set("X-User-Id", userId.toString());
  } else
  /* istanbul ignore next */
  {
    cov_1whg2y2s1h().b[7][1]++;
  }
  cov_1whg2y2s1h().s[34]++;
  return response;
}
// Rate limiting configuration
const RATE_LIMIT_MAX_REQUESTS =
/* istanbul ignore next */
(cov_1whg2y2s1h().s[35]++, parseInt(
/* istanbul ignore next */
(cov_1whg2y2s1h().b[8][0]++, process.env.RATE_LIMIT_MAX_REQUESTS) ||
/* istanbul ignore next */
(cov_1whg2y2s1h().b[8][1]++, "100"), 10));
const RATE_LIMIT_WINDOW_MS =
/* istanbul ignore next */
(cov_1whg2y2s1h().s[36]++, parseInt(
/* istanbul ignore next */
(cov_1whg2y2s1h().b[9][0]++, process.env.RATE_LIMIT_WINDOW_MS) ||
/* istanbul ignore next */
(cov_1whg2y2s1h().b[9][1]++, "60000"), 10)); // 1 minute
const rateLimitStore =
/* istanbul ignore next */
(cov_1whg2y2s1h().s[37]++, {});
// API routes that should be protected
const API_ROUTES =
/* istanbul ignore next */
(cov_1whg2y2s1h().s[38]++, ["/api/auth/login", "/api/auth/register", "/api/auth/refresh"]);
// Static assets and paths to skip middleware processing
const SKIP_PATHS =
/* istanbul ignore next */
(cov_1whg2y2s1h().s[39]++, ["/_next", "/images", "/favicon.ico", "/robots.txt", "/manifest.json", "/sitemap.xml", ".svg", ".png", ".jpg", ".jpeg", ".gif", ".webp", ".css", ".js"]);
// Function to clean up expired rate limit entries
/* istanbul ignore next */
cov_1whg2y2s1h().s[40]++;
const cleanupRateLimitStore = () => {
  /* istanbul ignore next */
  cov_1whg2y2s1h().f[7]++;
  const now =
  /* istanbul ignore next */
  (cov_1whg2y2s1h().s[41]++, Date.now());
  /* istanbul ignore next */
  cov_1whg2y2s1h().s[42]++;
  for (const ip in rateLimitStore) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[43]++;
    if (rateLimitStore[ip].resetTime < now) {
      /* istanbul ignore next */
      cov_1whg2y2s1h().b[10][0]++;
      cov_1whg2y2s1h().s[44]++;
      delete rateLimitStore[ip];
    } else
    /* istanbul ignore next */
    {
      cov_1whg2y2s1h().b[10][1]++;
    }
  }
};
// Run cleanup every minute
/* istanbul ignore next */
cov_1whg2y2s1h().s[45]++;
if (typeof setInterval !== "undefined") {
  /* istanbul ignore next */
  cov_1whg2y2s1h().b[11][0]++;
  cov_1whg2y2s1h().s[46]++;
  setInterval(cleanupRateLimitStore, 60000);
} else
/* istanbul ignore next */
{
  cov_1whg2y2s1h().b[11][1]++;
}
async function middleware(request) {
  /* istanbul ignore next */
  cov_1whg2y2s1h().f[8]++;
  const pathname =
  /* istanbul ignore next */
  (cov_1whg2y2s1h().s[47]++, request.nextUrl.pathname);
  // Skip middleware for static assets and non-critical paths
  /* istanbul ignore next */
  cov_1whg2y2s1h().s[48]++;
  if (
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[13][0]++, SKIP_PATHS.some(path => {
    /* istanbul ignore next */
    cov_1whg2y2s1h().f[9]++;
    cov_1whg2y2s1h().s[49]++;
    return /* istanbul ignore next */(cov_1whg2y2s1h().b[14][0]++, pathname.startsWith(path)) ||
    /* istanbul ignore next */
    (cov_1whg2y2s1h().b[14][1]++, pathname.endsWith(path));
  })) ||
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[13][1]++, pathname.startsWith("/_next")) ||
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[13][2]++,
  // Skip Next.js internal paths
  pathname.match(/\.(svg|png|jpg|jpeg|gif|webp|css|js)$/))) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().b[12][0]++;
    cov_1whg2y2s1h().s[50]++;
    return _server.NextResponse.next();
  } else
  /* istanbul ignore next */
  {
    cov_1whg2y2s1h().b[12][1]++;
  }
  // Skip middleware in development if needed
  cov_1whg2y2s1h().s[51]++;
  if (
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[16][0]++, process.env.NODE_ENV === "development") &&
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[16][1]++, process.env.SKIP_MIDDLEWARE === "true")) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().b[15][0]++;
    cov_1whg2y2s1h().s[52]++;
    return _server.NextResponse.next();
  } else
  /* istanbul ignore next */
  {
    cov_1whg2y2s1h().b[15][1]++;
  }
  let response =
  /* istanbul ignore next */
  (cov_1whg2y2s1h().s[53]++, _server.NextResponse.next());
  // Add shop-based access control for API routes
  /* istanbul ignore next */
  cov_1whg2y2s1h().s[54]++;
  if (pathname.startsWith("/api/")) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().b[17][0]++;
    // Check if this is a shop-restricted route
    const isShopRestricted =
    /* istanbul ignore next */
    (cov_1whg2y2s1h().s[55]++, SHOP_RESTRICTED_ROUTES.some(route => {
      /* istanbul ignore next */
      cov_1whg2y2s1h().f[10]++;
      cov_1whg2y2s1h().s[56]++;
      return pathname.startsWith(route);
    }));
    const isAdminRoute =
    /* istanbul ignore next */
    (cov_1whg2y2s1h().s[57]++, ADMIN_CROSS_SHOP_ROUTES.some(route => {
      /* istanbul ignore next */
      cov_1whg2y2s1h().f[11]++;
      cov_1whg2y2s1h().s[58]++;
      return pathname.startsWith(route);
    }));
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[59]++;
    if (
    /* istanbul ignore next */
    (cov_1whg2y2s1h().b[19][0]++, isShopRestricted) &&
    /* istanbul ignore next */
    (cov_1whg2y2s1h().b[19][1]++, !isAdminRoute)) {
      /* istanbul ignore next */
      cov_1whg2y2s1h().b[18][0]++;
      // Extract shopId from query parameters if present
      const url =
      /* istanbul ignore next */
      (cov_1whg2y2s1h().s[60]++, new URL(request.url));
      const queryShopId =
      /* istanbul ignore next */
      (cov_1whg2y2s1h().s[61]++, url.searchParams.get("shopId"));
      // Validate shop access
      const hasShopAccess =
      /* istanbul ignore next */
      (cov_1whg2y2s1h().s[62]++, await validateShopAccess(request,
      /* istanbul ignore next */
      (cov_1whg2y2s1h().b[20][0]++, queryShopId) ||
      /* istanbul ignore next */
      (cov_1whg2y2s1h().b[20][1]++, undefined)));
      /* istanbul ignore next */
      cov_1whg2y2s1h().s[63]++;
      if (!hasShopAccess) {
        /* istanbul ignore next */
        cov_1whg2y2s1h().b[21][0]++;
        cov_1whg2y2s1h().s[64]++;
        return new _server.NextResponse(JSON.stringify({
          success: false,
          message: "Access denied: You can only access data from your assigned shop"
        }), {
          status: 403,
          headers: {
            "Content-Type": "application/json"
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_1whg2y2s1h().b[21][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1whg2y2s1h().b[18][1]++;
    }
    // Add shop context to response headers
    cov_1whg2y2s1h().s[65]++;
    response = await addShopContext(request, response);
  } else
  /* istanbul ignore next */
  {
    cov_1whg2y2s1h().b[17][1]++;
  }
  // Get IP address from X-Forwarded-For header or remote address for rate limiting
  const ip =
  /* istanbul ignore next */
  (cov_1whg2y2s1h().s[66]++,
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[22][0]++, request.ip) ||
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[22][1]++, "unknown"));
  // Only rate limit specific API endpoints
  const isRateLimitedRoute =
  /* istanbul ignore next */
  (cov_1whg2y2s1h().s[67]++, API_ROUTES.some(route => {
    /* istanbul ignore next */
    cov_1whg2y2s1h().f[12]++;
    cov_1whg2y2s1h().s[68]++;
    return pathname.startsWith(route);
  }));
  /* istanbul ignore next */
  cov_1whg2y2s1h().s[69]++;
  if (isRateLimitedRoute) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().b[23][0]++;
    // Apply rate limiting
    const now =
    /* istanbul ignore next */
    (cov_1whg2y2s1h().s[70]++, Date.now());
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[71]++;
    if (!rateLimitStore[ip]) {
      /* istanbul ignore next */
      cov_1whg2y2s1h().b[24][0]++;
      cov_1whg2y2s1h().s[72]++;
      rateLimitStore[ip] = {
        count: 0,
        resetTime: now + RATE_LIMIT_WINDOW_MS
      };
    } else
    /* istanbul ignore next */
    {
      cov_1whg2y2s1h().b[24][1]++;
    }
    // Reset count if window has passed
    cov_1whg2y2s1h().s[73]++;
    if (rateLimitStore[ip].resetTime < now) {
      /* istanbul ignore next */
      cov_1whg2y2s1h().b[25][0]++;
      cov_1whg2y2s1h().s[74]++;
      rateLimitStore[ip] = {
        count: 0,
        resetTime: now + RATE_LIMIT_WINDOW_MS
      };
    } else
    /* istanbul ignore next */
    {
      cov_1whg2y2s1h().b[25][1]++;
    }
    // Increment count
    cov_1whg2y2s1h().s[75]++;
    rateLimitStore[ip].count++;
    // Set rate limiting headers
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[76]++;
    response.headers.set("X-RateLimit-Limit", RATE_LIMIT_MAX_REQUESTS.toString());
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[77]++;
    response.headers.set("X-RateLimit-Remaining", Math.max(0, RATE_LIMIT_MAX_REQUESTS - rateLimitStore[ip].count).toString());
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[78]++;
    response.headers.set("X-RateLimit-Reset", rateLimitStore[ip].resetTime.toString());
    // Check if rate limit exceeded
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[79]++;
    if (rateLimitStore[ip].count > RATE_LIMIT_MAX_REQUESTS) {
      /* istanbul ignore next */
      cov_1whg2y2s1h().b[26][0]++;
      cov_1whg2y2s1h().s[80]++;
      return new _server.NextResponse(JSON.stringify({
        success: false,
        message: "Too many requests, please try again later."
      }), {
        status: 429,
        headers: {
          "Content-Type": "application/json",
          "Retry-After": "60",
          "X-RateLimit-Limit": RATE_LIMIT_MAX_REQUESTS.toString(),
          "X-RateLimit-Remaining": "0",
          "X-RateLimit-Reset": rateLimitStore[ip].resetTime.toString()
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1whg2y2s1h().b[26][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1whg2y2s1h().b[23][1]++;
  }
  // Set security headers only for HTML responses, not for API or assets
  cov_1whg2y2s1h().s[81]++;
  if (
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[28][0]++, !pathname.startsWith("/api/")) &&
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[28][1]++, !pathname.includes("."))) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().b[27][0]++;
    cov_1whg2y2s1h().s[82]++;
    response.headers.set("X-Content-Type-Options", "nosniff");
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[83]++;
    response.headers.set("X-Frame-Options", "DENY");
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[84]++;
    response.headers.set("X-XSS-Protection", "1; mode=block");
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[85]++;
    response.headers.set("Referrer-Policy", "same-origin");
  } else
  /* istanbul ignore next */
  {
    cov_1whg2y2s1h().b[27][1]++;
  }
  // Add CSRF protection only for non-GET methods that are not static assets
  cov_1whg2y2s1h().s[86]++;
  if (
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[30][0]++, request.method !== "GET") &&
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[30][1]++, request.method !== "HEAD")) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().b[29][0]++;
    const csrfTokenFromCookie =
    /* istanbul ignore next */
    (cov_1whg2y2s1h().s[87]++, request.cookies.get("csrfToken")?.value);
    const csrfTokenFromHeader =
    /* istanbul ignore next */
    (cov_1whg2y2s1h().s[88]++, request.headers.get("X-CSRF-Token"));
    // Skip CSRF check for login and initial auth routes
    const isAuthRoute =
    /* istanbul ignore next */
    (cov_1whg2y2s1h().s[89]++, ["/api/auth/login", "/api/auth/register"].some(route => {
      /* istanbul ignore next */
      cov_1whg2y2s1h().f[13]++;
      cov_1whg2y2s1h().s[90]++;
      return pathname.startsWith(route);
    }));
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[91]++;
    if (
    /* istanbul ignore next */
    (cov_1whg2y2s1h().b[32][0]++, !isAuthRoute) && (
    /* istanbul ignore next */
    (cov_1whg2y2s1h().b[32][1]++, !csrfTokenFromCookie) ||
    /* istanbul ignore next */
    (cov_1whg2y2s1h().b[32][2]++, csrfTokenFromHeader !== csrfTokenFromCookie))) {
      /* istanbul ignore next */
      cov_1whg2y2s1h().b[31][0]++;
      cov_1whg2y2s1h().s[92]++;
      return new _server.NextResponse(JSON.stringify({
        success: false,
        message: "Invalid CSRF token"
      }), {
        status: 403,
        headers: {
          "Content-Type": "application/json"
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1whg2y2s1h().b[31][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1whg2y2s1h().b[29][1]++;
  }
  // For GET requests to pages, set a new CSRF token if one doesn't exist
  // Only do this for HTML page requests, not for assets or API calls
  cov_1whg2y2s1h().s[93]++;
  if (
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[34][0]++, request.method === "GET") &&
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[34][1]++, !pathname.startsWith("/api/")) &&
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[34][2]++, !pathname.includes(".")) &&
  /* istanbul ignore next */
  (cov_1whg2y2s1h().b[34][3]++, !pathname.startsWith("/_next"))) {
    /* istanbul ignore next */
    cov_1whg2y2s1h().b[33][0]++;
    const currentToken =
    /* istanbul ignore next */
    (cov_1whg2y2s1h().s[94]++, request.cookies.get("csrfToken")?.value);
    /* istanbul ignore next */
    cov_1whg2y2s1h().s[95]++;
    if (!currentToken) {
      /* istanbul ignore next */
      cov_1whg2y2s1h().b[35][0]++;
      const csrfToken =
      /* istanbul ignore next */
      (cov_1whg2y2s1h().s[96]++, generateUUID());
      /* istanbul ignore next */
      cov_1whg2y2s1h().s[97]++;
      response.cookies.set({
        name: "csrfToken",
        value: csrfToken,
        httpOnly: false,
        sameSite: "strict",
        secure: process.env.NODE_ENV === "production",
        path: "/",
        maxAge: 60 * 60 * 24
      });
    } else
    /* istanbul ignore next */
    {
      cov_1whg2y2s1h().b[35][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1whg2y2s1h().b[33][1]++;
  }
  cov_1whg2y2s1h().s[98]++;
  return response;
}
const config =
/* istanbul ignore next */
(cov_1whg2y2s1h().s[99]++, {
  matcher: [
  // Apply the middleware to all API routes and page routes
  // Exclude static assets and _next directory
  "/api/:path*", "/:path*", "/:path*/:subpath*"]
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,