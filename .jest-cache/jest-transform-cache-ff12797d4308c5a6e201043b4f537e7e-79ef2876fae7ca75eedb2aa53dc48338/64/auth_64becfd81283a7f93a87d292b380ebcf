9c83ca861b654d6ae8e3f5f4f5ca410d
"use strict";

/* istanbul ignore next */
function cov_wwhylcflf() {
  var path = "/Users/sachin/Documents/md-sports-/src/middleware/auth.ts";
  var hash = "bfb7911ff239a21d33c3c90fee11fb51f8117695";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/middleware/auth.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 30
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 34
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 37
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 24
        }
      },
      "8": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 38
        }
      },
      "9": {
        start: {
          line: 26,
          column: 21
        },
        end: {
          line: 26,
          column: 60
        }
      },
      "10": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 27,
          column: 71
        }
      },
      "11": {
        start: {
          line: 29,
          column: 26
        },
        end: {
          line: 47,
          column: 1
        }
      },
      "12": {
        start: {
          line: 49,
          column: 21
        },
        end: {
          line: 54,
          column: 1
        }
      },
      "13": {
        start: {
          line: 56,
          column: 22
        },
        end: {
          line: 62,
          column: 1
        }
      },
      "14": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 77,
          column: 5
        }
      },
      "15": {
        start: {
          line: 69,
          column: 27
        },
        end: {
          line: 69,
          column: 63
        }
      },
      "16": {
        start: {
          line: 70,
          column: 30
        },
        end: {
          line: 70,
          column: 60
        }
      },
      "17": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 20
        }
      },
      "18": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 68
        }
      },
      "19": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 20
        }
      },
      "20": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 82,
          column: 67
        }
      },
      "21": {
        start: {
          line: 82,
          column: 39
        },
        end: {
          line: 82,
          column: 65
        }
      },
      "22": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 87,
          column: 66
        }
      },
      "23": {
        start: {
          line: 87,
          column: 38
        },
        end: {
          line: 87,
          column: 64
        }
      },
      "24": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 95,
          column: 5
        }
      },
      "25": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 43
        }
      },
      "26": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 101,
          column: 5
        }
      },
      "27": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "28": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 44
        }
      },
      "29": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 102,
          column: 16
        }
      },
      "30": {
        start: {
          line: 105,
          column: 25
        },
        end: {
          line: 105,
          column: 40
        }
      },
      "31": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 109,
          column: 5
        }
      },
      "32": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 43
        }
      },
      "33": {
        start: {
          line: 111,
          column: 17
        },
        end: {
          line: 111,
          column: 44
        }
      },
      "34": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "35": {
        start: {
          line: 114,
          column: 25
        },
        end: {
          line: 114,
          column: 55
        }
      },
      "36": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 56
        }
      },
      "37": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 55
        }
      },
      "38": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 124,
          column: 5
        }
      },
      "39": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "40": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 88
        }
      },
      "41": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 43
        }
      },
      "42": {
        start: {
          line: 126,
          column: 31
        },
        end: {
          line: 126,
          column: 59
        }
      },
      "43": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 132,
          column: 5
        }
      },
      "44": {
        start: {
          line: 128,
          column: 26
        },
        end: {
          line: 128,
          column: 220
        }
      },
      "45": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "46": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 88
        }
      },
      "47": {
        start: {
          line: 134,
          column: 21
        },
        end: {
          line: 134,
          column: 48
        }
      },
      "48": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 135,
          column: 47
        }
      },
      "49": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 136,
          column: 81
        }
      },
      "50": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 137,
          column: 20
        }
      },
      "51": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 150,
          column: 6
        }
      },
      "52": {
        start: {
          line: 141,
          column: 21
        },
        end: {
          line: 141,
          column: 48
        }
      },
      "53": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "54": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 81
        }
      },
      "55": {
        start: {
          line: 145,
          column: 26
        },
        end: {
          line: 145,
          column: 220
        }
      },
      "56": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "57": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 88
        }
      },
      "58": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 43
        }
      },
      "59": {
        start: {
          line: 153,
          column: 17
        },
        end: {
          line: 153,
          column: 44
        }
      },
      "60": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 160,
          column: 5
        }
      },
      "61": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 159,
          column: 10
        }
      },
      "62": {
        start: {
          line: 161,
          column: 22
        },
        end: {
          line: 161,
          column: 216
        }
      },
      "63": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 168,
          column: 5
        }
      },
      "64": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 167,
          column: 10
        }
      },
      "65": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 172,
          column: 6
        }
      },
      "66": {
        start: {
          line: 174,
          column: 17
        },
        end: {
          line: 174,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 12,
            column: 21
          }
        },
        loc: {
          start: {
            line: 12,
            column: 31
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 24
          },
          end: {
            line: 15,
            column: 25
          }
        },
        loc: {
          start: {
            line: 15,
            column: 35
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 27
          },
          end: {
            line: 18,
            column: 28
          }
        },
        loc: {
          start: {
            line: 18,
            column: 38
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 13
          },
          end: {
            line: 21,
            column: 14
          }
        },
        loc: {
          start: {
            line: 21,
            column: 24
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "getUserFromRequest",
        decl: {
          start: {
            line: 66,
            column: 13
          },
          end: {
            line: 66,
            column: 31
          }
        },
        loc: {
          start: {
            line: 66,
            column: 41
          },
          end: {
            line: 78,
            column: 1
          }
        },
        line: 66
      },
      "6": {
        name: "isPublicRoute",
        decl: {
          start: {
            line: 81,
            column: 13
          },
          end: {
            line: 81,
            column: 26
          }
        },
        loc: {
          start: {
            line: 81,
            column: 37
          },
          end: {
            line: 83,
            column: 1
          }
        },
        line: 81
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 82,
            column: 30
          },
          end: {
            line: 82,
            column: 31
          }
        },
        loc: {
          start: {
            line: 82,
            column: 39
          },
          end: {
            line: 82,
            column: 65
          }
        },
        line: 82
      },
      "8": {
        name: "isAdminRoute",
        decl: {
          start: {
            line: 86,
            column: 13
          },
          end: {
            line: 86,
            column: 25
          }
        },
        loc: {
          start: {
            line: 86,
            column: 36
          },
          end: {
            line: 88,
            column: 1
          }
        },
        line: 86
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 87,
            column: 29
          },
          end: {
            line: 87,
            column: 30
          }
        },
        loc: {
          start: {
            line: 87,
            column: 38
          },
          end: {
            line: 87,
            column: 64
          }
        },
        line: 87
      },
      "10": {
        name: "getRoutePermission",
        decl: {
          start: {
            line: 91,
            column: 13
          },
          end: {
            line: 91,
            column: 31
          }
        },
        loc: {
          start: {
            line: 91,
            column: 42
          },
          end: {
            line: 103,
            column: 1
          }
        },
        line: 91
      },
      "11": {
        name: "authMiddleware",
        decl: {
          start: {
            line: 104,
            column: 9
          },
          end: {
            line: 104,
            column: 23
          }
        },
        loc: {
          start: {
            line: 104,
            column: 33
          },
          end: {
            line: 138,
            column: 1
          }
        },
        line: 104
      },
      "12": {
        name: "createRouteMiddleware",
        decl: {
          start: {
            line: 139,
            column: 9
          },
          end: {
            line: 139,
            column: 30
          }
        },
        loc: {
          start: {
            line: 139,
            column: 51
          },
          end: {
            line: 151,
            column: 1
          }
        },
        line: 139
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 140,
            column: 11
          },
          end: {
            line: 140,
            column: 12
          }
        },
        loc: {
          start: {
            line: 140,
            column: 22
          },
          end: {
            line: 150,
            column: 5
          }
        },
        line: 140
      },
      "14": {
        name: "checkApiPermission",
        decl: {
          start: {
            line: 152,
            column: 9
          },
          end: {
            line: 152,
            column: 27
          }
        },
        loc: {
          start: {
            line: 152,
            column: 57
          },
          end: {
            line: 173,
            column: 1
          }
        },
        line: 152
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "1": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "2": {
        loc: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "3": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 107,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 107,
            column: 37
          }
        }, {
          start: {
            line: 107,
            column: 41
          },
          end: {
            line: 107,
            column: 68
          }
        }, {
          start: {
            line: 107,
            column: 72
          },
          end: {
            line: 107,
            column: 94
          }
        }, {
          start: {
            line: 107,
            column: 98
          },
          end: {
            line: 107,
            column: 121
          }
        }],
        line: 107
      },
      "4": {
        loc: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "5": {
        loc: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "6": {
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "7": {
        loc: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "8": {
        loc: {
          start: {
            line: 128,
            column: 26
          },
          end: {
            line: 128,
            column: 220
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 128,
            column: 62
          },
          end: {
            line: 128,
            column: 141
          }
        }, {
          start: {
            line: 128,
            column: 144
          },
          end: {
            line: 128,
            column: 220
          }
        }],
        line: 128
      },
      "9": {
        loc: {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "10": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "11": {
        loc: {
          start: {
            line: 145,
            column: 26
          },
          end: {
            line: 145,
            column: 220
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 145,
            column: 62
          },
          end: {
            line: 145,
            column: 141
          }
        }, {
          start: {
            line: 145,
            column: 144
          },
          end: {
            line: 145,
            column: 220
          }
        }],
        line: 145
      },
      "12": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "13": {
        loc: {
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 160,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 160,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "14": {
        loc: {
          start: {
            line: 161,
            column: 22
          },
          end: {
            line: 161,
            column: 216
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 161,
            column: 58
          },
          end: {
            line: 161,
            column: 137
          }
        }, {
          start: {
            line: 161,
            column: 140
          },
          end: {
            line: 161,
            column: 216
          }
        }],
        line: 161
      },
      "15": {
        loc: {
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "16": {
        loc: {
          start: {
            line: 166,
            column: 58
          },
          end: {
            line: 166,
            column: 146
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 166,
            column: 94
          },
          end: {
            line: 166,
            column: 125
          }
        }, {
          start: {
            line: 166,
            column: 128
          },
          end: {
            line: 166,
            column: 146
          }
        }],
        line: 166
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/middleware/auth.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { PERMISSIONS, Permission } from '@/lib/constants/permissions';\nimport { permissionService } from '@/lib/services/PermissionService';\nimport { AuthenticatedUser } from '@/types/auth';\n\n// Route permission mapping\nconst ROUTE_PERMISSIONS: Record<string, Permission | Permission[]> = {\n  '/dashboard': PERMISSIONS.SALES_VIEW, // Dashboard requires at least sales view\n  '/inventory': PERMISSIONS.INVENTORY_VIEW,\n  '/inventory/products': PERMISSIONS.INVENTORY_VIEW,\n  '/inventory/categories': PERMISSIONS.CATEGORIES_VIEW,\n  '/inventory/brands': PERMISSIONS.BRANDS_VIEW,\n  '/inventory/transfers': PERMISSIONS.TRANSFERS_VIEW,\n  '/sales': PERMISSIONS.SALES_VIEW,\n  '/sales/invoices': PERMISSIONS.SALES_VIEW,\n  '/sales/quotations': PERMISSIONS.QUOTATIONS_VIEW,\n  '/customers': PERMISSIONS.CUSTOMERS_VIEW,\n  '/suppliers': PERMISSIONS.SUPPLIERS_VIEW,\n  '/purchases': PERMISSIONS.PURCHASES_VIEW,\n  '/reports': PERMISSIONS.REPORTS_VIEW,\n  '/accounting': PERMISSIONS.ACCOUNTING_VIEW,\n  '/settings': PERMISSIONS.SETTINGS_VIEW,\n  '/users': PERMISSIONS.USERS_VIEW,\n  '/shops': PERMISSIONS.SHOP_VIEW,\n};\n\n// Admin-only routes\nconst ADMIN_ROUTES = [\n  '/users/create',\n  '/users/edit',\n  '/settings/system',\n  '/settings/permissions',\n];\n\n// Public routes that don't require authentication\nconst PUBLIC_ROUTES = [\n  '/login',\n  '/register',\n  '/forgot-password',\n  '/reset-password',\n  '/api/auth',\n];\n\n/**\n * Extract user information from request headers or cookies\n * This would typically come from your authentication system\n */\nfunction getUserFromRequest(request: NextRequest): AuthenticatedUser | null {\n  try {\n    // This is a placeholder - replace with your actual auth logic\n    const authHeader = request.headers.get('authorization');\n    const sessionCookie = request.cookies.get('session');\n    \n    // You would decode JWT token or validate session here\n    // For now, returning null to indicate no user found\n    return null;\n  } catch (error) {\n    console.error('Error extracting user from request:', error);\n    return null;\n  }\n}\n\n/**\n * Check if a route is public (doesn't require authentication)\n */\nfunction isPublicRoute(pathname: string): boolean {\n  return PUBLIC_ROUTES.some(route => pathname.startsWith(route));\n}\n\n/**\n * Check if a route requires admin permissions\n */\nfunction isAdminRoute(pathname: string): boolean {\n  return ADMIN_ROUTES.some(route => pathname.startsWith(route));\n}\n\n/**\n * Get required permission for a route\n */\nfunction getRoutePermission(pathname: string): Permission | Permission[] | null {\n  // Check for exact match first\n  if (ROUTE_PERMISSIONS[pathname]) {\n    return ROUTE_PERMISSIONS[pathname];\n  }\n  \n  // Check for partial matches (e.g., /inventory/products/123)\n  for (const route in ROUTE_PERMISSIONS) {\n    if (pathname.startsWith(route + '/')) {\n      return ROUTE_PERMISSIONS[route];\n    }\n  }\n  \n  return null;\n}\n\n/**\n * Main authentication middleware\n */\nexport function authMiddleware(request: NextRequest) {\n  const { pathname } = request.nextUrl;\n  \n  // Skip middleware for API routes, static files, and public routes\n  if (\n    pathname.startsWith('/_next') ||\n    pathname.startsWith('/api') ||\n    pathname.includes('.') ||\n    isPublicRoute(pathname)\n  ) {\n    return NextResponse.next();\n  }\n  \n  // Get user from request\n  const user = getUserFromRequest(request);\n  \n  // Redirect to login if not authenticated\n  if (!user) {\n    const loginUrl = new URL('/login', request.url);\n    loginUrl.searchParams.set('redirect', pathname);\n    return NextResponse.redirect(loginUrl);\n  }\n  \n  // Check admin routes\n  if (isAdminRoute(pathname)) {\n    if (!permissionService.isAdmin(user)) {\n      return NextResponse.redirect(new URL('/unauthorized', request.url));\n    }\n    return NextResponse.next();\n  }\n  \n  // Check route permissions\n  const requiredPermission = getRoutePermission(pathname);\n  if (requiredPermission) {\n    const hasAccess = Array.isArray(requiredPermission)\n      ? permissionService.hasAnyPermission(user, requiredPermission)\n      : permissionService.hasPermission(user, requiredPermission);\n    \n    if (!hasAccess) {\n      return NextResponse.redirect(new URL('/unauthorized', request.url));\n    }\n  }\n  \n  // Add user info to headers for downstream components\n  const response = NextResponse.next();\n  response.headers.set('x-user-id', user.id);\n  response.headers.set('x-user-permissions', JSON.stringify(user.permissions));\n  \n  return response;\n}\n\n/**\n * Higher-order function to create route-specific middleware\n */\nexport function createRouteMiddleware(requiredPermission: Permission | Permission[]) {\n  return (request: NextRequest) => {\n    const user = getUserFromRequest(request);\n    \n    if (!user) {\n      return NextResponse.redirect(new URL('/login', request.url));\n    }\n    \n    const hasAccess = Array.isArray(requiredPermission)\n      ? permissionService.hasAnyPermission(user, requiredPermission)\n      : permissionService.hasPermission(user, requiredPermission);\n    \n    if (!hasAccess) {\n      return NextResponse.redirect(new URL('/unauthorized', request.url));\n    }\n    \n    return NextResponse.next();\n  };\n}\n\n/**\n * Utility function to check permissions in API routes\n */\nexport function checkApiPermission(\n  request: NextRequest,\n  requiredPermission: Permission | Permission[]\n): { authorized: boolean; user: AuthenticatedUser | null; error?: string } {\n  const user = getUserFromRequest(request);\n  \n  if (!user) {\n    return { authorized: false, user: null, error: 'Authentication required' };\n  }\n  \n  const hasAccess = Array.isArray(requiredPermission)\n    ? permissionService.hasAnyPermission(user, requiredPermission)\n    : permissionService.hasPermission(user, requiredPermission);\n  \n  if (!hasAccess) {\n    return { \n      authorized: false, \n      user, \n      error: `Insufficient permissions. Required: ${Array.isArray(requiredPermission) ? requiredPermission.join(' OR ') : requiredPermission}` \n    };\n  }\n  \n  return { authorized: true, user };\n}\n\nexport default authMiddleware;"],
      names: ["authMiddleware", "checkApiPermission", "createRouteMiddleware", "ROUTE_PERMISSIONS", "PERMISSIONS", "SALES_VIEW", "INVENTORY_VIEW", "CATEGORIES_VIEW", "BRANDS_VIEW", "TRANSFERS_VIEW", "QUOTATIONS_VIEW", "CUSTOMERS_VIEW", "SUPPLIERS_VIEW", "PURCHASES_VIEW", "REPORTS_VIEW", "ACCOUNTING_VIEW", "SETTINGS_VIEW", "USERS_VIEW", "SHOP_VIEW", "ADMIN_ROUTES", "PUBLIC_ROUTES", "getUserFromRequest", "request", "authHeader", "headers", "get", "sessionCookie", "cookies", "error", "console", "isPublicRoute", "pathname", "some", "route", "startsWith", "isAdminRoute", "getRoutePermission", "nextUrl", "includes", "NextResponse", "next", "user", "loginUrl", "URL", "url", "searchParams", "set", "redirect", "permissionService", "isAdmin", "requiredPermission", "hasAccess", "Array", "isArray", "hasAnyPermission", "hasPermission", "response", "id", "JSON", "stringify", "permissions", "authorized", "join"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bfb7911ff239a21d33c3c90fee11fb51f8117695"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_wwhylcflf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_wwhylcflf();
cov_wwhylcflf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_wwhylcflf().f[0]++;
  cov_wwhylcflf().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_wwhylcflf().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_wwhylcflf().s[3]++;
_export(exports, {
  authMiddleware: function () {
    /* istanbul ignore next */
    cov_wwhylcflf().f[1]++;
    cov_wwhylcflf().s[4]++;
    return authMiddleware;
  },
  checkApiPermission: function () {
    /* istanbul ignore next */
    cov_wwhylcflf().f[2]++;
    cov_wwhylcflf().s[5]++;
    return checkApiPermission;
  },
  createRouteMiddleware: function () {
    /* istanbul ignore next */
    cov_wwhylcflf().f[3]++;
    cov_wwhylcflf().s[6]++;
    return createRouteMiddleware;
  },
  default: function () {
    /* istanbul ignore next */
    cov_wwhylcflf().f[4]++;
    cov_wwhylcflf().s[7]++;
    return _default;
  }
});
const _server =
/* istanbul ignore next */
(cov_wwhylcflf().s[8]++, require("next/server"));
const _permissions =
/* istanbul ignore next */
(cov_wwhylcflf().s[9]++, require("../lib/constants/permissions"));
const _PermissionService =
/* istanbul ignore next */
(cov_wwhylcflf().s[10]++, require("../lib/services/PermissionService"));
// Route permission mapping
const ROUTE_PERMISSIONS =
/* istanbul ignore next */
(cov_wwhylcflf().s[11]++, {
  "/dashboard": _permissions.PERMISSIONS.SALES_VIEW,
  "/inventory": _permissions.PERMISSIONS.INVENTORY_VIEW,
  "/inventory/products": _permissions.PERMISSIONS.INVENTORY_VIEW,
  "/inventory/categories": _permissions.PERMISSIONS.CATEGORIES_VIEW,
  "/inventory/brands": _permissions.PERMISSIONS.BRANDS_VIEW,
  "/inventory/transfers": _permissions.PERMISSIONS.TRANSFERS_VIEW,
  "/sales": _permissions.PERMISSIONS.SALES_VIEW,
  "/sales/invoices": _permissions.PERMISSIONS.SALES_VIEW,
  "/sales/quotations": _permissions.PERMISSIONS.QUOTATIONS_VIEW,
  "/customers": _permissions.PERMISSIONS.CUSTOMERS_VIEW,
  "/suppliers": _permissions.PERMISSIONS.SUPPLIERS_VIEW,
  "/purchases": _permissions.PERMISSIONS.PURCHASES_VIEW,
  "/reports": _permissions.PERMISSIONS.REPORTS_VIEW,
  "/accounting": _permissions.PERMISSIONS.ACCOUNTING_VIEW,
  "/settings": _permissions.PERMISSIONS.SETTINGS_VIEW,
  "/users": _permissions.PERMISSIONS.USERS_VIEW,
  "/shops": _permissions.PERMISSIONS.SHOP_VIEW
});
// Admin-only routes
const ADMIN_ROUTES =
/* istanbul ignore next */
(cov_wwhylcflf().s[12]++, ["/users/create", "/users/edit", "/settings/system", "/settings/permissions"]);
// Public routes that don't require authentication
const PUBLIC_ROUTES =
/* istanbul ignore next */
(cov_wwhylcflf().s[13]++, ["/login", "/register", "/forgot-password", "/reset-password", "/api/auth"]);
/**
 * Extract user information from request headers or cookies
 * This would typically come from your authentication system
 */
function getUserFromRequest(request) {
  /* istanbul ignore next */
  cov_wwhylcflf().f[5]++;
  cov_wwhylcflf().s[14]++;
  try {
    // This is a placeholder - replace with your actual auth logic
    const authHeader =
    /* istanbul ignore next */
    (cov_wwhylcflf().s[15]++, request.headers.get("authorization"));
    const sessionCookie =
    /* istanbul ignore next */
    (cov_wwhylcflf().s[16]++, request.cookies.get("session"));
    // You would decode JWT token or validate session here
    // For now, returning null to indicate no user found
    /* istanbul ignore next */
    cov_wwhylcflf().s[17]++;
    return null;
  } catch (error) {
    /* istanbul ignore next */
    cov_wwhylcflf().s[18]++;
    console.error("Error extracting user from request:", error);
    /* istanbul ignore next */
    cov_wwhylcflf().s[19]++;
    return null;
  }
}
/**
 * Check if a route is public (doesn't require authentication)
 */
function isPublicRoute(pathname) {
  /* istanbul ignore next */
  cov_wwhylcflf().f[6]++;
  cov_wwhylcflf().s[20]++;
  return PUBLIC_ROUTES.some(route => {
    /* istanbul ignore next */
    cov_wwhylcflf().f[7]++;
    cov_wwhylcflf().s[21]++;
    return pathname.startsWith(route);
  });
}
/**
 * Check if a route requires admin permissions
 */
function isAdminRoute(pathname) {
  /* istanbul ignore next */
  cov_wwhylcflf().f[8]++;
  cov_wwhylcflf().s[22]++;
  return ADMIN_ROUTES.some(route => {
    /* istanbul ignore next */
    cov_wwhylcflf().f[9]++;
    cov_wwhylcflf().s[23]++;
    return pathname.startsWith(route);
  });
}
/**
 * Get required permission for a route
 */
function getRoutePermission(pathname) {
  /* istanbul ignore next */
  cov_wwhylcflf().f[10]++;
  cov_wwhylcflf().s[24]++;
  // Check for exact match first
  if (ROUTE_PERMISSIONS[pathname]) {
    /* istanbul ignore next */
    cov_wwhylcflf().b[0][0]++;
    cov_wwhylcflf().s[25]++;
    return ROUTE_PERMISSIONS[pathname];
  } else
  /* istanbul ignore next */
  {
    cov_wwhylcflf().b[0][1]++;
  }
  // Check for partial matches (e.g., /inventory/products/123)
  cov_wwhylcflf().s[26]++;
  for (const route in ROUTE_PERMISSIONS) {
    /* istanbul ignore next */
    cov_wwhylcflf().s[27]++;
    if (pathname.startsWith(route + "/")) {
      /* istanbul ignore next */
      cov_wwhylcflf().b[1][0]++;
      cov_wwhylcflf().s[28]++;
      return ROUTE_PERMISSIONS[route];
    } else
    /* istanbul ignore next */
    {
      cov_wwhylcflf().b[1][1]++;
    }
  }
  /* istanbul ignore next */
  cov_wwhylcflf().s[29]++;
  return null;
}
function authMiddleware(request) {
  /* istanbul ignore next */
  cov_wwhylcflf().f[11]++;
  const {
    pathname
  } =
  /* istanbul ignore next */
  (cov_wwhylcflf().s[30]++, request.nextUrl);
  // Skip middleware for API routes, static files, and public routes
  /* istanbul ignore next */
  cov_wwhylcflf().s[31]++;
  if (
  /* istanbul ignore next */
  (cov_wwhylcflf().b[3][0]++, pathname.startsWith("/_next")) ||
  /* istanbul ignore next */
  (cov_wwhylcflf().b[3][1]++, pathname.startsWith("/api")) ||
  /* istanbul ignore next */
  (cov_wwhylcflf().b[3][2]++, pathname.includes(".")) ||
  /* istanbul ignore next */
  (cov_wwhylcflf().b[3][3]++, isPublicRoute(pathname))) {
    /* istanbul ignore next */
    cov_wwhylcflf().b[2][0]++;
    cov_wwhylcflf().s[32]++;
    return _server.NextResponse.next();
  } else
  /* istanbul ignore next */
  {
    cov_wwhylcflf().b[2][1]++;
  }
  // Get user from request
  const user =
  /* istanbul ignore next */
  (cov_wwhylcflf().s[33]++, getUserFromRequest(request));
  // Redirect to login if not authenticated
  /* istanbul ignore next */
  cov_wwhylcflf().s[34]++;
  if (!user) {
    /* istanbul ignore next */
    cov_wwhylcflf().b[4][0]++;
    const loginUrl =
    /* istanbul ignore next */
    (cov_wwhylcflf().s[35]++, new URL("/login", request.url));
    /* istanbul ignore next */
    cov_wwhylcflf().s[36]++;
    loginUrl.searchParams.set("redirect", pathname);
    /* istanbul ignore next */
    cov_wwhylcflf().s[37]++;
    return _server.NextResponse.redirect(loginUrl);
  } else
  /* istanbul ignore next */
  {
    cov_wwhylcflf().b[4][1]++;
  }
  // Check admin routes
  cov_wwhylcflf().s[38]++;
  if (isAdminRoute(pathname)) {
    /* istanbul ignore next */
    cov_wwhylcflf().b[5][0]++;
    cov_wwhylcflf().s[39]++;
    if (!_PermissionService.permissionService.isAdmin(user)) {
      /* istanbul ignore next */
      cov_wwhylcflf().b[6][0]++;
      cov_wwhylcflf().s[40]++;
      return _server.NextResponse.redirect(new URL("/unauthorized", request.url));
    } else
    /* istanbul ignore next */
    {
      cov_wwhylcflf().b[6][1]++;
    }
    cov_wwhylcflf().s[41]++;
    return _server.NextResponse.next();
  } else
  /* istanbul ignore next */
  {
    cov_wwhylcflf().b[5][1]++;
  }
  // Check route permissions
  const requiredPermission =
  /* istanbul ignore next */
  (cov_wwhylcflf().s[42]++, getRoutePermission(pathname));
  /* istanbul ignore next */
  cov_wwhylcflf().s[43]++;
  if (requiredPermission) {
    /* istanbul ignore next */
    cov_wwhylcflf().b[7][0]++;
    const hasAccess =
    /* istanbul ignore next */
    (cov_wwhylcflf().s[44]++, Array.isArray(requiredPermission) ?
    /* istanbul ignore next */
    (cov_wwhylcflf().b[8][0]++, _PermissionService.permissionService.hasAnyPermission(user, requiredPermission)) :
    /* istanbul ignore next */
    (cov_wwhylcflf().b[8][1]++, _PermissionService.permissionService.hasPermission(user, requiredPermission)));
    /* istanbul ignore next */
    cov_wwhylcflf().s[45]++;
    if (!hasAccess) {
      /* istanbul ignore next */
      cov_wwhylcflf().b[9][0]++;
      cov_wwhylcflf().s[46]++;
      return _server.NextResponse.redirect(new URL("/unauthorized", request.url));
    } else
    /* istanbul ignore next */
    {
      cov_wwhylcflf().b[9][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_wwhylcflf().b[7][1]++;
  }
  // Add user info to headers for downstream components
  const response =
  /* istanbul ignore next */
  (cov_wwhylcflf().s[47]++, _server.NextResponse.next());
  /* istanbul ignore next */
  cov_wwhylcflf().s[48]++;
  response.headers.set("x-user-id", user.id);
  /* istanbul ignore next */
  cov_wwhylcflf().s[49]++;
  response.headers.set("x-user-permissions", JSON.stringify(user.permissions));
  /* istanbul ignore next */
  cov_wwhylcflf().s[50]++;
  return response;
}
function createRouteMiddleware(requiredPermission) {
  /* istanbul ignore next */
  cov_wwhylcflf().f[12]++;
  cov_wwhylcflf().s[51]++;
  return request => {
    /* istanbul ignore next */
    cov_wwhylcflf().f[13]++;
    const user =
    /* istanbul ignore next */
    (cov_wwhylcflf().s[52]++, getUserFromRequest(request));
    /* istanbul ignore next */
    cov_wwhylcflf().s[53]++;
    if (!user) {
      /* istanbul ignore next */
      cov_wwhylcflf().b[10][0]++;
      cov_wwhylcflf().s[54]++;
      return _server.NextResponse.redirect(new URL("/login", request.url));
    } else
    /* istanbul ignore next */
    {
      cov_wwhylcflf().b[10][1]++;
    }
    const hasAccess =
    /* istanbul ignore next */
    (cov_wwhylcflf().s[55]++, Array.isArray(requiredPermission) ?
    /* istanbul ignore next */
    (cov_wwhylcflf().b[11][0]++, _PermissionService.permissionService.hasAnyPermission(user, requiredPermission)) :
    /* istanbul ignore next */
    (cov_wwhylcflf().b[11][1]++, _PermissionService.permissionService.hasPermission(user, requiredPermission)));
    /* istanbul ignore next */
    cov_wwhylcflf().s[56]++;
    if (!hasAccess) {
      /* istanbul ignore next */
      cov_wwhylcflf().b[12][0]++;
      cov_wwhylcflf().s[57]++;
      return _server.NextResponse.redirect(new URL("/unauthorized", request.url));
    } else
    /* istanbul ignore next */
    {
      cov_wwhylcflf().b[12][1]++;
    }
    cov_wwhylcflf().s[58]++;
    return _server.NextResponse.next();
  };
}
function checkApiPermission(request, requiredPermission) {
  /* istanbul ignore next */
  cov_wwhylcflf().f[14]++;
  const user =
  /* istanbul ignore next */
  (cov_wwhylcflf().s[59]++, getUserFromRequest(request));
  /* istanbul ignore next */
  cov_wwhylcflf().s[60]++;
  if (!user) {
    /* istanbul ignore next */
    cov_wwhylcflf().b[13][0]++;
    cov_wwhylcflf().s[61]++;
    return {
      authorized: false,
      user: null,
      error: "Authentication required"
    };
  } else
  /* istanbul ignore next */
  {
    cov_wwhylcflf().b[13][1]++;
  }
  const hasAccess =
  /* istanbul ignore next */
  (cov_wwhylcflf().s[62]++, Array.isArray(requiredPermission) ?
  /* istanbul ignore next */
  (cov_wwhylcflf().b[14][0]++, _PermissionService.permissionService.hasAnyPermission(user, requiredPermission)) :
  /* istanbul ignore next */
  (cov_wwhylcflf().b[14][1]++, _PermissionService.permissionService.hasPermission(user, requiredPermission)));
  /* istanbul ignore next */
  cov_wwhylcflf().s[63]++;
  if (!hasAccess) {
    /* istanbul ignore next */
    cov_wwhylcflf().b[15][0]++;
    cov_wwhylcflf().s[64]++;
    return {
      authorized: false,
      user,
      error: `Insufficient permissions. Required: ${Array.isArray(requiredPermission) ?
      /* istanbul ignore next */
      (cov_wwhylcflf().b[16][0]++, requiredPermission.join(" OR ")) :
      /* istanbul ignore next */
      (cov_wwhylcflf().b[16][1]++, requiredPermission)}`
    };
  } else
  /* istanbul ignore next */
  {
    cov_wwhylcflf().b[15][1]++;
  }
  cov_wwhylcflf().s[65]++;
  return {
    authorized: true,
    user
  };
}
const _default =
/* istanbul ignore next */
(cov_wwhylcflf().s[66]++, authMiddleware);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,