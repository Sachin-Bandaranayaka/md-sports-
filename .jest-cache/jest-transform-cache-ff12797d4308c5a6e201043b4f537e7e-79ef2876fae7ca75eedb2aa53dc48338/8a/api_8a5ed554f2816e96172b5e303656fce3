ac589f666aa24b496d83d199c030e0d0
/**
 * Utility for making authenticated API requests
 */ // Token provider - will be set by AuthProvider
"use strict";

/* istanbul ignore next */
function cov_2hqdskfdrz() {
  var path = "/Users/sachin/Documents/md-sports-/src/utils/api.ts";
  var hash = "33cbcf6562fbbf3027cb6ea61e07ea8a8c815608";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/utils/api.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 42,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 26
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 25
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 23
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 25
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 24
        }
      },
      "9": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 23
        }
      },
      "10": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 28
        }
      },
      "11": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 32
        }
      },
      "12": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 37
        }
      },
      "13": {
        start: {
          line: 43,
          column: 20
        },
        end: {
          line: 43,
          column: 24
        }
      },
      "14": {
        start: {
          line: 44,
          column: 25
        },
        end: {
          line: 46,
          column: 1
        }
      },
      "15": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 29
        }
      },
      "16": {
        start: {
          line: 49,
          column: 25
        },
        end: {
          line: 66,
          column: 1
        }
      },
      "17": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "18": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 31
        }
      },
      "19": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "20": {
        start: {
          line: 58,
          column: 22
        },
        end: {
          line: 58,
          column: 44
        }
      },
      "21": {
        start: {
          line: 59,
          column: 22
        },
        end: {
          line: 59,
          column: 51
        }
      },
      "22": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "23": {
        start: {
          line: 61,
          column: 26
        },
        end: {
          line: 61,
          column: 57
        }
      },
      "24": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 36
        }
      },
      "25": {
        start: {
          line: 62,
          column: 23
        },
        end: {
          line: 62,
          column: 36
        }
      },
      "26": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 16
        }
      },
      "27": {
        start: {
          line: 67,
          column: 21
        },
        end: {
          line: 73,
          column: 1
        }
      },
      "28": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 58
        }
      },
      "29": {
        start: {
          line: 68,
          column: 41
        },
        end: {
          line: 68,
          column: 58
        }
      },
      "30": {
        start: {
          line: 69,
          column: 18
        },
        end: {
          line: 69,
          column: 40
        }
      },
      "31": {
        start: {
          line: 70,
          column: 18
        },
        end: {
          line: 70,
          column: 45
        }
      },
      "32": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 67
        }
      },
      "33": {
        start: {
          line: 71,
          column: 28
        },
        end: {
          line: 71,
          column: 67
        }
      },
      "34": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 21
        }
      },
      "35": {
        start: {
          line: 74,
          column: 18
        },
        end: {
          line: 112,
          column: 1
        }
      },
      "36": {
        start: {
          line: 76,
          column: 18
        },
        end: {
          line: 76,
          column: 32
        }
      },
      "37": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "38": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 65
        }
      },
      "39": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 103
        }
      },
      "40": {
        start: {
          line: 83,
          column: 20
        },
        end: {
          line: 86,
          column: 5
        }
      },
      "41": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 91,
          column: 5
        }
      },
      "42": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 53
        }
      },
      "43": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 98,
          column: 5
        }
      },
      "44": {
        start: {
          line: 94,
          column: 26
        },
        end: {
          line: 94,
          column: 40
        }
      },
      "45": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "46": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 48
        }
      },
      "47": {
        start: {
          line: 100,
          column: 21
        },
        end: {
          line: 103,
          column: 6
        }
      },
      "48": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 110,
          column: 5
        }
      },
      "49": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 72
        }
      },
      "50": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 40
        }
      },
      "51": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 24
        }
      },
      "52": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 111,
          column: 20
        }
      },
      "53": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 118,
          column: 1
        }
      },
      "54": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 117,
          column: 7
        }
      },
      "55": {
        start: {
          line: 119,
          column: 17
        },
        end: {
          line: 125,
          column: 1
        }
      },
      "56": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 124,
          column: 7
        }
      },
      "57": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 132,
          column: 1
        }
      },
      "58": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 131,
          column: 7
        }
      },
      "59": {
        start: {
          line: 133,
          column: 19
        },
        end: {
          line: 138,
          column: 1
        }
      },
      "60": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 137,
          column: 7
        }
      },
      "61": {
        start: {
          line: 139,
          column: 18
        },
        end: {
          line: 145,
          column: 1
        }
      },
      "62": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 144,
          column: 7
        }
      },
      "63": {
        start: {
          line: 146,
          column: 30
        },
        end: {
          line: 175,
          column: 1
        }
      },
      "64": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 174,
          column: 5
        }
      },
      "65": {
        start: {
          line: 148,
          column: 30
        },
        end: {
          line: 148,
          column: 42
        }
      },
      "66": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 172,
          column: 10
        }
      },
      "67": {
        start: {
          line: 151,
          column: 30
        },
        end: {
          line: 151,
          column: 44
        }
      },
      "68": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 170,
          column: 13
        }
      },
      "69": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 153,
          column: 40
        }
      },
      "70": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 154,
          column: 56
        }
      },
      "71": {
        start: {
          line: 156,
          column: 32
        },
        end: {
          line: 156,
          column: 47
        }
      },
      "72": {
        start: {
          line: 158,
          column: 30
        },
        end: {
          line: 158,
          column: 44
        }
      },
      "73": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 161,
          column: 17
        }
      },
      "74": {
        start: {
          line: 160,
          column: 20
        },
        end: {
          line: 160,
          column: 65
        }
      },
      "75": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 169,
          column: 17
        }
      },
      "76": {
        start: {
          line: 164,
          column: 38
        },
        end: {
          line: 164,
          column: 52
        }
      },
      "77": {
        start: {
          line: 165,
          column: 20
        },
        end: {
          line: 168,
          column: 21
        }
      },
      "78": {
        start: {
          line: 166,
          column: 24
        },
        end: {
          line: 166,
          column: 60
        }
      },
      "79": {
        start: {
          line: 167,
          column: 24
        },
        end: {
          line: 167,
          column: 103
        }
      },
      "80": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 47
        }
      },
      "81": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 61
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 16
          },
          end: {
            line: 15,
            column: 17
          }
        },
        loc: {
          start: {
            line: 15,
            column: 27
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 18,
            column: 16
          }
        },
        loc: {
          start: {
            line: 18,
            column: 26
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 13
          },
          end: {
            line: 21,
            column: 14
          }
        },
        loc: {
          start: {
            line: 21,
            column: 24
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 16
          }
        },
        loc: {
          start: {
            line: 24,
            column: 26
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 14
          },
          end: {
            line: 27,
            column: 15
          }
        },
        loc: {
          start: {
            line: 27,
            column: 25
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 30,
            column: 13
          },
          end: {
            line: 30,
            column: 14
          }
        },
        loc: {
          start: {
            line: 30,
            column: 24
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 33,
            column: 18
          },
          end: {
            line: 33,
            column: 19
          }
        },
        loc: {
          start: {
            line: 33,
            column: 29
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 36,
            column: 22
          },
          end: {
            line: 36,
            column: 23
          }
        },
        loc: {
          start: {
            line: 36,
            column: 33
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 39,
            column: 27
          },
          end: {
            line: 39,
            column: 28
          }
        },
        loc: {
          start: {
            line: 39,
            column: 38
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 44,
            column: 25
          },
          end: {
            line: 44,
            column: 26
          }
        },
        loc: {
          start: {
            line: 44,
            column: 37
          },
          end: {
            line: 46,
            column: 1
          }
        },
        line: 44
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 49,
            column: 25
          },
          end: {
            line: 49,
            column: 26
          }
        },
        loc: {
          start: {
            line: 49,
            column: 29
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 49
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 67,
            column: 21
          },
          end: {
            line: 67,
            column: 22
          }
        },
        loc: {
          start: {
            line: 67,
            column: 25
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 67
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 74,
            column: 18
          },
          end: {
            line: 74,
            column: 19
          }
        },
        loc: {
          start: {
            line: 74,
            column: 45
          },
          end: {
            line: 112,
            column: 1
          }
        },
        line: 74
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 113,
            column: 16
          },
          end: {
            line: 113,
            column: 17
          }
        },
        loc: {
          start: {
            line: 113,
            column: 43
          },
          end: {
            line: 118,
            column: 1
          }
        },
        line: 113
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 119,
            column: 17
          },
          end: {
            line: 119,
            column: 18
          }
        },
        loc: {
          start: {
            line: 119,
            column: 50
          },
          end: {
            line: 125,
            column: 1
          }
        },
        line: 119
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 126,
            column: 16
          },
          end: {
            line: 126,
            column: 17
          }
        },
        loc: {
          start: {
            line: 126,
            column: 49
          },
          end: {
            line: 132,
            column: 1
          }
        },
        line: 126
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 133,
            column: 19
          },
          end: {
            line: 133,
            column: 20
          }
        },
        loc: {
          start: {
            line: 133,
            column: 46
          },
          end: {
            line: 138,
            column: 1
          }
        },
        line: 133
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 139,
            column: 18
          },
          end: {
            line: 139,
            column: 19
          }
        },
        loc: {
          start: {
            line: 139,
            column: 51
          },
          end: {
            line: 145,
            column: 1
          }
        },
        line: 139
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 146,
            column: 30
          },
          end: {
            line: 146,
            column: 31
          }
        },
        loc: {
          start: {
            line: 146,
            column: 34
          },
          end: {
            line: 175,
            column: 1
          }
        },
        line: 146
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 149,
            column: 23
          },
          end: {
            line: 149,
            column: 24
          }
        },
        loc: {
          start: {
            line: 149,
            column: 45
          },
          end: {
            line: 172,
            column: 9
          }
        },
        line: 149
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "1": {
        loc: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "2": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "3": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "4": {
        loc: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "5": {
        loc: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 67
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 67
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "6": {
        loc: {
          start: {
            line: 74,
            column: 30
          },
          end: {
            line: 74,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 74,
            column: 40
          },
          end: {
            line: 74,
            column: 42
          }
        }],
        line: 74
      },
      "7": {
        loc: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        }, {
          start: {
            line: 79,
            column: 11
          },
          end: {
            line: 81,
            column: 5
          }
        }],
        line: 77
      },
      "8": {
        loc: {
          start: {
            line: 84,
            column: 11
          },
          end: {
            line: 84,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 11
          },
          end: {
            line: 84,
            column: 26
          }
        }, {
          start: {
            line: 84,
            column: 30
          },
          end: {
            line: 84,
            column: 32
          }
        }],
        line: 84
      },
      "9": {
        loc: {
          start: {
            line: 85,
            column: 25
          },
          end: {
            line: 85,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 85,
            column: 33
          },
          end: {
            line: 85,
            column: 50
          }
        }, {
          start: {
            line: 85,
            column: 53
          },
          end: {
            line: 85,
            column: 55
          }
        }],
        line: 85
      },
      "10": {
        loc: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "11": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 89,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 89,
            column: 56
          }
        }, {
          start: {
            line: 89,
            column: 60
          },
          end: {
            line: 89,
            column: 95
          }
        }],
        line: 89
      },
      "12": {
        loc: {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "13": {
        loc: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 93,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 93,
            column: 22
          }
        }, {
          start: {
            line: 93,
            column: 26
          },
          end: {
            line: 93,
            column: 50
          }
        }, {
          start: {
            line: 93,
            column: 54
          },
          end: {
            line: 93,
            column: 79
          }
        }],
        line: 93
      },
      "14": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "15": {
        loc: {
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "16": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 105,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 105,
            column: 31
          }
        }, {
          start: {
            line: 105,
            column: 35
          },
          end: {
            line: 105,
            column: 64
          }
        }, {
          start: {
            line: 105,
            column: 68
          },
          end: {
            line: 105,
            column: 112
          }
        }],
        line: 105
      },
      "17": {
        loc: {
          start: {
            line: 113,
            column: 28
          },
          end: {
            line: 113,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 113,
            column: 38
          },
          end: {
            line: 113,
            column: 40
          }
        }],
        line: 113
      },
      "18": {
        loc: {
          start: {
            line: 119,
            column: 35
          },
          end: {
            line: 119,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 119,
            column: 45
          },
          end: {
            line: 119,
            column: 47
          }
        }],
        line: 119
      },
      "19": {
        loc: {
          start: {
            line: 126,
            column: 34
          },
          end: {
            line: 126,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 126,
            column: 44
          },
          end: {
            line: 126,
            column: 46
          }
        }],
        line: 126
      },
      "20": {
        loc: {
          start: {
            line: 133,
            column: 31
          },
          end: {
            line: 133,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 133,
            column: 41
          },
          end: {
            line: 133,
            column: 43
          }
        }],
        line: 133
      },
      "21": {
        loc: {
          start: {
            line: 139,
            column: 36
          },
          end: {
            line: 139,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 139,
            column: 46
          },
          end: {
            line: 139,
            column: 48
          }
        }],
        line: 139
      },
      "22": {
        loc: {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 174,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 174,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "23": {
        loc: {
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 170,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 170,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "24": {
        loc: {
          start: {
            line: 152,
            column: 16
          },
          end: {
            line: 152,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 16
          },
          end: {
            line: 152,
            column: 44
          }
        }, {
          start: {
            line: 152,
            column: 48
          },
          end: {
            line: 152,
            column: 101
          }
        }],
        line: 152
      },
      "25": {
        loc: {
          start: {
            line: 153,
            column: 26
          },
          end: {
            line: 153,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 26
          },
          end: {
            line: 153,
            column: 33
          }
        }, {
          start: {
            line: 153,
            column: 37
          },
          end: {
            line: 153,
            column: 39
          }
        }],
        line: 153
      },
      "26": {
        loc: {
          start: {
            line: 154,
            column: 34
          },
          end: {
            line: 154,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 34
          },
          end: {
            line: 154,
            column: 49
          }
        }, {
          start: {
            line: 154,
            column: 53
          },
          end: {
            line: 154,
            column: 55
          }
        }],
        line: 154
      },
      "27": {
        loc: {
          start: {
            line: 159,
            column: 16
          },
          end: {
            line: 161,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 16
          },
          end: {
            line: 161,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "28": {
        loc: {
          start: {
            line: 159,
            column: 20
          },
          end: {
            line: 159,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 20
          },
          end: {
            line: 159,
            column: 25
          }
        }, {
          start: {
            line: 159,
            column: 29
          },
          end: {
            line: 159,
            column: 54
          }
        }],
        line: 159
      },
      "29": {
        loc: {
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 169,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 169,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "30": {
        loc: {
          start: {
            line: 163,
            column: 20
          },
          end: {
            line: 163,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 20
          },
          end: {
            line: 163,
            column: 34
          }
        }, {
          start: {
            line: 163,
            column: 38
          },
          end: {
            line: 163,
            column: 62
          }
        }, {
          start: {
            line: 163,
            column: 66
          },
          end: {
            line: 163,
            column: 91
          }
        }],
        line: 163
      },
      "31": {
        loc: {
          start: {
            line: 165,
            column: 20
          },
          end: {
            line: 168,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 20
          },
          end: {
            line: 168,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "32": {
        loc: {
          start: {
            line: 165,
            column: 24
          },
          end: {
            line: 165,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 24
          },
          end: {
            line: 165,
            column: 33
          }
        }, {
          start: {
            line: 165,
            column: 37
          },
          end: {
            line: 165,
            column: 61
          }
        }],
        line: 165
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0],
      "18": [0],
      "19": [0],
      "20": [0],
      "21": [0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0, 0],
      "31": [0, 0],
      "32": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/utils/api.ts"],
      sourcesContent: ["/**\n * Utility for making authenticated API requests\n */\n\n// Token provider - will be set by AuthProvider\nlet tokenProvider: (() => string | null) | null = null;\n\n/**\n * Set the token provider function\n * This should be called by the AuthProvider to provide access to the current token\n */\nexport const setTokenProvider = (provider: () => string | null) => {\n    tokenProvider = provider;\n};\n\n/**\n * Get the current authentication token\n */\nconst getAuthToken = (): string | null => {\n    // Use the token provider if available\n    if (tokenProvider) {\n        return tokenProvider();\n    }\n    \n    // Fallback to cookies only (not localStorage) for security\n    // This is only used during SSR or before the auth provider is initialized\n    if (typeof document !== 'undefined') {\n        // Try to get token from cookie (if server sets it as non-httpOnly for development)\n        const value = `; ${document.cookie}`;\n        const parts = value.split(`; accessToken=`);\n        if (parts.length === 2) {\n            const token = parts.pop()?.split(';').shift();\n            if (token) return token;\n        }\n    }\n    \n    return null;\n};\n\n/**\n * Get CSRF token from cookies\n */\nexport const getCsrfToken = (): string | undefined => {\n    if (typeof document === 'undefined') return undefined;\n\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; csrfToken=`);\n    if (parts.length === 2) return parts.pop()?.split(';').shift();\n    return undefined;\n};\n\n/**\n * Enhanced fetch function that automatically adds authentication token\n */\nexport const authFetch = async (url: string, options: RequestInit = {}) => {\n    // Get token using the centralized method\n    const token = getAuthToken();\n\n    if (!token) {\n        console.warn('No auth token found for request to:', url);\n    } else {\n        console.log(`Making authenticated request to ${url} with token: ${token.substring(0, 10)}...`);\n    }\n\n    // Prepare headers with authentication\n    const headers: Record<string, string> = {\n        ...(options.headers as Record<string, string> || {}),\n        'Authorization': token ? `Bearer ${token}` : '',\n    };\n\n    // If content type is not explicitly set and we're not sending FormData,\n    // default to JSON content type\n    if (\n        !options.headers?.hasOwnProperty('Content-Type') &&\n        !(options.body instanceof FormData)\n    ) {\n        headers['Content-Type'] = 'application/json';\n    }\n\n    // Add CSRF token for non-GET requests\n    if (options.method && options.method !== 'GET' && options.method !== 'HEAD') {\n        const csrfToken = getCsrfToken();\n        if (csrfToken) {\n            headers['X-CSRF-Token'] = csrfToken;\n        }\n    }\n\n    // Make the request with authentication header\n    const response = await fetch(url, {\n        ...options,\n        headers,\n    });\n\n    // If unauthorized and not on the login page, redirect to login\n    if (response.status === 401 && typeof window !== 'undefined' && !window.location.pathname.includes('/login')) {\n        console.warn('Authentication error (401) for request to:', url);\n        // Don't clear localStorage - let the auth provider handle this\n        window.location.href = '/login';\n        return response;\n    }\n\n    return response;\n};\n\n/**\n * GET request with authentication\n */\nexport const authGet = async (url: string, options: RequestInit = {}) => {\n    return authFetch(url, { ...options, method: 'GET' });\n};\n\n/**\n * POST request with authentication\n */\nexport const authPost = async (url: string, data: any, options: RequestInit = {}) => {\n    return authFetch(url, {\n        ...options,\n        method: 'POST',\n        body: JSON.stringify(data),\n    });\n};\n\n/**\n * PUT request with authentication\n */\nexport const authPut = async (url: string, data: any, options: RequestInit = {}) => {\n    return authFetch(url, {\n        ...options,\n        method: 'PUT',\n        body: JSON.stringify(data),\n    });\n};\n\n/**\n * DELETE request with authentication\n */\nexport const authDelete = async (url: string, options: RequestInit = {}) => {\n    return authFetch(url, { ...options, method: 'DELETE' });\n};\n\n/**\n * PATCH request with authentication\n */\nexport const authPatch = async (url: string, data: any, options: RequestInit = {}) => {\n    return authFetch(url, {\n        ...options,\n        method: 'PATCH',\n        body: JSON.stringify(data),\n    });\n};\n\n/**\n * Setup global fetch interceptor to add authentication token to all API calls\n * Call this once at the app initialization\n */\nexport const setupFetchInterceptor = () => {\n    if (typeof window !== 'undefined') {\n        const originalFetch = window.fetch;\n\n        window.fetch = async (url: RequestInfo | URL, options?: RequestInit) => {\n            // Only intercept API calls to our own API (starting with /api)\n            const urlString = url.toString();\n            if (urlString.startsWith('/api') || urlString.startsWith(window.location.origin + '/api')) {\n                options = options || {};\n                options.headers = options.headers || {};\n\n                // Cast headers to any to allow string indexing\n                const headers = options.headers as any;\n\n                // Add authentication header if token exists\n                const token = getAuthToken();\n                if (token && !headers['Authorization']) {\n                    headers['Authorization'] = `Bearer ${token}`;\n                }\n\n                // Add CSRF token for non-GET requests\n                if (options.method && options.method !== 'GET' && options.method !== 'HEAD') {\n                    const csrfToken = getCsrfToken();\n                    if (csrfToken && !headers['X-CSRF-Token']) {\n                        headers['X-CSRF-Token'] = csrfToken;\n                        console.log(`Adding CSRF token for ${options.method} request to ${urlString}`);\n                    }\n                }\n            }\n\n            return originalFetch(url, options);\n        };\n\n        console.log('Fetch interceptor set up successfully');\n    }\n};"],
      names: ["authDelete", "authFetch", "authGet", "authPatch", "authPost", "authPut", "getCsrfToken", "setTokenProvider", "setupFetchInterceptor", "tokenProvider", "provider", "getAuthToken", "document", "value", "cookie", "parts", "split", "length", "token", "pop", "shift", "undefined", "url", "options", "console", "warn", "log", "substring", "headers", "hasOwnProperty", "body", "FormData", "method", "csrfToken", "response", "fetch", "status", "window", "location", "pathname", "includes", "href", "data", "JSON", "stringify", "originalFetch", "urlString", "toString", "startsWith", "origin"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "33cbcf6562fbbf3027cb6ea61e07ea8a8c815608"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2hqdskfdrz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2hqdskfdrz();
cov_2hqdskfdrz().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2hqdskfdrz().f[0]++;
  cov_2hqdskfdrz().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2hqdskfdrz().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2hqdskfdrz().s[3]++;
_export(exports, {
  authDelete: function () {
    /* istanbul ignore next */
    cov_2hqdskfdrz().f[1]++;
    cov_2hqdskfdrz().s[4]++;
    return authDelete;
  },
  authFetch: function () {
    /* istanbul ignore next */
    cov_2hqdskfdrz().f[2]++;
    cov_2hqdskfdrz().s[5]++;
    return authFetch;
  },
  authGet: function () {
    /* istanbul ignore next */
    cov_2hqdskfdrz().f[3]++;
    cov_2hqdskfdrz().s[6]++;
    return authGet;
  },
  authPatch: function () {
    /* istanbul ignore next */
    cov_2hqdskfdrz().f[4]++;
    cov_2hqdskfdrz().s[7]++;
    return authPatch;
  },
  authPost: function () {
    /* istanbul ignore next */
    cov_2hqdskfdrz().f[5]++;
    cov_2hqdskfdrz().s[8]++;
    return authPost;
  },
  authPut: function () {
    /* istanbul ignore next */
    cov_2hqdskfdrz().f[6]++;
    cov_2hqdskfdrz().s[9]++;
    return authPut;
  },
  getCsrfToken: function () {
    /* istanbul ignore next */
    cov_2hqdskfdrz().f[7]++;
    cov_2hqdskfdrz().s[10]++;
    return getCsrfToken;
  },
  setTokenProvider: function () {
    /* istanbul ignore next */
    cov_2hqdskfdrz().f[8]++;
    cov_2hqdskfdrz().s[11]++;
    return setTokenProvider;
  },
  setupFetchInterceptor: function () {
    /* istanbul ignore next */
    cov_2hqdskfdrz().f[9]++;
    cov_2hqdskfdrz().s[12]++;
    return setupFetchInterceptor;
  }
});
let tokenProvider =
/* istanbul ignore next */
(cov_2hqdskfdrz().s[13]++, null);
/* istanbul ignore next */
cov_2hqdskfdrz().s[14]++;
const setTokenProvider = provider => {
  /* istanbul ignore next */
  cov_2hqdskfdrz().f[10]++;
  cov_2hqdskfdrz().s[15]++;
  tokenProvider = provider;
};
/**
 * Get the current authentication token
 */
/* istanbul ignore next */
cov_2hqdskfdrz().s[16]++;
const getAuthToken = () => {
  /* istanbul ignore next */
  cov_2hqdskfdrz().f[11]++;
  cov_2hqdskfdrz().s[17]++;
  // Use the token provider if available
  if (tokenProvider) {
    /* istanbul ignore next */
    cov_2hqdskfdrz().b[0][0]++;
    cov_2hqdskfdrz().s[18]++;
    return tokenProvider();
  } else
  /* istanbul ignore next */
  {
    cov_2hqdskfdrz().b[0][1]++;
  }
  // Fallback to cookies only (not localStorage) for security
  // This is only used during SSR or before the auth provider is initialized
  cov_2hqdskfdrz().s[19]++;
  if (typeof document !== "undefined") {
    /* istanbul ignore next */
    cov_2hqdskfdrz().b[1][0]++;
    // Try to get token from cookie (if server sets it as non-httpOnly for development)
    const value =
    /* istanbul ignore next */
    (cov_2hqdskfdrz().s[20]++, `; ${document.cookie}`);
    const parts =
    /* istanbul ignore next */
    (cov_2hqdskfdrz().s[21]++, value.split(`; accessToken=`));
    /* istanbul ignore next */
    cov_2hqdskfdrz().s[22]++;
    if (parts.length === 2) {
      /* istanbul ignore next */
      cov_2hqdskfdrz().b[2][0]++;
      const token =
      /* istanbul ignore next */
      (cov_2hqdskfdrz().s[23]++, parts.pop()?.split(";").shift());
      /* istanbul ignore next */
      cov_2hqdskfdrz().s[24]++;
      if (token) {
        /* istanbul ignore next */
        cov_2hqdskfdrz().b[3][0]++;
        cov_2hqdskfdrz().s[25]++;
        return token;
      } else
      /* istanbul ignore next */
      {
        cov_2hqdskfdrz().b[3][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2hqdskfdrz().b[2][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_2hqdskfdrz().b[1][1]++;
  }
  cov_2hqdskfdrz().s[26]++;
  return null;
};
/* istanbul ignore next */
cov_2hqdskfdrz().s[27]++;
const getCsrfToken = () => {
  /* istanbul ignore next */
  cov_2hqdskfdrz().f[12]++;
  cov_2hqdskfdrz().s[28]++;
  if (typeof document === "undefined") {
    /* istanbul ignore next */
    cov_2hqdskfdrz().b[4][0]++;
    cov_2hqdskfdrz().s[29]++;
    return undefined;
  } else
  /* istanbul ignore next */
  {
    cov_2hqdskfdrz().b[4][1]++;
  }
  const value =
  /* istanbul ignore next */
  (cov_2hqdskfdrz().s[30]++, `; ${document.cookie}`);
  const parts =
  /* istanbul ignore next */
  (cov_2hqdskfdrz().s[31]++, value.split(`; csrfToken=`));
  /* istanbul ignore next */
  cov_2hqdskfdrz().s[32]++;
  if (parts.length === 2) {
    /* istanbul ignore next */
    cov_2hqdskfdrz().b[5][0]++;
    cov_2hqdskfdrz().s[33]++;
    return parts.pop()?.split(";").shift();
  } else
  /* istanbul ignore next */
  {
    cov_2hqdskfdrz().b[5][1]++;
  }
  cov_2hqdskfdrz().s[34]++;
  return undefined;
};
/* istanbul ignore next */
cov_2hqdskfdrz().s[35]++;
const authFetch = async (url, options =
/* istanbul ignore next */
(cov_2hqdskfdrz().b[6][0]++, {})) => {
  /* istanbul ignore next */
  cov_2hqdskfdrz().f[13]++;
  // Get token using the centralized method
  const token =
  /* istanbul ignore next */
  (cov_2hqdskfdrz().s[36]++, getAuthToken());
  /* istanbul ignore next */
  cov_2hqdskfdrz().s[37]++;
  if (!token) {
    /* istanbul ignore next */
    cov_2hqdskfdrz().b[7][0]++;
    cov_2hqdskfdrz().s[38]++;
    console.warn("No auth token found for request to:", url);
  } else {
    /* istanbul ignore next */
    cov_2hqdskfdrz().b[7][1]++;
    cov_2hqdskfdrz().s[39]++;
    console.log(`Making authenticated request to ${url} with token: ${token.substring(0, 10)}...`);
  }
  // Prepare headers with authentication
  const headers =
  /* istanbul ignore next */
  (cov_2hqdskfdrz().s[40]++, {
    ...(
    /* istanbul ignore next */
    (cov_2hqdskfdrz().b[8][0]++, options.headers) ||
    /* istanbul ignore next */
    (cov_2hqdskfdrz().b[8][1]++, {})),
    "Authorization": token ?
    /* istanbul ignore next */
    (cov_2hqdskfdrz().b[9][0]++, `Bearer ${token}`) :
    /* istanbul ignore next */
    (cov_2hqdskfdrz().b[9][1]++, "")
  });
  // If content type is not explicitly set and we're not sending FormData,
  // default to JSON content type
  /* istanbul ignore next */
  cov_2hqdskfdrz().s[41]++;
  if (
  /* istanbul ignore next */
  (cov_2hqdskfdrz().b[11][0]++, !options.headers?.hasOwnProperty("Content-Type")) &&
  /* istanbul ignore next */
  (cov_2hqdskfdrz().b[11][1]++, !(options.body instanceof FormData))) {
    /* istanbul ignore next */
    cov_2hqdskfdrz().b[10][0]++;
    cov_2hqdskfdrz().s[42]++;
    headers["Content-Type"] = "application/json";
  } else
  /* istanbul ignore next */
  {
    cov_2hqdskfdrz().b[10][1]++;
  }
  // Add CSRF token for non-GET requests
  cov_2hqdskfdrz().s[43]++;
  if (
  /* istanbul ignore next */
  (cov_2hqdskfdrz().b[13][0]++, options.method) &&
  /* istanbul ignore next */
  (cov_2hqdskfdrz().b[13][1]++, options.method !== "GET") &&
  /* istanbul ignore next */
  (cov_2hqdskfdrz().b[13][2]++, options.method !== "HEAD")) {
    /* istanbul ignore next */
    cov_2hqdskfdrz().b[12][0]++;
    const csrfToken =
    /* istanbul ignore next */
    (cov_2hqdskfdrz().s[44]++, getCsrfToken());
    /* istanbul ignore next */
    cov_2hqdskfdrz().s[45]++;
    if (csrfToken) {
      /* istanbul ignore next */
      cov_2hqdskfdrz().b[14][0]++;
      cov_2hqdskfdrz().s[46]++;
      headers["X-CSRF-Token"] = csrfToken;
    } else
    /* istanbul ignore next */
    {
      cov_2hqdskfdrz().b[14][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_2hqdskfdrz().b[12][1]++;
  }
  // Make the request with authentication header
  const response =
  /* istanbul ignore next */
  (cov_2hqdskfdrz().s[47]++, await fetch(url, {
    ...options,
    headers
  }));
  // If unauthorized and not on the login page, redirect to login
  /* istanbul ignore next */
  cov_2hqdskfdrz().s[48]++;
  if (
  /* istanbul ignore next */
  (cov_2hqdskfdrz().b[16][0]++, response.status === 401) &&
  /* istanbul ignore next */
  (cov_2hqdskfdrz().b[16][1]++, typeof window !== "undefined") &&
  /* istanbul ignore next */
  (cov_2hqdskfdrz().b[16][2]++, !window.location.pathname.includes("/login"))) {
    /* istanbul ignore next */
    cov_2hqdskfdrz().b[15][0]++;
    cov_2hqdskfdrz().s[49]++;
    console.warn("Authentication error (401) for request to:", url);
    // Don't clear localStorage - let the auth provider handle this
    /* istanbul ignore next */
    cov_2hqdskfdrz().s[50]++;
    window.location.href = "/login";
    /* istanbul ignore next */
    cov_2hqdskfdrz().s[51]++;
    return response;
  } else
  /* istanbul ignore next */
  {
    cov_2hqdskfdrz().b[15][1]++;
  }
  cov_2hqdskfdrz().s[52]++;
  return response;
};
/* istanbul ignore next */
cov_2hqdskfdrz().s[53]++;
const authGet = async (url, options =
/* istanbul ignore next */
(cov_2hqdskfdrz().b[17][0]++, {})) => {
  /* istanbul ignore next */
  cov_2hqdskfdrz().f[14]++;
  cov_2hqdskfdrz().s[54]++;
  return authFetch(url, {
    ...options,
    method: "GET"
  });
};
/* istanbul ignore next */
cov_2hqdskfdrz().s[55]++;
const authPost = async (url, data, options =
/* istanbul ignore next */
(cov_2hqdskfdrz().b[18][0]++, {})) => {
  /* istanbul ignore next */
  cov_2hqdskfdrz().f[15]++;
  cov_2hqdskfdrz().s[56]++;
  return authFetch(url, {
    ...options,
    method: "POST",
    body: JSON.stringify(data)
  });
};
/* istanbul ignore next */
cov_2hqdskfdrz().s[57]++;
const authPut = async (url, data, options =
/* istanbul ignore next */
(cov_2hqdskfdrz().b[19][0]++, {})) => {
  /* istanbul ignore next */
  cov_2hqdskfdrz().f[16]++;
  cov_2hqdskfdrz().s[58]++;
  return authFetch(url, {
    ...options,
    method: "PUT",
    body: JSON.stringify(data)
  });
};
/* istanbul ignore next */
cov_2hqdskfdrz().s[59]++;
const authDelete = async (url, options =
/* istanbul ignore next */
(cov_2hqdskfdrz().b[20][0]++, {})) => {
  /* istanbul ignore next */
  cov_2hqdskfdrz().f[17]++;
  cov_2hqdskfdrz().s[60]++;
  return authFetch(url, {
    ...options,
    method: "DELETE"
  });
};
/* istanbul ignore next */
cov_2hqdskfdrz().s[61]++;
const authPatch = async (url, data, options =
/* istanbul ignore next */
(cov_2hqdskfdrz().b[21][0]++, {})) => {
  /* istanbul ignore next */
  cov_2hqdskfdrz().f[18]++;
  cov_2hqdskfdrz().s[62]++;
  return authFetch(url, {
    ...options,
    method: "PATCH",
    body: JSON.stringify(data)
  });
};
/* istanbul ignore next */
cov_2hqdskfdrz().s[63]++;
const setupFetchInterceptor = () => {
  /* istanbul ignore next */
  cov_2hqdskfdrz().f[19]++;
  cov_2hqdskfdrz().s[64]++;
  if (typeof window !== "undefined") {
    /* istanbul ignore next */
    cov_2hqdskfdrz().b[22][0]++;
    const originalFetch =
    /* istanbul ignore next */
    (cov_2hqdskfdrz().s[65]++, window.fetch);
    /* istanbul ignore next */
    cov_2hqdskfdrz().s[66]++;
    window.fetch = async (url, options) => {
      /* istanbul ignore next */
      cov_2hqdskfdrz().f[20]++;
      // Only intercept API calls to our own API (starting with /api)
      const urlString =
      /* istanbul ignore next */
      (cov_2hqdskfdrz().s[67]++, url.toString());
      /* istanbul ignore next */
      cov_2hqdskfdrz().s[68]++;
      if (
      /* istanbul ignore next */
      (cov_2hqdskfdrz().b[24][0]++, urlString.startsWith("/api")) ||
      /* istanbul ignore next */
      (cov_2hqdskfdrz().b[24][1]++, urlString.startsWith(window.location.origin + "/api"))) {
        /* istanbul ignore next */
        cov_2hqdskfdrz().b[23][0]++;
        cov_2hqdskfdrz().s[69]++;
        options =
        /* istanbul ignore next */
        (cov_2hqdskfdrz().b[25][0]++, options) ||
        /* istanbul ignore next */
        (cov_2hqdskfdrz().b[25][1]++, {});
        /* istanbul ignore next */
        cov_2hqdskfdrz().s[70]++;
        options.headers =
        /* istanbul ignore next */
        (cov_2hqdskfdrz().b[26][0]++, options.headers) ||
        /* istanbul ignore next */
        (cov_2hqdskfdrz().b[26][1]++, {});
        // Cast headers to any to allow string indexing
        const headers =
        /* istanbul ignore next */
        (cov_2hqdskfdrz().s[71]++, options.headers);
        // Add authentication header if token exists
        const token =
        /* istanbul ignore next */
        (cov_2hqdskfdrz().s[72]++, getAuthToken());
        /* istanbul ignore next */
        cov_2hqdskfdrz().s[73]++;
        if (
        /* istanbul ignore next */
        (cov_2hqdskfdrz().b[28][0]++, token) &&
        /* istanbul ignore next */
        (cov_2hqdskfdrz().b[28][1]++, !headers["Authorization"])) {
          /* istanbul ignore next */
          cov_2hqdskfdrz().b[27][0]++;
          cov_2hqdskfdrz().s[74]++;
          headers["Authorization"] = `Bearer ${token}`;
        } else
        /* istanbul ignore next */
        {
          cov_2hqdskfdrz().b[27][1]++;
        }
        // Add CSRF token for non-GET requests
        cov_2hqdskfdrz().s[75]++;
        if (
        /* istanbul ignore next */
        (cov_2hqdskfdrz().b[30][0]++, options.method) &&
        /* istanbul ignore next */
        (cov_2hqdskfdrz().b[30][1]++, options.method !== "GET") &&
        /* istanbul ignore next */
        (cov_2hqdskfdrz().b[30][2]++, options.method !== "HEAD")) {
          /* istanbul ignore next */
          cov_2hqdskfdrz().b[29][0]++;
          const csrfToken =
          /* istanbul ignore next */
          (cov_2hqdskfdrz().s[76]++, getCsrfToken());
          /* istanbul ignore next */
          cov_2hqdskfdrz().s[77]++;
          if (
          /* istanbul ignore next */
          (cov_2hqdskfdrz().b[32][0]++, csrfToken) &&
          /* istanbul ignore next */
          (cov_2hqdskfdrz().b[32][1]++, !headers["X-CSRF-Token"])) {
            /* istanbul ignore next */
            cov_2hqdskfdrz().b[31][0]++;
            cov_2hqdskfdrz().s[78]++;
            headers["X-CSRF-Token"] = csrfToken;
            /* istanbul ignore next */
            cov_2hqdskfdrz().s[79]++;
            console.log(`Adding CSRF token for ${options.method} request to ${urlString}`);
          } else
          /* istanbul ignore next */
          {
            cov_2hqdskfdrz().b[31][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_2hqdskfdrz().b[29][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_2hqdskfdrz().b[23][1]++;
      }
      cov_2hqdskfdrz().s[80]++;
      return originalFetch(url, options);
    };
    /* istanbul ignore next */
    cov_2hqdskfdrz().s[81]++;
    console.log("Fetch interceptor set up successfully");
  } else
  /* istanbul ignore next */
  {
    cov_2hqdskfdrz().b[22][1]++;
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,