0cd98354a363b855db6cb47223c66d7f
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return MainLayout;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _link = /*#__PURE__*/ _interop_require_default(require("next/link"));
const _navigation = require("next/navigation");
const _useAuth = require("../../hooks/useAuth");
const _QueryProvider = require("../../context/QueryProvider");
const _permissions = require("../../lib/utils/permissions");
const _lucidereact = require("lucide-react");
const _cn = require("../../lib/utils/cn");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const navItems = [
    {
        icon: _lucidereact.Home,
        href: "/dashboard",
        label: "Dashboard",
        requiredPermission: "dashboard:view"
    },
    {
        icon: _lucidereact.Package,
        href: "/inventory",
        label: "Inventory",
        children: [
            {
                icon: _lucidereact.Package,
                href: "/inventory",
                label: "All Products",
                requiredPermission: "inventory:view"
            },
            {
                icon: _lucidereact.TruckIcon,
                href: "/inventory/transfers",
                label: "Transfers",
                requiredPermission: "inventory:transfer"
            }
        ]
    },
    {
        icon: _lucidereact.Store,
        href: "/inventory/distribution",
        label: "Shop Distribution",
        requiredPermission: "shop:distribution:view"
    },
    {
        icon: _lucidereact.Store,
        href: "/shops",
        label: "Shops",
        requiredPermission: "shop:view"
    },
    {
        icon: _lucidereact.Users,
        href: "/customers",
        label: "Customers",
        requiredPermission: "customer:view"
    },
    {
        icon: _lucidereact.FileText,
        href: "/invoices",
        label: "Sales Invoices",
        requiredPermission: "invoice:view"
    },
    {
        icon: _lucidereact.ClipboardIcon,
        href: "/quotations",
        label: "Quotations",
        requiredPermission: "quotation:view"
    },
    {
        icon: _lucidereact.WalletIcon,
        href: "/purchases",
        label: "Purchases",
        requiredPermission: "purchase:view"
    },
    {
        icon: _lucidereact.TruckIcon,
        href: "/suppliers",
        label: "Suppliers",
        requiredPermission: "supplier:view"
    },
    {
        icon: _lucidereact.CreditCard,
        href: "/payments",
        label: "Payments",
        requiredPermission: "payment:view"
    },
    {
        icon: _lucidereact.Receipt,
        href: "/receipts",
        label: "Receipts",
        requiredPermission: "receipt:view"
    },
    {
        icon: _lucidereact.Calculator,
        href: "/accounting",
        label: "Accounting",
        requiredPermission: "accounting:view"
    },
    {
        icon: _lucidereact.BarChart2,
        href: "/reports",
        label: "Reports",
        requiredPermission: "report:view"
    },
    {
        icon: _lucidereact.History,
        href: "/audit-trail",
        label: "Audit Trail",
        requiredPermission: "audit:view"
    },
    {
        icon: _lucidereact.Settings,
        href: "/settings",
        label: "Settings"
    }
];
function MainLayout({ children }) {
    const [isSidebarOpen, setIsSidebarOpen] = (0, _react.useState)(true);
    const [expandedItems, setExpandedItems] = (0, _react.useState)([
        "/inventory"
    ]); // Auto-expand Inventory by default
    const pathname = (0, _navigation.usePathname)();
    const { logout, user } = (0, _useAuth.useAuth)();
    const toggleSidebar = ()=>setIsSidebarOpen(!isSidebarOpen);
    const toggleSubmenu = (itemHref)=>{
        setExpandedItems((prev)=>prev.includes(itemHref) ? prev.filter((href)=>href !== itemHref) : [
                ...prev,
                itemHref
            ]);
    };
    // Auto-expand parent menu if current path is a child
    (0, _react.useEffect)(()=>{
        navItems.forEach((item)=>{
            if (item.children && item.children.some((child)=>child.href === pathname)) {
                if (!expandedItems.includes(item.href)) {
                    setExpandedItems((prev)=>[
                            ...prev,
                            item.href
                        ]);
                }
            }
        });
    }, [
        pathname
    ]);
    // Handle sign out
    const handleSignOut = ()=>{
        logout();
    };
    // Check if user has the required permission for a menu item
    const checkUserPermission = (requiredPermission)=>{
        if (!requiredPermission) return true; // No permission required
        // --- Start of new logging ---
        console.log("[MainLayout] Checking permission. Required:", requiredPermission, "User object:", JSON.parse(JSON.stringify(user || null)), "User permissions array:", user?.permissions);
        // --- End of new logging ---
        if (!user) {
            console.log("[MainLayout] User is null or undefined.");
            return false;
        }
        if (!user.permissions || !Array.isArray(user.permissions)) {
            console.log("[MainLayout] User permissions is not an array:", user.permissions);
            return false; // No permissions available or invalid permissions
        }
        // Use standardized permission checking from imported utility
        const hasPerm = (0, _permissions.hasPermission)(user.permissions, requiredPermission);
        console.log("[MainLayout] Permission check result for ", requiredPermission, ":", hasPerm);
        return hasPerm;
    };
    // Filter navigation items based on user permissions
    const getAuthorizedNavItems = ()=>{
        return navItems.map((item)=>{
            // Handle items with children
            if (item.children) {
                const authorizedChildren = item.children.filter((child)=>checkUserPermission(child.requiredPermission));
                // If a parent item has a specific permission, it must be met.
                // If it doesn't, it should be shown if any of its children are visible.
                const parentHasAccess = item.requiredPermission ? checkUserPermission(item.requiredPermission) : true;
                if (authorizedChildren.length > 0 && parentHasAccess) {
                    // If the parent's requiredPermission is generic (like 'inventory:view')
                    // and the user has access to children, we show the parent.
                    // This logic is simplified by just checking if there are children.
                    return {
                        ...item,
                        children: authorizedChildren
                    };
                }
                return null;
            }
            // For items without children
            const itemAccess = checkUserPermission(item.requiredPermission);
            return itemAccess ? item : null;
        }).filter((item)=>item !== null);
    };
    const authorizedNavItems = getAuthorizedNavItems();
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_QueryProvider.QueryProvider, {
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: "min-h-screen bg-gray-100",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("aside", {
                    className: (0, _cn.cn)("fixed inset-y-0 left-0 z-40 w-64 bg-secondary text-tertiary transform transition-transform duration-300 ease-in-out flex flex-col", isSidebarOpen ? "translate-x-0" : "-translate-x-full", "md:translate-x-0"),
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center justify-between h-16 px-4 border-b border-gray-800 flex-shrink-0",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "flex items-center",
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                        className: "text-xl font-bold text-primary",
                                        children: "MS Sport"
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                    className: "md:hidden text-tertiary hover:text-primary",
                                    onClick: toggleSidebar,
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.X, {
                                        size: 24
                                    })
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "flex-1 overflow-y-auto",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("nav", {
                                className: "mt-6 px-2",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("ul", {
                                    className: "space-y-1",
                                    children: authorizedNavItems.map((item)=>{
                                        const Icon = item.icon;
                                        const isActive = pathname === item.href;
                                        const isExpanded = expandedItems.includes(item.href);
                                        const hasActiveChild = item.children?.some((child)=>pathname === child.href);
                                        const isParentActive = isActive || hasActiveChild;
                                        // Filter children based on permissions
                                        const authorizedChildren = item.children?.filter((child)=>checkUserPermission(child.requiredPermission)) || [];
                                        return /*#__PURE__*/ (0, _jsxruntime.jsx)("li", {
                                            className: item.children ? "mb-1" : "",
                                            children: item.children && authorizedChildren.length > 0 ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                        className: "flex",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_link.default, {
                                                                href: item.href,
                                                                className: (0, _cn.cn)("flex-grow flex items-center px-4 py-3 rounded-l-md transition-colors", isParentActive ? "bg-primary text-tertiary" : "text-gray-300 hover:bg-gray-800 hover:text-tertiary"),
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(Icon, {
                                                                        className: "mr-3 h-5 w-5"
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                        children: item.label
                                                                    })
                                                                ]
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                                onClick: ()=>toggleSubmenu(item.href),
                                                                className: (0, _cn.cn)("w-10 flex items-center justify-center rounded-r-md transition-colors", isParentActive ? "bg-primary text-tertiary" : "text-gray-300 hover:bg-gray-800 hover:text-tertiary"),
                                                                "aria-label": "Toggle submenu",
                                                                children: isExpanded ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.ChevronDown, {
                                                                    className: "h-4 w-4"
                                                                }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.ChevronRight, {
                                                                    className: "h-4 w-4"
                                                                })
                                                            })
                                                        ]
                                                    }),
                                                    isExpanded && /*#__PURE__*/ (0, _jsxruntime.jsx)("ul", {
                                                        className: "mt-1 ml-6 space-y-1",
                                                        children: authorizedChildren.map((child)=>{
                                                            const ChildIcon = child.icon;
                                                            const isChildActive = pathname === child.href;
                                                            return /*#__PURE__*/ (0, _jsxruntime.jsx)("li", {
                                                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_link.default, {
                                                                    href: child.href,
                                                                    className: (0, _cn.cn)("flex items-center px-4 py-2 rounded-md transition-colors", isChildActive ? "bg-gray-700 text-tertiary" : "text-gray-300 hover:bg-gray-800 hover:text-tertiary"),
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(ChildIcon, {
                                                                            className: "mr-3 h-4 w-4"
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                            children: child.label
                                                                        })
                                                                    ]
                                                                })
                                                            }, child.href);
                                                        })
                                                    })
                                                ]
                                            }) : /*#__PURE__*/ (0, _jsxruntime.jsxs)(_link.default, {
                                                href: item.href,
                                                className: (0, _cn.cn)("flex items-center px-4 py-3 rounded-md transition-colors", isActive ? "bg-primary text-tertiary" : "text-gray-300 hover:bg-gray-800 hover:text-tertiary"),
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(Icon, {
                                                        className: "mr-3 h-5 w-5"
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                        children: item.label
                                                    })
                                                ]
                                            })
                                        }, item.href);
                                    })
                                })
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "p-4 border-t border-gray-800 bg-secondary flex-shrink-0",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("button", {
                                className: "flex items-center justify-center w-full px-4 py-2 text-sm text-gray-300 hover:text-tertiary hover:bg-gray-800 rounded-md transition-colors",
                                onClick: handleSignOut,
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.LogOut, {
                                        className: "mr-2 h-4 w-4"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                        children: "Sign out"
                                    })
                                ]
                            })
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: (0, _cn.cn)("transition-all duration-300", isSidebarOpen ? "md:ml-64" : ""),
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("header", {
                            className: "bg-tertiary shadow",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center justify-between h-16 px-4",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex items-center",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                className: "mr-4 text-secondary md:hidden",
                                                onClick: toggleSidebar,
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Menu, {
                                                    size: 24
                                                })
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("h1", {
                                                className: "text-xl font-semibold text-gray-800",
                                                children: pathname === "/" ? "Dashboard" : authorizedNavItems.flatMap((item)=>[
                                                        item,
                                                        ...item.children || []
                                                    ]).find((item)=>pathname === item.href)?.label || "Dashboard"
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "flex items-center",
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "ml-3 relative",
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                className: "flex items-center space-x-2",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                        className: "text-sm font-medium text-gray-700",
                                                        children: user?.fullName || "Admin User"
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                        className: "h-8 w-8 rounded-full bg-gray-500 flex items-center justify-center text-tertiary",
                                                        children: user?.fullName?.charAt(0) || "A"
                                                    })
                                                ]
                                            })
                                        })
                                    })
                                ]
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("main", {
                            className: "p-6",
                            children: children
                        })
                    ]
                })
            ]
        })
    });
}

//# sourceMappingURL=data:application/json;base64,