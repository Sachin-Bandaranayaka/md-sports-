32622e9536f84a4d6ee0419037843874
"use strict";

/* istanbul ignore next */
function cov_rqso4effi() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/receipts/page.tsx";
  var hash = "8cce11c3540d7e32c47fac5df85a04df05361cce";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/receipts/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 28
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "6": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 48
        }
      },
      "7": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "8": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 43
        }
      },
      "9": {
        start: {
          line: 22,
          column: 45
        },
        end: {
          line: 22,
          column: 116
        }
      },
      "10": {
        start: {
          line: 23,
          column: 21
        },
        end: {
          line: 23,
          column: 44
        }
      },
      "11": {
        start: {
          line: 24,
          column: 34
        },
        end: {
          line: 24,
          column: 105
        }
      },
      "12": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 28,
          column: 6
        }
      },
      "13": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 44,
          column: 7
        }
      },
      "14": {
        start: {
          line: 46,
          column: 17
        },
        end: {
          line: 49,
          column: 1
        }
      },
      "15": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 147,
          column: 5
        }
      },
      "16": {
        start: {
          line: 53,
          column: 25
        },
        end: {
          line: 97,
          column: 10
        }
      },
      "17": {
        start: {
          line: 99,
          column: 30
        },
        end: {
          line: 128,
          column: 10
        }
      },
      "18": {
        start: {
          line: 130,
          column: 34
        },
        end: {
          line: 133,
          column: 15
        }
      },
      "19": {
        start: {
          line: 130,
          column: 59
        },
        end: {
          line: 133,
          column: 13
        }
      },
      "20": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 139,
          column: 10
        }
      },
      "21": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 57
        }
      },
      "22": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 146,
          column: 10
        }
      },
      "23": {
        start: {
          line: 150,
          column: 17
        },
        end: {
          line: 150,
          column: 69
        }
      },
      "24": {
        start: {
          line: 151,
          column: 19
        },
        end: {
          line: 151,
          column: 45
        }
      },
      "25": {
        start: {
          line: 152,
          column: 50
        },
        end: {
          line: 152,
          column: 85
        }
      },
      "26": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 171,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 13
          },
          end: {
            line: 12,
            column: 14
          }
        },
        loc: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 14
          },
          end: {
            line: 15,
            column: 15
          }
        },
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 33
          }
        },
        loc: {
          start: {
            line: 25,
            column: 39
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 25
      },
      "4": {
        name: "LoadingSpinner",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 23
          }
        },
        loc: {
          start: {
            line: 31,
            column: 26
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 31
      },
      "5": {
        name: "getReceipts",
        decl: {
          start: {
            line: 50,
            column: 15
          },
          end: {
            line: 50,
            column: 26
          }
        },
        loc: {
          start: {
            line: 50,
            column: 62
          },
          end: {
            line: 148,
            column: 1
          }
        },
        line: 50
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 130,
            column: 47
          },
          end: {
            line: 130,
            column: 48
          }
        },
        loc: {
          start: {
            line: 130,
            column: 59
          },
          end: {
            line: 133,
            column: 13
          }
        },
        line: 130
      },
      "7": {
        name: "ReceiptsPage",
        decl: {
          start: {
            line: 149,
            column: 15
          },
          end: {
            line: 149,
            column: 27
          }
        },
        loc: {
          start: {
            line: 149,
            column: 46
          },
          end: {
            line: 172,
            column: 1
          }
        },
        line: 149
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 35
          },
          end: {
            line: 26,
            column: 38
          }
        }, {
          start: {
            line: 26,
            column: 41
          },
          end: {
            line: 28,
            column: 5
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 26,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 26,
            column: 14
          }
        }, {
          start: {
            line: 26,
            column: 18
          },
          end: {
            line: 26,
            column: 32
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 50,
            column: 27
          },
          end: {
            line: 50,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 50,
            column: 34
          },
          end: {
            line: 50,
            column: 35
          }
        }],
        line: 50
      },
      "3": {
        loc: {
          start: {
            line: 50,
            column: 37
          },
          end: {
            line: 50,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 50,
            column: 45
          },
          end: {
            line: 50,
            column: 47
          }
        }],
        line: 50
      },
      "4": {
        loc: {
          start: {
            line: 50,
            column: 49
          },
          end: {
            line: 50,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 50,
            column: 58
          },
          end: {
            line: 50,
            column: 60
          }
        }],
        line: 50
      },
      "5": {
        loc: {
          start: {
            line: 54,
            column: 19
          },
          end: {
            line: 81,
            column: 18
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 54,
            column: 28
          },
          end: {
            line: 81,
            column: 13
          }
        }, {
          start: {
            line: 81,
            column: 16
          },
          end: {
            line: 81,
            column: 18
          }
        }],
        line: 54
      },
      "6": {
        loc: {
          start: {
            line: 100,
            column: 19
          },
          end: {
            line: 127,
            column: 18
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 100,
            column: 28
          },
          end: {
            line: 127,
            column: 13
          }
        }, {
          start: {
            line: 127,
            column: 16
          },
          end: {
            line: 127,
            column: 18
          }
        }],
        line: 100
      },
      "7": {
        loc: {
          start: {
            line: 150,
            column: 17
          },
          end: {
            line: 150,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 150,
            column: 38
          },
          end: {
            line: 150,
            column: 65
          }
        }, {
          start: {
            line: 150,
            column: 68
          },
          end: {
            line: 150,
            column: 69
          }
        }],
        line: 150
      },
      "8": {
        loc: {
          start: {
            line: 151,
            column: 19
          },
          end: {
            line: 151,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 19
          },
          end: {
            line: 151,
            column: 39
          }
        }, {
          start: {
            line: 151,
            column: 43
          },
          end: {
            line: 151,
            column: 45
          }
        }],
        line: 151
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/receipts/page.tsx"],
      sourcesContent: ["import { Suspense } from 'react';\nimport { prisma } from '@/lib/prisma';\nimport ReceiptsClientWrapper from './components/ReceiptsClientWrapper';\nimport { Metadata } from 'next';\nimport { Loader2 } from 'lucide-react';\nimport MainLayout from '@/components/layout/MainLayout';\n\n// Simple loading component\nfunction LoadingSpinner() {\n    return (\n        <div className=\"flex justify-center items-center h-64\">\n            <Loader2 className=\"animate-spin text-primary\" size={48} />\n            <p className=\"ml-3 text-lg text-gray-600\">Loading receipts...</p>\n        </div>\n    );\n}\n\nexport const metadata: Metadata = {\n    title: 'Receipts | MS Sports',\n    description: 'View and manage all payment receipts'\n};\n\nasync function getReceipts(page = 1, limit = 10, search = '') {\n    try {\n        // Get receipts with pagination\n        const receipts = await prisma.receipt.findMany({\n            where: search ? {\n                OR: [\n                    { receiptNumber: { contains: search, mode: 'insensitive' } },\n                    { payment: { referenceNumber: { contains: search, mode: 'insensitive' } } },\n                    { payment: { customer: { name: { contains: search, mode: 'insensitive' } } } }\n                ]\n            } : {},\n            include: {\n                payment: {\n                    include: {\n                        customer: true,\n                        invoice: true,\n                        account: true\n                    }\n                },\n                confirmedByUser: true\n            },\n            orderBy: { createdAt: 'desc' },\n            skip: (page - 1) * limit,\n            take: limit\n        });\n\n        // Get total count for pagination\n        const totalReceipts = await prisma.receipt.count({\n            where: search ? {\n                OR: [\n                    { receiptNumber: { contains: search, mode: 'insensitive' } },\n                    { payment: { referenceNumber: { contains: search, mode: 'insensitive' } } },\n                    { payment: { customer: { name: { contains: search, mode: 'insensitive' } } } }\n                ]\n            } : {}\n        });\n\n        // Convert receiptDate from Date to string to match the Receipt interface\n        const formattedReceipts = receipts.map(receipt => ({\n            ...receipt,\n            receiptDate: receipt.receiptDate.toISOString().split('T')[0] // Convert Date to YYYY-MM-DD string\n        }));\n\n        return {\n            receipts: formattedReceipts,\n            totalReceipts,\n            totalPages: Math.ceil(totalReceipts / limit),\n            currentPage: page\n        };\n    } catch (error) {\n        console.error('Error fetching receipts:', error);\n        return {\n            receipts: [],\n            totalPages: 0,\n            currentPage: 1\n        };\n    }\n}\n\nexport default async function ReceiptsPage({\n    searchParams\n}: {\n    searchParams?: { page?: string; search?: string };\n}) {\n    const page = searchParams?.page ? parseInt(searchParams.page) : 1;\n    const search = searchParams?.search || '';\n    const { receipts, totalPages, currentPage } = await getReceipts(page, 10, search);\n\n    return (\n        <MainLayout>\n            <div>\n                <h1 className=\"text-2xl font-bold text-black mb-6\">Payment Receipts</h1>\n\n                <Suspense fallback={<LoadingSpinner />}>\n                    <ReceiptsClientWrapper\n                        initialReceipts={receipts}\n                        initialTotalPages={totalPages}\n                        initialCurrentPage={currentPage}\n                        initialSearch={search}\n                    />\n                </Suspense>\n            </div>\n        </MainLayout>\n    );\n}"],
      names: ["ReceiptsPage", "metadata", "LoadingSpinner", "div", "className", "Loader2", "size", "p", "title", "description", "getReceipts", "page", "limit", "search", "receipts", "prisma", "receipt", "findMany", "where", "OR", "receiptNumber", "contains", "mode", "payment", "referenceNumber", "customer", "name", "include", "invoice", "account", "confirmedByUser", "orderBy", "createdAt", "skip", "take", "totalReceipts", "count", "formattedReceipts", "map", "receiptDate", "toISOString", "split", "totalPages", "Math", "ceil", "currentPage", "error", "console", "searchParams", "parseInt", "MainLayout", "h1", "Suspense", "fallback", "ReceiptsClientWrapper", "initialReceipts", "initialTotalPages", "initialCurrentPage", "initialSearch"],
      mappings: ";;;;;;;;;;;IAiFA,OAyBC;eAzB6BA;;IAhEjBC,QAAQ;eAARA;;;;uBAjBY;wBACF;8EACW;6BAEV;mEACD;;;;;;AAEvB,2BAA2B;AAC3B,SAASC;IACL,qBACI,sBAACC;QAAIC,WAAU;;0BACX,qBAACC,oBAAO;gBAACD,WAAU;gBAA4BE,MAAM;;0BACrD,qBAACC;gBAAEH,WAAU;0BAA6B;;;;AAGtD;AAEO,MAAMH,WAAqB;IAC9BO,OAAO;IACPC,aAAa;AACjB;AAEA,eAAeC,YAAYC,OAAO,CAAC,EAAEC,QAAQ,EAAE,EAAEC,SAAS,EAAE;IACxD,IAAI;QACA,+BAA+B;QAC/B,MAAMC,WAAW,MAAMC,cAAM,CAACC,OAAO,CAACC,QAAQ,CAAC;YAC3CC,OAAOL,SAAS;gBACZM,IAAI;oBACA;wBAAEC,eAAe;4BAAEC,UAAUR;4BAAQS,MAAM;wBAAc;oBAAE;oBAC3D;wBAAEC,SAAS;4BAAEC,iBAAiB;gCAAEH,UAAUR;gCAAQS,MAAM;4BAAc;wBAAE;oBAAE;oBAC1E;wBAAEC,SAAS;4BAAEE,UAAU;gCAAEC,MAAM;oCAAEL,UAAUR;oCAAQS,MAAM;gCAAc;4BAAE;wBAAE;oBAAE;iBAChF;YACL,IAAI,CAAC;YACLK,SAAS;gBACLJ,SAAS;oBACLI,SAAS;wBACLF,UAAU;wBACVG,SAAS;wBACTC,SAAS;oBACb;gBACJ;gBACAC,iBAAiB;YACrB;YACAC,SAAS;gBAAEC,WAAW;YAAO;YAC7BC,MAAM,AAACtB,CAAAA,OAAO,CAAA,IAAKC;YACnBsB,MAAMtB;QACV;QAEA,iCAAiC;QACjC,MAAMuB,gBAAgB,MAAMpB,cAAM,CAACC,OAAO,CAACoB,KAAK,CAAC;YAC7ClB,OAAOL,SAAS;gBACZM,IAAI;oBACA;wBAAEC,eAAe;4BAAEC,UAAUR;4BAAQS,MAAM;wBAAc;oBAAE;oBAC3D;wBAAEC,SAAS;4BAAEC,iBAAiB;gCAAEH,UAAUR;gCAAQS,MAAM;4BAAc;wBAAE;oBAAE;oBAC1E;wBAAEC,SAAS;4BAAEE,UAAU;gCAAEC,MAAM;oCAAEL,UAAUR;oCAAQS,MAAM;gCAAc;4BAAE;wBAAE;oBAAE;iBAChF;YACL,IAAI,CAAC;QACT;QAEA,yEAAyE;QACzE,MAAMe,oBAAoBvB,SAASwB,GAAG,CAACtB,CAAAA,UAAY,CAAA;gBAC/C,GAAGA,OAAO;gBACVuB,aAAavB,QAAQuB,WAAW,CAACC,WAAW,GAAGC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,oCAAoC;YACrG,CAAA;QAEA,OAAO;YACH3B,UAAUuB;YACVF;YACAO,YAAYC,KAAKC,IAAI,CAACT,gBAAgBvB;YACtCiC,aAAalC;QACjB;IACJ,EAAE,OAAOmC,OAAO;QACZC,QAAQD,KAAK,CAAC,4BAA4BA;QAC1C,OAAO;YACHhC,UAAU,EAAE;YACZ4B,YAAY;YACZG,aAAa;QACjB;IACJ;AACJ;AAEe,eAAe7C,aAAa,EACvCgD,YAAY,EAGf;IACG,MAAMrC,OAAOqC,cAAcrC,OAAOsC,SAASD,aAAarC,IAAI,IAAI;IAChE,MAAME,SAASmC,cAAcnC,UAAU;IACvC,MAAM,EAAEC,QAAQ,EAAE4B,UAAU,EAAEG,WAAW,EAAE,GAAG,MAAMnC,YAAYC,MAAM,IAAIE;IAE1E,qBACI,qBAACqC,mBAAU;kBACP,cAAA,sBAAC/C;;8BACG,qBAACgD;oBAAG/C,WAAU;8BAAqC;;8BAEnD,qBAACgD,eAAQ;oBAACC,wBAAU,qBAACnD;8BACjB,cAAA,qBAACoD,8BAAqB;wBAClBC,iBAAiBzC;wBACjB0C,mBAAmBd;wBACnBe,oBAAoBZ;wBACpBa,eAAe7C;;;;;;AAMvC"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8cce11c3540d7e32c47fac5df85a04df05361cce"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_rqso4effi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_rqso4effi();
cov_rqso4effi().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_rqso4effi().f[0]++;
  cov_rqso4effi().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_rqso4effi().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_rqso4effi().s[3]++;
_export(exports, {
  default: function () {
    /* istanbul ignore next */
    cov_rqso4effi().f[1]++;
    cov_rqso4effi().s[4]++;
    return ReceiptsPage;
  },
  metadata: function () {
    /* istanbul ignore next */
    cov_rqso4effi().f[2]++;
    cov_rqso4effi().s[5]++;
    return metadata;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_rqso4effi().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_rqso4effi().s[7]++, require("react"));
const _prisma =
/* istanbul ignore next */
(cov_rqso4effi().s[8]++, require("../../lib/prisma"));
const _ReceiptsClientWrapper =
/* istanbul ignore next */
(/*#__PURE__*/cov_rqso4effi().s[9]++, _interop_require_default(require("./components/ReceiptsClientWrapper")));
const _lucidereact =
/* istanbul ignore next */
(cov_rqso4effi().s[10]++, require("lucide-react"));
const _MainLayout =
/* istanbul ignore next */
(/*#__PURE__*/cov_rqso4effi().s[11]++, _interop_require_default(require("../../components/layout/MainLayout")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_rqso4effi().f[3]++;
  cov_rqso4effi().s[12]++;
  return /* istanbul ignore next */(cov_rqso4effi().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_rqso4effi().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_rqso4effi().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_rqso4effi().b[0][1]++, {
    default: obj
  });
}
// Simple loading component
function LoadingSpinner() {
  /* istanbul ignore next */
  cov_rqso4effi().f[4]++;
  cov_rqso4effi().s[13]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "flex justify-center items-center h-64",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Loader2, {
      className: "animate-spin text-primary",
      size: 48
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
      className: "ml-3 text-lg text-gray-600",
      children: "Loading receipts..."
    })]
  });
}
const metadata =
/* istanbul ignore next */
(cov_rqso4effi().s[14]++, {
  title: "Receipts | MS Sports",
  description: "View and manage all payment receipts"
});
async function getReceipts(page =
/* istanbul ignore next */
(cov_rqso4effi().b[2][0]++, 1), limit =
/* istanbul ignore next */
(cov_rqso4effi().b[3][0]++, 10), search =
/* istanbul ignore next */
(cov_rqso4effi().b[4][0]++, "")) {
  /* istanbul ignore next */
  cov_rqso4effi().f[5]++;
  cov_rqso4effi().s[15]++;
  try {
    // Get receipts with pagination
    const receipts =
    /* istanbul ignore next */
    (cov_rqso4effi().s[16]++, await _prisma.prisma.receipt.findMany({
      where: search ?
      /* istanbul ignore next */
      (cov_rqso4effi().b[5][0]++, {
        OR: [{
          receiptNumber: {
            contains: search,
            mode: "insensitive"
          }
        }, {
          payment: {
            referenceNumber: {
              contains: search,
              mode: "insensitive"
            }
          }
        }, {
          payment: {
            customer: {
              name: {
                contains: search,
                mode: "insensitive"
              }
            }
          }
        }]
      }) :
      /* istanbul ignore next */
      (cov_rqso4effi().b[5][1]++, {}),
      include: {
        payment: {
          include: {
            customer: true,
            invoice: true,
            account: true
          }
        },
        confirmedByUser: true
      },
      orderBy: {
        createdAt: "desc"
      },
      skip: (page - 1) * limit,
      take: limit
    }));
    // Get total count for pagination
    const totalReceipts =
    /* istanbul ignore next */
    (cov_rqso4effi().s[17]++, await _prisma.prisma.receipt.count({
      where: search ?
      /* istanbul ignore next */
      (cov_rqso4effi().b[6][0]++, {
        OR: [{
          receiptNumber: {
            contains: search,
            mode: "insensitive"
          }
        }, {
          payment: {
            referenceNumber: {
              contains: search,
              mode: "insensitive"
            }
          }
        }, {
          payment: {
            customer: {
              name: {
                contains: search,
                mode: "insensitive"
              }
            }
          }
        }]
      }) :
      /* istanbul ignore next */
      (cov_rqso4effi().b[6][1]++, {})
    }));
    // Convert receiptDate from Date to string to match the Receipt interface
    const formattedReceipts =
    /* istanbul ignore next */
    (cov_rqso4effi().s[18]++, receipts.map(receipt => {
      /* istanbul ignore next */
      cov_rqso4effi().f[6]++;
      cov_rqso4effi().s[19]++;
      return {
        ...receipt,
        receiptDate: receipt.receiptDate.toISOString().split("T")[0] // Convert Date to YYYY-MM-DD string
      };
    }));
    /* istanbul ignore next */
    cov_rqso4effi().s[20]++;
    return {
      receipts: formattedReceipts,
      totalReceipts,
      totalPages: Math.ceil(totalReceipts / limit),
      currentPage: page
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_rqso4effi().s[21]++;
    console.error("Error fetching receipts:", error);
    /* istanbul ignore next */
    cov_rqso4effi().s[22]++;
    return {
      receipts: [],
      totalPages: 0,
      currentPage: 1
    };
  }
}
async function ReceiptsPage({
  searchParams
}) {
  /* istanbul ignore next */
  cov_rqso4effi().f[7]++;
  const page =
  /* istanbul ignore next */
  (cov_rqso4effi().s[23]++, searchParams?.page ?
  /* istanbul ignore next */
  (cov_rqso4effi().b[7][0]++, parseInt(searchParams.page)) :
  /* istanbul ignore next */
  (cov_rqso4effi().b[7][1]++, 1));
  const search =
  /* istanbul ignore next */
  (cov_rqso4effi().s[24]++,
  /* istanbul ignore next */
  (cov_rqso4effi().b[8][0]++, searchParams?.search) ||
  /* istanbul ignore next */
  (cov_rqso4effi().b[8][1]++, ""));
  const {
    receipts,
    totalPages,
    currentPage
  } =
  /* istanbul ignore next */
  (cov_rqso4effi().s[25]++, await getReceipts(page, 10, search));
  /* istanbul ignore next */
  cov_rqso4effi().s[26]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_MainLayout.default, {
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
        className: "text-2xl font-bold text-black mb-6",
        children: "Payment Receipts"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_react.Suspense, {
        fallback: /*#__PURE__*/(0, _jsxruntime.jsx)(LoadingSpinner, {}),
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_ReceiptsClientWrapper.default, {
          initialReceipts: receipts,
          initialTotalPages: totalPages,
          initialCurrentPage: currentPage,
          initialSearch: search
        })
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,