aa6f533a7a6c7b8c7fedb254aeac1132
"use strict";

/* istanbul ignore next */
function cov_1pujughijs() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/inventory/route.ts";
  var hash = "8679c29c562674ef8f99539d7f354fb1c36a58c9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/inventory/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 20
        }
      },
      "6": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "7": {
        start: {
          line: 20,
          column: 26
        },
        end: {
          line: 20,
          column: 80
        }
      },
      "8": {
        start: {
          line: 21,
          column: 24
        },
        end: {
          line: 21,
          column: 68
        }
      },
      "9": {
        start: {
          line: 22,
          column: 22
        },
        end: {
          line: 22,
          column: 70
        }
      },
      "10": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 6
        }
      },
      "11": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 121,
          column: 16
        }
      },
      "12": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "13": {
        start: {
          line: 33,
          column: 37
        },
        end: {
          line: 33,
          column: 57
        }
      },
      "14": {
        start: {
          line: 34,
          column: 30
        },
        end: {
          line: 34,
          column: 59
        }
      },
      "15": {
        start: {
          line: 35,
          column: 31
        },
        end: {
          line: 35,
          column: 61
        }
      },
      "16": {
        start: {
          line: 36,
          column: 29
        },
        end: {
          line: 36,
          column: 68
        }
      },
      "17": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 42,
          column: 15
        }
      },
      "18": {
        start: {
          line: 44,
          column: 24
        },
        end: {
          line: 73,
          column: 13
        }
      },
      "19": {
        start: {
          line: 75,
          column: 27
        },
        end: {
          line: 75,
          column: 29
        }
      },
      "20": {
        start: {
          line: 76,
          column: 29
        },
        end: {
          line: 76,
          column: 30
        }
      },
      "21": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 82,
          column: 13
        }
      },
      "22": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 59
        }
      },
      "23": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 44
        }
      },
      "24": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 29
        }
      },
      "25": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 87,
          column: 13
        }
      },
      "26": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 84,
          column: 62
        }
      },
      "27": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 85,
          column: 49
        }
      },
      "28": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 29
        }
      },
      "29": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 92,
          column: 13
        }
      },
      "30": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 63
        }
      },
      "31": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 90,
          column: 50
        }
      },
      "32": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 29
        }
      },
      "33": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 95,
          column: 13
        }
      },
      "34": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 62
        }
      },
      "35": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 48
        }
      },
      "36": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 51
        }
      },
      "37": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 53
        }
      },
      "38": {
        start: {
          line: 101,
          column: 27
        },
        end: {
          line: 101,
          column: 65
        }
      },
      "39": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 110,
          column: 15
        }
      },
      "40": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 68
        }
      },
      "41": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 119,
          column: 15
        }
      },
      "42": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 127,
          column: 2
        }
      },
      "43": {
        start: {
          line: 128,
          column: 13
        },
        end: {
          line: 233,
          column: 2
        }
      },
      "44": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 232,
          column: 5
        }
      },
      "45": {
        start: {
          line: 130,
          column: 62
        },
        end: {
          line: 130,
          column: 82
        }
      },
      "46": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "47": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 138,
          column: 15
        }
      },
      "48": {
        start: {
          line: 141,
          column: 33
        },
        end: {
          line: 141,
          column: 108
        }
      },
      "49": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "50": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 104
        }
      },
      "51": {
        start: {
          line: 146,
          column: 27
        },
        end: {
          line: 150,
          column: 10
        }
      },
      "52": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "53": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 157,
          column: 15
        }
      },
      "54": {
        start: {
          line: 160,
          column: 30
        },
        end: {
          line: 164,
          column: 10
        }
      },
      "55": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "56": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 171,
          column: 15
        }
      },
      "57": {
        start: {
          line: 174,
          column: 32
        },
        end: {
          line: 180,
          column: 10
        }
      },
      "58": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 215,
          column: 9
        }
      },
      "59": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 198,
          column: 15
        }
      },
      "60": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 214,
          column: 15
        }
      },
      "61": {
        start: {
          line: 217,
          column: 30
        },
        end: {
          line: 217,
          column: 44
        }
      },
      "62": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 222,
          column: 11
        }
      },
      "63": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 72
        }
      },
      "64": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 231,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 10
          }
        },
        loc: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 10
          },
          end: {
            line: 15,
            column: 11
          }
        },
        loc: {
          start: {
            line: 15,
            column: 21
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 33
          }
        },
        loc: {
          start: {
            line: 23,
            column: 39
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "inventoryGetHandler",
        decl: {
          start: {
            line: 29,
            column: 15
          },
          end: {
            line: 29,
            column: 34
          }
        },
        loc: {
          start: {
            line: 29,
            column: 44
          },
          end: {
            line: 122,
            column: 1
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 60
          },
          end: {
            line: 30,
            column: 61
          }
        },
        loc: {
          start: {
            line: 30,
            column: 86
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 128,
            column: 62
          },
          end: {
            line: 128,
            column: 63
          }
        },
        loc: {
          start: {
            line: 128,
            column: 88
          },
          end: {
            line: 233,
            column: 1
          }
        },
        line: 128
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 35
          },
          end: {
            line: 24,
            column: 38
          }
        }, {
          start: {
            line: 24,
            column: 41
          },
          end: {
            line: 26,
            column: 5
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 24,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 24,
            column: 14
          }
        }, {
          start: {
            line: 24,
            column: 18
          },
          end: {
            line: 24,
            column: 32
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "3": {
        loc: {
          start: {
            line: 78,
            column: 16
          },
          end: {
            line: 78,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 16
          },
          end: {
            line: 78,
            column: 34
          }
        }, {
          start: {
            line: 78,
            column: 38
          },
          end: {
            line: 78,
            column: 52
          }
        }],
        line: 78
      },
      "4": {
        loc: {
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 87,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 87,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "5": {
        loc: {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "6": {
        loc: {
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "7": {
        loc: {
          start: {
            line: 116,
            column: 23
          },
          end: {
            line: 116,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 116,
            column: 48
          },
          end: {
            line: 116,
            column: 61
          }
        }, {
          start: {
            line: 116,
            column: 64
          },
          end: {
            line: 116,
            column: 77
          }
        }],
        line: 116
      },
      "8": {
        loc: {
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "9": {
        loc: {
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 132,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 132,
            column: 19
          }
        }, {
          start: {
            line: 132,
            column: 23
          },
          end: {
            line: 132,
            column: 33
          }
        }, {
          start: {
            line: 132,
            column: 37
          },
          end: {
            line: 132,
            column: 59
          }
        }],
        line: 132
      },
      "10": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "11": {
        loc: {
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "12": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "13": {
        loc: {
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        }, {
          start: {
            line: 199,
            column: 15
          },
          end: {
            line: 215,
            column: 9
          }
        }],
        line: 182
      },
      "14": {
        loc: {
          start: {
            line: 195,
            column: 16
          },
          end: {
            line: 195,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 16
          },
          end: {
            line: 195,
            column: 28
          }
        }, {
          start: {
            line: 195,
            column: 32
          },
          end: {
            line: 195,
            column: 33
          }
        }],
        line: 195
      },
      "15": {
        loc: {
          start: {
            line: 213,
            column: 16
          },
          end: {
            line: 213,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 16
          },
          end: {
            line: 213,
            column: 28
          }
        }, {
          start: {
            line: 213,
            column: 32
          },
          end: {
            line: 213,
            column: 33
          }
        }],
        line: 213
      },
      "16": {
        loc: {
          start: {
            line: 220,
            column: 21
          },
          end: {
            line: 220,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 220,
            column: 55
          },
          end: {
            line: 220,
            column: 92
          }
        }, {
          start: {
            line: 220,
            column: 95
          },
          end: {
            line: 220,
            column: 132
          }
        }],
        line: 220
      },
      "17": {
        loc: {
          start: {
            line: 228,
            column: 19
          },
          end: {
            line: 228,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 228,
            column: 44
          },
          end: {
            line: 228,
            column: 57
          }
        }, {
          start: {
            line: 228,
            column: 60
          },
          end: {
            line: 228,
            column: 73
          }
        }],
        line: 228
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/inventory/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport db from '@/utils/db';\nimport { ShopAccessControl } from '@/lib/utils/shopMiddleware';\nimport { withApiOptimization } from '@/lib/middleware/api-optimizer';\n\n// GET: Fetch all inventory items with shop-based filtering\nasync function inventoryGetHandler(request: NextRequest) {\n    return ShopAccessControl.withShopAccess(async (request: NextRequest, context) => {\n        try {\n            // Parse query parameters\n            const { searchParams } = new URL(request.url);\n            const productId = searchParams.get('productId');\n            const categoryId = searchParams.get('categoryId');\n            const lowStock = searchParams.get('lowStock') === 'true';\n\n            console.log('Inventory API - Shop context:', {\n                shopId: context.shopId,\n                isFiltered: context.isFiltered,\n                isAdmin: context.isAdmin,\n                userShopId: context.userShopId\n            });\n\n            // Build the query with possible filters\n            let query = `\n                SELECT \n                    i.id as inventory_id,\n                    i.shop_id,\n                    s.name as shop_name,\n                    s.location as shop_location,\n                    i.product_id,\n                    p.name as product_name,\n                    p.sku as product_sku,\n                    p.barcode as product_barcode,\n                    p.price,\n                    p.weightedAverageCost,\n                    i.shopspecificcost as shop_specific_cost,\n                    c.id as category_id,\n                    c.name as category_name,\n                    i.quantity,\n                    i.reorder_level,\n                    i.last_updated\n                FROM \n                    inventory_items i\n                JOIN \n                    products p ON i.product_id = p.id\n                JOIN \n                    shops s ON i.shop_id = s.id\n                LEFT JOIN \n                    categories c ON p.category_id = c.id\n                WHERE \n                    p.is_active = true \n                    AND s.is_active = true\n            `;\n\n            // Add filters based on query parameters and shop access\n            const params: any[] = [];\n            let paramIndex = 1;\n\n            // Apply shop filtering based on user permissions\n            if (context.isFiltered && context.shopId) {\n                query += ` AND i.shop_id = $${paramIndex}`;\n                params.push(context.shopId);\n                paramIndex++;\n            }\n\n            if (productId) {\n                query += ` AND i.product_id = $${paramIndex}`;\n                params.push(parseInt(productId));\n                paramIndex++;\n            }\n\n            if (categoryId) {\n                query += ` AND p.category_id = $${paramIndex}`;\n                params.push(parseInt(categoryId));\n                paramIndex++;\n            }\n\n            if (lowStock) {\n                query += ` AND i.quantity <= i.reorder_level`;\n            }\n\n            // Add sorting\n            query += ` ORDER BY s.name, p.name`;\n\n            console.log('Inventory query:', query);\n            console.log('Inventory params:', params);\n\n            // Execute the query\n            const result = await db.query(query, params);\n\n            return NextResponse.json({\n                success: true,\n                data: result.rows,\n                meta: {\n                    shopFiltered: context.isFiltered,\n                    shopId: context.shopId,\n                    totalItems: result.rows.length\n                }\n            });\n        } catch (error) {\n            console.error('Error fetching inventory items:', error);\n            return NextResponse.json({\n                success: false,\n                message: 'Error fetching inventory items',\n                error: error instanceof Error ? error.message : String(error)\n            }, { status: 500 });\n        }\n    })(request);\n}\n\n// Apply optimization middleware to GET\nexport const GET = withApiOptimization(inventoryGetHandler, {\n    cacheTTL: 180, // 3 minutes cache for inventory data\n    enableCompression: true,\n    enableCaching: true\n});\n\n// POST: Create or update inventory items with shop validation\nexport const POST = ShopAccessControl.withShopAccess(async (request: NextRequest, context) => {\n    try {\n        const { shopId, productId, quantity, reorderLevel } = await request.json();\n\n        // Validate required fields\n        if (!shopId || !productId || quantity === undefined) {\n            return NextResponse.json({\n                success: false,\n                message: 'Missing required fields: shopId, productId, and quantity are required'\n            }, { status: 400 });\n        }\n\n        // Validate shop access for the target shop\n        const shopAccessResult = await ShopAccessControl.validateShopAccess(request, shopId);\n        if (!shopAccessResult.hasAccess) {\n            return ShopAccessControl.createAccessDeniedResponse(shopAccessResult.error);\n        }\n\n        // Check if shop exists\n        const shopResult = await db.query(`\n            SELECT id FROM shops WHERE id = $1 AND is_active = true\n        `, [shopId]);\n\n        if (shopResult.rows.length === 0) {\n            return NextResponse.json({\n                success: false,\n                message: `Shop with ID ${shopId} not found`\n            }, { status: 404 });\n        }\n\n        // Check if product exists\n        const productResult = await db.query(`\n            SELECT id FROM products WHERE id = $1 AND is_active = true\n        `, [productId]);\n\n        if (productResult.rows.length === 0) {\n            return NextResponse.json({\n                success: false,\n                message: `Product with ID ${productId} not found`\n            }, { status: 404 });\n        }\n\n        // Check if inventory item already exists\n        const inventoryResult = await db.query(`\n            SELECT id FROM inventory_items \n            WHERE shop_id = $1 AND product_id = $2\n        `, [shopId, productId]);\n\n        let result;\n\n        if (inventoryResult.rows.length > 0) {\n            // Update existing inventory item\n            result = await db.query(`\n                UPDATE inventory_items \n                SET \n                    quantity = $1, \n                    reorder_level = $2,\n                    last_updated = CURRENT_TIMESTAMP\n                WHERE \n                    shop_id = $3 AND product_id = $4\n                RETURNING *\n            `, [quantity, reorderLevel || 0, shopId, productId]);\n        } else {\n            // Create new inventory item\n            result = await db.query(`\n                INSERT INTO inventory_items (\n                    shop_id, \n                    product_id, \n                    quantity, \n                    reorder_level\n                ) VALUES ($1, $2, $3, $4)\n                RETURNING *\n            `, [shopId, productId, quantity, reorderLevel || 0]);\n        }\n\n        // Real-time updates now handled by polling system\n        const inventoryItem = result.rows[0];\n\n        return NextResponse.json({\n            success: true,\n            message: inventoryResult.rows.length > 0\n                ? 'Inventory item updated successfully'\n                : 'Inventory item created successfully',\n            data: inventoryItem\n        });\n    } catch (error) {\n        console.error('Error creating/updating inventory item:', error);\n        return NextResponse.json({\n            success: false,\n            message: 'Error creating/updating inventory item',\n            error: error instanceof Error ? error.message : String(error)\n        }, { status: 500 });\n    }\n});"],
      names: ["GET", "POST", "inventoryGetHandler", "request", "ShopAccessControl", "withShopAccess", "context", "searchParams", "URL", "url", "productId", "get", "categoryId", "lowStock", "console", "log", "shopId", "isFiltered", "isAdmin", "userShopId", "query", "params", "paramIndex", "push", "parseInt", "result", "db", "NextResponse", "json", "success", "data", "rows", "meta", "shopFiltered", "totalItems", "length", "error", "message", "Error", "String", "status", "withApiOptimization", "cacheTTL", "enableCompression", "enableCaching", "quantity", "reorderLevel", "undefined", "shopAccessResult", "validateShopAccess", "hasAccess", "createAccessDeniedResponse", "shopResult", "productResult", "inventoryResult", "inventoryItem"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8679c29c562674ef8f99539d7f354fb1c36a58c9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1pujughijs = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1pujughijs();
cov_1pujughijs().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1pujughijs().f[0]++;
  cov_1pujughijs().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1pujughijs().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1pujughijs().s[3]++;
_export(exports, {
  GET: function () {
    /* istanbul ignore next */
    cov_1pujughijs().f[1]++;
    cov_1pujughijs().s[4]++;
    return GET;
  },
  POST: function () {
    /* istanbul ignore next */
    cov_1pujughijs().f[2]++;
    cov_1pujughijs().s[5]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_1pujughijs().s[6]++, require("next/server"));
const _db =
/* istanbul ignore next */
(/*#__PURE__*/cov_1pujughijs().s[7]++, _interop_require_default(require("../../../utils/db")));
const _shopMiddleware =
/* istanbul ignore next */
(cov_1pujughijs().s[8]++, require("../../../lib/utils/shopMiddleware"));
const _apioptimizer =
/* istanbul ignore next */
(cov_1pujughijs().s[9]++, require("../../../lib/middleware/api-optimizer"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1pujughijs().f[3]++;
  cov_1pujughijs().s[10]++;
  return /* istanbul ignore next */(cov_1pujughijs().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1pujughijs().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1pujughijs().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1pujughijs().b[0][1]++, {
    default: obj
  });
}
// GET: Fetch all inventory items with shop-based filtering
async function inventoryGetHandler(request) {
  /* istanbul ignore next */
  cov_1pujughijs().f[4]++;
  cov_1pujughijs().s[11]++;
  return _shopMiddleware.ShopAccessControl.withShopAccess(async (request, context) => {
    /* istanbul ignore next */
    cov_1pujughijs().f[5]++;
    cov_1pujughijs().s[12]++;
    try {
      // Parse query parameters
      const {
        searchParams
      } =
      /* istanbul ignore next */
      (cov_1pujughijs().s[13]++, new URL(request.url));
      const productId =
      /* istanbul ignore next */
      (cov_1pujughijs().s[14]++, searchParams.get("productId"));
      const categoryId =
      /* istanbul ignore next */
      (cov_1pujughijs().s[15]++, searchParams.get("categoryId"));
      const lowStock =
      /* istanbul ignore next */
      (cov_1pujughijs().s[16]++, searchParams.get("lowStock") === "true");
      /* istanbul ignore next */
      cov_1pujughijs().s[17]++;
      console.log("Inventory API - Shop context:", {
        shopId: context.shopId,
        isFiltered: context.isFiltered,
        isAdmin: context.isAdmin,
        userShopId: context.userShopId
      });
      // Build the query with possible filters
      let query =
      /* istanbul ignore next */
      (cov_1pujughijs().s[18]++, `
                SELECT 
                    i.id as inventory_id,
                    i.shop_id,
                    s.name as shop_name,
                    s.location as shop_location,
                    i.product_id,
                    p.name as product_name,
                    p.sku as product_sku,
                    p.barcode as product_barcode,
                    p.price,
                    p.weightedAverageCost,
                    i.shopspecificcost as shop_specific_cost,
                    c.id as category_id,
                    c.name as category_name,
                    i.quantity,
                    i.reorder_level,
                    i.last_updated
                FROM 
                    inventory_items i
                JOIN 
                    products p ON i.product_id = p.id
                JOIN 
                    shops s ON i.shop_id = s.id
                LEFT JOIN 
                    categories c ON p.category_id = c.id
                WHERE 
                    p.is_active = true 
                    AND s.is_active = true
            `);
      // Add filters based on query parameters and shop access
      const params =
      /* istanbul ignore next */
      (cov_1pujughijs().s[19]++, []);
      let paramIndex =
      /* istanbul ignore next */
      (cov_1pujughijs().s[20]++, 1);
      // Apply shop filtering based on user permissions
      /* istanbul ignore next */
      cov_1pujughijs().s[21]++;
      if (
      /* istanbul ignore next */
      (cov_1pujughijs().b[3][0]++, context.isFiltered) &&
      /* istanbul ignore next */
      (cov_1pujughijs().b[3][1]++, context.shopId)) {
        /* istanbul ignore next */
        cov_1pujughijs().b[2][0]++;
        cov_1pujughijs().s[22]++;
        query += ` AND i.shop_id = $${paramIndex}`;
        /* istanbul ignore next */
        cov_1pujughijs().s[23]++;
        params.push(context.shopId);
        /* istanbul ignore next */
        cov_1pujughijs().s[24]++;
        paramIndex++;
      } else
      /* istanbul ignore next */
      {
        cov_1pujughijs().b[2][1]++;
      }
      cov_1pujughijs().s[25]++;
      if (productId) {
        /* istanbul ignore next */
        cov_1pujughijs().b[4][0]++;
        cov_1pujughijs().s[26]++;
        query += ` AND i.product_id = $${paramIndex}`;
        /* istanbul ignore next */
        cov_1pujughijs().s[27]++;
        params.push(parseInt(productId));
        /* istanbul ignore next */
        cov_1pujughijs().s[28]++;
        paramIndex++;
      } else
      /* istanbul ignore next */
      {
        cov_1pujughijs().b[4][1]++;
      }
      cov_1pujughijs().s[29]++;
      if (categoryId) {
        /* istanbul ignore next */
        cov_1pujughijs().b[5][0]++;
        cov_1pujughijs().s[30]++;
        query += ` AND p.category_id = $${paramIndex}`;
        /* istanbul ignore next */
        cov_1pujughijs().s[31]++;
        params.push(parseInt(categoryId));
        /* istanbul ignore next */
        cov_1pujughijs().s[32]++;
        paramIndex++;
      } else
      /* istanbul ignore next */
      {
        cov_1pujughijs().b[5][1]++;
      }
      cov_1pujughijs().s[33]++;
      if (lowStock) {
        /* istanbul ignore next */
        cov_1pujughijs().b[6][0]++;
        cov_1pujughijs().s[34]++;
        query += ` AND i.quantity <= i.reorder_level`;
      } else
      /* istanbul ignore next */
      {
        cov_1pujughijs().b[6][1]++;
      }
      // Add sorting
      cov_1pujughijs().s[35]++;
      query += ` ORDER BY s.name, p.name`;
      /* istanbul ignore next */
      cov_1pujughijs().s[36]++;
      console.log("Inventory query:", query);
      /* istanbul ignore next */
      cov_1pujughijs().s[37]++;
      console.log("Inventory params:", params);
      // Execute the query
      const result =
      /* istanbul ignore next */
      (cov_1pujughijs().s[38]++, await _db.default.query(query, params));
      /* istanbul ignore next */
      cov_1pujughijs().s[39]++;
      return _server.NextResponse.json({
        success: true,
        data: result.rows,
        meta: {
          shopFiltered: context.isFiltered,
          shopId: context.shopId,
          totalItems: result.rows.length
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1pujughijs().s[40]++;
      console.error("Error fetching inventory items:", error);
      /* istanbul ignore next */
      cov_1pujughijs().s[41]++;
      return _server.NextResponse.json({
        success: false,
        message: "Error fetching inventory items",
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1pujughijs().b[7][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1pujughijs().b[7][1]++, String(error))
      }, {
        status: 500
      });
    }
  })(request);
}
const GET =
/* istanbul ignore next */
(cov_1pujughijs().s[42]++, (0, _apioptimizer.withApiOptimization)(inventoryGetHandler, {
  cacheTTL: 180,
  enableCompression: true,
  enableCaching: true
}));
const POST =
/* istanbul ignore next */
(cov_1pujughijs().s[43]++, _shopMiddleware.ShopAccessControl.withShopAccess(async (request, context) => {
  /* istanbul ignore next */
  cov_1pujughijs().f[6]++;
  cov_1pujughijs().s[44]++;
  try {
    const {
      shopId,
      productId,
      quantity,
      reorderLevel
    } =
    /* istanbul ignore next */
    (cov_1pujughijs().s[45]++, await request.json());
    // Validate required fields
    /* istanbul ignore next */
    cov_1pujughijs().s[46]++;
    if (
    /* istanbul ignore next */
    (cov_1pujughijs().b[9][0]++, !shopId) ||
    /* istanbul ignore next */
    (cov_1pujughijs().b[9][1]++, !productId) ||
    /* istanbul ignore next */
    (cov_1pujughijs().b[9][2]++, quantity === undefined)) {
      /* istanbul ignore next */
      cov_1pujughijs().b[8][0]++;
      cov_1pujughijs().s[47]++;
      return _server.NextResponse.json({
        success: false,
        message: "Missing required fields: shopId, productId, and quantity are required"
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1pujughijs().b[8][1]++;
    }
    // Validate shop access for the target shop
    const shopAccessResult =
    /* istanbul ignore next */
    (cov_1pujughijs().s[48]++, await _shopMiddleware.ShopAccessControl.validateShopAccess(request, shopId));
    /* istanbul ignore next */
    cov_1pujughijs().s[49]++;
    if (!shopAccessResult.hasAccess) {
      /* istanbul ignore next */
      cov_1pujughijs().b[10][0]++;
      cov_1pujughijs().s[50]++;
      return _shopMiddleware.ShopAccessControl.createAccessDeniedResponse(shopAccessResult.error);
    } else
    /* istanbul ignore next */
    {
      cov_1pujughijs().b[10][1]++;
    }
    // Check if shop exists
    const shopResult =
    /* istanbul ignore next */
    (cov_1pujughijs().s[51]++, await _db.default.query(`
            SELECT id FROM shops WHERE id = $1 AND is_active = true
        `, [shopId]));
    /* istanbul ignore next */
    cov_1pujughijs().s[52]++;
    if (shopResult.rows.length === 0) {
      /* istanbul ignore next */
      cov_1pujughijs().b[11][0]++;
      cov_1pujughijs().s[53]++;
      return _server.NextResponse.json({
        success: false,
        message: `Shop with ID ${shopId} not found`
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_1pujughijs().b[11][1]++;
    }
    // Check if product exists
    const productResult =
    /* istanbul ignore next */
    (cov_1pujughijs().s[54]++, await _db.default.query(`
            SELECT id FROM products WHERE id = $1 AND is_active = true
        `, [productId]));
    /* istanbul ignore next */
    cov_1pujughijs().s[55]++;
    if (productResult.rows.length === 0) {
      /* istanbul ignore next */
      cov_1pujughijs().b[12][0]++;
      cov_1pujughijs().s[56]++;
      return _server.NextResponse.json({
        success: false,
        message: `Product with ID ${productId} not found`
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_1pujughijs().b[12][1]++;
    }
    // Check if inventory item already exists
    const inventoryResult =
    /* istanbul ignore next */
    (cov_1pujughijs().s[57]++, await _db.default.query(`
            SELECT id FROM inventory_items 
            WHERE shop_id = $1 AND product_id = $2
        `, [shopId, productId]));
    let result;
    /* istanbul ignore next */
    cov_1pujughijs().s[58]++;
    if (inventoryResult.rows.length > 0) {
      /* istanbul ignore next */
      cov_1pujughijs().b[13][0]++;
      cov_1pujughijs().s[59]++;
      // Update existing inventory item
      result = await _db.default.query(`
                UPDATE inventory_items 
                SET 
                    quantity = $1, 
                    reorder_level = $2,
                    last_updated = CURRENT_TIMESTAMP
                WHERE 
                    shop_id = $3 AND product_id = $4
                RETURNING *
            `, [quantity,
      /* istanbul ignore next */
      (cov_1pujughijs().b[14][0]++, reorderLevel) ||
      /* istanbul ignore next */
      (cov_1pujughijs().b[14][1]++, 0), shopId, productId]);
    } else {
      /* istanbul ignore next */
      cov_1pujughijs().b[13][1]++;
      cov_1pujughijs().s[60]++;
      // Create new inventory item
      result = await _db.default.query(`
                INSERT INTO inventory_items (
                    shop_id, 
                    product_id, 
                    quantity, 
                    reorder_level
                ) VALUES ($1, $2, $3, $4)
                RETURNING *
            `, [shopId, productId, quantity,
      /* istanbul ignore next */
      (cov_1pujughijs().b[15][0]++, reorderLevel) ||
      /* istanbul ignore next */
      (cov_1pujughijs().b[15][1]++, 0)]);
    }
    // Real-time updates now handled by polling system
    const inventoryItem =
    /* istanbul ignore next */
    (cov_1pujughijs().s[61]++, result.rows[0]);
    /* istanbul ignore next */
    cov_1pujughijs().s[62]++;
    return _server.NextResponse.json({
      success: true,
      message: inventoryResult.rows.length > 0 ?
      /* istanbul ignore next */
      (cov_1pujughijs().b[16][0]++, "Inventory item updated successfully") :
      /* istanbul ignore next */
      (cov_1pujughijs().b[16][1]++, "Inventory item created successfully"),
      data: inventoryItem
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1pujughijs().s[63]++;
    console.error("Error creating/updating inventory item:", error);
    /* istanbul ignore next */
    cov_1pujughijs().s[64]++;
    return _server.NextResponse.json({
      success: false,
      message: "Error creating/updating inventory item",
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1pujughijs().b[17][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1pujughijs().b[17][1]++, String(error))
    }, {
      status: 500
    });
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,