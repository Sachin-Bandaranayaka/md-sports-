{"version":3,"names":["cov_wdb0ueodm","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","startCacheWarming","warmDashboardCaches","prisma","_client","PrismaClient","monitor","_performance","PerformanceMonitor","CACHE_WARMING_CONFIG","interval","dataTypes","summary","shops","inventoryDistribution","salesPerformance","transferActivity","totalRetailValue","shopIds","timePeriods","getDateRange","period","endDate","Date","startDate","setDate","getDate","setMonth","warmSummaryCache","shopId","cacheKey","timer","startTimer","summaryData","$queryRaw","_cache","cache","set","endTimer","console","log","error","warmShopsCache","shop","findMany","select","id","location","isActive","where","orderBy","length","warmInventoryDistributionCache","distributionData","warmSalesPerformanceCache","salesData","warmTransferActivityCache","transferData","warmTotalRetailValueCache","retailValue","inventoryItem","aggregate","_sum","quantity","totalQuantity","estimatedRetailValue","getShopIdsToWarm","map","overallTimer","globalPromises","push","Promise","allSettled","shopPromises","catch","setInterval","require","main","module","command","process","argv","then","exit"],"sources":["/Users/sachin/Documents/md-sports-/src/scripts/cache-warming.ts"],"sourcesContent":["/**\n * Cache Warming Script for Dashboard Performance\n * \n * This script preloads frequently accessed dashboard data into cache\n * to improve initial load times and reduce database load.\n */\n\nimport { cache } from '@/lib/cache';\nimport { PerformanceMonitor } from '@/lib/performance';\nimport { PrismaClient } from '@prisma/client';\n\nconst prisma = new PrismaClient();\nconst monitor = new PerformanceMonitor();\n\n// Cache warming configuration\nconst CACHE_WARMING_CONFIG = {\n    // How often to run cache warming (in milliseconds)\n    interval: 10 * 60 * 1000, // 10 minutes\n\n    // Which data types to warm\n    dataTypes: {\n        summary: true,\n        shops: true,\n        inventoryDistribution: true,\n        salesPerformance: true,\n        transferActivity: true,\n        totalRetailValue: true\n    },\n\n    // Shop IDs to warm (empty array means all shops)\n    shopIds: [] as string[],\n\n    // Time periods to warm\n    timePeriods: ['7d', '30d', '90d', 'ytd'] as const\n};\n\ntype TimePeriod = typeof CACHE_WARMING_CONFIG.timePeriods[number];\n\n/**\n * Get date range for a time period\n */\nfunction getDateRange(period: TimePeriod): { startDate: Date; endDate: Date } {\n    const endDate = new Date();\n    const startDate = new Date();\n\n    switch (period) {\n        case '7d':\n            startDate.setDate(endDate.getDate() - 7);\n            break;\n        case '30d':\n            startDate.setDate(endDate.getDate() - 30);\n            break;\n        case '90d':\n            startDate.setDate(endDate.getDate() - 90);\n            break;\n        case 'ytd':\n            startDate.setMonth(0, 1); // January 1st of current year\n            break;\n    }\n\n    return { startDate, endDate };\n}\n\n/**\n * Warm summary data cache\n */\nasync function warmSummaryCache(shopId?: string): Promise<void> {\n    const cacheKey = shopId ? `dashboard:summary:${shopId}` : 'dashboard:summary:global';\n\n    try {\n        const timer = monitor.startTimer('cache-warm-summary');\n\n        // Use materialized view if available, otherwise fallback to regular query\n        const summaryData = await prisma.$queryRaw`\n            SELECT \n                total_inventory_value,\n                pending_transfers,\n                outstanding_invoices\n            FROM dashboard_summary_mv \n            WHERE scope = ${shopId ? 'shop' : 'global'}\n            ${shopId ? prisma.$queryRaw`AND shop_id = ${shopId}` : prisma.$queryRaw`AND shop_id IS NULL`}\n            LIMIT 1\n        `;\n\n        await cache.set(cacheKey, summaryData, 300); // 5 minutes TTL\n        monitor.endTimer(timer);\n\n        console.log(`✓ Warmed summary cache: ${cacheKey}`);\n    } catch (error) {\n        console.error(`✗ Failed to warm summary cache: ${cacheKey}`, error);\n    }\n}\n\n/**\n * Warm shops data cache\n */\nasync function warmShopsCache(): Promise<void> {\n    const cacheKey = 'dashboard:shops';\n\n    try {\n        const timer = monitor.startTimer('cache-warm-shops');\n\n        const shops = await prisma.shop.findMany({\n            select: {\n                id: true,\n                name: true,\n                location: true,\n                isActive: true\n            },\n            where: {\n                isActive: true\n            },\n            orderBy: {\n                name: 'asc'\n            }\n        });\n\n        await cache.set(cacheKey, shops, 600); // 10 minutes TTL\n        monitor.endTimer(timer);\n\n        console.log(`✓ Warmed shops cache: ${shops.length} shops`);\n    } catch (error) {\n        console.error('✗ Failed to warm shops cache', error);\n    }\n}\n\n/**\n * Warm inventory distribution cache\n */\nasync function warmInventoryDistributionCache(shopId?: string): Promise<void> {\n    const cacheKey = shopId ? `dashboard:inventory:${shopId}` : 'dashboard:inventory:global';\n\n    try {\n        const timer = monitor.startTimer('cache-warm-inventory');\n\n        const distributionData = await prisma.$queryRaw`\n            SELECT \n                category,\n                SUM(item_count) as item_count,\n                SUM(total_quantity) as total_quantity,\n                SUM(total_value) as total_value\n            FROM inventory_distribution_mv\n            ${shopId ? prisma.$queryRaw`WHERE \"shopId\" = ${shopId}` : prisma.$queryRaw``}\n            GROUP BY category\n            ORDER BY total_value DESC\n        `;\n\n        await cache.set(cacheKey, distributionData, 300); // 5 minutes TTL\n        monitor.endTimer(timer);\n\n        console.log(`✓ Warmed inventory distribution cache: ${cacheKey}`);\n    } catch (error) {\n        console.error(`✗ Failed to warm inventory distribution cache: ${cacheKey}`, error);\n    }\n}\n\n/**\n * Warm sales performance cache\n */\nasync function warmSalesPerformanceCache(period: TimePeriod, shopId?: string): Promise<void> {\n    const cacheKey = shopId\n        ? `dashboard:sales:${period}:${shopId}`\n        : `dashboard:sales:${period}:global`;\n\n    try {\n        const timer = monitor.startTimer('cache-warm-sales');\n        const { startDate, endDate } = getDateRange(period);\n\n        const salesData = await prisma.$queryRaw`\n            SELECT \n                sale_date,\n                SUM(transaction_count) as transaction_count,\n                SUM(total_sales) as total_sales,\n                AVG(avg_transaction_value) as avg_transaction_value\n            FROM sales_performance_mv\n            WHERE sale_date >= ${startDate} AND sale_date <= ${endDate}\n            ${shopId ? prisma.$queryRaw`AND \"shopId\" = ${shopId}` : prisma.$queryRaw``}\n            GROUP BY sale_date\n            ORDER BY sale_date DESC\n        `;\n\n        await cache.set(cacheKey, salesData, 300); // 5 minutes TTL\n        monitor.endTimer(timer);\n\n        console.log(`✓ Warmed sales performance cache: ${cacheKey}`);\n    } catch (error) {\n        console.error(`✗ Failed to warm sales performance cache: ${cacheKey}`, error);\n    }\n}\n\n/**\n * Warm transfer activity cache\n */\nasync function warmTransferActivityCache(shopId?: string): Promise<void> {\n    const cacheKey = shopId ? `dashboard:transfers:${shopId}` : 'dashboard:transfers:global';\n\n    try {\n        const timer = monitor.startTimer('cache-warm-transfers');\n\n        const transferData = await prisma.$queryRaw`\n            SELECT \n                direction,\n                transfer_date,\n                SUM(transfer_count) as transfer_count,\n                SUM(total_quantity) as total_quantity\n            FROM transfer_activity_mv\n            WHERE transfer_date >= CURRENT_DATE - INTERVAL '30 days'\n            ${shopId ? prisma.$queryRaw`AND shop_id = ${shopId}` : prisma.$queryRaw``}\n            GROUP BY direction, transfer_date\n            ORDER BY transfer_date DESC\n        `;\n\n        await cache.set(cacheKey, transferData, 300); // 5 minutes TTL\n        monitor.endTimer(timer);\n\n        console.log(`✓ Warmed transfer activity cache: ${cacheKey}`);\n    } catch (error) {\n        console.error(`✗ Failed to warm transfer activity cache: ${cacheKey}`, error);\n    }\n}\n\n/**\n * Warm total retail value cache\n */\nasync function warmTotalRetailValueCache(shopId?: string): Promise<void> {\n    const cacheKey = shopId ? `dashboard:retail-value:${shopId}` : 'dashboard:retail-value:global';\n\n    try {\n        const timer = monitor.startTimer('cache-warm-retail-value');\n\n        const retailValue = await prisma.inventoryItem.aggregate({\n            _sum: {\n                quantity: true\n            },\n            where: shopId ? {\n                shopId: shopId\n            } : undefined\n        });\n\n        // Calculate total retail value (simplified calculation)\n        const totalRetailValue = {\n            totalQuantity: retailValue._sum.quantity || 0,\n            estimatedRetailValue: (retailValue._sum.quantity || 0) * 25 // Rough estimate\n        };\n\n        await cache.set(cacheKey, totalRetailValue, 300); // 5 minutes TTL\n        monitor.endTimer(timer);\n\n        console.log(`✓ Warmed total retail value cache: ${cacheKey}`);\n    } catch (error) {\n        console.error(`✗ Failed to warm total retail value cache: ${cacheKey}`, error);\n    }\n}\n\n/**\n * Get list of shop IDs to warm\n */\nasync function getShopIdsToWarm(): Promise<string[]> {\n    if (CACHE_WARMING_CONFIG.shopIds.length > 0) {\n        return CACHE_WARMING_CONFIG.shopIds;\n    }\n\n    // Get all active shop IDs\n    const shops = await prisma.shop.findMany({\n        select: { id: true },\n        where: { isActive: true }\n    });\n\n    return shops.map(shop => shop.id);\n}\n\n/**\n * Warm all dashboard caches\n */\nexport async function warmDashboardCaches(): Promise<void> {\n    console.log('🔥 Starting dashboard cache warming...');\n    const overallTimer = monitor.startTimer('cache-warm-all');\n\n    try {\n        // Get shop IDs to warm\n        const shopIds = await getShopIdsToWarm();\n\n        // Warm global data\n        const globalPromises: Promise<void>[] = [];\n\n        if (CACHE_WARMING_CONFIG.dataTypes.summary) {\n            globalPromises.push(warmSummaryCache());\n        }\n\n        if (CACHE_WARMING_CONFIG.dataTypes.shops) {\n            globalPromises.push(warmShopsCache());\n        }\n\n        if (CACHE_WARMING_CONFIG.dataTypes.inventoryDistribution) {\n            globalPromises.push(warmInventoryDistributionCache());\n        }\n\n        if (CACHE_WARMING_CONFIG.dataTypes.transferActivity) {\n            globalPromises.push(warmTransferActivityCache());\n        }\n\n        if (CACHE_WARMING_CONFIG.dataTypes.totalRetailValue) {\n            globalPromises.push(warmTotalRetailValueCache());\n        }\n\n        // Warm sales performance for different periods\n        if (CACHE_WARMING_CONFIG.dataTypes.salesPerformance) {\n            for (const period of CACHE_WARMING_CONFIG.timePeriods) {\n                globalPromises.push(warmSalesPerformanceCache(period));\n            }\n        }\n\n        // Wait for global data warming\n        await Promise.allSettled(globalPromises);\n\n        // Warm shop-specific data\n        const shopPromises: Promise<void>[] = [];\n\n        for (const shopId of shopIds) {\n            if (CACHE_WARMING_CONFIG.dataTypes.summary) {\n                shopPromises.push(warmSummaryCache(shopId));\n            }\n\n            if (CACHE_WARMING_CONFIG.dataTypes.inventoryDistribution) {\n                shopPromises.push(warmInventoryDistributionCache(shopId));\n            }\n\n            if (CACHE_WARMING_CONFIG.dataTypes.transferActivity) {\n                shopPromises.push(warmTransferActivityCache(shopId));\n            }\n\n            if (CACHE_WARMING_CONFIG.dataTypes.totalRetailValue) {\n                shopPromises.push(warmTotalRetailValueCache(shopId));\n            }\n\n            // Warm sales performance for different periods\n            if (CACHE_WARMING_CONFIG.dataTypes.salesPerformance) {\n                for (const period of CACHE_WARMING_CONFIG.timePeriods) {\n                    shopPromises.push(warmSalesPerformanceCache(period, shopId));\n                }\n            }\n        }\n\n        // Wait for shop-specific data warming\n        await Promise.allSettled(shopPromises);\n\n        monitor.endTimer(overallTimer);\n        console.log(`🎉 Dashboard cache warming completed for ${shopIds.length} shops`);\n\n    } catch (error) {\n        monitor.endTimer(overallTimer);\n        console.error('❌ Dashboard cache warming failed:', error);\n        throw error;\n    }\n}\n\n/**\n * Start automatic cache warming\n */\nexport function startCacheWarming(): void {\n    console.log(`🚀 Starting automatic cache warming every ${CACHE_WARMING_CONFIG.interval / 1000 / 60} minutes`);\n\n    // Initial warming\n    warmDashboardCaches().catch(console.error);\n\n    // Schedule periodic warming\n    setInterval(() => {\n        warmDashboardCaches().catch(console.error);\n    }, CACHE_WARMING_CONFIG.interval);\n}\n\n/**\n * CLI interface for manual cache warming\n */\nif (require.main === module) {\n    const command = process.argv[2];\n\n    switch (command) {\n        case 'warm':\n            warmDashboardCaches()\n                .then(() => {\n                    console.log('✅ Cache warming completed');\n                    process.exit(0);\n                })\n                .catch((error) => {\n                    console.error('❌ Cache warming failed:', error);\n                    process.exit(1);\n                });\n            break;\n\n        case 'start':\n            startCacheWarming();\n            break;\n\n        default:\n            console.log('Usage:');\n            console.log('  npm run cache-warm        # Warm caches once');\n            console.log('  npm run cache-warm start  # Start automatic warming');\n            break;\n    }\n}"],"mappings":"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","ignoreList":[]}