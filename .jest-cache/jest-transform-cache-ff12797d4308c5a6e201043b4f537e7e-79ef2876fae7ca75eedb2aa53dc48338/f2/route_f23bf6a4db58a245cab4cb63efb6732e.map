{"version":3,"names":["GET","cov_1tvxh8ne70","f","s","POST","_request","auditService","_auditService","AuditService","deletedSupplierIds","getDeletedEntityIds","suppliers","_prisma","default","supplier","findMany","where","id","notIn","orderBy","createdAt","_server","NextResponse","json","headers","error","console","status","request","body","create","data","_cache","revalidateTag"],"sources":["/Users/sachin/Documents/md-sports-/src/app/api/suppliers/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { revalidateTag } from 'next/cache';\nimport prisma from '@/lib/prisma';\nimport { AuditService } from '@/services/auditService';\n\n// GET /api/suppliers - Get all suppliers\nexport async function GET(_request: NextRequest) {\n    try {\n        // Get IDs of soft-deleted suppliers\n        const auditService = new AuditService();\n        const deletedSupplierIds = await auditService.getDeletedEntityIds('Supplier');\n\n        const suppliers = await prisma.supplier.findMany({\n            where: {\n                id: {\n                    notIn: deletedSupplierIds\n                }\n            },\n            orderBy: {\n                createdAt: 'desc'\n            }\n        });\n\n        return NextResponse.json(suppliers, {\n            headers: {\n                'Cache-Control': 'public, s-maxage=300, stale-while-revalidate=600'\n            }\n        });\n    } catch (error) {\n        console.error('Error fetching suppliers:', error);\n        return NextResponse.json(\n            { error: 'Failed to fetch suppliers' },\n            { status: 500 }\n        );\n    }\n}\n\n// POST /api/suppliers - Create a new supplier\nexport async function POST(request: NextRequest) {\n    try {\n        const body = await request.json();\n\n        const supplier = await prisma.supplier.create({\n            data: body\n        });\n\n        // Invalidate suppliers cache to ensure fresh data\n        revalidateTag('suppliers');\n        \n        // Also invalidate purchase invoice pages that might cache supplier data\n        revalidateTag('purchase-invoices');\n\n        return NextResponse.json(supplier, { status: 201 });\n    } catch (error) {\n        console.error('Error creating supplier:', error);\n        return NextResponse.json(\n            { error: 'Failed to create supplier' },\n            { status: 500 }\n        );\n    }\n}"],"mappingssBA,GAAG,WAAAA,CAAA;IAAA;IAAAC,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAAHH,GAAA;;EAgCAI,IAAI,WAAAA,CAAA;IAAA;IAAAH,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAAJC,IAAA;;;;;kCAtCoB;;;kCACZ;;;wEACX;;;kCACU;;;;;;;;;;;;;;;AAGtB,eAAeJ,IAAIK,QAAqB;EAAA;EAAAJ,cAAA,GAAAC,CAAA;EAAAD,cAAA,GAAAE,CAAA;EAC3C,IAAI;IACA;IACA,MAAMG,YAAA;IAAA;IAAA,CAAAL,cAAA,GAAAE,CAAA,QAAe,IAAII,aAAA,CAAAC,YAAY;IACrC,MAAMC,kBAAA;IAAA;IAAA,CAAAR,cAAA,GAAAE,CAAA,QAAqB,MAAMG,YAAA,CAAaI,mBAAmB,CAAC;IAElE,MAAMC,SAAA;IAAA;IAAA,CAAAV,cAAA,GAAAE,CAAA,QAAY,MAAMS,OAAA,CAAAC,OAAM,CAACC,QAAQ,CAACC,QAAQ,CAAC;MAC7CC,KAAA,EAAO;QACHC,EAAA,EAAI;UACAC,KAAA,EAAOT;QACX;MACJ;MACAU,OAAA,EAAS;QACLC,SAAA,EAAW;MACf;IACJ;IAAA;IAAAnB,cAAA,GAAAE,CAAA;IAEA,OAAOkB,OAAA,CAAAC,YAAY,CAACC,IAAI,CAACZ,SAAA,EAAW;MAChCa,OAAA,EAAS;QACL,iBAAiB;MACrB;IACJ;EACJ,EAAE,OAAOC,KAAA,EAAO;IAAA;IAAAxB,cAAA,GAAAE,CAAA;IACZuB,OAAA,CAAQD,KAAK,CAAC,6BAA6BA,KAAA;IAAA;IAAAxB,cAAA,GAAAE,CAAA;IAC3C,OAAOkB,OAAA,CAAAC,YAAY,CAACC,IAAI,CACpB;MAAEE,KAAA,EAAO;IAA4B,GACrC;MAAEE,MAAA,EAAQ;IAAI;EAEtB;AACJ;AAGO,eAAevB,KAAKwB,OAAoB;EAAA;EAAA3B,cAAA,GAAAC,CAAA;EAAAD,cAAA,GAAAE,CAAA;EAC3C,IAAI;IACA,MAAM0B,IAAA;IAAA;IAAA,CAAA5B,cAAA,GAAAE,CAAA,QAAO,MAAMyB,OAAA,CAAQL,IAAI;IAE/B,MAAMT,QAAA;IAAA;IAAA,CAAAb,cAAA,GAAAE,CAAA,QAAW,MAAMS,OAAA,CAAAC,OAAM,CAACC,QAAQ,CAACgB,MAAM,CAAC;MAC1CC,IAAA,EAAMF;IACV;IAEA;IAAA;IAAA5B,cAAA,GAAAE,CAAA;IACA,IAAA6B,MAAA,CAAAC,aAAa,EAAC;IAEd;IAAA;IAAAhC,cAAA,GAAAE,CAAA;IACA,IAAA6B,MAAA,CAAAC,aAAa,EAAC;IAAA;IAAAhC,cAAA,GAAAE,CAAA;IAEd,OAAOkB,OAAA,CAAAC,YAAY,CAACC,IAAI,CAACT,QAAA,EAAU;MAAEa,MAAA,EAAQ;IAAI;EACrD,EAAE,OAAOF,KAAA,EAAO;IAAA;IAAAxB,cAAA,GAAAE,CAAA;IACZuB,OAAA,CAAQD,KAAK,CAAC,4BAA4BA,KAAA;IAAA;IAAAxB,cAAA,GAAAE,CAAA;IAC1C,OAAOkB,OAAA,CAAAC,YAAY,CAACC,IAAI,CACpB;MAAEE,KAAA,EAAO;IAA4B,GACrC;MAAEE,MAAA,EAAQ;IAAI;EAEtB;AACJ","ignoreList":[]}