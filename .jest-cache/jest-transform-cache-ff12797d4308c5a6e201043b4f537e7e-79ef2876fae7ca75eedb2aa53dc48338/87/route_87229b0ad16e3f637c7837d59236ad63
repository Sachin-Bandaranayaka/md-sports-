8c3867498f80c1790e5a08795b879471
"use strict";

/* istanbul ignore next */
function cov_2ibn0b0n4d() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/dashboard/inventory-value/route.ts";
  var hash = "b90abed78a46eade449395a8b252765a05fb6043";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/dashboard/inventory-value/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 19
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 16
        },
        end: {
          line: 12,
          column: 49
        }
      },
      "5": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 47
        }
      },
      "6": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 71
        }
      },
      "7": {
        start: {
          line: 15,
          column: 14
        },
        end: {
          line: 15,
          column: 45
        }
      },
      "8": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 95,
          column: 2
        }
      },
      "9": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "10": {
        start: {
          line: 19,
          column: 27
        },
        end: {
          line: 19,
          column: 94
        }
      },
      "11": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "12": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 25,
          column: 15
        }
      },
      "13": {
        start: {
          line: 28,
          column: 25
        },
        end: {
          line: 28,
          column: 99
        }
      },
      "14": {
        start: {
          line: 29,
          column: 27
        },
        end: {
          line: 29,
          column: 66
        }
      },
      "15": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "16": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 63
        }
      },
      "17": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 39,
          column: 15
        }
      },
      "18": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 44,
          column: 11
        }
      },
      "19": {
        start: {
          line: 46,
          column: 23
        },
        end: {
          line: 59,
          column: 13
        }
      },
      "20": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 59
        }
      },
      "21": {
        start: {
          line: 63,
          column: 27
        },
        end: {
          line: 63,
          column: 54
        }
      },
      "22": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 58
        }
      },
      "23": {
        start: {
          line: 66,
          column: 31
        },
        end: {
          line: 66,
          column: 98
        }
      },
      "24": {
        start: {
          line: 67,
          column: 29
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "25": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 67
        }
      },
      "26": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 73
        }
      },
      "27": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 55
        }
      },
      "28": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 67
        }
      },
      "29": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 93,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 61
          },
          end: {
            line: 16,
            column: 62
          }
        },
        loc: {
          start: {
            line: 16,
            column: 87
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 16
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 54
          },
          end: {
            line: 28,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 75
          },
          end: {
            line: 28,
            column: 89
          }
        }, {
          start: {
            line: 28,
            column: 92
          },
          end: {
            line: 28,
            column: 97
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "3": {
        loc: {
          start: {
            line: 46,
            column: 23
          },
          end: {
            line: 59,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 62
          },
          end: {
            line: 53,
            column: 13
          }
        }, {
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 59,
            column: 13
          }
        }],
        line: 46
      },
      "4": {
        loc: {
          start: {
            line: 46,
            column: 23
          },
          end: {
            line: 46,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 23
          },
          end: {
            line: 46,
            column: 41
          }
        }, {
          start: {
            line: 46,
            column: 45
          },
          end: {
            line: 46,
            column: 59
          }
        }],
        line: 46
      },
      "5": {
        loc: {
          start: {
            line: 63,
            column: 27
          },
          end: {
            line: 63,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 27
          },
          end: {
            line: 63,
            column: 49
          }
        }, {
          start: {
            line: 63,
            column: 53
          },
          end: {
            line: 63,
            column: 54
          }
        }],
        line: 63
      },
      "6": {
        loc: {
          start: {
            line: 86,
            column: 19
          },
          end: {
            line: 86,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 86,
            column: 44
          },
          end: {
            line: 86,
            column: 57
          }
        }, {
          start: {
            line: 86,
            column: 60
          },
          end: {
            line: 86,
            column: 73
          }
        }],
        line: 86
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/dashboard/inventory-value/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { prisma } from '@/lib/prisma';\nimport { cacheService } from '@/lib/cache';\nimport { ShopAccessControl } from '@/lib/utils/shopMiddleware';\nimport { validateTokenPermission } from '@/lib/auth';\n\nexport const GET = ShopAccessControl.withShopAccess(async (request: NextRequest, context) => {\n    try {\n        // Validate token and permissions\n        const authResult = await validateTokenPermission(request, 'dashboard:view');\n        if (!authResult.isValid) {\n            return NextResponse.json({ error: authResult.message }, { status: 401 });\n        }\n\n        // Check cache first with shop context\n        const cacheKey = `dashboard:inventory-value:${context.isFiltered ? context.shopId : 'all'}`;\n        const cachedData = await cacheService.get(cacheKey);\n\n        if (cachedData) {\n            console.log('\u2705 Inventory value served from cache');\n            return NextResponse.json({\n                ...cachedData,\n                meta: {\n                    shopFiltered: context.isFiltered,\n                    shopId: context.shopId,\n                    fromCache: true\n                }\n            });\n        }\n\n        console.log('\uD83D\uDD04 Fetching fresh inventory value with shop context:', {\n            shopId: context.shopId,\n            isFiltered: context.isFiltered\n        });\n\n        // Direct SQL query to calculate inventory value with optional shop filtering using shop-specific cost\n        const result = context.isFiltered && context.shopId\n            ? await prisma.$queryRaw`\n                SELECT SUM(i.quantity * COALESCE(i.shopspecificcost, 0)) as total_value\n                FROM \"InventoryItem\" i\n                WHERE i.\"shopId\" = ${context.shopId}\n                AND i.quantity > 0\n                AND i.shopspecificcost IS NOT NULL\n                AND i.shopspecificcost > 0\n            `\n            : await prisma.$queryRaw`\n                SELECT SUM(i.quantity * COALESCE(i.shopspecificcost, 0)) as total_value\n                FROM \"InventoryItem\" i\n                WHERE i.quantity > 0\n                AND i.shopspecificcost IS NOT NULL\n                AND i.shopspecificcost > 0\n            `;\n\n        // Log the raw result\n        console.log('Raw inventory value result:', result);\n\n        // Extract the value from the result\n        const totalValue = result[0]?.total_value || 0;\n        console.log('Extracted total value:', totalValue);\n\n        // Format the value\n        const formattedValue = Number(totalValue).toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n        const responseData = {\n            success: true,\n            totalValue,\n            formattedValue: `Rs. ${formattedValue}`,\n            meta: {\n                shopFiltered: context.isFiltered,\n                shopId: context.shopId,\n                fromCache: false\n            }\n        };\n\n        // Cache for 3 minutes (inventory value changes moderately)\n        await cacheService.set(cacheKey, responseData, 180);\n        console.log('\uD83D\uDCBE Inventory value cached for 3 minutes');\n\n        return NextResponse.json(responseData);\n    } catch (error) {\n        console.error('Error calculating inventory value:', error);\n        return NextResponse.json({\n            success: false,\n            message: 'Failed to calculate inventory value',\n            error: error instanceof Error ? error.message : String(error),\n            meta: {\n                shopFiltered: context.isFiltered,\n                shopId: context.shopId\n            }\n        }, { status: 500 });\n    }\n});"],
      names: ["GET", "ShopAccessControl", "withShopAccess", "request", "context", "authResult", "validateTokenPermission", "isValid", "NextResponse", "json", "error", "message", "status", "cacheKey", "isFiltered", "shopId", "cachedData", "cacheService", "get", "console", "log", "meta", "shopFiltered", "fromCache", "result", "prisma", "$queryRaw", "totalValue", "total_value", "formattedValue", "Number", "toFixed", "replace", "responseData", "success", "set", "Error", "String"],
      mappings: ";;;;+BAMaA;;;eAAAA;;;wBAN6B;wBACnB;uBACM;gCACK;sBACM;AAEjC,MAAMA,MAAMC,iCAAiB,CAACC,cAAc,CAAC,OAAOC,SAAsBC;IAC7E,IAAI;QACA,iCAAiC;QACjC,MAAMC,aAAa,MAAMC,IAAAA,6BAAuB,EAACH,SAAS;QAC1D,IAAI,CAACE,WAAWE,OAAO,EAAE;YACrB,OAAOC,oBAAY,CAACC,IAAI,CAAC;gBAAEC,OAAOL,WAAWM,OAAO;YAAC,GAAG;gBAAEC,QAAQ;YAAI;QAC1E;QAEA,sCAAsC;QACtC,MAAMC,WAAW,CAAC,0BAA0B,EAAET,QAAQU,UAAU,GAAGV,QAAQW,MAAM,GAAG,MAAM,CAAC;QAC3F,MAAMC,aAAa,MAAMC,mBAAY,CAACC,GAAG,CAACL;QAE1C,IAAIG,YAAY;YACZG,QAAQC,GAAG,CAAC;YACZ,OAAOZ,oBAAY,CAACC,IAAI,CAAC;gBACrB,GAAGO,UAAU;gBACbK,MAAM;oBACFC,cAAclB,QAAQU,UAAU;oBAChCC,QAAQX,QAAQW,MAAM;oBACtBQ,WAAW;gBACf;YACJ;QACJ;QAEAJ,QAAQC,GAAG,CAAC,kEAAwD;YAChEL,QAAQX,QAAQW,MAAM;YACtBD,YAAYV,QAAQU,UAAU;QAClC;QAEA,sGAAsG;QACtG,MAAMU,SAASpB,QAAQU,UAAU,IAAIV,QAAQW,MAAM,GAC7C,MAAMU,cAAM,CAACC,SAAS,CAAC;;;mCAGF,EAAEtB,QAAQW,MAAM,CAAC;;;;YAIxC,CAAC,GACC,MAAMU,cAAM,CAACC,SAAS,CAAC;;;;;;YAMzB,CAAC;QAEL,qBAAqB;QACrBP,QAAQC,GAAG,CAAC,+BAA+BI;QAE3C,oCAAoC;QACpC,MAAMG,aAAaH,MAAM,CAAC,EAAE,EAAEI,eAAe;QAC7CT,QAAQC,GAAG,CAAC,0BAA0BO;QAEtC,mBAAmB;QACnB,MAAME,iBAAiBC,OAAOH,YAAYI,OAAO,CAAC,GAAGC,OAAO,CAAC,yBAAyB;QAEtF,MAAMC,eAAe;YACjBC,SAAS;YACTP;YACAE,gBAAgB,CAAC,IAAI,EAAEA,eAAe,CAAC;YACvCR,MAAM;gBACFC,cAAclB,QAAQU,UAAU;gBAChCC,QAAQX,QAAQW,MAAM;gBACtBQ,WAAW;YACf;QACJ;QAEA,2DAA2D;QAC3D,MAAMN,mBAAY,CAACkB,GAAG,CAACtB,UAAUoB,cAAc;QAC/Cd,QAAQC,GAAG,CAAC;QAEZ,OAAOZ,oBAAY,CAACC,IAAI,CAACwB;IAC7B,EAAE,OAAOvB,OAAO;QACZS,QAAQT,KAAK,CAAC,sCAAsCA;QACpD,OAAOF,oBAAY,CAACC,IAAI,CAAC;YACrByB,SAAS;YACTvB,SAAS;YACTD,OAAOA,iBAAiB0B,QAAQ1B,MAAMC,OAAO,GAAG0B,OAAO3B;YACvDW,MAAM;gBACFC,cAAclB,QAAQU,UAAU;gBAChCC,QAAQX,QAAQW,MAAM;YAC1B;QACJ,GAAG;YAAEH,QAAQ;QAAI;IACrB;AACJ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b90abed78a46eade449395a8b252765a05fb6043"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ibn0b0n4d = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ibn0b0n4d();
cov_2ibn0b0n4d().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2ibn0b0n4d().s[1]++;
Object.defineProperty(exports, "GET", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2ibn0b0n4d().f[0]++;
    cov_2ibn0b0n4d().s[2]++;
    return GET;
  }
});
const _server =
/* istanbul ignore next */
(cov_2ibn0b0n4d().s[3]++, require("next/server"));
const _prisma =
/* istanbul ignore next */
(cov_2ibn0b0n4d().s[4]++, require("../../../../lib/prisma"));
const _cache =
/* istanbul ignore next */
(cov_2ibn0b0n4d().s[5]++, require("../../../../lib/cache"));
const _shopMiddleware =
/* istanbul ignore next */
(cov_2ibn0b0n4d().s[6]++, require("../../../../lib/utils/shopMiddleware"));
const _auth =
/* istanbul ignore next */
(cov_2ibn0b0n4d().s[7]++, require("../../../../lib/auth"));
const GET =
/* istanbul ignore next */
(cov_2ibn0b0n4d().s[8]++, _shopMiddleware.ShopAccessControl.withShopAccess(async (request, context) => {
  /* istanbul ignore next */
  cov_2ibn0b0n4d().f[1]++;
  cov_2ibn0b0n4d().s[9]++;
  try {
    // Validate token and permissions
    const authResult =
    /* istanbul ignore next */
    (cov_2ibn0b0n4d().s[10]++, await (0, _auth.validateTokenPermission)(request, "dashboard:view"));
    /* istanbul ignore next */
    cov_2ibn0b0n4d().s[11]++;
    if (!authResult.isValid) {
      /* istanbul ignore next */
      cov_2ibn0b0n4d().b[0][0]++;
      cov_2ibn0b0n4d().s[12]++;
      return _server.NextResponse.json({
        error: authResult.message
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ibn0b0n4d().b[0][1]++;
    }
    // Check cache first with shop context
    const cacheKey =
    /* istanbul ignore next */
    (cov_2ibn0b0n4d().s[13]++, `dashboard:inventory-value:${context.isFiltered ?
    /* istanbul ignore next */
    (cov_2ibn0b0n4d().b[1][0]++, context.shopId) :
    /* istanbul ignore next */
    (cov_2ibn0b0n4d().b[1][1]++, "all")}`);
    const cachedData =
    /* istanbul ignore next */
    (cov_2ibn0b0n4d().s[14]++, await _cache.cacheService.get(cacheKey));
    /* istanbul ignore next */
    cov_2ibn0b0n4d().s[15]++;
    if (cachedData) {
      /* istanbul ignore next */
      cov_2ibn0b0n4d().b[2][0]++;
      cov_2ibn0b0n4d().s[16]++;
      console.log("✅ Inventory value served from cache");
      /* istanbul ignore next */
      cov_2ibn0b0n4d().s[17]++;
      return _server.NextResponse.json({
        ...cachedData,
        meta: {
          shopFiltered: context.isFiltered,
          shopId: context.shopId,
          fromCache: true
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ibn0b0n4d().b[2][1]++;
    }
    cov_2ibn0b0n4d().s[18]++;
    console.log("\uD83D\uDD04 Fetching fresh inventory value with shop context:", {
      shopId: context.shopId,
      isFiltered: context.isFiltered
    });
    // Direct SQL query to calculate inventory value with optional shop filtering using shop-specific cost
    const result =
    /* istanbul ignore next */
    (cov_2ibn0b0n4d().s[19]++,
    /* istanbul ignore next */
    (cov_2ibn0b0n4d().b[4][0]++, context.isFiltered) &&
    /* istanbul ignore next */
    (cov_2ibn0b0n4d().b[4][1]++, context.shopId) ?
    /* istanbul ignore next */
    (cov_2ibn0b0n4d().b[3][0]++, await _prisma.prisma.$queryRaw`
                SELECT SUM(i.quantity * COALESCE(i.shopspecificcost, 0)) as total_value
                FROM "InventoryItem" i
                WHERE i."shopId" = ${context.shopId}
                AND i.quantity > 0
                AND i.shopspecificcost IS NOT NULL
                AND i.shopspecificcost > 0
            `) :
    /* istanbul ignore next */
    (cov_2ibn0b0n4d().b[3][1]++, await _prisma.prisma.$queryRaw`
                SELECT SUM(i.quantity * COALESCE(i.shopspecificcost, 0)) as total_value
                FROM "InventoryItem" i
                WHERE i.quantity > 0
                AND i.shopspecificcost IS NOT NULL
                AND i.shopspecificcost > 0
            `));
    // Log the raw result
    /* istanbul ignore next */
    cov_2ibn0b0n4d().s[20]++;
    console.log("Raw inventory value result:", result);
    // Extract the value from the result
    const totalValue =
    /* istanbul ignore next */
    (cov_2ibn0b0n4d().s[21]++,
    /* istanbul ignore next */
    (cov_2ibn0b0n4d().b[5][0]++, result[0]?.total_value) ||
    /* istanbul ignore next */
    (cov_2ibn0b0n4d().b[5][1]++, 0));
    /* istanbul ignore next */
    cov_2ibn0b0n4d().s[22]++;
    console.log("Extracted total value:", totalValue);
    // Format the value
    const formattedValue =
    /* istanbul ignore next */
    (cov_2ibn0b0n4d().s[23]++, Number(totalValue).toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ","));
    const responseData =
    /* istanbul ignore next */
    (cov_2ibn0b0n4d().s[24]++, {
      success: true,
      totalValue,
      formattedValue: `Rs. ${formattedValue}`,
      meta: {
        shopFiltered: context.isFiltered,
        shopId: context.shopId,
        fromCache: false
      }
    });
    // Cache for 3 minutes (inventory value changes moderately)
    /* istanbul ignore next */
    cov_2ibn0b0n4d().s[25]++;
    await _cache.cacheService.set(cacheKey, responseData, 180);
    /* istanbul ignore next */
    cov_2ibn0b0n4d().s[26]++;
    console.log("\uD83D\uDCBE Inventory value cached for 3 minutes");
    /* istanbul ignore next */
    cov_2ibn0b0n4d().s[27]++;
    return _server.NextResponse.json(responseData);
  } catch (error) {
    /* istanbul ignore next */
    cov_2ibn0b0n4d().s[28]++;
    console.error("Error calculating inventory value:", error);
    /* istanbul ignore next */
    cov_2ibn0b0n4d().s[29]++;
    return _server.NextResponse.json({
      success: false,
      message: "Failed to calculate inventory value",
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2ibn0b0n4d().b[6][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2ibn0b0n4d().b[6][1]++, String(error)),
      meta: {
        shopFiltered: context.isFiltered,
        shopId: context.shopId
      }
    }, {
      status: 500
    });
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,