588562645fa7caec0fec6af5e57202b9
"use strict";

/* istanbul ignore next */
function cov_11b6nqn25m() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/products/route.ts";
  var hash = "63579931a97c681efb66369a3d8c92c3c6ffc6b5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/products/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 20
        }
      },
      "6": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "7": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 36
        }
      },
      "8": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 45
        }
      },
      "9": {
        start: {
          line: 22,
          column: 22
        },
        end: {
          line: 22,
          column: 63
        }
      },
      "10": {
        start: {
          line: 23,
          column: 14
        },
        end: {
          line: 23,
          column: 42
        }
      },
      "11": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 46
        }
      },
      "12": {
        start: {
          line: 25,
          column: 24
        },
        end: {
          line: 25,
          column: 68
        }
      },
      "13": {
        start: {
          line: 27,
          column: 28
        },
        end: {
          line: 73,
          column: 1
        }
      },
      "14": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 210,
          column: 2
        }
      },
      "15": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 209,
          column: 5
        }
      },
      "16": {
        start: {
          line: 76,
          column: 33
        },
        end: {
          line: 76,
          column: 53
        }
      },
      "17": {
        start: {
          line: 77,
          column: 27
        },
        end: {
          line: 77,
          column: 57
        }
      },
      "18": {
        start: {
          line: 78,
          column: 23
        },
        end: {
          line: 78,
          column: 49
        }
      },
      "19": {
        start: {
          line: 79,
          column: 32
        },
        end: {
          line: 79,
          column: 78
        }
      },
      "20": {
        start: {
          line: 80,
          column: 33
        },
        end: {
          line: 80,
          column: 76
        }
      },
      "21": {
        start: {
          line: 81,
          column: 21
        },
        end: {
          line: 81,
          column: 62
        }
      },
      "22": {
        start: {
          line: 82,
          column: 22
        },
        end: {
          line: 82,
          column: 65
        }
      },
      "23": {
        start: {
          line: 84,
          column: 28
        },
        end: {
          line: 84,
          column: 56
        }
      },
      "24": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 90,
          column: 11
        }
      },
      "25": {
        start: {
          line: 91,
          column: 21
        },
        end: {
          line: 91,
          column: 39
        }
      },
      "26": {
        start: {
          line: 93,
          column: 22
        },
        end: {
          line: 93,
          column: 24
        }
      },
      "27": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "28": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 52
        }
      },
      "29": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "30": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 117,
          column: 14
        }
      },
      "31": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "32": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 75
        }
      },
      "33": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 159,
          column: 15
        }
      },
      "34": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 96
        }
      },
      "35": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 188,
          column: 15
        }
      },
      "36": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 57
        }
      },
      "37": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 199,
          column: 11
        }
      },
      "38": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 57
        }
      },
      "39": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 208,
          column: 11
        }
      },
      "40": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 303,
          column: 5
        }
      },
      "41": {
        start: {
          line: 214,
          column: 27
        },
        end: {
          line: 214,
          column: 96
        }
      },
      "42": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 221,
          column: 9
        }
      },
      "43": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 220,
          column: 15
        }
      },
      "44": {
        start: {
          line: 222,
          column: 28
        },
        end: {
          line: 222,
          column: 48
        }
      },
      "45": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 58
        }
      },
      "46": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 81
        }
      },
      "47": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 75
        }
      },
      "48": {
        start: {
          line: 226,
          column: 39
        },
        end: {
          line: 226,
          column: 65
        }
      },
      "49": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 82
        }
      },
      "50": {
        start: {
          line: 228,
          column: 24
        },
        end: {
          line: 241,
          column: 44
        }
      },
      "51": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 240,
          column: 15
        }
      },
      "52": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 244,
          column: 9
        }
      },
      "53": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 243,
          column: 55
        }
      },
      "54": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 245,
          column: 91
        }
      },
      "55": {
        start: {
          line: 247,
          column: 27
        },
        end: {
          line: 247,
          column: 63
        }
      },
      "56": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 261,
          column: 9
        }
      },
      "57": {
        start: {
          line: 250,
          column: 26
        },
        end: {
          line: 250,
          column: 45
        }
      },
      "58": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 260,
          column: 13
        }
      },
      "59": {
        start: {
          line: 252,
          column: 32
        },
        end: {
          line: 252,
          column: 67
        }
      },
      "60": {
        start: {
          line: 253,
          column: 16
        },
        end: {
          line: 257,
          column: 17
        }
      },
      "61": {
        start: {
          line: 254,
          column: 20
        },
        end: {
          line: 254,
          column: 55
        }
      },
      "62": {
        start: {
          line: 255,
          column: 23
        },
        end: {
          line: 257,
          column: 17
        }
      },
      "63": {
        start: {
          line: 256,
          column: 20
        },
        end: {
          line: 256,
          column: 52
        }
      },
      "64": {
        start: {
          line: 259,
          column: 16
        },
        end: {
          line: 259,
          column: 82
        }
      },
      "65": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 277,
          column: 11
        }
      },
      "66": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 57
        }
      },
      "67": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 281,
          column: 46
        }
      },
      "68": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 282,
          column: 47
        }
      },
      "69": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 283,
          column: 49
        }
      },
      "70": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 284,
          column: 48
        }
      },
      "71": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 293,
          column: 11
        }
      },
      "72": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 56
        }
      },
      "73": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 302,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 10
          }
        },
        loc: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 10
          },
          end: {
            line: 15,
            column: 11
          }
        },
        loc: {
          start: {
            line: 15,
            column: 21
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 74,
            column: 61
          },
          end: {
            line: 74,
            column: 62
          }
        },
        loc: {
          start: {
            line: 74,
            column: 87
          },
          end: {
            line: 210,
            column: 1
          }
        },
        line: 74
      },
      "4": {
        name: "POST",
        decl: {
          start: {
            line: 211,
            column: 15
          },
          end: {
            line: 211,
            column: 19
          }
        },
        loc: {
          start: {
            line: 211,
            column: 29
          },
          end: {
            line: 304,
            column: 1
          }
        },
        line: 211
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 228,
            column: 53
          },
          end: {
            line: 228,
            column: 54
          }
        },
        loc: {
          start: {
            line: 228,
            column: 63
          },
          end: {
            line: 241,
            column: 9
          }
        },
        line: 228
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 81,
            column: 30
          },
          end: {
            line: 81,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 30
          },
          end: {
            line: 81,
            column: 54
          }
        }, {
          start: {
            line: 81,
            column: 58
          },
          end: {
            line: 81,
            column: 61
          }
        }],
        line: 81
      },
      "1": {
        loc: {
          start: {
            line: 82,
            column: 31
          },
          end: {
            line: 82,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 31
          },
          end: {
            line: 82,
            column: 56
          }
        }, {
          start: {
            line: 82,
            column: 60
          },
          end: {
            line: 82,
            column: 64
          }
        }],
        line: 82
      },
      "2": {
        loc: {
          start: {
            line: 84,
            column: 28
          },
          end: {
            line: 84,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 43
          },
          end: {
            line: 84,
            column: 48
          }
        }, {
          start: {
            line: 84,
            column: 51
          },
          end: {
            line: 84,
            column: 56
          }
        }],
        line: 84
      },
      "3": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "4": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "5": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        }, {
          start: {
            line: 160,
            column: 15
          },
          end: {
            line: 189,
            column: 9
          }
        }],
        line: 121
      },
      "6": {
        loc: {
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 121,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 121,
            column: 30
          }
        }, {
          start: {
            line: 121,
            column: 34
          },
          end: {
            line: 121,
            column: 48
          }
        }, {
          start: {
            line: 121,
            column: 52
          },
          end: {
            line: 121,
            column: 69
          }
        }],
        line: 121
      },
      "7": {
        loc: {
          start: {
            line: 171,
            column: 36
          },
          end: {
            line: 181,
            column: 29
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 55
          },
          end: {
            line: 181,
            column: 21
          }
        }, {
          start: {
            line: 181,
            column: 24
          },
          end: {
            line: 181,
            column: 29
          }
        }],
        line: 171
      },
      "8": {
        loc: {
          start: {
            line: 205,
            column: 19
          },
          end: {
            line: 205,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 205,
            column: 44
          },
          end: {
            line: 205,
            column: 57
          }
        }, {
          start: {
            line: 205,
            column: 60
          },
          end: {
            line: 205,
            column: 73
          }
        }],
        line: 205
      },
      "9": {
        loc: {
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "10": {
        loc: {
          start: {
            line: 226,
            column: 39
          },
          end: {
            line: 226,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 39
          },
          end: {
            line: 226,
            column: 60
          }
        }, {
          start: {
            line: 226,
            column: 64
          },
          end: {
            line: 226,
            column: 65
          }
        }],
        line: 226
      },
      "11": {
        loc: {
          start: {
            line: 233,
            column: 29
          },
          end: {
            line: 233,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 233,
            column: 29
          },
          end: {
            line: 233,
            column: 48
          }
        }, {
          start: {
            line: 233,
            column: 52
          },
          end: {
            line: 233,
            column: 56
          }
        }],
        line: 233
      },
      "12": {
        loc: {
          start: {
            line: 234,
            column: 33
          },
          end: {
            line: 234,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 234,
            column: 33
          },
          end: {
            line: 234,
            column: 56
          }
        }, {
          start: {
            line: 234,
            column: 60
          },
          end: {
            line: 234,
            column: 64
          }
        }],
        line: 234
      },
      "13": {
        loc: {
          start: {
            line: 236,
            column: 27
          },
          end: {
            line: 236,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 27
          },
          end: {
            line: 236,
            column: 50
          }
        }, {
          start: {
            line: 236,
            column: 54
          },
          end: {
            line: 236,
            column: 55
          }
        }],
        line: 236
      },
      "14": {
        loc: {
          start: {
            line: 237,
            column: 32
          },
          end: {
            line: 237,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 237,
            column: 57
          },
          end: {
            line: 237,
            column: 89
          }
        }, {
          start: {
            line: 237,
            column: 92
          },
          end: {
            line: 237,
            column: 96
          }
        }],
        line: 237
      },
      "15": {
        loc: {
          start: {
            line: 238,
            column: 35
          },
          end: {
            line: 238,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 238,
            column: 63
          },
          end: {
            line: 238,
            column: 98
          }
        }, {
          start: {
            line: 238,
            column: 101
          },
          end: {
            line: 238,
            column: 103
          }
        }],
        line: 238
      },
      "16": {
        loc: {
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      },
      "17": {
        loc: {
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 261,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 261,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "18": {
        loc: {
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 249,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 249,
            column: 22
          }
        }, {
          start: {
            line: 249,
            column: 26
          },
          end: {
            line: 249,
            column: 58
          }
        }],
        line: 249
      },
      "19": {
        loc: {
          start: {
            line: 253,
            column: 16
          },
          end: {
            line: 257,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 16
          },
          end: {
            line: 257,
            column: 17
          }
        }, {
          start: {
            line: 255,
            column: 23
          },
          end: {
            line: 257,
            column: 17
          }
        }],
        line: 253
      },
      "20": {
        loc: {
          start: {
            line: 253,
            column: 20
          },
          end: {
            line: 253,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 253,
            column: 20
          },
          end: {
            line: 253,
            column: 27
          }
        }, {
          start: {
            line: 253,
            column: 31
          },
          end: {
            line: 253,
            column: 45
          }
        }],
        line: 253
      },
      "21": {
        loc: {
          start: {
            line: 255,
            column: 23
          },
          end: {
            line: 257,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 23
          },
          end: {
            line: 257,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "22": {
        loc: {
          start: {
            line: 255,
            column: 27
          },
          end: {
            line: 255,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 255,
            column: 27
          },
          end: {
            line: 255,
            column: 34
          }
        }, {
          start: {
            line: 255,
            column: 38
          },
          end: {
            line: 255,
            column: 49
          }
        }],
        line: 255
      },
      "23": {
        loc: {
          start: {
            line: 299,
            column: 19
          },
          end: {
            line: 299,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 299,
            column: 44
          },
          end: {
            line: 299,
            column: 57
          }
        }, {
          start: {
            line: 299,
            column: 60
          },
          end: {
            line: 299,
            column: 73
          }
        }],
        line: 299
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/products/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { revalidateTag, revalidatePath } from 'next/cache';\nimport { PrismaClient } from '@prisma/client';\nimport { getShopId } from '@/lib/utils/middleware';\nimport { cacheService } from '@/lib/cache';\nimport { auditService } from '@/services/auditService';\nimport { verifyToken } from '@/lib/auth';\n\nimport { safeQuery, prisma } from '@/lib/prisma';\nimport { ShopAccessControl } from '@/lib/utils/shopMiddleware';\nimport { validateTokenPermission } from '@/lib/auth';\n\n\n// Default fallback data for products\nconst defaultProductsData = [\n    { id: 1, name: 'Cricket Bat', sku: 'CB001', description: 'Professional cricket bat', price: 15000, weightedAverageCost: 12000, category_name: 'Cricket' },\n    { id: 2, name: 'Cricket Ball', sku: 'CB002', description: 'Match quality cricket ball', price: 2500, weightedAverageCost: 1800, category_name: 'Cricket' },\n    { id: 3, name: 'Football', sku: 'FB001', description: 'Size 5 football', price: 5000, weightedAverageCost: 3500, category_name: 'Football' },\n    { id: 4, name: 'Basketball', sku: 'BB001', description: 'Indoor basketball', price: 6000, weightedAverageCost: 4200, category_name: 'Basketball' },\n    { id: 5, name: 'Tennis Racket', sku: 'TR001', description: 'Professional tennis racket', price: 12000, weightedAverageCost: 8400, category_name: 'Tennis' }\n];\n\nexport const GET = ShopAccessControl.withShopAccess(async (request: NextRequest, context) => {\n    try {\n        const { searchParams } = new URL(request.url);\n        const categoryId = searchParams.get('categoryId');\n        const search = searchParams.get('search');\n        const includeInactive = searchParams.get('includeInactive') === 'true';\n        const includeInventory = searchParams.get('include') === 'inventory';\n        const page = parseInt(searchParams.get('page') || '1');\n        const limit = parseInt(searchParams.get('limit') || '50');\n        // For very high limits (like \"Show All\"), use a reasonable maximum\n        const actualLimit = limit > 1000 ? 10000 : limit;\n\n        console.log('Products API - Shop context:', {\n            shopId: context.shopId,\n            isFiltered: context.isFiltered,\n            isAdmin: context.isAdmin,\n            userShopId: context.userShopId\n        });\n\n        const skip = (page - 1) * limit;\n\n        // Build where clause\n        const where: any = {};\n\n        if (categoryId) {\n            where.categoryId = parseInt(categoryId);\n        }\n\n        if (search) {\n            where.OR = [\n                {\n                    name: {\n                        contains: search,\n                        mode: 'insensitive'\n                    }\n                },\n                {\n                    sku: {\n                        contains: search,\n                        mode: 'insensitive'\n                    }\n                },\n                {\n                    barcode: {\n                        contains: search,\n                        mode: 'insensitive'\n                    }\n                }\n            ];\n        }\n\n        // Apply shop-based filtering for inventory\n        let products;\n        if (context.isFiltered && context.shopId && !includeInventory) {\n            console.log(`Filtering products by shopId: ${context.shopId}`);\n            products = await prisma.product.findMany({\n                where: {\n                    ...where,\n                    inventoryItems: {\n                        some: {\n                            shopId: context.shopId\n                        }\n                    }\n                },\n                include: {\n                    category: {\n                        select: {\n                            id: true,\n                            name: true\n                        }\n                    },\n                    inventoryItems: {\n                        where: {\n                            shopId: context.shopId\n                        },\n                        include: {\n                            shop: {\n                                select: {\n                                    id: true,\n                                    name: true,\n                                    location: true\n                                }\n                            }\n                        }\n                    }\n                },\n                orderBy: {\n                    name: 'asc'\n                },\n                skip,\n                take: actualLimit\n            });\n        } else {\n            console.log('Fetching all products (admin or no shop filter or include inventory)');\n            products = await prisma.product.findMany({\n                where,\n                include: {\n                    category: {\n                        select: {\n                            id: true,\n                            name: true\n                        }\n                    },\n                    inventoryItems: includeInventory ? {\n                        include: {\n                            shop: {\n                                select: {\n                                    id: true,\n                                    name: true,\n                                    location: true\n                                }\n                            }\n                        }\n                    } : false\n                },\n                orderBy: {\n                    name: 'asc'\n                },\n                skip,\n                take: actualLimit\n            });\n        }\n\n        console.log(`Found ${products.length} products`);\n\n        return NextResponse.json({\n            success: true,\n            data: products,\n            meta: {\n                shopFiltered: context.isFiltered,\n                shopId: context.shopId,\n                totalItems: products.length\n            }\n        });\n    } catch (error) {\n        console.error('Error fetching products:', error);\n        return NextResponse.json({\n            success: false,\n            message: 'Error fetching products',\n            error: error instanceof Error ? error.message : String(error)\n        }, { status: 500 });\n    }\n});\n\nexport async function POST(request: NextRequest) {\n    try {\n        // Validate token and permissions\n        const authResult = await validateTokenPermission(request, 'inventory:manage');\n        if (!authResult.isValid) {\n            return NextResponse.json({ error: authResult.message }, { status: 401 });\n        }\n\n        const productData = await request.json();\n        console.log('Received productData:', productData);\n        console.log('productData.basePrice type:', typeof productData.basePrice);\n        console.log('productData.basePrice value:', productData.basePrice);\n\n        const newWeightedAverageCost = productData.basePrice || 0;\n        console.log('Calculated newWeightedAverageCost:', newWeightedAverageCost);\n\n        const product = await safeQuery(\n            async () => {\n                return await prisma.product.create({\n                    data: {\n                        name: productData.name,\n                        sku: productData.sku,\n                        barcode: productData.barcode || null,\n                        description: productData.description || null,\n                        weightedAverageCost: newWeightedAverageCost,\n                        price: productData.retailPrice || 0,\n                        categoryId: productData.categoryId ? parseInt(productData.categoryId) : null,\n                        minStockLevel: productData.minStockLevel ? parseInt(productData.minStockLevel) : 10,\n                    }\n                });\n            },\n            null,\n            'Failed to create product'\n        );\n\n        if (!product) {\n            throw new Error('Product creation failed');\n        }\n\n        console.log('Product created successfully with WAC:', product.weightedAverageCost);\n\n        // Determine userId from token for audit logging\n        const authHeader = request.headers.get('authorization');\n        let userId: string | undefined;\n        if (authHeader && authHeader.startsWith('Bearer ')) {\n            const token = authHeader.slice(7);\n            try {\n                const decoded: any = await verifyToken(token);\n                if (decoded && decoded.userId) {\n                    userId = decoded.userId.toString();\n                } else if (decoded && decoded.sub) {\n                    userId = decoded.sub.toString();\n                }\n            } catch (err) {\n                console.warn('Invalid token for audit logging on product create');\n            }\n        }\n\n        // Log CREATE action\n        await auditService.logAction({\n            action: 'CREATE',\n            entity: 'Product',\n            entityId: product.id,\n            userId,\n            details: {\n                name: product.name,\n                sku: product.sku,\n                barcode: product.barcode,\n                description: product.description,\n                price: product.price,\n                categoryId: product.categoryId,\n                minStockLevel: product.minStockLevel,\n            },\n        });\n\n        // Invalidate inventory cache\n        await cacheService.invalidateInventory();\n\n        // Revalidate Next.js cached pages\n        revalidateTag('products');\n        revalidateTag('inventory');\n        revalidatePath('/inventory');\n        revalidatePath('/products');\n\n        // Emit WebSocket event for real-time updates using utility function\n        // Real-time updates now handled by polling system\n\n        return NextResponse.json({\n            success: true,\n            message: 'Product created successfully',\n            data: product\n        }, { status: 201 });\n    } catch (error) {\n        console.error('Error creating product:', error);\n        return NextResponse.json({\n            success: false,\n            message: 'Error creating product',\n            error: error instanceof Error ? error.message : String(error)\n        }, { status: 500 });\n    }\n}"],
      names: ["GET", "POST", "defaultProductsData", "id", "name", "sku", "description", "price", "weightedAverageCost", "category_name", "ShopAccessControl", "withShopAccess", "request", "context", "searchParams", "URL", "url", "categoryId", "get", "search", "includeInactive", "includeInventory", "page", "parseInt", "limit", "actualLimit", "console", "log", "shopId", "isFiltered", "isAdmin", "userShopId", "skip", "where", "OR", "contains", "mode", "barcode", "products", "prisma", "product", "findMany", "inventoryItems", "some", "include", "category", "select", "shop", "location", "orderBy", "take", "length", "NextResponse", "json", "success", "data", "meta", "shopFiltered", "totalItems", "error", "message", "Error", "String", "status", "authResult", "validateTokenPermission", "isValid", "productData", "basePrice", "newWeightedAverageCost", "safeQuery", "create", "retailPrice", "minStockLevel", "authHeader", "headers", "userId", "startsWith", "token", "slice", "decoded", "verifyToken", "toString", "sub", "err", "warn", "auditService", "logAction", "action", "entity", "entityId", "details", "cacheService", "invalidateInventory", "revalidateTag", "revalidatePath"],
      mappings: ";;;;;;;;;;;IAsBaA,GAAG;eAAHA;;IAgJSC,IAAI;eAAJA;;;wBAtKoB;uBACI;wBAGjB;8BACA;sBACD;wBAEM;gCACA;AAIlC,qCAAqC;AACrC,MAAMC,sBAAsB;IACxB;QAAEC,IAAI;QAAGC,MAAM;QAAeC,KAAK;QAASC,aAAa;QAA4BC,OAAO;QAAOC,qBAAqB;QAAOC,eAAe;IAAU;IACxJ;QAAEN,IAAI;QAAGC,MAAM;QAAgBC,KAAK;QAASC,aAAa;QAA8BC,OAAO;QAAMC,qBAAqB;QAAMC,eAAe;IAAU;IACzJ;QAAEN,IAAI;QAAGC,MAAM;QAAYC,KAAK;QAASC,aAAa;QAAmBC,OAAO;QAAMC,qBAAqB;QAAMC,eAAe;IAAW;IAC3I;QAAEN,IAAI;QAAGC,MAAM;QAAcC,KAAK;QAASC,aAAa;QAAqBC,OAAO;QAAMC,qBAAqB;QAAMC,eAAe;IAAa;IACjJ;QAAEN,IAAI;QAAGC,MAAM;QAAiBC,KAAK;QAASC,aAAa;QAA8BC,OAAO;QAAOC,qBAAqB;QAAMC,eAAe;IAAS;CAC7J;AAEM,MAAMT,MAAMU,iCAAiB,CAACC,cAAc,CAAC,OAAOC,SAAsBC;IAC7E,IAAI;QACA,MAAM,EAAEC,YAAY,EAAE,GAAG,IAAIC,IAAIH,QAAQI,GAAG;QAC5C,MAAMC,aAAaH,aAAaI,GAAG,CAAC;QACpC,MAAMC,SAASL,aAAaI,GAAG,CAAC;QAChC,MAAME,kBAAkBN,aAAaI,GAAG,CAAC,uBAAuB;QAChE,MAAMG,mBAAmBP,aAAaI,GAAG,CAAC,eAAe;QACzD,MAAMI,OAAOC,SAAST,aAAaI,GAAG,CAAC,WAAW;QAClD,MAAMM,QAAQD,SAAST,aAAaI,GAAG,CAAC,YAAY;QACpD,mEAAmE;QACnE,MAAMO,cAAcD,QAAQ,OAAO,QAAQA;QAE3CE,QAAQC,GAAG,CAAC,gCAAgC;YACxCC,QAAQf,QAAQe,MAAM;YACtBC,YAAYhB,QAAQgB,UAAU;YAC9BC,SAASjB,QAAQiB,OAAO;YACxBC,YAAYlB,QAAQkB,UAAU;QAClC;QAEA,MAAMC,OAAO,AAACV,CAAAA,OAAO,CAAA,IAAKE;QAE1B,qBAAqB;QACrB,MAAMS,QAAa,CAAC;QAEpB,IAAIhB,YAAY;YACZgB,MAAMhB,UAAU,GAAGM,SAASN;QAChC;QAEA,IAAIE,QAAQ;YACRc,MAAMC,EAAE,GAAG;gBACP;oBACI9B,MAAM;wBACF+B,UAAUhB;wBACViB,MAAM;oBACV;gBACJ;gBACA;oBACI/B,KAAK;wBACD8B,UAAUhB;wBACViB,MAAM;oBACV;gBACJ;gBACA;oBACIC,SAAS;wBACLF,UAAUhB;wBACViB,MAAM;oBACV;gBACJ;aACH;QACL;QAEA,2CAA2C;QAC3C,IAAIE;QACJ,IAAIzB,QAAQgB,UAAU,IAAIhB,QAAQe,MAAM,IAAI,CAACP,kBAAkB;YAC3DK,QAAQC,GAAG,CAAC,CAAC,8BAA8B,EAAEd,QAAQe,MAAM,CAAC,CAAC;YAC7DU,WAAW,MAAMC,cAAM,CAACC,OAAO,CAACC,QAAQ,CAAC;gBACrCR,OAAO;oBACH,GAAGA,KAAK;oBACRS,gBAAgB;wBACZC,MAAM;4BACFf,QAAQf,QAAQe,MAAM;wBAC1B;oBACJ;gBACJ;gBACAgB,SAAS;oBACLC,UAAU;wBACNC,QAAQ;4BACJ3C,IAAI;4BACJC,MAAM;wBACV;oBACJ;oBACAsC,gBAAgB;wBACZT,OAAO;4BACHL,QAAQf,QAAQe,MAAM;wBAC1B;wBACAgB,SAAS;4BACLG,MAAM;gCACFD,QAAQ;oCACJ3C,IAAI;oCACJC,MAAM;oCACN4C,UAAU;gCACd;4BACJ;wBACJ;oBACJ;gBACJ;gBACAC,SAAS;oBACL7C,MAAM;gBACV;gBACA4B;gBACAkB,MAAMzB;YACV;QACJ,OAAO;YACHC,QAAQC,GAAG,CAAC;YACZW,WAAW,MAAMC,cAAM,CAACC,OAAO,CAACC,QAAQ,CAAC;gBACrCR;gBACAW,SAAS;oBACLC,UAAU;wBACNC,QAAQ;4BACJ3C,IAAI;4BACJC,MAAM;wBACV;oBACJ;oBACAsC,gBAAgBrB,mBAAmB;wBAC/BuB,SAAS;4BACLG,MAAM;gCACFD,QAAQ;oCACJ3C,IAAI;oCACJC,MAAM;oCACN4C,UAAU;gCACd;4BACJ;wBACJ;oBACJ,IAAI;gBACR;gBACAC,SAAS;oBACL7C,MAAM;gBACV;gBACA4B;gBACAkB,MAAMzB;YACV;QACJ;QAEAC,QAAQC,GAAG,CAAC,CAAC,MAAM,EAAEW,SAASa,MAAM,CAAC,SAAS,CAAC;QAE/C,OAAOC,oBAAY,CAACC,IAAI,CAAC;YACrBC,SAAS;YACTC,MAAMjB;YACNkB,MAAM;gBACFC,cAAc5C,QAAQgB,UAAU;gBAChCD,QAAQf,QAAQe,MAAM;gBACtB8B,YAAYpB,SAASa,MAAM;YAC/B;QACJ;IACJ,EAAE,OAAOQ,OAAO;QACZjC,QAAQiC,KAAK,CAAC,4BAA4BA;QAC1C,OAAOP,oBAAY,CAACC,IAAI,CAAC;YACrBC,SAAS;YACTM,SAAS;YACTD,OAAOA,iBAAiBE,QAAQF,MAAMC,OAAO,GAAGE,OAAOH;QAC3D,GAAG;YAAEI,QAAQ;QAAI;IACrB;AACJ;AAEO,eAAe9D,KAAKW,OAAoB;IAC3C,IAAI;QACA,iCAAiC;QACjC,MAAMoD,aAAa,MAAMC,IAAAA,6BAAuB,EAACrD,SAAS;QAC1D,IAAI,CAACoD,WAAWE,OAAO,EAAE;YACrB,OAAOd,oBAAY,CAACC,IAAI,CAAC;gBAAEM,OAAOK,WAAWJ,OAAO;YAAC,GAAG;gBAAEG,QAAQ;YAAI;QAC1E;QAEA,MAAMI,cAAc,MAAMvD,QAAQyC,IAAI;QACtC3B,QAAQC,GAAG,CAAC,yBAAyBwC;QACrCzC,QAAQC,GAAG,CAAC,+BAA+B,OAAOwC,YAAYC,SAAS;QACvE1C,QAAQC,GAAG,CAAC,gCAAgCwC,YAAYC,SAAS;QAEjE,MAAMC,yBAAyBF,YAAYC,SAAS,IAAI;QACxD1C,QAAQC,GAAG,CAAC,sCAAsC0C;QAElD,MAAM7B,UAAU,MAAM8B,IAAAA,iBAAS,EAC3B;YACI,OAAO,MAAM/B,cAAM,CAACC,OAAO,CAAC+B,MAAM,CAAC;gBAC/BhB,MAAM;oBACFnD,MAAM+D,YAAY/D,IAAI;oBACtBC,KAAK8D,YAAY9D,GAAG;oBACpBgC,SAAS8B,YAAY9B,OAAO,IAAI;oBAChC/B,aAAa6D,YAAY7D,WAAW,IAAI;oBACxCE,qBAAqB6D;oBACrB9D,OAAO4D,YAAYK,WAAW,IAAI;oBAClCvD,YAAYkD,YAAYlD,UAAU,GAAGM,SAAS4C,YAAYlD,UAAU,IAAI;oBACxEwD,eAAeN,YAAYM,aAAa,GAAGlD,SAAS4C,YAAYM,aAAa,IAAI;gBACrF;YACJ;QACJ,GACA,MACA;QAGJ,IAAI,CAACjC,SAAS;YACV,MAAM,IAAIqB,MAAM;QACpB;QAEAnC,QAAQC,GAAG,CAAC,0CAA0Ca,QAAQhC,mBAAmB;QAEjF,gDAAgD;QAChD,MAAMkE,aAAa9D,QAAQ+D,OAAO,CAACzD,GAAG,CAAC;QACvC,IAAI0D;QACJ,IAAIF,cAAcA,WAAWG,UAAU,CAAC,YAAY;YAChD,MAAMC,QAAQJ,WAAWK,KAAK,CAAC;YAC/B,IAAI;gBACA,MAAMC,UAAe,MAAMC,IAAAA,iBAAW,EAACH;gBACvC,IAAIE,WAAWA,QAAQJ,MAAM,EAAE;oBAC3BA,SAASI,QAAQJ,MAAM,CAACM,QAAQ;gBACpC,OAAO,IAAIF,WAAWA,QAAQG,GAAG,EAAE;oBAC/BP,SAASI,QAAQG,GAAG,CAACD,QAAQ;gBACjC;YACJ,EAAE,OAAOE,KAAK;gBACV1D,QAAQ2D,IAAI,CAAC;YACjB;QACJ;QAEA,oBAAoB;QACpB,MAAMC,0BAAY,CAACC,SAAS,CAAC;YACzBC,QAAQ;YACRC,QAAQ;YACRC,UAAUlD,QAAQrC,EAAE;YACpByE;YACAe,SAAS;gBACLvF,MAAMoC,QAAQpC,IAAI;gBAClBC,KAAKmC,QAAQnC,GAAG;gBAChBgC,SAASG,QAAQH,OAAO;gBACxB/B,aAAakC,QAAQlC,WAAW;gBAChCC,OAAOiC,QAAQjC,KAAK;gBACpBU,YAAYuB,QAAQvB,UAAU;gBAC9BwD,eAAejC,QAAQiC,aAAa;YACxC;QACJ;QAEA,6BAA6B;QAC7B,MAAMmB,oBAAY,CAACC,mBAAmB;QAEtC,kCAAkC;QAClCC,IAAAA,oBAAa,EAAC;QACdA,IAAAA,oBAAa,EAAC;QACdC,IAAAA,qBAAc,EAAC;QACfA,IAAAA,qBAAc,EAAC;QAEf,oEAAoE;QACpE,kDAAkD;QAElD,OAAO3C,oBAAY,CAACC,IAAI,CAAC;YACrBC,SAAS;YACTM,SAAS;YACTL,MAAMf;QACV,GAAG;YAAEuB,QAAQ;QAAI;IACrB,EAAE,OAAOJ,OAAO;QACZjC,QAAQiC,KAAK,CAAC,2BAA2BA;QACzC,OAAOP,oBAAY,CAACC,IAAI,CAAC;YACrBC,SAAS;YACTM,SAAS;YACTD,OAAOA,iBAAiBE,QAAQF,MAAMC,OAAO,GAAGE,OAAOH;QAC3D,GAAG;YAAEI,QAAQ;QAAI;IACrB;AACJ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "63579931a97c681efb66369a3d8c92c3c6ffc6b5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_11b6nqn25m = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_11b6nqn25m();
cov_11b6nqn25m().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_11b6nqn25m().f[0]++;
  cov_11b6nqn25m().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_11b6nqn25m().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_11b6nqn25m().s[3]++;
_export(exports, {
  GET: function () {
    /* istanbul ignore next */
    cov_11b6nqn25m().f[1]++;
    cov_11b6nqn25m().s[4]++;
    return GET;
  },
  POST: function () {
    /* istanbul ignore next */
    cov_11b6nqn25m().f[2]++;
    cov_11b6nqn25m().s[5]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_11b6nqn25m().s[6]++, require("next/server"));
const _cache =
/* istanbul ignore next */
(cov_11b6nqn25m().s[7]++, require("next/cache"));
const _cache1 =
/* istanbul ignore next */
(cov_11b6nqn25m().s[8]++, require("../../../lib/cache"));
const _auditService =
/* istanbul ignore next */
(cov_11b6nqn25m().s[9]++, require("../../../services/auditService"));
const _auth =
/* istanbul ignore next */
(cov_11b6nqn25m().s[10]++, require("../../../lib/auth"));
const _prisma =
/* istanbul ignore next */
(cov_11b6nqn25m().s[11]++, require("../../../lib/prisma"));
const _shopMiddleware =
/* istanbul ignore next */
(cov_11b6nqn25m().s[12]++, require("../../../lib/utils/shopMiddleware"));
// Default fallback data for products
const defaultProductsData =
/* istanbul ignore next */
(cov_11b6nqn25m().s[13]++, [{
  id: 1,
  name: "Cricket Bat",
  sku: "CB001",
  description: "Professional cricket bat",
  price: 15000,
  weightedAverageCost: 12000,
  category_name: "Cricket"
}, {
  id: 2,
  name: "Cricket Ball",
  sku: "CB002",
  description: "Match quality cricket ball",
  price: 2500,
  weightedAverageCost: 1800,
  category_name: "Cricket"
}, {
  id: 3,
  name: "Football",
  sku: "FB001",
  description: "Size 5 football",
  price: 5000,
  weightedAverageCost: 3500,
  category_name: "Football"
}, {
  id: 4,
  name: "Basketball",
  sku: "BB001",
  description: "Indoor basketball",
  price: 6000,
  weightedAverageCost: 4200,
  category_name: "Basketball"
}, {
  id: 5,
  name: "Tennis Racket",
  sku: "TR001",
  description: "Professional tennis racket",
  price: 12000,
  weightedAverageCost: 8400,
  category_name: "Tennis"
}]);
const GET =
/* istanbul ignore next */
(cov_11b6nqn25m().s[14]++, _shopMiddleware.ShopAccessControl.withShopAccess(async (request, context) => {
  /* istanbul ignore next */
  cov_11b6nqn25m().f[3]++;
  cov_11b6nqn25m().s[15]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[16]++, new URL(request.url));
    const categoryId =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[17]++, searchParams.get("categoryId"));
    const search =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[18]++, searchParams.get("search"));
    const includeInactive =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[19]++, searchParams.get("includeInactive") === "true");
    const includeInventory =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[20]++, searchParams.get("include") === "inventory");
    const page =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[21]++, parseInt(
    /* istanbul ignore next */
    (cov_11b6nqn25m().b[0][0]++, searchParams.get("page")) ||
    /* istanbul ignore next */
    (cov_11b6nqn25m().b[0][1]++, "1")));
    const limit =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[22]++, parseInt(
    /* istanbul ignore next */
    (cov_11b6nqn25m().b[1][0]++, searchParams.get("limit")) ||
    /* istanbul ignore next */
    (cov_11b6nqn25m().b[1][1]++, "50")));
    // For very high limits (like "Show All"), use a reasonable maximum
    const actualLimit =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[23]++, limit > 1000 ?
    /* istanbul ignore next */
    (cov_11b6nqn25m().b[2][0]++, 10000) :
    /* istanbul ignore next */
    (cov_11b6nqn25m().b[2][1]++, limit));
    /* istanbul ignore next */
    cov_11b6nqn25m().s[24]++;
    console.log("Products API - Shop context:", {
      shopId: context.shopId,
      isFiltered: context.isFiltered,
      isAdmin: context.isAdmin,
      userShopId: context.userShopId
    });
    const skip =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[25]++, (page - 1) * limit);
    // Build where clause
    const where =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[26]++, {});
    /* istanbul ignore next */
    cov_11b6nqn25m().s[27]++;
    if (categoryId) {
      /* istanbul ignore next */
      cov_11b6nqn25m().b[3][0]++;
      cov_11b6nqn25m().s[28]++;
      where.categoryId = parseInt(categoryId);
    } else
    /* istanbul ignore next */
    {
      cov_11b6nqn25m().b[3][1]++;
    }
    cov_11b6nqn25m().s[29]++;
    if (search) {
      /* istanbul ignore next */
      cov_11b6nqn25m().b[4][0]++;
      cov_11b6nqn25m().s[30]++;
      where.OR = [{
        name: {
          contains: search,
          mode: "insensitive"
        }
      }, {
        sku: {
          contains: search,
          mode: "insensitive"
        }
      }, {
        barcode: {
          contains: search,
          mode: "insensitive"
        }
      }];
    } else
    /* istanbul ignore next */
    {
      cov_11b6nqn25m().b[4][1]++;
    }
    // Apply shop-based filtering for inventory
    let products;
    /* istanbul ignore next */
    cov_11b6nqn25m().s[31]++;
    if (
    /* istanbul ignore next */
    (cov_11b6nqn25m().b[6][0]++, context.isFiltered) &&
    /* istanbul ignore next */
    (cov_11b6nqn25m().b[6][1]++, context.shopId) &&
    /* istanbul ignore next */
    (cov_11b6nqn25m().b[6][2]++, !includeInventory)) {
      /* istanbul ignore next */
      cov_11b6nqn25m().b[5][0]++;
      cov_11b6nqn25m().s[32]++;
      console.log(`Filtering products by shopId: ${context.shopId}`);
      /* istanbul ignore next */
      cov_11b6nqn25m().s[33]++;
      products = await _prisma.prisma.product.findMany({
        where: {
          ...where,
          inventoryItems: {
            some: {
              shopId: context.shopId
            }
          }
        },
        include: {
          category: {
            select: {
              id: true,
              name: true
            }
          },
          inventoryItems: {
            where: {
              shopId: context.shopId
            },
            include: {
              shop: {
                select: {
                  id: true,
                  name: true,
                  location: true
                }
              }
            }
          }
        },
        orderBy: {
          name: "asc"
        },
        skip,
        take: actualLimit
      });
    } else {
      /* istanbul ignore next */
      cov_11b6nqn25m().b[5][1]++;
      cov_11b6nqn25m().s[34]++;
      console.log("Fetching all products (admin or no shop filter or include inventory)");
      /* istanbul ignore next */
      cov_11b6nqn25m().s[35]++;
      products = await _prisma.prisma.product.findMany({
        where,
        include: {
          category: {
            select: {
              id: true,
              name: true
            }
          },
          inventoryItems: includeInventory ?
          /* istanbul ignore next */
          (cov_11b6nqn25m().b[7][0]++, {
            include: {
              shop: {
                select: {
                  id: true,
                  name: true,
                  location: true
                }
              }
            }
          }) :
          /* istanbul ignore next */
          (cov_11b6nqn25m().b[7][1]++, false)
        },
        orderBy: {
          name: "asc"
        },
        skip,
        take: actualLimit
      });
    }
    /* istanbul ignore next */
    cov_11b6nqn25m().s[36]++;
    console.log(`Found ${products.length} products`);
    /* istanbul ignore next */
    cov_11b6nqn25m().s[37]++;
    return _server.NextResponse.json({
      success: true,
      data: products,
      meta: {
        shopFiltered: context.isFiltered,
        shopId: context.shopId,
        totalItems: products.length
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_11b6nqn25m().s[38]++;
    console.error("Error fetching products:", error);
    /* istanbul ignore next */
    cov_11b6nqn25m().s[39]++;
    return _server.NextResponse.json({
      success: false,
      message: "Error fetching products",
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_11b6nqn25m().b[8][0]++, error.message) :
      /* istanbul ignore next */
      (cov_11b6nqn25m().b[8][1]++, String(error))
    }, {
      status: 500
    });
  }
}));
async function POST(request) {
  /* istanbul ignore next */
  cov_11b6nqn25m().f[4]++;
  cov_11b6nqn25m().s[40]++;
  try {
    // Validate token and permissions
    const authResult =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[41]++, await (0, _auth.validateTokenPermission)(request, "inventory:manage"));
    /* istanbul ignore next */
    cov_11b6nqn25m().s[42]++;
    if (!authResult.isValid) {
      /* istanbul ignore next */
      cov_11b6nqn25m().b[9][0]++;
      cov_11b6nqn25m().s[43]++;
      return _server.NextResponse.json({
        error: authResult.message
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b6nqn25m().b[9][1]++;
    }
    const productData =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[44]++, await request.json());
    /* istanbul ignore next */
    cov_11b6nqn25m().s[45]++;
    console.log("Received productData:", productData);
    /* istanbul ignore next */
    cov_11b6nqn25m().s[46]++;
    console.log("productData.basePrice type:", typeof productData.basePrice);
    /* istanbul ignore next */
    cov_11b6nqn25m().s[47]++;
    console.log("productData.basePrice value:", productData.basePrice);
    const newWeightedAverageCost =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[48]++,
    /* istanbul ignore next */
    (cov_11b6nqn25m().b[10][0]++, productData.basePrice) ||
    /* istanbul ignore next */
    (cov_11b6nqn25m().b[10][1]++, 0));
    /* istanbul ignore next */
    cov_11b6nqn25m().s[49]++;
    console.log("Calculated newWeightedAverageCost:", newWeightedAverageCost);
    const product =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[50]++, await (0, _prisma.safeQuery)(async () => {
      /* istanbul ignore next */
      cov_11b6nqn25m().f[5]++;
      cov_11b6nqn25m().s[51]++;
      return await _prisma.prisma.product.create({
        data: {
          name: productData.name,
          sku: productData.sku,
          barcode:
          /* istanbul ignore next */
          (cov_11b6nqn25m().b[11][0]++, productData.barcode) ||
          /* istanbul ignore next */
          (cov_11b6nqn25m().b[11][1]++, null),
          description:
          /* istanbul ignore next */
          (cov_11b6nqn25m().b[12][0]++, productData.description) ||
          /* istanbul ignore next */
          (cov_11b6nqn25m().b[12][1]++, null),
          weightedAverageCost: newWeightedAverageCost,
          price:
          /* istanbul ignore next */
          (cov_11b6nqn25m().b[13][0]++, productData.retailPrice) ||
          /* istanbul ignore next */
          (cov_11b6nqn25m().b[13][1]++, 0),
          categoryId: productData.categoryId ?
          /* istanbul ignore next */
          (cov_11b6nqn25m().b[14][0]++, parseInt(productData.categoryId)) :
          /* istanbul ignore next */
          (cov_11b6nqn25m().b[14][1]++, null),
          minStockLevel: productData.minStockLevel ?
          /* istanbul ignore next */
          (cov_11b6nqn25m().b[15][0]++, parseInt(productData.minStockLevel)) :
          /* istanbul ignore next */
          (cov_11b6nqn25m().b[15][1]++, 10)
        }
      });
    }, null, "Failed to create product"));
    /* istanbul ignore next */
    cov_11b6nqn25m().s[52]++;
    if (!product) {
      /* istanbul ignore next */
      cov_11b6nqn25m().b[16][0]++;
      cov_11b6nqn25m().s[53]++;
      throw new Error("Product creation failed");
    } else
    /* istanbul ignore next */
    {
      cov_11b6nqn25m().b[16][1]++;
    }
    cov_11b6nqn25m().s[54]++;
    console.log("Product created successfully with WAC:", product.weightedAverageCost);
    // Determine userId from token for audit logging
    const authHeader =
    /* istanbul ignore next */
    (cov_11b6nqn25m().s[55]++, request.headers.get("authorization"));
    let userId;
    /* istanbul ignore next */
    cov_11b6nqn25m().s[56]++;
    if (
    /* istanbul ignore next */
    (cov_11b6nqn25m().b[18][0]++, authHeader) &&
    /* istanbul ignore next */
    (cov_11b6nqn25m().b[18][1]++, authHeader.startsWith("Bearer "))) {
      /* istanbul ignore next */
      cov_11b6nqn25m().b[17][0]++;
      const token =
      /* istanbul ignore next */
      (cov_11b6nqn25m().s[57]++, authHeader.slice(7));
      /* istanbul ignore next */
      cov_11b6nqn25m().s[58]++;
      try {
        const decoded =
        /* istanbul ignore next */
        (cov_11b6nqn25m().s[59]++, await (0, _auth.verifyToken)(token));
        /* istanbul ignore next */
        cov_11b6nqn25m().s[60]++;
        if (
        /* istanbul ignore next */
        (cov_11b6nqn25m().b[20][0]++, decoded) &&
        /* istanbul ignore next */
        (cov_11b6nqn25m().b[20][1]++, decoded.userId)) {
          /* istanbul ignore next */
          cov_11b6nqn25m().b[19][0]++;
          cov_11b6nqn25m().s[61]++;
          userId = decoded.userId.toString();
        } else {
          /* istanbul ignore next */
          cov_11b6nqn25m().b[19][1]++;
          cov_11b6nqn25m().s[62]++;
          if (
          /* istanbul ignore next */
          (cov_11b6nqn25m().b[22][0]++, decoded) &&
          /* istanbul ignore next */
          (cov_11b6nqn25m().b[22][1]++, decoded.sub)) {
            /* istanbul ignore next */
            cov_11b6nqn25m().b[21][0]++;
            cov_11b6nqn25m().s[63]++;
            userId = decoded.sub.toString();
          } else
          /* istanbul ignore next */
          {
            cov_11b6nqn25m().b[21][1]++;
          }
        }
      } catch (err) {
        /* istanbul ignore next */
        cov_11b6nqn25m().s[64]++;
        console.warn("Invalid token for audit logging on product create");
      }
    } else
    /* istanbul ignore next */
    {
      cov_11b6nqn25m().b[17][1]++;
    }
    // Log CREATE action
    cov_11b6nqn25m().s[65]++;
    await _auditService.auditService.logAction({
      action: "CREATE",
      entity: "Product",
      entityId: product.id,
      userId,
      details: {
        name: product.name,
        sku: product.sku,
        barcode: product.barcode,
        description: product.description,
        price: product.price,
        categoryId: product.categoryId,
        minStockLevel: product.minStockLevel
      }
    });
    // Invalidate inventory cache
    /* istanbul ignore next */
    cov_11b6nqn25m().s[66]++;
    await _cache1.cacheService.invalidateInventory();
    // Revalidate Next.js cached pages
    /* istanbul ignore next */
    cov_11b6nqn25m().s[67]++;
    (0, _cache.revalidateTag)("products");
    /* istanbul ignore next */
    cov_11b6nqn25m().s[68]++;
    (0, _cache.revalidateTag)("inventory");
    /* istanbul ignore next */
    cov_11b6nqn25m().s[69]++;
    (0, _cache.revalidatePath)("/inventory");
    /* istanbul ignore next */
    cov_11b6nqn25m().s[70]++;
    (0, _cache.revalidatePath)("/products");
    // Emit WebSocket event for real-time updates using utility function
    // Real-time updates now handled by polling system
    /* istanbul ignore next */
    cov_11b6nqn25m().s[71]++;
    return _server.NextResponse.json({
      success: true,
      message: "Product created successfully",
      data: product
    }, {
      status: 201
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_11b6nqn25m().s[72]++;
    console.error("Error creating product:", error);
    /* istanbul ignore next */
    cov_11b6nqn25m().s[73]++;
    return _server.NextResponse.json({
      success: false,
      message: "Error creating product",
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_11b6nqn25m().b[23][0]++, error.message) :
      /* istanbul ignore next */
      (cov_11b6nqn25m().b[23][1]++, String(error))
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,