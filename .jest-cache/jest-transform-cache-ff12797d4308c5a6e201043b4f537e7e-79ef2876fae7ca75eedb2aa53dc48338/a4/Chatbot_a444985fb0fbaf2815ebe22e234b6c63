99b59f707c51869cce45af2979457a50
"use client";
"use strict";

/* istanbul ignore next */
function cov_2g9tgfzhq6() {
  var path = "/Users/sachin/Documents/md-sports-/src/components/chatbot/Chatbot.tsx";
  var hash = "351363f5720a74c00460be5329d603b1183175ff";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/components/chatbot/Chatbot.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 23
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 44
        }
      },
      "6": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 39
        }
      },
      "7": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 45
        }
      },
      "8": {
        start: {
          line: 17,
          column: 24
        },
        end: {
          line: 17,
          column: 64
        }
      },
      "9": {
        start: {
          line: 18,
          column: 28
        },
        end: {
          line: 18,
          column: 74
        }
      },
      "10": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 22,
          column: 6
        }
      },
      "11": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 51
        }
      },
      "12": {
        start: {
          line: 25,
          column: 39
        },
        end: {
          line: 25,
          column: 51
        }
      },
      "13": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 26,
          column: 41
        }
      },
      "14": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 27,
          column: 40
        }
      },
      "15": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 20
        }
      },
      "16": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 66
        }
      },
      "17": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "18": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 19
        }
      },
      "19": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "20": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 39,
          column: 10
        }
      },
      "21": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 53
        }
      },
      "22": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "23": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 30
        }
      },
      "24": {
        start: {
          line: 45,
          column: 17
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "25": {
        start: {
          line: 48,
          column: 32
        },
        end: {
          line: 48,
          column: 88
        }
      },
      "26": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "27": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "28": {
        start: {
          line: 51,
          column: 23
        },
        end: {
          line: 51,
          column: 95
        }
      },
      "29": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "30": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 57
        }
      },
      "31": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 39
        }
      },
      "32": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 25
        }
      },
      "33": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "34": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 31
        }
      },
      "35": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 18
        }
      },
      "36": {
        start: {
          line: 66,
          column: 36
        },
        end: {
          line: 66,
          column: 60
        }
      },
      "37": {
        start: {
          line: 67,
          column: 30
        },
        end: {
          line: 67,
          column: 54
        }
      },
      "38": {
        start: {
          line: 68,
          column: 38
        },
        end: {
          line: 68,
          column: 65
        }
      },
      "39": {
        start: {
          line: 69,
          column: 30
        },
        end: {
          line: 69,
          column: 56
        }
      },
      "40": {
        start: {
          line: 70,
          column: 42
        },
        end: {
          line: 70,
          column: 69
        }
      },
      "41": {
        start: {
          line: 71,
          column: 52
        },
        end: {
          line: 71,
          column: 79
        }
      },
      "42": {
        start: {
          line: 72,
          column: 48
        },
        end: {
          line: 72,
          column: 74
        }
      },
      "43": {
        start: {
          line: 73,
          column: 27
        },
        end: {
          line: 73,
          column: 51
        }
      },
      "44": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 81,
          column: 7
        }
      },
      "45": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 78,
          column: 11
        }
      },
      "46": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 89,
          column: 7
        }
      },
      "47": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "48": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 34
        }
      },
      "49": {
        start: {
          line: 90,
          column: 32
        },
        end: {
          line: 110,
          column: 5
        }
      },
      "50": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "51": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 38
        }
      },
      "52": {
        start: {
          line: 93,
          column: 29
        },
        end: {
          line: 93,
          column: 62
        }
      },
      "53": {
        start: {
          line: 94,
          column: 25
        },
        end: {
          line: 94,
          column: 46
        }
      },
      "54": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 102,
          column: 13
        }
      },
      "55": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 96,
          column: 40
        }
      },
      "56": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 38
        }
      },
      "57": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 99,
          column: 41
        }
      },
      "58": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 37
        }
      },
      "59": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 80
        }
      },
      "60": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 69
        }
      },
      "61": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 37
        }
      },
      "62": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 33
        }
      },
      "63": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 39
        }
      },
      "64": {
        start: {
          line: 111,
          column: 30
        },
        end: {
          line: 175,
          column: 5
        }
      },
      "65": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 47
        }
      },
      "66": {
        start: {
          line: 112,
          column: 40
        },
        end: {
          line: 112,
          column: 47
        }
      },
      "67": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "68": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 93
        }
      },
      "69": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 33
        }
      },
      "70": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 19
        }
      },
      "71": {
        start: {
          line: 119,
          column: 28
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "72": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 126,
          column: 15
        }
      },
      "73": {
        start: {
          line: 123,
          column: 28
        },
        end: {
          line: 126,
          column: 13
        }
      },
      "74": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 21
        }
      },
      "75": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 27
        }
      },
      "76": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 23
        }
      },
      "77": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 174,
          column: 9
        }
      },
      "78": {
        start: {
          line: 132,
          column: 32
        },
        end: {
          line: 135,
          column: 13
        }
      },
      "79": {
        start: {
          line: 136,
          column: 29
        },
        end: {
          line: 136,
          column: 90
        }
      },
      "80": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 144,
          column: 19
        }
      },
      "81": {
        start: {
          line: 138,
          column: 32
        },
        end: {
          line: 144,
          column: 17
        }
      },
      "82": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 27
        }
      },
      "83": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 34
        }
      },
      "84": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 51
        }
      },
      "85": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 154,
          column: 13
        }
      },
      "86": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 152,
          column: 37
        }
      },
      "87": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 153,
          column: 41
        }
      },
      "88": {
        start: {
          line: 156,
          column: 31
        },
        end: {
          line: 156,
          column: 87
        }
      },
      "89": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 161,
          column: 13
        }
      },
      "90": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 158,
          column: 57
        }
      },
      "91": {
        start: {
          line: 159,
          column: 19
        },
        end: {
          line: 161,
          column: 13
        }
      },
      "92": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 160,
          column: 69
        }
      },
      "93": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 169,
          column: 19
        }
      },
      "94": {
        start: {
          line: 163,
          column: 32
        },
        end: {
          line: 169,
          column: 17
        }
      },
      "95": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 35
        }
      },
      "96": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 32
        }
      },
      "97": {
        start: {
          line: 176,
          column: 26
        },
        end: {
          line: 181,
          column: 5
        }
      },
      "98": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 180,
          column: 9
        }
      },
      "99": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 31
        }
      },
      "100": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 32
        }
      },
      "101": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 322,
          column: 7
        }
      },
      "102": {
        start: {
          line: 279,
          column: 66
        },
        end: {
          line: 281,
          column: 33
        }
      },
      "103": {
        start: {
          line: 296,
          column: 47
        },
        end: {
          line: 296,
          column: 71
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 19,
            column: 33
          }
        },
        loc: {
          start: {
            line: 19,
            column: 39
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 19
      },
      "2": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 33
          }
        },
        loc: {
          start: {
            line: 24,
            column: 47
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 24
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 28,
            column: 39
          },
          end: {
            line: 28,
            column: 40
          }
        },
        loc: {
          start: {
            line: 28,
            column: 61
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "4": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 34
          }
        },
        loc: {
          start: {
            line: 32,
            column: 53
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 32
      },
      "5": {
        name: "Chatbot",
        decl: {
          start: {
            line: 65,
            column: 9
          },
          end: {
            line: 65,
            column: 16
          }
        },
        loc: {
          start: {
            line: 65,
            column: 30
          },
          end: {
            line: 323,
            column: 1
          }
        },
        line: 65
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 75,
            column: 26
          },
          end: {
            line: 75,
            column: 27
          }
        },
        loc: {
          start: {
            line: 75,
            column: 30
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 75
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 83,
            column: 26
          },
          end: {
            line: 83,
            column: 27
          }
        },
        loc: {
          start: {
            line: 83,
            column: 30
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 83
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 90,
            column: 32
          },
          end: {
            line: 90,
            column: 33
          }
        },
        loc: {
          start: {
            line: 90,
            column: 42
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 90
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 111,
            column: 30
          },
          end: {
            line: 111,
            column: 31
          }
        },
        loc: {
          start: {
            line: 111,
            column: 40
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 111
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 123,
            column: 20
          },
          end: {
            line: 123,
            column: 21
          }
        },
        loc: {
          start: {
            line: 123,
            column: 28
          },
          end: {
            line: 126,
            column: 13
          }
        },
        line: 123
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 138,
            column: 24
          },
          end: {
            line: 138,
            column: 25
          }
        },
        loc: {
          start: {
            line: 138,
            column: 32
          },
          end: {
            line: 144,
            column: 17
          }
        },
        line: 138
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 163,
            column: 24
          },
          end: {
            line: 163,
            column: 25
          }
        },
        loc: {
          start: {
            line: 163,
            column: 32
          },
          end: {
            line: 169,
            column: 17
          }
        },
        line: 163
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 176,
            column: 26
          },
          end: {
            line: 176,
            column: 27
          }
        },
        loc: {
          start: {
            line: 176,
            column: 31
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 176
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 279,
            column: 38
          },
          end: {
            line: 279,
            column: 39
          }
        },
        loc: {
          start: {
            line: 279,
            column: 66
          },
          end: {
            line: 281,
            column: 33
          }
        },
        line: 279
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 296,
            column: 42
          },
          end: {
            line: 296,
            column: 43
          }
        },
        loc: {
          start: {
            line: 296,
            column: 47
          },
          end: {
            line: 296,
            column: 71
          }
        },
        line: 296
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 11
          },
          end: {
            line: 22,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 35
          },
          end: {
            line: 20,
            column: 38
          }
        }, {
          start: {
            line: 20,
            column: 41
          },
          end: {
            line: 22,
            column: 5
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 11
          },
          end: {
            line: 20,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 11
          },
          end: {
            line: 20,
            column: 14
          }
        }, {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 32
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 15
          },
          end: {
            line: 29,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 29,
            column: 45
          }
        }, {
          start: {
            line: 29,
            column: 48
          },
          end: {
            line: 29,
            column: 65
          }
        }],
        line: 29
      },
      "4": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "5": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 20
          }
        }, {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 33,
            column: 27
          }
        }, {
          start: {
            line: 33,
            column: 31
          },
          end: {
            line: 33,
            column: 45
          }
        }],
        line: 33
      },
      "6": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "7": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 20
          }
        }, {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 47
          }
        }, {
          start: {
            line: 36,
            column: 51
          },
          end: {
            line: 36,
            column: 76
          }
        }],
        line: 36
      },
      "8": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "9": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 13
          }
        }, {
          start: {
            line: 42,
            column: 17
          },
          end: {
            line: 42,
            column: 31
          }
        }],
        line: 42
      },
      "10": {
        loc: {
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 53
          }
        }, {
          start: {
            line: 48,
            column: 57
          },
          end: {
            line: 48,
            column: 88
          }
        }],
        line: 48
      },
      "11": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "12": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 29
          }
        }, {
          start: {
            line: 50,
            column: 33
          },
          end: {
            line: 50,
            column: 79
          }
        }],
        line: 50
      },
      "13": {
        loc: {
          start: {
            line: 51,
            column: 23
          },
          end: {
            line: 51,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 51,
            column: 47
          },
          end: {
            line: 51,
            column: 88
          }
        }, {
          start: {
            line: 51,
            column: 91
          },
          end: {
            line: 51,
            column: 95
          }
        }],
        line: 51
      },
      "14": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: 54,
            column: 19
          },
          end: {
            line: 56,
            column: 13
          }
        }],
        line: 52
      },
      "15": {
        loc: {
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 52,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 52,
            column: 20
          }
        }, {
          start: {
            line: 52,
            column: 25
          },
          end: {
            line: 52,
            column: 33
          }
        }, {
          start: {
            line: 52,
            column: 37
          },
          end: {
            line: 52,
            column: 45
          }
        }],
        line: 52
      },
      "16": {
        loc: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "17": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "18": {
        loc: {
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 102,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 102,
            column: 13
          }
        }, {
          start: {
            line: 98,
            column: 19
          },
          end: {
            line: 102,
            column: 13
          }
        }],
        line: 95
      },
      "19": {
        loc: {
          start: {
            line: 95,
            column: 16
          },
          end: {
            line: 95,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 16
          },
          end: {
            line: 95,
            column: 28
          }
        }, {
          start: {
            line: 95,
            column: 32
          },
          end: {
            line: 95,
            column: 45
          }
        }, {
          start: {
            line: 95,
            column: 49
          },
          end: {
            line: 95,
            column: 69
          }
        }],
        line: 95
      },
      "20": {
        loc: {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 112,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 112,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "21": {
        loc: {
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 112,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 112,
            column: 25
          }
        }, {
          start: {
            line: 112,
            column: 29
          },
          end: {
            line: 112,
            column: 38
          }
        }],
        line: 112
      },
      "22": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "23": {
        loc: {
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "24": {
        loc: {
          start: {
            line: 151,
            column: 16
          },
          end: {
            line: 151,
            column: 150
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 16
          },
          end: {
            line: 151,
            column: 29
          }
        }, {
          start: {
            line: 151,
            column: 34
          },
          end: {
            line: 151,
            column: 67
          }
        }, {
          start: {
            line: 151,
            column: 71
          },
          end: {
            line: 151,
            column: 111
          }
        }, {
          start: {
            line: 151,
            column: 115
          },
          end: {
            line: 151,
            column: 149
          }
        }],
        line: 151
      },
      "25": {
        loc: {
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 161,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 161,
            column: 13
          }
        }, {
          start: {
            line: 159,
            column: 19
          },
          end: {
            line: 161,
            column: 13
          }
        }],
        line: 157
      },
      "26": {
        loc: {
          start: {
            line: 159,
            column: 19
          },
          end: {
            line: 161,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 19
          },
          end: {
            line: 161,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "27": {
        loc: {
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "28": {
        loc: {
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 177,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 177,
            column: 29
          }
        }, {
          start: {
            line: 177,
            column: 33
          },
          end: {
            line: 177,
            column: 44
          }
        }],
        line: 177
      },
      "29": {
        loc: {
          start: {
            line: 195,
            column: 28
          },
          end: {
            line: 202,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 28
          },
          end: {
            line: 195,
            column: 39
          }
        }, {
          start: {
            line: 195,
            column: 57
          },
          end: {
            line: 202,
            column: 30
          }
        }],
        line: 195
      },
      "30": {
        loc: {
          start: {
            line: 203,
            column: 28
          },
          end: {
            line: 212,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 203,
            column: 28
          },
          end: {
            line: 203,
            column: 39
          }
        }, {
          start: {
            line: 203,
            column: 57
          },
          end: {
            line: 212,
            column: 30
          }
        }],
        line: 203
      },
      "31": {
        loc: {
          start: {
            line: 210,
            column: 47
          },
          end: {
            line: 210,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 210,
            column: 66
          },
          end: {
            line: 210,
            column: 80
          }
        }, {
          start: {
            line: 210,
            column: 83
          },
          end: {
            line: 210,
            column: 85
          }
        }],
        line: 210
      },
      "32": {
        loc: {
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 246,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 225,
            column: 17
          }
        }, {
          start: {
            line: 225,
            column: 35
          },
          end: {
            line: 246,
            column: 14
          }
        }],
        line: 225
      },
      "33": {
        loc: {
          start: {
            line: 236,
            column: 42
          },
          end: {
            line: 236,
            column: 140
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 236,
            column: 56
          },
          end: {
            line: 236,
            column: 97
          }
        }, {
          start: {
            line: 236,
            column: 100
          },
          end: {
            line: 236,
            column: 140
          }
        }],
        line: 236
      },
      "34": {
        loc: {
          start: {
            line: 238,
            column: 28
          },
          end: {
            line: 242,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 28
          },
          end: {
            line: 238,
            column: 39
          }
        }, {
          start: {
            line: 238,
            column: 57
          },
          end: {
            line: 242,
            column: 30
          }
        }],
        line: 238
      },
      "35": {
        loc: {
          start: {
            line: 247,
            column: 12
          },
          end: {
            line: 259,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 247,
            column: 12
          },
          end: {
            line: 247,
            column: 28
          }
        }, {
          start: {
            line: 247,
            column: 46
          },
          end: {
            line: 259,
            column: 14
          }
        }],
        line: 247
      },
      "36": {
        loc: {
          start: {
            line: 263,
            column: 20
          },
          end: {
            line: 281,
            column: 34
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 263,
            column: 58
          },
          end: {
            line: 279,
            column: 22
          }
        }, {
          start: {
            line: 279,
            column: 25
          },
          end: {
            line: 281,
            column: 34
          }
        }],
        line: 263
      },
      "37": {
        loc: {
          start: {
            line: 298,
            column: 45
          },
          end: {
            line: 298,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 298,
            column: 59
          },
          end: {
            line: 298,
            column: 96
          }
        }, {
          start: {
            line: 298,
            column: 99
          },
          end: {
            line: 298,
            column: 121
          }
        }],
        line: 298
      },
      "38": {
        loc: {
          start: {
            line: 300,
            column: 42
          },
          end: {
            line: 300,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 300,
            column: 42
          },
          end: {
            line: 300,
            column: 51
          }
        }, {
          start: {
            line: 300,
            column: 55
          },
          end: {
            line: 300,
            column: 66
          }
        }],
        line: 300
      },
      "39": {
        loc: {
          start: {
            line: 308,
            column: 42
          },
          end: {
            line: 308,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 308,
            column: 42
          },
          end: {
            line: 308,
            column: 55
          }
        }, {
          start: {
            line: 308,
            column: 59
          },
          end: {
            line: 308,
            column: 68
          }
        }, {
          start: {
            line: 308,
            column: 72
          },
          end: {
            line: 308,
            column: 83
          }
        }],
        line: 308
      },
      "40": {
        loc: {
          start: {
            line: 315,
            column: 20
          },
          end: {
            line: 318,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 315,
            column: 20
          },
          end: {
            line: 315,
            column: 31
          }
        }, {
          start: {
            line: 315,
            column: 49
          },
          end: {
            line: 318,
            column: 22
          }
        }],
        line: 315
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0, 0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0, 0],
      "40": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/components/chatbot/Chatbot.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Send, X, MessageSquare, AlertCircle, Settings, RefreshCw } from 'lucide-react';\nimport { Button } from '@/components/ui/Button';\nimport { ChatMessage } from './ChatMessage';\nimport { chatbotService, ChatMessage as ChatMessageType } from '@/services/chatbotService';\nimport Link from 'next/link';\n\ninterface ChatbotProps {\n    onClose: () => void;\n}\n\nexport function Chatbot({ onClose }: ChatbotProps) {\n    const [messages, setMessages] = useState<ChatMessageType[]>([]);\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n    const [configError, setConfigError] = useState<boolean>(false);\n    const [isCheckingConfig, setIsCheckingConfig] = useState(false);\n    const [hasValidConfig, setHasValidConfig] = useState<boolean | null>(null);\n    const messagesEndRef = useRef<HTMLDivElement>(null);\n\n    // Scroll to bottom of messages\n    useEffect(() => {\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    }, [messages]);\n\n    // Check API key validity when component mounts\n    useEffect(() => {\n        if (hasValidConfig === null) {\n            checkApiKeyValidity();\n        }\n    }, [hasValidConfig]);\n\n    const checkApiKeyValidity = async () => {\n        try {\n            setIsCheckingConfig(true);\n            const response = await fetch('/api/test-settings');\n            const data = await response.json();\n\n            if (data.success && !data.isEmpty && data.valueLength > 0) {\n                setHasValidConfig(true);\n                setConfigError(false);\n            } else {\n                setHasValidConfig(false);\n                setConfigError(true);\n                setError('AI configuration error: API key is not properly set');\n            }\n        } catch (error) {\n            console.error('Error checking API key validity:', error);\n            setHasValidConfig(false);\n            setConfigError(true);\n        } finally {\n            setIsCheckingConfig(false);\n        }\n    };\n\n    const handleSendMessage = async () => {\n        if (!input.trim() || isLoading) return;\n\n        // Check if API key is valid before sending\n        if (hasValidConfig === false) {\n            setError('Please configure a valid API key in settings before sending messages');\n            setConfigError(true);\n            return;\n        }\n\n        const userMessage: ChatMessageType = {\n            role: 'user',\n            content: input,\n        };\n\n        setMessages((prev) => [...prev, userMessage]);\n        setInput('');\n        setIsLoading(true);\n        setError(null);\n\n        try {\n            // Send message to API\n            const newMessages = [...messages, userMessage];\n            const response = await chatbotService.sendMessage(newMessages);\n\n            // Add response to messages\n            setMessages((prev) => [...prev, {\n                role: 'assistant',\n                content: response.content,\n            }]);\n\n            // Clear any existing errors\n            setError(null);\n            setConfigError(false);\n        } catch (error: any) {\n            console.error('Chatbot error:', error);\n\n            // Check if it's a configuration error\n            if (error.message && (\n                error.message.includes('API key') ||\n                error.message.includes('not configured') ||\n                error.message.includes('disabled')\n            )) {\n                setConfigError(true);\n                setHasValidConfig(false);\n            }\n\n            // Extract error message\n            let errorMessage = 'Sorry, I encountered an error. Please try again later.';\n            if (error.message) {\n                errorMessage = `Error: ${error.message}`;\n            } else if (error.response?.data?.error) {\n                errorMessage = `Error: ${error.response.data.error}`;\n            }\n\n            // Add error message\n            setMessages((prev) => [...prev, {\n                role: 'assistant',\n                content: errorMessage,\n            }]);\n\n            // Set error state for potential UI handling\n            setError(errorMessage);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            handleSendMessage();\n        }\n    };\n\n    return (\n        <div className=\"fixed bottom-6 right-6 w-80 sm:w-96 h-[500px] bg-white rounded-lg shadow-xl flex flex-col border border-gray-200 z-50\">\n            {/* Header */}\n            <div className=\"flex items-center justify-between p-4 border-b\">\n                <h3 className=\"font-medium text-black\">MS Sports Assistant</h3>\n                <div className=\"flex items-center space-x-2\">\n                    {configError && (\n                        <Link\n                            href=\"/settings?tab=ai\"\n                            className=\"text-black hover:text-primary\"\n                            title=\"Configure AI Settings\"\n                        >\n                            <Settings size={18} />\n                        </Link>\n                    )}\n                    {configError && (\n                        <button\n                            onClick={checkApiKeyValidity}\n                            className=\"text-black hover:text-primary\"\n                            title=\"Refresh settings\"\n                            disabled={isCheckingConfig}\n                        >\n                            <RefreshCw size={18} className={isCheckingConfig ? 'animate-spin' : ''} />\n                        </button>\n                    )}\n                    <button\n                        onClick={onClose}\n                        className=\"text-black hover:text-gray-700\"\n                        aria-label=\"Close chatbot\"\n                    >\n                        <X size={20} />\n                    </button>\n                </div>\n            </div>\n\n            {/* Error banner */}\n            {error && (\n                <div className=\"bg-red-50 border-l-4 border-red-500 p-3 flex items-center\">\n                    <AlertCircle className=\"text-red-500 mr-2 flex-shrink-0\" size={16} />\n                    <div className=\"text-xs text-red-600\">\n                        <p>{configError ? 'AI configuration error. Check settings.' : 'An error occurred with the AI service.'}</p>\n                        {configError && (\n                            <Link href=\"/settings?tab=ai\" className=\"underline hover:text-red-800\">\n                                Configure AI Settings\n                            </Link>\n                        )}\n                    </div>\n                </div>\n            )}\n\n            {/* Config checking state */}\n            {isCheckingConfig && (\n                <div className=\"bg-blue-50 border-l-4 border-blue-500 p-3 flex items-center\">\n                    <RefreshCw className=\"text-blue-500 mr-2 animate-spin\" size={16} />\n                    <p className=\"text-xs text-blue-600\">Checking AI configuration...</p>\n                </div>\n            )}\n\n            {/* Messages area */}\n            <div className=\"flex-1 p-4 overflow-y-auto\">\n                {messages.length === 0 ? (\n                    <div className=\"h-full flex flex-col items-center justify-center text-center text-black\">\n                        <MessageSquare size={40} className=\"mb-2 text-primary\" />\n                        <p className=\"text-sm mb-1 text-black\">Welcome to MS Sports Assistant!</p>\n                        <p className=\"text-xs\">Ask me anything about inventory, sales, or business operations.</p>\n                    </div>\n                ) : (\n                    messages.map((msg, index) => (\n                        <ChatMessage key={index} message={msg} />\n                    ))\n                )}\n                <div ref={messagesEndRef} />\n            </div>\n\n            {/* Input area */}\n            <div className=\"p-4 border-t\">\n                <div className=\"flex items-center\">\n                    <input\n                        type=\"text\"\n                        value={input}\n                        onChange={(e) => setInput(e.target.value)}\n                        onKeyDown={handleKeyDown}\n                        placeholder={configError ? \"Configure API key in settings first\" : \"Type your message...\"}\n                        className=\"flex-1 p-2 border rounded-l-md focus:outline-none focus:ring-1 focus:ring-primary text-black\"\n                        disabled={isLoading || configError}\n                    />\n                    <Button\n                        variant=\"primary\"\n                        size=\"sm\"\n                        className=\"rounded-l-none\"\n                        onClick={handleSendMessage}\n                        isLoading={isLoading}\n                        disabled={!input.trim() || isLoading || configError}\n                    >\n                        <Send size={18} />\n                    </Button>\n                </div>\n                {configError && (\n                    <p className=\"mt-2 text-xs text-red-500 text-center\">\n                        Please configure your API key in settings before using the chatbot.\n                    </p>\n                )}\n            </div>\n        </div>\n    );\n} "],
      names: ["Chatbot", "onClose", "messages", "setMessages", "useState", "input", "setInput", "isLoading", "setIsLoading", "error", "setError", "configError", "setConfigError", "isCheckingConfig", "setIsCheckingConfig", "hasValidConfig", "setHasValidConfig", "messagesEndRef", "useRef", "useEffect", "current", "scrollIntoView", "behavior", "checkApiKeyValidity", "response", "fetch", "data", "json", "success", "isEmpty", "valueLength", "console", "handleSendMessage", "trim", "userMessage", "role", "content", "prev", "newMessages", "chatbotService", "sendMessage", "message", "includes", "errorMessage", "handleKeyDown", "e", "key", "shiftKey", "preventDefault", "div", "className", "h3", "Link", "href", "title", "Settings", "size", "button", "onClick", "disabled", "RefreshCw", "aria-label", "X", "AlertCircle", "p", "length", "MessageSquare", "map", "msg", "index", "ChatMessage", "ref", "type", "value", "onChange", "target", "onKeyDown", "placeholder", "Button", "variant", "Send"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "351363f5720a74c00460be5329d603b1183175ff"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2g9tgfzhq6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2g9tgfzhq6();
cov_2g9tgfzhq6().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2g9tgfzhq6().s[1]++;
Object.defineProperty(exports, "Chatbot", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2g9tgfzhq6().f[0]++;
    cov_2g9tgfzhq6().s[2]++;
    return Chatbot;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2g9tgfzhq6().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2g9tgfzhq6().s[4]++, _interop_require_wildcard(require("react")));
const _lucidereact =
/* istanbul ignore next */
(cov_2g9tgfzhq6().s[5]++, require("lucide-react"));
const _Button =
/* istanbul ignore next */
(cov_2g9tgfzhq6().s[6]++, require("../ui/Button"));
const _ChatMessage =
/* istanbul ignore next */
(cov_2g9tgfzhq6().s[7]++, require("./ChatMessage"));
const _chatbotService =
/* istanbul ignore next */
(cov_2g9tgfzhq6().s[8]++, require("../../services/chatbotService"));
const _link =
/* istanbul ignore next */
(/*#__PURE__*/cov_2g9tgfzhq6().s[9]++, _interop_require_default(require("next/link")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2g9tgfzhq6().f[1]++;
  cov_2g9tgfzhq6().s[10]++;
  return /* istanbul ignore next */(cov_2g9tgfzhq6().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().b[0][1]++, {
    default: obj
  });
}
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2g9tgfzhq6().f[2]++;
  cov_2g9tgfzhq6().s[11]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2g9tgfzhq6().b[2][0]++;
    cov_2g9tgfzhq6().s[12]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2g9tgfzhq6().b[2][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().s[13]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().s[14]++, new WeakMap());
  /* istanbul ignore next */
  cov_2g9tgfzhq6().s[15]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_2g9tgfzhq6().f[3]++;
    cov_2g9tgfzhq6().s[16]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2g9tgfzhq6().b[3][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2g9tgfzhq6().b[3][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2g9tgfzhq6().f[4]++;
  cov_2g9tgfzhq6().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().b[5][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().b[5][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().b[5][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2g9tgfzhq6().b[4][0]++;
    cov_2g9tgfzhq6().s[18]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2g9tgfzhq6().b[4][1]++;
  }
  cov_2g9tgfzhq6().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().b[7][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().b[7][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().b[7][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2g9tgfzhq6().b[6][0]++;
    cov_2g9tgfzhq6().s[20]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2g9tgfzhq6().b[6][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().s[21]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_2g9tgfzhq6().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().b[9][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().b[9][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2g9tgfzhq6().b[8][0]++;
    cov_2g9tgfzhq6().s[23]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2g9tgfzhq6().b[8][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().s[24]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().s[25]++,
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().b[10][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().b[10][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_2g9tgfzhq6().s[26]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_2g9tgfzhq6().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_2g9tgfzhq6().b[12][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2g9tgfzhq6().b[12][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2g9tgfzhq6().b[11][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2g9tgfzhq6().s[28]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2g9tgfzhq6().b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2g9tgfzhq6().b[13][1]++, null));
      /* istanbul ignore next */
      cov_2g9tgfzhq6().s[29]++;
      if (
      /* istanbul ignore next */
      (cov_2g9tgfzhq6().b[15][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2g9tgfzhq6().b[15][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2g9tgfzhq6().b[15][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2g9tgfzhq6().b[14][0]++;
        cov_2g9tgfzhq6().s[30]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2g9tgfzhq6().b[14][1]++;
        cov_2g9tgfzhq6().s[31]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2g9tgfzhq6().b[11][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2g9tgfzhq6().s[32]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_2g9tgfzhq6().s[33]++;
  if (cache) {
    /* istanbul ignore next */
    cov_2g9tgfzhq6().b[16][0]++;
    cov_2g9tgfzhq6().s[34]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2g9tgfzhq6().b[16][1]++;
  }
  cov_2g9tgfzhq6().s[35]++;
  return newObj;
}
function Chatbot({
  onClose
}) {
  /* istanbul ignore next */
  cov_2g9tgfzhq6().f[5]++;
  const [messages, setMessages] =
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().s[36]++, (0, _react.useState)([]));
  const [input, setInput] =
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().s[37]++, (0, _react.useState)(""));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().s[38]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().s[39]++, (0, _react.useState)(null));
  const [configError, setConfigError] =
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().s[40]++, (0, _react.useState)(false));
  const [isCheckingConfig, setIsCheckingConfig] =
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().s[41]++, (0, _react.useState)(false));
  const [hasValidConfig, setHasValidConfig] =
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().s[42]++, (0, _react.useState)(null));
  const messagesEndRef =
  /* istanbul ignore next */
  (cov_2g9tgfzhq6().s[43]++, (0, _react.useRef)(null));
  // Scroll to bottom of messages
  /* istanbul ignore next */
  cov_2g9tgfzhq6().s[44]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2g9tgfzhq6().f[6]++;
    cov_2g9tgfzhq6().s[45]++;
    messagesEndRef.current?.scrollIntoView({
      behavior: "smooth"
    });
  }, [messages]);
  // Check API key validity when component mounts
  /* istanbul ignore next */
  cov_2g9tgfzhq6().s[46]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2g9tgfzhq6().f[7]++;
    cov_2g9tgfzhq6().s[47]++;
    if (hasValidConfig === null) {
      /* istanbul ignore next */
      cov_2g9tgfzhq6().b[17][0]++;
      cov_2g9tgfzhq6().s[48]++;
      checkApiKeyValidity();
    } else
    /* istanbul ignore next */
    {
      cov_2g9tgfzhq6().b[17][1]++;
    }
  }, [hasValidConfig]);
  /* istanbul ignore next */
  cov_2g9tgfzhq6().s[49]++;
  const checkApiKeyValidity = async () => {
    /* istanbul ignore next */
    cov_2g9tgfzhq6().f[8]++;
    cov_2g9tgfzhq6().s[50]++;
    try {
      /* istanbul ignore next */
      cov_2g9tgfzhq6().s[51]++;
      setIsCheckingConfig(true);
      const response =
      /* istanbul ignore next */
      (cov_2g9tgfzhq6().s[52]++, await fetch("/api/test-settings"));
      const data =
      /* istanbul ignore next */
      (cov_2g9tgfzhq6().s[53]++, await response.json());
      /* istanbul ignore next */
      cov_2g9tgfzhq6().s[54]++;
      if (
      /* istanbul ignore next */
      (cov_2g9tgfzhq6().b[19][0]++, data.success) &&
      /* istanbul ignore next */
      (cov_2g9tgfzhq6().b[19][1]++, !data.isEmpty) &&
      /* istanbul ignore next */
      (cov_2g9tgfzhq6().b[19][2]++, data.valueLength > 0)) {
        /* istanbul ignore next */
        cov_2g9tgfzhq6().b[18][0]++;
        cov_2g9tgfzhq6().s[55]++;
        setHasValidConfig(true);
        /* istanbul ignore next */
        cov_2g9tgfzhq6().s[56]++;
        setConfigError(false);
      } else {
        /* istanbul ignore next */
        cov_2g9tgfzhq6().b[18][1]++;
        cov_2g9tgfzhq6().s[57]++;
        setHasValidConfig(false);
        /* istanbul ignore next */
        cov_2g9tgfzhq6().s[58]++;
        setConfigError(true);
        /* istanbul ignore next */
        cov_2g9tgfzhq6().s[59]++;
        setError("AI configuration error: API key is not properly set");
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2g9tgfzhq6().s[60]++;
      console.error("Error checking API key validity:", error);
      /* istanbul ignore next */
      cov_2g9tgfzhq6().s[61]++;
      setHasValidConfig(false);
      /* istanbul ignore next */
      cov_2g9tgfzhq6().s[62]++;
      setConfigError(true);
    } finally {
      /* istanbul ignore next */
      cov_2g9tgfzhq6().s[63]++;
      setIsCheckingConfig(false);
    }
  };
  /* istanbul ignore next */
  cov_2g9tgfzhq6().s[64]++;
  const handleSendMessage = async () => {
    /* istanbul ignore next */
    cov_2g9tgfzhq6().f[9]++;
    cov_2g9tgfzhq6().s[65]++;
    if (
    /* istanbul ignore next */
    (cov_2g9tgfzhq6().b[21][0]++, !input.trim()) ||
    /* istanbul ignore next */
    (cov_2g9tgfzhq6().b[21][1]++, isLoading)) {
      /* istanbul ignore next */
      cov_2g9tgfzhq6().b[20][0]++;
      cov_2g9tgfzhq6().s[66]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2g9tgfzhq6().b[20][1]++;
    }
    // Check if API key is valid before sending
    cov_2g9tgfzhq6().s[67]++;
    if (hasValidConfig === false) {
      /* istanbul ignore next */
      cov_2g9tgfzhq6().b[22][0]++;
      cov_2g9tgfzhq6().s[68]++;
      setError("Please configure a valid API key in settings before sending messages");
      /* istanbul ignore next */
      cov_2g9tgfzhq6().s[69]++;
      setConfigError(true);
      /* istanbul ignore next */
      cov_2g9tgfzhq6().s[70]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2g9tgfzhq6().b[22][1]++;
    }
    const userMessage =
    /* istanbul ignore next */
    (cov_2g9tgfzhq6().s[71]++, {
      role: "user",
      content: input
    });
    /* istanbul ignore next */
    cov_2g9tgfzhq6().s[72]++;
    setMessages(prev => {
      /* istanbul ignore next */
      cov_2g9tgfzhq6().f[10]++;
      cov_2g9tgfzhq6().s[73]++;
      return [...prev, userMessage];
    });
    /* istanbul ignore next */
    cov_2g9tgfzhq6().s[74]++;
    setInput("");
    /* istanbul ignore next */
    cov_2g9tgfzhq6().s[75]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_2g9tgfzhq6().s[76]++;
    setError(null);
    /* istanbul ignore next */
    cov_2g9tgfzhq6().s[77]++;
    try {
      // Send message to API
      const newMessages =
      /* istanbul ignore next */
      (cov_2g9tgfzhq6().s[78]++, [...messages, userMessage]);
      const response =
      /* istanbul ignore next */
      (cov_2g9tgfzhq6().s[79]++, await _chatbotService.chatbotService.sendMessage(newMessages));
      // Add response to messages
      /* istanbul ignore next */
      cov_2g9tgfzhq6().s[80]++;
      setMessages(prev => {
        /* istanbul ignore next */
        cov_2g9tgfzhq6().f[11]++;
        cov_2g9tgfzhq6().s[81]++;
        return [...prev, {
          role: "assistant",
          content: response.content
        }];
      });
      // Clear any existing errors
      /* istanbul ignore next */
      cov_2g9tgfzhq6().s[82]++;
      setError(null);
      /* istanbul ignore next */
      cov_2g9tgfzhq6().s[83]++;
      setConfigError(false);
    } catch (error) {
      /* istanbul ignore next */
      cov_2g9tgfzhq6().s[84]++;
      console.error("Chatbot error:", error);
      // Check if it's a configuration error
      /* istanbul ignore next */
      cov_2g9tgfzhq6().s[85]++;
      if (
      /* istanbul ignore next */
      (cov_2g9tgfzhq6().b[24][0]++, error.message) && (
      /* istanbul ignore next */
      (cov_2g9tgfzhq6().b[24][1]++, error.message.includes("API key")) ||
      /* istanbul ignore next */
      (cov_2g9tgfzhq6().b[24][2]++, error.message.includes("not configured")) ||
      /* istanbul ignore next */
      (cov_2g9tgfzhq6().b[24][3]++, error.message.includes("disabled")))) {
        /* istanbul ignore next */
        cov_2g9tgfzhq6().b[23][0]++;
        cov_2g9tgfzhq6().s[86]++;
        setConfigError(true);
        /* istanbul ignore next */
        cov_2g9tgfzhq6().s[87]++;
        setHasValidConfig(false);
      } else
      /* istanbul ignore next */
      {
        cov_2g9tgfzhq6().b[23][1]++;
      }
      // Extract error message
      let errorMessage =
      /* istanbul ignore next */
      (cov_2g9tgfzhq6().s[88]++, "Sorry, I encountered an error. Please try again later.");
      /* istanbul ignore next */
      cov_2g9tgfzhq6().s[89]++;
      if (error.message) {
        /* istanbul ignore next */
        cov_2g9tgfzhq6().b[25][0]++;
        cov_2g9tgfzhq6().s[90]++;
        errorMessage = `Error: ${error.message}`;
      } else {
        /* istanbul ignore next */
        cov_2g9tgfzhq6().b[25][1]++;
        cov_2g9tgfzhq6().s[91]++;
        if (error.response?.data?.error) {
          /* istanbul ignore next */
          cov_2g9tgfzhq6().b[26][0]++;
          cov_2g9tgfzhq6().s[92]++;
          errorMessage = `Error: ${error.response.data.error}`;
        } else
        /* istanbul ignore next */
        {
          cov_2g9tgfzhq6().b[26][1]++;
        }
      }
      // Add error message
      /* istanbul ignore next */
      cov_2g9tgfzhq6().s[93]++;
      setMessages(prev => {
        /* istanbul ignore next */
        cov_2g9tgfzhq6().f[12]++;
        cov_2g9tgfzhq6().s[94]++;
        return [...prev, {
          role: "assistant",
          content: errorMessage
        }];
      });
      // Set error state for potential UI handling
      /* istanbul ignore next */
      cov_2g9tgfzhq6().s[95]++;
      setError(errorMessage);
    } finally {
      /* istanbul ignore next */
      cov_2g9tgfzhq6().s[96]++;
      setIsLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_2g9tgfzhq6().s[97]++;
  const handleKeyDown = e => {
    /* istanbul ignore next */
    cov_2g9tgfzhq6().f[13]++;
    cov_2g9tgfzhq6().s[98]++;
    if (
    /* istanbul ignore next */
    (cov_2g9tgfzhq6().b[28][0]++, e.key === "Enter") &&
    /* istanbul ignore next */
    (cov_2g9tgfzhq6().b[28][1]++, !e.shiftKey)) {
      /* istanbul ignore next */
      cov_2g9tgfzhq6().b[27][0]++;
      cov_2g9tgfzhq6().s[99]++;
      e.preventDefault();
      /* istanbul ignore next */
      cov_2g9tgfzhq6().s[100]++;
      handleSendMessage();
    } else
    /* istanbul ignore next */
    {
      cov_2g9tgfzhq6().b[27][1]++;
    }
  };
  /* istanbul ignore next */
  cov_2g9tgfzhq6().s[101]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "fixed bottom-6 right-6 w-80 sm:w-96 h-[500px] bg-white rounded-lg shadow-xl flex flex-col border border-gray-200 z-50",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex items-center justify-between p-4 border-b",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
        className: "font-medium text-black",
        children: "MS Sports Assistant"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center space-x-2",
        children: [
        /* istanbul ignore next */
        (cov_2g9tgfzhq6().b[29][0]++, configError) &&
        /* istanbul ignore next */
        (cov_2g9tgfzhq6().b[29][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_link.default, {
          href: "/settings?tab=ai",
          className: "text-black hover:text-primary",
          title: "Configure AI Settings",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Settings, {
            size: 18
          })
        })),
        /* istanbul ignore next */
        (cov_2g9tgfzhq6().b[30][0]++, configError) &&
        /* istanbul ignore next */
        (cov_2g9tgfzhq6().b[30][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          onClick: checkApiKeyValidity,
          className: "text-black hover:text-primary",
          title: "Refresh settings",
          disabled: isCheckingConfig,
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
            size: 18,
            className: isCheckingConfig ?
            /* istanbul ignore next */
            (cov_2g9tgfzhq6().b[31][0]++, "animate-spin") :
            /* istanbul ignore next */
            (cov_2g9tgfzhq6().b[31][1]++, "")
          })
        })), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          onClick: onClose,
          className: "text-black hover:text-gray-700",
          "aria-label": "Close chatbot",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.X, {
            size: 20
          })
        })]
      })]
    }),
    /* istanbul ignore next */
    (cov_2g9tgfzhq6().b[32][0]++, error) &&
    /* istanbul ignore next */
    (cov_2g9tgfzhq6().b[32][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "bg-red-50 border-l-4 border-red-500 p-3 flex items-center",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertCircle, {
        className: "text-red-500 mr-2 flex-shrink-0",
        size: 16
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "text-xs text-red-600",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          children: configError ?
          /* istanbul ignore next */
          (cov_2g9tgfzhq6().b[33][0]++, "AI configuration error. Check settings.") :
          /* istanbul ignore next */
          (cov_2g9tgfzhq6().b[33][1]++, "An error occurred with the AI service.")
        }),
        /* istanbul ignore next */
        (cov_2g9tgfzhq6().b[34][0]++, configError) &&
        /* istanbul ignore next */
        (cov_2g9tgfzhq6().b[34][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_link.default, {
          href: "/settings?tab=ai",
          className: "underline hover:text-red-800",
          children: "Configure AI Settings"
        }))]
      })]
    })),
    /* istanbul ignore next */
    (cov_2g9tgfzhq6().b[35][0]++, isCheckingConfig) &&
    /* istanbul ignore next */
    (cov_2g9tgfzhq6().b[35][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "bg-blue-50 border-l-4 border-blue-500 p-3 flex items-center",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
        className: "text-blue-500 mr-2 animate-spin",
        size: 16
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-xs text-blue-600",
        children: "Checking AI configuration..."
      })]
    })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex-1 p-4 overflow-y-auto",
      children: [messages.length === 0 ?
      /* istanbul ignore next */
      (/*#__PURE__*/cov_2g9tgfzhq6().b[36][0]++, (0, _jsxruntime.jsxs)("div", {
        className: "h-full flex flex-col items-center justify-center text-center text-black",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.MessageSquare, {
          size: 40,
          className: "mb-2 text-primary"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-sm mb-1 text-black",
          children: "Welcome to MS Sports Assistant!"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-xs",
          children: "Ask me anything about inventory, sales, or business operations."
        })]
      })) :
      /* istanbul ignore next */
      (cov_2g9tgfzhq6().b[36][1]++, messages.map((msg, index) => {
        /* istanbul ignore next */
        cov_2g9tgfzhq6().f[14]++;
        cov_2g9tgfzhq6().s[102]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_ChatMessage.ChatMessage, {
          message: msg
        }, index);
      })), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        ref: messagesEndRef
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "p-4 border-t",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
          type: "text",
          value: input,
          onChange: e => {
            /* istanbul ignore next */
            cov_2g9tgfzhq6().f[15]++;
            cov_2g9tgfzhq6().s[103]++;
            return setInput(e.target.value);
          },
          onKeyDown: handleKeyDown,
          placeholder: configError ?
          /* istanbul ignore next */
          (cov_2g9tgfzhq6().b[37][0]++, "Configure API key in settings first") :
          /* istanbul ignore next */
          (cov_2g9tgfzhq6().b[37][1]++, "Type your message..."),
          className: "flex-1 p-2 border rounded-l-md focus:outline-none focus:ring-1 focus:ring-primary text-black",
          disabled:
          /* istanbul ignore next */
          (cov_2g9tgfzhq6().b[38][0]++, isLoading) ||
          /* istanbul ignore next */
          (cov_2g9tgfzhq6().b[38][1]++, configError)
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          variant: "primary",
          size: "sm",
          className: "rounded-l-none",
          onClick: handleSendMessage,
          isLoading: isLoading,
          disabled:
          /* istanbul ignore next */
          (cov_2g9tgfzhq6().b[39][0]++, !input.trim()) ||
          /* istanbul ignore next */
          (cov_2g9tgfzhq6().b[39][1]++, isLoading) ||
          /* istanbul ignore next */
          (cov_2g9tgfzhq6().b[39][2]++, configError),
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Send, {
            size: 18
          })
        })]
      }),
      /* istanbul ignore next */
      (cov_2g9tgfzhq6().b[40][0]++, configError) &&
      /* istanbul ignore next */
      (cov_2g9tgfzhq6().b[40][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "mt-2 text-xs text-red-500 text-center",
        children: "Please configure your API key in settings before using the chatbot."
      }))]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,