{"version":3,"names":["Chatbot","onClose","cov_2g9tgfzhq6","f","messages","setMessages","s","_react","useState","input","setInput","isLoading","setIsLoading","error","setError","configError","setConfigError","isCheckingConfig","setIsCheckingConfig","hasValidConfig","setHasValidConfig","messagesEndRef","useRef","useEffect","current","scrollIntoView","behavior","b","checkApiKeyValidity","response","fetch","data","json","success","isEmpty","valueLength","console","handleSendMessage","trim","userMessage","role","content","prev","newMessages","_chatbotService","chatbotService","sendMessage","message","includes","errorMessage","handleKeyDown","e","key","shiftKey","preventDefault","_jsxruntime","jsxs","className","jsx","_link","default","href","title","_lucidereact","Settings","size","onClick","disabled","RefreshCw","X","AlertCircle","length","MessageSquare","map","msg","index","_ChatMessage","ChatMessage","ref","type","value","onChange","target","onKeyDown","placeholder","_Button","Button","variant","Send"],"sources":["/Users/sachin/Documents/md-sports-/src/components/chatbot/Chatbot.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Send, X, MessageSquare, AlertCircle, Settings, RefreshCw } from 'lucide-react';\nimport { Button } from '@/components/ui/Button';\nimport { ChatMessage } from './ChatMessage';\nimport { chatbotService, ChatMessage as ChatMessageType } from '@/services/chatbotService';\nimport Link from 'next/link';\n\ninterface ChatbotProps {\n    onClose: () => void;\n}\n\nexport function Chatbot({ onClose }: ChatbotProps) {\n    const [messages, setMessages] = useState<ChatMessageType[]>([]);\n    const [input, setInput] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n    const [configError, setConfigError] = useState<boolean>(false);\n    const [isCheckingConfig, setIsCheckingConfig] = useState(false);\n    const [hasValidConfig, setHasValidConfig] = useState<boolean | null>(null);\n    const messagesEndRef = useRef<HTMLDivElement>(null);\n\n    // Scroll to bottom of messages\n    useEffect(() => {\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    }, [messages]);\n\n    // Check API key validity when component mounts\n    useEffect(() => {\n        if (hasValidConfig === null) {\n            checkApiKeyValidity();\n        }\n    }, [hasValidConfig]);\n\n    const checkApiKeyValidity = async () => {\n        try {\n            setIsCheckingConfig(true);\n            const response = await fetch('/api/test-settings');\n            const data = await response.json();\n\n            if (data.success && !data.isEmpty && data.valueLength > 0) {\n                setHasValidConfig(true);\n                setConfigError(false);\n            } else {\n                setHasValidConfig(false);\n                setConfigError(true);\n                setError('AI configuration error: API key is not properly set');\n            }\n        } catch (error) {\n            console.error('Error checking API key validity:', error);\n            setHasValidConfig(false);\n            setConfigError(true);\n        } finally {\n            setIsCheckingConfig(false);\n        }\n    };\n\n    const handleSendMessage = async () => {\n        if (!input.trim() || isLoading) return;\n\n        // Check if API key is valid before sending\n        if (hasValidConfig === false) {\n            setError('Please configure a valid API key in settings before sending messages');\n            setConfigError(true);\n            return;\n        }\n\n        const userMessage: ChatMessageType = {\n            role: 'user',\n            content: input,\n        };\n\n        setMessages((prev) => [...prev, userMessage]);\n        setInput('');\n        setIsLoading(true);\n        setError(null);\n\n        try {\n            // Send message to API\n            const newMessages = [...messages, userMessage];\n            const response = await chatbotService.sendMessage(newMessages);\n\n            // Add response to messages\n            setMessages((prev) => [...prev, {\n                role: 'assistant',\n                content: response.content,\n            }]);\n\n            // Clear any existing errors\n            setError(null);\n            setConfigError(false);\n        } catch (error: any) {\n            console.error('Chatbot error:', error);\n\n            // Check if it's a configuration error\n            if (error.message && (\n                error.message.includes('API key') ||\n                error.message.includes('not configured') ||\n                error.message.includes('disabled')\n            )) {\n                setConfigError(true);\n                setHasValidConfig(false);\n            }\n\n            // Extract error message\n            let errorMessage = 'Sorry, I encountered an error. Please try again later.';\n            if (error.message) {\n                errorMessage = `Error: ${error.message}`;\n            } else if (error.response?.data?.error) {\n                errorMessage = `Error: ${error.response.data.error}`;\n            }\n\n            // Add error message\n            setMessages((prev) => [...prev, {\n                role: 'assistant',\n                content: errorMessage,\n            }]);\n\n            // Set error state for potential UI handling\n            setError(errorMessage);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            handleSendMessage();\n        }\n    };\n\n    return (\n        <div className=\"fixed bottom-6 right-6 w-80 sm:w-96 h-[500px] bg-white rounded-lg shadow-xl flex flex-col border border-gray-200 z-50\">\n            {/* Header */}\n            <div className=\"flex items-center justify-between p-4 border-b\">\n                <h3 className=\"font-medium text-black\">MS Sports Assistant</h3>\n                <div className=\"flex items-center space-x-2\">\n                    {configError && (\n                        <Link\n                            href=\"/settings?tab=ai\"\n                            className=\"text-black hover:text-primary\"\n                            title=\"Configure AI Settings\"\n                        >\n                            <Settings size={18} />\n                        </Link>\n                    )}\n                    {configError && (\n                        <button\n                            onClick={checkApiKeyValidity}\n                            className=\"text-black hover:text-primary\"\n                            title=\"Refresh settings\"\n                            disabled={isCheckingConfig}\n                        >\n                            <RefreshCw size={18} className={isCheckingConfig ? 'animate-spin' : ''} />\n                        </button>\n                    )}\n                    <button\n                        onClick={onClose}\n                        className=\"text-black hover:text-gray-700\"\n                        aria-label=\"Close chatbot\"\n                    >\n                        <X size={20} />\n                    </button>\n                </div>\n            </div>\n\n            {/* Error banner */}\n            {error && (\n                <div className=\"bg-red-50 border-l-4 border-red-500 p-3 flex items-center\">\n                    <AlertCircle className=\"text-red-500 mr-2 flex-shrink-0\" size={16} />\n                    <div className=\"text-xs text-red-600\">\n                        <p>{configError ? 'AI configuration error. Check settings.' : 'An error occurred with the AI service.'}</p>\n                        {configError && (\n                            <Link href=\"/settings?tab=ai\" className=\"underline hover:text-red-800\">\n                                Configure AI Settings\n                            </Link>\n                        )}\n                    </div>\n                </div>\n            )}\n\n            {/* Config checking state */}\n            {isCheckingConfig && (\n                <div className=\"bg-blue-50 border-l-4 border-blue-500 p-3 flex items-center\">\n                    <RefreshCw className=\"text-blue-500 mr-2 animate-spin\" size={16} />\n                    <p className=\"text-xs text-blue-600\">Checking AI configuration...</p>\n                </div>\n            )}\n\n            {/* Messages area */}\n            <div className=\"flex-1 p-4 overflow-y-auto\">\n                {messages.length === 0 ? (\n                    <div className=\"h-full flex flex-col items-center justify-center text-center text-black\">\n                        <MessageSquare size={40} className=\"mb-2 text-primary\" />\n                        <p className=\"text-sm mb-1 text-black\">Welcome to MS Sports Assistant!</p>\n                        <p className=\"text-xs\">Ask me anything about inventory, sales, or business operations.</p>\n                    </div>\n                ) : (\n                    messages.map((msg, index) => (\n                        <ChatMessage key={index} message={msg} />\n                    ))\n                )}\n                <div ref={messagesEndRef} />\n            </div>\n\n            {/* Input area */}\n            <div className=\"p-4 border-t\">\n                <div className=\"flex items-center\">\n                    <input\n                        type=\"text\"\n                        value={input}\n                        onChange={(e) => setInput(e.target.value)}\n                        onKeyDown={handleKeyDown}\n                        placeholder={configError ? \"Configure API key in settings first\" : \"Type your message...\"}\n                        className=\"flex-1 p-2 border rounded-l-md focus:outline-none focus:ring-1 focus:ring-primary text-black\"\n                        disabled={isLoading || configError}\n                    />\n                    <Button\n                        variant=\"primary\"\n                        size=\"sm\"\n                        className=\"rounded-l-none\"\n                        onClick={handleSendMessage}\n                        isLoading={isLoading}\n                        disabled={!input.trim() || isLoading || configError}\n                    >\n                        <Send size={18} />\n                    </Button>\n                </div>\n                {configError && (\n                    <p className=\"mt-2 text-xs text-red-500 text-center\">\n                        Please configure your API key in settings before using the chatbot.\n                    </p>\n                )}\n            </div>\n        </div>\n    );\n} "],"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","ignoreList":[]}