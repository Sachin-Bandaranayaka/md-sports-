3d512ed085646c49fb673d4296b6fe0b
"use client";
"use strict";

/* istanbul ignore next */
function cov_6rychjlkz() {
  var path = "/Users/sachin/Documents/md-sports-/src/components/inventory/AddInventoryModal.tsx";
  var hash = "26b9dce45e522934d5a71739dcd100830523e755";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/components/inventory/AddInventoryModal.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 33
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 44
        }
      },
      "6": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 39
        }
      },
      "7": {
        start: {
          line: 16,
          column: 20
        },
        end: {
          line: 16,
          column: 52
        }
      },
      "8": {
        start: {
          line: 17,
          column: 23
        },
        end: {
          line: 17,
          column: 61
        }
      },
      "9": {
        start: {
          line: 19,
          column: 44
        },
        end: {
          line: 19,
          column: 71
        }
      },
      "10": {
        start: {
          line: 20,
          column: 30
        },
        end: {
          line: 20,
          column: 56
        }
      },
      "11": {
        start: {
          line: 21,
          column: 30
        },
        end: {
          line: 21,
          column: 54
        }
      },
      "12": {
        start: {
          line: 22,
          column: 36
        },
        end: {
          line: 22,
          column: 60
        }
      },
      "13": {
        start: {
          line: 23,
          column: 54
        },
        end: {
          line: 23,
          column: 78
        }
      },
      "14": {
        start: {
          line: 24,
          column: 48
        },
        end: {
          line: 24,
          column: 72
        }
      },
      "15": {
        start: {
          line: 25,
          column: 36
        },
        end: {
          line: 25,
          column: 61
        }
      },
      "16": {
        start: {
          line: 26,
          column: 44
        },
        end: {
          line: 26,
          column: 70
        }
      },
      "17": {
        start: {
          line: 27,
          column: 50
        },
        end: {
          line: 27,
          column: 76
        }
      },
      "18": {
        start: {
          line: 28,
          column: 24
        },
        end: {
          line: 28,
          column: 57
        }
      },
      "19": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 36,
          column: 7
        }
      },
      "20": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "21": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 67
        }
      },
      "22": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 45,
          column: 7
        }
      },
      "23": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "24": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 25
        }
      },
      "25": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 28
        }
      },
      "26": {
        start: {
          line: 46,
          column: 23
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "27": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "28": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 34
        }
      },
      "29": {
        start: {
          line: 49,
          column: 29
        },
        end: {
          line: 49,
          column: 54
        }
      },
      "30": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 52,
          column: 13
        }
      },
      "31": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 57
        }
      },
      "32": {
        start: {
          line: 53,
          column: 25
        },
        end: {
          line: 53,
          column: 46
        }
      },
      "33": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 59,
          column: 13
        }
      },
      "34": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 36
        }
      },
      "35": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 58,
          column: 17
        }
      },
      "36": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 57,
          column: 66
        }
      },
      "37": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 58
        }
      },
      "38": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 64
        }
      },
      "39": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 35
        }
      },
      "40": {
        start: {
          line: 67,
          column: 26
        },
        end: {
          line: 87,
          column: 5
        }
      },
      "41": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "42": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 37
        }
      },
      "43": {
        start: {
          line: 70,
          column: 29
        },
        end: {
          line: 70,
          column: 57
        }
      },
      "44": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 73,
          column: 13
        }
      },
      "45": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 72,
          column: 60
        }
      },
      "46": {
        start: {
          line: 74,
          column: 25
        },
        end: {
          line: 74,
          column: 46
        }
      },
      "47": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 80,
          column: 13
        }
      },
      "48": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 39
        }
      },
      "49": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 79,
          column: 17
        }
      },
      "50": {
        start: {
          line: 78,
          column: 20
        },
        end: {
          line: 78,
          column: 69
        }
      },
      "51": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 61
        }
      },
      "52": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 67
        }
      },
      "53": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 38
        }
      },
      "54": {
        start: {
          line: 88,
          column: 25
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "55": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 27
        }
      },
      "56": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 23
        }
      },
      "57": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "58": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 51
        }
      },
      "59": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 19
        }
      },
      "60": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "61": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 34
        }
      },
      "62": {
        start: {
          line: 97,
          column: 29
        },
        end: {
          line: 107,
          column: 14
        }
      },
      "63": {
        start: {
          line: 108,
          column: 25
        },
        end: {
          line: 108,
          column: 46
        }
      },
      "64": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "65": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 113,
          column: 19
        }
      },
      "66": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 116,
          column: 19
        }
      },
      "67": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 118,
          column: 28
        }
      },
      "68": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 119,
          column: 28
        }
      },
      "69": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 120,
          column: 26
        }
      },
      "70": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 87
        }
      },
      "71": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 60
        }
      },
      "72": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 72
        }
      },
      "73": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 35
        }
      },
      "74": {
        start: {
          line: 131,
          column: 22
        },
        end: {
          line: 136,
          column: 5
        }
      },
      "75": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 83
        }
      },
      "76": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 74
        }
      },
      "77": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 25
        }
      },
      "78": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 23
        }
      },
      "79": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 137,
          column: 29
        }
      },
      "80": {
        start: {
          line: 137,
          column: 17
        },
        end: {
          line: 137,
          column: 29
        }
      },
      "81": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 296,
          column: 7
        }
      },
      "82": {
        start: {
          line: 190,
          column: 51
        },
        end: {
          line: 190,
          column: 87
        }
      },
      "83": {
        start: {
          line: 195,
          column: 79
        },
        end: {
          line: 202,
          column: 54
        }
      },
      "84": {
        start: {
          line: 233,
          column: 51
        },
        end: {
          line: 233,
          column: 84
        }
      },
      "85": {
        start: {
          line: 238,
          column: 73
        },
        end: {
          line: 241,
          column: 51
        }
      },
      "86": {
        start: {
          line: 258,
          column: 51
        },
        end: {
          line: 258,
          column: 78
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "AddInventoryModal",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 26
          }
        },
        loc: {
          start: {
            line: 18,
            column: 79
          },
          end: {
            line: 297,
            column: 1
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 30,
            column: 26
          },
          end: {
            line: 30,
            column: 27
          }
        },
        loc: {
          start: {
            line: 30,
            column: 30
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 30
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 38,
            column: 26
          },
          end: {
            line: 38,
            column: 27
          }
        },
        loc: {
          start: {
            line: 38,
            column: 30
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 38
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 46,
            column: 23
          },
          end: {
            line: 46,
            column: 24
          }
        },
        loc: {
          start: {
            line: 46,
            column: 33
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 46
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 67,
            column: 26
          },
          end: {
            line: 67,
            column: 27
          }
        },
        loc: {
          start: {
            line: 67,
            column: 36
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 67
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 88,
            column: 25
          },
          end: {
            line: 88,
            column: 26
          }
        },
        loc: {
          start: {
            line: 88,
            column: 36
          },
          end: {
            line: 130,
            column: 5
          }
        },
        line: 88
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 131,
            column: 22
          },
          end: {
            line: 131,
            column: 23
          }
        },
        loc: {
          start: {
            line: 131,
            column: 26
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 131
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 190,
            column: 46
          },
          end: {
            line: 190,
            column: 47
          }
        },
        loc: {
          start: {
            line: 190,
            column: 51
          },
          end: {
            line: 190,
            column: 87
          }
        },
        line: 190
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 195,
            column: 54
          },
          end: {
            line: 195,
            column: 55
          }
        },
        loc: {
          start: {
            line: 195,
            column: 79
          },
          end: {
            line: 202,
            column: 54
          }
        },
        line: 195
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 233,
            column: 46
          },
          end: {
            line: 233,
            column: 47
          }
        },
        loc: {
          start: {
            line: 233,
            column: 51
          },
          end: {
            line: 233,
            column: 84
          }
        },
        line: 233
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 238,
            column: 51
          },
          end: {
            line: 238,
            column: 52
          }
        },
        loc: {
          start: {
            line: 238,
            column: 73
          },
          end: {
            line: 241,
            column: 51
          }
        },
        line: 238
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 258,
            column: 46
          },
          end: {
            line: 258,
            column: 47
          }
        },
        loc: {
          start: {
            line: 258,
            column: 51
          },
          end: {
            line: 258,
            column: 78
          }
        },
        line: 258
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "2": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 52,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 52,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "3": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "4": {
        loc: {
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 58,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 58,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "5": {
        loc: {
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 73,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 73,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "6": {
        loc: {
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "7": {
        loc: {
          start: {
            line: 77,
            column: 16
          },
          end: {
            line: 79,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 16
          },
          end: {
            line: 79,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "8": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "9": {
        loc: {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 91,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 91,
            column: 30
          }
        }, {
          start: {
            line: 91,
            column: 34
          },
          end: {
            line: 91,
            column: 49
          }
        }, {
          start: {
            line: 91,
            column: 53
          },
          end: {
            line: 91,
            column: 62
          }
        }],
        line: 91
      },
      "10": {
        loc: {
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        }, {
          start: {
            line: 121,
            column: 19
          },
          end: {
            line: 123,
            column: 13
          }
        }],
        line: 109
      },
      "11": {
        loc: {
          start: {
            line: 122,
            column: 25
          },
          end: {
            line: 122,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 25
          },
          end: {
            line: 122,
            column: 37
          }
        }, {
          start: {
            line: 122,
            column: 41
          },
          end: {
            line: 122,
            column: 85
          }
        }],
        line: 122
      },
      "12": {
        loc: {
          start: {
            line: 132,
            column: 29
          },
          end: {
            line: 132,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 132,
            column: 51
          },
          end: {
            line: 132,
            column: 76
          }
        }, {
          start: {
            line: 132,
            column: 79
          },
          end: {
            line: 132,
            column: 81
          }
        }],
        line: 132
      },
      "13": {
        loc: {
          start: {
            line: 133,
            column: 26
          },
          end: {
            line: 133,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 133,
            column: 45
          },
          end: {
            line: 133,
            column: 67
          }
        }, {
          start: {
            line: 133,
            column: 70
          },
          end: {
            line: 133,
            column: 72
          }
        }],
        line: 133
      },
      "14": {
        loc: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 137,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 137,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "15": {
        loc: {
          start: {
            line: 148,
            column: 38
          },
          end: {
            line: 148,
            column: 127
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 148,
            column: 59
          },
          end: {
            line: 148,
            column: 106
          }
        }, {
          start: {
            line: 148,
            column: 109
          },
          end: {
            line: 148,
            column: 127
          }
        }],
        line: 148
      },
      "16": {
        loc: {
          start: {
            line: 163,
            column: 24
          },
          end: {
            line: 166,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 24
          },
          end: {
            line: 163,
            column: 29
          }
        }, {
          start: {
            line: 163,
            column: 47
          },
          end: {
            line: 166,
            column: 26
          }
        }],
        line: 163
      },
      "17": {
        loc: {
          start: {
            line: 175,
            column: 32
          },
          end: {
            line: 203,
            column: 34
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 175,
            column: 64
          },
          end: {
            line: 186,
            column: 34
          }
        }, {
          start: {
            line: 186,
            column: 51
          },
          end: {
            line: 203,
            column: 34
          }
        }],
        line: 175
      },
      "18": {
        loc: {
          start: {
            line: 191,
            column: 46
          },
          end: {
            line: 191,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 46
          },
          end: {
            line: 191,
            column: 58
          }
        }, {
          start: {
            line: 191,
            column: 62
          },
          end: {
            line: 191,
            column: 82
          }
        }],
        line: 191
      },
      "19": {
        loc: {
          start: {
            line: 192,
            column: 46
          },
          end: {
            line: 202,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 192,
            column: 84
          },
          end: {
            line: 195,
            column: 38
          }
        }, {
          start: {
            line: 195,
            column: 41
          },
          end: {
            line: 202,
            column: 55
          }
        }],
        line: 192
      },
      "20": {
        loc: {
          start: {
            line: 204,
            column: 32
          },
          end: {
            line: 207,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 32
          },
          end: {
            line: 204,
            column: 50
          }
        }, {
          start: {
            line: 204,
            column: 68
          },
          end: {
            line: 207,
            column: 34
          }
        }],
        line: 204
      },
      "21": {
        loc: {
          start: {
            line: 218,
            column: 32
          },
          end: {
            line: 242,
            column: 34
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 218,
            column: 61
          },
          end: {
            line: 229,
            column: 34
          }
        }, {
          start: {
            line: 229,
            column: 51
          },
          end: {
            line: 242,
            column: 34
          }
        }],
        line: 218
      },
      "22": {
        loc: {
          start: {
            line: 235,
            column: 46
          },
          end: {
            line: 241,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 235,
            column: 81
          },
          end: {
            line: 238,
            column: 38
          }
        }, {
          start: {
            line: 238,
            column: 41
          },
          end: {
            line: 241,
            column: 52
          }
        }],
        line: 235
      },
      "23": {
        loc: {
          start: {
            line: 280,
            column: 46
          },
          end: {
            line: 280,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 46
          },
          end: {
            line: 280,
            column: 58
          }
        }, {
          start: {
            line: 280,
            column: 62
          },
          end: {
            line: 280,
            column: 80
          }
        }, {
          start: {
            line: 280,
            column: 84
          },
          end: {
            line: 280,
            column: 99
          }
        }],
        line: 280
      },
      "24": {
        loc: {
          start: {
            line: 281,
            column: 46
          },
          end: {
            line: 288,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 281,
            column: 75
          },
          end: {
            line: 288,
            column: 38
          }
        }, {
          start: {
            line: 288,
            column: 41
          },
          end: {
            line: 288,
            column: 59
          }
        }],
        line: 281
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0],
      "24": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/components/inventory/AddInventoryModal.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { X, Loader2 } from 'lucide-react';\nimport { Button } from '@/components/ui/Button';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { queryKeys } from '@/context/QueryProvider';\n\ninterface AddInventoryModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n    onSuccess: () => void;\n    preselectedProduct?: { id: number, name: string } | null;\n}\n\ninterface Shop {\n    id: number;\n    name: string;\n}\n\ninterface Product {\n    id: number;\n    name: string;\n    sku: string;\n}\n\nexport default function AddInventoryModal({ isOpen, onClose, onSuccess, preselectedProduct }: AddInventoryModalProps) {\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n    const [shops, setShops] = useState<Shop[]>([]);\n    const [products, setProducts] = useState<Product[]>([]);\n    const [selectedProductId, setSelectedProductId] = useState<string>('');\n    const [selectedShopId, setSelectedShopId] = useState<string>('');\n    const [quantity, setQuantity] = useState<string>('1');\n    const [shopsLoading, setShopsLoading] = useState(true);\n    const [productsLoading, setProductsLoading] = useState(true);\n    const queryClient = useQueryClient();\n\n    // Set preselected product when it changes\n    useEffect(() => {\n        if (preselectedProduct) {\n            setSelectedProductId(preselectedProduct.id.toString());\n        }\n    }, [preselectedProduct]);\n\n    // Fetch shops and products when modal opens\n    useEffect(() => {\n        if (isOpen) {\n            fetchShops();\n            fetchProducts();\n        }\n    }, [isOpen]);\n\n    const fetchShops = async () => {\n        try {\n            setShopsLoading(true);\n            const response = await fetch('/api/shops');\n            if (!response.ok) {\n                throw new Error('Failed to fetch shops');\n            }\n            const data = await response.json();\n            if (data.success) {\n                setShops(data.data);\n                if (data.data.length > 0) {\n                    setSelectedShopId(data.data[0].id.toString());\n                }\n            }\n        } catch (error) {\n            console.error('Error fetching shops:', error);\n            setError('Failed to load shops. Please try again.');\n        } finally {\n            setShopsLoading(false);\n        }\n    };\n\n    const fetchProducts = async () => {\n        try {\n            setProductsLoading(true);\n            const response = await fetch('/api/products');\n            if (!response.ok) {\n                throw new Error('Failed to fetch products');\n            }\n            const data = await response.json();\n            if (data.success) {\n                setProducts(data.data);\n                if (data.data.length > 0) {\n                    setSelectedProductId(data.data[0].id.toString());\n                }\n            }\n        } catch (error) {\n            console.error('Error fetching products:', error);\n            setError('Failed to load products. Please try again.');\n        } finally {\n            setProductsLoading(false);\n        }\n    };\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setError(null);\n\n        if (!selectedProductId || !selectedShopId || !quantity) {\n            setError('Please fill out all fields');\n            return;\n        }\n\n        try {\n            setIsSubmitting(true);\n            const response = await fetch('/api/inventory/add', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    productId: selectedProductId,\n                    shopId: selectedShopId,\n                    quantity: parseInt(quantity)\n                }),\n            });\n\n            const data = await response.json();\n\n            if (data.success) {\n                // Invalidate relevant queries to force a refresh\n                queryClient.invalidateQueries({ queryKey: queryKeys.inventory });\n                queryClient.invalidateQueries({ queryKey: queryKeys.inventoryList() });\n\n                // Notify parent component\n                onSuccess();\n                resetForm();\n                onClose();\n            } else {\n                setError(data.message || 'Failed to add inventory. Please try again.');\n            }\n        } catch (error) {\n            console.error('Error adding inventory:', error);\n            setError('An unexpected error occurred. Please try again.');\n        } finally {\n            setIsSubmitting(false);\n        }\n    };\n\n    const resetForm = () => {\n        setSelectedProductId(products.length > 0 ? products[0].id.toString() : '');\n        setSelectedShopId(shops.length > 0 ? shops[0].id.toString() : '');\n        setQuantity('1');\n        setError(null);\n    };\n\n    if (!isOpen) return null;\n\n    return (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n            <div className=\"bg-white rounded-lg shadow-lg w-full max-w-md\">\n                <div className=\"p-4 border-b border-gray-200 flex justify-between items-center\">\n                    <h2 className=\"text-xl font-semibold text-black\">\n                        {preselectedProduct\n                            ? `Add \"${preselectedProduct.name}\" to Inventory`\n                            : \"Add to Inventory\"}\n                    </h2>\n                    <button onClick={onClose} className=\"text-black hover:text-gray-600\">\n                        <X size={24} />\n                    </button>\n                </div>\n                <form onSubmit={handleSubmit} className=\"p-4\">\n                    {error && (\n                        <div className=\"mb-4 p-3 bg-red-50 text-red-700 rounded-md text-sm\">\n                            {error}\n                        </div>\n                    )}\n\n                    <div className=\"mb-4\">\n                        <label htmlFor=\"product\" className=\"block text-sm font-medium text-black mb-1\">\n                            Product\n                        </label>\n                        {productsLoading ? (\n                            <div className=\"flex items-center space-x-2 h-10\">\n                                <Loader2 className=\"animate-spin h-4 w-4 text-black\" />\n                                <span className=\"text-black\">Loading products...</span>\n                            </div>\n                        ) : (\n                            <select\n                                id=\"product\"\n                                className=\"bg-white border border-gray-300 text-black text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5\"\n                                value={selectedProductId}\n                                onChange={(e) => setSelectedProductId(e.target.value)}\n                                disabled={isSubmitting || !!preselectedProduct}\n                            >\n                                {products.length === 0 ? (\n                                    <option value=\"\">No products available</option>\n                                ) : (\n                                    products.map((product) => (\n                                        <option key={product.id} value={product.id}>\n                                            {product.sku} - {product.name}\n                                        </option>\n                                    ))\n                                )}\n                            </select>\n                        )}\n                        {preselectedProduct && (\n                            <p className=\"mt-1 text-xs text-black\">\n                                This newly created product is preselected for you.\n                            </p>\n                        )}\n                    </div>\n\n                    <div className=\"mb-4\">\n                        <label htmlFor=\"shop\" className=\"block text-sm font-medium text-black mb-1\">\n                            Shop\n                        </label>\n                        {shopsLoading ? (\n                            <div className=\"flex items-center space-x-2 h-10\">\n                                <Loader2 className=\"animate-spin h-4 w-4 text-black\" />\n                                <span className=\"text-black\">Loading shops...</span>\n                            </div>\n                        ) : (\n                            <select\n                                id=\"shop\"\n                                className=\"bg-white border border-gray-300 text-black text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5\"\n                                value={selectedShopId}\n                                onChange={(e) => setSelectedShopId(e.target.value)}\n                                disabled={isSubmitting}\n                            >\n                                {shops.length === 0 ? (\n                                    <option value=\"\">No shops available</option>\n                                ) : (\n                                    shops.map((shop) => (\n                                        <option key={shop.id} value={shop.id}>\n                                            {shop.name}\n                                        </option>\n                                    ))\n                                )}\n                            </select>\n                        )}\n                    </div>\n\n                    <div className=\"mb-4\">\n                        <label htmlFor=\"quantity\" className=\"block text-sm font-medium text-black mb-1\">\n                            Quantity\n                        </label>\n                        <input\n                            type=\"number\"\n                            id=\"quantity\"\n                            className=\"bg-white border border-gray-300 text-black text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5\"\n                            value={quantity}\n                            onChange={(e) => setQuantity(e.target.value)}\n                            min=\"1\"\n                            required\n                            disabled={isSubmitting}\n                        />\n                    </div>\n\n                    <div className=\"flex justify-end space-x-2 mt-6\">\n                        <Button\n                            type=\"button\"\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={onClose}\n                            disabled={isSubmitting}\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            type=\"submit\"\n                            variant=\"primary\"\n                            size=\"sm\"\n                            disabled={isSubmitting || !selectedProductId || !selectedShopId}\n                        >\n                            {isSubmitting ? (\n                                <>\n                                    <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                                    Adding...\n                                </>\n                            ) : (\n                                'Add to Inventory'\n                            )}\n                        </Button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n} "],
      names: ["AddInventoryModal", "isOpen", "onClose", "onSuccess", "preselectedProduct", "isSubmitting", "setIsSubmitting", "useState", "error", "setError", "shops", "setShops", "products", "setProducts", "selectedProductId", "setSelectedProductId", "selectedShopId", "setSelectedShopId", "quantity", "setQuantity", "shopsLoading", "setShopsLoading", "productsLoading", "setProductsLoading", "queryClient", "useQueryClient", "useEffect", "id", "toString", "fetchShops", "fetchProducts", "response", "fetch", "ok", "Error", "data", "json", "success", "length", "console", "handleSubmit", "e", "preventDefault", "method", "headers", "body", "JSON", "stringify", "productId", "shopId", "parseInt", "invalidateQueries", "queryKey", "queryKeys", "inventory", "inventoryList", "resetForm", "message", "div", "className", "h2", "name", "button", "onClick", "X", "size", "form", "onSubmit", "label", "htmlFor", "Loader2", "span", "select", "value", "onChange", "target", "disabled", "option", "map", "product", "sku", "p", "shop", "input", "type", "min", "required", "Button", "variant"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "26b9dce45e522934d5a71739dcd100830523e755"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_6rychjlkz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_6rychjlkz();
cov_6rychjlkz().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_6rychjlkz().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_6rychjlkz().f[0]++;
    cov_6rychjlkz().s[2]++;
    return AddInventoryModal;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_6rychjlkz().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_6rychjlkz().s[4]++, require("react"));
const _lucidereact =
/* istanbul ignore next */
(cov_6rychjlkz().s[5]++, require("lucide-react"));
const _Button =
/* istanbul ignore next */
(cov_6rychjlkz().s[6]++, require("../ui/Button"));
const _reactquery =
/* istanbul ignore next */
(cov_6rychjlkz().s[7]++, require("@tanstack/react-query"));
const _QueryProvider =
/* istanbul ignore next */
(cov_6rychjlkz().s[8]++, require("../../context/QueryProvider"));
function AddInventoryModal({
  isOpen,
  onClose,
  onSuccess,
  preselectedProduct
}) {
  /* istanbul ignore next */
  cov_6rychjlkz().f[1]++;
  const [isSubmitting, setIsSubmitting] =
  /* istanbul ignore next */
  (cov_6rychjlkz().s[9]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_6rychjlkz().s[10]++, (0, _react.useState)(null));
  const [shops, setShops] =
  /* istanbul ignore next */
  (cov_6rychjlkz().s[11]++, (0, _react.useState)([]));
  const [products, setProducts] =
  /* istanbul ignore next */
  (cov_6rychjlkz().s[12]++, (0, _react.useState)([]));
  const [selectedProductId, setSelectedProductId] =
  /* istanbul ignore next */
  (cov_6rychjlkz().s[13]++, (0, _react.useState)(""));
  const [selectedShopId, setSelectedShopId] =
  /* istanbul ignore next */
  (cov_6rychjlkz().s[14]++, (0, _react.useState)(""));
  const [quantity, setQuantity] =
  /* istanbul ignore next */
  (cov_6rychjlkz().s[15]++, (0, _react.useState)("1"));
  const [shopsLoading, setShopsLoading] =
  /* istanbul ignore next */
  (cov_6rychjlkz().s[16]++, (0, _react.useState)(true));
  const [productsLoading, setProductsLoading] =
  /* istanbul ignore next */
  (cov_6rychjlkz().s[17]++, (0, _react.useState)(true));
  const queryClient =
  /* istanbul ignore next */
  (cov_6rychjlkz().s[18]++, (0, _reactquery.useQueryClient)());
  // Set preselected product when it changes
  /* istanbul ignore next */
  cov_6rychjlkz().s[19]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_6rychjlkz().f[2]++;
    cov_6rychjlkz().s[20]++;
    if (preselectedProduct) {
      /* istanbul ignore next */
      cov_6rychjlkz().b[0][0]++;
      cov_6rychjlkz().s[21]++;
      setSelectedProductId(preselectedProduct.id.toString());
    } else
    /* istanbul ignore next */
    {
      cov_6rychjlkz().b[0][1]++;
    }
  }, [preselectedProduct]);
  // Fetch shops and products when modal opens
  /* istanbul ignore next */
  cov_6rychjlkz().s[22]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_6rychjlkz().f[3]++;
    cov_6rychjlkz().s[23]++;
    if (isOpen) {
      /* istanbul ignore next */
      cov_6rychjlkz().b[1][0]++;
      cov_6rychjlkz().s[24]++;
      fetchShops();
      /* istanbul ignore next */
      cov_6rychjlkz().s[25]++;
      fetchProducts();
    } else
    /* istanbul ignore next */
    {
      cov_6rychjlkz().b[1][1]++;
    }
  }, [isOpen]);
  /* istanbul ignore next */
  cov_6rychjlkz().s[26]++;
  const fetchShops = async () => {
    /* istanbul ignore next */
    cov_6rychjlkz().f[4]++;
    cov_6rychjlkz().s[27]++;
    try {
      /* istanbul ignore next */
      cov_6rychjlkz().s[28]++;
      setShopsLoading(true);
      const response =
      /* istanbul ignore next */
      (cov_6rychjlkz().s[29]++, await fetch("/api/shops"));
      /* istanbul ignore next */
      cov_6rychjlkz().s[30]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_6rychjlkz().b[2][0]++;
        cov_6rychjlkz().s[31]++;
        throw new Error("Failed to fetch shops");
      } else
      /* istanbul ignore next */
      {
        cov_6rychjlkz().b[2][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_6rychjlkz().s[32]++, await response.json());
      /* istanbul ignore next */
      cov_6rychjlkz().s[33]++;
      if (data.success) {
        /* istanbul ignore next */
        cov_6rychjlkz().b[3][0]++;
        cov_6rychjlkz().s[34]++;
        setShops(data.data);
        /* istanbul ignore next */
        cov_6rychjlkz().s[35]++;
        if (data.data.length > 0) {
          /* istanbul ignore next */
          cov_6rychjlkz().b[4][0]++;
          cov_6rychjlkz().s[36]++;
          setSelectedShopId(data.data[0].id.toString());
        } else
        /* istanbul ignore next */
        {
          cov_6rychjlkz().b[4][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_6rychjlkz().b[3][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_6rychjlkz().s[37]++;
      console.error("Error fetching shops:", error);
      /* istanbul ignore next */
      cov_6rychjlkz().s[38]++;
      setError("Failed to load shops. Please try again.");
    } finally {
      /* istanbul ignore next */
      cov_6rychjlkz().s[39]++;
      setShopsLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_6rychjlkz().s[40]++;
  const fetchProducts = async () => {
    /* istanbul ignore next */
    cov_6rychjlkz().f[5]++;
    cov_6rychjlkz().s[41]++;
    try {
      /* istanbul ignore next */
      cov_6rychjlkz().s[42]++;
      setProductsLoading(true);
      const response =
      /* istanbul ignore next */
      (cov_6rychjlkz().s[43]++, await fetch("/api/products"));
      /* istanbul ignore next */
      cov_6rychjlkz().s[44]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_6rychjlkz().b[5][0]++;
        cov_6rychjlkz().s[45]++;
        throw new Error("Failed to fetch products");
      } else
      /* istanbul ignore next */
      {
        cov_6rychjlkz().b[5][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_6rychjlkz().s[46]++, await response.json());
      /* istanbul ignore next */
      cov_6rychjlkz().s[47]++;
      if (data.success) {
        /* istanbul ignore next */
        cov_6rychjlkz().b[6][0]++;
        cov_6rychjlkz().s[48]++;
        setProducts(data.data);
        /* istanbul ignore next */
        cov_6rychjlkz().s[49]++;
        if (data.data.length > 0) {
          /* istanbul ignore next */
          cov_6rychjlkz().b[7][0]++;
          cov_6rychjlkz().s[50]++;
          setSelectedProductId(data.data[0].id.toString());
        } else
        /* istanbul ignore next */
        {
          cov_6rychjlkz().b[7][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_6rychjlkz().b[6][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_6rychjlkz().s[51]++;
      console.error("Error fetching products:", error);
      /* istanbul ignore next */
      cov_6rychjlkz().s[52]++;
      setError("Failed to load products. Please try again.");
    } finally {
      /* istanbul ignore next */
      cov_6rychjlkz().s[53]++;
      setProductsLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_6rychjlkz().s[54]++;
  const handleSubmit = async e => {
    /* istanbul ignore next */
    cov_6rychjlkz().f[6]++;
    cov_6rychjlkz().s[55]++;
    e.preventDefault();
    /* istanbul ignore next */
    cov_6rychjlkz().s[56]++;
    setError(null);
    /* istanbul ignore next */
    cov_6rychjlkz().s[57]++;
    if (
    /* istanbul ignore next */
    (cov_6rychjlkz().b[9][0]++, !selectedProductId) ||
    /* istanbul ignore next */
    (cov_6rychjlkz().b[9][1]++, !selectedShopId) ||
    /* istanbul ignore next */
    (cov_6rychjlkz().b[9][2]++, !quantity)) {
      /* istanbul ignore next */
      cov_6rychjlkz().b[8][0]++;
      cov_6rychjlkz().s[58]++;
      setError("Please fill out all fields");
      /* istanbul ignore next */
      cov_6rychjlkz().s[59]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_6rychjlkz().b[8][1]++;
    }
    cov_6rychjlkz().s[60]++;
    try {
      /* istanbul ignore next */
      cov_6rychjlkz().s[61]++;
      setIsSubmitting(true);
      const response =
      /* istanbul ignore next */
      (cov_6rychjlkz().s[62]++, await fetch("/api/inventory/add", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          productId: selectedProductId,
          shopId: selectedShopId,
          quantity: parseInt(quantity)
        })
      }));
      const data =
      /* istanbul ignore next */
      (cov_6rychjlkz().s[63]++, await response.json());
      /* istanbul ignore next */
      cov_6rychjlkz().s[64]++;
      if (data.success) {
        /* istanbul ignore next */
        cov_6rychjlkz().b[10][0]++;
        cov_6rychjlkz().s[65]++;
        // Invalidate relevant queries to force a refresh
        queryClient.invalidateQueries({
          queryKey: _QueryProvider.queryKeys.inventory
        });
        /* istanbul ignore next */
        cov_6rychjlkz().s[66]++;
        queryClient.invalidateQueries({
          queryKey: _QueryProvider.queryKeys.inventoryList()
        });
        // Notify parent component
        /* istanbul ignore next */
        cov_6rychjlkz().s[67]++;
        onSuccess();
        /* istanbul ignore next */
        cov_6rychjlkz().s[68]++;
        resetForm();
        /* istanbul ignore next */
        cov_6rychjlkz().s[69]++;
        onClose();
      } else {
        /* istanbul ignore next */
        cov_6rychjlkz().b[10][1]++;
        cov_6rychjlkz().s[70]++;
        setError(
        /* istanbul ignore next */
        (cov_6rychjlkz().b[11][0]++, data.message) ||
        /* istanbul ignore next */
        (cov_6rychjlkz().b[11][1]++, "Failed to add inventory. Please try again."));
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_6rychjlkz().s[71]++;
      console.error("Error adding inventory:", error);
      /* istanbul ignore next */
      cov_6rychjlkz().s[72]++;
      setError("An unexpected error occurred. Please try again.");
    } finally {
      /* istanbul ignore next */
      cov_6rychjlkz().s[73]++;
      setIsSubmitting(false);
    }
  };
  /* istanbul ignore next */
  cov_6rychjlkz().s[74]++;
  const resetForm = () => {
    /* istanbul ignore next */
    cov_6rychjlkz().f[7]++;
    cov_6rychjlkz().s[75]++;
    setSelectedProductId(products.length > 0 ?
    /* istanbul ignore next */
    (cov_6rychjlkz().b[12][0]++, products[0].id.toString()) :
    /* istanbul ignore next */
    (cov_6rychjlkz().b[12][1]++, ""));
    /* istanbul ignore next */
    cov_6rychjlkz().s[76]++;
    setSelectedShopId(shops.length > 0 ?
    /* istanbul ignore next */
    (cov_6rychjlkz().b[13][0]++, shops[0].id.toString()) :
    /* istanbul ignore next */
    (cov_6rychjlkz().b[13][1]++, ""));
    /* istanbul ignore next */
    cov_6rychjlkz().s[77]++;
    setQuantity("1");
    /* istanbul ignore next */
    cov_6rychjlkz().s[78]++;
    setError(null);
  };
  /* istanbul ignore next */
  cov_6rychjlkz().s[79]++;
  if (!isOpen) {
    /* istanbul ignore next */
    cov_6rychjlkz().b[14][0]++;
    cov_6rychjlkz().s[80]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_6rychjlkz().b[14][1]++;
  }
  cov_6rychjlkz().s[81]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4",
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "bg-white rounded-lg shadow-lg w-full max-w-md",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "p-4 border-b border-gray-200 flex justify-between items-center",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-xl font-semibold text-black",
          children: preselectedProduct ?
          /* istanbul ignore next */
          (cov_6rychjlkz().b[15][0]++, `Add "${preselectedProduct.name}" to Inventory`) :
          /* istanbul ignore next */
          (cov_6rychjlkz().b[15][1]++, "Add to Inventory")
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          onClick: onClose,
          className: "text-black hover:text-gray-600",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.X, {
            size: 24
          })
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("form", {
        onSubmit: handleSubmit,
        className: "p-4",
        children: [
        /* istanbul ignore next */
        (cov_6rychjlkz().b[16][0]++, error) &&
        /* istanbul ignore next */
        (cov_6rychjlkz().b[16][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "mb-4 p-3 bg-red-50 text-red-700 rounded-md text-sm",
          children: error
        })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "mb-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
            htmlFor: "product",
            className: "block text-sm font-medium text-black mb-1",
            children: "Product"
          }), productsLoading ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_6rychjlkz().b[17][0]++, (0, _jsxruntime.jsxs)("div", {
            className: "flex items-center space-x-2 h-10",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Loader2, {
              className: "animate-spin h-4 w-4 text-black"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-black",
              children: "Loading products..."
            })]
          })) :
          /* istanbul ignore next */
          (/*#__PURE__*/cov_6rychjlkz().b[17][1]++, (0, _jsxruntime.jsx)("select", {
            id: "product",
            className: "bg-white border border-gray-300 text-black text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5",
            value: selectedProductId,
            onChange: e => {
              /* istanbul ignore next */
              cov_6rychjlkz().f[8]++;
              cov_6rychjlkz().s[82]++;
              return setSelectedProductId(e.target.value);
            },
            disabled:
            /* istanbul ignore next */
            (cov_6rychjlkz().b[18][0]++, isSubmitting) ||
            /* istanbul ignore next */
            (cov_6rychjlkz().b[18][1]++, !!preselectedProduct),
            children: products.length === 0 ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_6rychjlkz().b[19][0]++, (0, _jsxruntime.jsx)("option", {
              value: "",
              children: "No products available"
            })) :
            /* istanbul ignore next */
            (cov_6rychjlkz().b[19][1]++, products.map(product => {
              /* istanbul ignore next */
              cov_6rychjlkz().f[9]++;
              cov_6rychjlkz().s[83]++;
              return /*#__PURE__*/(0, _jsxruntime.jsxs)("option", {
                value: product.id,
                children: [product.sku, " - ", product.name]
              }, product.id);
            }))
          })),
          /* istanbul ignore next */
          (cov_6rychjlkz().b[20][0]++, preselectedProduct) &&
          /* istanbul ignore next */
          (cov_6rychjlkz().b[20][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "mt-1 text-xs text-black",
            children: "This newly created product is preselected for you."
          }))]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "mb-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
            htmlFor: "shop",
            className: "block text-sm font-medium text-black mb-1",
            children: "Shop"
          }), shopsLoading ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_6rychjlkz().b[21][0]++, (0, _jsxruntime.jsxs)("div", {
            className: "flex items-center space-x-2 h-10",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Loader2, {
              className: "animate-spin h-4 w-4 text-black"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-black",
              children: "Loading shops..."
            })]
          })) :
          /* istanbul ignore next */
          (/*#__PURE__*/cov_6rychjlkz().b[21][1]++, (0, _jsxruntime.jsx)("select", {
            id: "shop",
            className: "bg-white border border-gray-300 text-black text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5",
            value: selectedShopId,
            onChange: e => {
              /* istanbul ignore next */
              cov_6rychjlkz().f[10]++;
              cov_6rychjlkz().s[84]++;
              return setSelectedShopId(e.target.value);
            },
            disabled: isSubmitting,
            children: shops.length === 0 ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_6rychjlkz().b[22][0]++, (0, _jsxruntime.jsx)("option", {
              value: "",
              children: "No shops available"
            })) :
            /* istanbul ignore next */
            (cov_6rychjlkz().b[22][1]++, shops.map(shop => {
              /* istanbul ignore next */
              cov_6rychjlkz().f[11]++;
              cov_6rychjlkz().s[85]++;
              return /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                value: shop.id,
                children: shop.name
              }, shop.id);
            }))
          }))]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "mb-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
            htmlFor: "quantity",
            className: "block text-sm font-medium text-black mb-1",
            children: "Quantity"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
            type: "number",
            id: "quantity",
            className: "bg-white border border-gray-300 text-black text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5",
            value: quantity,
            onChange: e => {
              /* istanbul ignore next */
              cov_6rychjlkz().f[12]++;
              cov_6rychjlkz().s[86]++;
              return setQuantity(e.target.value);
            },
            min: "1",
            required: true,
            disabled: isSubmitting
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex justify-end space-x-2 mt-6",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
            type: "button",
            variant: "outline",
            size: "sm",
            onClick: onClose,
            disabled: isSubmitting,
            children: "Cancel"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
            type: "submit",
            variant: "primary",
            size: "sm",
            disabled:
            /* istanbul ignore next */
            (cov_6rychjlkz().b[23][0]++, isSubmitting) ||
            /* istanbul ignore next */
            (cov_6rychjlkz().b[23][1]++, !selectedProductId) ||
            /* istanbul ignore next */
            (cov_6rychjlkz().b[23][2]++, !selectedShopId),
            children: isSubmitting ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_6rychjlkz().b[24][0]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Loader2, {
                className: "mr-2 h-4 w-4 animate-spin"
              }), "Adding..."]
            })) :
            /* istanbul ignore next */
            (cov_6rychjlkz().b[24][1]++, "Add to Inventory")
          })]
        })]
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,