f6c821549c3a829e2515d5fe566866f1
"use client";
"use strict";

/* istanbul ignore next */
function cov_2nnkk9tup4() {
  var path = "/Users/sachin/Documents/md-sports-/src/hooks/useAuth.tsx";
  var hash = "7e3daffb9ea375e17116474a09e41b66551ad557";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/hooks/useAuth.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 28
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 48
        }
      },
      "8": {
        start: {
          line: 24,
          column: 15
        },
        end: {
          line: 24,
          column: 31
        }
      },
      "9": {
        start: {
          line: 25,
          column: 29
        },
        end: {
          line: 25,
          column: 71
        }
      },
      "10": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 46
        }
      },
      "11": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 6
        }
      },
      "12": {
        start: {
          line: 33,
          column: 34
        },
        end: {
          line: 33,
          column: 70
        }
      },
      "13": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 40,
          column: 2
        }
      },
      "14": {
        start: {
          line: 41,
          column: 21
        },
        end: {
          line: 242,
          column: 1
        }
      },
      "15": {
        start: {
          line: 42,
          column: 28
        },
        end: {
          line: 42,
          column: 54
        }
      },
      "16": {
        start: {
          line: 43,
          column: 42
        },
        end: {
          line: 43,
          column: 68
        }
      },
      "17": {
        start: {
          line: 44,
          column: 38
        },
        end: {
          line: 44,
          column: 64
        }
      },
      "18": {
        start: {
          line: 45,
          column: 19
        },
        end: {
          line: 45,
          column: 47
        }
      },
      "19": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 101,
          column: 7
        }
      },
      "20": {
        start: {
          line: 48,
          column: 35
        },
        end: {
          line: 59,
          column: 42
        }
      },
      "21": {
        start: {
          line: 49,
          column: 33
        },
        end: {
          line: 49,
          column: 120
        }
      },
      "22": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 52,
          column: 13
        }
      },
      "23": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 72
        }
      },
      "24": {
        start: {
          line: 54,
          column: 30
        },
        end: {
          line: 54,
          column: 52
        }
      },
      "25": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 57,
          column: 13
        }
      },
      "26": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 59
        }
      },
      "27": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 26
        }
      },
      "28": {
        start: {
          line: 59,
          column: 20
        },
        end: {
          line: 59,
          column: 41
        }
      },
      "29": {
        start: {
          line: 60,
          column: 36
        },
        end: {
          line: 94,
          column: 10
        }
      },
      "30": {
        start: {
          line: 60,
          column: 78
        },
        end: {
          line: 60,
          column: 86
        }
      },
      "31": {
        start: {
          line: 61,
          column: 36
        },
        end: {
          line: 61,
          column: 48
        }
      },
      "32": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 92,
          column: 13
        }
      },
      "33": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 46
        }
      },
      "34": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 91,
          column: 17
        }
      },
      "35": {
        start: {
          line: 65,
          column: 20
        },
        end: {
          line: 65,
          column: 115
        }
      },
      "36": {
        start: {
          line: 67,
          column: 44
        },
        end: {
          line: 69,
          column: 22
        }
      },
      "37": {
        start: {
          line: 70,
          column: 20
        },
        end: {
          line: 83,
          column: 21
        }
      },
      "38": {
        start: {
          line: 71,
          column: 47
        },
        end: {
          line: 71,
          column: 79
        }
      },
      "39": {
        start: {
          line: 72,
          column: 24
        },
        end: {
          line: 72,
          column: 59
        }
      },
      "40": {
        start: {
          line: 73,
          column: 24
        },
        end: {
          line: 73,
          column: 55
        }
      },
      "41": {
        start: {
          line: 74,
          column: 24
        },
        end: {
          line: 74,
          column: 76
        }
      },
      "42": {
        start: {
          line: 75,
          column: 24
        },
        end: {
          line: 75,
          column: 74
        }
      },
      "43": {
        start: {
          line: 76,
          column: 24
        },
        end: {
          line: 76,
          column: 127
        }
      },
      "44": {
        start: {
          line: 77,
          column: 24
        },
        end: {
          line: 77,
          column: 91
        }
      },
      "45": {
        start: {
          line: 78,
          column: 24
        },
        end: {
          line: 78,
          column: 52
        }
      },
      "46": {
        start: {
          line: 80,
          column: 24
        },
        end: {
          line: 80,
          column: 111
        }
      },
      "47": {
        start: {
          line: 81,
          column: 24
        },
        end: {
          line: 81,
          column: 39
        }
      },
      "48": {
        start: {
          line: 82,
          column: 24
        },
        end: {
          line: 82,
          column: 53
        }
      },
      "49": {
        start: {
          line: 85,
          column: 20
        },
        end: {
          line: 85,
          column: 92
        }
      },
      "50": {
        start: {
          line: 86,
          column: 20
        },
        end: {
          line: 88,
          column: 21
        }
      },
      "51": {
        start: {
          line: 87,
          column: 24
        },
        end: {
          line: 87,
          column: 144
        }
      },
      "52": {
        start: {
          line: 89,
          column: 20
        },
        end: {
          line: 89,
          column: 35
        }
      },
      "53": {
        start: {
          line: 90,
          column: 20
        },
        end: {
          line: 90,
          column: 56
        }
      },
      "54": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 41
        }
      },
      "55": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 98,
          column: 10
        }
      },
      "56": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 63
        }
      },
      "57": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 65
        }
      },
      "58": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 162,
          column: 7
        }
      },
      "59": {
        start: {
          line: 103,
          column: 29
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "60": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 31
        }
      },
      "61": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 157,
          column: 13
        }
      },
      "62": {
        start: {
          line: 106,
          column: 42
        },
        end: {
          line: 106,
          column: 114
        }
      },
      "63": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 147,
          column: 17
        }
      },
      "64": {
        start: {
          line: 108,
          column: 20
        },
        end: {
          line: 108,
          column: 99
        }
      },
      "65": {
        start: {
          line: 109,
          column: 20
        },
        end: {
          line: 143,
          column: 21
        }
      },
      "66": {
        start: {
          line: 110,
          column: 41
        },
        end: {
          line: 114,
          column: 26
        }
      },
      "67": {
        start: {
          line: 115,
          column: 24
        },
        end: {
          line: 127,
          column: 25
        }
      },
      "68": {
        start: {
          line: 116,
          column: 28
        },
        end: {
          line: 116,
          column: 56
        }
      },
      "69": {
        start: {
          line: 117,
          column: 28
        },
        end: {
          line: 117,
          column: 62
        }
      },
      "70": {
        start: {
          line: 120,
          column: 28
        },
        end: {
          line: 120,
          column: 72
        }
      },
      "71": {
        start: {
          line: 123,
          column: 28
        },
        end: {
          line: 123,
          column: 129
        }
      },
      "72": {
        start: {
          line: 129,
          column: 24
        },
        end: {
          line: 129,
          column: 128
        }
      },
      "73": {
        start: {
          line: 133,
          column: 24
        },
        end: {
          line: 141,
          column: 25
        }
      },
      "74": {
        start: {
          line: 136,
          column: 28
        },
        end: {
          line: 136,
          column: 116
        }
      },
      "75": {
        start: {
          line: 137,
          column: 28
        },
        end: {
          line: 137,
          column: 42
        }
      },
      "76": {
        start: {
          line: 138,
          column: 28
        },
        end: {
          line: 138,
          column: 49
        }
      },
      "77": {
        start: {
          line: 139,
          column: 28
        },
        end: {
          line: 139,
          column: 67
        }
      },
      "78": {
        start: {
          line: 140,
          column: 28
        },
        end: {
          line: 140,
          column: 65
        }
      },
      "79": {
        start: {
          line: 145,
          column: 20
        },
        end: {
          line: 145,
          column: 64
        }
      },
      "80": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 150,
          column: 74
        }
      },
      "81": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 151,
          column: 30
        }
      },
      "82": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 152,
          column: 37
        }
      },
      "83": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 153,
          column: 55
        }
      },
      "84": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 154,
          column: 53
        }
      },
      "85": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 36
        }
      },
      "86": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 23
        }
      },
      "87": {
        start: {
          line: 163,
          column: 18
        },
        end: {
          line: 190,
          column: 5
        }
      },
      "88": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 27
        }
      },
      "89": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "90": {
        start: {
          line: 166,
          column: 29
        },
        end: {
          line: 169,
          column: 14
        }
      },
      "91": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 180,
          column: 13
        }
      },
      "92": {
        start: {
          line: 171,
          column: 72
        },
        end: {
          line: 171,
          column: 85
        }
      },
      "93": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 34
        }
      },
      "94": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 173,
          column: 47
        }
      },
      "95": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 174,
          column: 68
        }
      },
      "96": {
        start: {
          line: 175,
          column: 16
        },
        end: {
          line: 175,
          column: 66
        }
      },
      "97": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 177,
          column: 109
        }
      },
      "98": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 178,
          column: 36
        }
      },
      "99": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 179,
          column: 28
        }
      },
      "100": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 91
        }
      },
      "101": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 28
        }
      },
      "102": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 22
        }
      },
      "103": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 29
        }
      },
      "104": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 47
        }
      },
      "105": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 45
        }
      },
      "106": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 21
        }
      },
      "107": {
        start: {
          line: 191,
          column: 19
        },
        end: {
          line: 209,
          column: 6
        }
      },
      "108": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 27
        }
      },
      "109": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 22
        }
      },
      "110": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 29
        }
      },
      "111": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 47
        }
      },
      "112": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 45
        }
      },
      "113": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "114": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 47
        }
      },
      "115": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 75
        }
      },
      "116": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 60
        }
      },
      "117": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 30
        }
      },
      "118": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 28
        }
      },
      "119": {
        start: {
          line: 211,
          column: 26
        },
        end: {
          line: 214,
          column: 5
        }
      },
      "120": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 53
        }
      },
      "121": {
        start: {
          line: 212,
          column: 40
        },
        end: {
          line: 212,
          column: 53
        }
      },
      "122": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 53
        }
      },
      "123": {
        start: {
          line: 216,
          column: 31
        },
        end: {
          line: 221,
          column: 5
        }
      },
      "124": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 50
        }
      },
      "125": {
        start: {
          line: 217,
          column: 40
        },
        end: {
          line: 217,
          column: 50
        }
      },
      "126": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 220,
          column: 10
        }
      },
      "127": {
        start: {
          line: 223,
          column: 22
        },
        end: {
          line: 228,
          column: 5
        }
      },
      "128": {
        start: {
          line: 224,
          column: 22
        },
        end: {
          line: 224,
          column: 44
        }
      },
      "129": {
        start: {
          line: 225,
          column: 22
        },
        end: {
          line: 225,
          column: 47
        }
      },
      "130": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 71
        }
      },
      "131": {
        start: {
          line: 226,
          column: 32
        },
        end: {
          line: 226,
          column: 71
        }
      },
      "132": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 25
        }
      },
      "133": {
        start: {
          line: 229,
          column: 4
        },
        end: {
          line: 241,
          column: 7
        }
      },
      "134": {
        start: {
          line: 243,
          column: 16
        },
        end: {
          line: 249,
          column: 1
        }
      },
      "135": {
        start: {
          line: 244,
          column: 20
        },
        end: {
          line: 244,
          column: 55
        }
      },
      "136": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 247,
          column: 5
        }
      },
      "137": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 71
        }
      },
      "138": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 248,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 13,
            column: 19
          }
        },
        loc: {
          start: {
            line: 13,
            column: 29
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 10
          }
        },
        loc: {
          start: {
            line: 16,
            column: 20
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 13
          },
          end: {
            line: 19,
            column: 14
          }
        },
        loc: {
          start: {
            line: 19,
            column: 24
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 33
          }
        },
        loc: {
          start: {
            line: 27,
            column: 39
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 41,
            column: 21
          },
          end: {
            line: 41,
            column: 22
          }
        },
        loc: {
          start: {
            line: 41,
            column: 37
          },
          end: {
            line: 242,
            column: 1
          }
        },
        line: 41
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 47,
            column: 26
          },
          end: {
            line: 47,
            column: 27
          }
        },
        loc: {
          start: {
            line: 47,
            column: 30
          },
          end: {
            line: 99,
            column: 5
          }
        },
        line: 47
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 48,
            column: 64
          },
          end: {
            line: 48,
            column: 65
          }
        },
        loc: {
          start: {
            line: 48,
            column: 74
          },
          end: {
            line: 59,
            column: 9
          }
        },
        line: 48
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 59,
            column: 11
          },
          end: {
            line: 59,
            column: 12
          }
        },
        loc: {
          start: {
            line: 59,
            column: 20
          },
          end: {
            line: 59,
            column: 41
          }
        },
        line: 59
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 60,
            column: 66
          },
          end: {
            line: 60,
            column: 67
          }
        },
        loc: {
          start: {
            line: 60,
            column: 78
          },
          end: {
            line: 60,
            column: 86
          }
        },
        line: 60
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 60,
            column: 88
          },
          end: {
            line: 60,
            column: 89
          }
        },
        loc: {
          start: {
            line: 60,
            column: 103
          },
          end: {
            line: 94,
            column: 9
          }
        },
        line: 60
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 95,
            column: 15
          },
          end: {
            line: 95,
            column: 16
          }
        },
        loc: {
          start: {
            line: 95,
            column: 19
          },
          end: {
            line: 98,
            column: 9
          }
        },
        line: 95
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 102,
            column: 26
          },
          end: {
            line: 102,
            column: 27
          }
        },
        loc: {
          start: {
            line: 102,
            column: 30
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 102
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 103,
            column: 29
          },
          end: {
            line: 103,
            column: 30
          }
        },
        loc: {
          start: {
            line: 103,
            column: 39
          },
          end: {
            line: 158,
            column: 9
          }
        },
        line: 103
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 163,
            column: 18
          },
          end: {
            line: 163,
            column: 19
          }
        },
        loc: {
          start: {
            line: 163,
            column: 43
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 163
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 191,
            column: 43
          },
          end: {
            line: 191,
            column: 44
          }
        },
        loc: {
          start: {
            line: 191,
            column: 53
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 191
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 211,
            column: 26
          },
          end: {
            line: 211,
            column: 27
          }
        },
        loc: {
          start: {
            line: 211,
            column: 40
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 211
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 216,
            column: 31
          },
          end: {
            line: 216,
            column: 32
          }
        },
        loc: {
          start: {
            line: 216,
            column: 35
          },
          end: {
            line: 221,
            column: 5
          }
        },
        line: 216
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 223,
            column: 22
          },
          end: {
            line: 223,
            column: 23
          }
        },
        loc: {
          start: {
            line: 223,
            column: 30
          },
          end: {
            line: 228,
            column: 5
          }
        },
        line: 223
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 243,
            column: 16
          },
          end: {
            line: 243,
            column: 17
          }
        },
        loc: {
          start: {
            line: 243,
            column: 20
          },
          end: {
            line: 249,
            column: 1
          }
        },
        line: 243
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 35
          },
          end: {
            line: 28,
            column: 38
          }
        }, {
          start: {
            line: 28,
            column: 41
          },
          end: {
            line: 30,
            column: 5
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 28,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 28,
            column: 14
          }
        }, {
          start: {
            line: 28,
            column: 18
          },
          end: {
            line: 28,
            column: 32
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 49,
            column: 33
          },
          end: {
            line: 49,
            column: 120
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 33
          },
          end: {
            line: 49,
            column: 44
          }
        }, {
          start: {
            line: 49,
            column: 48
          },
          end: {
            line: 49,
            column: 83
          }
        }, {
          start: {
            line: 49,
            column: 87
          },
          end: {
            line: 49,
            column: 120
          }
        }],
        line: 49
      },
      "3": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 52,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 52,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "4": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "5": {
        loc: {
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 55,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 55,
            column: 25
          }
        }, {
          start: {
            line: 55,
            column: 29
          },
          end: {
            line: 55,
            column: 52
          }
        }, {
          start: {
            line: 55,
            column: 56
          },
          end: {
            line: 55,
            column: 80
          }
        }],
        line: 55
      },
      "6": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "7": {
        loc: {
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 62,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 62,
            column: 46
          }
        }, {
          start: {
            line: 62,
            column: 50
          },
          end: {
            line: 62,
            column: 73
          }
        }],
        line: 62
      },
      "8": {
        loc: {
          start: {
            line: 70,
            column: 20
          },
          end: {
            line: 83,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 20
          },
          end: {
            line: 83,
            column: 21
          }
        }, {
          start: {
            line: 79,
            column: 27
          },
          end: {
            line: 83,
            column: 21
          }
        }],
        line: 70
      },
      "9": {
        loc: {
          start: {
            line: 86,
            column: 20
          },
          end: {
            line: 88,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 20
          },
          end: {
            line: 88,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "10": {
        loc: {
          start: {
            line: 106,
            column: 42
          },
          end: {
            line: 106,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 42
          },
          end: {
            line: 106,
            column: 77
          }
        }, {
          start: {
            line: 106,
            column: 81
          },
          end: {
            line: 106,
            column: 114
          }
        }],
        line: 106
      },
      "11": {
        loc: {
          start: {
            line: 107,
            column: 16
          },
          end: {
            line: 147,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 16
          },
          end: {
            line: 147,
            column: 17
          }
        }, {
          start: {
            line: 144,
            column: 23
          },
          end: {
            line: 147,
            column: 17
          }
        }],
        line: 107
      },
      "12": {
        loc: {
          start: {
            line: 115,
            column: 24
          },
          end: {
            line: 127,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 24
          },
          end: {
            line: 127,
            column: 25
          }
        }, {
          start: {
            line: 121,
            column: 31
          },
          end: {
            line: 127,
            column: 25
          }
        }],
        line: 115
      },
      "13": {
        loc: {
          start: {
            line: 133,
            column: 24
          },
          end: {
            line: 141,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 24
          },
          end: {
            line: 141,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "14": {
        loc: {
          start: {
            line: 133,
            column: 30
          },
          end: {
            line: 133,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 30
          },
          end: {
            line: 133,
            column: 70
          }
        }, {
          start: {
            line: 133,
            column: 74
          },
          end: {
            line: 133,
            column: 105
          }
        }],
        line: 133
      },
      "15": {
        loc: {
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "16": {
        loc: {
          start: {
            line: 182,
            column: 43
          },
          end: {
            line: 182,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 182,
            column: 43
          },
          end: {
            line: 182,
            column: 72
          }
        }, {
          start: {
            line: 182,
            column: 76
          },
          end: {
            line: 182,
            column: 89
          }
        }],
        line: 182
      },
      "17": {
        loc: {
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 212,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 212,
            column: 53
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "18": {
        loc: {
          start: {
            line: 212,
            column: 12
          },
          end: {
            line: 212,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 12
          },
          end: {
            line: 212,
            column: 17
          }
        }, {
          start: {
            line: 212,
            column: 21
          },
          end: {
            line: 212,
            column: 38
          }
        }],
        line: 212
      },
      "19": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 217,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 217,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "20": {
        loc: {
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 217,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 217,
            column: 17
          }
        }, {
          start: {
            line: 217,
            column: 21
          },
          end: {
            line: 217,
            column: 38
          }
        }],
        line: 217
      },
      "21": {
        loc: {
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 226,
            column: 71
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 226,
            column: 71
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "22": {
        loc: {
          start: {
            line: 245,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/hooks/useAuth.tsx"],
      sourcesContent: ["'use client';\n\nimport { createContext, useContext, useState, useEffect, useCallback, ReactNode } from 'react';\nimport axios from 'axios';\nimport { useRouter } from 'next/navigation';\n\n// Types\ninterface User {\n    id: number;\n    username: string;\n    fullName: string;\n    email: string;\n    roleId: number;\n    roleName: string;\n    shopId?: number;\n    permissions: string[];\n}\n\ninterface AuthContextType {\n    user: User | null;\n    accessToken: string | null;\n    isLoading: boolean;\n    isAuthenticated: boolean;\n    login: (email: string, password: string) => Promise<boolean>;\n    logout: () => Promise<void>;\n    hasPermission: (permission: string) => boolean;\n    getUserPermissions: () => string[];\n}\n\n// Create context\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Create axios instance with interceptors\nconst api = axios.create({\n    baseURL: '/',\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n// Provider component\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n    const [user, setUser] = useState<User | null>(null);\n    const [accessToken, setAccessToken] = useState<string | null>(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const router = useRouter();\n\n    // Setup axios interceptors for token refresh\n    useEffect(() => {\n        const requestInterceptor = api.interceptors.request.use(\n            (config) => {\n                const currentToken = accessToken || localStorage.getItem('accessToken') || localStorage.getItem('authToken');\n                if (currentToken) {\n                    config.headers.Authorization = `Bearer ${currentToken}`;\n                }\n                // CSRF token logic remains unchanged\n                const csrfToken = getCookie('csrfToken');\n                if (csrfToken && config.method !== 'get' && config.method !== 'head') { // Ensure method check is robust\n                    config.headers['X-CSRF-Token'] = csrfToken;\n                }\n                return config;\n            },\n            (error) => Promise.reject(error)\n        );\n\n        const responseInterceptor = api.interceptors.response.use(\n            (response) => response,\n            async (error) => {\n                const originalRequest = error.config;\n                if ((error.response?.status === 401) && !originalRequest._retry) { // Only retry on 401 for token refresh\n                    originalRequest._retry = true;\n                    try {\n                        console.log('Access Token expired or invalid, attempting to refresh via /api/auth/refresh...');\n                        // Send an empty object or no body. Relies on httpOnly refreshToken cookie.\n                        const refreshResponse = await axios.post('/api/auth/refresh', {}, {\n                            withCredentials: true\n                        });\n\n                        if (refreshResponse.data.success) {\n                            const newAccessToken = refreshResponse.data.accessToken;\n                            setUser(refreshResponse.data.user);\n                            setAccessToken(newAccessToken);\n                            localStorage.setItem('accessToken', newAccessToken);\n                            localStorage.setItem('authToken', newAccessToken); // Keep for compatibility if still used\n\n                            console.log('Token refreshed successfully. New accessToken:', newAccessToken.substring(0, 10) + '...');\n                            originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;\n                            return api(originalRequest);\n                        } else {\n                            console.error('Token refresh explicitly failed by API:', refreshResponse.data.message);\n                            await logout(); // Logout if refresh attempt itself fails\n                            return Promise.reject(error); // Reject with original error\n                        }\n                    } catch (refreshError: any) {\n                        console.error('Full error during token refresh attempt:', refreshError);\n                        if (refreshError.response) {\n                            console.error('Refresh attempt failed with status:', refreshError.response.status, 'data:', refreshError.response.data);\n                        }\n                        await logout(); // Logout on any error during refresh process\n                        return Promise.reject(refreshError); // Reject with refresh error\n                    }\n                }\n                return Promise.reject(error);\n            }\n        );\n\n        return () => {\n            api.interceptors.request.eject(requestInterceptor);\n            api.interceptors.response.eject(responseInterceptor);\n        };\n    }, [accessToken]); // Added accessToken to dependency array\n\n    useEffect(() => {\n        const validateAuth = async () => {\n            setIsLoading(true);\n            try {\n                const storedAccessToken = localStorage.getItem('accessToken') || localStorage.getItem('authToken');\n\n                if (storedAccessToken) {\n                    console.log('Found stored accessToken, validating with /api/auth/validate...');\n                    try {\n                        const response = await api.get('/api/auth/validate', {\n                            headers: { Authorization: `Bearer ${storedAccessToken}` },\n                        });\n                        if (response.data.success) {\n                            setUser(response.data.user);\n                            setAccessToken(storedAccessToken); // Keep current token if still valid\n                            // The /api/auth/validate does not return a token, it validates the existing one.\n                            // No need to set localStorage items here again if they were already set.\n                            console.log('Stored accessToken is valid.');\n                        } else {\n                            // This case should ideally be handled by the 401 response from /validate directly\n                            console.warn('/api/auth/validate returned success:false, but not an error status. This is unusual.');\n                            // Attempt refresh if validate says not success but didn't error with 401\n                            // This scenario might indicate a valid token but inactive user, etc. which validate handles.\n                            // For now, let the interceptor handle 401s if validate actually throws one.\n                        }\n                    } catch (validationError: any) {\n                        console.log('Initial /api/auth/validate call failed. Error status:', validationError?.response?.status);\n                        // If validation fails (e.g. 401), the response interceptor will try to refresh.\n                        // If refresh also fails, user will be logged out by interceptor.\n                        // No need to explicitly call refresh here if interceptor handles it.\n                        if (!(validationError.response?.status === 401 && !validationError.config?._retry)) {\n                            // If it's not a 401 that the interceptor will handle, or if it's already a retry, clear auth.\n                            // This might happen if /validate returns e.g. 500, or if it was a 401 and refresh already failed.\n                            console.log('Clearing auth state due to unhandled validation error or failed refresh.');\n                            setUser(null);\n                            setAccessToken(null);\n                            localStorage.removeItem('accessToken');\n                            localStorage.removeItem('authToken');\n                        }\n                        // The error will be re-thrown or handled by the interceptor trying to refresh\n                    }\n                } else {\n                    console.log('No stored accessToken found.');\n                    // No token, user is not logged in\n                }\n            } catch (error) {\n                // Catch-all for unexpected errors during initial auth validation phase\n                console.error('Unexpected error in validateAuth:', error);\n                setUser(null);\n                setAccessToken(null);\n                localStorage.removeItem('accessToken');\n                localStorage.removeItem('authToken');\n            } finally {\n                setIsLoading(false);\n            }\n        };\n        validateAuth();\n    }, [logout]); // Include logout in dependencies\n\n    const login = async (email: string, password: string): Promise<boolean> => {\n        setIsLoading(true);\n        try {\n            const response = await axios.post('/api/auth/login', { email, password });\n            if (response.data.success) {\n                const { accessToken: newAccessToken, user: userData } = response.data;\n                setUser(userData);\n                setAccessToken(newAccessToken);\n                localStorage.setItem('accessToken', newAccessToken);\n                localStorage.setItem('authToken', newAccessToken); // for compatibility\n\n                // The refreshToken should have been set as an httpOnly cookie by the /api/auth/login endpoint\n                console.log('Login successful. AccessToken set. RefreshToken should be in httpOnly cookie.');\n                setIsLoading(false);\n                return true;\n            }\n        } catch (error: any) {\n            console.error('Login failed:', error.response?.data?.message || error.message);\n        }\n        setIsLoading(false);\n        setUser(null);\n        setAccessToken(null);\n        localStorage.removeItem('accessToken');\n        localStorage.removeItem('authToken');\n        return false;\n    };\n\n    const logout = useCallback(async (): Promise<void> => {\n        setIsLoading(true);\n        setUser(null);\n        setAccessToken(null);\n        localStorage.removeItem('accessToken');\n        localStorage.removeItem('authToken');\n        try {\n            // Call the backend to invalidate the refresh token and clear cookies\n            await api.post('/api/auth/logout');\n            console.log('Logout successful, server-side session cleared.');\n        } catch (error) {\n            console.error('Logout API call failed:', error);\n            // Still clear client-side, even if server call fails\n        }\n        router.push('/login'); // Redirect to login page\n        setIsLoading(false);\n    }, [router]);\n\n    // Check if user has a specific permission\n    const hasPermission = (permission: string): boolean => {\n        if (!user || !user.permissions) return false;\n        return user.permissions.includes(permission);\n    };\n\n    // Get all user permissions\n    const getUserPermissions = (): string[] => {\n        if (!user || !user.permissions) return [];\n        return [...user.permissions];\n    };\n\n    // Helper function to get cookie value\n    const getCookie = (name: string): string | undefined => {\n        const value = `; ${document.cookie}`;\n        const parts = value.split(`; ${name}=`);\n        if (parts.length === 2) return parts.pop()?.split(';').shift();\n        return undefined;\n    };\n\n    return (\n        <AuthContext.Provider\n            value={{\n                user,\n                accessToken,\n                isLoading,\n                isAuthenticated: !!user,\n                login,\n                logout,\n                hasPermission,\n                getUserPermissions,\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\n// Hook for using the auth context\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (context === undefined) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n};\n\n// Export the axios instance for reuse\nexport { api };"],
      names: ["AuthProvider", "api", "useAuth", "AuthContext", "createContext", "undefined", "axios", "create", "baseURL", "headers", "children", "user", "setUser", "useState", "accessToken", "setAccessToken", "isLoading", "setIsLoading", "router", "useRouter", "useEffect", "requestInterceptor", "interceptors", "request", "use", "config", "currentToken", "localStorage", "getItem", "Authorization", "csrfToken", "getCookie", "method", "error", "Promise", "reject", "responseInterceptor", "response", "originalRequest", "status", "_retry", "console", "log", "refreshResponse", "post", "withCredentials", "data", "success", "newAccessToken", "setItem", "substring", "message", "logout", "refreshError", "eject", "validateAuth", "storedAccessToken", "get", "warn", "validationError", "removeItem", "login", "email", "password", "userData", "useCallback", "push", "hasPermission", "permission", "permissions", "includes", "getUserPermissions", "name", "value", "document", "cookie", "parts", "split", "length", "pop", "shift", "Provider", "isAuthenticated", "context", "useContext", "Error"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7e3daffb9ea375e17116474a09e41b66551ad557"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2nnkk9tup4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2nnkk9tup4();
cov_2nnkk9tup4().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2nnkk9tup4().f[0]++;
  cov_2nnkk9tup4().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2nnkk9tup4().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2nnkk9tup4().s[3]++;
_export(exports, {
  AuthProvider: function () {
    /* istanbul ignore next */
    cov_2nnkk9tup4().f[1]++;
    cov_2nnkk9tup4().s[4]++;
    return AuthProvider;
  },
  api: function () {
    /* istanbul ignore next */
    cov_2nnkk9tup4().f[2]++;
    cov_2nnkk9tup4().s[5]++;
    return api;
  },
  useAuth: function () {
    /* istanbul ignore next */
    cov_2nnkk9tup4().f[3]++;
    cov_2nnkk9tup4().s[6]++;
    return useAuth;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2nnkk9tup4().s[7]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_2nnkk9tup4().s[8]++, require("react"));
const _axios =
/* istanbul ignore next */
(/*#__PURE__*/cov_2nnkk9tup4().s[9]++, _interop_require_default(require("axios")));
const _navigation =
/* istanbul ignore next */
(cov_2nnkk9tup4().s[10]++, require("next/navigation"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2nnkk9tup4().f[4]++;
  cov_2nnkk9tup4().s[11]++;
  return /* istanbul ignore next */(cov_2nnkk9tup4().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2nnkk9tup4().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2nnkk9tup4().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2nnkk9tup4().b[0][1]++, {
    default: obj
  });
}
// Create context
const AuthContext =
/* istanbul ignore next */
(/*#__PURE__*/cov_2nnkk9tup4().s[12]++, (0, _react.createContext)(undefined));
// Create axios instance with interceptors
const api =
/* istanbul ignore next */
(cov_2nnkk9tup4().s[13]++, _axios.default.create({
  baseURL: "/",
  headers: {
    "Content-Type": "application/json"
  }
}));
/* istanbul ignore next */
cov_2nnkk9tup4().s[14]++;
const AuthProvider = ({
  children
}) => {
  /* istanbul ignore next */
  cov_2nnkk9tup4().f[5]++;
  const [user, setUser] =
  /* istanbul ignore next */
  (cov_2nnkk9tup4().s[15]++, (0, _react.useState)(null));
  const [accessToken, setAccessToken] =
  /* istanbul ignore next */
  (cov_2nnkk9tup4().s[16]++, (0, _react.useState)(null));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_2nnkk9tup4().s[17]++, (0, _react.useState)(true));
  const router =
  /* istanbul ignore next */
  (cov_2nnkk9tup4().s[18]++, (0, _navigation.useRouter)());
  // Setup axios interceptors for token refresh
  /* istanbul ignore next */
  cov_2nnkk9tup4().s[19]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2nnkk9tup4().f[6]++;
    const requestInterceptor =
    /* istanbul ignore next */
    (cov_2nnkk9tup4().s[20]++, api.interceptors.request.use(config => {
      /* istanbul ignore next */
      cov_2nnkk9tup4().f[7]++;
      const currentToken =
      /* istanbul ignore next */
      (cov_2nnkk9tup4().s[21]++,
      /* istanbul ignore next */
      (cov_2nnkk9tup4().b[2][0]++, accessToken) ||
      /* istanbul ignore next */
      (cov_2nnkk9tup4().b[2][1]++, localStorage.getItem("accessToken")) ||
      /* istanbul ignore next */
      (cov_2nnkk9tup4().b[2][2]++, localStorage.getItem("authToken")));
      /* istanbul ignore next */
      cov_2nnkk9tup4().s[22]++;
      if (currentToken) {
        /* istanbul ignore next */
        cov_2nnkk9tup4().b[3][0]++;
        cov_2nnkk9tup4().s[23]++;
        config.headers.Authorization = `Bearer ${currentToken}`;
      } else
      /* istanbul ignore next */
      {
        cov_2nnkk9tup4().b[3][1]++;
      }
      // CSRF token logic remains unchanged
      const csrfToken =
      /* istanbul ignore next */
      (cov_2nnkk9tup4().s[24]++, getCookie("csrfToken"));
      /* istanbul ignore next */
      cov_2nnkk9tup4().s[25]++;
      if (
      /* istanbul ignore next */
      (cov_2nnkk9tup4().b[5][0]++, csrfToken) &&
      /* istanbul ignore next */
      (cov_2nnkk9tup4().b[5][1]++, config.method !== "get") &&
      /* istanbul ignore next */
      (cov_2nnkk9tup4().b[5][2]++, config.method !== "head")) {
        /* istanbul ignore next */
        cov_2nnkk9tup4().b[4][0]++;
        cov_2nnkk9tup4().s[26]++;
        config.headers["X-CSRF-Token"] = csrfToken;
      } else
      /* istanbul ignore next */
      {
        cov_2nnkk9tup4().b[4][1]++;
      }
      cov_2nnkk9tup4().s[27]++;
      return config;
    }, error => {
      /* istanbul ignore next */
      cov_2nnkk9tup4().f[8]++;
      cov_2nnkk9tup4().s[28]++;
      return Promise.reject(error);
    }));
    const responseInterceptor =
    /* istanbul ignore next */
    (cov_2nnkk9tup4().s[29]++, api.interceptors.response.use(response => {
      /* istanbul ignore next */
      cov_2nnkk9tup4().f[9]++;
      cov_2nnkk9tup4().s[30]++;
      return response;
    }, async error => {
      /* istanbul ignore next */
      cov_2nnkk9tup4().f[10]++;
      const originalRequest =
      /* istanbul ignore next */
      (cov_2nnkk9tup4().s[31]++, error.config);
      /* istanbul ignore next */
      cov_2nnkk9tup4().s[32]++;
      if (
      /* istanbul ignore next */
      (cov_2nnkk9tup4().b[7][0]++, error.response?.status === 401) &&
      /* istanbul ignore next */
      (cov_2nnkk9tup4().b[7][1]++, !originalRequest._retry)) {
        /* istanbul ignore next */
        cov_2nnkk9tup4().b[6][0]++;
        cov_2nnkk9tup4().s[33]++;
        originalRequest._retry = true;
        /* istanbul ignore next */
        cov_2nnkk9tup4().s[34]++;
        try {
          /* istanbul ignore next */
          cov_2nnkk9tup4().s[35]++;
          console.log("Access Token expired or invalid, attempting to refresh via /api/auth/refresh...");
          // Send an empty object or no body. Relies on httpOnly refreshToken cookie.
          const refreshResponse =
          /* istanbul ignore next */
          (cov_2nnkk9tup4().s[36]++, await _axios.default.post("/api/auth/refresh", {}, {
            withCredentials: true
          }));
          /* istanbul ignore next */
          cov_2nnkk9tup4().s[37]++;
          if (refreshResponse.data.success) {
            /* istanbul ignore next */
            cov_2nnkk9tup4().b[8][0]++;
            const newAccessToken =
            /* istanbul ignore next */
            (cov_2nnkk9tup4().s[38]++, refreshResponse.data.accessToken);
            /* istanbul ignore next */
            cov_2nnkk9tup4().s[39]++;
            setUser(refreshResponse.data.user);
            /* istanbul ignore next */
            cov_2nnkk9tup4().s[40]++;
            setAccessToken(newAccessToken);
            /* istanbul ignore next */
            cov_2nnkk9tup4().s[41]++;
            localStorage.setItem("accessToken", newAccessToken);
            /* istanbul ignore next */
            cov_2nnkk9tup4().s[42]++;
            localStorage.setItem("authToken", newAccessToken); // Keep for compatibility if still used
            /* istanbul ignore next */
            cov_2nnkk9tup4().s[43]++;
            console.log("Token refreshed successfully. New accessToken:", newAccessToken.substring(0, 10) + "...");
            /* istanbul ignore next */
            cov_2nnkk9tup4().s[44]++;
            originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;
            /* istanbul ignore next */
            cov_2nnkk9tup4().s[45]++;
            return api(originalRequest);
          } else {
            /* istanbul ignore next */
            cov_2nnkk9tup4().b[8][1]++;
            cov_2nnkk9tup4().s[46]++;
            console.error("Token refresh explicitly failed by API:", refreshResponse.data.message);
            /* istanbul ignore next */
            cov_2nnkk9tup4().s[47]++;
            await logout(); // Logout if refresh attempt itself fails
            /* istanbul ignore next */
            cov_2nnkk9tup4().s[48]++;
            return Promise.reject(error); // Reject with original error
          }
        } catch (refreshError) {
          /* istanbul ignore next */
          cov_2nnkk9tup4().s[49]++;
          console.error("Full error during token refresh attempt:", refreshError);
          /* istanbul ignore next */
          cov_2nnkk9tup4().s[50]++;
          if (refreshError.response) {
            /* istanbul ignore next */
            cov_2nnkk9tup4().b[9][0]++;
            cov_2nnkk9tup4().s[51]++;
            console.error("Refresh attempt failed with status:", refreshError.response.status, "data:", refreshError.response.data);
          } else
          /* istanbul ignore next */
          {
            cov_2nnkk9tup4().b[9][1]++;
          }
          cov_2nnkk9tup4().s[52]++;
          await logout(); // Logout on any error during refresh process
          /* istanbul ignore next */
          cov_2nnkk9tup4().s[53]++;
          return Promise.reject(refreshError); // Reject with refresh error
        }
      } else
      /* istanbul ignore next */
      {
        cov_2nnkk9tup4().b[6][1]++;
      }
      cov_2nnkk9tup4().s[54]++;
      return Promise.reject(error);
    }));
    /* istanbul ignore next */
    cov_2nnkk9tup4().s[55]++;
    return () => {
      /* istanbul ignore next */
      cov_2nnkk9tup4().f[11]++;
      cov_2nnkk9tup4().s[56]++;
      api.interceptors.request.eject(requestInterceptor);
      /* istanbul ignore next */
      cov_2nnkk9tup4().s[57]++;
      api.interceptors.response.eject(responseInterceptor);
    };
  }, [accessToken]); // Added accessToken to dependency array
  /* istanbul ignore next */
  cov_2nnkk9tup4().s[58]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2nnkk9tup4().f[12]++;
    cov_2nnkk9tup4().s[59]++;
    const validateAuth = async () => {
      /* istanbul ignore next */
      cov_2nnkk9tup4().f[13]++;
      cov_2nnkk9tup4().s[60]++;
      setIsLoading(true);
      /* istanbul ignore next */
      cov_2nnkk9tup4().s[61]++;
      try {
        const storedAccessToken =
        /* istanbul ignore next */
        (cov_2nnkk9tup4().s[62]++,
        /* istanbul ignore next */
        (cov_2nnkk9tup4().b[10][0]++, localStorage.getItem("accessToken")) ||
        /* istanbul ignore next */
        (cov_2nnkk9tup4().b[10][1]++, localStorage.getItem("authToken")));
        /* istanbul ignore next */
        cov_2nnkk9tup4().s[63]++;
        if (storedAccessToken) {
          /* istanbul ignore next */
          cov_2nnkk9tup4().b[11][0]++;
          cov_2nnkk9tup4().s[64]++;
          console.log("Found stored accessToken, validating with /api/auth/validate...");
          /* istanbul ignore next */
          cov_2nnkk9tup4().s[65]++;
          try {
            const response =
            /* istanbul ignore next */
            (cov_2nnkk9tup4().s[66]++, await api.get("/api/auth/validate", {
              headers: {
                Authorization: `Bearer ${storedAccessToken}`
              }
            }));
            /* istanbul ignore next */
            cov_2nnkk9tup4().s[67]++;
            if (response.data.success) {
              /* istanbul ignore next */
              cov_2nnkk9tup4().b[12][0]++;
              cov_2nnkk9tup4().s[68]++;
              setUser(response.data.user);
              /* istanbul ignore next */
              cov_2nnkk9tup4().s[69]++;
              setAccessToken(storedAccessToken); // Keep current token if still valid
              // The /api/auth/validate does not return a token, it validates the existing one.
              // No need to set localStorage items here again if they were already set.
              /* istanbul ignore next */
              cov_2nnkk9tup4().s[70]++;
              console.log("Stored accessToken is valid.");
            } else {
              /* istanbul ignore next */
              cov_2nnkk9tup4().b[12][1]++;
              cov_2nnkk9tup4().s[71]++;
              // This case should ideally be handled by the 401 response from /validate directly
              console.warn("/api/auth/validate returned success:false, but not an error status. This is unusual.");
              // Attempt refresh if validate says not success but didn't error with 401
              // This scenario might indicate a valid token but inactive user, etc. which validate handles.
              // For now, let the interceptor handle 401s if validate actually throws one.
            }
          } catch (validationError) {
            /* istanbul ignore next */
            cov_2nnkk9tup4().s[72]++;
            console.log("Initial /api/auth/validate call failed. Error status:", validationError?.response?.status);
            // If validation fails (e.g. 401), the response interceptor will try to refresh.
            // If refresh also fails, user will be logged out by interceptor.
            // No need to explicitly call refresh here if interceptor handles it.
            /* istanbul ignore next */
            cov_2nnkk9tup4().s[73]++;
            if (!(
            /* istanbul ignore next */
            (cov_2nnkk9tup4().b[14][0]++, validationError.response?.status === 401) &&
            /* istanbul ignore next */
            (cov_2nnkk9tup4().b[14][1]++, !validationError.config?._retry))) {
              /* istanbul ignore next */
              cov_2nnkk9tup4().b[13][0]++;
              cov_2nnkk9tup4().s[74]++;
              // If it's not a 401 that the interceptor will handle, or if it's already a retry, clear auth.
              // This might happen if /validate returns e.g. 500, or if it was a 401 and refresh already failed.
              console.log("Clearing auth state due to unhandled validation error or failed refresh.");
              /* istanbul ignore next */
              cov_2nnkk9tup4().s[75]++;
              setUser(null);
              /* istanbul ignore next */
              cov_2nnkk9tup4().s[76]++;
              setAccessToken(null);
              /* istanbul ignore next */
              cov_2nnkk9tup4().s[77]++;
              localStorage.removeItem("accessToken");
              /* istanbul ignore next */
              cov_2nnkk9tup4().s[78]++;
              localStorage.removeItem("authToken");
            } else
            /* istanbul ignore next */
            {
              cov_2nnkk9tup4().b[13][1]++;
            }
            // The error will be re-thrown or handled by the interceptor trying to refresh
          }
        } else {
          /* istanbul ignore next */
          cov_2nnkk9tup4().b[11][1]++;
          cov_2nnkk9tup4().s[79]++;
          console.log("No stored accessToken found.");
          // No token, user is not logged in
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2nnkk9tup4().s[80]++;
        // Catch-all for unexpected errors during initial auth validation phase
        console.error("Unexpected error in validateAuth:", error);
        /* istanbul ignore next */
        cov_2nnkk9tup4().s[81]++;
        setUser(null);
        /* istanbul ignore next */
        cov_2nnkk9tup4().s[82]++;
        setAccessToken(null);
        /* istanbul ignore next */
        cov_2nnkk9tup4().s[83]++;
        localStorage.removeItem("accessToken");
        /* istanbul ignore next */
        cov_2nnkk9tup4().s[84]++;
        localStorage.removeItem("authToken");
      } finally {
        /* istanbul ignore next */
        cov_2nnkk9tup4().s[85]++;
        setIsLoading(false);
      }
    };
    /* istanbul ignore next */
    cov_2nnkk9tup4().s[86]++;
    validateAuth();
  }, [logout]); // Include logout in dependencies
  /* istanbul ignore next */
  cov_2nnkk9tup4().s[87]++;
  const login = async (email, password) => {
    /* istanbul ignore next */
    cov_2nnkk9tup4().f[14]++;
    cov_2nnkk9tup4().s[88]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_2nnkk9tup4().s[89]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2nnkk9tup4().s[90]++, await _axios.default.post("/api/auth/login", {
        email,
        password
      }));
      /* istanbul ignore next */
      cov_2nnkk9tup4().s[91]++;
      if (response.data.success) {
        /* istanbul ignore next */
        cov_2nnkk9tup4().b[15][0]++;
        const {
          accessToken: newAccessToken,
          user: userData
        } =
        /* istanbul ignore next */
        (cov_2nnkk9tup4().s[92]++, response.data);
        /* istanbul ignore next */
        cov_2nnkk9tup4().s[93]++;
        setUser(userData);
        /* istanbul ignore next */
        cov_2nnkk9tup4().s[94]++;
        setAccessToken(newAccessToken);
        /* istanbul ignore next */
        cov_2nnkk9tup4().s[95]++;
        localStorage.setItem("accessToken", newAccessToken);
        /* istanbul ignore next */
        cov_2nnkk9tup4().s[96]++;
        localStorage.setItem("authToken", newAccessToken); // for compatibility
        // The refreshToken should have been set as an httpOnly cookie by the /api/auth/login endpoint
        /* istanbul ignore next */
        cov_2nnkk9tup4().s[97]++;
        console.log("Login successful. AccessToken set. RefreshToken should be in httpOnly cookie.");
        /* istanbul ignore next */
        cov_2nnkk9tup4().s[98]++;
        setIsLoading(false);
        /* istanbul ignore next */
        cov_2nnkk9tup4().s[99]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_2nnkk9tup4().b[15][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2nnkk9tup4().s[100]++;
      console.error("Login failed:",
      /* istanbul ignore next */
      (cov_2nnkk9tup4().b[16][0]++, error.response?.data?.message) ||
      /* istanbul ignore next */
      (cov_2nnkk9tup4().b[16][1]++, error.message));
    }
    /* istanbul ignore next */
    cov_2nnkk9tup4().s[101]++;
    setIsLoading(false);
    /* istanbul ignore next */
    cov_2nnkk9tup4().s[102]++;
    setUser(null);
    /* istanbul ignore next */
    cov_2nnkk9tup4().s[103]++;
    setAccessToken(null);
    /* istanbul ignore next */
    cov_2nnkk9tup4().s[104]++;
    localStorage.removeItem("accessToken");
    /* istanbul ignore next */
    cov_2nnkk9tup4().s[105]++;
    localStorage.removeItem("authToken");
    /* istanbul ignore next */
    cov_2nnkk9tup4().s[106]++;
    return false;
  };
  const logout =
  /* istanbul ignore next */
  (cov_2nnkk9tup4().s[107]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_2nnkk9tup4().f[15]++;
    cov_2nnkk9tup4().s[108]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_2nnkk9tup4().s[109]++;
    setUser(null);
    /* istanbul ignore next */
    cov_2nnkk9tup4().s[110]++;
    setAccessToken(null);
    /* istanbul ignore next */
    cov_2nnkk9tup4().s[111]++;
    localStorage.removeItem("accessToken");
    /* istanbul ignore next */
    cov_2nnkk9tup4().s[112]++;
    localStorage.removeItem("authToken");
    /* istanbul ignore next */
    cov_2nnkk9tup4().s[113]++;
    try {
      /* istanbul ignore next */
      cov_2nnkk9tup4().s[114]++;
      // Call the backend to invalidate the refresh token and clear cookies
      await api.post("/api/auth/logout");
      /* istanbul ignore next */
      cov_2nnkk9tup4().s[115]++;
      console.log("Logout successful, server-side session cleared.");
    } catch (error) {
      /* istanbul ignore next */
      cov_2nnkk9tup4().s[116]++;
      console.error("Logout API call failed:", error);
      // Still clear client-side, even if server call fails
    }
    /* istanbul ignore next */
    cov_2nnkk9tup4().s[117]++;
    router.push("/login"); // Redirect to login page
    /* istanbul ignore next */
    cov_2nnkk9tup4().s[118]++;
    setIsLoading(false);
  }, [router]));
  // Check if user has a specific permission
  /* istanbul ignore next */
  cov_2nnkk9tup4().s[119]++;
  const hasPermission = permission => {
    /* istanbul ignore next */
    cov_2nnkk9tup4().f[16]++;
    cov_2nnkk9tup4().s[120]++;
    if (
    /* istanbul ignore next */
    (cov_2nnkk9tup4().b[18][0]++, !user) ||
    /* istanbul ignore next */
    (cov_2nnkk9tup4().b[18][1]++, !user.permissions)) {
      /* istanbul ignore next */
      cov_2nnkk9tup4().b[17][0]++;
      cov_2nnkk9tup4().s[121]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2nnkk9tup4().b[17][1]++;
    }
    cov_2nnkk9tup4().s[122]++;
    return user.permissions.includes(permission);
  };
  // Get all user permissions
  /* istanbul ignore next */
  cov_2nnkk9tup4().s[123]++;
  const getUserPermissions = () => {
    /* istanbul ignore next */
    cov_2nnkk9tup4().f[17]++;
    cov_2nnkk9tup4().s[124]++;
    if (
    /* istanbul ignore next */
    (cov_2nnkk9tup4().b[20][0]++, !user) ||
    /* istanbul ignore next */
    (cov_2nnkk9tup4().b[20][1]++, !user.permissions)) {
      /* istanbul ignore next */
      cov_2nnkk9tup4().b[19][0]++;
      cov_2nnkk9tup4().s[125]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_2nnkk9tup4().b[19][1]++;
    }
    cov_2nnkk9tup4().s[126]++;
    return [...user.permissions];
  };
  // Helper function to get cookie value
  /* istanbul ignore next */
  cov_2nnkk9tup4().s[127]++;
  const getCookie = name => {
    /* istanbul ignore next */
    cov_2nnkk9tup4().f[18]++;
    const value =
    /* istanbul ignore next */
    (cov_2nnkk9tup4().s[128]++, `; ${document.cookie}`);
    const parts =
    /* istanbul ignore next */
    (cov_2nnkk9tup4().s[129]++, value.split(`; ${name}=`));
    /* istanbul ignore next */
    cov_2nnkk9tup4().s[130]++;
    if (parts.length === 2) {
      /* istanbul ignore next */
      cov_2nnkk9tup4().b[21][0]++;
      cov_2nnkk9tup4().s[131]++;
      return parts.pop()?.split(";").shift();
    } else
    /* istanbul ignore next */
    {
      cov_2nnkk9tup4().b[21][1]++;
    }
    cov_2nnkk9tup4().s[132]++;
    return undefined;
  };
  /* istanbul ignore next */
  cov_2nnkk9tup4().s[133]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(AuthContext.Provider, {
    value: {
      user,
      accessToken,
      isLoading,
      isAuthenticated: !!user,
      login,
      logout,
      hasPermission,
      getUserPermissions
    },
    children: children
  });
};
/* istanbul ignore next */
cov_2nnkk9tup4().s[134]++;
const useAuth = () => {
  /* istanbul ignore next */
  cov_2nnkk9tup4().f[19]++;
  const context =
  /* istanbul ignore next */
  (cov_2nnkk9tup4().s[135]++, (0, _react.useContext)(AuthContext));
  /* istanbul ignore next */
  cov_2nnkk9tup4().s[136]++;
  if (context === undefined) {
    /* istanbul ignore next */
    cov_2nnkk9tup4().b[22][0]++;
    cov_2nnkk9tup4().s[137]++;
    throw new Error("useAuth must be used within an AuthProvider");
  } else
  /* istanbul ignore next */
  {
    cov_2nnkk9tup4().b[22][1]++;
  }
  cov_2nnkk9tup4().s[138]++;
  return context;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,