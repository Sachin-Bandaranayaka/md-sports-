{"version":3,"names":["OptimizedImage","cov_29bptdcpqy","f","s","default","_default","generateBlurDataURL","src","alt","width","height","className","b","priority","quality","placeholder","blurDataURL","sizes","loading","onLoad","onError","isLoaded","setIsLoaded","_react","useState","hasError","setHasError","imgRef","useRef","isInView","setIsInView","useEffect","observer","IntersectionObserver","entry","isIntersecting","disconnect","rootMargin","threshold","current","observe","getOptimizedSrc","originalSrc","startsWith","handleLoad","handleError","_jsxruntime","jsx","style","ref","jsxs","_image","canvas","document","createElement","ctx","getContext","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","toDataURL"],"sources":["/Users/sachin/Documents/md-sports-/src/components/ui/optimized-image.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport Image from 'next/image';\n\ninterface OptimizedImageProps {\n  src: string;\n  alt: string;\n  width?: number;\n  height?: number;\n  className?: string;\n  priority?: boolean;\n  quality?: number;\n  placeholder?: 'blur' | 'empty';\n  blurDataURL?: string;\n  sizes?: string;\n  loading?: 'lazy' | 'eager';\n  onLoad?: () => void;\n  onError?: () => void;\n}\n\nexport const OptimizedImage: React.FC<OptimizedImageProps> = ({\n  src,\n  alt,\n  width,\n  height,\n  className = '',\n  priority = false,\n  quality = 75,\n  placeholder = 'empty',\n  blurDataURL,\n  sizes,\n  loading = 'lazy',\n  onLoad,\n  onError,\n}) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const imgRef = useRef<HTMLImageElement>(null);\n  const [isInView, setIsInView] = useState(priority);\n\n  // Intersection Observer for lazy loading\n  useEffect(() => {\n    if (priority || isInView) return;\n\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsInView(true);\n          observer.disconnect();\n        }\n      },\n      {\n        rootMargin: '50px',\n        threshold: 0.1,\n      }\n    );\n\n    if (imgRef.current) {\n      observer.observe(imgRef.current);\n    }\n\n    return () => observer.disconnect();\n  }, [priority, isInView]);\n\n  // Generate optimized src with WebP support\n  const getOptimizedSrc = (originalSrc: string) => {\n    // If it's already a Next.js optimized image or external URL, return as-is\n    if (originalSrc.startsWith('/_next/') || originalSrc.startsWith('http')) {\n      return originalSrc;\n    }\n    \n    // For local images, ensure they go through Next.js optimization\n    return originalSrc.startsWith('/') ? originalSrc : `/${originalSrc}`;\n  };\n\n  const handleLoad = () => {\n    setIsLoaded(true);\n    onLoad?.();\n  };\n\n  const handleError = () => {\n    setHasError(true);\n    onError?.();\n  };\n\n  // Fallback for broken images\n  if (hasError) {\n    return (\n      <div \n        className={`bg-gray-200 flex items-center justify-center text-gray-400 text-sm ${className}`}\n        style={{ width, height }}\n      >\n        Image not found\n      </div>\n    );\n  }\n\n  // Placeholder while not in view (for lazy loading)\n  if (!isInView && !priority) {\n    return (\n      <div \n        ref={imgRef}\n        className={`bg-gray-100 animate-pulse ${className}`}\n        style={{ width, height }}\n      />\n    );\n  }\n\n  return (\n    <div className={`relative overflow-hidden ${className}`}>\n      <Image\n        src={getOptimizedSrc(src)}\n        alt={alt}\n        width={width}\n        height={height}\n        priority={priority}\n        quality={quality}\n        placeholder={placeholder}\n        blurDataURL={blurDataURL}\n        sizes={sizes}\n        loading={loading}\n        onLoad={handleLoad}\n        onError={handleError}\n        className={`transition-opacity duration-300 ${\n          isLoaded ? 'opacity-100' : 'opacity-0'\n        }`}\n        style={{\n          width: width ? `${width}px` : 'auto',\n          height: height ? `${height}px` : 'auto',\n        }}\n      />\n      \n      {/* Loading overlay */}\n      {!isLoaded && (\n        <div className=\"absolute inset-0 bg-gray-100 animate-pulse flex items-center justify-center\">\n          <div className=\"w-6 h-6 border-2 border-gray-300 border-t-blue-500 rounded-full animate-spin\"></div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Utility function to generate blur data URL for placeholder\nexport const generateBlurDataURL = (width: number = 10, height: number = 10): string => {\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n  \n  if (ctx) {\n    // Create a simple gradient for blur effect\n    const gradient = ctx.createLinearGradient(0, 0, width, height);\n    gradient.addColorStop(0, '#f3f4f6');\n    gradient.addColorStop(1, '#e5e7eb');\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, width, height);\n  }\n  \n  return canvas.toDataURL();\n};\n\nexport default OptimizedImage; "],"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","ignoreList":[]}