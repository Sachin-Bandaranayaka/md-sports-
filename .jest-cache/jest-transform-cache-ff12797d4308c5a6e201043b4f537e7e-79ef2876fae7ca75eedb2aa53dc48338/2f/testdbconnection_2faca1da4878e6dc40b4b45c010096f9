df02c6d650c6ee533ee8e2307622d6ad
// Using CommonJS syntax for compatibility
"use strict";

/* istanbul ignore next */
function cov_1ab794mw8p() {
  var path = "/Users/sachin/Documents/md-sports-/src/scripts/test-db-connection.ts";
  var hash = "90d5a0838a17d05e7dd244ae819d0026e1452145";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/scripts/test-db-connection.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 11
        },
        end: {
          line: 3,
          column: 31
        }
      },
      "1": {
        start: {
          line: 4,
          column: 23
        },
        end: {
          line: 4,
          column: 40
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 19,
          column: 5
        }
      },
      "3": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 18,
          column: 5
        }
      },
      "4": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 7,
          column: 54
        }
      },
      "5": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 8,
          column: 46
        }
      },
      "6": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 14,
          column: 9
        }
      },
      "7": {
        start: {
          line: 10,
          column: 12
        },
        end: {
          line: 10,
          column: 61
        }
      },
      "8": {
        start: {
          line: 12,
          column: 12
        },
        end: {
          line: 12,
          column: 59
        }
      },
      "9": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 13,
          column: 28
        }
      },
      "10": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 67
        }
      },
      "11": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 1
          },
          end: {
            line: 5,
            column: 2
          }
        },
        loc: {
          start: {
            line: 5,
            column: 11
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 5
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 14,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 14,
            column: 9
          }
        }, {
          start: {
            line: 11,
            column: 15
          },
          end: {
            line: 14,
            column: 9
          }
        }],
        line: 9
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/scripts/test-db-connection.ts"],
      sourcesContent: ["// Using CommonJS syntax for compatibility\nconst db = require('../lib/db');\nconst testConnection = db.testConnection;\n\n(async () => {\n    try {\n        console.log('Testing database connection...');\n        const success = await testConnection();\n\n        if (success) {\n            console.log('Database connection successful! \u2705');\n        } else {\n            console.error('Database connection failed. \u274C');\n            process.exit(1);\n        }\n    } catch (error) {\n        console.error('Error testing database connection:', error);\n        process.exit(1);\n    }\n})(); "],
      names: ["db", "require", "testConnection", "console", "log", "success", "error", "process", "exit"],
      mappings: "AAAA,0CAA0C;;AAC1C,MAAMA,KAAKC,QAAQ;AACnB,MAAMC,iBAAiBF,GAAGE,cAAc;AAEvC,CAAA;IACG,IAAI;QACAC,QAAQC,GAAG,CAAC;QACZ,MAAMC,UAAU,MAAMH;QAEtB,IAAIG,SAAS;YACTF,QAAQC,GAAG,CAAC;QAChB,OAAO;YACHD,QAAQG,KAAK,CAAC;YACdC,QAAQC,IAAI,CAAC;QACjB;IACJ,EAAE,OAAOF,OAAO;QACZH,QAAQG,KAAK,CAAC,sCAAsCA;QACpDC,QAAQC,IAAI,CAAC;IACjB;AACJ,CAAA"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "90d5a0838a17d05e7dd244ae819d0026e1452145"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ab794mw8p = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ab794mw8p();
const db =
/* istanbul ignore next */
(cov_1ab794mw8p().s[0]++, require("../lib/db"));
const testConnection =
/* istanbul ignore next */
(cov_1ab794mw8p().s[1]++, db.testConnection);
/* istanbul ignore next */
cov_1ab794mw8p().s[2]++;
(async () => {
  /* istanbul ignore next */
  cov_1ab794mw8p().f[0]++;
  cov_1ab794mw8p().s[3]++;
  try {
    /* istanbul ignore next */
    cov_1ab794mw8p().s[4]++;
    console.log("Testing database connection...");
    const success =
    /* istanbul ignore next */
    (cov_1ab794mw8p().s[5]++, await testConnection());
    /* istanbul ignore next */
    cov_1ab794mw8p().s[6]++;
    if (success) {
      /* istanbul ignore next */
      cov_1ab794mw8p().b[0][0]++;
      cov_1ab794mw8p().s[7]++;
      console.log("Database connection successful! ✅");
    } else {
      /* istanbul ignore next */
      cov_1ab794mw8p().b[0][1]++;
      cov_1ab794mw8p().s[8]++;
      console.error("Database connection failed. ❌");
      /* istanbul ignore next */
      cov_1ab794mw8p().s[9]++;
      process.exit(1);
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_1ab794mw8p().s[10]++;
    console.error("Error testing database connection:", error);
    /* istanbul ignore next */
    cov_1ab794mw8p().s[11]++;
    process.exit(1);
  }
})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWFiNzk0bXc4cCIsImFjdHVhbENvdmVyYWdlIiwiZGIiLCJzIiwicmVxdWlyZSIsInRlc3RDb25uZWN0aW9uIiwiZiIsImNvbnNvbGUiLCJsb2ciLCJzdWNjZXNzIiwiYiIsImVycm9yIiwicHJvY2VzcyIsImV4aXQiXSwic291cmNlcyI6WyIvVXNlcnMvc2FjaGluL0RvY3VtZW50cy9tZC1zcG9ydHMtL3NyYy9zY3JpcHRzL3Rlc3QtZGItY29ubmVjdGlvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBVc2luZyBDb21tb25KUyBzeW50YXggZm9yIGNvbXBhdGliaWxpdHlcbmNvbnN0IGRiID0gcmVxdWlyZSgnLi4vbGliL2RiJyk7XG5jb25zdCB0ZXN0Q29ubmVjdGlvbiA9IGRiLnRlc3RDb25uZWN0aW9uO1xuXG4oYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdUZXN0aW5nIGRhdGFiYXNlIGNvbm5lY3Rpb24uLi4nKTtcbiAgICAgICAgY29uc3Qgc3VjY2VzcyA9IGF3YWl0IHRlc3RDb25uZWN0aW9uKCk7XG5cbiAgICAgICAgaWYgKHN1Y2Nlc3MpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdEYXRhYmFzZSBjb25uZWN0aW9uIHN1Y2Nlc3NmdWwhIOKchScpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRGF0YWJhc2UgY29ubmVjdGlvbiBmYWlsZWQuIOKdjCcpO1xuICAgICAgICAgICAgcHJvY2Vzcy5leGl0KDEpO1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgdGVzdGluZyBkYXRhYmFzZSBjb25uZWN0aW9uOicsIGVycm9yKTtcbiAgICAgICAgcHJvY2Vzcy5leGl0KDEpO1xuICAgIH1cbn0pKCk7ICJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBZ0JRO0lBQUFBLGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGNBQUE7QUFmUixNQUFNRSxFQUFBO0FBQUE7QUFBQSxDQUFBRixjQUFBLEdBQUFHLENBQUEsT0FBS0MsT0FBQSxDQUFRO0FBQ25CLE1BQU1DLGNBQUE7QUFBQTtBQUFBLENBQUFMLGNBQUEsR0FBQUcsQ0FBQSxPQUFpQkQsRUFBQSxDQUFHRyxjQUFjO0FBQUE7QUFBQUwsY0FBQSxHQUFBRyxDQUFBO0FBRXZDO0VBQUE7RUFBQUgsY0FBQSxHQUFBTSxDQUFBO0VBQUFOLGNBQUEsR0FBQUcsQ0FBQTtFQUNHLElBQUk7SUFBQTtJQUFBSCxjQUFBLEdBQUFHLENBQUE7SUFDQUksT0FBQSxDQUFRQyxHQUFHLENBQUM7SUFDWixNQUFNQyxPQUFBO0lBQUE7SUFBQSxDQUFBVCxjQUFBLEdBQUFHLENBQUEsT0FBVSxNQUFNRSxjQUFBO0lBQUE7SUFBQUwsY0FBQSxHQUFBRyxDQUFBO0lBRXRCLElBQUlNLE9BQUEsRUFBUztNQUFBO01BQUFULGNBQUEsR0FBQVUsQ0FBQTtNQUFBVixjQUFBLEdBQUFHLENBQUE7TUFDVEksT0FBQSxDQUFRQyxHQUFHLENBQUM7SUFDaEIsT0FBTztNQUFBO01BQUFSLGNBQUEsR0FBQVUsQ0FBQTtNQUFBVixjQUFBLEdBQUFHLENBQUE7TUFDSEksT0FBQSxDQUFRSSxLQUFLLENBQUM7TUFBQTtNQUFBWCxjQUFBLEdBQUFHLENBQUE7TUFDZFMsT0FBQSxDQUFRQyxJQUFJLENBQUM7SUFDakI7RUFDSixFQUFFLE9BQU9GLEtBQUEsRUFBTztJQUFBO0lBQUFYLGNBQUEsR0FBQUcsQ0FBQTtJQUNaSSxPQUFBLENBQVFJLEtBQUssQ0FBQyxzQ0FBc0NBLEtBQUE7SUFBQTtJQUFBWCxjQUFBLEdBQUFHLENBQUE7SUFDcERTLE9BQUEsQ0FBUUMsSUFBSSxDQUFDO0VBQ2pCO0FBQ0oiLCJpZ25vcmVMaXN0IjpbXX0=