{"version":3,"sources":["/Users/sachin/Documents/md-sports-/tests/unit/auth.test.ts"],"sourcesContent":["// Mock jose\njest.mock('jose');\n\n// Mock prisma\njest.mock('@/lib/prisma', () => ({\n  __esModule: true,\n  default: {\n    user: {\n      findUnique: jest.fn(),\n    },\n  },\n}));\n\nimport { NextRequest } from 'next/server';\nimport * as jose from 'jose';\nimport { verifyToken, extractToken, validateTokenPermission, getUserIdFromToken, getShopIdFromToken, authOptions } from '@/lib/auth';\nimport prisma from '@/lib/prisma';\n\nconst mockedJose = jose as jest.Mocked<typeof jose>;\nconst mockPrisma = prisma as jest.Mocked<typeof prisma>;\n\n// Mock console methods\nconst consoleSpy = {\n  log: jest.spyOn(console, 'log').mockImplementation(() => {}),\n  error: jest.spyOn(console, 'error').mockImplementation(() => {}),\n};\n\ndescribe('Auth Library', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    consoleSpy.log.mockClear();\n    consoleSpy.error.mockClear();\n  });\n\n  afterAll(() => {\n    consoleSpy.log.mockRestore();\n    consoleSpy.error.mockRestore();\n  });\n\n  describe('authOptions', () => {\n    it('should have correct configuration', () => {\n      expect(authOptions.secret).toBeDefined();\n      expect(authOptions.session.strategy).toBe('jwt');\n      expect(authOptions.session.maxAge).toBe(24 * 60 * 60);\n      expect(authOptions.callbacks.jwt).toBeDefined();\n      expect(authOptions.callbacks.session).toBeDefined();\n    });\n\n    it('should handle jwt callback with user', async () => {\n      const token = { id: 1 };\n      const user = { id: 2, permissions: ['read'] };\n      const result = await authOptions.callbacks.jwt({ token, user });\n      expect(result.id).toBe(2);\n      expect(result.permissions).toEqual(['read']);\n    });\n\n    it('should handle jwt callback without user', async () => {\n      const token = { id: 1, permissions: ['read'] };\n      const result = await authOptions.callbacks.jwt({ token });\n      expect(result.id).toBe(1);\n      expect(result.permissions).toEqual(['read']);\n    });\n\n    it('should handle session callback', async () => {\n      const session = { user: { name: 'test' } };\n      const token = { id: 1, permissions: ['read'] };\n      const result = await authOptions.callbacks.session({ session, token });\n      expect(result.user.id).toBe(1);\n      expect(result.user.permissions).toEqual(['read']);\n    });\n\n    it('should handle session callback without token', async () => {\n      const session = { user: { name: 'test' } };\n      const result = await authOptions.callbacks.session({ session, token: null });\n      expect(result.user.name).toBe('test');\n      expect(result.user.id).toBeUndefined();\n    });\n  });\n\n  describe('verifyToken', () => {\n    it('should verify valid token', async () => {\n      const mockPayload = { sub: '1', permissions: ['read'] };\n      mockedJose.jwtVerify.mockResolvedValue({ payload: mockPayload } as any);\n\n      const result = await verifyToken('valid-token');\n      expect(result).toEqual(mockPayload);\n      expect(mockedJose.jwtVerify).toHaveBeenCalledWith(\n        'valid-token',\n        expect.any(Uint8Array)\n      );\n    });\n\n    it('should handle expired token', async () => {\n      const error = new Error('Token expired');\n      (error as any).code = 'ERR_JWT_EXPIRED';\n      mockedJose.jwtVerify.mockRejectedValue(error);\n\n      const result = await verifyToken('expired-token');\n      expect(result).toBeNull();\n      expect(consoleSpy.error).toHaveBeenCalledWith('Token expired:', 'Token expired');\n    });\n\n    it('should handle invalid token signature', async () => {\n      const error = new Error('Invalid signature');\n      (error as any).code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n      mockedJose.jwtVerify.mockRejectedValue(error);\n\n      const result = await verifyToken('invalid-token');\n      expect(result).toBeNull();\n      expect(consoleSpy.error).toHaveBeenCalledWith('Invalid token:', 'Invalid signature');\n    });\n\n    it('should handle invalid JWS', async () => {\n      const error = new Error('Invalid JWS');\n      (error as any).code = 'ERR_JWS_INVALID';\n      mockedJose.jwtVerify.mockRejectedValue(error);\n\n      const result = await verifyToken('invalid-jws');\n      expect(result).toBeNull();\n      expect(consoleSpy.error).toHaveBeenCalledWith('Invalid token:', 'Invalid JWS');\n    });\n\n    it('should handle claim validation failed', async () => {\n      const error = new Error('Claim validation failed');\n      (error as any).code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n      mockedJose.jwtVerify.mockRejectedValue(error);\n\n      const result = await verifyToken('invalid-claims');\n      expect(result).toBeNull();\n      expect(consoleSpy.error).toHaveBeenCalledWith('Invalid token:', 'Claim validation failed');\n    });\n\n    it('should handle other verification errors', async () => {\n      const error = new Error('Unknown error');\n      (error as any).code = 'ERR_UNKNOWN';\n      mockedJose.jwtVerify.mockRejectedValue(error);\n\n      const result = await verifyToken('error-token');\n      expect(result).toBeNull();\n      expect(consoleSpy.error).toHaveBeenCalledWith('Token verification error:', 'Unknown error');\n    });\n  });\n\n  describe('extractToken', () => {\n    it('should extract token from valid authorization header', () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue('Bearer valid-token-123')\n        }\n      } as unknown as NextRequest;\n\n      const result = extractToken(req);\n      expect(result).toBe('valid-token-123');\n      expect(req.headers.get).toHaveBeenCalledWith('authorization');\n    });\n\n    it('should return null for missing authorization header', () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue(null)\n        }\n      } as unknown as NextRequest;\n\n      const result = extractToken(req);\n      expect(result).toBeNull();\n    });\n\n    it('should return null for invalid authorization header format', () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue('Invalid token-123')\n        }\n      } as unknown as NextRequest;\n\n      const result = extractToken(req);\n      expect(result).toBeNull();\n    });\n\n    it('should return null for empty authorization header', () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue('')\n        }\n      } as unknown as NextRequest;\n\n      const result = extractToken(req);\n      expect(result).toBeNull();\n    });\n  });\n\n  describe('validateTokenPermission', () => {\n    it('should return invalid for missing token', async () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue(null)\n        }\n      } as unknown as NextRequest;\n\n      const result = await validateTokenPermission(req, 'read');\n      expect(result).toEqual({\n        isValid: false,\n        message: 'Authentication required'\n      });\n    });\n\n    it('should grant permission for dev-token', async () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue('Bearer dev-token')\n        }\n      } as unknown as NextRequest;\n\n      const result = await validateTokenPermission(req, 'read');\n      expect(result).toEqual({ isValid: true });\n      expect(consoleSpy.log).toHaveBeenCalledWith(\"Development mode: granting permission 'read'\");\n    });\n\n    it('should return invalid for invalid token payload', async () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue('Bearer invalid-token')\n        }\n      } as unknown as NextRequest;\n\n      mockedJose.jwtVerify.mockResolvedValue({ payload: null } as any);\n\n      const result = await validateTokenPermission(req, 'read');\n      expect(result).toEqual({\n        isValid: false,\n        message: 'Invalid authentication token'\n      });\n    });\n\n    it('should return invalid for token without sub claim', async () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue('Bearer no-sub-token')\n        }\n      } as unknown as NextRequest;\n\n      mockedJose.jwtVerify.mockResolvedValue({ payload: { permissions: ['read'] } } as any);\n\n      const result = await validateTokenPermission(req, 'read');\n      expect(result).toEqual({\n        isValid: false,\n        message: 'Invalid authentication token'\n      });\n    });\n\n    it('should grant permission from token payload', async () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue('Bearer valid-token')\n        }\n      } as unknown as NextRequest;\n\n      mockedJose.jwtVerify.mockResolvedValue({\n        payload: { sub: '1', permissions: ['read', 'write'] }\n      } as any);\n\n      const result = await validateTokenPermission(req, 'read');\n      expect(result).toEqual({ isValid: true });\n    });\n\n    it('should deny permission not in token payload', async () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue('Bearer valid-token')\n        }\n      } as unknown as NextRequest;\n\n      mockedJose.jwtVerify.mockResolvedValue({\n        payload: { sub: '1', permissions: ['write'] }\n      } as any);\n\n      (mockPrisma.user.findUnique as jest.Mock).mockResolvedValue({\n         id: 1,\n         permissions: ['write']\n       });\n\n      const result = await validateTokenPermission(req, 'read');\n      expect(result).toEqual({\n        isValid: false,\n        message: \"Permission denied: 'read' is required\"\n      });\n    });\n\n    it('should fallback to database when permission not in token', async () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue('Bearer valid-token')\n        }\n      } as unknown as NextRequest;\n\n      mockedJose.jwtVerify.mockResolvedValue({\n        payload: { sub: '1', permissions: ['write'] }\n      } as any);\n\n      (mockPrisma.user.findUnique as jest.Mock).mockResolvedValue({\n         id: 1,\n         permissions: ['read', 'write']\n       });\n\n      const result = await validateTokenPermission(req, 'read');\n      expect(result).toEqual({ isValid: true });\n    });\n\n    it('should return invalid for user not found', async () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue('Bearer valid-token')\n        }\n      } as unknown as NextRequest;\n\n      mockedJose.jwtVerify.mockResolvedValue({\n        payload: { sub: '999' }\n      } as any);\n\n      (mockPrisma.user.findUnique as jest.Mock).mockResolvedValue(null);\n\n      const result = await validateTokenPermission(req, 'read');\n      expect(result).toEqual({\n        isValid: false,\n        message: 'User not found'\n      });\n    });\n\n    it('should return invalid for user without permissions', async () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue('Bearer valid-token')\n        }\n      } as unknown as NextRequest;\n\n      mockedJose.jwtVerify.mockResolvedValue({\n        payload: { sub: '1' }\n      } as any);\n\n      (mockPrisma.user.findUnique as jest.Mock).mockResolvedValue({\n         id: 1,\n         permissions: null\n       });\n\n      const result = await validateTokenPermission(req, 'read');\n      expect(result).toEqual({\n        isValid: false,\n        message: 'User has no permissions'\n      });\n    });\n\n    it('should handle database errors', async () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue('Bearer valid-token')\n        }\n      } as unknown as NextRequest;\n\n      mockedJose.jwtVerify.mockResolvedValue({\n        payload: { sub: '1' }\n      } as any);\n\n      (mockPrisma.user.findUnique as jest.Mock).mockRejectedValue(new Error('Database error'));\n\n      const result = await validateTokenPermission(req, 'read');\n      expect(result).toEqual({\n        isValid: false,\n        message: 'Error checking permission: Database error'\n      });\n    });\n  });\n\n  describe('getUserIdFromToken', () => {\n    it('should return null for missing token', async () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue(null)\n        }\n      } as unknown as NextRequest;\n\n      const result = await getUserIdFromToken(req);\n      expect(result).toBeNull();\n    });\n\n    it('should return 1 for dev-token', async () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue('Bearer dev-token')\n        }\n      } as unknown as NextRequest;\n\n      const result = await getUserIdFromToken(req);\n      expect(result).toBe(1);\n    });\n\n    it('should return user ID from valid token', async () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue('Bearer valid-token')\n        }\n      } as unknown as NextRequest;\n\n      mockedJose.jwtVerify.mockResolvedValue({\n        payload: { sub: '123' }\n      } as any);\n\n      const result = await getUserIdFromToken(req);\n      expect(result).toBe(123);\n    });\n\n    it('should return null for invalid token payload', async () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue('Bearer invalid-token')\n        }\n      } as unknown as NextRequest;\n\n      mockedJose.jwtVerify.mockResolvedValue({ payload: null } as any);\n\n      const result = await getUserIdFromToken(req);\n      expect(result).toBeNull();\n    });\n\n    it('should return null for token without sub claim', async () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue('Bearer no-sub-token')\n        }\n      } as unknown as NextRequest;\n\n      mockedJose.jwtVerify.mockResolvedValue({\n        payload: { permissions: ['read'] }\n      } as any);\n\n      const result = await getUserIdFromToken(req);\n      expect(result).toBeNull();\n    });\n  });\n\n  describe('getShopIdFromToken', () => {\n    it('should return null for missing token', async () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue(null)\n        }\n      } as unknown as NextRequest;\n\n      const result = await getShopIdFromToken(req);\n      expect(result).toBeNull();\n    });\n\n    it('should return default shop ID for dev-token', async () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue('Bearer dev-token')\n        }\n      } as unknown as NextRequest;\n\n      const result = await getShopIdFromToken(req);\n      expect(result).toBe('cmbtr9q6l000061romoxi7uvf');\n    });\n\n    it('should return shop ID from valid token', async () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue('Bearer valid-token')\n        }\n      } as unknown as NextRequest;\n\n      mockedJose.jwtVerify.mockResolvedValue({\n        payload: { sub: '1', shopId: 'shop123' }\n      } as any);\n\n      const result = await getShopIdFromToken(req);\n      expect(result).toBe('shop123');\n    });\n\n    it('should return null for token without shopId', async () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue('Bearer no-shop-token')\n        }\n      } as unknown as NextRequest;\n\n      mockedJose.jwtVerify.mockResolvedValue({\n        payload: { sub: '1' }\n      } as any);\n\n      const result = await getShopIdFromToken(req);\n      expect(result).toBeNull();\n    });\n\n    it('should return null for invalid token payload', async () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue('Bearer invalid-token')\n        }\n      } as unknown as NextRequest;\n\n      mockedJose.jwtVerify.mockResolvedValue({ payload: null } as any);\n\n      const result = await getShopIdFromToken(req);\n      expect(result).toBeNull();\n    });\n\n    it('should convert numeric shopId to string', async () => {\n      const req = {\n        headers: {\n          get: jest.fn().mockReturnValue('Bearer valid-token')\n        }\n      } as unknown as NextRequest;\n\n      mockedJose.jwtVerify.mockResolvedValue({\n        payload: { sub: '1', shopId: 123 }\n      } as any);\n\n      const result = await getShopIdFromToken(req);\n      expect(result).toBe('123');\n    });\n  });\n});"],"names":["jest","mock","__esModule","default","user","findUnique","fn","mockedJose","jose","mockPrisma","prisma","consoleSpy","log","spyOn","console","mockImplementation","error","describe","beforeEach","clearAllMocks","mockClear","afterAll","mockRestore","it","expect","authOptions","secret","toBeDefined","session","strategy","toBe","maxAge","callbacks","jwt","token","id","permissions","result","toEqual","name","toBeUndefined","mockPayload","sub","jwtVerify","mockResolvedValue","payload","verifyToken","toHaveBeenCalledWith","any","Uint8Array","Error","code","mockRejectedValue","toBeNull","req","headers","get","mockReturnValue","extractToken","validateTokenPermission","isValid","message","getUserIdFromToken","getShopIdFromToken","shopId"],"mappings":"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"}