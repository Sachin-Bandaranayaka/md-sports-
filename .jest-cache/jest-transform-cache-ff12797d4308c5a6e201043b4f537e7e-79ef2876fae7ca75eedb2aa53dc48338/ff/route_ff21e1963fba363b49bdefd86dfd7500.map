{"version":3,"names":["GET","cov_12reuwq8qi","f","s","fetchTotalRetailValueData","shopId","periodDays","inventoryItems","_prisma","prisma","inventoryItem","findMany","where","b","productIds","map","item","productId","products","product","id","in","select","name","price","productMap","Map","forEach","set","totalRetailValue","previousPeriodValue","get","quantity","retailPrice","itemRetailValue","difference","percentChange","formattedValue","toLocaleString","success","rawValue","trend","toFixed","trendUp","_shopMiddleware","ShopAccessControl","withShopAccess","request","context","authResult","_auth","validateTokenPermission","isValid","_server","NextResponse","json","error","message","status","searchParams","URL","url","period","parsedPeriod","parseInt","cacheKey","isFiltered","cachedData","_cache","cacheService","console","log","meta","shopFiltered","fromCache","retailValueData","responseData"],"sources":["/Users/sachin/Documents/md-sports-/src/app/api/dashboard/total-retail-value/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { prisma, safeQuery } from '@/lib/prisma';\nimport { cacheService } from '@/lib/cache';\nimport { ShopAccessControl } from '@/lib/utils/shopMiddleware';\nimport { validateTokenPermission } from '@/lib/auth';\n\nexport async function fetchTotalRetailValueData(shopId?: string | null, periodDays?: number) {\n    // Get inventory items with optional shop filtering\n    const inventoryItems = await prisma.inventoryItem.findMany({\n        where: shopId ? { shopId } : {}\n    });\n\n    // Get all products to access their retail prices\n    const productIds = inventoryItems.map(item => item.productId);\n    const products = await prisma.product.findMany({\n        where: {\n            id: {\n                in: productIds\n            }\n        },\n        select: {\n            id: true,\n            name: true,\n            price: true  // This is the retail price\n        }\n    });\n\n    // Create a map of product ID to product data for easy lookup\n    const productMap = new Map();\n    products.forEach(product => {\n        productMap.set(product.id, product);\n    });\n\n    // Calculate total retail value\n    let totalRetailValue = 0;\n    let previousPeriodValue = 0;  // For comparison with previous period\n\n    // Process each inventory item\n    inventoryItems.forEach(item => {\n        const product = productMap.get(item.productId);\n        if (product && item.quantity > 0) {\n            const retailPrice = product.price || 0;\n            const itemRetailValue = retailPrice * item.quantity;\n            totalRetailValue += itemRetailValue;\n        }\n    });\n\n    // For demo purposes, let's assume previous value was 5% less\n    // In a real app, you would fetch historical data\n    previousPeriodValue = totalRetailValue * 0.95;\n\n    // Calculate trend\n    const difference = totalRetailValue - previousPeriodValue;\n    // Handle division by zero if previousPeriodValue is 0\n    const percentChange = previousPeriodValue === 0 ? (totalRetailValue > 0 ? 100 : 0) : (difference / previousPeriodValue) * 100;\n\n    // Format the value for display\n    const formattedValue = `Rs. ${totalRetailValue.toLocaleString()}`;\n\n    return {\n        success: true,\n        formattedValue,\n        rawValue: totalRetailValue,\n        trend: `${percentChange >= 0 ? '+' : ''}${percentChange.toFixed(0)}%`,\n        trendUp: percentChange >= 0\n    };\n}\n\nexport const GET = ShopAccessControl.withShopAccess(async (request: NextRequest, context) => {\n    try {\n        // Validate token and permissions\n        const authResult = await validateTokenPermission(request, 'view_dashboard');\n        if (!authResult.isValid) {\n            return NextResponse.json({ error: authResult.message }, { status: 401 });\n        }\n\n        // Extract period parameter from URL\n        const { searchParams } = new URL(request.url);\n        const period = searchParams.get('period');\n        let periodDays: number | undefined;\n        \n        if (period) {\n            const parsedPeriod = parseInt(period);\n            if (parsedPeriod === 7 || parsedPeriod === 30) {\n                periodDays = parsedPeriod;\n            }\n        }\n\n        // Check cache first with shop context and period\n        const cacheKey = `dashboard:total-retail-value:${context.isFiltered ? context.shopId : 'all'}:${periodDays || 'all'}`;\n        const cachedData = await cacheService.get(cacheKey);\n\n        if (cachedData) {\n            console.log('âœ… Total retail value served from cache');\n            return NextResponse.json({\n                ...cachedData,\n                meta: {\n                    shopFiltered: context.isFiltered,\n                    shopId: context.shopId,\n                    fromCache: true\n                }\n            });\n        }\n\n        console.log('ðŸ”„ Fetching fresh total retail value with shop context:', {\n            shopId: context.shopId,\n            isFiltered: context.isFiltered,\n            periodDays\n        });\n        const retailValueData = await fetchTotalRetailValueData(context.isFiltered ? context.shopId : null, periodDays);\n\n        // Add metadata to response\n        const responseData = {\n            ...retailValueData,\n            meta: {\n                shopFiltered: context.isFiltered,\n                shopId: context.shopId,\n                fromCache: false\n            }\n        };\n\n        // Cache for 3 minutes (retail value changes moderately)\n        await cacheService.set(cacheKey, responseData, 180);\n        console.log('ðŸ’¾ Total retail value cached for 3 minutes');\n\n        return NextResponse.json(responseData);\n    } catch (error) {\n        console.error('Error calculating total retail value:', error);\n        return NextResponse.json({\n            success: false,\n            message: 'Failed to calculate total retail value',\n            meta: {\n                shopFiltered: context.isFiltered,\n                shopId: context.shopId\n            }\n        }, { status: 500 });\n    }\n});"],"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","ignoreList":[]}