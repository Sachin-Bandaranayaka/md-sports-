{"version":3,"names":["reducer","cov_9ektlqux1","f","s","toast","useToast","TOAST_LIMIT","TOAST_REMOVE_DELAY","_actionTypes","ADD_TOAST","UPDATE_TOAST","DISMISS_TOAST","REMOVE_TOAST","count","genId","Number","MAX_SAFE_INTEGER","toString","toastTimeouts","Map","addToRemoveQueue","toastId","has","b","timeout","setTimeout","delete","dispatch","type","set","state","action","toasts","slice","map","t","id","forEach","undefined","open","filter","listeners","memoryState","listener","props","update","dismiss","onOpenChange","setState","_react","useState","useEffect","push","index","indexOf","splice"],"sources":["/Users/sachin/Documents/md-sports-/src/components/ui/use-toast.ts"],"sourcesContent":["import * as React from \"react\";\n\nconst TOAST_LIMIT = 1;\nconst TOAST_REMOVE_DELAY = 1000000;\n\ntype ToasterToast = {\n  id: string;\n  title?: React.ReactNode;\n  description?: React.ReactNode;\n  action?: React.ReactElement;\n  variant?: \"default\" | \"destructive\";\n};\n\nconst _actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const;\n\nlet count = 0;\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER;\n  return count.toString();\n}\n\ntype ActionType = typeof actionTypes;\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"];\n      toast: ToasterToast;\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"];\n      toast: Partial<ToasterToast>;\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"];\n      toastId?: ToasterToast[\"id\"];\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"];\n      toastId?: ToasterToast[\"id\"];\n    };\n\ninterface State {\n  toasts: ToasterToast[];\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>();\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return;\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId);\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    });\n  }, TOAST_REMOVE_DELAY);\n\n  toastTimeouts.set(toastId, timeout);\n};\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      };\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      };\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action;\n\n      if (toastId) {\n        addToRemoveQueue(toastId);\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id);\n        });\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      };\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        };\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      };\n  }\n};\n\nconst listeners: Array<(state: State) => void> = [];\n\nlet memoryState: State = { toasts: [] };\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action);\n  listeners.forEach((listener) => {\n    listener(memoryState);\n  });\n}\n\ntype Toast = Omit<ToasterToast, \"id\">;\n\nfunction toast({ ...props }: Toast) {\n  const id = genId();\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    });\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id });\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss();\n      },\n    },\n  });\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  };\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState);\n\n  React.useEffect(() => {\n    listeners.push(setState);\n    return () => {\n      const index = listeners.indexOf(setState);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  }, [state]);\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  };\n}\n\nexport { useToast, toast };"],"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","ignoreList":[]}