d21ea403d2e12b88006230e9975b1008
"use strict";

/* istanbul ignore next */
function cov_h10jxyh9u() {
  var path = "/Users/sachin/Documents/md-sports-/src/app/api/inventory/shop/[id]/route.ts";
  var hash = "dd2dc27d212c645180d8fb4feabd2a3c3b0f88bd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/app/api/inventory/shop/[id]/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 19
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 21
        },
        end: {
          line: 12,
          column: 67
        }
      },
      "5": {
        start: {
          line: 13,
          column: 26
        },
        end: {
          line: 13,
          column: 86
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 17,
          column: 6
        }
      },
      "7": {
        start: {
          line: 21,
          column: 18
        },
        end: {
          line: 21,
          column: 74
        }
      },
      "8": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "9": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 28,
          column: 11
        }
      },
      "10": {
        start: {
          line: 31,
          column: 17
        },
        end: {
          line: 31,
          column: 64
        }
      },
      "11": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "12": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 38,
          column: 11
        }
      },
      "13": {
        start: {
          line: 41,
          column: 24
        },
        end: {
          line: 41,
          column: 69
        }
      },
      "14": {
        start: {
          line: 43,
          column: 30
        },
        end: {
          line: 43,
          column: 63
        }
      },
      "15": {
        start: {
          line: 44,
          column: 25
        },
        end: {
          line: 44,
          column: 75
        }
      },
      "16": {
        start: {
          line: 45,
          column: 24
        },
        end: {
          line: 45,
          column: 68
        }
      },
      "17": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "18": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 53,
          column: 11
        }
      },
      "19": {
        start: {
          line: 56,
          column: 25
        },
        end: {
          line: 56,
          column: 92
        }
      },
      "20": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 110,
          column: 5
        }
      },
      "21": {
        start: {
          line: 59,
          column: 31
        },
        end: {
          line: 59,
          column: 43
        }
      },
      "22": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "23": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 67,
          column: 15
        }
      },
      "24": {
        start: {
          line: 69,
          column: 23
        },
        end: {
          line: 69,
          column: 40
        }
      },
      "25": {
        start: {
          line: 71,
          column: 26
        },
        end: {
          line: 71,
          column: 67
        }
      },
      "26": {
        start: {
          line: 72,
          column: 23
        },
        end: {
          line: 95,
          column: 10
        }
      },
      "27": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 99,
          column: 11
        }
      },
      "28": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 63
        }
      },
      "29": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 109,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 33
          }
        },
        loc: {
          start: {
            line: 14,
            column: 39
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "GET",
        decl: {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 18
          }
        },
        loc: {
          start: {
            line: 19,
            column: 36
          },
          end: {
            line: 111,
            column: 1
          }
        },
        line: 19
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 17,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 35
          },
          end: {
            line: 15,
            column: 38
          }
        }, {
          start: {
            line: 15,
            column: 41
          },
          end: {
            line: 17,
            column: 5
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 14
          }
        }, {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 32
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "5": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 20
          }
        }, {
          start: {
            line: 47,
            column: 24
          },
          end: {
            line: 47,
            column: 42
          }
        }, {
          start: {
            line: 47,
            column: 46
          },
          end: {
            line: 47,
            column: 59
          }
        }, {
          start: {
            line: 47,
            column: 63
          },
          end: {
            line: 47,
            column: 75
          }
        }],
        line: 47
      },
      "6": {
        loc: {
          start: {
            line: 56,
            column: 25
          },
          end: {
            line: 56,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 25
          },
          end: {
            line: 56,
            column: 37
          }
        }, {
          start: {
            line: 56,
            column: 42
          },
          end: {
            line: 56,
            column: 59
          }
        }, {
          start: {
            line: 56,
            column: 63
          },
          end: {
            line: 56,
            column: 74
          }
        }, {
          start: {
            line: 56,
            column: 78
          },
          end: {
            line: 56,
            column: 91
          }
        }],
        line: 56
      },
      "7": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "8": {
        loc: {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 61,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 61,
            column: 27
          }
        }, {
          start: {
            line: 61,
            column: 31
          },
          end: {
            line: 61,
            column: 49
          }
        }],
        line: 61
      },
      "9": {
        loc: {
          start: {
            line: 71,
            column: 26
          },
          end: {
            line: 71,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 71,
            column: 41
          },
          end: {
            line: 71,
            column: 62
          }
        }, {
          start: {
            line: 71,
            column: 65
          },
          end: {
            line: 71,
            column: 67
          }
        }],
        line: 71
      },
      "10": {
        loc: {
          start: {
            line: 106,
            column: 19
          },
          end: {
            line: 106,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 106,
            column: 44
          },
          end: {
            line: 106,
            column: 57
          }
        }, {
          start: {
            line: 106,
            column: 60
          },
          end: {
            line: 106,
            column: 73
          }
        }],
        line: 106
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0, 0],
      "6": [0, 0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/app/api/inventory/shop/[id]/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { requirePermission } from '@/lib/utils/middleware';\nimport { getUserFromToken } from '@/services/authService';\nimport db from '@/utils/db';\n\nexport async function GET(\n    req: NextRequest,\n    { params }: { params: Promise<{ id: string }> }\n) {\n    // Check for inventory view permissions\n    const token = req.headers.get('authorization')?.replace('Bearer ', '');\n    \n    if (!token) {\n        return NextResponse.json({\n            success: false,\n            message: 'Authentication required'\n        }, { status: 401 });\n    }\n\n    // Get user to check specific permissions\n    const user = await getUserFromToken(token);\n    if (!user) {\n        return NextResponse.json({\n            success: false,\n            message: 'Invalid token'\n        }, { status: 401 });\n    }\n\n    // Allow Shop Staff to view any shop's inventory for transfers\n    const isShopStaff = user.roleName?.toLowerCase() === 'shop staff';\n\n    // Check if user has any inventory view permission\n    const hasAllPermissions = user.permissions?.includes('ALL');\n    const hasBasicView = user.permissions?.includes('inventory:view:basic');\n    const hasFullView = user.permissions?.includes('inventory:view');\n    \n    // Pass if user is shop staff, otherwise check permissions\n    if (!isShopStaff && !hasAllPermissions && !hasBasicView && !hasFullView) {\n        return NextResponse.json({\n            success: false,\n            message: 'Permission denied: inventory view access required'\n        }, { status: 403 });\n    }\n\n    // Determine if costs should be included (never for shop staff in this view)\n    const includeCosts = !isShopStaff && (hasAllPermissions || (hasFullView && !hasBasicView));\n\n    try {\n        // Await params before using its properties\n        const resolvedParams = await params;\n        \n        // Get the shop ID safely\n        if (!resolvedParams || !resolvedParams.id) {\n            return NextResponse.json({\n                success: false,\n                message: 'Shop ID is required',\n            }, { status: 400 });\n        }\n\n        const shopId = resolvedParams.id;\n\n        // Get inventory items for the shop with conditional cost inclusion\n        const costField = includeCosts ? 'i.shopspecificcost,' : '';\n        \n        const result = await db.query(\n            `SELECT \n                i.id,\n                i.\"productId\",\n                i.quantity,\n                p.id AS product_id,\n                p.name AS product_name,\n                p.description,\n                p.sku,\n                p.barcode,\n                p.price,\n                ${costField}\n                c.name AS category_name\n            FROM \n                \"InventoryItem\" i\n            JOIN \n                \"Product\" p ON i.\"productId\" = p.id\n            LEFT JOIN \n                \"Category\" c ON p.\"categoryId\" = c.id\n            WHERE \n                i.\"shopId\" = $1\n            ORDER BY\n                p.name`,\n            [shopId]\n        );\n\n        return NextResponse.json({\n            success: true,\n            data: result.rows\n        });\n    } catch (error) {\n        // Log the error\n        console.error(`Error fetching shop inventory:`, error);\n        return NextResponse.json({\n            success: false,\n            message: 'Failed to fetch shop inventory',\n            error: error instanceof Error ? error.message : String(error)\n        }, { status: 500 });\n    }\n}"],
      names: ["GET", "req", "params", "token", "headers", "get", "replace", "NextResponse", "json", "success", "message", "status", "user", "getUserFromToken", "isShopStaff", "roleName", "toLowerCase", "hasAllPermissions", "permissions", "includes", "hasBasicView", "hasFullView", "includeCosts", "resolvedParams", "id", "shopId", "costField", "result", "db", "query", "data", "rows", "error", "console", "Error", "String"],
      mappings: ";;;;+BAKsBA;;;eAAAA;;;wBALoB;6BAET;2DAClB;;;;;;AAER,eAAeA,IAClBC,GAAgB,EAChB,EAAEC,MAAM,EAAuC;IAE/C,uCAAuC;IACvC,MAAMC,QAAQF,IAAIG,OAAO,CAACC,GAAG,CAAC,kBAAkBC,QAAQ,WAAW;IAEnE,IAAI,CAACH,OAAO;QACR,OAAOI,oBAAY,CAACC,IAAI,CAAC;YACrBC,SAAS;YACTC,SAAS;QACb,GAAG;YAAEC,QAAQ;QAAI;IACrB;IAEA,yCAAyC;IACzC,MAAMC,OAAO,MAAMC,IAAAA,6BAAgB,EAACV;IACpC,IAAI,CAACS,MAAM;QACP,OAAOL,oBAAY,CAACC,IAAI,CAAC;YACrBC,SAAS;YACTC,SAAS;QACb,GAAG;YAAEC,QAAQ;QAAI;IACrB;IAEA,8DAA8D;IAC9D,MAAMG,cAAcF,KAAKG,QAAQ,EAAEC,kBAAkB;IAErD,kDAAkD;IAClD,MAAMC,oBAAoBL,KAAKM,WAAW,EAAEC,SAAS;IACrD,MAAMC,eAAeR,KAAKM,WAAW,EAAEC,SAAS;IAChD,MAAME,cAAcT,KAAKM,WAAW,EAAEC,SAAS;IAE/C,0DAA0D;IAC1D,IAAI,CAACL,eAAe,CAACG,qBAAqB,CAACG,gBAAgB,CAACC,aAAa;QACrE,OAAOd,oBAAY,CAACC,IAAI,CAAC;YACrBC,SAAS;YACTC,SAAS;QACb,GAAG;YAAEC,QAAQ;QAAI;IACrB;IAEA,4EAA4E;IAC5E,MAAMW,eAAe,CAACR,eAAgBG,CAAAA,qBAAsBI,eAAe,CAACD,YAAY;IAExF,IAAI;QACA,2CAA2C;QAC3C,MAAMG,iBAAiB,MAAMrB;QAE7B,yBAAyB;QACzB,IAAI,CAACqB,kBAAkB,CAACA,eAAeC,EAAE,EAAE;YACvC,OAAOjB,oBAAY,CAACC,IAAI,CAAC;gBACrBC,SAAS;gBACTC,SAAS;YACb,GAAG;gBAAEC,QAAQ;YAAI;QACrB;QAEA,MAAMc,SAASF,eAAeC,EAAE;QAEhC,mEAAmE;QACnE,MAAME,YAAYJ,eAAe,wBAAwB;QAEzD,MAAMK,SAAS,MAAMC,WAAE,CAACC,KAAK,CACzB,CAAC;;;;;;;;;;gBAUG,EAAEH,UAAU;;;;;;;;;;;sBAWN,CAAC,EACX;YAACD;SAAO;QAGZ,OAAOlB,oBAAY,CAACC,IAAI,CAAC;YACrBC,SAAS;YACTqB,MAAMH,OAAOI,IAAI;QACrB;IACJ,EAAE,OAAOC,OAAO;QACZ,gBAAgB;QAChBC,QAAQD,KAAK,CAAC,CAAC,8BAA8B,CAAC,EAAEA;QAChD,OAAOzB,oBAAY,CAACC,IAAI,CAAC;YACrBC,SAAS;YACTC,SAAS;YACTsB,OAAOA,iBAAiBE,QAAQF,MAAMtB,OAAO,GAAGyB,OAAOH;QAC3D,GAAG;YAAErB,QAAQ;QAAI;IACrB;AACJ"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dd2dc27d212c645180d8fb4feabd2a3c3b0f88bd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_h10jxyh9u = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_h10jxyh9u();
cov_h10jxyh9u().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_h10jxyh9u().s[1]++;
Object.defineProperty(exports, "GET", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_h10jxyh9u().f[0]++;
    cov_h10jxyh9u().s[2]++;
    return GET;
  }
});
const _server =
/* istanbul ignore next */
(cov_h10jxyh9u().s[3]++, require("next/server"));
const _authService =
/* istanbul ignore next */
(cov_h10jxyh9u().s[4]++, require("../../../../../services/authService"));
const _db =
/* istanbul ignore next */
(/*#__PURE__*/cov_h10jxyh9u().s[5]++, _interop_require_default(require("../../../../../utils/db")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_h10jxyh9u().f[1]++;
  cov_h10jxyh9u().s[6]++;
  return /* istanbul ignore next */(cov_h10jxyh9u().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_h10jxyh9u().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_h10jxyh9u().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_h10jxyh9u().b[0][1]++, {
    default: obj
  });
}
async function GET(req, {
  params
}) {
  /* istanbul ignore next */
  cov_h10jxyh9u().f[2]++;
  // Check for inventory view permissions
  const token =
  /* istanbul ignore next */
  (cov_h10jxyh9u().s[7]++, req.headers.get("authorization")?.replace("Bearer ", ""));
  /* istanbul ignore next */
  cov_h10jxyh9u().s[8]++;
  if (!token) {
    /* istanbul ignore next */
    cov_h10jxyh9u().b[2][0]++;
    cov_h10jxyh9u().s[9]++;
    return _server.NextResponse.json({
      success: false,
      message: "Authentication required"
    }, {
      status: 401
    });
  } else
  /* istanbul ignore next */
  {
    cov_h10jxyh9u().b[2][1]++;
  }
  // Get user to check specific permissions
  const user =
  /* istanbul ignore next */
  (cov_h10jxyh9u().s[10]++, await (0, _authService.getUserFromToken)(token));
  /* istanbul ignore next */
  cov_h10jxyh9u().s[11]++;
  if (!user) {
    /* istanbul ignore next */
    cov_h10jxyh9u().b[3][0]++;
    cov_h10jxyh9u().s[12]++;
    return _server.NextResponse.json({
      success: false,
      message: "Invalid token"
    }, {
      status: 401
    });
  } else
  /* istanbul ignore next */
  {
    cov_h10jxyh9u().b[3][1]++;
  }
  // Allow Shop Staff to view any shop's inventory for transfers
  const isShopStaff =
  /* istanbul ignore next */
  (cov_h10jxyh9u().s[13]++, user.roleName?.toLowerCase() === "shop staff");
  // Check if user has any inventory view permission
  const hasAllPermissions =
  /* istanbul ignore next */
  (cov_h10jxyh9u().s[14]++, user.permissions?.includes("ALL"));
  const hasBasicView =
  /* istanbul ignore next */
  (cov_h10jxyh9u().s[15]++, user.permissions?.includes("inventory:view:basic"));
  const hasFullView =
  /* istanbul ignore next */
  (cov_h10jxyh9u().s[16]++, user.permissions?.includes("inventory:view"));
  // Pass if user is shop staff, otherwise check permissions
  /* istanbul ignore next */
  cov_h10jxyh9u().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_h10jxyh9u().b[5][0]++, !isShopStaff) &&
  /* istanbul ignore next */
  (cov_h10jxyh9u().b[5][1]++, !hasAllPermissions) &&
  /* istanbul ignore next */
  (cov_h10jxyh9u().b[5][2]++, !hasBasicView) &&
  /* istanbul ignore next */
  (cov_h10jxyh9u().b[5][3]++, !hasFullView)) {
    /* istanbul ignore next */
    cov_h10jxyh9u().b[4][0]++;
    cov_h10jxyh9u().s[18]++;
    return _server.NextResponse.json({
      success: false,
      message: "Permission denied: inventory view access required"
    }, {
      status: 403
    });
  } else
  /* istanbul ignore next */
  {
    cov_h10jxyh9u().b[4][1]++;
  }
  // Determine if costs should be included (never for shop staff in this view)
  const includeCosts =
  /* istanbul ignore next */
  (cov_h10jxyh9u().s[19]++,
  /* istanbul ignore next */
  (cov_h10jxyh9u().b[6][0]++, !isShopStaff) && (
  /* istanbul ignore next */
  (cov_h10jxyh9u().b[6][1]++, hasAllPermissions) ||
  /* istanbul ignore next */
  (cov_h10jxyh9u().b[6][2]++, hasFullView) &&
  /* istanbul ignore next */
  (cov_h10jxyh9u().b[6][3]++, !hasBasicView)));
  /* istanbul ignore next */
  cov_h10jxyh9u().s[20]++;
  try {
    // Await params before using its properties
    const resolvedParams =
    /* istanbul ignore next */
    (cov_h10jxyh9u().s[21]++, await params);
    // Get the shop ID safely
    /* istanbul ignore next */
    cov_h10jxyh9u().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_h10jxyh9u().b[8][0]++, !resolvedParams) ||
    /* istanbul ignore next */
    (cov_h10jxyh9u().b[8][1]++, !resolvedParams.id)) {
      /* istanbul ignore next */
      cov_h10jxyh9u().b[7][0]++;
      cov_h10jxyh9u().s[23]++;
      return _server.NextResponse.json({
        success: false,
        message: "Shop ID is required"
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_h10jxyh9u().b[7][1]++;
    }
    const shopId =
    /* istanbul ignore next */
    (cov_h10jxyh9u().s[24]++, resolvedParams.id);
    // Get inventory items for the shop with conditional cost inclusion
    const costField =
    /* istanbul ignore next */
    (cov_h10jxyh9u().s[25]++, includeCosts ?
    /* istanbul ignore next */
    (cov_h10jxyh9u().b[9][0]++, "i.shopspecificcost,") :
    /* istanbul ignore next */
    (cov_h10jxyh9u().b[9][1]++, ""));
    const result =
    /* istanbul ignore next */
    (cov_h10jxyh9u().s[26]++, await _db.default.query(`SELECT 
                i.id,
                i."productId",
                i.quantity,
                p.id AS product_id,
                p.name AS product_name,
                p.description,
                p.sku,
                p.barcode,
                p.price,
                ${costField}
                c.name AS category_name
            FROM 
                "InventoryItem" i
            JOIN 
                "Product" p ON i."productId" = p.id
            LEFT JOIN 
                "Category" c ON p."categoryId" = c.id
            WHERE 
                i."shopId" = $1
            ORDER BY
                p.name`, [shopId]));
    /* istanbul ignore next */
    cov_h10jxyh9u().s[27]++;
    return _server.NextResponse.json({
      success: true,
      data: result.rows
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_h10jxyh9u().s[28]++;
    // Log the error
    console.error(`Error fetching shop inventory:`, error);
    /* istanbul ignore next */
    cov_h10jxyh9u().s[29]++;
    return _server.NextResponse.json({
      success: false,
      message: "Failed to fetch shop inventory",
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_h10jxyh9u().b[10][0]++, error.message) :
      /* istanbul ignore next */
      (cov_h10jxyh9u().b[10][1]++, String(error))
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJHRVQiLCJyZXEiLCJwYXJhbXMiLCJjb3ZfaDEwanh5aDl1IiwiZiIsInRva2VuIiwicyIsImhlYWRlcnMiLCJnZXQiLCJyZXBsYWNlIiwiYiIsIl9zZXJ2ZXIiLCJOZXh0UmVzcG9uc2UiLCJqc29uIiwic3VjY2VzcyIsIm1lc3NhZ2UiLCJzdGF0dXMiLCJ1c2VyIiwiX2F1dGhTZXJ2aWNlIiwiZ2V0VXNlckZyb21Ub2tlbiIsImlzU2hvcFN0YWZmIiwicm9sZU5hbWUiLCJ0b0xvd2VyQ2FzZSIsImhhc0FsbFBlcm1pc3Npb25zIiwicGVybWlzc2lvbnMiLCJpbmNsdWRlcyIsImhhc0Jhc2ljVmlldyIsImhhc0Z1bGxWaWV3IiwiaW5jbHVkZUNvc3RzIiwicmVzb2x2ZWRQYXJhbXMiLCJpZCIsInNob3BJZCIsImNvc3RGaWVsZCIsInJlc3VsdCIsIl9kYiIsImRlZmF1bHQiLCJxdWVyeSIsImRhdGEiLCJyb3dzIiwiZXJyb3IiLCJjb25zb2xlIiwiRXJyb3IiLCJTdHJpbmciXSwic291cmNlcyI6WyIvVXNlcnMvc2FjaGluL0RvY3VtZW50cy9tZC1zcG9ydHMtL3NyYy9hcHAvYXBpL2ludmVudG9yeS9zaG9wL1tpZF0vcm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcbmltcG9ydCB7IHJlcXVpcmVQZXJtaXNzaW9uIH0gZnJvbSAnQC9saWIvdXRpbHMvbWlkZGxld2FyZSc7XG5pbXBvcnQgeyBnZXRVc2VyRnJvbVRva2VuIH0gZnJvbSAnQC9zZXJ2aWNlcy9hdXRoU2VydmljZSc7XG5pbXBvcnQgZGIgZnJvbSAnQC91dGlscy9kYic7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQoXG4gICAgcmVxOiBOZXh0UmVxdWVzdCxcbiAgICB7IHBhcmFtcyB9OiB7IHBhcmFtczogUHJvbWlzZTx7IGlkOiBzdHJpbmcgfT4gfVxuKSB7XG4gICAgLy8gQ2hlY2sgZm9yIGludmVudG9yeSB2aWV3IHBlcm1pc3Npb25zXG4gICAgY29uc3QgdG9rZW4gPSByZXEuaGVhZGVycy5nZXQoJ2F1dGhvcml6YXRpb24nKT8ucmVwbGFjZSgnQmVhcmVyICcsICcnKTtcbiAgICBcbiAgICBpZiAoIXRva2VuKSB7XG4gICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdBdXRoZW50aWNhdGlvbiByZXF1aXJlZCdcbiAgICAgICAgfSwgeyBzdGF0dXM6IDQwMSB9KTtcbiAgICB9XG5cbiAgICAvLyBHZXQgdXNlciB0byBjaGVjayBzcGVjaWZpYyBwZXJtaXNzaW9uc1xuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBnZXRVc2VyRnJvbVRva2VuKHRva2VuKTtcbiAgICBpZiAoIXVzZXIpIHtcbiAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgbWVzc2FnZTogJ0ludmFsaWQgdG9rZW4nXG4gICAgICAgIH0sIHsgc3RhdHVzOiA0MDEgfSk7XG4gICAgfVxuXG4gICAgLy8gQWxsb3cgU2hvcCBTdGFmZiB0byB2aWV3IGFueSBzaG9wJ3MgaW52ZW50b3J5IGZvciB0cmFuc2ZlcnNcbiAgICBjb25zdCBpc1Nob3BTdGFmZiA9IHVzZXIucm9sZU5hbWU/LnRvTG93ZXJDYXNlKCkgPT09ICdzaG9wIHN0YWZmJztcblxuICAgIC8vIENoZWNrIGlmIHVzZXIgaGFzIGFueSBpbnZlbnRvcnkgdmlldyBwZXJtaXNzaW9uXG4gICAgY29uc3QgaGFzQWxsUGVybWlzc2lvbnMgPSB1c2VyLnBlcm1pc3Npb25zPy5pbmNsdWRlcygnQUxMJyk7XG4gICAgY29uc3QgaGFzQmFzaWNWaWV3ID0gdXNlci5wZXJtaXNzaW9ucz8uaW5jbHVkZXMoJ2ludmVudG9yeTp2aWV3OmJhc2ljJyk7XG4gICAgY29uc3QgaGFzRnVsbFZpZXcgPSB1c2VyLnBlcm1pc3Npb25zPy5pbmNsdWRlcygnaW52ZW50b3J5OnZpZXcnKTtcbiAgICBcbiAgICAvLyBQYXNzIGlmIHVzZXIgaXMgc2hvcCBzdGFmZiwgb3RoZXJ3aXNlIGNoZWNrIHBlcm1pc3Npb25zXG4gICAgaWYgKCFpc1Nob3BTdGFmZiAmJiAhaGFzQWxsUGVybWlzc2lvbnMgJiYgIWhhc0Jhc2ljVmlldyAmJiAhaGFzRnVsbFZpZXcpIHtcbiAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgbWVzc2FnZTogJ1Blcm1pc3Npb24gZGVuaWVkOiBpbnZlbnRvcnkgdmlldyBhY2Nlc3MgcmVxdWlyZWQnXG4gICAgICAgIH0sIHsgc3RhdHVzOiA0MDMgfSk7XG4gICAgfVxuXG4gICAgLy8gRGV0ZXJtaW5lIGlmIGNvc3RzIHNob3VsZCBiZSBpbmNsdWRlZCAobmV2ZXIgZm9yIHNob3Agc3RhZmYgaW4gdGhpcyB2aWV3KVxuICAgIGNvbnN0IGluY2x1ZGVDb3N0cyA9ICFpc1Nob3BTdGFmZiAmJiAoaGFzQWxsUGVybWlzc2lvbnMgfHwgKGhhc0Z1bGxWaWV3ICYmICFoYXNCYXNpY1ZpZXcpKTtcblxuICAgIHRyeSB7XG4gICAgICAgIC8vIEF3YWl0IHBhcmFtcyBiZWZvcmUgdXNpbmcgaXRzIHByb3BlcnRpZXNcbiAgICAgICAgY29uc3QgcmVzb2x2ZWRQYXJhbXMgPSBhd2FpdCBwYXJhbXM7XG4gICAgICAgIFxuICAgICAgICAvLyBHZXQgdGhlIHNob3AgSUQgc2FmZWx5XG4gICAgICAgIGlmICghcmVzb2x2ZWRQYXJhbXMgfHwgIXJlc29sdmVkUGFyYW1zLmlkKSB7XG4gICAgICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdTaG9wIElEIGlzIHJlcXVpcmVkJyxcbiAgICAgICAgICAgIH0sIHsgc3RhdHVzOiA0MDAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBzaG9wSWQgPSByZXNvbHZlZFBhcmFtcy5pZDtcblxuICAgICAgICAvLyBHZXQgaW52ZW50b3J5IGl0ZW1zIGZvciB0aGUgc2hvcCB3aXRoIGNvbmRpdGlvbmFsIGNvc3QgaW5jbHVzaW9uXG4gICAgICAgIGNvbnN0IGNvc3RGaWVsZCA9IGluY2x1ZGVDb3N0cyA/ICdpLnNob3BzcGVjaWZpY2Nvc3QsJyA6ICcnO1xuICAgICAgICBcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZGIucXVlcnkoXG4gICAgICAgICAgICBgU0VMRUNUIFxuICAgICAgICAgICAgICAgIGkuaWQsXG4gICAgICAgICAgICAgICAgaS5cInByb2R1Y3RJZFwiLFxuICAgICAgICAgICAgICAgIGkucXVhbnRpdHksXG4gICAgICAgICAgICAgICAgcC5pZCBBUyBwcm9kdWN0X2lkLFxuICAgICAgICAgICAgICAgIHAubmFtZSBBUyBwcm9kdWN0X25hbWUsXG4gICAgICAgICAgICAgICAgcC5kZXNjcmlwdGlvbixcbiAgICAgICAgICAgICAgICBwLnNrdSxcbiAgICAgICAgICAgICAgICBwLmJhcmNvZGUsXG4gICAgICAgICAgICAgICAgcC5wcmljZSxcbiAgICAgICAgICAgICAgICAke2Nvc3RGaWVsZH1cbiAgICAgICAgICAgICAgICBjLm5hbWUgQVMgY2F0ZWdvcnlfbmFtZVxuICAgICAgICAgICAgRlJPTSBcbiAgICAgICAgICAgICAgICBcIkludmVudG9yeUl0ZW1cIiBpXG4gICAgICAgICAgICBKT0lOIFxuICAgICAgICAgICAgICAgIFwiUHJvZHVjdFwiIHAgT04gaS5cInByb2R1Y3RJZFwiID0gcC5pZFxuICAgICAgICAgICAgTEVGVCBKT0lOIFxuICAgICAgICAgICAgICAgIFwiQ2F0ZWdvcnlcIiBjIE9OIHAuXCJjYXRlZ29yeUlkXCIgPSBjLmlkXG4gICAgICAgICAgICBXSEVSRSBcbiAgICAgICAgICAgICAgICBpLlwic2hvcElkXCIgPSAkMVxuICAgICAgICAgICAgT1JERVIgQllcbiAgICAgICAgICAgICAgICBwLm5hbWVgLFxuICAgICAgICAgICAgW3Nob3BJZF1cbiAgICAgICAgKTtcblxuICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgICAgIGRhdGE6IHJlc3VsdC5yb3dzXG4gICAgICAgIH0pO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIC8vIExvZyB0aGUgZXJyb3JcbiAgICAgICAgY29uc29sZS5lcnJvcihgRXJyb3IgZmV0Y2hpbmcgc2hvcCBpbnZlbnRvcnk6YCwgZXJyb3IpO1xuICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICBtZXNzYWdlOiAnRmFpbGVkIHRvIGZldGNoIHNob3AgaW52ZW50b3J5JyxcbiAgICAgICAgICAgIGVycm9yOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6IFN0cmluZyhlcnJvcilcbiAgICAgICAgfSwgeyBzdGF0dXM6IDUwMCB9KTtcbiAgICB9XG59Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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QUUsR0FBRTtNQUFBO01BQUEzQixhQUFBLEdBQUFPLENBQUE7TUFBQVAsYUFBQSxHQUFBRyxDQUFBO01BQ3ZDLE9BQU9LLE9BQUEsQ0FBQUMsWUFBWSxDQUFDQyxJQUFJLENBQUM7UUFDckJDLE9BQUEsRUFBUztRQUNUQyxPQUFBLEVBQVM7TUFDYixHQUFHO1FBQUVDLE1BQUEsRUFBUTtNQUFJO0lBQ3JCO0lBQUE7SUFBQTtNQUFBYixhQUFBLEdBQUFPLENBQUE7SUFBQTtJQUVBLE1BQU1xQixNQUFBO0lBQUE7SUFBQSxDQUFBNUIsYUFBQSxHQUFBRyxDQUFBLFFBQVN1QixjQUFBLENBQWVDLEVBQUU7SUFFaEM7SUFDQSxNQUFNRSxTQUFBO0lBQUE7SUFBQSxDQUFBN0IsYUFBQSxHQUFBRyxDQUFBLFFBQVlzQixZQUFBO0lBQUE7SUFBQSxDQUFBekIsYUFBQSxHQUFBTyxDQUFBLFVBQWU7SUFBQTtJQUFBLENBQUFQLGFBQUEsR0FBQU8sQ0FBQSxVQUF3QjtJQUV6RCxNQUFNdUIsTUFBQTtJQUFBO0lBQUEsQ0FBQTlCLGFBQUEsR0FBQUcsQ0FBQSxRQUFTLE1BQU00QixHQUFBLENBQUFDLE9BQUUsQ0FBQ0MsS0FBSyxDQUN6Qjs7Ozs7Ozs7OztrQkFVTUosU0FBQTs7Ozs7Ozs7Ozs7dUJBV0ssRUFDWCxDQUFDRCxNQUFBLENBQU87SUFBQTtJQUFBNUIsYUFBQSxHQUFBRyxDQUFBO0lBR1osT0FBT0ssT0FBQSxDQUFBQyxZQUFZLENBQUNDLElBQUksQ0FBQztNQUNyQkMsT0FBQSxFQUFTO01BQ1R1QixJQUFBLEVBQU1KLE1BQUEsQ0FBT0s7SUFDakI7RUFDSixFQUFFLE9BQU9DLEtBQUEsRUFBTztJQUFBO0lBQUFwQyxhQUFBLEdBQUFHLENBQUE7SUFDWjtJQUNBa0MsT0FBQSxDQUFRRCxLQUFLLENBQUMsZ0NBQWdDLEVBQUVBLEtBQUE7SUFBQTtJQUFBcEMsYUFBQSxHQUFBRyxDQUFBO0lBQ2hELE9BQU9LLE9BQUEsQ0FBQUMsWUFBWSxDQUFDQyxJQUFJLENBQUM7TUFDckJDLE9BQUEsRUFBUztNQUNUQyxPQUFBLEVBQVM7TUFDVHdCLEtBQUEsRUFBT0EsS0FBQSxZQUFpQkUsS0FBQTtNQUFBO01BQUEsQ0FBQXRDLGFBQUEsR0FBQU8sQ0FBQSxXQUFRNkIsS0FBQSxDQUFNeEIsT0FBTztNQUFBO01BQUEsQ0FBQVosYUFBQSxHQUFBTyxDQUFBLFdBQUdnQyxNQUFBLENBQU9ILEtBQUE7SUFDM0QsR0FBRztNQUFFdkIsTUFBQSxFQUFRO0lBQUk7RUFDckI7QUFDSiIsImlnbm9yZUxpc3QiOltdfQ==