{"version":3,"names":["cov_18k0jaki6r","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","DELETE","GET","dynamic","maxDuration","runtime","perfMonitor","_performance","PerformanceMonitor","CACHE_CONFIG","DASHBOARD_ALL","DASHBOARD_FILTERED","MATERIALIZED_SUMMARY","QUICK_STATS","generateCacheKey","shopId","filters","shopKey","filterKey","JSON","stringify","fetchMaterializedData","cacheKey","cached","_cache","cacheService","get","data","measureAsync","queries","push","_prisma","prisma","$queryRaw","then","result","Number","total_value","inventoryItem","count","where","shop","Promise","resolve","inventoryTransfer","status","OR","fromShopId","toShopId","totalInventoryValue","totalProducts","totalShops","pendingTransfers","all","lastUpdated","Date","set","fetchQuickStats","stats","materializedData","totalValue","fetchOptimizedDashboardData","startDate","endDate","quickMode","fromCache","quickStats","isQuickMode","userId","_auth","getUserIdFromToken","request","Error","user","findUnique","id","select","roleName","permissions","isAdmin","_PermissionService","permissionService","hasPermission","filterUserId","highPriorityQueries","_route","fetchSummaryData","_route5","fetchTransfersData","mediumPriorityQueries","_route1","fetchTotalRetailValueData","_route2","fetchShopsData","lowPriorityQueries","_route3","fetchInventoryDistributionData","_route4","fetchSalesData","console","time","summaryResult","transfersResult","timeEnd","totalRetailValueResult","shopsResult","inventoryResult","salesResult","success","map","item","title","value","formattedValue","trend","trendUp","summaryData","shopPerformance","inventoryDistribution","monthlySales","recentTransfers","errors","filter","e","ttl","warmCache","warmupPromises","commonPeriods","days","months","forEach","period","now","toISOString","split","setDate","getDate","setMonth","getMonth","catch","allSettled","_shopMiddleware","ShopAccessControl","withShopAccess","request1","context","authResult","validateTokenPermission","isValid","_server","NextResponse","json","error","message","searchParams","URL","url","warmup","isFiltered","meta","shopFiltered","log","setImmediate","optimized","timestamp","String","pattern","invalidatePattern"],"sources":["/Users/sachin/Documents/md-sports-/src/app/api/dashboard/optimized/route.ts"],"sourcesContent":["/**\n * Optimized Dashboard API Route with performance enhancements:\n * - Materialized views simulation\n * - Improved caching strategies\n * - Parallel query optimization\n * - Smart cache warming\n * - Performance monitoring\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { fetchSummaryData } from '../summary/route';\nimport { fetchTotalRetailValueData } from '../total-retail-value/route';\nimport { fetchShopsData } from '../shops/route';\nimport { fetchInventoryDistributionData } from '../inventory/route';\nimport { fetchSalesData } from '../sales/route';\nimport { fetchTransfersData } from '../transfers/route';\nimport { cacheService } from '@/lib/cache';\nimport { cache } from '@/lib/cache-vercel';\nimport { ShopAccessControl } from '@/lib/utils/shopMiddleware';\nimport { validateTokenPermission, getUserIdFromToken } from '@/lib/auth';\nimport { PerformanceMonitor } from '@/lib/performance';\nimport { prisma } from '@/lib/prisma';\nimport { permissionService } from '@/lib/services/PermissionService';\n\n// Vercel serverless optimizations\nexport const runtime = 'nodejs';\nexport const dynamic = 'force-dynamic';\nexport const maxDuration = 10;\n\n// Performance monitor instance\nconst perfMonitor = new PerformanceMonitor();\n\n// Cache configuration for optimized dashboard\nconst CACHE_CONFIG = {\n    // Longer TTLs for better performance\n    DASHBOARD_ALL: 300, // 5 minutes\n    DASHBOARD_FILTERED: 180, // 3 minutes\n    MATERIALIZED_SUMMARY: 600, // 10 minutes\n    QUICK_STATS: 120, // 2 minutes\n};\n\n// Materialized view simulation for frequently accessed data\ninterface MaterializedDashboardData {\n    totalInventoryValue: number;\n    totalProducts: number;\n    totalShops: number;\n    pendingTransfers: number;\n    lastUpdated: Date;\n}\n\n// Cache key generators\nfunction generateCacheKey(type: string, shopId?: number | null, filters?: any): string {\n    const shopKey = shopId ? `shop:${shopId}` : 'all';\n    const filterKey = filters ? `:${JSON.stringify(filters)}` : '';\n    return `dashboard:optimized:${type}:${shopKey}${filterKey}`;\n}\n\n// Materialized view data fetcher\nasync function fetchMaterializedData(shopId?: number | null): Promise<MaterializedDashboardData> {\n    const cacheKey = generateCacheKey('materialized', shopId);\n\n    // Check cache first\n    const cached = await cacheService.get(cacheKey);\n    if (cached) {\n        return cached;\n    }\n\n    // Fetch fresh data with optimized queries\n    const data = await perfMonitor.measureAsync(\n        'dashboard:materialized-fetch',\n        async () => {\n            const queries = [];\n\n            // Total inventory value - optimized query\n            queries.push(\n                prisma.$queryRaw`\n                    SELECT COALESCE(SUM(ii.quantity * COALESCE(ii.shopspecificcost, 0)), 0) as total_value\n                    FROM \"InventoryItem\" ii\n                    WHERE ii.quantity > 0 AND ii.shopspecificcost IS NOT NULL AND ii.shopspecificcost > 0\n                    ${shopId ? prisma.$queryRaw`AND ii.\"shopId\" = ${shopId}` : prisma.$queryRaw``}\n                `.then((result: any) => Number(result[0]?.total_value || 0))\n            );\n\n            // Total products count\n            queries.push(\n                prisma.inventoryItem.count({\n                    where: shopId ? { shopId } : undefined\n                })\n            );\n\n            // Total shops count (only if not filtered by shop)\n            if (!shopId) {\n                queries.push(prisma.shop.count());\n            } else {\n                queries.push(Promise.resolve(1));\n            }\n\n            // Pending transfers count\n            queries.push(\n                prisma.inventoryTransfer.count({\n                    where: {\n                        status: 'pending',\n                        ...(shopId && {\n                            OR: [\n                                { fromShopId: shopId },\n                                { toShopId: shopId }\n                            ]\n                        })\n                    }\n                })\n            );\n\n            const [totalInventoryValue, totalProducts, totalShops, pendingTransfers] = await Promise.all(queries);\n\n            return {\n                totalInventoryValue,\n                totalProducts,\n                totalShops,\n                pendingTransfers,\n                lastUpdated: new Date()\n            };\n        },\n        { shopId }\n    );\n\n    // Cache for longer period\n    await cacheService.set(cacheKey, data, CACHE_CONFIG.MATERIALIZED_SUMMARY);\n\n    return data;\n}\n\n// Quick stats fetcher for immediate response\nasync function fetchQuickStats(shopId?: number | null) {\n    const cacheKey = generateCacheKey('quick-stats', shopId);\n\n    const cached = await cacheService.get(cacheKey);\n    if (cached) {\n        return cached;\n    }\n\n    const stats = await perfMonitor.measureAsync(\n        'dashboard:quick-stats',\n        async () => {\n            // Fetch only essential data for quick response\n            const materializedData = await fetchMaterializedData(shopId);\n\n            return {\n                totalValue: materializedData.totalInventoryValue,\n                totalProducts: materializedData.totalProducts,\n                pendingTransfers: materializedData.pendingTransfers,\n                lastUpdated: materializedData.lastUpdated\n            };\n        },\n        { shopId }\n    );\n\n    await cacheService.set(cacheKey, stats, CACHE_CONFIG.QUICK_STATS);\n    return stats;\n}\n\n// Optimized data fetcher with intelligent batching\nasync function fetchOptimizedDashboardData(\n    shopId?: number | null,\n    startDate?: string,\n    endDate?: string,\n    quickMode = false\n) {\n    const filters = { startDate, endDate };\n    const cacheKey = generateCacheKey('full', shopId, filters);\n\n    // Check cache first\n    const cached = await cacheService.get(cacheKey);\n    if (cached) {\n        return { ...cached, fromCache: true };\n    }\n\n    if (quickMode) {\n        // Return quick stats for immediate response\n        const quickStats = await fetchQuickStats(shopId);\n        return {\n            quickStats,\n            isQuickMode: true,\n            fromCache: false\n        };\n    }\n\n    // Fetch full data with optimized parallel execution\n    const result = await perfMonitor.measureAsync(\n        'dashboard:optimized-full-fetch',\n        async () => {\n            // Group queries by priority for better resource utilization\n            // Get user ID from token\n            const userId = await getUserIdFromToken(request);\n            if (!userId) {\n                throw new Error('User ID not found in token');\n            }\n\n            // Fetch user details to check role and permissions\n            const user = await prisma.user.findUnique({\n                where: { id: userId },\n                select: {\n                    id: true,\n                    roleName: true,\n                    permissions: true\n                }\n            });\n\n            if (!user) {\n                throw new Error('User not found');\n            }\n\n            // Check if user is admin or has admin permissions\n            const isAdmin = user.roleName === 'Admin' || user.roleName === 'Super Admin' || \n                           await permissionService.hasPermission(user, 'admin:all') || \n                           await permissionService.hasPermission(user, 'ALL');\n\n            // Determine user filtering\n            let filterUserId: string | null = null;\n            if (!isAdmin) {\n                filterUserId = userId;\n            }\n\n            const highPriorityQueries = [\n                fetchSummaryData(shopId, undefined, undefined, undefined, filterUserId),\n                fetchTransfersData(shopId)\n            ];\n\n            const mediumPriorityQueries = [\n                fetchTotalRetailValueData(shopId),\n                fetchShopsData(shopId)\n            ];\n\n            const lowPriorityQueries = [\n                fetchInventoryDistributionData(shopId),\n                fetchSalesData(shopId, undefined, undefined, undefined, filterUserId)\n            ];\n\n            // Execute high priority queries first\n            console.time('high-priority-queries');\n            const [summaryResult, transfersResult] = await Promise.all(highPriorityQueries);\n            console.timeEnd('high-priority-queries');\n\n            // Execute medium priority queries\n            console.time('medium-priority-queries');\n            const [totalRetailValueResult, shopsResult] = await Promise.all(mediumPriorityQueries);\n            console.timeEnd('medium-priority-queries');\n\n            // Execute low priority queries\n            console.time('low-priority-queries');\n            const [inventoryResult, salesResult] = await Promise.all(lowPriorityQueries);\n            console.timeEnd('low-priority-queries');\n\n            // Merge total retail value into summary data\n            if (summaryResult.success && summaryResult.data && totalRetailValueResult.success) {\n                summaryResult.data = summaryResult.data.map(item => {\n                    if (item.title === 'Total Retail Value') {\n                        return {\n                            ...item,\n                            value: totalRetailValueResult.formattedValue,\n                            trend: totalRetailValueResult.trend,\n                            trendUp: totalRetailValueResult.trendUp\n                        };\n                    }\n                    return item;\n                });\n            }\n\n            return {\n                success: true,\n                summaryData: summaryResult.success ? summaryResult.data : null,\n                shopPerformance: shopsResult.success ? shopsResult.data : null,\n                inventoryDistribution: inventoryResult.success ? inventoryResult.data : null,\n                monthlySales: salesResult.success ? salesResult.data : null,\n                recentTransfers: transfersResult.success ? transfersResult.data : null,\n                errors: [\n                    !summaryResult.success ? 'Failed to fetch summary data' : null,\n                    !totalRetailValueResult.success ? 'Failed to fetch total retail value' : null,\n                    !shopsResult.success ? 'Failed to fetch shops data' : null,\n                    !inventoryResult.success ? 'Failed to fetch inventory data' : null,\n                    !salesResult.success ? 'Failed to fetch sales data' : null,\n                    !transfersResult.success ? 'Failed to fetch transfers data' : null,\n                ].filter(e => e !== null),\n                fromCache: false\n            };\n        },\n        { shopId, filters }\n    );\n\n    // Cache with appropriate TTL\n    const ttl = startDate || endDate ? CACHE_CONFIG.DASHBOARD_FILTERED : CACHE_CONFIG.DASHBOARD_ALL;\n    await cacheService.set(cacheKey, result, ttl);\n\n    return result;\n}\n\n// Cache warming function\nasync function warmCache(shopId?: number | null) {\n    const warmupPromises = [];\n\n    // Warm up materialized data\n    warmupPromises.push(fetchMaterializedData(shopId));\n\n    // Warm up quick stats\n    warmupPromises.push(fetchQuickStats(shopId));\n\n    // Warm up common time periods\n    const commonPeriods = [\n        { days: 7 },\n        { days: 30 },\n        { months: 3 }\n    ];\n\n    commonPeriods.forEach(period => {\n        const now = new Date();\n        const endDate = now.toISOString().split('T')[0];\n        let startDate: string;\n\n        if ('days' in period) {\n            startDate = new Date(now.setDate(now.getDate() - period.days)).toISOString().split('T')[0];\n        } else {\n            startDate = new Date(now.setMonth(now.getMonth() - period.months)).toISOString().split('T')[0];\n        }\n\n        warmupPromises.push(\n            fetchOptimizedDashboardData(shopId, startDate, endDate).catch(() => { })\n        );\n    });\n\n    await Promise.allSettled(warmupPromises);\n}\n\nexport const GET = ShopAccessControl.withShopAccess(async (request: NextRequest, context) => {\n    try {\n        const authResult = await validateTokenPermission(request, 'dashboard:view');\n        if (!authResult.isValid) {\n            return NextResponse.json({ error: authResult.message }, { status: 401 });\n        }\n\n        const { searchParams } = new URL(request.url);\n        const startDate = searchParams.get('startDate') || undefined;\n        const endDate = searchParams.get('endDate') || undefined;\n        const quickMode = searchParams.get('quick') === 'true';\n        const warmup = searchParams.get('warmup') === 'true';\n\n        const shopId = context.isFiltered ? context.shopId : null;\n\n        // Handle cache warming request\n        if (warmup) {\n            await warmCache(shopId);\n            return NextResponse.json({\n                success: true,\n                message: 'Cache warmed successfully',\n                meta: {\n                    shopFiltered: context.isFiltered,\n                    shopId: context.shopId\n                }\n            });\n        }\n\n        console.log('🚀 Fetching optimized dashboard data:', {\n            shopId,\n            isFiltered: context.isFiltered,\n            startDate,\n            endDate,\n            quickMode\n        });\n\n        const result = await fetchOptimizedDashboardData(shopId, startDate, endDate, quickMode);\n\n        // Start cache warming in background for next requests\n        if (!result.fromCache) {\n            setImmediate(() => {\n                warmCache(shopId).catch(console.error);\n            });\n        }\n\n        return NextResponse.json({\n            ...result,\n            meta: {\n                shopFiltered: context.isFiltered,\n                shopId: context.shopId,\n                optimized: true,\n                quickMode,\n                timestamp: new Date().toISOString()\n            }\n        });\n\n    } catch (error) {\n        console.error('Error in optimized dashboard API:', error);\n        return NextResponse.json(\n            {\n                success: false,\n                message: 'Failed to load optimized dashboard data',\n                error: error instanceof Error ? error.message : String(error),\n                meta: {\n                    shopFiltered: context.isFiltered,\n                    shopId: context.shopId,\n                    optimized: true\n                }\n            },\n            { status: 500 }\n        );\n    }\n});\n\n// Cache invalidation endpoint\nexport const DELETE = ShopAccessControl.withShopAccess(async (request: NextRequest, context) => {\n    try {\n        const authResult = await validateTokenPermission(request, 'manage_dashboard');\n        if (!authResult.isValid) {\n            return NextResponse.json({ error: authResult.message }, { status: 401 });\n        }\n\n        const shopId = context.isFiltered ? context.shopId : null;\n        const pattern = `dashboard:optimized:*${shopId ? `:shop:${shopId}` : ''}*`;\n\n        await cacheService.invalidatePattern(pattern);\n\n        return NextResponse.json({\n            success: true,\n            message: 'Dashboard cache invalidated successfully',\n            pattern\n        });\n    } catch (error) {\n        console.error('Error invalidating dashboard cache:', error);\n        return NextResponse.json(\n            { error: 'Failed to invalidate cache' },\n            { status: 500 }\n        );\n    }\n});"],"mappings":"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","ignoreList":[]}