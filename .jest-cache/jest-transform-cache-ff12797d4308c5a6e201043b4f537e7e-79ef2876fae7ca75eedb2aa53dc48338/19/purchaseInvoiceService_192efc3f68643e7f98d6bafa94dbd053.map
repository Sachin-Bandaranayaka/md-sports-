{"version":3,"sources":["/Users/sachin/Documents/md-sports-/src/services/purchaseInvoiceService.ts"],"sourcesContent":["import { PrismaClient, PurchaseInvoiceStatus } from '@prisma/client';\nimport { db } from '@/lib/db';\n\ninterface CreatePurchaseInvoiceData {\n  invoiceNumber: string;\n  supplierId: number;\n  totalAmount: number;\n  status: PurchaseInvoiceStatus;\n  notes?: string;\n  shopId?: number;\n}\n\ninterface CreatePurchaseInvoiceWithItemsData extends CreatePurchaseInvoiceData {\n  items: {\n    productId: number;\n    quantity: number;\n    price: number;\n  }[];\n}\n\ninterface UpdatePurchaseInvoiceData {\n  invoiceNumber?: string;\n  supplierId?: number;\n  totalAmount?: number;\n  status?: PurchaseInvoiceStatus;\n  notes?: string;\n}\n\ninterface SearchFilters {\n  supplierId?: number;\n  status?: PurchaseInvoiceStatus;\n  startDate?: Date;\n  endDate?: Date;\n  search?: string;\n}\n\ninterface GetPurchaseInvoicesOptions {\n  page?: number;\n  limit?: number;\n  sortBy?: string;\n  sortOrder?: 'asc' | 'desc';\n}\n\nexport class PurchaseInvoiceService {\n  private prisma: PrismaClient;\n\n  constructor() {\n    this.prisma = db;\n  }\n\n  async createPurchaseInvoice(data: CreatePurchaseInvoiceData) {\n    return await this.prisma.purchaseInvoice.create({\n      data,\n      include: {\n        supplier: true,\n        items: {\n          include: {\n            product: true\n          }\n        }\n      }\n    });\n  }\n\n  async createPurchaseInvoiceWithItems(data: CreatePurchaseInvoiceWithItemsData) {\n    const { items, ...invoiceData } = data;\n    \n    return await this.prisma.$transaction(async (tx) => {\n      const invoice = await tx.purchaseInvoice.create({\n        data: invoiceData\n      });\n\n      if (items && items.length > 0) {\n        await tx.purchaseInvoiceItem.createMany({\n          data: items.map(item => ({\n            purchaseInvoiceId: invoice.id,\n            productId: item.productId,\n            quantity: item.quantity,\n            price: item.price\n          }))\n        });\n      }\n\n      return await tx.purchaseInvoice.findUnique({\n        where: { id: invoice.id },\n        include: {\n          supplier: true,\n          items: {\n            include: {\n              product: true\n            }\n          }\n        }\n      });\n    });\n  }\n\n  async createPurchaseInvoiceWithCalculations(data: CreatePurchaseInvoiceWithItemsData) {\n    // Calculate total from items\n    const calculatedTotal = data.items.reduce((sum, item) => {\n      return sum + (item.quantity * item.price);\n    }, 0);\n\n    return await this.createPurchaseInvoiceWithItems({\n      ...data,\n      totalAmount: calculatedTotal\n    });\n  }\n\n  async getPurchaseInvoiceById(id: number) {\n    return await this.prisma.purchaseInvoice.findUnique({\n      where: { id },\n      include: {\n        supplier: true,\n        items: {\n          include: {\n            product: true\n          }\n        }\n      }\n    });\n  }\n\n  async getPurchaseInvoiceWithDetails(id: number) {\n    return await this.getPurchaseInvoiceById(id);\n  }\n\n  async getPurchaseInvoices(options: GetPurchaseInvoicesOptions = {}) {\n    const { page = 1, limit = 10, sortBy = 'createdAt', sortOrder = 'desc' } = options;\n    const skip = (page - 1) * limit;\n\n    return await this.prisma.purchaseInvoice.findMany({\n      skip,\n      take: limit,\n      orderBy: {\n        [sortBy]: sortOrder\n      },\n      include: {\n        supplier: true,\n        items: {\n          include: {\n            product: true\n          }\n        }\n      }\n    });\n  }\n\n  async updatePurchaseInvoice(id: number, data: UpdatePurchaseInvoiceData) {\n    return await this.prisma.purchaseInvoice.update({\n      where: { id },\n      data,\n      include: {\n        supplier: true,\n        items: {\n          include: {\n            product: true\n          }\n        }\n      }\n    });\n  }\n\n  async updatePurchaseInvoiceStatus(id: number, status: PurchaseInvoiceStatus) {\n    return await this.updatePurchaseInvoice(id, { status });\n  }\n\n  async deletePurchaseInvoice(id: number) {\n    return await this.prisma.$transaction(async (tx) => {\n      // Delete related items first\n      await tx.purchaseInvoiceItem.deleteMany({\n        where: { purchaseInvoiceId: id }\n      });\n\n      // Delete the invoice\n      return await tx.purchaseInvoice.delete({\n        where: { id }\n      });\n    });\n  }\n\n  async searchPurchaseInvoices(filters: SearchFilters) {\n    const where: any = {};\n\n    if (filters.supplierId) {\n      where.supplierId = filters.supplierId;\n    }\n\n    if (filters.status) {\n      where.status = filters.status;\n    }\n\n    if (filters.startDate || filters.endDate) {\n      where.createdAt = {};\n      if (filters.startDate) {\n        where.createdAt.gte = filters.startDate;\n      }\n      if (filters.endDate) {\n        where.createdAt.lte = filters.endDate;\n      }\n    }\n\n    if (filters.search) {\n      where.OR = [\n        {\n          invoiceNumber: {\n            contains: filters.search,\n            mode: 'insensitive'\n          }\n        },\n        {\n          notes: {\n            contains: filters.search,\n            mode: 'insensitive'\n          }\n        }\n      ];\n    }\n\n    return await this.prisma.purchaseInvoice.findMany({\n      where,\n      include: {\n        supplier: true,\n        items: {\n          include: {\n            product: true\n          }\n        }\n      },\n      orderBy: {\n        createdAt: 'desc'\n      }\n    });\n  }\n\n  async approvePurchaseInvoice(id: number) {\n    return await this.updatePurchaseInvoiceStatus(id, PurchaseInvoiceStatus.APPROVED);\n  }\n}\n\nexport default PurchaseInvoiceService;"],"names":["PurchaseInvoiceService","constructor","prisma","db","createPurchaseInvoice","data","purchaseInvoice","create","include","supplier","items","product","createPurchaseInvoiceWithItems","invoiceData","$transaction","tx","invoice","length","purchaseInvoiceItem","createMany","map","item","purchaseInvoiceId","id","productId","quantity","price","findUnique","where","createPurchaseInvoiceWithCalculations","calculatedTotal","reduce","sum","totalAmount","getPurchaseInvoiceById","getPurchaseInvoiceWithDetails","getPurchaseInvoices","options","page","limit","sortBy","sortOrder","skip","findMany","take","orderBy","updatePurchaseInvoice","update","updatePurchaseInvoiceStatus","status","deletePurchaseInvoice","deleteMany","delete","searchPurchaseInvoices","filters","supplierId","startDate","endDate","createdAt","gte","lte","search","OR","invoiceNumber","contains","mode","notes","approvePurchaseInvoice","PurchaseInvoiceStatus","APPROVED"],"mappings":"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"}