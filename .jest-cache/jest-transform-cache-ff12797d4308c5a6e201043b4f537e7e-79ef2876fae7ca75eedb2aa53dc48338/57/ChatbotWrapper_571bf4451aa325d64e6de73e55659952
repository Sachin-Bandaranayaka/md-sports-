144dd97e3c4a228b8751b73ace700092
"use client";
"use strict";

/* istanbul ignore next */
function cov_2brtcdi8wm() {
  var path = "/Users/sachin/Documents/md-sports-/src/components/chatbot/ChatbotWrapper.tsx";
  var hash = "5d5e39211b7740177213151cf8e79f6a10ce3a9a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/sachin/Documents/md-sports-/src/components/chatbot/ChatbotWrapper.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 30
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 31
        },
        end: {
          line: 14,
          column: 80
        }
      },
      "6": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 15,
          column: 44
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 6
        }
      },
      "8": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 51
        }
      },
      "9": {
        start: {
          line: 22,
          column: 39
        },
        end: {
          line: 22,
          column: 51
        }
      },
      "10": {
        start: {
          line: 23,
          column: 28
        },
        end: {
          line: 23,
          column: 41
        }
      },
      "11": {
        start: {
          line: 24,
          column: 27
        },
        end: {
          line: 24,
          column: 40
        }
      },
      "12": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 27,
          column: 20
        }
      },
      "13": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 66
        }
      },
      "14": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "15": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 19
        }
      },
      "16": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "17": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 36,
          column: 10
        }
      },
      "18": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 53
        }
      },
      "19": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "20": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 30
        }
      },
      "21": {
        start: {
          line: 42,
          column: 17
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "22": {
        start: {
          line: 45,
          column: 32
        },
        end: {
          line: 45,
          column: 88
        }
      },
      "23": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "24": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "25": {
        start: {
          line: 48,
          column: 23
        },
        end: {
          line: 48,
          column: 95
        }
      },
      "26": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 53,
          column: 13
        }
      },
      "27": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 57
        }
      },
      "28": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 39
        }
      },
      "29": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 25
        }
      },
      "30": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "31": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 31
        }
      },
      "32": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 18
        }
      },
      "33": {
        start: {
          line: 63,
          column: 23
        },
        end: {
          line: 75,
          column: 2
        }
      },
      "34": {
        start: {
          line: 63,
          column: 49
        },
        end: {
          line: 65,
          column: 11
        }
      },
      "35": {
        start: {
          line: 63,
          column: 90
        },
        end: {
          line: 63,
          column: 137
        }
      },
      "36": {
        start: {
          line: 63,
          column: 152
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "37": {
        start: {
          line: 67,
          column: 21
        },
        end: {
          line: 69,
          column: 13
        }
      },
      "38": {
        start: {
          line: 72,
          column: 17
        },
        end: {
          line: 72,
          column: 21
        }
      },
      "39": {
        start: {
          line: 77,
          column: 38
        },
        end: {
          line: 77,
          column: 64
        }
      },
      "40": {
        start: {
          line: 78,
          column: 38
        },
        end: {
          line: 78,
          column: 64
        }
      },
      "41": {
        start: {
          line: 79,
          column: 42
        },
        end: {
          line: 79,
          column: 69
        }
      },
      "42": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 114,
          column: 11
        }
      },
      "43": {
        start: {
          line: 82,
          column: 36
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "44": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 109,
          column: 13
        }
      },
      "45": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 84,
          column: 35
        }
      },
      "46": {
        start: {
          line: 86,
          column: 33
        },
        end: {
          line: 89,
          column: 18
        }
      },
      "47": {
        start: {
          line: 90,
          column: 29
        },
        end: {
          line: 90,
          column: 50
        }
      },
      "48": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 102,
          column: 17
        }
      },
      "49": {
        start: {
          line: 93,
          column: 20
        },
        end: {
          line: 98,
          column: 21
        }
      },
      "50": {
        start: {
          line: 94,
          column: 47
        },
        end: {
          line: 94,
          column: 114
        }
      },
      "51": {
        start: {
          line: 94,
          column: 77
        },
        end: {
          line: 94,
          column: 113
        }
      },
      "52": {
        start: {
          line: 95,
          column: 24
        },
        end: {
          line: 95,
          column: 71
        }
      },
      "53": {
        start: {
          line: 97,
          column: 24
        },
        end: {
          line: 97,
          column: 69
        }
      },
      "54": {
        start: {
          line: 101,
          column: 20
        },
        end: {
          line: 101,
          column: 39
        }
      },
      "55": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 74
        }
      },
      "56": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 106,
          column: 35
        }
      },
      "57": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 36
        }
      },
      "58": {
        start: {
          line: 112,
          column: 22
        },
        end: {
          line: 112,
          column: 59
        }
      },
      "59": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 39
        }
      },
      "60": {
        start: {
          line: 113,
          column: 19
        },
        end: {
          line: 113,
          column: 38
        }
      },
      "61": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "62": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 20
        }
      },
      "63": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "64": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 128,
          column: 11
        }
      },
      "65": {
        start: {
          line: 122,
          column: 25
        },
        end: {
          line: 122,
          column: 45
        }
      },
      "66": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 133,
          column: 7
        }
      },
      "67": {
        start: {
          line: 132,
          column: 21
        },
        end: {
          line: 132,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 33
          }
        },
        loc: {
          start: {
            line: 16,
            column: 39
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 33
          }
        },
        loc: {
          start: {
            line: 21,
            column: 47
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 39
          },
          end: {
            line: 25,
            column: 40
          }
        },
        loc: {
          start: {
            line: 25,
            column: 61
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "4": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 34
          }
        },
        loc: {
          start: {
            line: 29,
            column: 53
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 63,
            column: 45
          },
          end: {
            line: 63,
            column: 46
          }
        },
        loc: {
          start: {
            line: 63,
            column: 49
          },
          end: {
            line: 65,
            column: 11
          }
        },
        line: 63
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 63,
            column: 72
          },
          end: {
            line: 63,
            column: 73
          }
        },
        loc: {
          start: {
            line: 63,
            column: 90
          },
          end: {
            line: 63,
            column: 137
          }
        },
        line: 63
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 63,
            column: 144
          },
          end: {
            line: 63,
            column: 145
          }
        },
        loc: {
          start: {
            line: 63,
            column: 152
          },
          end: {
            line: 65,
            column: 9
          }
        },
        line: 63
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 67,
            column: 17
          },
          end: {
            line: 67,
            column: 18
          }
        },
        loc: {
          start: {
            line: 67,
            column: 21
          },
          end: {
            line: 69,
            column: 13
          }
        },
        line: 67
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 72,
            column: 13
          },
          end: {
            line: 72,
            column: 14
          }
        },
        loc: {
          start: {
            line: 72,
            column: 17
          },
          end: {
            line: 72,
            column: 21
          }
        },
        line: 72
      },
      "10": {
        name: "ChatbotWrapper",
        decl: {
          start: {
            line: 76,
            column: 9
          },
          end: {
            line: 76,
            column: 23
          }
        },
        loc: {
          start: {
            line: 76,
            column: 26
          },
          end: {
            line: 134,
            column: 1
          }
        },
        line: 76
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 81,
            column: 26
          },
          end: {
            line: 81,
            column: 27
          }
        },
        loc: {
          start: {
            line: 81,
            column: 30
          },
          end: {
            line: 114,
            column: 5
          }
        },
        line: 81
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 82,
            column: 36
          },
          end: {
            line: 82,
            column: 37
          }
        },
        loc: {
          start: {
            line: 82,
            column: 46
          },
          end: {
            line: 110,
            column: 9
          }
        },
        line: 82
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 94,
            column: 66
          },
          end: {
            line: 94,
            column: 67
          }
        },
        loc: {
          start: {
            line: 94,
            column: 77
          },
          end: {
            line: 94,
            column: 113
          }
        },
        line: 94
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 113,
            column: 15
          },
          end: {
            line: 113,
            column: 16
          }
        },
        loc: {
          start: {
            line: 113,
            column: 19
          },
          end: {
            line: 113,
            column: 38
          }
        },
        line: 113
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 122,
            column: 21
          },
          end: {
            line: 122,
            column: 22
          }
        },
        loc: {
          start: {
            line: 122,
            column: 25
          },
          end: {
            line: 122,
            column: 45
          }
        },
        line: 122
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 132,
            column: 17
          },
          end: {
            line: 132,
            column: 18
          }
        },
        loc: {
          start: {
            line: 132,
            column: 21
          },
          end: {
            line: 132,
            column: 42
          }
        },
        line: 132
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 35
          },
          end: {
            line: 17,
            column: 38
          }
        }, {
          start: {
            line: 17,
            column: 41
          },
          end: {
            line: 19,
            column: 5
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 14
          }
        }, {
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 17,
            column: 32
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 26,
            column: 15
          },
          end: {
            line: 26,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 29
          },
          end: {
            line: 26,
            column: 45
          }
        }, {
          start: {
            line: 26,
            column: 48
          },
          end: {
            line: 26,
            column: 65
          }
        }],
        line: 26
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 20
          }
        }, {
          start: {
            line: 30,
            column: 24
          },
          end: {
            line: 30,
            column: 27
          }
        }, {
          start: {
            line: 30,
            column: 31
          },
          end: {
            line: 30,
            column: 45
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "7": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 20
          }
        }, {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 33,
            column: 47
          }
        }, {
          start: {
            line: 33,
            column: 51
          },
          end: {
            line: 33,
            column: 76
          }
        }],
        line: 33
      },
      "8": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "9": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 13
          }
        }, {
          start: {
            line: 39,
            column: 17
          },
          end: {
            line: 39,
            column: 31
          }
        }],
        line: 39
      },
      "10": {
        loc: {
          start: {
            line: 45,
            column: 32
          },
          end: {
            line: 45,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 32
          },
          end: {
            line: 45,
            column: 53
          }
        }, {
          start: {
            line: 45,
            column: 57
          },
          end: {
            line: 45,
            column: 88
          }
        }],
        line: 45
      },
      "11": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "12": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 29
          }
        }, {
          start: {
            line: 47,
            column: 33
          },
          end: {
            line: 47,
            column: 79
          }
        }],
        line: 47
      },
      "13": {
        loc: {
          start: {
            line: 48,
            column: 23
          },
          end: {
            line: 48,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 47
          },
          end: {
            line: 48,
            column: 88
          }
        }, {
          start: {
            line: 48,
            column: 91
          },
          end: {
            line: 48,
            column: 95
          }
        }],
        line: 48
      },
      "14": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        }, {
          start: {
            line: 51,
            column: 19
          },
          end: {
            line: 53,
            column: 13
          }
        }],
        line: 49
      },
      "15": {
        loc: {
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 49,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 49,
            column: 20
          }
        }, {
          start: {
            line: 49,
            column: 25
          },
          end: {
            line: 49,
            column: 33
          }
        }, {
          start: {
            line: 49,
            column: 37
          },
          end: {
            line: 49,
            column: 45
          }
        }],
        line: 49
      },
      "16": {
        loc: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "17": {
        loc: {
          start: {
            line: 91,
            column: 16
          },
          end: {
            line: 102,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 16
          },
          end: {
            line: 102,
            column: 17
          }
        }, {
          start: {
            line: 99,
            column: 23
          },
          end: {
            line: 102,
            column: 17
          }
        }],
        line: 91
      },
      "18": {
        loc: {
          start: {
            line: 91,
            column: 20
          },
          end: {
            line: 91,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 20
          },
          end: {
            line: 91,
            column: 32
          }
        }, {
          start: {
            line: 91,
            column: 36
          },
          end: {
            line: 91,
            column: 49
          }
        }],
        line: 91
      },
      "19": {
        loc: {
          start: {
            line: 93,
            column: 20
          },
          end: {
            line: 98,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 20
          },
          end: {
            line: 98,
            column: 21
          }
        }, {
          start: {
            line: 96,
            column: 27
          },
          end: {
            line: 98,
            column: 21
          }
        }],
        line: 93
      },
      "20": {
        loc: {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "21": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 116,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 116,
            column: 17
          }
        }, {
          start: {
            line: 116,
            column: 21
          },
          end: {
            line: 116,
            column: 31
          }
        }],
        line: 116
      },
      "22": {
        loc: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/sachin/Documents/md-sports-/src/components/chatbot/ChatbotWrapper.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState, useEffect } from 'react';\nimport dynamic from 'next/dynamic';\nimport { MessageSquare } from 'lucide-react';\n\n// Dynamically import the Chatbot component with client-side only rendering and no preloading\nconst DynamicChatbot = dynamic(\n    () => import('./Chatbot').then(mod => ({ default: mod.Chatbot })),\n    {\n        ssr: false,\n        loading: () => null,\n        // Setting suspense to true ensures it doesn't preload\n        suspense: true\n    }\n);\n\nexport function ChatbotWrapper() {\n    const [isEnabled, setIsEnabled] = useState<boolean | null>(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [showChatbot, setShowChatbot] = useState(false);\n\n    // Check if chatbot is enabled\n    useEffect(() => {\n        const checkChatbotEnabled = async () => {\n            try {\n                setIsLoading(true);\n                // Use a lightweight check for settings initially\n                const response = await fetch('/api/settings?key=ai_chatbot_enabled', {\n                    priority: 'low', // Set low priority so it doesn't block other resources\n                    cache: 'force-cache' // Try using cached results if available\n                });\n                const data = await response.json();\n\n                if (data.success && data.settings) {\n                    // Handle both array and single key responses\n                    if (Array.isArray(data.settings)) {\n                        const chatbotSetting = data.settings.find((setting: { key: string }) =>\n                            setting.key === 'ai_chatbot_enabled'\n                        );\n                        setIsEnabled(chatbotSetting?.value === 'true');\n                    } else {\n                        setIsEnabled(data.settings.value === 'true');\n                    }\n                } else {\n                    // Default to enabled if can't fetch settings\n                    setIsEnabled(true);\n                }\n            } catch (error) {\n                console.error('Failed to check chatbot settings:', error);\n                // Default to enabled if there's an error\n                setIsEnabled(true);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        // Delay the check to prioritize page content loading\n        const timer = setTimeout(checkChatbotEnabled, 2000);\n        return () => clearTimeout(timer);\n    }, []);\n\n    // Don't render anything while checking settings or if disabled\n    if (isLoading || !isEnabled) {\n        return null;\n    }\n\n    // Render only the button if chatbot is not open\n    if (!showChatbot) {\n        return (\n            <button\n                onClick={() => setShowChatbot(true)}\n                className=\"fixed bottom-6 right-6 p-4 bg-primary text-white rounded-full shadow-lg hover:bg-primary-700 transition-colors\"\n                aria-label=\"Open chatbot\"\n            >\n                <MessageSquare size={24} />\n            </button>\n        );\n    }\n\n    // Only render the full chatbot when it's needed\n    return (\n        <DynamicChatbot onClose={() => setShowChatbot(false)} />\n    );\n} "],
      names: ["ChatbotWrapper", "DynamicChatbot", "dynamic", "then", "mod", "default", "Chatbot", "ssr", "loading", "suspense", "isEnabled", "setIsEnabled", "useState", "isLoading", "setIsLoading", "showChatbot", "setShowChatbot", "useEffect", "checkChatbotEnabled", "response", "fetch", "priority", "cache", "data", "json", "success", "settings", "Array", "isArray", "chatbotSetting", "find", "setting", "key", "value", "error", "console", "timer", "setTimeout", "clearTimeout", "button", "onClick", "className", "aria-label", "MessageSquare", "size", "onClose"],
      mappings: "AAAA;;;;;+BAiBgBA;;;eAAAA;;;;uBAfoB;gEAChB;6BACU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE9B,6FAA6F;AAC7F,MAAMC,iBAAiBC,IAAAA,gBAAO,EAC1B,IAAM,mEAAA,QAAO,eAAaC,IAAI,CAACC,CAAAA,MAAQ,CAAA;YAAEC,SAASD,IAAIE,OAAO;QAAC,CAAA;;;;;;IAE1DC,KAAK;IACLC,SAAS,IAAM;IACf,sDAAsD;IACtDC,UAAU;;AAIX,SAAST;IACZ,MAAM,CAACU,WAAWC,aAAa,GAAGC,IAAAA,eAAQ,EAAiB;IAC3D,MAAM,CAACC,WAAWC,aAAa,GAAGF,IAAAA,eAAQ,EAAC;IAC3C,MAAM,CAACG,aAAaC,eAAe,GAAGJ,IAAAA,eAAQ,EAAC;IAE/C,8BAA8B;IAC9BK,IAAAA,gBAAS,EAAC;QACN,MAAMC,sBAAsB;YACxB,IAAI;gBACAJ,aAAa;gBACb,iDAAiD;gBACjD,MAAMK,WAAW,MAAMC,MAAM,wCAAwC;oBACjEC,UAAU;oBACVC,OAAO,cAAc,wCAAwC;gBACjE;gBACA,MAAMC,OAAO,MAAMJ,SAASK,IAAI;gBAEhC,IAAID,KAAKE,OAAO,IAAIF,KAAKG,QAAQ,EAAE;oBAC/B,6CAA6C;oBAC7C,IAAIC,MAAMC,OAAO,CAACL,KAAKG,QAAQ,GAAG;wBAC9B,MAAMG,iBAAiBN,KAAKG,QAAQ,CAACI,IAAI,CAAC,CAACC,UACvCA,QAAQC,GAAG,KAAK;wBAEpBrB,aAAakB,gBAAgBI,UAAU;oBAC3C,OAAO;wBACHtB,aAAaY,KAAKG,QAAQ,CAACO,KAAK,KAAK;oBACzC;gBACJ,OAAO;oBACH,6CAA6C;oBAC7CtB,aAAa;gBACjB;YACJ,EAAE,OAAOuB,OAAO;gBACZC,QAAQD,KAAK,CAAC,qCAAqCA;gBACnD,yCAAyC;gBACzCvB,aAAa;YACjB,SAAU;gBACNG,aAAa;YACjB;QACJ;QAEA,qDAAqD;QACrD,MAAMsB,QAAQC,WAAWnB,qBAAqB;QAC9C,OAAO,IAAMoB,aAAaF;IAC9B,GAAG,EAAE;IAEL,+DAA+D;IAC/D,IAAIvB,aAAa,CAACH,WAAW;QACzB,OAAO;IACX;IAEA,gDAAgD;IAChD,IAAI,CAACK,aAAa;QACd,qBACI,qBAACwB;YACGC,SAAS,IAAMxB,eAAe;YAC9ByB,WAAU;YACVC,cAAW;sBAEX,cAAA,qBAACC,0BAAa;gBAACC,MAAM;;;IAGjC;IAEA,gDAAgD;IAChD,qBACI,qBAAC3C;QAAe4C,SAAS,IAAM7B,eAAe;;AAEtD"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5d5e39211b7740177213151cf8e79f6a10ce3a9a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2brtcdi8wm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2brtcdi8wm();
cov_2brtcdi8wm().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2brtcdi8wm().s[1]++;
Object.defineProperty(exports, "ChatbotWrapper", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2brtcdi8wm().f[0]++;
    cov_2brtcdi8wm().s[2]++;
    return ChatbotWrapper;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2brtcdi8wm().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_2brtcdi8wm().s[4]++, require("react"));
const _dynamic =
/* istanbul ignore next */
(/*#__PURE__*/cov_2brtcdi8wm().s[5]++, _interop_require_default(require("next/dynamic")));
const _lucidereact =
/* istanbul ignore next */
(cov_2brtcdi8wm().s[6]++, require("lucide-react"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2brtcdi8wm().f[1]++;
  cov_2brtcdi8wm().s[7]++;
  return /* istanbul ignore next */(cov_2brtcdi8wm().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2brtcdi8wm().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2brtcdi8wm().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2brtcdi8wm().b[0][1]++, {
    default: obj
  });
}
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2brtcdi8wm().f[2]++;
  cov_2brtcdi8wm().s[8]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2brtcdi8wm().b[2][0]++;
    cov_2brtcdi8wm().s[9]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2brtcdi8wm().b[2][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2brtcdi8wm().s[10]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2brtcdi8wm().s[11]++, new WeakMap());
  /* istanbul ignore next */
  cov_2brtcdi8wm().s[12]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_2brtcdi8wm().f[3]++;
    cov_2brtcdi8wm().s[13]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2brtcdi8wm().b[3][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2brtcdi8wm().b[3][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2brtcdi8wm().f[4]++;
  cov_2brtcdi8wm().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_2brtcdi8wm().b[5][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2brtcdi8wm().b[5][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2brtcdi8wm().b[5][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2brtcdi8wm().b[4][0]++;
    cov_2brtcdi8wm().s[15]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2brtcdi8wm().b[4][1]++;
  }
  cov_2brtcdi8wm().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_2brtcdi8wm().b[7][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2brtcdi8wm().b[7][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2brtcdi8wm().b[7][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2brtcdi8wm().b[6][0]++;
    cov_2brtcdi8wm().s[17]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2brtcdi8wm().b[6][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_2brtcdi8wm().s[18]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_2brtcdi8wm().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_2brtcdi8wm().b[9][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2brtcdi8wm().b[9][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2brtcdi8wm().b[8][0]++;
    cov_2brtcdi8wm().s[20]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2brtcdi8wm().b[8][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_2brtcdi8wm().s[21]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2brtcdi8wm().s[22]++,
  /* istanbul ignore next */
  (cov_2brtcdi8wm().b[10][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2brtcdi8wm().b[10][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_2brtcdi8wm().s[23]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_2brtcdi8wm().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_2brtcdi8wm().b[12][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2brtcdi8wm().b[12][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2brtcdi8wm().b[11][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2brtcdi8wm().s[25]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2brtcdi8wm().b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2brtcdi8wm().b[13][1]++, null));
      /* istanbul ignore next */
      cov_2brtcdi8wm().s[26]++;
      if (
      /* istanbul ignore next */
      (cov_2brtcdi8wm().b[15][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2brtcdi8wm().b[15][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2brtcdi8wm().b[15][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2brtcdi8wm().b[14][0]++;
        cov_2brtcdi8wm().s[27]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2brtcdi8wm().b[14][1]++;
        cov_2brtcdi8wm().s[28]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2brtcdi8wm().b[11][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2brtcdi8wm().s[29]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_2brtcdi8wm().s[30]++;
  if (cache) {
    /* istanbul ignore next */
    cov_2brtcdi8wm().b[16][0]++;
    cov_2brtcdi8wm().s[31]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2brtcdi8wm().b[16][1]++;
  }
  cov_2brtcdi8wm().s[32]++;
  return newObj;
}
// Dynamically import the Chatbot component with client-side only rendering and no preloading
const DynamicChatbot =
/* istanbul ignore next */
(cov_2brtcdi8wm().s[33]++, (0, _dynamic.default)(() => {
  /* istanbul ignore next */
  cov_2brtcdi8wm().f[5]++;
  cov_2brtcdi8wm().s[34]++;
  return Promise.resolve().then(() => {
    /* istanbul ignore next */
    cov_2brtcdi8wm().f[6]++;
    cov_2brtcdi8wm().s[35]++;
    return /*#__PURE__*/_interop_require_wildcard(require("./Chatbot"));
  }).then(mod => {
    /* istanbul ignore next */
    cov_2brtcdi8wm().f[7]++;
    cov_2brtcdi8wm().s[36]++;
    return {
      default: mod.Chatbot
    };
  });
}, {
  loadableGenerated: {
    webpack: () => {
      /* istanbul ignore next */
      cov_2brtcdi8wm().f[8]++;
      cov_2brtcdi8wm().s[37]++;
      return [require.resolveWeak("./Chatbot")];
    }
  },
  ssr: false,
  loading: () => {
    /* istanbul ignore next */
    cov_2brtcdi8wm().f[9]++;
    cov_2brtcdi8wm().s[38]++;
    return null;
  },
  // Setting suspense to true ensures it doesn't preload
  suspense: true
}));
function ChatbotWrapper() {
  /* istanbul ignore next */
  cov_2brtcdi8wm().f[10]++;
  const [isEnabled, setIsEnabled] =
  /* istanbul ignore next */
  (cov_2brtcdi8wm().s[39]++, (0, _react.useState)(null));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_2brtcdi8wm().s[40]++, (0, _react.useState)(true));
  const [showChatbot, setShowChatbot] =
  /* istanbul ignore next */
  (cov_2brtcdi8wm().s[41]++, (0, _react.useState)(false));
  // Check if chatbot is enabled
  /* istanbul ignore next */
  cov_2brtcdi8wm().s[42]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2brtcdi8wm().f[11]++;
    cov_2brtcdi8wm().s[43]++;
    const checkChatbotEnabled = async () => {
      /* istanbul ignore next */
      cov_2brtcdi8wm().f[12]++;
      cov_2brtcdi8wm().s[44]++;
      try {
        /* istanbul ignore next */
        cov_2brtcdi8wm().s[45]++;
        setIsLoading(true);
        // Use a lightweight check for settings initially
        const response =
        /* istanbul ignore next */
        (cov_2brtcdi8wm().s[46]++, await fetch("/api/settings?key=ai_chatbot_enabled", {
          priority: "low",
          cache: "force-cache" // Try using cached results if available
        }));
        const data =
        /* istanbul ignore next */
        (cov_2brtcdi8wm().s[47]++, await response.json());
        /* istanbul ignore next */
        cov_2brtcdi8wm().s[48]++;
        if (
        /* istanbul ignore next */
        (cov_2brtcdi8wm().b[18][0]++, data.success) &&
        /* istanbul ignore next */
        (cov_2brtcdi8wm().b[18][1]++, data.settings)) {
          /* istanbul ignore next */
          cov_2brtcdi8wm().b[17][0]++;
          cov_2brtcdi8wm().s[49]++;
          // Handle both array and single key responses
          if (Array.isArray(data.settings)) {
            /* istanbul ignore next */
            cov_2brtcdi8wm().b[19][0]++;
            const chatbotSetting =
            /* istanbul ignore next */
            (cov_2brtcdi8wm().s[50]++, data.settings.find(setting => {
              /* istanbul ignore next */
              cov_2brtcdi8wm().f[13]++;
              cov_2brtcdi8wm().s[51]++;
              return setting.key === "ai_chatbot_enabled";
            }));
            /* istanbul ignore next */
            cov_2brtcdi8wm().s[52]++;
            setIsEnabled(chatbotSetting?.value === "true");
          } else {
            /* istanbul ignore next */
            cov_2brtcdi8wm().b[19][1]++;
            cov_2brtcdi8wm().s[53]++;
            setIsEnabled(data.settings.value === "true");
          }
        } else {
          /* istanbul ignore next */
          cov_2brtcdi8wm().b[17][1]++;
          cov_2brtcdi8wm().s[54]++;
          // Default to enabled if can't fetch settings
          setIsEnabled(true);
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2brtcdi8wm().s[55]++;
        console.error("Failed to check chatbot settings:", error);
        // Default to enabled if there's an error
        /* istanbul ignore next */
        cov_2brtcdi8wm().s[56]++;
        setIsEnabled(true);
      } finally {
        /* istanbul ignore next */
        cov_2brtcdi8wm().s[57]++;
        setIsLoading(false);
      }
    };
    // Delay the check to prioritize page content loading
    const timer =
    /* istanbul ignore next */
    (cov_2brtcdi8wm().s[58]++, setTimeout(checkChatbotEnabled, 2000));
    /* istanbul ignore next */
    cov_2brtcdi8wm().s[59]++;
    return () => {
      /* istanbul ignore next */
      cov_2brtcdi8wm().f[14]++;
      cov_2brtcdi8wm().s[60]++;
      return clearTimeout(timer);
    };
  }, []);
  // Don't render anything while checking settings or if disabled
  /* istanbul ignore next */
  cov_2brtcdi8wm().s[61]++;
  if (
  /* istanbul ignore next */
  (cov_2brtcdi8wm().b[21][0]++, isLoading) ||
  /* istanbul ignore next */
  (cov_2brtcdi8wm().b[21][1]++, !isEnabled)) {
    /* istanbul ignore next */
    cov_2brtcdi8wm().b[20][0]++;
    cov_2brtcdi8wm().s[62]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2brtcdi8wm().b[20][1]++;
  }
  // Render only the button if chatbot is not open
  cov_2brtcdi8wm().s[63]++;
  if (!showChatbot) {
    /* istanbul ignore next */
    cov_2brtcdi8wm().b[22][0]++;
    cov_2brtcdi8wm().s[64]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
      onClick: () => {
        /* istanbul ignore next */
        cov_2brtcdi8wm().f[15]++;
        cov_2brtcdi8wm().s[65]++;
        return setShowChatbot(true);
      },
      className: "fixed bottom-6 right-6 p-4 bg-primary text-white rounded-full shadow-lg hover:bg-primary-700 transition-colors",
      "aria-label": "Open chatbot",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.MessageSquare, {
        size: 24
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_2brtcdi8wm().b[22][1]++;
  }
  // Only render the full chatbot when it's needed
  cov_2brtcdi8wm().s[66]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(DynamicChatbot, {
    onClose: () => {
      /* istanbul ignore next */
      cov_2brtcdi8wm().f[16]++;
      cov_2brtcdi8wm().s[67]++;
      return setShowChatbot(false);
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,